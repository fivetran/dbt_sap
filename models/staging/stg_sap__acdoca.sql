{{ config(enabled=var('sap_using_acdoca', True)) }}

{% set source_columns = adapter.get_columns_in_relation(ref('stg_sap__acdoca_tmp')) %}

with base as (
    select {{ remove_slashes_from_col_names(source_columns) }}
    from {{ ref('stg_sap__acdoca_tmp') }}
),

fields as (
    select
        {{
            fivetran_utils.fill_staging_columns(
                source_columns=source_columns,
                staging_columns=get_acdoca_columns()
            )
        }}
    from base
),

final as (
    select
        cast(rclnt as {{ dbt.type_string() }}) as rclnt,
        cast(ryear as {{ dbt.type_string() }}) as ryear,
        cast(belnr as {{ dbt.type_string() }}) as belnr,
        cast(rbukrs as {{ dbt.type_string() }}) as rbukrs,
        cast(rldnr as {{ dbt.type_string() }}) as rldnr,
        bttype,
        rmvct,
        rtcur,
        runit,
        awtyp,
        rrcty,
        awsys,
        rcntr,
        prctr,
        rbusa,
        cast(kokrs as {{ dbt.type_string() }}) as kokrs,
        segment,
        scntr,
        pprctr,
        sfarea,
        sbusa,
        rassc,
        psegment,
        tsl,
        drcrk,
        gjahr,
        budat,
        buzei,
        bschl,
        cast(bstat as {{ dbt.type_string() }}) as bstat,
        linetype,
        xsplitmod,
        usnam,
        _dataaging,
        fikrs,
        sfund,
        sgrant_nbr,
        sbudget_pd,
        re_bukrs,
        re_account,
        vname,
        egrup,
        recid,
        cast(mig_source as {{ dbt.type_string() }}) as mig_source,
        docln,
        mig_docln,
        rhcur,
        rfcur,
        cast(rvcur as {{ dbt.type_string() }}) as rvcur,
        fcsl,
        rfccur,
        cast(rkcur as {{ dbt.type_string() }}) as rkcur,
        cast(rocur as {{ dbt.type_string() }}) as rocur,
        cast(objnr as {{ dbt.type_string() }}) as objnr,
        cast(accasty as {{ dbt.type_string() }}) as accasty,
        cast(racct as {{ dbt.type_string() }}) as racct,
        hrkft,
        cast(vrgng as {{ dbt.type_string() }}) as vrgng,
        cast(parobsrc as {{ dbt.type_string() }}) as parobsrc,
        cast(parob1 as {{ dbt.type_string() }}) as parob1,
        cast(paccasty as {{ dbt.type_string() }}) as paccasty,
        uspob,
        co_beknz,
        rwcur,
        cast(co_buzei as {{ dbt.type_string() }}) as co_buzei,
        cast(co_buzei1 as {{ dbt.type_string() }}) as co_buzei1,
        cast(co_buzei2 as {{ dbt.type_string() }}) as co_buzei2,
        cast(co_buzei5 as {{ dbt.type_string() }}) as co_buzei5,
        cast(co_buzei6 as {{ dbt.type_string() }}) as co_buzei6,
        cast(co_buzei7 as {{ dbt.type_string() }}) as co_buzei7,
        cast(poper as {{ dbt.type_string() }}) as poper,
        co_meinh,
        wsl,
        wsl2,
        wsl3,
        cast(co_osl as {{ dbt.type_numeric() }}) as co_osl,
        cast(hsl as {{ dbt.type_numeric() }}) as hsl,
        cast(osl as {{ dbt.type_numeric() }}) as osl,
        cast(vsl as {{ dbt.type_numeric() }}) as vsl,
        cast(bsl as {{ dbt.type_numeric() }}) as bsl,
        cast(csl as {{ dbt.type_numeric() }}) as csl,
        cast(dsl as {{ dbt.type_numeric() }}) as dsl,
        cast(esl as {{ dbt.type_numeric() }}) as esl,
        cast(fsl as {{ dbt.type_numeric() }}) as fsl,
        cast(gsl as {{ dbt.type_numeric() }}) as gsl,
        cast(ksl as {{ dbt.type_numeric() }}) as ksl,
        kfsl,
        kfsl2,
        kfsl3,
        psl,
        psl2,
        psl3,
        pfsl,
        pfsl2,
        pfsl3,
        co_megbtr,
        co_mefbtr,
        msl,
        mfsl,
        muvflg,
        beltp,
        rfarea,
        rfund,
        rgrant_nbr,
        rbudget_pd,
        timestamp,
        cast(logsyso as {{ dbt.type_string() }}) as logsyso,
        _fivetran_deleted,
        _fivetran_synced
    from fields
)

select *
from final
