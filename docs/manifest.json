{"metadata": {"dbt_schema_version": "https://schemas.getdbt.com/dbt/manifest/v12.json", "dbt_version": "1.10.10", "generated_at": "2025-09-02T21:59:06.562636Z", "invocation_id": "147ccbaf-f64f-4773-8463-b083c1d6e263", "invocation_started_at": "2025-09-02T21:58:40.866014+00:00", "env": {}, "project_name": "sap_integration_tests", "project_id": "81ec73d2b3f8975d968e298a6d73c645", "user_id": null, "send_anonymous_usage_stats": false, "adapter_type": "postgres", "quoting": {"database": true, "schema": true, "identifier": true, "column": null}}, "nodes": {"seed.sap_integration_tests.sap_t134_data": {"database": "postgres", "schema": "public", "name": "sap_t134_data", "resource_type": "seed", "package_name": "sap_integration_tests", "path": "sap_t134_data.csv", "original_file_path": "seeds/sap_t134_data.csv", "unique_id": "seed.sap_integration_tests.sap_t134_data", "fqn": ["sap_integration_tests", "sap_t134_data"], "alias": "sap_t134_data", "checksum": {"name": "sha256", "checksum": "bc7dbe7d4602a7a2aeeb4fb73b9a25ab450d6835f6a5624f2ad5ce41e7713def"}, "config": {"enabled": true, "alias": null, "schema": null, "database": null, "tags": [], "meta": {}, "group": null, "materialized": "seed", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [], "pre-hook": [], "quoting": {}, "column_types": {"_fivetran_rowid": "varchar", "_fivetran_synced": "timestamp", "wmakg": "numeric", "mtart": "varchar"}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": false, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "delimiter": ",", "quote_columns": null}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": false, "node_color": null}, "patch_path": null, "build_path": null, "unrendered_config": {"docs": {"show": false}, "column_types": {"wmakg": "numeric", "mtart": "{{ 'string' if target.type in ['bigquery','spark','databricks'] else 'varchar' }}"}}, "created_at": 1756850325.7871976, "relation_name": "\"postgres\".\"public\".\"sap_t134_data\"", "raw_code": "", "doc_blocks": [], "root_path": "/home/runner/work/dbt_sap/dbt_sap/integration_tests", "depends_on": {"macros": []}}, "seed.sap_integration_tests.sap_t134t_data": {"database": "postgres", "schema": "public", "name": "sap_t134t_data", "resource_type": "seed", "package_name": "sap_integration_tests", "path": "sap_t134t_data.csv", "original_file_path": "seeds/sap_t134t_data.csv", "unique_id": "seed.sap_integration_tests.sap_t134t_data", "fqn": ["sap_integration_tests", "sap_t134t_data"], "alias": "sap_t134t_data", "checksum": {"name": "sha256", "checksum": "afad4c54de83b38163c06cd85015194686817bc5bfd33b6a5388f4406689e48f"}, "config": {"enabled": true, "alias": null, "schema": null, "database": null, "tags": [], "meta": {}, "group": null, "materialized": "seed", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [], "pre-hook": [], "quoting": {}, "column_types": {"_fivetran_rowid": "varchar", "_fivetran_synced": "timestamp", "mtart": "varchar", "mttxt": "varchar"}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": false, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "delimiter": ",", "quote_columns": null}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": false, "node_color": null}, "patch_path": null, "build_path": null, "unrendered_config": {"docs": {"show": false}, "column_types": {"mtart": "{{ 'string' if target.type in ['bigquery','spark','databricks'] else 'varchar' }}", "mttxt": "{{ 'string' if target.type in ['bigquery','spark','databricks'] else 'varchar' }}"}}, "created_at": 1756850325.7951987, "relation_name": "\"postgres\".\"public\".\"sap_t134t_data\"", "raw_code": "", "doc_blocks": [], "root_path": "/home/runner/work/dbt_sap/dbt_sap/integration_tests", "depends_on": {"macros": []}}, "seed.sap_integration_tests.sap_kna1_data": {"database": "postgres", "schema": "public", "name": "sap_kna1_data", "resource_type": "seed", "package_name": "sap_integration_tests", "path": "sap_kna1_data.csv", "original_file_path": "seeds/sap_kna1_data.csv", "unique_id": "seed.sap_integration_tests.sap_kna1_data", "fqn": ["sap_integration_tests", "sap_kna1_data"], "alias": "sap_kna1_data", "checksum": {"name": "sha256", "checksum": "88d2f4c29c3bd61f104495eae4b5447ad748bfc04456dcc81fc61cb7a6f408ef"}, "config": {"enabled": true, "alias": null, "schema": null, "database": null, "tags": [], "meta": {}, "group": null, "materialized": "seed", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [], "pre-hook": [], "quoting": {}, "column_types": {"_fivetran_rowid": "varchar", "_fivetran_synced": "timestamp", "adrnr": "varchar", "bbbnr": "varchar", "bbsnr": "varchar", "erdat": "varchar", "hzuor": "varchar", "jmjah": "varchar", "jmzah": "varchar", "legalnat": "varchar", "mandt": "varchar", "pestle": "varchar", "regio": "varchar", "rgdate": "varchar", "rnedate": "varchar", "ric": "varchar", "umjah": "varchar", "updat": "varchar", "uptim": "varchar", "/vso/r_i_no_lyr": "varchar", "/vso/r_uld_side": "varchar", "/vso/r_load_pref": "varchar", "/vso/r_palhgt": "numeric", "umsa1": "numeric", "umsat": "numeric"}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": false, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "delimiter": ",", "quote_columns": true}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": false, "node_color": null}, "patch_path": null, "build_path": null, "unrendered_config": {"docs": {"show": false}, "column_types": {"adrnr": "{{ 'string' if target.type in ['bigquery','spark','databricks'] else 'varchar' }}", "bbbnr": "{{ 'string' if target.type in ['bigquery','spark','databricks'] else 'varchar' }}", "bbsnr": "{{ 'string' if target.type in ['bigquery','spark','databricks'] else 'varchar' }}", "erdat": "{{ 'string' if target.type in ['bigquery','spark','databricks'] else 'varchar' }}", "hzuor": "{{ 'string' if target.type in ['bigquery','spark','databricks'] else 'varchar' }}", "jmjah": "{{ 'string' if target.type in ['bigquery','spark','databricks'] else 'varchar' }}", "jmzah": "{{ 'string' if target.type in ['bigquery','spark','databricks'] else 'varchar' }}", "legalnat": "{{ 'string' if target.type in ['bigquery','spark','databricks'] else 'varchar' }}", "mandt": "{{ 'string' if target.type in ['bigquery','spark','databricks'] else 'varchar' }}", "pestle": "{{ 'string' if target.type in ['bigquery','spark','databricks'] else 'varchar' }}", "regio": "{{ 'string' if target.type in ['bigquery','spark','databricks'] else 'varchar' }}", "rgdate": "{{ 'string' if target.type in ['bigquery','spark','databricks'] else 'varchar' }}", "rnedate": "{{ 'string' if target.type in ['bigquery','spark','databricks'] else 'varchar' }}", "ric": "{{ 'string' if target.type in ['bigquery','spark','databricks'] else 'varchar' }}", "umjah": "{{ 'string' if target.type in ['bigquery','spark','databricks'] else 'varchar' }}", "updat": "{{ 'string' if target.type in ['bigquery','spark','databricks'] else 'varchar' }}", "uptim": "{{ 'string' if target.type in ['bigquery','spark','databricks'] else 'varchar' }}", "/vso/r_i_no_lyr": "{{ 'string' if target.type in ['bigquery','spark','databricks'] else 'varchar' }}", "/vso/r_uld_side": "{{ 'string' if target.type in ['bigquery','spark','databricks'] else 'varchar' }}", "/vso/r_load_pref": "{{ 'string' if target.type in ['bigquery','spark','databricks'] else 'varchar' }}", "/vso/r_palhgt": "numeric", "umsa1": "numeric", "umsat": "numeric"}, "enabled": "{{ false if target.type in ('snowflake', 'bigquery') else true }}", "quote_columns": true}, "created_at": 1756850325.7989876, "relation_name": "\"postgres\".\"public\".\"sap_kna1_data\"", "raw_code": "", "doc_blocks": [], "root_path": "/home/runner/work/dbt_sap/dbt_sap/integration_tests", "depends_on": {"macros": []}}, "seed.sap_integration_tests.sap_dd07l_data": {"database": "postgres", "schema": "public", "name": "sap_dd07l_data", "resource_type": "seed", "package_name": "sap_integration_tests", "path": "sap_dd07l_data.csv", "original_file_path": "seeds/sap_dd07l_data.csv", "unique_id": "seed.sap_integration_tests.sap_dd07l_data", "fqn": ["sap_integration_tests", "sap_dd07l_data"], "alias": "sap_dd07l_data", "checksum": {"name": "sha256", "checksum": "056a6a4496fc5b475d5598a3052721dd7a2c08d82c39b75dc90cb4b8d8e9bfef"}, "config": {"enabled": true, "alias": null, "schema": null, "database": null, "tags": [], "meta": {}, "group": null, "materialized": "seed", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [], "pre-hook": [], "quoting": {}, "column_types": {"_fivetran_rowid": "varchar", "_fivetran_synced": "timestamp", "domname": "varchar", "domvalue_l": "varchar", "as4vers": "varchar"}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": false, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "delimiter": ",", "quote_columns": null}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": false, "node_color": null}, "patch_path": null, "build_path": null, "unrendered_config": {"docs": {"show": false}, "column_types": {"domname": "{{ 'string' if target.type in ['bigquery','spark','databricks'] else 'varchar' }}", "domvalue_l": "{{ 'string' if target.type in ['bigquery','spark','databricks'] else 'varchar' }}", "as4vers": "{{ 'string' if target.type in ['bigquery','spark','databricks'] else 'varchar' }}"}}, "created_at": 1756850325.802919, "relation_name": "\"postgres\".\"public\".\"sap_dd07l_data\"", "raw_code": "", "doc_blocks": [], "root_path": "/home/runner/work/dbt_sap/dbt_sap/integration_tests", "depends_on": {"macros": []}}, "seed.sap_integration_tests.sap_faglflext_data": {"database": "postgres", "schema": "public", "name": "sap_faglflext_data", "resource_type": "seed", "package_name": "sap_integration_tests", "path": "sap_faglflext_data.csv", "original_file_path": "seeds/sap_faglflext_data.csv", "unique_id": "seed.sap_integration_tests.sap_faglflext_data", "fqn": ["sap_integration_tests", "sap_faglflext_data"], "alias": "sap_faglflext_data", "checksum": {"name": "sha256", "checksum": "7d05c10c97fad1e17552dddbd703e822b49a6b226b0b7ab92285aefcaf99a2aa"}, "config": {"enabled": true, "alias": null, "schema": null, "database": null, "tags": [], "meta": {}, "group": null, "materialized": "seed", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [], "pre-hook": [], "quoting": {}, "column_types": {"_fivetran_rowid": "numeric", "_fivetran_synced": "timestamp", "belnr": "varchar", "budat": "varchar", "docln": "varchar", "docnr": "varchar", "hslvt": "numeric", "hsl01": "numeric", "hsl02": "numeric", "hsl03": "numeric", "hsl04": "numeric", "hsl05": "numeric", "hsl06": "numeric", "hsl07": "numeric", "hsl08": "numeric", "hsl09": "numeric", "hsl10": "numeric", "hsl11": "numeric", "hsl12": "numeric", "hsl13": "numeric", "hsl14": "numeric", "hsl15": "numeric", "hsl16": "numeric", "kokrs": "varchar", "kslvt": "numeric", "ksl01": "numeric", "ksl02": "numeric", "ksl03": "numeric", "ksl04": "numeric", "ksl05": "numeric", "ksl06": "numeric", "ksl07": "numeric", "ksl08": "numeric", "ksl09": "numeric", "ksl10": "numeric", "ksl11": "numeric", "ksl12": "numeric", "ksl13": "numeric", "ksl14": "numeric", "ksl15": "numeric", "ksl16": "numeric", "mslvt": "numeric", "msl01": "numeric", "msl02": "numeric", "msl03": "numeric", "msl04": "numeric", "msl05": "numeric", "msl06": "numeric", "msl07": "numeric", "msl08": "numeric", "msl09": "numeric", "msl10": "numeric", "msl11": "numeric", "msl12": "numeric", "msl13": "numeric", "msl14": "numeric", "msl15": "numeric", "msl16": "numeric", "objnr00": "varchar", "objnr01": "varchar", "objnr02": "varchar", "objnr03": "varchar", "objnr04": "varchar", "objnr05": "varchar", "objnr06": "varchar", "objnr07": "varchar", "objnr08": "varchar", "oslvt": "numeric", "osl01": "numeric", "osl02": "numeric", "osl03": "numeric", "osl04": "numeric", "osl05": "numeric", "osl06": "numeric", "osl07": "numeric", "osl08": "numeric", "osl09": "numeric", "osl10": "numeric", "osl11": "numeric", "osl12": "numeric", "osl13": "numeric", "osl14": "numeric", "osl15": "numeric", "osl16": "numeric", "prctr": "varchar", "racct": "varchar", "rbukrs": "varchar", "rbusa": "varchar", "rfarea": "varchar", "rclnt": "varchar", "rcntr": "varchar", "rpmax": "varchar", "rrcty": "varchar", "rvers": "varchar", "ryear": "varchar", "tslvt": "numeric", "tsl01": "numeric", "tsl02": "numeric", "tsl03": "numeric", "tsl04": "numeric", "tsl05": "numeric", "tsl06": "numeric", "tsl07": "numeric", "tsl08": "numeric", "tsl09": "numeric", "tsl10": "numeric", "tsl11": "numeric", "tsl12": "numeric", "tsl13": "numeric", "tsl14": "numeric", "tsl15": "numeric", "tsl16": "numeric", "timestamp": "bigint"}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": false, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "delimiter": ",", "quote_columns": null}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": false, "node_color": null}, "patch_path": null, "build_path": null, "unrendered_config": {"docs": {"show": false}, "column_types": {"belnr": "{{ 'string' if target.type in ['bigquery','spark','databricks'] else 'varchar' }}", "budat": "{{ 'string' if target.type in ['bigquery','spark','databricks'] else 'varchar' }}", "docln": "{{ 'string' if target.type in ['bigquery','spark','databricks'] else 'varchar' }}", "docnr": "{{ 'string' if target.type in ['bigquery','spark','databricks'] else 'varchar' }}", "hslvt": "numeric", "hsl01": "numeric", "hsl02": "numeric", "hsl03": "numeric", "hsl04": "numeric", "hsl05": "numeric", "hsl06": "numeric", "hsl07": "numeric", "hsl08": "numeric", "hsl09": "numeric", "hsl10": "numeric", "hsl11": "numeric", "hsl12": "numeric", "hsl13": "numeric", "hsl14": "numeric", "hsl15": "numeric", "hsl16": "numeric", "kokrs": "{{ 'string' if target.type in ['bigquery','spark','databricks'] else 'varchar' }}", "kslvt": "numeric", "ksl01": "numeric", "ksl02": "numeric", "ksl03": "numeric", "ksl04": "numeric", "ksl05": "numeric", "ksl06": "numeric", "ksl07": "numeric", "ksl08": "numeric", "ksl09": "numeric", "ksl10": "numeric", "ksl11": "numeric", "ksl12": "numeric", "ksl13": "numeric", "ksl14": "numeric", "ksl15": "numeric", "ksl16": "numeric", "mslvt": "numeric", "msl01": "numeric", "msl02": "numeric", "msl03": "numeric", "msl04": "numeric", "msl05": "numeric", "msl06": "numeric", "msl07": "numeric", "msl08": "numeric", "msl09": "numeric", "msl10": "numeric", "msl11": "numeric", "msl12": "numeric", "msl13": "numeric", "msl14": "numeric", "msl15": "numeric", "msl16": "numeric", "objnr00": "{{ 'string' if target.type in ['bigquery','spark','databricks'] else 'varchar' }}", "objnr01": "{{ 'string' if target.type in ['bigquery','spark','databricks'] else 'varchar' }}", "objnr02": "{{ 'string' if target.type in ['bigquery','spark','databricks'] else 'varchar' }}", "objnr03": "{{ 'string' if target.type in ['bigquery','spark','databricks'] else 'varchar' }}", "objnr04": "{{ 'string' if target.type in ['bigquery','spark','databricks'] else 'varchar' }}", "objnr05": "{{ 'string' if target.type in ['bigquery','spark','databricks'] else 'varchar' }}", "objnr06": "{{ 'string' if target.type in ['bigquery','spark','databricks'] else 'varchar' }}", "objnr07": "{{ 'string' if target.type in ['bigquery','spark','databricks'] else 'varchar' }}", "objnr08": "{{ 'string' if target.type in ['bigquery','spark','databricks'] else 'varchar' }}", "oslvt": "numeric", "osl01": "numeric", "osl02": "numeric", "osl03": "numeric", "osl04": "numeric", "osl05": "numeric", "osl06": "numeric", "osl07": "numeric", "osl08": "numeric", "osl09": "numeric", "osl10": "numeric", "osl11": "numeric", "osl12": "numeric", "osl13": "numeric", "osl14": "numeric", "osl15": "numeric", "osl16": "numeric", "prctr": "{{ 'string' if target.type in ['bigquery','spark','databricks'] else 'varchar' }}", "racct": "{{ 'string' if target.type in ['bigquery','spark','databricks'] else 'varchar' }}", "rbukrs": "{{ 'string' if target.type in ['bigquery','spark','databricks'] else 'varchar' }}", "rbusa": "{{ 'string' if target.type in ['bigquery','spark','databricks'] else 'varchar' }}", "rfarea": "{{ 'string' if target.type in ['bigquery','spark','databricks'] else 'varchar' }}", "rclnt": "{{ 'string' if target.type in ['bigquery','spark','databricks'] else 'varchar' }}", "rcntr": "{{ 'string' if target.type in ['bigquery','spark','databricks'] else 'varchar' }}", "rpmax": "{{ 'string' if target.type in ['bigquery','spark','databricks'] else 'varchar' }}", "rrcty": "{{ 'string' if target.type in ['bigquery','spark','databricks'] else 'varchar' }}", "rvers": "{{ 'string' if target.type in ['bigquery','spark','databricks'] else 'varchar' }}", "ryear": "{{ 'string' if target.type in ['bigquery','spark','databricks'] else 'varchar' }}", "tslvt": "numeric", "tsl01": "numeric", "tsl02": "numeric", "tsl03": "numeric", "tsl04": "numeric", "tsl05": "numeric", "tsl06": "numeric", "tsl07": "numeric", "tsl08": "numeric", "tsl09": "numeric", "tsl10": "numeric", "tsl11": "numeric", "tsl12": "numeric", "tsl13": "numeric", "tsl14": "numeric", "tsl15": "numeric", "tsl16": "numeric", "timestamp": "{{ 'int64' if target.type == 'bigquery' else 'bigint' }}", "_fivetran_rowid": "numeric"}}, "created_at": 1756850325.8076034, "relation_name": "\"postgres\".\"public\".\"sap_faglflext_data\"", "raw_code": "", "doc_blocks": [], "root_path": "/home/runner/work/dbt_sap/dbt_sap/integration_tests", "depends_on": {"macros": []}}, "seed.sap_integration_tests.sap_ekpo_data": {"database": "postgres", "schema": "public", "name": "sap_ekpo_data", "resource_type": "seed", "package_name": "sap_integration_tests", "path": "sap_ekpo_data.csv", "original_file_path": "seeds/sap_ekpo_data.csv", "unique_id": "seed.sap_integration_tests.sap_ekpo_data", "fqn": ["sap_integration_tests", "sap_ekpo_data"], "alias": "sap_ekpo_data", "checksum": {"name": "sha256", "checksum": "da79103c19cacf5694707025d936dac27c88b07fdbaed27990710e75cbe70c18"}, "config": {"enabled": true, "alias": null, "schema": null, "database": null, "tags": [], "meta": {}, "group": null, "materialized": "seed", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [], "pre-hook": [], "quoting": {}, "column_types": {"_fivetran_rowid": "numeric", "_fivetran_synced": "timestamp", "abdat": "varchar", "abeln": "varchar", "abelp": "varchar", "abftz": "numeric", "abmng": "numeric", "abskz": "varchar", "abueb": "varchar", "adrn2": "varchar", "adrnr": "varchar", "advcode": "varchar", "aedat": "varchar", "afnam": "varchar", "agdat": "varchar", "agmem": "varchar", "aktnr": "varchar", "anfnr": "varchar", "anfps": "varchar", "anzpu": "numeric", "anzsn": "numeric", "apoms": "varchar", "arsnr": "varchar", "arsps": "varchar", "attyp": "varchar", "aurel": "varchar", "banfn": "varchar", "bednr": "varchar", "berid": "varchar", "blk_reason_id": "varchar", "blk_reason_txt": "varchar", "bnfpo": "varchar", "bonba": "numeric", "bonus": "varchar", "bprme": "varchar", "bpumn": "numeric", "bpumz": "numeric", "brgew": "numeric", "brtwr": "numeric", "bsgru": "varchar", "bstae": "varchar", "bstyp": "varchar", "budget_pd": "varchar", "bukrs": "varchar", "bwtar": "varchar", "bwtty": "varchar", "ccomp": "varchar", "chg_fplnr": "varchar", "chg_srv": "varchar", "cmpl_dlv_itm": "varchar", "cnfm_qty": "numeric", "cons_order": "varchar", "cqu_sar": "numeric", "cuobj": "varchar", "diff_invoice": "varchar", "disub_kunnr": "varchar", "disub_owner": "varchar", "disub_posnr": "varchar", "disub_pspnr": "varchar", "disub_sobkz": "varchar", "disub_vbeln": "varchar", "dpamt": "numeric", "dpdat": "varchar", "dppct": "numeric", "dptyp": "varchar", "drdat": "varchar", "druhr": "varchar", "drunr": "varchar", "ean11": "varchar", "ebeln": "varchar", "ebelp": "varchar", "ebon2": "varchar", "ebon3": "varchar", "ebonf": "varchar", "effwr": "numeric", "eglkz": "varchar", "ehtyp": "varchar", "eildt": "varchar", "ekkol": "varchar", "elikz": "varchar", "ematn": "varchar", "emlif": "varchar", "emnfr": "varchar", "empst": "varchar", "erekz": "varchar", "etdrk": "varchar", "etfz1": "numeric", "etfz2": "numeric", "evers": "varchar", "excpe": "varchar", "exlin": "varchar", "exsnr": "varchar", "ext_rfx_item": "varchar", "ext_rfx_number": "varchar", "ext_rfx_system": "varchar", "fabkz": "varchar", "ffzhi": "numeric", "fipos": "varchar", "fiscal_incentive": "varchar", "fiscal_incentive_id": "varchar", "fistl": "varchar", "fixmg": "varchar", "fkber": "varchar", "fls_rsto": "varchar", "fmfgus_key": "varchar", "fplnr": "varchar", "fsh_atp_date": "varchar", "fsh_collection": "varchar", "fsh_grid_cond_rec": "varchar", "fsh_item": "varchar", "fsh_item_group": "varchar", "fsh_psm_pfm_split": "varchar", "fsh_season": "varchar", "fsh_season_year": "varchar", "fsh_ss": "varchar", "fsh_theme": "varchar", "fsh_transaction": "varchar", "fsh_vas_prnt_id": "varchar", "fsh_vas_rel": "varchar", "geber": "varchar", "gewei": "varchar", "gnetwr": "numeric", "grant_nbr": "varchar", "handoverloc": "varchar", "hvr_change_time": "varchar", "hvr_is_deleted": "numeric", "idnlf": "varchar", "inco1": "varchar", "inco2": "varchar", "inco2_l": "varchar", "inco3_l": "varchar", "infnr": "varchar", "insmk": "varchar", "insnc": "varchar", "iprkz": "varchar", "itcons": "varchar", "iuid_relevant": "varchar", "j_1aidatep": "varchar", "j_1aindxp": "varchar", "j_1bindust": "varchar", "j_1bmatorg": "varchar", "j_1bmatuse": "varchar", "j_1bnbm": "varchar", "j_1bownpro": "varchar", "kanba": "varchar", "kblnr": "varchar", "kblpos": "varchar", "knttp": "varchar", "ko_gsber": "varchar", "ko_pargb": "varchar", "ko_pprctr": "varchar", "ko_prctr": "varchar", "kolif": "varchar", "konnr": "varchar", "ktmng": "numeric", "ktpnr": "varchar", "kunnr": "varchar", "kzabs": "varchar", "kzbws": "varchar", "kzfme": "varchar", "kzkfg": "varchar", "kzstu": "varchar", "kztlf": "varchar", "kzvbr": "varchar", "kzwi1": "numeric", "kzwi2": "numeric", "kzwi3": "numeric", "kzwi4": "numeric", "kzwi5": "numeric", "kzwi6": "numeric", "labnr": "varchar", "lblkz": "varchar", "lebre": "varchar", "lewed": "varchar", "lfret": "varchar", "lgort": "varchar", "lmein": "varchar", "loekz": "varchar", "ltsnr": "varchar", "mahn1": "numeric", "mahn2": "numeric", "mahn3": "numeric", "mahnz": "numeric", "mandt": "varchar", "manual_tc_reason": "varchar", "matkl": "varchar", "matnr": "varchar", "meins": "varchar", "menge": "numeric", "meprf": "varchar", "mfrgr": "varchar", "mfrnr": "varchar", "mfrpn": "varchar", "mfzhi": "numeric", "mhdrz": "numeric", "mlmaa": "varchar", "mprof": "varchar", "mrpind": "varchar", "mtart": "varchar", "mwskz": "varchar", "navnw": "numeric", "netpr": "numeric", "netwr": "numeric", "nfabd": "varchar", "nlabd": "varchar", "notkz": "varchar", "novet": "varchar", "nrfhg": "varchar", "ntgew": "numeric", "oia_baselo": "varchar", "oia_ipmvat": "varchar", "oia_spltiv": "varchar", "oibasprod": "varchar", "oic_adestn": "varchar", "oic_aorgin": "varchar", "oic_dcityc": "varchar", "oic_dcounc": "varchar", "oic_dland1": "varchar", "oic_dregio": "varchar", "oic_lifnr": "varchar", "oic_mot": "varchar", "oic_ocityc": "varchar", "oic_ocounc": "varchar", "oic_oland1": "varchar", "oic_oregio": "varchar", "oic_pbatch": "varchar", "oic_pdestn": "varchar", "oic_porgin": "varchar", "oic_ptrip": "varchar", "oic_truckn": "varchar", "oicertf1": "varchar", "oicertf1_gi": "varchar", "oid_extbol": "varchar", "oid_miscdl": "varchar", "oidatfm1": "varchar", "oidatfm1_gi": "varchar", "oidatto1": "varchar", "oidatto1_gi": "varchar", "oiedbal": "varchar", "oiedbal_gi": "varchar", "oiedbalm": "varchar", "oiedbalm_gi": "varchar", "oiedok": "varchar", "oiedok_gi": "varchar", "oiexgnum": "varchar", "oiexgtyp": "varchar", "oiextnr": "varchar", "oifeech": "varchar", "oifeedt": "varchar", "oifeetot": "numeric", "oiferp": "varchar", "oiftind": "varchar", "oighndl": "varchar", "oih_folqty": "numeric", "oih_folqty_gi": "numeric", "oih_lcfol": "varchar", "oih_lcfol_gi": "varchar", "oih_licin": "varchar", "oih_licin_gi": "varchar", "oih_lictp": "varchar", "oih_lictp_gi": "varchar", "oihantyp": "varchar", "oihantyp_gi": "varchar", "oiinex": "varchar", "oiinex_gi": "varchar", "oiitmnr": "varchar", "oimatcyc": "varchar", "oinetcyc": "varchar", "oioilcon": "varchar", "oipipeval": "varchar", "oipricie": "varchar", "oipriop": "varchar", "oisbrel": "varchar", "oitaxcon": "numeric", "oitaxfrom": "varchar", "oitaxgrp": "varchar", "oitaxgrp_gi": "varchar", "oitaxto": "varchar", "oitrind": "varchar", "oitrkjr": "varchar", "oitrknr": "varchar", "oitxcon1": "numeric", "oitxcon2": "numeric", "oitxcon3": "numeric", "oitxcon4": "numeric", "oitxcon5": "numeric", "oitxcon6": "numeric", "oiumbar": "varchar", "oivatf": "numeric", "oivath": "numeric", "packno": "varchar", "peinh": "numeric", "plifz": "numeric", "pol_id": "varchar", "prdat": "varchar", "prio_req": "varchar", "prio_urg": "varchar", "prsdr": "varchar", "pstyp": "varchar", "punei": "varchar", "put_back": "varchar", "rdprf": "varchar", "reason_code": "varchar", "ref_item": "varchar", "refsite": "varchar", "repos": "varchar", "reslo": "varchar", "retpc": "numeric", "retpo": "varchar", "revlv": "varchar", "saisj": "varchar", "saiso": "varchar", "satnr": "varchar", "schpr": "varchar", "sernp": "varchar", "serru": "varchar", "sf_txjcd": "varchar", "sgt_rcat": "varchar", "sgt_scat": "varchar", "sikgr": "varchar", "sktof": "varchar", "sobkz": "varchar", "source_id": "varchar", "source_key": "varchar", "spe_abgru": "varchar", "spe_chng_sys": "varchar", "spe_cq_ctrltype": "varchar", "spe_cq_nocq": "varchar", "spe_crm_fkrel": "varchar", "spe_crm_ref_item": "varchar", "spe_crm_ref_so": "varchar", "spe_crm_so": "varchar", "spe_crm_so_item": "varchar", "spe_ewm_dtc": "varchar", "spe_insmk_src": "varchar", "spinf": "varchar", "srm_contract_id": "varchar", "srm_contract_itm": "varchar", "srv_bas_com": "varchar", "ssqss": "varchar", "stafo": "varchar", "stapo": "varchar", "statu": "varchar", "status": "varchar", "tax_subject_st": "varchar", "tc_aut_det": "varchar", "techs": "varchar", "trmrisk_relevant": "varchar", "twrkz": "varchar", "txjcd": "varchar", "txz01": "varchar", "tzonrc": "varchar", "uebpo": "varchar", "uebtk": "varchar", "uebto": "numeric", "umren": "numeric", "umrez": "numeric", "umsok": "varchar", "untto": "numeric", "uptyp": "varchar", "upvor": "varchar", "usequ": "varchar", "voleh": "varchar", "volum": "numeric", "vorab": "varchar", "vrtkz": "varchar", "vsart": "varchar", "wabwe": "varchar", "webaz": "numeric", "webre": "varchar", "weora": "varchar", "wepos": "varchar", "werks": "varchar", "weunb": "varchar", "wrf_charstc1": "varchar", "wrf_charstc2": "varchar", "wrf_charstc3": "varchar", "xconditions": "varchar", "xersy": "varchar", "xoblr": "varchar", "zgtyp": "varchar", "zwert": "numeric", "_fivetran_sap_archived": "varchar", "_accgo_is_co_rel": "varchar", "_bev1_nedepfree": "varchar", "_bev1_negen_item": "varchar", "_bev1_nestruccat": "varchar"}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": false, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "delimiter": ",", "quote_columns": null}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": false, "node_color": null}, "patch_path": null, "build_path": null, "unrendered_config": {"docs": {"show": false}, "column_types": {"abdat": "{{ 'string' if target.type in ['bigquery','spark','databricks'] else 'varchar' }}", "abeln": "{{ 'string' if target.type in ['bigquery','spark','databricks'] else 'varchar' }}", "abelp": "{{ 'string' if target.type in ['bigquery','spark','databricks'] else 'varchar' }}", "abftz": "numeric", "abmng": "numeric", "abskz": "{{ 'string' if target.type in ['bigquery','spark','databricks'] else 'varchar' }}", "abueb": "{{ 'string' if target.type in ['bigquery','spark','databricks'] else 'varchar' }}", "adrn2": "{{ 'string' if target.type in ['bigquery','spark','databricks'] else 'varchar' }}", "adrnr": "{{ 'string' if target.type in ['bigquery','spark','databricks'] else 'varchar' }}", "advcode": "{{ 'string' if target.type in ['bigquery','spark','databricks'] else 'varchar' }}", "aedat": "{{ 'string' if target.type in ['bigquery','spark','databricks'] else 'varchar' }}", "afnam": "{{ 'string' if target.type in ['bigquery','spark','databricks'] else 'varchar' }}", "agdat": "{{ 'string' if target.type in ['bigquery','spark','databricks'] else 'varchar' }}", "agmem": "{{ 'string' if target.type in ['bigquery','spark','databricks'] else 'varchar' }}", "aktnr": "{{ 'string' if target.type in ['bigquery','spark','databricks'] else 'varchar' }}", "anfnr": "{{ 'string' if target.type in ['bigquery','spark','databricks'] else 'varchar' }}", "anfps": "{{ 'string' if target.type in ['bigquery','spark','databricks'] else 'varchar' }}", "anzpu": "numeric", "anzsn": "numeric", "apoms": "{{ 'string' if target.type in ['bigquery','spark','databricks'] else 'varchar' }}", "arsnr": "{{ 'string' if target.type in ['bigquery','spark','databricks'] else 'varchar' }}", "arsps": "{{ 'string' if target.type in ['bigquery','spark','databricks'] else 'varchar' }}", "attyp": "{{ 'string' if target.type in ['bigquery','spark','databricks'] else 'varchar' }}", "aurel": "{{ 'string' if target.type in ['bigquery','spark','databricks'] else 'varchar' }}", "banfn": "{{ 'string' if target.type in ['bigquery','spark','databricks'] else 'varchar' }}", "bednr": "{{ 'string' if target.type in ['bigquery','spark','databricks'] else 'varchar' }}", "berid": "{{ 'string' if target.type in ['bigquery','spark','databricks'] else 'varchar' }}", "blk_reason_id": "{{ 'string' if target.type in ['bigquery','spark','databricks'] else 'varchar' }}", "blk_reason_txt": "{{ 'string' if target.type in ['bigquery','spark','databricks'] else 'varchar' }}", "bnfpo": "{{ 'string' if target.type in ['bigquery','spark','databricks'] else 'varchar' }}", "bonba": "numeric", "bonus": "{{ 'string' if target.type in ['bigquery','spark','databricks'] else 'varchar' }}", "bprme": "{{ 'string' if target.type in ['bigquery','spark','databricks'] else 'varchar' }}", "bpumn": "numeric", "bpumz": "numeric", "brgew": "numeric", "brtwr": "numeric", "bsgru": "{{ 'string' if target.type in ['bigquery','spark','databricks'] else 'varchar' }}", "bstae": "{{ 'string' if target.type in ['bigquery','spark','databricks'] else 'varchar' }}", "bstyp": "{{ 'string' if target.type in ['bigquery','spark','databricks'] else 'varchar' }}", "budget_pd": "{{ 'string' if target.type in ['bigquery','spark','databricks'] else 'varchar' }}", "bukrs": "{{ 'string' if target.type in ['bigquery','spark','databricks'] else 'varchar' }}", "bwtar": "{{ 'string' if target.type in ['bigquery','spark','databricks'] else 'varchar' }}", "bwtty": "{{ 'string' if target.type in ['bigquery','spark','databricks'] else 'varchar' }}", "ccomp": "{{ 'string' if target.type in ['bigquery','spark','databricks'] else 'varchar' }}", "chg_fplnr": "{{ 'string' if target.type in ['bigquery','spark','databricks'] else 'varchar' }}", "chg_srv": "{{ 'string' if target.type in ['bigquery','spark','databricks'] else 'varchar' }}", "cmpl_dlv_itm": "{{ 'string' if target.type in ['bigquery','spark','databricks'] else 'varchar' }}", "cnfm_qty": "numeric", "cons_order": "{{ 'string' if target.type in ['bigquery','spark','databricks'] else 'varchar' }}", "cqu_sar": "numeric", "cuobj": "{{ 'string' if target.type in ['bigquery','spark','databricks'] else 'varchar' }}", "diff_invoice": "{{ 'string' if target.type in ['bigquery','spark','databricks'] else 'varchar' }}", "disub_kunnr": "{{ 'string' if target.type in ['bigquery','spark','databricks'] else 'varchar' }}", "disub_owner": "{{ 'string' if target.type in ['bigquery','spark','databricks'] else 'varchar' }}", "disub_posnr": "{{ 'string' if target.type in ['bigquery','spark','databricks'] else 'varchar' }}", "disub_pspnr": "{{ 'string' if target.type in ['bigquery','spark','databricks'] else 'varchar' }}", "disub_sobkz": "{{ 'string' if target.type in ['bigquery','spark','databricks'] else 'varchar' }}", "disub_vbeln": "{{ 'string' if target.type in ['bigquery','spark','databricks'] else 'varchar' }}", "dpamt": "numeric", "dpdat": "{{ 'string' if target.type in ['bigquery','spark','databricks'] else 'varchar' }}", "dppct": "numeric", "dptyp": "{{ 'string' if target.type in ['bigquery','spark','databricks'] else 'varchar' }}", "drdat": "{{ 'string' if target.type in ['bigquery','spark','databricks'] else 'varchar' }}", "druhr": "{{ 'string' if target.type in ['bigquery','spark','databricks'] else 'varchar' }}", "drunr": "{{ 'string' if target.type in ['bigquery','spark','databricks'] else 'varchar' }}", "ean11": "{{ 'string' if target.type in ['bigquery','spark','databricks'] else 'varchar' }}", "ebeln": "{{ 'string' if target.type in ['bigquery','spark','databricks'] else 'varchar' }}", "ebelp": "{{ 'string' if target.type in ['bigquery','spark','databricks'] else 'varchar' }}", "ebon2": "{{ 'string' if target.type in ['bigquery','spark','databricks'] else 'varchar' }}", "ebon3": "{{ 'string' if target.type in ['bigquery','spark','databricks'] else 'varchar' }}", "ebonf": "{{ 'string' if target.type in ['bigquery','spark','databricks'] else 'varchar' }}", "effwr": "numeric", "eglkz": "{{ 'string' if target.type in ['bigquery','spark','databricks'] else 'varchar' }}", "ehtyp": "{{ 'string' if target.type in ['bigquery','spark','databricks'] else 'varchar' }}", "eildt": "{{ 'string' if target.type in ['bigquery','spark','databricks'] else 'varchar' }}", "ekkol": "{{ 'string' if target.type in ['bigquery','spark','databricks'] else 'varchar' }}", "elikz": "{{ 'string' if target.type in ['bigquery','spark','databricks'] else 'varchar' }}", "ematn": "{{ 'string' if target.type in ['bigquery','spark','databricks'] else 'varchar' }}", "emlif": "{{ 'string' if target.type in ['bigquery','spark','databricks'] else 'varchar' }}", "emnfr": "{{ 'string' if target.type in ['bigquery','spark','databricks'] else 'varchar' }}", "empst": "{{ 'string' if target.type in ['bigquery','spark','databricks'] else 'varchar' }}", "erekz": "{{ 'string' if target.type in ['bigquery','spark','databricks'] else 'varchar' }}", "etdrk": "{{ 'string' if target.type in ['bigquery','spark','databricks'] else 'varchar' }}", "etfz1": "numeric", "etfz2": "numeric", "evers": "{{ 'string' if target.type in ['bigquery','spark','databricks'] else 'varchar' }}", "excpe": "{{ 'string' if target.type in ['bigquery','spark','databricks'] else 'varchar' }}", "exlin": "{{ 'string' if target.type in ['bigquery','spark','databricks'] else 'varchar' }}", "exsnr": "{{ 'string' if target.type in ['bigquery','spark','databricks'] else 'varchar' }}", "ext_rfx_item": "{{ 'string' if target.type in ['bigquery','spark','databricks'] else 'varchar' }}", "ext_rfx_number": "{{ 'string' if target.type in ['bigquery','spark','databricks'] else 'varchar' }}", "ext_rfx_system": "{{ 'string' if target.type in ['bigquery','spark','databricks'] else 'varchar' }}", "fabkz": "{{ 'string' if target.type in ['bigquery','spark','databricks'] else 'varchar' }}", "ffzhi": "numeric", "fipos": "{{ 'string' if target.type in ['bigquery','spark','databricks'] else 'varchar' }}", "fiscal_incentive": "{{ 'string' if target.type in ['bigquery','spark','databricks'] else 'varchar' }}", "fiscal_incentive_id": "{{ 'string' if target.type in ['bigquery','spark','databricks'] else 'varchar' }}", "fistl": "{{ 'string' if target.type in ['bigquery','spark','databricks'] else 'varchar' }}", "fixmg": "{{ 'string' if target.type in ['bigquery','spark','databricks'] else 'varchar' }}", "fkber": "{{ 'string' if target.type in ['bigquery','spark','databricks'] else 'varchar' }}", "fls_rsto": "{{ 'string' if target.type in ['bigquery','spark','databricks'] else 'varchar' }}", "fmfgus_key": "{{ 'string' if target.type in ['bigquery','spark','databricks'] else 'varchar' }}", "fplnr": "{{ 'string' if target.type in ['bigquery','spark','databricks'] else 'varchar' }}", "fsh_atp_date": "{{ 'string' if target.type in ['bigquery','spark','databricks'] else 'varchar' }}", "fsh_collection": "{{ 'string' if target.type in ['bigquery','spark','databricks'] else 'varchar' }}", "fsh_grid_cond_rec": "{{ 'string' if target.type in ['bigquery','spark','databricks'] else 'varchar' }}", "fsh_item": "{{ 'string' if target.type in ['bigquery','spark','databricks'] else 'varchar' }}", "fsh_item_group": "{{ 'string' if target.type in ['bigquery','spark','databricks'] else 'varchar' }}", "fsh_psm_pfm_split": "{{ 'string' if target.type in ['bigquery','spark','databricks'] else 'varchar' }}", "fsh_season": "{{ 'string' if target.type in ['bigquery','spark','databricks'] else 'varchar' }}", "fsh_season_year": "{{ 'string' if target.type in ['bigquery','spark','databricks'] else 'varchar' }}", "fsh_ss": "{{ 'string' if target.type in ['bigquery','spark','databricks'] else 'varchar' }}", "fsh_theme": "{{ 'string' if target.type in ['bigquery','spark','databricks'] else 'varchar' }}", "fsh_transaction": "{{ 'string' if target.type in ['bigquery','spark','databricks'] else 'varchar' }}", "fsh_vas_prnt_id": "{{ 'string' if target.type in ['bigquery','spark','databricks'] else 'varchar' }}", "fsh_vas_rel": "{{ 'string' if target.type in ['bigquery','spark','databricks'] else 'varchar' }}", "geber": "{{ 'string' if target.type in ['bigquery','spark','databricks'] else 'varchar' }}", "gewei": "{{ 'string' if target.type in ['bigquery','spark','databricks'] else 'varchar' }}", "gnetwr": "numeric", "grant_nbr": "{{ 'string' if target.type in ['bigquery','spark','databricks'] else 'varchar' }}", "handoverloc": "{{ 'string' if target.type in ['bigquery','spark','databricks'] else 'varchar' }}", "hvr_change_time": "{{ 'string' if target.type in ['bigquery','spark','databricks'] else 'varchar' }}", "hvr_is_deleted": "numeric", "idnlf": "{{ 'string' if target.type in ['bigquery','spark','databricks'] else 'varchar' }}", "inco1": "{{ 'string' if target.type in ['bigquery','spark','databricks'] else 'varchar' }}", "inco2": "{{ 'string' if target.type in ['bigquery','spark','databricks'] else 'varchar' }}", "inco2_l": "{{ 'string' if target.type in ['bigquery','spark','databricks'] else 'varchar' }}", "inco3_l": "{{ 'string' if target.type in ['bigquery','spark','databricks'] else 'varchar' }}", "infnr": "{{ 'string' if target.type in ['bigquery','spark','databricks'] else 'varchar' }}", "insmk": "{{ 'string' if target.type in ['bigquery','spark','databricks'] else 'varchar' }}", "insnc": "{{ 'string' if target.type in ['bigquery','spark','databricks'] else 'varchar' }}", "iprkz": "{{ 'string' if target.type in ['bigquery','spark','databricks'] else 'varchar' }}", "itcons": "{{ 'string' if target.type in ['bigquery','spark','databricks'] else 'varchar' }}", "iuid_relevant": "{{ 'string' if target.type in ['bigquery','spark','databricks'] else 'varchar' }}", "j_1aidatep": "{{ 'string' if target.type in ['bigquery','spark','databricks'] else 'varchar' }}", "j_1aindxp": "{{ 'string' if target.type in ['bigquery','spark','databricks'] else 'varchar' }}", "j_1bindust": "{{ 'string' if target.type in ['bigquery','spark','databricks'] else 'varchar' }}", "j_1bmatorg": "{{ 'string' if target.type in ['bigquery','spark','databricks'] else 'varchar' }}", "j_1bmatuse": "{{ 'string' if target.type in ['bigquery','spark','databricks'] else 'varchar' }}", "j_1bnbm": "{{ 'string' if target.type in ['bigquery','spark','databricks'] else 'varchar' }}", "j_1bownpro": "{{ 'string' if target.type in ['bigquery','spark','databricks'] else 'varchar' }}", "kanba": "{{ 'string' if target.type in ['bigquery','spark','databricks'] else 'varchar' }}", "kblnr": "{{ 'string' if target.type in ['bigquery','spark','databricks'] else 'varchar' }}", "kblpos": "{{ 'string' if target.type in ['bigquery','spark','databricks'] else 'varchar' }}", "knttp": "{{ 'string' if target.type in ['bigquery','spark','databricks'] else 'varchar' }}", "ko_gsber": "{{ 'string' if target.type in ['bigquery','spark','databricks'] else 'varchar' }}", "ko_pargb": "{{ 'string' if target.type in ['bigquery','spark','databricks'] else 'varchar' }}", "ko_pprctr": "{{ 'string' if target.type in ['bigquery','spark','databricks'] else 'varchar' }}", "ko_prctr": "{{ 'string' if target.type in ['bigquery','spark','databricks'] else 'varchar' }}", "kolif": "{{ 'string' if target.type in ['bigquery','spark','databricks'] else 'varchar' }}", "konnr": "{{ 'string' if target.type in ['bigquery','spark','databricks'] else 'varchar' }}", "ktmng": "numeric", "ktpnr": "{{ 'string' if target.type in ['bigquery','spark','databricks'] else 'varchar' }}", "kunnr": "{{ 'string' if target.type in ['bigquery','spark','databricks'] else 'varchar' }}", "kzabs": "{{ 'string' if target.type in ['bigquery','spark','databricks'] else 'varchar' }}", "kzbws": "{{ 'string' if target.type in ['bigquery','spark','databricks'] else 'varchar' }}", "kzfme": "{{ 'string' if target.type in ['bigquery','spark','databricks'] else 'varchar' }}", "kzkfg": "{{ 'string' if target.type in ['bigquery','spark','databricks'] else 'varchar' }}", "kzstu": "{{ 'string' if target.type in ['bigquery','spark','databricks'] else 'varchar' }}", "kztlf": "{{ 'string' if target.type in ['bigquery','spark','databricks'] else 'varchar' }}", "kzvbr": "{{ 'string' if target.type in ['bigquery','spark','databricks'] else 'varchar' }}", "kzwi1": "numeric", "kzwi2": "numeric", "kzwi3": "numeric", "kzwi4": "numeric", "kzwi5": "numeric", "kzwi6": "numeric", "labnr": "{{ 'string' if target.type in ['bigquery','spark','databricks'] else 'varchar' }}", "lblkz": "{{ 'string' if target.type in ['bigquery','spark','databricks'] else 'varchar' }}", "lebre": "{{ 'string' if target.type in ['bigquery','spark','databricks'] else 'varchar' }}", "lewed": "{{ 'string' if target.type in ['bigquery','spark','databricks'] else 'varchar' }}", "lfret": "{{ 'string' if target.type in ['bigquery','spark','databricks'] else 'varchar' }}", "lgort": "{{ 'string' if target.type in ['bigquery','spark','databricks'] else 'varchar' }}", "lmein": "{{ 'string' if target.type in ['bigquery','spark','databricks'] else 'varchar' }}", "loekz": "{{ 'string' if target.type in ['bigquery','spark','databricks'] else 'varchar' }}", "ltsnr": "{{ 'string' if target.type in ['bigquery','spark','databricks'] else 'varchar' }}", "mahn1": "numeric", "mahn2": "numeric", "mahn3": "numeric", "mahnz": "numeric", "mandt": "{{ 'string' if target.type in ['bigquery','spark','databricks'] else 'varchar' }}", "manual_tc_reason": "{{ 'string' if target.type in ['bigquery','spark','databricks'] else 'varchar' }}", "matkl": "{{ 'string' if target.type in ['bigquery','spark','databricks'] else 'varchar' }}", "matnr": "{{ 'string' if target.type in ['bigquery','spark','databricks'] else 'varchar' }}", "meins": "{{ 'string' if target.type in ['bigquery','spark','databricks'] else 'varchar' }}", "menge": "numeric", "meprf": "{{ 'string' if target.type in ['bigquery','spark','databricks'] else 'varchar' }}", "mfrgr": "{{ 'string' if target.type in ['bigquery','spark','databricks'] else 'varchar' }}", "mfrnr": "{{ 'string' if target.type in ['bigquery','spark','databricks'] else 'varchar' }}", "mfrpn": "{{ 'string' if target.type in ['bigquery','spark','databricks'] else 'varchar' }}", "mfzhi": "numeric", "mhdrz": "numeric", "mlmaa": "{{ 'string' if target.type in ['bigquery','spark','databricks'] else 'varchar' }}", "mprof": "{{ 'string' if target.type in ['bigquery','spark','databricks'] else 'varchar' }}", "mrpind": "{{ 'string' if target.type in ['bigquery','spark','databricks'] else 'varchar' }}", "mtart": "{{ 'string' if target.type in ['bigquery','spark','databricks'] else 'varchar' }}", "mwskz": "{{ 'string' if target.type in ['bigquery','spark','databricks'] else 'varchar' }}", "navnw": "numeric", "netpr": "numeric", "netwr": "numeric", "nfabd": "{{ 'string' if target.type in ['bigquery','spark','databricks'] else 'varchar' }}", "nlabd": "{{ 'string' if target.type in ['bigquery','spark','databricks'] else 'varchar' }}", "notkz": "{{ 'string' if target.type in ['bigquery','spark','databricks'] else 'varchar' }}", "novet": "{{ 'string' if target.type in ['bigquery','spark','databricks'] else 'varchar' }}", "nrfhg": "{{ 'string' if target.type in ['bigquery','spark','databricks'] else 'varchar' }}", "ntgew": "numeric", "oia_baselo": "{{ 'string' if target.type in ['bigquery','spark','databricks'] else 'varchar' }}", "oia_ipmvat": "{{ 'string' if target.type in ['bigquery','spark','databricks'] else 'varchar' }}", "oia_spltiv": "{{ 'string' if target.type in ['bigquery','spark','databricks'] else 'varchar' }}", "oibasprod": "{{ 'string' if target.type in ['bigquery','spark','databricks'] else 'varchar' }}", "oic_adestn": "{{ 'string' if target.type in ['bigquery','spark','databricks'] else 'varchar' }}", "oic_aorgin": "{{ 'string' if target.type in ['bigquery','spark','databricks'] else 'varchar' }}", "oic_dcityc": "{{ 'string' if target.type in ['bigquery','spark','databricks'] else 'varchar' }}", "oic_dcounc": "{{ 'string' if target.type in ['bigquery','spark','databricks'] else 'varchar' }}", "oic_dland1": "{{ 'string' if target.type in ['bigquery','spark','databricks'] else 'varchar' }}", "oic_dregio": "{{ 'string' if target.type in ['bigquery','spark','databricks'] else 'varchar' }}", "oic_lifnr": "{{ 'string' if target.type in ['bigquery','spark','databricks'] else 'varchar' }}", "oic_mot": "{{ 'string' if target.type in ['bigquery','spark','databricks'] else 'varchar' }}", "oic_ocityc": "{{ 'string' if target.type in ['bigquery','spark','databricks'] else 'varchar' }}", "oic_ocounc": "{{ 'string' if target.type in ['bigquery','spark','databricks'] else 'varchar' }}", "oic_oland1": "{{ 'string' if target.type in ['bigquery','spark','databricks'] else 'varchar' }}", "oic_oregio": "{{ 'string' if target.type in ['bigquery','spark','databricks'] else 'varchar' }}", "oic_pbatch": "{{ 'string' if target.type in ['bigquery','spark','databricks'] else 'varchar' }}", "oic_pdestn": "{{ 'string' if target.type in ['bigquery','spark','databricks'] else 'varchar' }}", "oic_porgin": "{{ 'string' if target.type in ['bigquery','spark','databricks'] else 'varchar' }}", "oic_ptrip": "{{ 'string' if target.type in ['bigquery','spark','databricks'] else 'varchar' }}", "oic_truckn": "{{ 'string' if target.type in ['bigquery','spark','databricks'] else 'varchar' }}", "oicertf1": "{{ 'string' if target.type in ['bigquery','spark','databricks'] else 'varchar' }}", "oicertf1_gi": "{{ 'string' if target.type in ['bigquery','spark','databricks'] else 'varchar' }}", "oid_extbol": "{{ 'string' if target.type in ['bigquery','spark','databricks'] else 'varchar' }}", "oid_miscdl": "{{ 'string' if target.type in ['bigquery','spark','databricks'] else 'varchar' }}", "oidatfm1": "{{ 'string' if target.type in ['bigquery','spark','databricks'] else 'varchar' }}", "oidatfm1_gi": "{{ 'string' if target.type in ['bigquery','spark','databricks'] else 'varchar' }}", "oidatto1": "{{ 'string' if target.type in ['bigquery','spark','databricks'] else 'varchar' }}", "oidatto1_gi": "{{ 'string' if target.type in ['bigquery','spark','databricks'] else 'varchar' }}", "oiedbal": "{{ 'string' if target.type in ['bigquery','spark','databricks'] else 'varchar' }}", "oiedbal_gi": "{{ 'string' if target.type in ['bigquery','spark','databricks'] else 'varchar' }}", "oiedbalm": "{{ 'string' if target.type in ['bigquery','spark','databricks'] else 'varchar' }}", "oiedbalm_gi": "{{ 'string' if target.type in ['bigquery','spark','databricks'] else 'varchar' }}", "oiedok": "{{ 'string' if target.type in ['bigquery','spark','databricks'] else 'varchar' }}", "oiedok_gi": "{{ 'string' if target.type in ['bigquery','spark','databricks'] else 'varchar' }}", "oiexgnum": "{{ 'string' if target.type in ['bigquery','spark','databricks'] else 'varchar' }}", "oiexgtyp": "{{ 'string' if target.type in ['bigquery','spark','databricks'] else 'varchar' }}", "oiextnr": "{{ 'string' if target.type in ['bigquery','spark','databricks'] else 'varchar' }}", "oifeech": "{{ 'string' if target.type in ['bigquery','spark','databricks'] else 'varchar' }}", "oifeedt": "{{ 'string' if target.type in ['bigquery','spark','databricks'] else 'varchar' }}", "oifeetot": "numeric", "oiferp": "{{ 'string' if target.type in ['bigquery','spark','databricks'] else 'varchar' }}", "oiftind": "{{ 'string' if target.type in ['bigquery','spark','databricks'] else 'varchar' }}", "oighndl": "{{ 'string' if target.type in ['bigquery','spark','databricks'] else 'varchar' }}", "oih_folqty": "numeric", "oih_folqty_gi": "numeric", "oih_lcfol": "{{ 'string' if target.type in ['bigquery','spark','databricks'] else 'varchar' }}", "oih_lcfol_gi": "{{ 'string' if target.type in ['bigquery','spark','databricks'] else 'varchar' }}", "oih_licin": "{{ 'string' if target.type in ['bigquery','spark','databricks'] else 'varchar' }}", "oih_licin_gi": "{{ 'string' if target.type in ['bigquery','spark','databricks'] else 'varchar' }}", "oih_lictp": "{{ 'string' if target.type in ['bigquery','spark','databricks'] else 'varchar' }}", "oih_lictp_gi": "{{ 'string' if target.type in ['bigquery','spark','databricks'] else 'varchar' }}", "oihantyp": "{{ 'string' if target.type in ['bigquery','spark','databricks'] else 'varchar' }}", "oihantyp_gi": "{{ 'string' if target.type in ['bigquery','spark','databricks'] else 'varchar' }}", "oiinex": "{{ 'string' if target.type in ['bigquery','spark','databricks'] else 'varchar' }}", "oiinex_gi": "{{ 'string' if target.type in ['bigquery','spark','databricks'] else 'varchar' }}", "oiitmnr": "{{ 'string' if target.type in ['bigquery','spark','databricks'] else 'varchar' }}", "oimatcyc": "{{ 'string' if target.type in ['bigquery','spark','databricks'] else 'varchar' }}", "oinetcyc": "{{ 'string' if target.type in ['bigquery','spark','databricks'] else 'varchar' }}", "oioilcon": "{{ 'string' if target.type in ['bigquery','spark','databricks'] else 'varchar' }}", "oipipeval": "{{ 'string' if target.type in ['bigquery','spark','databricks'] else 'varchar' }}", "oipricie": "{{ 'string' if target.type in ['bigquery','spark','databricks'] else 'varchar' }}", "oipriop": "{{ 'string' if target.type in ['bigquery','spark','databricks'] else 'varchar' }}", "oisbrel": "{{ 'string' if target.type in ['bigquery','spark','databricks'] else 'varchar' }}", "oitaxcon": "numeric", "oitaxfrom": "{{ 'string' if target.type in ['bigquery','spark','databricks'] else 'varchar' }}", "oitaxgrp": "{{ 'string' if target.type in ['bigquery','spark','databricks'] else 'varchar' }}", "oitaxgrp_gi": "{{ 'string' if target.type in ['bigquery','spark','databricks'] else 'varchar' }}", "oitaxto": "{{ 'string' if target.type in ['bigquery','spark','databricks'] else 'varchar' }}", "oitrind": "{{ 'string' if target.type in ['bigquery','spark','databricks'] else 'varchar' }}", "oitrkjr": "{{ 'string' if target.type in ['bigquery','spark','databricks'] else 'varchar' }}", "oitrknr": "{{ 'string' if target.type in ['bigquery','spark','databricks'] else 'varchar' }}", "oitxcon1": "numeric", "oitxcon2": "numeric", "oitxcon3": "numeric", "oitxcon4": "numeric", "oitxcon5": "numeric", "oitxcon6": "numeric", "oiumbar": "{{ 'string' if target.type in ['bigquery','spark','databricks'] else 'varchar' }}", "oivatf": "numeric", "oivath": "numeric", "packno": "{{ 'string' if target.type in ['bigquery','spark','databricks'] else 'varchar' }}", "peinh": "numeric", "plifz": "numeric", "pol_id": "{{ 'string' if target.type in ['bigquery','spark','databricks'] else 'varchar' }}", "prdat": "{{ 'string' if target.type in ['bigquery','spark','databricks'] else 'varchar' }}", "prio_req": "{{ 'string' if target.type in ['bigquery','spark','databricks'] else 'varchar' }}", "prio_urg": "{{ 'string' if target.type in ['bigquery','spark','databricks'] else 'varchar' }}", "prsdr": "{{ 'string' if target.type in ['bigquery','spark','databricks'] else 'varchar' }}", "pstyp": "{{ 'string' if target.type in ['bigquery','spark','databricks'] else 'varchar' }}", "punei": "{{ 'string' if target.type in ['bigquery','spark','databricks'] else 'varchar' }}", "put_back": "{{ 'string' if target.type in ['bigquery','spark','databricks'] else 'varchar' }}", "rdprf": "{{ 'string' if target.type in ['bigquery','spark','databricks'] else 'varchar' }}", "reason_code": "{{ 'string' if target.type in ['bigquery','spark','databricks'] else 'varchar' }}", "ref_item": "{{ 'string' if target.type in ['bigquery','spark','databricks'] else 'varchar' }}", "refsite": "{{ 'string' if target.type in ['bigquery','spark','databricks'] else 'varchar' }}", "repos": "{{ 'string' if target.type in ['bigquery','spark','databricks'] else 'varchar' }}", "reslo": "{{ 'string' if target.type in ['bigquery','spark','databricks'] else 'varchar' }}", "retpc": "numeric", "retpo": "{{ 'string' if target.type in ['bigquery','spark','databricks'] else 'varchar' }}", "revlv": "{{ 'string' if target.type in ['bigquery','spark','databricks'] else 'varchar' }}", "saisj": "{{ 'string' if target.type in ['bigquery','spark','databricks'] else 'varchar' }}", "saiso": "{{ 'string' if target.type in ['bigquery','spark','databricks'] else 'varchar' }}", "satnr": "{{ 'string' if target.type in ['bigquery','spark','databricks'] else 'varchar' }}", "schpr": "{{ 'string' if target.type in ['bigquery','spark','databricks'] else 'varchar' }}", "sernp": "{{ 'string' if target.type in ['bigquery','spark','databricks'] else 'varchar' }}", "serru": "{{ 'string' if target.type in ['bigquery','spark','databricks'] else 'varchar' }}", "sf_txjcd": "{{ 'string' if target.type in ['bigquery','spark','databricks'] else 'varchar' }}", "sgt_rcat": "{{ 'string' if target.type in ['bigquery','spark','databricks'] else 'varchar' }}", "sgt_scat": "{{ 'string' if target.type in ['bigquery','spark','databricks'] else 'varchar' }}", "sikgr": "{{ 'string' if target.type in ['bigquery','spark','databricks'] else 'varchar' }}", "sktof": "{{ 'string' if target.type in ['bigquery','spark','databricks'] else 'varchar' }}", "sobkz": "{{ 'string' if target.type in ['bigquery','spark','databricks'] else 'varchar' }}", "source_id": "{{ 'string' if target.type in ['bigquery','spark','databricks'] else 'varchar' }}", "source_key": "{{ 'string' if target.type in ['bigquery','spark','databricks'] else 'varchar' }}", "spe_abgru": "{{ 'string' if target.type in ['bigquery','spark','databricks'] else 'varchar' }}", "spe_chng_sys": "{{ 'string' if target.type in ['bigquery','spark','databricks'] else 'varchar' }}", "spe_cq_ctrltype": "{{ 'string' if target.type in ['bigquery','spark','databricks'] else 'varchar' }}", "spe_cq_nocq": "{{ 'string' if target.type in ['bigquery','spark','databricks'] else 'varchar' }}", "spe_crm_fkrel": "{{ 'string' if target.type in ['bigquery','spark','databricks'] else 'varchar' }}", "spe_crm_ref_item": "{{ 'string' if target.type in ['bigquery','spark','databricks'] else 'varchar' }}", "spe_crm_ref_so": "{{ 'string' if target.type in ['bigquery','spark','databricks'] else 'varchar' }}", "spe_crm_so": "{{ 'string' if target.type in ['bigquery','spark','databricks'] else 'varchar' }}", "spe_crm_so_item": "{{ 'string' if target.type in ['bigquery','spark','databricks'] else 'varchar' }}", "spe_ewm_dtc": "{{ 'string' if target.type in ['bigquery','spark','databricks'] else 'varchar' }}", "spe_insmk_src": "{{ 'string' if target.type in ['bigquery','spark','databricks'] else 'varchar' }}", "spinf": "{{ 'string' if target.type in ['bigquery','spark','databricks'] else 'varchar' }}", "srm_contract_id": "{{ 'string' if target.type in ['bigquery','spark','databricks'] else 'varchar' }}", "srm_contract_itm": "{{ 'string' if target.type in ['bigquery','spark','databricks'] else 'varchar' }}", "srv_bas_com": "{{ 'string' if target.type in ['bigquery','spark','databricks'] else 'varchar' }}", "ssqss": "{{ 'string' if target.type in ['bigquery','spark','databricks'] else 'varchar' }}", "stafo": "{{ 'string' if target.type in ['bigquery','spark','databricks'] else 'varchar' }}", "stapo": "{{ 'string' if target.type in ['bigquery','spark','databricks'] else 'varchar' }}", "statu": "{{ 'string' if target.type in ['bigquery','spark','databricks'] else 'varchar' }}", "status": "{{ 'string' if target.type in ['bigquery','spark','databricks'] else 'varchar' }}", "tax_subject_st": "{{ 'string' if target.type in ['bigquery','spark','databricks'] else 'varchar' }}", "tc_aut_det": "{{ 'string' if target.type in ['bigquery','spark','databricks'] else 'varchar' }}", "techs": "{{ 'string' if target.type in ['bigquery','spark','databricks'] else 'varchar' }}", "trmrisk_relevant": "{{ 'string' if target.type in ['bigquery','spark','databricks'] else 'varchar' }}", "twrkz": "{{ 'string' if target.type in ['bigquery','spark','databricks'] else 'varchar' }}", "txjcd": "{{ 'string' if target.type in ['bigquery','spark','databricks'] else 'varchar' }}", "txz01": "{{ 'string' if target.type in ['bigquery','spark','databricks'] else 'varchar' }}", "tzonrc": "{{ 'string' if target.type in ['bigquery','spark','databricks'] else 'varchar' }}", "uebpo": "{{ 'string' if target.type in ['bigquery','spark','databricks'] else 'varchar' }}", "uebtk": "{{ 'string' if target.type in ['bigquery','spark','databricks'] else 'varchar' }}", "uebto": "numeric", "umren": "numeric", "umrez": "numeric", "umsok": "{{ 'string' if target.type in ['bigquery','spark','databricks'] else 'varchar' }}", "untto": "numeric", "uptyp": "{{ 'string' if target.type in ['bigquery','spark','databricks'] else 'varchar' }}", "upvor": "{{ 'string' if target.type in ['bigquery','spark','databricks'] else 'varchar' }}", "usequ": "{{ 'string' if target.type in ['bigquery','spark','databricks'] else 'varchar' }}", "voleh": "{{ 'string' if target.type in ['bigquery','spark','databricks'] else 'varchar' }}", "volum": "numeric", "vorab": "{{ 'string' if target.type in ['bigquery','spark','databricks'] else 'varchar' }}", "vrtkz": "{{ 'string' if target.type in ['bigquery','spark','databricks'] else 'varchar' }}", "vsart": "{{ 'string' if target.type in ['bigquery','spark','databricks'] else 'varchar' }}", "wabwe": "{{ 'string' if target.type in ['bigquery','spark','databricks'] else 'varchar' }}", "webaz": "numeric", "webre": "{{ 'string' if target.type in ['bigquery','spark','databricks'] else 'varchar' }}", "weora": "{{ 'string' if target.type in ['bigquery','spark','databricks'] else 'varchar' }}", "wepos": "{{ 'string' if target.type in ['bigquery','spark','databricks'] else 'varchar' }}", "werks": "{{ 'string' if target.type in ['bigquery','spark','databricks'] else 'varchar' }}", "weunb": "{{ 'string' if target.type in ['bigquery','spark','databricks'] else 'varchar' }}", "wrf_charstc1": "{{ 'string' if target.type in ['bigquery','spark','databricks'] else 'varchar' }}", "wrf_charstc2": "{{ 'string' if target.type in ['bigquery','spark','databricks'] else 'varchar' }}", "wrf_charstc3": "{{ 'string' if target.type in ['bigquery','spark','databricks'] else 'varchar' }}", "xconditions": "{{ 'string' if target.type in ['bigquery','spark','databricks'] else 'varchar' }}", "xersy": "{{ 'string' if target.type in ['bigquery','spark','databricks'] else 'varchar' }}", "xoblr": "{{ 'string' if target.type in ['bigquery','spark','databricks'] else 'varchar' }}", "zgtyp": "{{ 'string' if target.type in ['bigquery','spark','databricks'] else 'varchar' }}", "zwert": "numeric", "_fivetran_rowid": "numeric", "_fivetran_sap_archived": "{{ 'string' if target.type in ['bigquery','spark','databricks'] else 'varchar' }}", "_accgo_is_co_rel": "{{ 'string' if target.type in ['bigquery','spark','databricks'] else 'varchar' }}", "_bev1_nedepfree": "{{ 'string' if target.type in ['bigquery','spark','databricks'] else 'varchar' }}", "_bev1_negen_item": "{{ 'string' if target.type in ['bigquery','spark','databricks'] else 'varchar' }}", "_bev1_nestruccat": "{{ 'string' if target.type in ['bigquery','spark','databricks'] else 'varchar' }}"}}, "created_at": 1756850325.81661, "relation_name": "\"postgres\".\"public\".\"sap_ekpo_data\"", "raw_code": "", "doc_blocks": [], "root_path": "/home/runner/work/dbt_sap/dbt_sap/integration_tests", "depends_on": {"macros": []}}, "seed.sap_integration_tests.sap_t001_data": {"database": "postgres", "schema": "public", "name": "sap_t001_data", "resource_type": "seed", "package_name": "sap_integration_tests", "path": "sap_t001_data.csv", "original_file_path": "seeds/sap_t001_data.csv", "unique_id": "seed.sap_integration_tests.sap_t001_data", "fqn": ["sap_integration_tests", "sap_t001_data"], "alias": "sap_t001_data", "checksum": {"name": "sha256", "checksum": "797e5b926587223f6379b15e6d7358f21bd3241bc4b5588fc963c4babdd54f63"}, "config": {"enabled": true, "alias": null, "schema": null, "database": null, "tags": [], "meta": {}, "group": null, "materialized": "seed", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [], "pre-hook": [], "quoting": {}, "column_types": {"_fivetran_rowid": "varchar", "_fivetran_synced": "timestamp", "adrnr": "varchar", "bukrs": "varchar", "buvar": "varchar", "fikrs": "varchar", "fmhrdate": "varchar", "fstva": "varchar", "impda": "varchar", "kkber": "varchar", "kokfi": "varchar", "mandt": "varchar", "offsacct": "varchar", "opvar": "varchar", "rcomp": "varchar", "umkrs": "varchar", "waabw": "varchar", "wfvar": "varchar", "xcos": "varchar"}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": false, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "delimiter": ",", "quote_columns": null}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": false, "node_color": null}, "patch_path": null, "build_path": null, "unrendered_config": {"docs": {"show": false}, "column_types": {"adrnr": "{{ 'string' if target.type in ['bigquery','spark','databricks'] else 'varchar' }}", "bukrs": "{{ 'string' if target.type in ['bigquery','spark','databricks'] else 'varchar' }}", "buvar": "{{ 'string' if target.type in ['bigquery','spark','databricks'] else 'varchar' }}", "fikrs": "{{ 'string' if target.type in ['bigquery','spark','databricks'] else 'varchar' }}", "fmhrdate": "{{ 'string' if target.type in ['bigquery','spark','databricks'] else 'varchar' }}", "fstva": "{{ 'string' if target.type in ['bigquery','spark','databricks'] else 'varchar' }}", "impda": "{{ 'string' if target.type in ['bigquery','spark','databricks'] else 'varchar' }}", "kkber": "{{ 'string' if target.type in ['bigquery','spark','databricks'] else 'varchar' }}", "kokfi": "{{ 'string' if target.type in ['bigquery','spark','databricks'] else 'varchar' }}", "mandt": "{{ 'string' if target.type in ['bigquery','spark','databricks'] else 'varchar' }}", "offsacct": "{{ 'string' if target.type in ['bigquery','spark','databricks'] else 'varchar' }}", "opvar": "{{ 'string' if target.type in ['bigquery','spark','databricks'] else 'varchar' }}", "rcomp": "{{ 'string' if target.type in ['bigquery','spark','databricks'] else 'varchar' }}", "umkrs": "{{ 'string' if target.type in ['bigquery','spark','databricks'] else 'varchar' }}", "waabw": "{{ 'string' if target.type in ['bigquery','spark','databricks'] else 'varchar' }}", "wfvar": "{{ 'string' if target.type in ['bigquery','spark','databricks'] else 'varchar' }}", "xcos": "{{ 'string' if target.type in ['bigquery','spark','databricks'] else 'varchar' }}"}}, "created_at": 1756850325.8232875, "relation_name": "\"postgres\".\"public\".\"sap_t001_data\"", "raw_code": "", "doc_blocks": [], "root_path": "/home/runner/work/dbt_sap/dbt_sap/integration_tests", "depends_on": {"macros": []}}, "seed.sap_integration_tests.sap_t001w_data": {"database": "postgres", "schema": "public", "name": "sap_t001w_data", "resource_type": "seed", "package_name": "sap_integration_tests", "path": "sap_t001w_data.csv", "original_file_path": "seeds/sap_t001w_data.csv", "unique_id": "seed.sap_integration_tests.sap_t001w_data", "fqn": ["sap_integration_tests", "sap_t001w_data"], "alias": "sap_t001w_data", "checksum": {"name": "sha256", "checksum": "0ba1ad6b9b4c157915c460bd4b38ff658ad20ce661a1906d78bd4ff274d4bf91"}, "config": {"enabled": true, "alias": null, "schema": null, "database": null, "tags": [], "meta": {}, "group": null, "materialized": "seed", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [], "pre-hook": [], "quoting": {}, "column_types": {"_fivetran_rowid": "varchar", "_fivetran_synced": "timestamp", "mandt": "varchar", "werks": "varchar", "name1": "varchar", "land1": "varchar"}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": false, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "delimiter": ",", "quote_columns": null}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": false, "node_color": null}, "patch_path": null, "build_path": null, "unrendered_config": {"docs": {"show": false}, "column_types": {"mandt": "{{ 'string' if target.type in ['bigquery','spark','databricks'] else 'varchar' }}", "werks": "{{ 'string' if target.type in ['bigquery','spark','databricks'] else 'varchar' }}", "name1": "{{ 'string' if target.type in ['bigquery','spark','databricks'] else 'varchar' }}", "land1": "{{ 'string' if target.type in ['bigquery','spark','databricks'] else 'varchar' }}"}}, "created_at": 1756850325.8273044, "relation_name": "\"postgres\".\"public\".\"sap_t001w_data\"", "raw_code": "", "doc_blocks": [], "root_path": "/home/runner/work/dbt_sap/dbt_sap/integration_tests", "depends_on": {"macros": []}}, "seed.sap_integration_tests.sap_lfa1_data": {"database": "postgres", "schema": "public", "name": "sap_lfa1_data", "resource_type": "seed", "package_name": "sap_integration_tests", "path": "sap_lfa1_data.csv", "original_file_path": "seeds/sap_lfa1_data.csv", "unique_id": "seed.sap_integration_tests.sap_lfa1_data", "fqn": ["sap_integration_tests", "sap_lfa1_data"], "alias": "sap_lfa1_data", "checksum": {"name": "sha256", "checksum": "d0feaf3355756f21cc208eb8004d382af751e81351430cebff4dd179a18d64dd"}, "config": {"enabled": true, "alias": null, "schema": null, "database": null, "tags": [], "meta": {}, "group": null, "materialized": "seed", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [], "pre-hook": [], "quoting": {}, "column_types": {"_fivetran_rowid": "varchar", "_fivetran_synced": "timestamp", "adrnr": "varchar", "bbbnr": "varchar", "bbsnr": "varchar", "bubkz": "varchar", "erdat": "varchar", "gbdat": "varchar", "legalnat": "varchar", "mandt": "varchar", "pstlz": "varchar", "qssysdat": "varchar", "revdb": "varchar", "rgdate": "varchar", "ric": "varchar", "rnedate": "varchar", "taxbs": "varchar", "txjcd": "varchar", "updat": "varchar", "uptim": "varchar", "j_sc_capital": "numeric", "staging_time": "numeric"}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": false, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "delimiter": ",", "quote_columns": null}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": false, "node_color": null}, "patch_path": null, "build_path": null, "unrendered_config": {"docs": {"show": false}, "column_types": {"adrnr": "{{ 'string' if target.type in ['bigquery','spark','databricks'] else 'varchar' }}", "bbbnr": "{{ 'string' if target.type in ['bigquery','spark','databricks'] else 'varchar' }}", "bbsnr": "{{ 'string' if target.type in ['bigquery','spark','databricks'] else 'varchar' }}", "bubkz": "{{ 'string' if target.type in ['bigquery','spark','databricks'] else 'varchar' }}", "erdat": "{{ 'string' if target.type in ['bigquery','spark','databricks'] else 'varchar' }}", "gbdat": "{{ 'string' if target.type in ['bigquery','spark','databricks'] else 'varchar' }}", "legalnat": "{{ 'string' if target.type in ['bigquery','spark','databricks'] else 'varchar' }}", "mandt": "{{ 'string' if target.type in ['bigquery','spark','databricks'] else 'varchar' }}", "pstlz": "{{ 'string' if target.type in ['bigquery','spark','databricks'] else 'varchar' }}", "qssysdat": "{{ 'string' if target.type in ['bigquery','spark','databricks'] else 'varchar' }}", "revdb": "{{ 'string' if target.type in ['bigquery','spark','databricks'] else 'varchar' }}", "rgdate": "{{ 'string' if target.type in ['bigquery','spark','databricks'] else 'varchar' }}", "ric": "{{ 'string' if target.type in ['bigquery','spark','databricks'] else 'varchar' }}", "rnedate": "{{ 'string' if target.type in ['bigquery','spark','databricks'] else 'varchar' }}", "taxbs": "{{ 'string' if target.type in ['bigquery','spark','databricks'] else 'varchar' }}", "txjcd": "{{ 'string' if target.type in ['bigquery','spark','databricks'] else 'varchar' }}", "updat": "{{ 'string' if target.type in ['bigquery','spark','databricks'] else 'varchar' }}", "uptim": "{{ 'string' if target.type in ['bigquery','spark','databricks'] else 'varchar' }}", "j_sc_capital": "numeric", "staging_time": "numeric"}}, "created_at": 1756850325.8311229, "relation_name": "\"postgres\".\"public\".\"sap_lfa1_data\"", "raw_code": "", "doc_blocks": [], "root_path": "/home/runner/work/dbt_sap/dbt_sap/integration_tests", "depends_on": {"macros": []}}, "seed.sap_integration_tests.sap_bseg_data": {"database": "postgres", "schema": "public", "name": "sap_bseg_data", "resource_type": "seed", "package_name": "sap_integration_tests", "path": "sap_bseg_data.csv", "original_file_path": "seeds/sap_bseg_data.csv", "unique_id": "seed.sap_integration_tests.sap_bseg_data", "fqn": ["sap_integration_tests", "sap_bseg_data"], "alias": "sap_bseg_data", "checksum": {"name": "sha256", "checksum": "8f75078838c00e50869f9292ef47790696a9455ca94111ad440216788c63c4c0"}, "config": {"enabled": true, "alias": null, "schema": null, "database": null, "tags": [], "meta": {}, "group": null, "materialized": "seed", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [], "pre-hook": [], "quoting": {}, "column_types": {"_fivetran_rowid": "varchar", "_fivetran_synced": "timestamp", "abper": "varchar", "absbt": "numeric", "agzei": "varchar", "altkt": "varchar", "anfae": "varchar", "anfbj": "varchar", "aplzl": "varchar", "aufpl": "varchar", "augcp": "varchar", "augdt": "varchar", "auggj": "varchar", "bdiff": "numeric", "bdif2": "numeric", "bdif3": "numeric", "belnr": "varchar", "blnbt": "numeric", "blnpz": "numeric", "bonfb": "numeric", "bpmng": "numeric", "bschl": "varchar", "bualt": "numeric", "bukrs": "varchar", "buzei": "varchar", "bzdat": "varchar", "dabrz": "varchar", "disbj": "varchar", "disbz": "varchar", "dmbe2": "numeric", "dmb21": "numeric", "dmb22": "numeric", "dmb23": "numeric", "dmbe3": "numeric", "dmb31": "numeric", "dmb32": "numeric", "dmb33": "numeric", "dmbt1": "numeric", "dmbt2": "numeric", "dmbt3": "numeric", "dmbtr": "numeric", "dtws1": "varchar", "dtws2": "varchar", "dtws3": "varchar", "dtws4": "varchar", "ebelp": "varchar", "erfmg": "numeric", "eten2": "varchar", "fdtag": "varchar", "fdwbt": "numeric", "fipos": "varchar", "fkber": "varchar", "fkber_long": "varchar", "fkont": "varchar", "fmxdocln": "varchar", "fmxyear": "varchar", "fwbas": "numeric", "fwzuz": "numeric", "gbetr": "numeric", "gjahr": "varchar", "gsber": "varchar", "hkont": "varchar", "hwbas": "numeric", "hwzus": "numeric", "hwzuz": "numeric", "kblpos": "varchar", "klibt": "numeric", "kokrs": "varchar", "kostl": "varchar", "kzbtr": "numeric", "kursr": "numeric", "linfv": "varchar", "lnran": "varchar", "lokkt": "varchar", "madat": "varchar", "mandt": "varchar", "manst": "varchar", "menge": "numeric", "mwst2": "numeric", "mwst3": "numeric", "mwsts": "numeric", "navfw": "numeric", "navhw": "numeric", "navh2": "numeric", "navh3": "numeric", "nebtr": "numeric", "nprei": "numeric", "obzei": "varchar", "paobjnr": "varchar", "pasubnr": "varchar", "penfc": "numeric", "penlc1": "numeric", "penlc2": "numeric", "penlc3": "numeric", "peinh": "varchar", "pernr": "varchar", "perop_beg": "varchar", "perop_end": "varchar", "posn2": "varchar", "popts": "numeric", "ppdiff": "numeric", "ppdif2": "numeric", "ppdif3": "numeric", "prctr": "varchar", "prodper": "varchar", "projk": "varchar", "pswbt": "numeric", "pyamt": "numeric", "qbshb": "numeric", "qsfbt": "numeric", "qsshb": "numeric", "rebzj": "varchar", "rebzz": "varchar", "rdiff": "numeric", "rdif2": "numeric", "rdif3": "numeric", "rewrt": "numeric", "rewwr": "numeric", "rfzei": "varchar", "rpacq": "varchar", "samnr": "varchar", "sctax": "numeric", "skfbt": "numeric", "sknto": "numeric", "sknt2": "numeric", "sknt3": "numeric", "sttax": "numeric", "taxps": "varchar", "txbfw": "numeric", "txbhw": "numeric", "txbh2": "numeric", "txbh3": "numeric", "txdat": "varchar", "txgrp": "varchar", "valut": "varchar", "vrsdt": "varchar", "wmwst": "numeric", "wrbt1": "numeric", "wrbt2": "numeric", "wrbt3": "numeric", "wrbtr": "numeric", "wskto": "numeric", "zbd1p": "numeric", "zbd1t": "varchar", "zbd2p": "numeric", "zbd2t": "varchar", "zbd3t": "varchar", "zekkn": "varchar", "zfbdt": "varchar", "zolld": "varchar", "zuonr": "varchar"}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": false, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "delimiter": ",", "quote_columns": null}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": false, "node_color": null}, "patch_path": null, "build_path": null, "unrendered_config": {"docs": {"show": false}, "column_types": {"abper": "{{ 'string' if target.type in ['bigquery','spark','databricks'] else 'varchar' }}", "absbt": "numeric", "agzei": "{{ 'string' if target.type in ['bigquery','spark','databricks'] else 'varchar' }}", "altkt": "{{ 'string' if target.type in ['bigquery','spark','databricks'] else 'varchar' }}", "anfae": "{{ 'string' if target.type in ['bigquery','spark','databricks'] else 'varchar' }}", "anfbj": "{{ 'string' if target.type in ['bigquery','spark','databricks'] else 'varchar' }}", "aplzl": "{{ 'string' if target.type in ['bigquery','spark','databricks'] else 'varchar' }}", "aufpl": "{{ 'string' if target.type in ['bigquery','spark','databricks'] else 'varchar' }}", "augcp": "{{ 'string' if target.type in ['bigquery','spark','databricks'] else 'varchar' }}", "augdt": "{{ 'string' if target.type in ['bigquery','spark','databricks'] else 'varchar' }}", "auggj": "{{ 'string' if target.type in ['bigquery','spark','databricks'] else 'varchar' }}", "bdiff": "numeric", "bdif2": "numeric", "bdif3": "numeric", "belnr": "{{ 'string' if target.type in ['bigquery','spark','databricks'] else 'varchar' }}", "blnbt": "numeric", "blnpz": "numeric", "bonfb": "numeric", "bpmng": "numeric", "bschl": "{{ 'string' if target.type in ['bigquery','spark','databricks'] else 'varchar' }}", "bualt": "numeric", "bukrs": "{{ 'string' if target.type in ['bigquery','spark','databricks'] else 'varchar' }}", "buzei": "{{ 'string' if target.type in ['bigquery','spark','databricks'] else 'varchar' }}", "bzdat": "{{ 'string' if target.type in ['bigquery','spark','databricks'] else 'varchar' }}", "dabrz": "{{ 'string' if target.type in ['bigquery','spark','databricks'] else 'varchar' }}", "disbj": "{{ 'string' if target.type in ['bigquery','spark','databricks'] else 'varchar' }}", "disbz": "{{ 'string' if target.type in ['bigquery','spark','databricks'] else 'varchar' }}", "dmbe2": "numeric", "dmb21": "numeric", "dmb22": "numeric", "dmb23": "numeric", "dmbe3": "numeric", "dmb31": "numeric", "dmb32": "numeric", "dmb33": "numeric", "dmbt1": "numeric", "dmbt2": "numeric", "dmbt3": "numeric", "dmbtr": "numeric", "dtws1": "{{ 'string' if target.type in ['bigquery','spark','databricks'] else 'varchar' }}", "dtws2": "{{ 'string' if target.type in ['bigquery','spark','databricks'] else 'varchar' }}", "dtws3": "{{ 'string' if target.type in ['bigquery','spark','databricks'] else 'varchar' }}", "dtws4": "{{ 'string' if target.type in ['bigquery','spark','databricks'] else 'varchar' }}", "ebelp": "{{ 'string' if target.type in ['bigquery','spark','databricks'] else 'varchar' }}", "erfmg": "numeric", "eten2": "{{ 'string' if target.type in ['bigquery','spark','databricks'] else 'varchar' }}", "fdtag": "{{ 'string' if target.type in ['bigquery','spark','databricks'] else 'varchar' }}", "fdwbt": "numeric", "fipos": "{{ 'string' if target.type in ['bigquery','spark','databricks'] else 'varchar' }}", "fkber": "{{ 'string' if target.type in ['bigquery','spark','databricks'] else 'varchar' }}", "fkber_long": "{{ 'string' if target.type in ['bigquery','spark','databricks'] else 'varchar' }}", "fkont": "{{ 'string' if target.type in ['bigquery','spark','databricks'] else 'varchar' }}", "fmxdocln": "{{ 'string' if target.type in ['bigquery','spark','databricks'] else 'varchar' }}", "fmxyear": "{{ 'string' if target.type in ['bigquery','spark','databricks'] else 'varchar' }}", "fwbas": "numeric", "fwzuz": "numeric", "gbetr": "numeric", "gjahr": "{{ 'string' if target.type in ['bigquery','spark','databricks'] else 'varchar' }}", "gsber": "{{ 'string' if target.type in ['bigquery','spark','databricks'] else 'varchar' }}", "hkont": "{{ 'string' if target.type in ['bigquery','spark','databricks'] else 'varchar' }}", "hwbas": "numeric", "hwzus": "numeric", "hwzuz": "numeric", "kblpos": "{{ 'string' if target.type in ['bigquery','spark','databricks'] else 'varchar' }}", "klibt": "numeric", "kokrs": "{{ 'string' if target.type in ['bigquery','spark','databricks'] else 'varchar' }}", "kostl": "{{ 'string' if target.type in ['bigquery','spark','databricks'] else 'varchar' }}", "kzbtr": "numeric", "kursr": "numeric", "linfv": "{{ 'string' if target.type in ['bigquery','spark','databricks'] else 'varchar' }}", "lnran": "{{ 'string' if target.type in ['bigquery','spark','databricks'] else 'varchar' }}", "lokkt": "{{ 'string' if target.type in ['bigquery','spark','databricks'] else 'varchar' }}", "madat": "{{ 'string' if target.type in ['bigquery','spark','databricks'] else 'varchar' }}", "mandt": "{{ 'string' if target.type in ['bigquery','spark','databricks'] else 'varchar' }}", "manst": "{{ 'string' if target.type in ['bigquery','spark','databricks'] else 'varchar' }}", "menge": "numeric", "mwst2": "numeric", "mwst3": "numeric", "mwsts": "numeric", "navfw": "numeric", "navhw": "numeric", "navh2": "numeric", "navh3": "numeric", "nebtr": "numeric", "nprei": "numeric", "obzei": "{{ 'string' if target.type in ['bigquery','spark','databricks'] else 'varchar' }}", "paobjnr": "{{ 'string' if target.type in ['bigquery','spark','databricks'] else 'varchar' }}", "pasubnr": "{{ 'string' if target.type in ['bigquery','spark','databricks'] else 'varchar' }}", "penfc": "numeric", "penlc1": "numeric", "penlc2": "numeric", "penlc3": "numeric", "peinh": "{{ 'string' if target.type in ['bigquery','spark','databricks'] else 'varchar' }}", "pernr": "{{ 'string' if target.type in ['bigquery','spark','databricks'] else 'varchar' }}", "perop_beg": "{{ 'string' if target.type in ['bigquery','spark','databricks'] else 'varchar' }}", "perop_end": "{{ 'string' if target.type in ['bigquery','spark','databricks'] else 'varchar' }}", "posn2": "{{ 'string' if target.type in ['bigquery','spark','databricks'] else 'varchar' }}", "popts": "numeric", "ppdiff": "numeric", "ppdif2": "numeric", "ppdif3": "numeric", "prctr": "{{ 'string' if target.type in ['bigquery','spark','databricks'] else 'varchar' }}", "prodper": "{{ 'string' if target.type in ['bigquery','spark','databricks'] else 'varchar' }}", "projk": "{{ 'string' if target.type in ['bigquery','spark','databricks'] else 'varchar' }}", "pswbt": "numeric", "pyamt": "numeric", "qbshb": "numeric", "qsfbt": "numeric", "qsshb": "numeric", "rebzj": "{{ 'string' if target.type in ['bigquery','spark','databricks'] else 'varchar' }}", "rebzz": "{{ 'string' if target.type in ['bigquery','spark','databricks'] else 'varchar' }}", "rdiff": "numeric", "rdif2": "numeric", "rdif3": "numeric", "rewrt": "numeric", "rewwr": "numeric", "rfzei": "{{ 'string' if target.type in ['bigquery','spark','databricks'] else 'varchar' }}", "rpacq": "{{ 'string' if target.type in ['bigquery','spark','databricks'] else 'varchar' }}", "samnr": "{{ 'string' if target.type in ['bigquery','spark','databricks'] else 'varchar' }}", "sctax": "numeric", "skfbt": "numeric", "sknto": "numeric", "sknt2": "numeric", "sknt3": "numeric", "sttax": "numeric", "taxps": "{{ 'string' if target.type in ['bigquery','spark','databricks'] else 'varchar' }}", "txbfw": "numeric", "txbhw": "numeric", "txbh2": "numeric", "txbh3": "numeric", "txdat": "{{ 'string' if target.type in ['bigquery','spark','databricks'] else 'varchar' }}", "txgrp": "{{ 'string' if target.type in ['bigquery','spark','databricks'] else 'varchar' }}", "valut": "{{ 'string' if target.type in ['bigquery','spark','databricks'] else 'varchar' }}", "vrsdt": "{{ 'string' if target.type in ['bigquery','spark','databricks'] else 'varchar' }}", "wmwst": "numeric", "wrbt1": "numeric", "wrbt2": "numeric", "wrbt3": "numeric", "wrbtr": "numeric", "wskto": "numeric", "zbd1p": "numeric", "zbd1t": "{{ 'string' if target.type in ['bigquery','spark','databricks'] else 'varchar' }}", "zbd2p": "numeric", "zbd2t": "{{ 'string' if target.type in ['bigquery','spark','databricks'] else 'varchar' }}", "zbd3t": "{{ 'string' if target.type in ['bigquery','spark','databricks'] else 'varchar' }}", "zekkn": "{{ 'string' if target.type in ['bigquery','spark','databricks'] else 'varchar' }}", "zfbdt": "{{ 'string' if target.type in ['bigquery','spark','databricks'] else 'varchar' }}", "zolld": "{{ 'string' if target.type in ['bigquery','spark','databricks'] else 'varchar' }}", "zuonr": "{{ 'string' if target.type in ['bigquery','spark','databricks'] else 'varchar' }}"}}, "created_at": 1756850325.8365002, "relation_name": "\"postgres\".\"public\".\"sap_bseg_data\"", "raw_code": "", "doc_blocks": [], "root_path": "/home/runner/work/dbt_sap/dbt_sap/integration_tests", "depends_on": {"macros": []}}, "seed.sap_integration_tests.sap_pa0007_data": {"database": "postgres", "schema": "public", "name": "sap_pa0007_data", "resource_type": "seed", "package_name": "sap_integration_tests", "path": "sap_pa0007_data.csv", "original_file_path": "seeds/sap_pa0007_data.csv", "unique_id": "seed.sap_integration_tests.sap_pa0007_data", "fqn": ["sap_integration_tests", "sap_pa0007_data"], "alias": "sap_pa0007_data", "checksum": {"name": "sha256", "checksum": "437a6330e75013f1c18112991446eef174d78e665b7ecab466c93ef06e2189d2"}, "config": {"enabled": true, "alias": null, "schema": null, "database": null, "tags": [], "meta": {}, "group": null, "materialized": "seed", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [], "pre-hook": [], "quoting": {}, "column_types": {"_fivetran_rowid": "varchar", "_fivetran_synced": "timestamp", "aedtm": "varchar", "arbst": "numeric", "awtyp": "varchar", "begda": "varchar", "dysch": "varchar", "empct": "numeric", "endda": "varchar", "flag1": "varchar", "flag2": "varchar", "flag3": "varchar", "flag4": "varchar", "grpvl": "varchar", "histo": "varchar", "itbld": "varchar", "itxex": "varchar", "jrstd": "numeric", "kztim": "varchar", "mandt": "varchar", "maxja": "numeric", "maxmo": "numeric", "maxta": "numeric", "maxwo": "numeric", "minja": "numeric", "minmo": "numeric", "minta": "numeric", "minwo": "numeric", "mostd": "numeric", "objps": "varchar", "ordex": "varchar", "pernr": "varchar", "preas": "varchar", "refex": "varchar", "rese1": "varchar", "rese2": "varchar", "schkz": "varchar", "seqnr": "varchar", "sprps": "varchar", "subty": "varchar", "teilk": "varchar", "uname": "varchar", "wkwdy": "numeric", "wostd": "numeric", "wweek": "varchar", "zterf": "varchar"}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": false, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "delimiter": ",", "quote_columns": null}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": false, "node_color": null}, "patch_path": null, "build_path": null, "unrendered_config": {"docs": {"show": false}, "column_types": {"aedtm": "{{ 'string' if target.type in ['bigquery','spark','databricks'] else 'varchar' }}", "arbst": "numeric", "awtyp": "{{ 'string' if target.type in ['bigquery','spark','databricks'] else 'varchar' }}", "begda": "{{ 'string' if target.type in ['bigquery','spark','databricks'] else 'varchar' }}", "dysch": "{{ 'string' if target.type in ['bigquery','spark','databricks'] else 'varchar' }}", "empct": "numeric", "endda": "{{ 'string' if target.type in ['bigquery','spark','databricks'] else 'varchar' }}", "flag1": "{{ 'string' if target.type in ['bigquery','spark','databricks'] else 'varchar' }}", "flag2": "{{ 'string' if target.type in ['bigquery','spark','databricks'] else 'varchar' }}", "flag3": "{{ 'string' if target.type in ['bigquery','spark','databricks'] else 'varchar' }}", "flag4": "{{ 'string' if target.type in ['bigquery','spark','databricks'] else 'varchar' }}", "grpvl": "{{ 'string' if target.type in ['bigquery','spark','databricks'] else 'varchar' }}", "histo": "{{ 'string' if target.type in ['bigquery','spark','databricks'] else 'varchar' }}", "itbld": "{{ 'string' if target.type in ['bigquery','spark','databricks'] else 'varchar' }}", "itxex": "{{ 'string' if target.type in ['bigquery','spark','databricks'] else 'varchar' }}", "jrstd": "numeric", "kztim": "{{ 'string' if target.type in ['bigquery','spark','databricks'] else 'varchar' }}", "mandt": "{{ 'string' if target.type in ['bigquery','spark','databricks'] else 'varchar' }}", "maxja": "numeric", "maxmo": "numeric", "maxta": "numeric", "maxwo": "numeric", "minja": "numeric", "minmo": "numeric", "minta": "numeric", "minwo": "numeric", "mostd": "numeric", "objps": "{{ 'string' if target.type in ['bigquery','spark','databricks'] else 'varchar' }}", "ordex": "{{ 'string' if target.type in ['bigquery','spark','databricks'] else 'varchar' }}", "pernr": "{{ 'string' if target.type in ['bigquery','spark','databricks'] else 'varchar' }}", "preas": "{{ 'string' if target.type in ['bigquery','spark','databricks'] else 'varchar' }}", "refex": "{{ 'string' if target.type in ['bigquery','spark','databricks'] else 'varchar' }}", "rese1": "{{ 'string' if target.type in ['bigquery','spark','databricks'] else 'varchar' }}", "rese2": "{{ 'string' if target.type in ['bigquery','spark','databricks'] else 'varchar' }}", "schkz": "{{ 'string' if target.type in ['bigquery','spark','databricks'] else 'varchar' }}", "seqnr": "{{ 'string' if target.type in ['bigquery','spark','databricks'] else 'varchar' }}", "sprps": "{{ 'string' if target.type in ['bigquery','spark','databricks'] else 'varchar' }}", "subty": "{{ 'string' if target.type in ['bigquery','spark','databricks'] else 'varchar' }}", "teilk": "{{ 'string' if target.type in ['bigquery','spark','databricks'] else 'varchar' }}", "uname": "{{ 'string' if target.type in ['bigquery','spark','databricks'] else 'varchar' }}", "wkwdy": "numeric", "wostd": "numeric", "wweek": "{{ 'string' if target.type in ['bigquery','spark','databricks'] else 'varchar' }}", "zterf": "{{ 'string' if target.type in ['bigquery','spark','databricks'] else 'varchar' }}"}}, "created_at": 1756850325.8415005, "relation_name": "\"postgres\".\"public\".\"sap_pa0007_data\"", "raw_code": "", "doc_blocks": [], "root_path": "/home/runner/work/dbt_sap/dbt_sap/integration_tests", "depends_on": {"macros": []}}, "seed.sap_integration_tests.sap_tvag_data": {"database": "postgres", "schema": "public", "name": "sap_tvag_data", "resource_type": "seed", "package_name": "sap_integration_tests", "path": "sap_tvag_data.csv", "original_file_path": "seeds/sap_tvag_data.csv", "unique_id": "seed.sap_integration_tests.sap_tvag_data", "fqn": ["sap_integration_tests", "sap_tvag_data"], "alias": "sap_tvag_data", "checksum": {"name": "sha256", "checksum": "a3a7501a65f7d2b17f932e890441188785763307be0f713539aff95488ce1d3d"}, "config": {"enabled": true, "alias": null, "schema": null, "database": null, "tags": [], "meta": {}, "group": null, "materialized": "seed", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [], "pre-hook": [], "quoting": {}, "column_types": {"_fivetran_rowid": "varchar", "_fivetran_synced": "timestamp", "mandt": "varchar", "abgru": "varchar", "dragr": "varchar"}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": false, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "delimiter": ",", "quote_columns": null}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": false, "node_color": null}, "patch_path": null, "build_path": null, "unrendered_config": {"docs": {"show": false}, "column_types": {"mandt": "{{ 'string' if target.type in ['bigquery','spark','databricks'] else 'varchar' }}", "abgru": "{{ 'string' if target.type in ['bigquery','spark','databricks'] else 'varchar' }}", "dragr": "{{ 'string' if target.type in ['bigquery','spark','databricks'] else 'varchar' }}"}}, "created_at": 1756850325.8450844, "relation_name": "\"postgres\".\"public\".\"sap_tvag_data\"", "raw_code": "", "doc_blocks": [], "root_path": "/home/runner/work/dbt_sap/dbt_sap/integration_tests", "depends_on": {"macros": []}}, "seed.sap_integration_tests.sap_eket_data": {"database": "postgres", "schema": "public", "name": "sap_eket_data", "resource_type": "seed", "package_name": "sap_integration_tests", "path": "sap_eket_data.csv", "original_file_path": "seeds/sap_eket_data.csv", "unique_id": "seed.sap_integration_tests.sap_eket_data", "fqn": ["sap_integration_tests", "sap_eket_data"], "alias": "sap_eket_data", "checksum": {"name": "sha256", "checksum": "f6545d24bbb0faf7a9adc46f6c98d005d4838c690e206799f090951e382fea08"}, "config": {"enabled": true, "alias": null, "schema": null, "database": null, "tags": [], "meta": {}, "group": null, "materialized": "seed", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [], "pre-hook": [], "quoting": {}, "column_types": {"_fivetran_rowid": "varchar", "_fivetran_synced": "timestamp", "otb_res_value": "numeric", "otb_spec_value": "numeric", "otb_value": "numeric"}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": false, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "delimiter": ",", "quote_columns": null}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": false, "node_color": null}, "patch_path": null, "build_path": null, "unrendered_config": {"docs": {"show": false}, "column_types": {"otb_res_value": "numeric", "otb_spec_value": "numeric", "otb_value": "numeric"}}, "created_at": 1756850325.8485796, "relation_name": "\"postgres\".\"public\".\"sap_eket_data\"", "raw_code": "", "doc_blocks": [], "root_path": "/home/runner/work/dbt_sap/dbt_sap/integration_tests", "depends_on": {"macros": []}}, "seed.sap_integration_tests.sap_pa0031_data": {"database": "postgres", "schema": "public", "name": "sap_pa0031_data", "resource_type": "seed", "package_name": "sap_integration_tests", "path": "sap_pa0031_data.csv", "original_file_path": "seeds/sap_pa0031_data.csv", "unique_id": "seed.sap_integration_tests.sap_pa0031_data", "fqn": ["sap_integration_tests", "sap_pa0031_data"], "alias": "sap_pa0031_data", "checksum": {"name": "sha256", "checksum": "305efad93b547f0d01960b8a5aa8e52fc04d840bb30f4d0dcbebee2dbb871160"}, "config": {"enabled": true, "alias": null, "schema": null, "database": null, "tags": [], "meta": {}, "group": null, "materialized": "seed", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [], "pre-hook": [], "quoting": {}, "column_types": {"_fivetran_rowid": "varchar", "_fivetran_synced": "timestamp", "aedtm": "varchar", "begda": "varchar", "endda": "varchar", "flag1": "varchar", "flag2": "varchar", "flag3": "varchar", "flag4": "varchar", "grpvl": "varchar", "histo": "varchar", "itbld": "varchar", "itxex": "varchar", "mandt": "varchar", "objps": "varchar", "ordex": "varchar", "pernr": "varchar", "preas": "varchar", "refex": "varchar", "rese1": "varchar", "rese2": "varchar", "rfp01": "varchar", "rfp02": "varchar", "rfp03": "varchar", "rfp04": "varchar", "rfp05": "varchar", "rfp06": "varchar", "rfp07": "varchar", "rfp08": "varchar", "rfp09": "varchar", "rfp10": "varchar", "rfp11": "varchar", "rfp12": "varchar", "rfp13": "varchar", "rfp14": "varchar", "rfp15": "varchar", "rfp16": "varchar", "rfp17": "varchar", "rfp18": "varchar", "rfp19": "varchar", "rfp20": "varchar", "seqnr": "varchar", "sprps": "varchar", "subty": "varchar", "uname": "varchar"}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": false, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "delimiter": ",", "quote_columns": null}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": false, "node_color": null}, "patch_path": null, "build_path": null, "unrendered_config": {"docs": {"show": false}, "column_types": {"aedtm": "{{ 'string' if target.type in ['bigquery','spark','databricks'] else 'varchar' }}", "begda": "{{ 'string' if target.type in ['bigquery','spark','databricks'] else 'varchar' }}", "endda": "{{ 'string' if target.type in ['bigquery','spark','databricks'] else 'varchar' }}", "flag1": "{{ 'string' if target.type in ['bigquery','spark','databricks'] else 'varchar' }}", "flag2": "{{ 'string' if target.type in ['bigquery','spark','databricks'] else 'varchar' }}", "flag3": "{{ 'string' if target.type in ['bigquery','spark','databricks'] else 'varchar' }}", "flag4": "{{ 'string' if target.type in ['bigquery','spark','databricks'] else 'varchar' }}", "grpvl": "{{ 'string' if target.type in ['bigquery','spark','databricks'] else 'varchar' }}", "histo": "{{ 'string' if target.type in ['bigquery','spark','databricks'] else 'varchar' }}", "itbld": "{{ 'string' if target.type in ['bigquery','spark','databricks'] else 'varchar' }}", "itxex": "{{ 'string' if target.type in ['bigquery','spark','databricks'] else 'varchar' }}", "mandt": "{{ 'string' if target.type in ['bigquery','spark','databricks'] else 'varchar' }}", "objps": "{{ 'string' if target.type in ['bigquery','spark','databricks'] else 'varchar' }}", "ordex": "{{ 'string' if target.type in ['bigquery','spark','databricks'] else 'varchar' }}", "pernr": "{{ 'string' if target.type in ['bigquery','spark','databricks'] else 'varchar' }}", "preas": "{{ 'string' if target.type in ['bigquery','spark','databricks'] else 'varchar' }}", "refex": "{{ 'string' if target.type in ['bigquery','spark','databricks'] else 'varchar' }}", "rese1": "{{ 'string' if target.type in ['bigquery','spark','databricks'] else 'varchar' }}", "rese2": "{{ 'string' if target.type in ['bigquery','spark','databricks'] else 'varchar' }}", "rfp01": "{{ 'string' if target.type in ['bigquery','spark','databricks'] else 'varchar' }}", "rfp02": "{{ 'string' if target.type in ['bigquery','spark','databricks'] else 'varchar' }}", "rfp03": "{{ 'string' if target.type in ['bigquery','spark','databricks'] else 'varchar' }}", "rfp04": "{{ 'string' if target.type in ['bigquery','spark','databricks'] else 'varchar' }}", "rfp05": "{{ 'string' if target.type in ['bigquery','spark','databricks'] else 'varchar' }}", "rfp06": "{{ 'string' if target.type in ['bigquery','spark','databricks'] else 'varchar' }}", "rfp07": "{{ 'string' if target.type in ['bigquery','spark','databricks'] else 'varchar' }}", "rfp08": "{{ 'string' if target.type in ['bigquery','spark','databricks'] else 'varchar' }}", "rfp09": "{{ 'string' if target.type in ['bigquery','spark','databricks'] else 'varchar' }}", "rfp10": "{{ 'string' if target.type in ['bigquery','spark','databricks'] else 'varchar' }}", "rfp11": "{{ 'string' if target.type in ['bigquery','spark','databricks'] else 'varchar' }}", "rfp12": "{{ 'string' if target.type in ['bigquery','spark','databricks'] else 'varchar' }}", "rfp13": "{{ 'string' if target.type in ['bigquery','spark','databricks'] else 'varchar' }}", "rfp14": "{{ 'string' if target.type in ['bigquery','spark','databricks'] else 'varchar' }}", "rfp15": "{{ 'string' if target.type in ['bigquery','spark','databricks'] else 'varchar' }}", "rfp16": "{{ 'string' if target.type in ['bigquery','spark','databricks'] else 'varchar' }}", "rfp17": "{{ 'string' if target.type in ['bigquery','spark','databricks'] else 'varchar' }}", "rfp18": "{{ 'string' if target.type in ['bigquery','spark','databricks'] else 'varchar' }}", "rfp19": "{{ 'string' if target.type in ['bigquery','spark','databricks'] else 'varchar' }}", "rfp20": "{{ 'string' if target.type in ['bigquery','spark','databricks'] else 'varchar' }}", "seqnr": "{{ 'string' if target.type in ['bigquery','spark','databricks'] else 'varchar' }}", "sprps": "{{ 'string' if target.type in ['bigquery','spark','databricks'] else 'varchar' }}", "subty": "{{ 'string' if target.type in ['bigquery','spark','databricks'] else 'varchar' }}", "uname": "{{ 'string' if target.type in ['bigquery','spark','databricks'] else 'varchar' }}"}}, "created_at": 1756850325.8524818, "relation_name": "\"postgres\".\"public\".\"sap_pa0031_data\"", "raw_code": "", "doc_blocks": [], "root_path": "/home/runner/work/dbt_sap/dbt_sap/integration_tests", "depends_on": {"macros": []}}, "seed.sap_integration_tests.sap_vbak_data": {"database": "postgres", "schema": "public", "name": "sap_vbak_data", "resource_type": "seed", "package_name": "sap_integration_tests", "path": "sap_vbak_data.csv", "original_file_path": "seeds/sap_vbak_data.csv", "unique_id": "seed.sap_integration_tests.sap_vbak_data", "fqn": ["sap_integration_tests", "sap_vbak_data"], "alias": "sap_vbak_data", "checksum": {"name": "sha256", "checksum": "b63aa58743a9530695d852ebbc8bf33e3069c3c41d828834aa0272de13e5c6aa"}, "config": {"enabled": true, "alias": null, "schema": null, "database": null, "tags": [], "meta": {}, "group": null, "materialized": "seed", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [], "pre-hook": [], "quoting": {}, "column_types": {"_fivetran_rowid": "varchar", "_fivetran_synced": "timestamp", "cmngv": "numeric", "netwr": "numeric"}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": false, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "delimiter": ",", "quote_columns": null}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": false, "node_color": null}, "patch_path": null, "build_path": null, "unrendered_config": {"docs": {"show": false}, "column_types": {"cmngv": "numeric", "netwr": "numeric"}}, "created_at": 1756850325.856071, "relation_name": "\"postgres\".\"public\".\"sap_vbak_data\"", "raw_code": "", "doc_blocks": [], "root_path": "/home/runner/work/dbt_sap/dbt_sap/integration_tests", "depends_on": {"macros": []}}, "seed.sap_integration_tests.sap_t161_data": {"database": "postgres", "schema": "public", "name": "sap_t161_data", "resource_type": "seed", "package_name": "sap_integration_tests", "path": "sap_t161_data.csv", "original_file_path": "seeds/sap_t161_data.csv", "unique_id": "seed.sap_integration_tests.sap_t161_data", "fqn": ["sap_integration_tests", "sap_t161_data"], "alias": "sap_t161_data", "checksum": {"name": "sha256", "checksum": "2889caca4b6073e7d93521124eeb6aaf84504e9d3a743bf98028263f2d8f8480"}, "config": {"enabled": true, "alias": null, "schema": null, "database": null, "tags": [], "meta": {}, "group": null, "materialized": "seed", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [], "pre-hook": [], "quoting": {}, "column_types": {"_fivetran_rowid": "varchar", "_fivetran_synced": "timestamp", "bstyp": "varchar", "bsart": "varchar"}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": false, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "delimiter": ",", "quote_columns": null}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": false, "node_color": null}, "patch_path": null, "build_path": null, "unrendered_config": {"docs": {"show": false}, "column_types": {"bstyp": "{{ 'string' if target.type in ['bigquery','spark','databricks'] else 'varchar' }}", "bsart": "{{ 'string' if target.type in ['bigquery','spark','databricks'] else 'varchar' }}"}}, "created_at": 1756850325.8592849, "relation_name": "\"postgres\".\"public\".\"sap_t161_data\"", "raw_code": "", "doc_blocks": [], "root_path": "/home/runner/work/dbt_sap/dbt_sap/integration_tests", "depends_on": {"macros": []}}, "seed.sap_integration_tests.sap_pa0000_data": {"database": "postgres", "schema": "public", "name": "sap_pa0000_data", "resource_type": "seed", "package_name": "sap_integration_tests", "path": "sap_pa0000_data.csv", "original_file_path": "seeds/sap_pa0000_data.csv", "unique_id": "seed.sap_integration_tests.sap_pa0000_data", "fqn": ["sap_integration_tests", "sap_pa0000_data"], "alias": "sap_pa0000_data", "checksum": {"name": "sha256", "checksum": "9e3e474d539af2b5a66728fcfbae92800d9eb08e34ac96d984f571e13668bd5d"}, "config": {"enabled": true, "alias": null, "schema": null, "database": null, "tags": [], "meta": {}, "group": null, "materialized": "seed", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [], "pre-hook": [], "quoting": {}, "column_types": {"_fivetran_rowid": "varchar", "_fivetran_synced": "timestamp", "aedtm": "varchar", "begda": "varchar", "endda": "varchar", "flag1": "varchar", "flag2": "varchar", "flag3": "varchar", "flag4": "varchar", "grpvl": "varchar", "histo": "varchar", "itbld": "varchar", "itxex": "varchar", "mandt": "varchar", "massg": "varchar", "massn": "varchar", "objps": "varchar", "ordex": "varchar", "pernr": "varchar", "preas": "varchar", "refex": "varchar", "rese1": "varchar", "rese2": "varchar", "seqnr": "varchar", "sprps": "varchar", "stat1": "varchar", "stat2": "varchar", "stat3": "varchar", "subty": "varchar", "uname": "varchar"}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": false, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "delimiter": ",", "quote_columns": null}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": false, "node_color": null}, "patch_path": null, "build_path": null, "unrendered_config": {"docs": {"show": false}, "column_types": {"aedtm": "{{ 'string' if target.type in ['bigquery','spark','databricks'] else 'varchar' }}", "begda": "{{ 'string' if target.type in ['bigquery','spark','databricks'] else 'varchar' }}", "endda": "{{ 'string' if target.type in ['bigquery','spark','databricks'] else 'varchar' }}", "flag1": "{{ 'string' if target.type in ['bigquery','spark','databricks'] else 'varchar' }}", "flag2": "{{ 'string' if target.type in ['bigquery','spark','databricks'] else 'varchar' }}", "flag3": "{{ 'string' if target.type in ['bigquery','spark','databricks'] else 'varchar' }}", "flag4": "{{ 'string' if target.type in ['bigquery','spark','databricks'] else 'varchar' }}", "grpvl": "{{ 'string' if target.type in ['bigquery','spark','databricks'] else 'varchar' }}", "histo": "{{ 'string' if target.type in ['bigquery','spark','databricks'] else 'varchar' }}", "itbld": "{{ 'string' if target.type in ['bigquery','spark','databricks'] else 'varchar' }}", "itxex": "{{ 'string' if target.type in ['bigquery','spark','databricks'] else 'varchar' }}", "mandt": "{{ 'string' if target.type in ['bigquery','spark','databricks'] else 'varchar' }}", "massg": "{{ 'string' if target.type in ['bigquery','spark','databricks'] else 'varchar' }}", "massn": "{{ 'string' if target.type in ['bigquery','spark','databricks'] else 'varchar' }}", "objps": "{{ 'string' if target.type in ['bigquery','spark','databricks'] else 'varchar' }}", "ordex": "{{ 'string' if target.type in ['bigquery','spark','databricks'] else 'varchar' }}", "pernr": "{{ 'string' if target.type in ['bigquery','spark','databricks'] else 'varchar' }}", "preas": "{{ 'string' if target.type in ['bigquery','spark','databricks'] else 'varchar' }}", "refex": "{{ 'string' if target.type in ['bigquery','spark','databricks'] else 'varchar' }}", "rese1": "{{ 'string' if target.type in ['bigquery','spark','databricks'] else 'varchar' }}", "rese2": "{{ 'string' if target.type in ['bigquery','spark','databricks'] else 'varchar' }}", "seqnr": "{{ 'string' if target.type in ['bigquery','spark','databricks'] else 'varchar' }}", "sprps": "{{ 'string' if target.type in ['bigquery','spark','databricks'] else 'varchar' }}", "stat1": "{{ 'string' if target.type in ['bigquery','spark','databricks'] else 'varchar' }}", "stat2": "{{ 'string' if target.type in ['bigquery','spark','databricks'] else 'varchar' }}", "stat3": "{{ 'string' if target.type in ['bigquery','spark','databricks'] else 'varchar' }}", "subty": "{{ 'string' if target.type in ['bigquery','spark','databricks'] else 'varchar' }}", "uname": "{{ 'string' if target.type in ['bigquery','spark','databricks'] else 'varchar' }}"}}, "created_at": 1756850325.8628242, "relation_name": "\"postgres\".\"public\".\"sap_pa0000_data\"", "raw_code": "", "doc_blocks": [], "root_path": "/home/runner/work/dbt_sap/dbt_sap/integration_tests", "depends_on": {"macros": []}}, "seed.sap_integration_tests.sap_t024_data": {"database": "postgres", "schema": "public", "name": "sap_t024_data", "resource_type": "seed", "package_name": "sap_integration_tests", "path": "sap_t024_data.csv", "original_file_path": "seeds/sap_t024_data.csv", "unique_id": "seed.sap_integration_tests.sap_t024_data", "fqn": ["sap_integration_tests", "sap_t024_data"], "alias": "sap_t024_data", "checksum": {"name": "sha256", "checksum": "1fbc944646fe9f64e0410a16e31eb32636216f62be484f845e67f5a2b7d2eab3"}, "config": {"enabled": true, "alias": null, "schema": null, "database": null, "tags": [], "meta": {}, "group": null, "materialized": "seed", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [], "pre-hook": [], "quoting": {}, "column_types": {"_fivetran_rowid": "varchar", "_fivetran_synced": "timestamp", "ekgrp": "varchar", "eknam": "varchar"}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": false, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "delimiter": ",", "quote_columns": null}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": false, "node_color": null}, "patch_path": null, "build_path": null, "unrendered_config": {"docs": {"show": false}, "column_types": {"ekgrp": "{{ 'string' if target.type in ['bigquery','spark','databricks'] else 'varchar' }}", "eknam": "{{ 'string' if target.type in ['bigquery','spark','databricks'] else 'varchar' }}"}}, "created_at": 1756850325.8663356, "relation_name": "\"postgres\".\"public\".\"sap_t024_data\"", "raw_code": "", "doc_blocks": [], "root_path": "/home/runner/work/dbt_sap/dbt_sap/integration_tests", "depends_on": {"macros": []}}, "seed.sap_integration_tests.sap_faglflexa_data": {"database": "postgres", "schema": "public", "name": "sap_faglflexa_data", "resource_type": "seed", "package_name": "sap_integration_tests", "path": "sap_faglflexa_data.csv", "original_file_path": "seeds/sap_faglflexa_data.csv", "unique_id": "seed.sap_integration_tests.sap_faglflexa_data", "fqn": ["sap_integration_tests", "sap_faglflexa_data"], "alias": "sap_faglflexa_data", "checksum": {"name": "sha256", "checksum": "653f3cbf9aeb146072e6e7ee47f6b87ac925e9d8321561a9a8180116c18ff110"}, "config": {"enabled": true, "alias": null, "schema": null, "database": null, "tags": [], "meta": {}, "group": null, "materialized": "seed", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [], "pre-hook": [], "quoting": {}, "column_types": {"_fivetran_rowid": "varchar", "_fivetran_synced": "timestamp", "belnr": "varchar", "bschl": "varchar", "budat": "varchar", "buzei": "varchar", "docln": "varchar", "docnr": "varchar", "gjahr": "varchar", "hsl": "numeric", "kokrs": "varchar", "ksl": "numeric", "msl": "numeric", "osl": "numeric", "poper": "varchar", "racct": "varchar", "rbukrs": "varchar", "rcnlt": "varchar", "rrcty": "varchar", "rvers": "varchar", "ryear": "varchar", "timestamp": "bigint", "tsl": "numeric", "wsl": "numeric"}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": false, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "delimiter": ",", "quote_columns": null}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": false, "node_color": null}, "patch_path": null, "build_path": null, "unrendered_config": {"docs": {"show": false}, "column_types": {"belnr": "{{ 'string' if target.type in ['bigquery','spark','databricks'] else 'varchar' }}", "bschl": "{{ 'string' if target.type in ['bigquery','spark','databricks'] else 'varchar' }}", "budat": "{{ 'string' if target.type in ['bigquery','spark','databricks'] else 'varchar' }}", "buzei": "{{ 'string' if target.type in ['bigquery','spark','databricks'] else 'varchar' }}", "docln": "{{ 'string' if target.type in ['bigquery','spark','databricks'] else 'varchar' }}", "docnr": "{{ 'string' if target.type in ['bigquery','spark','databricks'] else 'varchar' }}", "gjahr": "{{ 'string' if target.type in ['bigquery','spark','databricks'] else 'varchar' }}", "hsl": "numeric", "kokrs": "{{ 'string' if target.type in ['bigquery','spark','databricks'] else 'varchar' }}", "ksl": "numeric", "msl": "numeric", "osl": "numeric", "poper": "{{ 'string' if target.type in ['bigquery','spark','databricks'] else 'varchar' }}", "racct": "{{ 'string' if target.type in ['bigquery','spark','databricks'] else 'varchar' }}", "rbukrs": "{{ 'string' if target.type in ['bigquery','spark','databricks'] else 'varchar' }}", "rcnlt": "{{ 'string' if target.type in ['bigquery','spark','databricks'] else 'varchar' }}", "rrcty": "{{ 'string' if target.type in ['bigquery','spark','databricks'] else 'varchar' }}", "rvers": "{{ 'string' if target.type in ['bigquery','spark','databricks'] else 'varchar' }}", "ryear": "{{ 'string' if target.type in ['bigquery','spark','databricks'] else 'varchar' }}", "timestamp": "{{ 'int64' if target.type == 'bigquery' else 'bigint' }}", "tsl": "numeric", "wsl": "numeric"}}, "created_at": 1756850325.8698566, "relation_name": "\"postgres\".\"public\".\"sap_faglflexa_data\"", "raw_code": "", "doc_blocks": [], "root_path": "/home/runner/work/dbt_sap/dbt_sap/integration_tests", "depends_on": {"macros": []}}, "seed.sap_integration_tests.sap_t880_data": {"database": "postgres", "schema": "public", "name": "sap_t880_data", "resource_type": "seed", "package_name": "sap_integration_tests", "path": "sap_t880_data.csv", "original_file_path": "seeds/sap_t880_data.csv", "unique_id": "seed.sap_integration_tests.sap_t880_data", "fqn": ["sap_integration_tests", "sap_t880_data"], "alias": "sap_t880_data", "checksum": {"name": "sha256", "checksum": "d3894cb421ebb0756b5bf671e093df95dec5c506eb2d0926e6255046d319fc8c"}, "config": {"enabled": true, "alias": null, "schema": null, "database": null, "tags": [], "meta": {}, "group": null, "materialized": "seed", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [], "pre-hook": [], "quoting": {}, "column_types": {"_fivetran_rowid": "varchar", "_fivetran_synced": "timestamp", "mandt": "varchar", "rcomp": "varchar", "name1": "varchar"}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": false, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "delimiter": ",", "quote_columns": null}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": false, "node_color": null}, "patch_path": null, "build_path": null, "unrendered_config": {"docs": {"show": false}, "column_types": {"mandt": "{{ 'string' if target.type in ['bigquery','spark','databricks'] else 'varchar' }}", "rcomp": "{{ 'string' if target.type in ['bigquery','spark','databricks'] else 'varchar' }}", "name1": "{{ 'string' if target.type in ['bigquery','spark','databricks'] else 'varchar' }}"}}, "created_at": 1756850325.8732438, "relation_name": "\"postgres\".\"public\".\"sap_t880_data\"", "raw_code": "", "doc_blocks": [], "root_path": "/home/runner/work/dbt_sap/dbt_sap/integration_tests", "depends_on": {"macros": []}}, "seed.sap_integration_tests.sap_ekko_data": {"database": "postgres", "schema": "public", "name": "sap_ekko_data", "resource_type": "seed", "package_name": "sap_integration_tests", "path": "sap_ekko_data.csv", "original_file_path": "seeds/sap_ekko_data.csv", "unique_id": "seed.sap_integration_tests.sap_ekko_data", "fqn": ["sap_integration_tests", "sap_ekko_data"], "alias": "sap_ekko_data", "checksum": {"name": "sha256", "checksum": "2c4192c9d4ef3c756f9289f314060bcfc8307db84fbb54951da7cfdc263fd434"}, "config": {"enabled": true, "alias": null, "schema": null, "database": null, "tags": [], "meta": {}, "group": null, "materialized": "seed", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [], "pre-hook": [], "quoting": {}, "column_types": {"_fivetran_rowid": "varchar", "_fivetran_synced": "timestamp", "dpamt": "numeric", "dppct": "numeric", "ktwrt": "numeric", "otb_res_value": "numeric", "otb_spec_value": "numeric", "otb_value": "numeric", "rlwrt": "numeric", "mandt": "varchar", "ebeln": "varchar", "bukrs": "varchar", "bstyp": "varchar", "bsart": "varchar", "lifnr": "varchar", "aedat": "varchar", "bedat": "varchar", "kdatb": "varchar", "kdate": "varchar", "bwbdt": "varchar", "angdt": "varchar", "bnddt": "varchar", "gwldt": "varchar", "ihran": "varchar", "dpdat": "varchar", "release_date": "varchar", "eq_eindt": "varchar"}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": false, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "delimiter": ",", "quote_columns": null}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": false, "node_color": null}, "patch_path": null, "build_path": null, "unrendered_config": {"docs": {"show": false}, "column_types": {"dpamt": "numeric", "dppct": "numeric", "ktwrt": "numeric", "otb_res_value": "numeric", "otb_spec_value": "numeric", "otb_value": "numeric", "rlwrt": "numeric", "mandt": "{{ 'string' if target.type in ['bigquery','spark','databricks'] else 'varchar' }}", "ebeln": "{{ 'string' if target.type in ['bigquery','spark','databricks'] else 'varchar' }}", "bukrs": "{{ 'string' if target.type in ['bigquery','spark','databricks'] else 'varchar' }}", "bstyp": "{{ 'string' if target.type in ['bigquery','spark','databricks'] else 'varchar' }}", "bsart": "{{ 'string' if target.type in ['bigquery','spark','databricks'] else 'varchar' }}", "lifnr": "{{ 'string' if target.type in ['bigquery','spark','databricks'] else 'varchar' }}", "aedat": "{{ 'string' if target.type in ['bigquery','spark','databricks'] else 'varchar' }}", "bedat": "{{ 'string' if target.type in ['bigquery','spark','databricks'] else 'varchar' }}", "kdatb": "{{ 'string' if target.type in ['bigquery','spark','databricks'] else 'varchar' }}", "kdate": "{{ 'string' if target.type in ['bigquery','spark','databricks'] else 'varchar' }}", "bwbdt": "{{ 'string' if target.type in ['bigquery','spark','databricks'] else 'varchar' }}", "angdt": "{{ 'string' if target.type in ['bigquery','spark','databricks'] else 'varchar' }}", "bnddt": "{{ 'string' if target.type in ['bigquery','spark','databricks'] else 'varchar' }}", "gwldt": "{{ 'string' if target.type in ['bigquery','spark','databricks'] else 'varchar' }}", "ihran": "{{ 'string' if target.type in ['bigquery','spark','databricks'] else 'varchar' }}", "dpdat": "{{ 'string' if target.type in ['bigquery','spark','databricks'] else 'varchar' }}", "release_date": "{{ 'string' if target.type in ['bigquery','spark','databricks'] else 'varchar' }}", "eq_eindt": "{{ 'string' if target.type in ['bigquery','spark','databricks'] else 'varchar' }}"}}, "created_at": 1756850325.8767467, "relation_name": "\"postgres\".\"public\".\"sap_ekko_data\"", "raw_code": "", "doc_blocks": [], "root_path": "/home/runner/work/dbt_sap/dbt_sap/integration_tests", "depends_on": {"macros": []}}, "seed.sap_integration_tests.sap_pa0008_data": {"database": "postgres", "schema": "public", "name": "sap_pa0008_data", "resource_type": "seed", "package_name": "sap_integration_tests", "path": "sap_pa0008_data.csv", "original_file_path": "seeds/sap_pa0008_data.csv", "unique_id": "seed.sap_integration_tests.sap_pa0008_data", "fqn": ["sap_integration_tests", "sap_pa0008_data"], "alias": "sap_pa0008_data", "checksum": {"name": "sha256", "checksum": "c3de9a879082898f9bdd0dea3c248f82438c96c2f43edcb40dd69b526cd812fb"}, "config": {"enabled": true, "alias": null, "schema": null, "database": null, "tags": [], "meta": {}, "group": null, "materialized": "seed", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [], "pre-hook": [], "quoting": {}, "column_types": {"_fivetran_rowid": "varchar", "_fivetran_synced": "timestamp", "aedtm": "varchar", "ancur": "varchar", "ansal": "numeric", "anz01": "numeric", "anz02": "numeric", "anz03": "numeric", "anz04": "numeric", "anz05": "numeric", "anz06": "numeric", "anz07": "numeric", "anz08": "numeric", "anz09": "numeric", "anz10": "numeric", "anz11": "numeric", "anz12": "numeric", "anz13": "numeric", "anz14": "numeric", "anz15": "numeric", "anz16": "numeric", "anz17": "numeric", "anz18": "numeric", "anz19": "numeric", "anz20": "numeric", "anz21": "numeric", "anz22": "numeric", "anz23": "numeric", "anz24": "numeric", "anz25": "numeric", "anz26": "numeric", "anz27": "numeric", "anz28": "numeric", "anz29": "numeric", "anz30": "numeric", "anz31": "numeric", "anz32": "numeric", "anz33": "numeric", "anz34": "numeric", "anz35": "numeric", "anz36": "numeric", "anz37": "numeric", "anz38": "numeric", "anz39": "numeric", "anz40": "numeric", "begda": "varchar", "bet01": "numeric", "bet02": "numeric", "bet03": "numeric", "bet04": "numeric", "bet05": "numeric", "bet06": "numeric", "bet07": "numeric", "bet08": "numeric", "bet09": "numeric", "bet10": "numeric", "bet11": "numeric", "bet12": "numeric", "bet13": "numeric", "bet14": "numeric", "bet15": "numeric", "bet16": "numeric", "bet17": "numeric", "bet18": "numeric", "bet19": "numeric", "bet20": "numeric", "bet21": "numeric", "bet22": "numeric", "bet23": "numeric", "bet24": "numeric", "bet25": "numeric", "bet26": "numeric", "bet27": "numeric", "bet28": "numeric", "bet29": "numeric", "bet30": "numeric", "bet31": "numeric", "bet32": "numeric", "bet33": "numeric", "bet34": "numeric", "bet35": "numeric", "bet36": "numeric", "bet37": "numeric", "bet38": "numeric", "bet39": "numeric", "bet40": "numeric", "bsgrd": "numeric", "cpind": "varchar", "divgv": "numeric", "ein01": "varchar", "ein02": "varchar", "ein03": "varchar", "ein04": "varchar", "ein05": "varchar", "ein06": "varchar", "ein07": "varchar", "ein08": "varchar", "ein09": "varchar", "ein10": "varchar", "ein11": "varchar", "ein12": "varchar", "ein13": "varchar", "ein14": "varchar", "ein15": "varchar", "ein16": "varchar", "ein17": "varchar", "ein18": "varchar", "ein19": "varchar", "ein20": "varchar", "ein21": "varchar", "ein22": "varchar", "ein23": "varchar", "ein24": "varchar", "ein25": "varchar", "ein26": "varchar", "ein27": "varchar", "ein28": "varchar", "ein29": "varchar", "ein30": "varchar", "ein31": "varchar", "ein32": "varchar", "ein33": "varchar", "ein34": "varchar", "ein35": "varchar", "ein36": "varchar", "ein37": "varchar", "ein38": "varchar", "ein39": "varchar", "ein40": "varchar", "endda": "varchar", "falgk": "varchar", "falgr": "varchar", "flag1": "varchar", "flag2": "varchar", "flag3": "varchar", "flag4": "varchar", "flaga": "varchar", "grpvl": "varchar", "histo": "varchar", "ind01": "varchar", "ind02": "varchar", "ind03": "varchar", "ind04": "varchar", "ind05": "varchar", "ind06": "varchar", "ind07": "varchar", "ind08": "varchar", "ind09": "varchar", "ind10": "varchar", "ind11": "varchar", "ind12": "varchar", "ind13": "varchar", "ind14": "varchar", "ind15": "varchar", "ind16": "varchar", "ind17": "varchar", "ind18": "varchar", "ind19": "varchar", "ind20": "varchar", "ind21": "varchar", "ind22": "varchar", "ind23": "varchar", "ind24": "varchar", "ind25": "varchar", "ind26": "varchar", "ind27": "varchar", "ind28": "varchar", "ind29": "varchar", "ind30": "varchar", "ind31": "varchar", "ind32": "varchar", "ind33": "varchar", "ind34": "varchar", "ind35": "varchar", "ind36": "varchar", "ind37": "varchar", "ind38": "varchar", "ind39": "varchar", "ind40": "varchar", "itbld": "varchar", "itxex": "varchar", "lga01": "varchar", "lga02": "varchar", "lga03": "varchar", "lga04": "varchar", "lga05": "varchar", "lga06": "varchar", "lga07": "varchar", "lga08": "varchar", "lga09": "varchar", "lga10": "varchar", "lga11": "varchar", "lga12": "varchar", "lga13": "varchar", "lga14": "varchar", "lga15": "varchar", "lga16": "varchar", "lga17": "varchar", "lga18": "varchar", "lga19": "varchar", "lga20": "varchar", "lga21": "varchar", "lga22": "varchar", "lga23": "varchar", "lga24": "varchar", "lga25": "varchar", "lga26": "varchar", "lga27": "varchar", "lga28": "varchar", "lga29": "varchar", "lga30": "varchar", "lga31": "varchar", "lga32": "varchar", "lga33": "varchar", "lga34": "varchar", "lga35": "varchar", "lga36": "varchar", "lga37": "varchar", "lga38": "varchar", "lga39": "varchar", "lga40": "varchar", "mandt": "varchar", "objps": "varchar", "opk01": "varchar", "opk02": "varchar", "opk03": "varchar", "opk04": "varchar", "opk05": "varchar", "opk06": "varchar", "opk07": "varchar", "opk08": "varchar", "opk09": "varchar", "opk10": "varchar", "opk11": "varchar", "opk12": "varchar", "opk13": "varchar", "opk14": "varchar", "opk15": "varchar", "opk16": "varchar", "opk17": "varchar", "opk18": "varchar", "opk19": "varchar", "opk20": "varchar", "opk21": "varchar", "opk22": "varchar", "opk23": "varchar", "opk24": "varchar", "opk25": "varchar", "opk26": "varchar", "opk27": "varchar", "opk28": "varchar", "opk29": "varchar", "opk30": "varchar", "opk31": "varchar", "opk32": "varchar", "opk33": "varchar", "opk34": "varchar", "opk35": "varchar", "opk36": "varchar", "opk37": "varchar", "opk38": "varchar", "opk39": "varchar", "opk40": "varchar", "ordex": "varchar", "orzst": "varchar", "partn": "varchar", "pernr": "varchar", "preas": "varchar", "refex": "varchar", "rese1": "varchar", "rese2": "varchar", "seqnr": "varchar", "sprps": "varchar", "stvor": "varchar", "subty": "varchar", "trfar": "varchar", "trfgb": "varchar", "trfgr": "varchar", "trfst": "varchar", "uname": "varchar", "vglgb": "varchar", "vglgr": "varchar", "vglst": "varchar", "vglsv": "varchar", "vglta": "varchar", "waers": "varchar"}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": false, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "delimiter": ",", "quote_columns": null}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": false, "node_color": null}, "patch_path": null, "build_path": null, "unrendered_config": {"docs": {"show": false}, "column_types": {"aedtm": "{{ 'string' if target.type in ['bigquery','spark','databricks'] else 'varchar' }}", "ancur": "{{ 'string' if target.type in ['bigquery','spark','databricks'] else 'varchar' }}", "ansal": "numeric", "anz01": "numeric", "anz02": "numeric", "anz03": "numeric", "anz04": "numeric", "anz05": "numeric", "anz06": "numeric", "anz07": "numeric", "anz08": "numeric", "anz09": "numeric", "anz10": "numeric", "anz11": "numeric", "anz12": "numeric", "anz13": "numeric", "anz14": "numeric", "anz15": "numeric", "anz16": "numeric", "anz17": "numeric", "anz18": "numeric", "anz19": "numeric", "anz20": "numeric", "anz21": "numeric", "anz22": "numeric", "anz23": "numeric", "anz24": "numeric", "anz25": "numeric", "anz26": "numeric", "anz27": "numeric", "anz28": "numeric", "anz29": "numeric", "anz30": "numeric", "anz31": "numeric", "anz32": "numeric", "anz33": "numeric", "anz34": "numeric", "anz35": "numeric", "anz36": "numeric", "anz37": "numeric", "anz38": "numeric", "anz39": "numeric", "anz40": "numeric", "begda": "{{ 'string' if target.type in ['bigquery','spark','databricks'] else 'varchar' }}", "bet01": "numeric", "bet02": "numeric", "bet03": "numeric", "bet04": "numeric", "bet05": "numeric", "bet06": "numeric", "bet07": "numeric", "bet08": "numeric", "bet09": "numeric", "bet10": "numeric", "bet11": "numeric", "bet12": "numeric", "bet13": "numeric", "bet14": "numeric", "bet15": "numeric", "bet16": "numeric", "bet17": "numeric", "bet18": "numeric", "bet19": "numeric", "bet20": "numeric", "bet21": "numeric", "bet22": "numeric", "bet23": "numeric", "bet24": "numeric", "bet25": "numeric", "bet26": "numeric", "bet27": "numeric", "bet28": "numeric", "bet29": "numeric", "bet30": "numeric", "bet31": "numeric", "bet32": "numeric", "bet33": "numeric", "bet34": "numeric", "bet35": "numeric", "bet36": "numeric", "bet37": "numeric", "bet38": "numeric", "bet39": "numeric", "bet40": "numeric", "bsgrd": "numeric", "cpind": "{{ 'string' if target.type in ['bigquery','spark','databricks'] else 'varchar' }}", "divgv": "numeric", "ein01": "{{ 'string' if target.type in ['bigquery','spark','databricks'] else 'varchar' }}", "ein02": "{{ 'string' if target.type in ['bigquery','spark','databricks'] else 'varchar' }}", "ein03": "{{ 'string' if target.type in ['bigquery','spark','databricks'] else 'varchar' }}", "ein04": "{{ 'string' if target.type in ['bigquery','spark','databricks'] else 'varchar' }}", "ein05": "{{ 'string' if target.type in ['bigquery','spark','databricks'] else 'varchar' }}", "ein06": "{{ 'string' if target.type in ['bigquery','spark','databricks'] else 'varchar' }}", "ein07": "{{ 'string' if target.type in ['bigquery','spark','databricks'] else 'varchar' }}", "ein08": "{{ 'string' if target.type in ['bigquery','spark','databricks'] else 'varchar' }}", "ein09": "{{ 'string' if target.type in ['bigquery','spark','databricks'] else 'varchar' }}", "ein10": "{{ 'string' if target.type in ['bigquery','spark','databricks'] else 'varchar' }}", "ein11": "{{ 'string' if target.type in ['bigquery','spark','databricks'] else 'varchar' }}", "ein12": "{{ 'string' if target.type in ['bigquery','spark','databricks'] else 'varchar' }}", "ein13": "{{ 'string' if target.type in ['bigquery','spark','databricks'] else 'varchar' }}", "ein14": "{{ 'string' if target.type in ['bigquery','spark','databricks'] else 'varchar' }}", "ein15": "{{ 'string' if target.type in ['bigquery','spark','databricks'] else 'varchar' }}", "ein16": "{{ 'string' if target.type in ['bigquery','spark','databricks'] else 'varchar' }}", "ein17": "{{ 'string' if target.type in ['bigquery','spark','databricks'] else 'varchar' }}", "ein18": "{{ 'string' if target.type in ['bigquery','spark','databricks'] else 'varchar' }}", "ein19": "{{ 'string' if target.type in ['bigquery','spark','databricks'] else 'varchar' }}", "ein20": "{{ 'string' if target.type in ['bigquery','spark','databricks'] else 'varchar' }}", "ein21": "{{ 'string' if target.type in ['bigquery','spark','databricks'] else 'varchar' }}", "ein22": "{{ 'string' if target.type in ['bigquery','spark','databricks'] else 'varchar' }}", "ein23": "{{ 'string' if target.type in ['bigquery','spark','databricks'] else 'varchar' }}", "ein24": "{{ 'string' if target.type in ['bigquery','spark','databricks'] else 'varchar' }}", "ein25": "{{ 'string' if target.type in ['bigquery','spark','databricks'] else 'varchar' }}", "ein26": "{{ 'string' if target.type in ['bigquery','spark','databricks'] else 'varchar' }}", "ein27": "{{ 'string' if target.type in ['bigquery','spark','databricks'] else 'varchar' }}", "ein28": "{{ 'string' if target.type in ['bigquery','spark','databricks'] else 'varchar' }}", "ein29": "{{ 'string' if target.type in ['bigquery','spark','databricks'] else 'varchar' }}", "ein30": "{{ 'string' if target.type in ['bigquery','spark','databricks'] else 'varchar' }}", "ein31": "{{ 'string' if target.type in ['bigquery','spark','databricks'] else 'varchar' }}", "ein32": "{{ 'string' if target.type in ['bigquery','spark','databricks'] else 'varchar' }}", "ein33": "{{ 'string' if target.type in ['bigquery','spark','databricks'] else 'varchar' }}", "ein34": "{{ 'string' if target.type in ['bigquery','spark','databricks'] else 'varchar' }}", "ein35": "{{ 'string' if target.type in ['bigquery','spark','databricks'] else 'varchar' }}", "ein36": "{{ 'string' if target.type in ['bigquery','spark','databricks'] else 'varchar' }}", "ein37": "{{ 'string' if target.type in ['bigquery','spark','databricks'] else 'varchar' }}", "ein38": "{{ 'string' if target.type in ['bigquery','spark','databricks'] else 'varchar' }}", "ein39": "{{ 'string' if target.type in ['bigquery','spark','databricks'] else 'varchar' }}", "ein40": "{{ 'string' if target.type in ['bigquery','spark','databricks'] else 'varchar' }}", "endda": "{{ 'string' if target.type in ['bigquery','spark','databricks'] else 'varchar' }}", "falgk": "{{ 'string' if target.type in ['bigquery','spark','databricks'] else 'varchar' }}", "falgr": "{{ 'string' if target.type in ['bigquery','spark','databricks'] else 'varchar' }}", "flag1": "{{ 'string' if target.type in ['bigquery','spark','databricks'] else 'varchar' }}", "flag2": "{{ 'string' if target.type in ['bigquery','spark','databricks'] else 'varchar' }}", "flag3": "{{ 'string' if target.type in ['bigquery','spark','databricks'] else 'varchar' }}", "flag4": "{{ 'string' if target.type in ['bigquery','spark','databricks'] else 'varchar' }}", "flaga": "{{ 'string' if target.type in ['bigquery','spark','databricks'] else 'varchar' }}", "grpvl": "{{ 'string' if target.type in ['bigquery','spark','databricks'] else 'varchar' }}", "histo": "{{ 'string' if target.type in ['bigquery','spark','databricks'] else 'varchar' }}", "ind01": "{{ 'string' if target.type in ['bigquery','spark','databricks'] else 'varchar' }}", "ind02": "{{ 'string' if target.type in ['bigquery','spark','databricks'] else 'varchar' }}", "ind03": "{{ 'string' if target.type in ['bigquery','spark','databricks'] else 'varchar' }}", "ind04": "{{ 'string' if target.type in ['bigquery','spark','databricks'] else 'varchar' }}", "ind05": "{{ 'string' if target.type in ['bigquery','spark','databricks'] else 'varchar' }}", "ind06": "{{ 'string' if target.type in ['bigquery','spark','databricks'] else 'varchar' }}", "ind07": "{{ 'string' if target.type in ['bigquery','spark','databricks'] else 'varchar' }}", "ind08": "{{ 'string' if target.type in ['bigquery','spark','databricks'] else 'varchar' }}", "ind09": "{{ 'string' if target.type in ['bigquery','spark','databricks'] else 'varchar' }}", "ind10": "{{ 'string' if target.type in ['bigquery','spark','databricks'] else 'varchar' }}", "ind11": "{{ 'string' if target.type in ['bigquery','spark','databricks'] else 'varchar' }}", "ind12": "{{ 'string' if target.type in ['bigquery','spark','databricks'] else 'varchar' }}", "ind13": "{{ 'string' if target.type in ['bigquery','spark','databricks'] else 'varchar' }}", "ind14": "{{ 'string' if target.type in ['bigquery','spark','databricks'] else 'varchar' }}", "ind15": "{{ 'string' if target.type in ['bigquery','spark','databricks'] else 'varchar' }}", "ind16": "{{ 'string' if target.type in ['bigquery','spark','databricks'] else 'varchar' }}", "ind17": "{{ 'string' if target.type in ['bigquery','spark','databricks'] else 'varchar' }}", "ind18": "{{ 'string' if target.type in ['bigquery','spark','databricks'] else 'varchar' }}", "ind19": "{{ 'string' if target.type in ['bigquery','spark','databricks'] else 'varchar' }}", "ind20": "{{ 'string' if target.type in ['bigquery','spark','databricks'] else 'varchar' }}", "ind21": "{{ 'string' if target.type in ['bigquery','spark','databricks'] else 'varchar' }}", "ind22": "{{ 'string' if target.type in ['bigquery','spark','databricks'] else 'varchar' }}", "ind23": "{{ 'string' if target.type in ['bigquery','spark','databricks'] else 'varchar' }}", "ind24": "{{ 'string' if target.type in ['bigquery','spark','databricks'] else 'varchar' }}", "ind25": "{{ 'string' if target.type in ['bigquery','spark','databricks'] else 'varchar' }}", "ind26": "{{ 'string' if target.type in ['bigquery','spark','databricks'] else 'varchar' }}", "ind27": "{{ 'string' if target.type in ['bigquery','spark','databricks'] else 'varchar' }}", "ind28": "{{ 'string' if target.type in ['bigquery','spark','databricks'] else 'varchar' }}", "ind29": "{{ 'string' if target.type in ['bigquery','spark','databricks'] else 'varchar' }}", "ind30": "{{ 'string' if target.type in ['bigquery','spark','databricks'] else 'varchar' }}", "ind31": "{{ 'string' if target.type in ['bigquery','spark','databricks'] else 'varchar' }}", "ind32": "{{ 'string' if target.type in ['bigquery','spark','databricks'] else 'varchar' }}", "ind33": "{{ 'string' if target.type in ['bigquery','spark','databricks'] else 'varchar' }}", "ind34": "{{ 'string' if target.type in ['bigquery','spark','databricks'] else 'varchar' }}", "ind35": "{{ 'string' if target.type in ['bigquery','spark','databricks'] else 'varchar' }}", "ind36": "{{ 'string' if target.type in ['bigquery','spark','databricks'] else 'varchar' }}", "ind37": "{{ 'string' if target.type in ['bigquery','spark','databricks'] else 'varchar' }}", "ind38": "{{ 'string' if target.type in ['bigquery','spark','databricks'] else 'varchar' }}", "ind39": "{{ 'string' if target.type in ['bigquery','spark','databricks'] else 'varchar' }}", "ind40": "{{ 'string' if target.type in ['bigquery','spark','databricks'] else 'varchar' }}", "itbld": "{{ 'string' if target.type in ['bigquery','spark','databricks'] else 'varchar' }}", "itxex": "{{ 'string' if target.type in ['bigquery','spark','databricks'] else 'varchar' }}", "lga01": "{{ 'string' if target.type in ['bigquery','spark','databricks'] else 'varchar' }}", "lga02": "{{ 'string' if target.type in ['bigquery','spark','databricks'] else 'varchar' }}", "lga03": "{{ 'string' if target.type in ['bigquery','spark','databricks'] else 'varchar' }}", "lga04": "{{ 'string' if target.type in ['bigquery','spark','databricks'] else 'varchar' }}", "lga05": "{{ 'string' if target.type in ['bigquery','spark','databricks'] else 'varchar' }}", "lga06": "{{ 'string' if target.type in ['bigquery','spark','databricks'] else 'varchar' }}", "lga07": "{{ 'string' if target.type in ['bigquery','spark','databricks'] else 'varchar' }}", "lga08": "{{ 'string' if target.type in ['bigquery','spark','databricks'] else 'varchar' }}", "lga09": "{{ 'string' if target.type in ['bigquery','spark','databricks'] else 'varchar' }}", "lga10": "{{ 'string' if target.type in ['bigquery','spark','databricks'] else 'varchar' }}", "lga11": "{{ 'string' if target.type in ['bigquery','spark','databricks'] else 'varchar' }}", "lga12": "{{ 'string' if target.type in ['bigquery','spark','databricks'] else 'varchar' }}", "lga13": "{{ 'string' if target.type in ['bigquery','spark','databricks'] else 'varchar' }}", "lga14": "{{ 'string' if target.type in ['bigquery','spark','databricks'] else 'varchar' }}", "lga15": "{{ 'string' if target.type in ['bigquery','spark','databricks'] else 'varchar' }}", "lga16": "{{ 'string' if target.type in ['bigquery','spark','databricks'] else 'varchar' }}", "lga17": "{{ 'string' if target.type in ['bigquery','spark','databricks'] else 'varchar' }}", "lga18": "{{ 'string' if target.type in ['bigquery','spark','databricks'] else 'varchar' }}", "lga19": "{{ 'string' if target.type in ['bigquery','spark','databricks'] else 'varchar' }}", "lga20": "{{ 'string' if target.type in ['bigquery','spark','databricks'] else 'varchar' }}", "lga21": "{{ 'string' if target.type in ['bigquery','spark','databricks'] else 'varchar' }}", "lga22": "{{ 'string' if target.type in ['bigquery','spark','databricks'] else 'varchar' }}", "lga23": "{{ 'string' if target.type in ['bigquery','spark','databricks'] else 'varchar' }}", "lga24": "{{ 'string' if target.type in ['bigquery','spark','databricks'] else 'varchar' }}", "lga25": "{{ 'string' if target.type in ['bigquery','spark','databricks'] else 'varchar' }}", "lga26": "{{ 'string' if target.type in ['bigquery','spark','databricks'] else 'varchar' }}", "lga27": "{{ 'string' if target.type in ['bigquery','spark','databricks'] else 'varchar' }}", "lga28": "{{ 'string' if target.type in ['bigquery','spark','databricks'] else 'varchar' }}", "lga29": "{{ 'string' if target.type in ['bigquery','spark','databricks'] else 'varchar' }}", "lga30": "{{ 'string' if target.type in ['bigquery','spark','databricks'] else 'varchar' }}", "lga31": "{{ 'string' if target.type in ['bigquery','spark','databricks'] else 'varchar' }}", "lga32": "{{ 'string' if target.type in ['bigquery','spark','databricks'] else 'varchar' }}", "lga33": "{{ 'string' if target.type in ['bigquery','spark','databricks'] else 'varchar' }}", "lga34": "{{ 'string' if target.type in ['bigquery','spark','databricks'] else 'varchar' }}", "lga35": "{{ 'string' if target.type in ['bigquery','spark','databricks'] else 'varchar' }}", "lga36": "{{ 'string' if target.type in ['bigquery','spark','databricks'] else 'varchar' }}", "lga37": "{{ 'string' if target.type in ['bigquery','spark','databricks'] else 'varchar' }}", "lga38": "{{ 'string' if target.type in ['bigquery','spark','databricks'] else 'varchar' }}", "lga39": "{{ 'string' if target.type in ['bigquery','spark','databricks'] else 'varchar' }}", "lga40": "{{ 'string' if target.type in ['bigquery','spark','databricks'] else 'varchar' }}", "mandt": "{{ 'string' if target.type in ['bigquery','spark','databricks'] else 'varchar' }}", "objps": "{{ 'string' if target.type in ['bigquery','spark','databricks'] else 'varchar' }}", "opk01": "{{ 'string' if target.type in ['bigquery','spark','databricks'] else 'varchar' }}", "opk02": "{{ 'string' if target.type in ['bigquery','spark','databricks'] else 'varchar' }}", "opk03": "{{ 'string' if target.type in ['bigquery','spark','databricks'] else 'varchar' }}", "opk04": "{{ 'string' if target.type in ['bigquery','spark','databricks'] else 'varchar' }}", "opk05": "{{ 'string' if target.type in ['bigquery','spark','databricks'] else 'varchar' }}", "opk06": "{{ 'string' if target.type in ['bigquery','spark','databricks'] else 'varchar' }}", "opk07": "{{ 'string' if target.type in ['bigquery','spark','databricks'] else 'varchar' }}", "opk08": "{{ 'string' if target.type in ['bigquery','spark','databricks'] else 'varchar' }}", "opk09": "{{ 'string' if target.type in ['bigquery','spark','databricks'] else 'varchar' }}", "opk10": "{{ 'string' if target.type in ['bigquery','spark','databricks'] else 'varchar' }}", "opk11": "{{ 'string' if target.type in ['bigquery','spark','databricks'] else 'varchar' }}", "opk12": "{{ 'string' if target.type in ['bigquery','spark','databricks'] else 'varchar' }}", "opk13": "{{ 'string' if target.type in ['bigquery','spark','databricks'] else 'varchar' }}", "opk14": "{{ 'string' if target.type in ['bigquery','spark','databricks'] else 'varchar' }}", "opk15": "{{ 'string' if target.type in ['bigquery','spark','databricks'] else 'varchar' }}", "opk16": "{{ 'string' if target.type in ['bigquery','spark','databricks'] else 'varchar' }}", "opk17": "{{ 'string' if target.type in ['bigquery','spark','databricks'] else 'varchar' }}", "opk18": "{{ 'string' if target.type in ['bigquery','spark','databricks'] else 'varchar' }}", "opk19": "{{ 'string' if target.type in ['bigquery','spark','databricks'] else 'varchar' }}", "opk20": "{{ 'string' if target.type in ['bigquery','spark','databricks'] else 'varchar' }}", "opk21": "{{ 'string' if target.type in ['bigquery','spark','databricks'] else 'varchar' }}", "opk22": "{{ 'string' if target.type in ['bigquery','spark','databricks'] else 'varchar' }}", "opk23": "{{ 'string' if target.type in ['bigquery','spark','databricks'] else 'varchar' }}", "opk24": "{{ 'string' if target.type in ['bigquery','spark','databricks'] else 'varchar' }}", "opk25": "{{ 'string' if target.type in ['bigquery','spark','databricks'] else 'varchar' }}", "opk26": "{{ 'string' if target.type in ['bigquery','spark','databricks'] else 'varchar' }}", "opk27": "{{ 'string' if target.type in ['bigquery','spark','databricks'] else 'varchar' }}", "opk28": "{{ 'string' if target.type in ['bigquery','spark','databricks'] else 'varchar' }}", "opk29": "{{ 'string' if target.type in ['bigquery','spark','databricks'] else 'varchar' }}", "opk30": "{{ 'string' if target.type in ['bigquery','spark','databricks'] else 'varchar' }}", "opk31": "{{ 'string' if target.type in ['bigquery','spark','databricks'] else 'varchar' }}", "opk32": "{{ 'string' if target.type in ['bigquery','spark','databricks'] else 'varchar' }}", "opk33": "{{ 'string' if target.type in ['bigquery','spark','databricks'] else 'varchar' }}", "opk34": "{{ 'string' if target.type in ['bigquery','spark','databricks'] else 'varchar' }}", "opk35": "{{ 'string' if target.type in ['bigquery','spark','databricks'] else 'varchar' }}", "opk36": "{{ 'string' if target.type in ['bigquery','spark','databricks'] else 'varchar' }}", "opk37": "{{ 'string' if target.type in ['bigquery','spark','databricks'] else 'varchar' }}", "opk38": "{{ 'string' if target.type in ['bigquery','spark','databricks'] else 'varchar' }}", "opk39": "{{ 'string' if target.type in ['bigquery','spark','databricks'] else 'varchar' }}", "opk40": "{{ 'string' if target.type in ['bigquery','spark','databricks'] else 'varchar' }}", "ordex": "{{ 'string' if target.type in ['bigquery','spark','databricks'] else 'varchar' }}", "orzst": "{{ 'string' if target.type in ['bigquery','spark','databricks'] else 'varchar' }}", "partn": "{{ 'string' if target.type in ['bigquery','spark','databricks'] else 'varchar' }}", "pernr": "{{ 'string' if target.type in ['bigquery','spark','databricks'] else 'varchar' }}", "preas": "{{ 'string' if target.type in ['bigquery','spark','databricks'] else 'varchar' }}", "refex": "{{ 'string' if target.type in ['bigquery','spark','databricks'] else 'varchar' }}", "rese1": "{{ 'string' if target.type in ['bigquery','spark','databricks'] else 'varchar' }}", "rese2": "{{ 'string' if target.type in ['bigquery','spark','databricks'] else 'varchar' }}", "seqnr": "{{ 'string' if target.type in ['bigquery','spark','databricks'] else 'varchar' }}", "sprps": "{{ 'string' if target.type in ['bigquery','spark','databricks'] else 'varchar' }}", "stvor": "{{ 'string' if target.type in ['bigquery','spark','databricks'] else 'varchar' }}", "subty": "{{ 'string' if target.type in ['bigquery','spark','databricks'] else 'varchar' }}", "trfar": "{{ 'string' if target.type in ['bigquery','spark','databricks'] else 'varchar' }}", "trfgb": "{{ 'string' if target.type in ['bigquery','spark','databricks'] else 'varchar' }}", "trfgr": "{{ 'string' if target.type in ['bigquery','spark','databricks'] else 'varchar' }}", "trfst": "{{ 'string' if target.type in ['bigquery','spark','databricks'] else 'varchar' }}", "uname": "{{ 'string' if target.type in ['bigquery','spark','databricks'] else 'varchar' }}", "vglgb": "{{ 'string' if target.type in ['bigquery','spark','databricks'] else 'varchar' }}", "vglgr": "{{ 'string' if target.type in ['bigquery','spark','databricks'] else 'varchar' }}", "vglst": "{{ 'string' if target.type in ['bigquery','spark','databricks'] else 'varchar' }}", "vglsv": "{{ 'string' if target.type in ['bigquery','spark','databricks'] else 'varchar' }}", "vglta": "{{ 'string' if target.type in ['bigquery','spark','databricks'] else 'varchar' }}", "waers": "{{ 'string' if target.type in ['bigquery','spark','databricks'] else 'varchar' }}"}}, "created_at": 1756850325.884055, "relation_name": "\"postgres\".\"public\".\"sap_pa0008_data\"", "raw_code": "", "doc_blocks": [], "root_path": "/home/runner/work/dbt_sap/dbt_sap/integration_tests", "depends_on": {"macros": []}}, "seed.sap_integration_tests.sap_ska1_data": {"database": "postgres", "schema": "public", "name": "sap_ska1_data", "resource_type": "seed", "package_name": "sap_integration_tests", "path": "sap_ska1_data.csv", "original_file_path": "seeds/sap_ska1_data.csv", "unique_id": "seed.sap_integration_tests.sap_ska1_data", "fqn": ["sap_integration_tests", "sap_ska1_data"], "alias": "sap_ska1_data", "checksum": {"name": "sha256", "checksum": "61a0ef87a4a8f2599f098f115a9205c00c2e5b144cc7009c4b87ff5ab819e0d3"}, "config": {"enabled": true, "alias": null, "schema": null, "database": null, "tags": [], "meta": {}, "group": null, "materialized": "seed", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [], "pre-hook": [], "quoting": {}, "column_types": {"_fivetran_rowid": "varchar", "_fivetran_synced": "timestamp", "erdat": "varchar", "mandt": "varchar", "sakan": "varchar", "saknr": "varchar"}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": false, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "delimiter": ",", "quote_columns": null}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": false, "node_color": null}, "patch_path": null, "build_path": null, "unrendered_config": {"docs": {"show": false}, "column_types": {"erdat": "{{ 'string' if target.type in ['bigquery','spark','databricks'] else 'varchar' }}", "mandt": "{{ 'string' if target.type in ['bigquery','spark','databricks'] else 'varchar' }}", "sakan": "{{ 'string' if target.type in ['bigquery','spark','databricks'] else 'varchar' }}", "saknr": "{{ 'string' if target.type in ['bigquery','spark','databricks'] else 'varchar' }}"}}, "created_at": 1756850325.8896942, "relation_name": "\"postgres\".\"public\".\"sap_ska1_data\"", "raw_code": "", "doc_blocks": [], "root_path": "/home/runner/work/dbt_sap/dbt_sap/integration_tests", "depends_on": {"macros": []}}, "seed.sap_integration_tests.sap_vbap_data": {"database": "postgres", "schema": "public", "name": "sap_vbap_data", "resource_type": "seed", "package_name": "sap_integration_tests", "path": "sap_vbap_data.csv", "original_file_path": "seeds/sap_vbap_data.csv", "unique_id": "seed.sap_integration_tests.sap_vbap_data", "fqn": ["sap_integration_tests", "sap_vbap_data"], "alias": "sap_vbap_data", "checksum": {"name": "sha256", "checksum": "a1265393111d1737009462db7a8d2f3b11fbc9f7745eacc8ab34526dee3fe3d5"}, "config": {"enabled": true, "alias": null, "schema": null, "database": null, "tags": [], "meta": {}, "group": null, "materialized": "seed", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [], "pre-hook": [], "quoting": {}, "column_types": {"_fivetran_rowid": "varchar", "_fivetran_synced": "timestamp", "ablfz": "numeric", "absfz": "numeric", "anltf": "numeric", "anzsn": "numeric", "brgew": "numeric", "cmkua": "numeric", "cmpre": "numeric", "cpd_updat": "numeric", "hvr_is_deleted": "numeric", "kbmeng": "numeric", "kbver": "numeric", "kever": "numeric", "klmeng": "numeric", "kpein": "numeric", "kwmeng": "numeric", "kzwi1": "numeric", "kzwi2": "numeric", "kzwi3": "numeric", "kzwi4": "numeric", "kzwi5": "numeric", "kzwi6": "numeric", "lfmng": "numeric", "lsmeng": "numeric", "netpr": "numeric", "netwr": "numeric", "ntgew": "numeric", "oifeetot": "numeric", "oih_folqty": "numeric", "oih_folqty_ex": "numeric", "oioilcon": "numeric", "smeng": "numeric", "stcur": "numeric", "stpos": "numeric", "uebto": "numeric", "umvkn": "numeric", "umvkz": "numeric", "umzim": "numeric", "umziz": "numeric", "untto": "numeric", "vbeaf": "numeric", "vbeav": "numeric", "volum": "numeric", "wavwr": "numeric", "zmeng": "numeric", "zwert": "numeric"}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": false, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "delimiter": ",", "quote_columns": null}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": false, "node_color": null}, "patch_path": null, "build_path": null, "unrendered_config": {"docs": {"show": false}, "column_types": {"ablfz": "numeric", "absfz": "numeric", "anltf": "numeric", "anzsn": "numeric", "brgew": "numeric", "cmkua": "numeric", "cmpre": "numeric", "cpd_updat": "numeric", "hvr_is_deleted": "numeric", "kbmeng": "numeric", "kbver": "numeric", "kever": "numeric", "klmeng": "numeric", "kpein": "numeric", "kwmeng": "numeric", "kzwi1": "numeric", "kzwi2": "numeric", "kzwi3": "numeric", "kzwi4": "numeric", "kzwi5": "numeric", "kzwi6": "numeric", "lfmng": "numeric", "lsmeng": "numeric", "netpr": "numeric", "netwr": "numeric", "ntgew": "numeric", "oifeetot": "numeric", "oih_folqty": "numeric", "oih_folqty_ex": "numeric", "oioilcon": "numeric", "smeng": "numeric", "stcur": "numeric", "stpos": "numeric", "uebto": "numeric", "umvkn": "numeric", "umvkz": "numeric", "umzim": "numeric", "umziz": "numeric", "untto": "numeric", "vbeaf": "numeric", "vbeav": "numeric", "volum": "numeric", "wavwr": "numeric", "zmeng": "numeric", "zwert": "numeric"}}, "created_at": 1756850325.8936121, "relation_name": "\"postgres\".\"public\".\"sap_vbap_data\"", "raw_code": "", "doc_blocks": [], "root_path": "/home/runner/work/dbt_sap/dbt_sap/integration_tests", "depends_on": {"macros": []}}, "seed.sap_integration_tests.sap_t503_data": {"database": "postgres", "schema": "public", "name": "sap_t503_data", "resource_type": "seed", "package_name": "sap_integration_tests", "path": "sap_t503_data.csv", "original_file_path": "seeds/sap_t503_data.csv", "unique_id": "seed.sap_integration_tests.sap_t503_data", "fqn": ["sap_integration_tests", "sap_t503_data"], "alias": "sap_t503_data", "checksum": {"name": "sha256", "checksum": "916589ea29dd664521543a0dc432f54c9c8f4196355271fd360dcdba60e2bb61"}, "config": {"enabled": true, "alias": null, "schema": null, "database": null, "tags": [], "meta": {}, "group": null, "materialized": "seed", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [], "pre-hook": [], "quoting": {}, "column_types": {"_fivetran_rowid": "varchar", "_fivetran_synced": "timestamp", "abart": "varchar", "abtyp": "varchar", "aksta": "varchar", "ansta": "varchar", "antyp": "varchar", "austa": "varchar", "burkz": "varchar", "inwid": "varchar", "konty": "varchar", "mandt": "varchar", "molga": "varchar", "persg": "varchar", "persk": "varchar", "trfkz": "varchar", "typsz": "varchar", "zeity": "varchar"}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": false, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "delimiter": ",", "quote_columns": null}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": false, "node_color": null}, "patch_path": null, "build_path": null, "unrendered_config": {"docs": {"show": false}, "column_types": {"abart": "{{ 'string' if target.type in ['bigquery','spark','databricks'] else 'varchar' }}", "abtyp": "{{ 'string' if target.type in ['bigquery','spark','databricks'] else 'varchar' }}", "aksta": "{{ 'string' if target.type in ['bigquery','spark','databricks'] else 'varchar' }}", "ansta": "{{ 'string' if target.type in ['bigquery','spark','databricks'] else 'varchar' }}", "antyp": "{{ 'string' if target.type in ['bigquery','spark','databricks'] else 'varchar' }}", "austa": "{{ 'string' if target.type in ['bigquery','spark','databricks'] else 'varchar' }}", "burkz": "{{ 'string' if target.type in ['bigquery','spark','databricks'] else 'varchar' }}", "inwid": "{{ 'string' if target.type in ['bigquery','spark','databricks'] else 'varchar' }}", "konty": "{{ 'string' if target.type in ['bigquery','spark','databricks'] else 'varchar' }}", "mandt": "{{ 'string' if target.type in ['bigquery','spark','databricks'] else 'varchar' }}", "molga": "{{ 'string' if target.type in ['bigquery','spark','databricks'] else 'varchar' }}", "persg": "{{ 'string' if target.type in ['bigquery','spark','databricks'] else 'varchar' }}", "persk": "{{ 'string' if target.type in ['bigquery','spark','databricks'] else 'varchar' }}", "trfkz": "{{ 'string' if target.type in ['bigquery','spark','databricks'] else 'varchar' }}", "typsz": "{{ 'string' if target.type in ['bigquery','spark','databricks'] else 'varchar' }}", "zeity": "{{ 'string' if target.type in ['bigquery','spark','databricks'] else 'varchar' }}"}}, "created_at": 1756850325.8975003, "relation_name": "\"postgres\".\"public\".\"sap_t503_data\"", "raw_code": "", "doc_blocks": [], "root_path": "/home/runner/work/dbt_sap/dbt_sap/integration_tests", "depends_on": {"macros": []}}, "seed.sap_integration_tests.sap_pa0001_data": {"database": "postgres", "schema": "public", "name": "sap_pa0001_data", "resource_type": "seed", "package_name": "sap_integration_tests", "path": "sap_pa0001_data.csv", "original_file_path": "seeds/sap_pa0001_data.csv", "unique_id": "seed.sap_integration_tests.sap_pa0001_data", "fqn": ["sap_integration_tests", "sap_pa0001_data"], "alias": "sap_pa0001_data", "checksum": {"name": "sha256", "checksum": "5590aac89c1934600f0a4d163016be7a2ca3e238d5c5729e5a571d3d5009f4a9"}, "config": {"enabled": true, "alias": null, "schema": null, "database": null, "tags": [], "meta": {}, "group": null, "materialized": "seed", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [], "pre-hook": [], "quoting": {}, "column_types": {"_fivetran_rowid": "varchar", "_fivetran_synced": "timestamp", "abkrs": "varchar", "aedtm": "varchar", "ansvh": "varchar", "begda": "varchar", "btrtl": "varchar", "budget_pd": "varchar", "bukrs": "varchar", "ename": "varchar", "endda": "varchar", "fistl": "varchar", "fkber": "varchar", "flag1": "varchar", "flag2": "varchar", "flag3": "varchar", "flag4": "varchar", "geber": "varchar", "grant_nbr": "varchar", "grpvl": "varchar", "gsber": "varchar", "histo": "varchar", "itbld": "varchar", "itxex": "varchar", "juper": "varchar", "kokrs": "varchar", "kostl": "varchar", "mandt": "varchar", "mstbr": "varchar", "objps": "varchar", "ordex": "varchar", "orgeh": "varchar", "otype": "varchar", "pernr": "varchar", "persg": "varchar", "persk": "varchar", "plans": "varchar", "preas": "varchar", "refex": "varchar", "rese1": "varchar", "rese2": "varchar", "sacha": "varchar", "sachp": "varchar", "sachz": "varchar", "sbmod": "varchar", "seqnr": "varchar", "sgmnt": "varchar", "sname": "varchar", "sprps": "varchar", "stell": "varchar", "subty": "varchar", "uname": "varchar", "vdsk1": "varchar", "werks": "varchar"}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": false, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "delimiter": ",", "quote_columns": null}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": false, "node_color": null}, "patch_path": null, "build_path": null, "unrendered_config": {"docs": {"show": false}, "column_types": {"abkrs": "{{ 'string' if target.type in ['bigquery','spark','databricks'] else 'varchar' }}", "aedtm": "{{ 'string' if target.type in ['bigquery','spark','databricks'] else 'varchar' }}", "ansvh": "{{ 'string' if target.type in ['bigquery','spark','databricks'] else 'varchar' }}", "begda": "{{ 'string' if target.type in ['bigquery','spark','databricks'] else 'varchar' }}", "btrtl": "{{ 'string' if target.type in ['bigquery','spark','databricks'] else 'varchar' }}", "budget_pd": "{{ 'string' if target.type in ['bigquery','spark','databricks'] else 'varchar' }}", "bukrs": "{{ 'string' if target.type in ['bigquery','spark','databricks'] else 'varchar' }}", "ename": "{{ 'string' if target.type in ['bigquery','spark','databricks'] else 'varchar' }}", "endda": "{{ 'string' if target.type in ['bigquery','spark','databricks'] else 'varchar' }}", "fistl": "{{ 'string' if target.type in ['bigquery','spark','databricks'] else 'varchar' }}", "fkber": "{{ 'string' if target.type in ['bigquery','spark','databricks'] else 'varchar' }}", "flag1": "{{ 'string' if target.type in ['bigquery','spark','databricks'] else 'varchar' }}", "flag2": "{{ 'string' if target.type in ['bigquery','spark','databricks'] else 'varchar' }}", "flag3": "{{ 'string' if target.type in ['bigquery','spark','databricks'] else 'varchar' }}", "flag4": "{{ 'string' if target.type in ['bigquery','spark','databricks'] else 'varchar' }}", "geber": "{{ 'string' if target.type in ['bigquery','spark','databricks'] else 'varchar' }}", "grant_nbr": "{{ 'string' if target.type in ['bigquery','spark','databricks'] else 'varchar' }}", "grpvl": "{{ 'string' if target.type in ['bigquery','spark','databricks'] else 'varchar' }}", "gsber": "{{ 'string' if target.type in ['bigquery','spark','databricks'] else 'varchar' }}", "histo": "{{ 'string' if target.type in ['bigquery','spark','databricks'] else 'varchar' }}", "itbld": "{{ 'string' if target.type in ['bigquery','spark','databricks'] else 'varchar' }}", "itxex": "{{ 'string' if target.type in ['bigquery','spark','databricks'] else 'varchar' }}", "juper": "{{ 'string' if target.type in ['bigquery','spark','databricks'] else 'varchar' }}", "kokrs": "{{ 'string' if target.type in ['bigquery','spark','databricks'] else 'varchar' }}", "kostl": "{{ 'string' if target.type in ['bigquery','spark','databricks'] else 'varchar' }}", "mandt": "{{ 'string' if target.type in ['bigquery','spark','databricks'] else 'varchar' }}", "mstbr": "{{ 'string' if target.type in ['bigquery','spark','databricks'] else 'varchar' }}", "objps": "{{ 'string' if target.type in ['bigquery','spark','databricks'] else 'varchar' }}", "ordex": "{{ 'string' if target.type in ['bigquery','spark','databricks'] else 'varchar' }}", "orgeh": "{{ 'string' if target.type in ['bigquery','spark','databricks'] else 'varchar' }}", "otype": "{{ 'string' if target.type in ['bigquery','spark','databricks'] else 'varchar' }}", "pernr": "{{ 'string' if target.type in ['bigquery','spark','databricks'] else 'varchar' }}", "persg": "{{ 'string' if target.type in ['bigquery','spark','databricks'] else 'varchar' }}", "persk": "{{ 'string' if target.type in ['bigquery','spark','databricks'] else 'varchar' }}", "plans": "{{ 'string' if target.type in ['bigquery','spark','databricks'] else 'varchar' }}", "preas": "{{ 'string' if target.type in ['bigquery','spark','databricks'] else 'varchar' }}", "refex": "{{ 'string' if target.type in ['bigquery','spark','databricks'] else 'varchar' }}", "rese1": "{{ 'string' if target.type in ['bigquery','spark','databricks'] else 'varchar' }}", "rese2": "{{ 'string' if target.type in ['bigquery','spark','databricks'] else 'varchar' }}", "sacha": "{{ 'string' if target.type in ['bigquery','spark','databricks'] else 'varchar' }}", "sachp": "{{ 'string' if target.type in ['bigquery','spark','databricks'] else 'varchar' }}", "sachz": "{{ 'string' if target.type in ['bigquery','spark','databricks'] else 'varchar' }}", "sbmod": "{{ 'string' if target.type in ['bigquery','spark','databricks'] else 'varchar' }}", "seqnr": "{{ 'string' if target.type in ['bigquery','spark','databricks'] else 'varchar' }}", "sgmnt": "{{ 'string' if target.type in ['bigquery','spark','databricks'] else 'varchar' }}", "sname": "{{ 'string' if target.type in ['bigquery','spark','databricks'] else 'varchar' }}", "sprps": "{{ 'string' if target.type in ['bigquery','spark','databricks'] else 'varchar' }}", "stell": "{{ 'string' if target.type in ['bigquery','spark','databricks'] else 'varchar' }}", "subty": "{{ 'string' if target.type in ['bigquery','spark','databricks'] else 'varchar' }}", "uname": "{{ 'string' if target.type in ['bigquery','spark','databricks'] else 'varchar' }}", "vdsk1": "{{ 'string' if target.type in ['bigquery','spark','databricks'] else 'varchar' }}", "werks": "{{ 'string' if target.type in ['bigquery','spark','databricks'] else 'varchar' }}"}}, "created_at": 1756850325.901719, "relation_name": "\"postgres\".\"public\".\"sap_pa0001_data\"", "raw_code": "", "doc_blocks": [], "root_path": "/home/runner/work/dbt_sap/dbt_sap/integration_tests", "depends_on": {"macros": []}}, "seed.sap_integration_tests.sap_vbup_data": {"database": "postgres", "schema": "public", "name": "sap_vbup_data", "resource_type": "seed", "package_name": "sap_integration_tests", "path": "sap_vbup_data.csv", "original_file_path": "seeds/sap_vbup_data.csv", "unique_id": "seed.sap_integration_tests.sap_vbup_data", "fqn": ["sap_integration_tests", "sap_vbup_data"], "alias": "sap_vbup_data", "checksum": {"name": "sha256", "checksum": "f8ced1099e05ca3cadbbb499aacb2bc9b5de0ae2e77db9fd48e78a49750181b0"}, "config": {"enabled": true, "alias": null, "schema": null, "database": null, "tags": [], "meta": {}, "group": null, "materialized": "seed", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [], "pre-hook": [], "quoting": {}, "column_types": {"_fivetran_rowid": "varchar", "_fivetran_synced": "timestamp"}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": false, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "delimiter": ",", "quote_columns": null}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": false, "node_color": null}, "patch_path": null, "build_path": null, "unrendered_config": {"docs": {"show": false}, "column_types": {"_fivetran_rowid": "{{ 'string' if target.type in ['bigquery','spark','databricks'] else 'varchar' }}", "_fivetran_synced": "timestamp"}}, "created_at": 1756850325.9053435, "relation_name": "\"postgres\".\"public\".\"sap_vbup_data\"", "raw_code": "", "doc_blocks": [], "root_path": "/home/runner/work/dbt_sap/dbt_sap/integration_tests", "depends_on": {"macros": []}}, "seed.sap_integration_tests.sap_mara_data": {"database": "postgres", "schema": "public", "name": "sap_mara_data", "resource_type": "seed", "package_name": "sap_integration_tests", "path": "sap_mara_data.csv", "original_file_path": "seeds/sap_mara_data.csv", "unique_id": "seed.sap_integration_tests.sap_mara_data", "fqn": ["sap_integration_tests", "sap_mara_data"], "alias": "sap_mara_data", "checksum": {"name": "sha256", "checksum": "74b82ee7d2e267748bf3f0c9fd67c1d656a7833f5b7b888fcf37e5dfff0eaa8f"}, "config": {"enabled": true, "alias": null, "schema": null, "database": null, "tags": [], "meta": {}, "group": null, "materialized": "seed", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [], "pre-hook": [], "quoting": {}, "column_types": {"_fivetran_rowid": "varchar", "_fivetran_synced": "timestamp", "blanz": "varchar", "compl": "varchar", "cuobf": "varchar", "datab": "varchar", "ersda": "varchar", "fuelg": "varchar", "laeda": "varchar", "liqdt": "varchar", "mandt": "varchar", "matnr": "varchar", "mhdhb": "varchar", "mhdlp": "varchar", "mhdrz": "varchar", "mstde": "varchar", "mstdv": "varchar", "stfak": "varchar", "vpreh": "varchar", "breit": "numeric", "brgew": "numeric", "ergew": "numeric", "ervol": "numeric", "gewto": "numeric", "hoehe": "numeric", "inhal": "numeric", "inhbr": "numeric", "laeng": "numeric", "ntgew": "numeric", "volto": "numeric", "volum": "numeric", "wesch": "numeric"}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": false, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "delimiter": ",", "quote_columns": null}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": false, "node_color": null}, "patch_path": null, "build_path": null, "unrendered_config": {"docs": {"show": false}, "column_types": {"blanz": "{{ 'string' if target.type in ['bigquery','spark','databricks'] else 'varchar' }}", "compl": "{{ 'string' if target.type in ['bigquery','spark','databricks'] else 'varchar' }}", "cuobf": "{{ 'string' if target.type in ['bigquery','spark','databricks'] else 'varchar' }}", "datab": "{{ 'string' if target.type in ['bigquery','spark','databricks'] else 'varchar' }}", "ersda": "{{ 'string' if target.type in ['bigquery','spark','databricks'] else 'varchar' }}", "fuelg": "{{ 'string' if target.type in ['bigquery','spark','databricks'] else 'varchar' }}", "laeda": "{{ 'string' if target.type in ['bigquery','spark','databricks'] else 'varchar' }}", "liqdt": "{{ 'string' if target.type in ['bigquery','spark','databricks'] else 'varchar' }}", "mandt": "{{ 'string' if target.type in ['bigquery','spark','databricks'] else 'varchar' }}", "matnr": "{{ 'string' if target.type in ['bigquery','spark','databricks'] else 'varchar' }}", "mhdhb": "{{ 'string' if target.type in ['bigquery','spark','databricks'] else 'varchar' }}", "mhdlp": "{{ 'string' if target.type in ['bigquery','spark','databricks'] else 'varchar' }}", "mhdrz": "{{ 'string' if target.type in ['bigquery','spark','databricks'] else 'varchar' }}", "mstde": "{{ 'string' if target.type in ['bigquery','spark','databricks'] else 'varchar' }}", "mstdv": "{{ 'string' if target.type in ['bigquery','spark','databricks'] else 'varchar' }}", "stfak": "{{ 'string' if target.type in ['bigquery','spark','databricks'] else 'varchar' }}", "vpreh": "{{ 'string' if target.type in ['bigquery','spark','databricks'] else 'varchar' }}", "breit": "numeric", "brgew": "numeric", "ergew": "numeric", "ervol": "numeric", "gewto": "numeric", "hoehe": "numeric", "inhal": "numeric", "inhbr": "numeric", "laeng": "numeric", "ntgew": "numeric", "volto": "numeric", "volum": "numeric", "wesch": "numeric"}}, "created_at": 1756850325.9089098, "relation_name": "\"postgres\".\"public\".\"sap_mara_data\"", "raw_code": "", "doc_blocks": [], "root_path": "/home/runner/work/dbt_sap/dbt_sap/integration_tests", "depends_on": {"macros": []}}, "seed.sap_integration_tests.sap_tvagt_data": {"database": "postgres", "schema": "public", "name": "sap_tvagt_data", "resource_type": "seed", "package_name": "sap_integration_tests", "path": "sap_tvagt_data.csv", "original_file_path": "seeds/sap_tvagt_data.csv", "unique_id": "seed.sap_integration_tests.sap_tvagt_data", "fqn": ["sap_integration_tests", "sap_tvagt_data"], "alias": "sap_tvagt_data", "checksum": {"name": "sha256", "checksum": "8eeecfee9430382093ae0e5af3605e29446f8b30a75ddd930cb8aadd6d364cf7"}, "config": {"enabled": true, "alias": null, "schema": null, "database": null, "tags": [], "meta": {}, "group": null, "materialized": "seed", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [], "pre-hook": [], "quoting": {}, "column_types": {"_fivetran_rowid": "varchar", "_fivetran_synced": "timestamp", "mandt": "varchar", "abgru": "varchar", "spras": "varchar", "bezei": "varchar"}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": false, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "delimiter": ",", "quote_columns": null}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": false, "node_color": null}, "patch_path": null, "build_path": null, "unrendered_config": {"docs": {"show": false}, "column_types": {"mandt": "{{ 'string' if target.type in ['bigquery','spark','databricks'] else 'varchar' }}", "abgru": "{{ 'string' if target.type in ['bigquery','spark','databricks'] else 'varchar' }}", "spras": "{{ 'string' if target.type in ['bigquery','spark','databricks'] else 'varchar' }}", "bezei": "{{ 'string' if target.type in ['bigquery','spark','databricks'] else 'varchar' }}"}}, "created_at": 1756850325.9125347, "relation_name": "\"postgres\".\"public\".\"sap_tvagt_data\"", "raw_code": "", "doc_blocks": [], "root_path": "/home/runner/work/dbt_sap/dbt_sap/integration_tests", "depends_on": {"macros": []}}, "seed.sap_integration_tests.sap_bkpf_data": {"database": "postgres", "schema": "public", "name": "sap_bkpf_data", "resource_type": "seed", "package_name": "sap_integration_tests", "path": "sap_bkpf_data.csv", "original_file_path": "seeds/sap_bkpf_data.csv", "unique_id": "seed.sap_integration_tests.sap_bkpf_data", "fqn": ["sap_integration_tests", "sap_bkpf_data"], "alias": "sap_bkpf_data", "checksum": {"name": "sha256", "checksum": "bbb03e65ccade08c429f85465ac14d8d14211410610fcf941e66cb3172901e85"}, "config": {"enabled": true, "alias": null, "schema": null, "database": null, "tags": [], "meta": {}, "group": null, "materialized": "seed", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [], "pre-hook": [], "quoting": {}, "column_types": {"_fivetran_rowid": "varchar", "_fivetran_synced": "timestamp", "aedat": "varchar", "awkey": "varchar", "belnr": "varchar", "bldat": "varchar", "budat": "varchar", "cpudt": "varchar", "cputm": "varchar", "ctxkrs": "numeric", "frath": "numeric", "kursf": "numeric", "kurs2": "numeric", "kurs3": "numeric", "kursx": "numeric", "kur2x": "numeric", "kur3x": "numeric", "kzkrs": "numeric", "reindat": "varchar", "stodt": "varchar", "txkrs": "numeric", "upddt": "varchar", "wwert": "varchar"}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": false, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "delimiter": ",", "quote_columns": null}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": false, "node_color": null}, "patch_path": null, "build_path": null, "unrendered_config": {"docs": {"show": false}, "column_types": {"aedat": "{{ 'string' if target.type in ['bigquery','spark','databricks'] else 'varchar' }}", "awkey": "{{ 'string' if target.type in ['bigquery','spark','databricks'] else 'varchar' }}", "belnr": "{{ 'string' if target.type in ['bigquery','spark','databricks'] else 'varchar' }}", "bldat": "{{ 'string' if target.type in ['bigquery','spark','databricks'] else 'varchar' }}", "budat": "{{ 'string' if target.type in ['bigquery','spark','databricks'] else 'varchar' }}", "cpudt": "{{ 'string' if target.type in ['bigquery','spark','databricks'] else 'varchar' }}", "cputm": "{{ 'string' if target.type in ['bigquery','spark','databricks'] else 'varchar' }}", "ctxkrs": "numeric", "frath": "numeric", "kursf": "numeric", "kurs2": "numeric", "kurs3": "numeric", "kursx": "numeric", "kur2x": "numeric", "kur3x": "numeric", "kzkrs": "numeric", "reindat": "{{ 'string' if target.type in ['bigquery','spark','databricks'] else 'varchar' }}", "stodt": "{{ 'string' if target.type in ['bigquery','spark','databricks'] else 'varchar' }}", "txkrs": "numeric", "upddt": "{{ 'string' if target.type in ['bigquery','spark','databricks'] else 'varchar' }}", "wwert": "{{ 'string' if target.type in ['bigquery','spark','databricks'] else 'varchar' }}"}}, "created_at": 1756850325.916163, "relation_name": "\"postgres\".\"public\".\"sap_bkpf_data\"", "raw_code": "", "doc_blocks": [], "root_path": "/home/runner/work/dbt_sap/dbt_sap/integration_tests", "depends_on": {"macros": []}}, "seed.sap_integration_tests.sap_dd07t_data": {"database": "postgres", "schema": "public", "name": "sap_dd07t_data", "resource_type": "seed", "package_name": "sap_integration_tests", "path": "sap_dd07t_data.csv", "original_file_path": "seeds/sap_dd07t_data.csv", "unique_id": "seed.sap_integration_tests.sap_dd07t_data", "fqn": ["sap_integration_tests", "sap_dd07t_data"], "alias": "sap_dd07t_data", "checksum": {"name": "sha256", "checksum": "fd27c6d56a433f25dd91b16dde8b28085b31aa969c468f6849c0b7f1e58df204"}, "config": {"enabled": true, "alias": null, "schema": null, "database": null, "tags": [], "meta": {}, "group": null, "materialized": "seed", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [], "pre-hook": [], "quoting": {}, "column_types": {"_fivetran_rowid": "varchar", "_fivetran_synced": "timestamp", "domname": "varchar", "domvalue_l": "varchar", "as4vers": "varchar", "ddlanguage": "varchar", "ddtext": "varchar"}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": false, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "delimiter": ",", "quote_columns": null}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": false, "node_color": null}, "patch_path": null, "build_path": null, "unrendered_config": {"docs": {"show": false}, "column_types": {"domname": "{{ 'string' if target.type in ['bigquery','spark','databricks'] else 'varchar' }}", "domvalue_l": "{{ 'string' if target.type in ['bigquery','spark','databricks'] else 'varchar' }}", "as4vers": "{{ 'string' if target.type in ['bigquery','spark','databricks'] else 'varchar' }}", "ddlanguage": "{{ 'string' if target.type in ['bigquery','spark','databricks'] else 'varchar' }}", "ddtext": "{{ 'string' if target.type in ['bigquery','spark','databricks'] else 'varchar' }}"}}, "created_at": 1756850325.919789, "relation_name": "\"postgres\".\"public\".\"sap_dd07t_data\"", "raw_code": "", "doc_blocks": [], "root_path": "/home/runner/work/dbt_sap/dbt_sap/integration_tests", "depends_on": {"macros": []}}, "seed.sap_integration_tests.sap_vbuk_data": {"database": "postgres", "schema": "public", "name": "sap_vbuk_data", "resource_type": "seed", "package_name": "sap_integration_tests", "path": "sap_vbuk_data.csv", "original_file_path": "seeds/sap_vbuk_data.csv", "unique_id": "seed.sap_integration_tests.sap_vbuk_data", "fqn": ["sap_integration_tests", "sap_vbuk_data"], "alias": "sap_vbuk_data", "checksum": {"name": "sha256", "checksum": "7bc5e79d57db765c332ce44b684004326332654d4eedd0ec9b05aee6376a35a1"}, "config": {"enabled": true, "alias": null, "schema": null, "database": null, "tags": [], "meta": {}, "group": null, "materialized": "seed", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [], "pre-hook": [], "quoting": {}, "column_types": {"_fivetran_rowid": "varchar", "_fivetran_synced": "timestamp"}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": false, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "delimiter": ",", "quote_columns": null}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": false, "node_color": null}, "patch_path": null, "build_path": null, "unrendered_config": {"docs": {"show": false}, "column_types": {"_fivetran_rowid": "{{ 'string' if target.type in ['bigquery','spark','databricks'] else 'varchar' }}", "_fivetran_synced": "timestamp"}}, "created_at": 1756850325.9294412, "relation_name": "\"postgres\".\"public\".\"sap_vbuk_data\"", "raw_code": "", "doc_blocks": [], "root_path": "/home/runner/work/dbt_sap/dbt_sap/integration_tests", "depends_on": {"macros": []}}, "seed.sap_integration_tests.sap_t024e_data": {"database": "postgres", "schema": "public", "name": "sap_t024e_data", "resource_type": "seed", "package_name": "sap_integration_tests", "path": "sap_t024e_data.csv", "original_file_path": "seeds/sap_t024e_data.csv", "unique_id": "seed.sap_integration_tests.sap_t024e_data", "fqn": ["sap_integration_tests", "sap_t024e_data"], "alias": "sap_t024e_data", "checksum": {"name": "sha256", "checksum": "a2eb0b917caf6742bd92f05a40c64e9b4efe63202c04cd65a31502d996599337"}, "config": {"enabled": true, "alias": null, "schema": null, "database": null, "tags": [], "meta": {}, "group": null, "materialized": "seed", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [], "pre-hook": [], "quoting": {}, "column_types": {"_fivetran_rowid": "varchar", "_fivetran_synced": "timestamp"}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": false, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "delimiter": ",", "quote_columns": null}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": false, "node_color": null}, "patch_path": null, "build_path": null, "unrendered_config": {"docs": {"show": false}, "column_types": {"_fivetran_rowid": "{{ 'string' if target.type in ['bigquery','spark','databricks'] else 'varchar' }}", "_fivetran_synced": "timestamp"}}, "created_at": 1756850325.9337, "relation_name": "\"postgres\".\"public\".\"sap_t024e_data\"", "raw_code": "", "doc_blocks": [], "root_path": "/home/runner/work/dbt_sap/dbt_sap/integration_tests", "depends_on": {"macros": []}}, "seed.sap_integration_tests.sap_t161t_data": {"database": "postgres", "schema": "public", "name": "sap_t161t_data", "resource_type": "seed", "package_name": "sap_integration_tests", "path": "sap_t161t_data.csv", "original_file_path": "seeds/sap_t161t_data.csv", "unique_id": "seed.sap_integration_tests.sap_t161t_data", "fqn": ["sap_integration_tests", "sap_t161t_data"], "alias": "sap_t161t_data", "checksum": {"name": "sha256", "checksum": "3dc0774eb5e5d8eb37dfa0fb14f55779ebc1b38cf25362a9a4948bff9aa7b217"}, "config": {"enabled": true, "alias": null, "schema": null, "database": null, "tags": [], "meta": {}, "group": null, "materialized": "seed", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [], "pre-hook": [], "quoting": {}, "column_types": {"_fivetran_rowid": "varchar", "_fivetran_synced": "timestamp", "bstyp": "varchar", "bsart": "varchar", "spras": "varchar", "batxt": "varchar"}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": false, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "delimiter": ",", "quote_columns": null}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": false, "node_color": null}, "patch_path": null, "build_path": null, "unrendered_config": {"docs": {"show": false}, "column_types": {"bstyp": "{{ 'string' if target.type in ['bigquery','spark','databricks'] else 'varchar' }}", "bsart": "{{ 'string' if target.type in ['bigquery','spark','databricks'] else 'varchar' }}", "spras": "{{ 'string' if target.type in ['bigquery','spark','databricks'] else 'varchar' }}", "batxt": "{{ 'string' if target.type in ['bigquery','spark','databricks'] else 'varchar' }}"}}, "created_at": 1756850325.9369404, "relation_name": "\"postgres\".\"public\".\"sap_t161t_data\"", "raw_code": "", "doc_blocks": [], "root_path": "/home/runner/work/dbt_sap/dbt_sap/integration_tests", "depends_on": {"macros": []}}, "seed.sap_integration_tests.sap_makt_data": {"database": "postgres", "schema": "public", "name": "sap_makt_data", "resource_type": "seed", "package_name": "sap_integration_tests", "path": "sap_makt_data.csv", "original_file_path": "seeds/sap_makt_data.csv", "unique_id": "seed.sap_integration_tests.sap_makt_data", "fqn": ["sap_integration_tests", "sap_makt_data"], "alias": "sap_makt_data", "checksum": {"name": "sha256", "checksum": "f10dd582165e088648042effbe4773b9d7703f740df10c8c5472d0947c935cef"}, "config": {"enabled": true, "alias": null, "schema": null, "database": null, "tags": [], "meta": {}, "group": null, "materialized": "seed", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [], "pre-hook": [], "quoting": {}, "column_types": {"_fivetran_rowid": "varchar", "_fivetran_synced": "timestamp", "mandt": "varchar", "matnr": "varchar", "spras": "varchar", "maktx": "varchar"}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": false, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "delimiter": ",", "quote_columns": null}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": false, "node_color": null}, "patch_path": null, "build_path": null, "unrendered_config": {"docs": {"show": false}, "column_types": {"mandt": "{{ 'string' if target.type in ['bigquery','spark','databricks'] else 'varchar' }}", "matnr": "{{ 'string' if target.type in ['bigquery','spark','databricks'] else 'varchar' }}", "spras": "{{ 'string' if target.type in ['bigquery','spark','databricks'] else 'varchar' }}", "maktx": "{{ 'string' if target.type in ['bigquery','spark','databricks'] else 'varchar' }}"}}, "created_at": 1756850325.9402623, "relation_name": "\"postgres\".\"public\".\"sap_makt_data\"", "raw_code": "", "doc_blocks": [], "root_path": "/home/runner/work/dbt_sap/dbt_sap/integration_tests", "depends_on": {"macros": []}}, "seed.sap_integration_tests.sap_ekbe_data": {"database": "postgres", "schema": "public", "name": "sap_ekbe_data", "resource_type": "seed", "package_name": "sap_integration_tests", "path": "sap_ekbe_data.csv", "original_file_path": "seeds/sap_ekbe_data.csv", "unique_id": "seed.sap_integration_tests.sap_ekbe_data", "fqn": ["sap_integration_tests", "sap_ekbe_data"], "alias": "sap_ekbe_data", "checksum": {"name": "sha256", "checksum": "9ce35165ec51a04aa20bc2559dd27855ae982f56f8204e675639c983a81296d2"}, "config": {"enabled": true, "alias": null, "schema": null, "database": null, "tags": [], "meta": {}, "group": null, "materialized": "seed", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [], "pre-hook": [], "quoting": {}, "column_types": {"_fivetran_rowid": "varchar", "_fivetran_synced": "timestamp", "dmbtr": "numeric", "dmbtr_pop": "numeric", "retamt_fc": "numeric", "retamt_lc": "numeric", "retamtp_fc": "numeric", "retamtp_lc": "numeric", "wrbtr": "numeric", "wrbtr_pop": "numeric"}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": false, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "delimiter": ",", "quote_columns": null}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": false, "node_color": null}, "patch_path": null, "build_path": null, "unrendered_config": {"docs": {"show": false}, "column_types": {"dmbtr": "numeric", "dmbtr_pop": "numeric", "retamt_fc": "numeric", "retamt_lc": "numeric", "retamtp_fc": "numeric", "retamtp_lc": "numeric", "wrbtr": "numeric", "wrbtr_pop": "numeric"}}, "created_at": 1756850325.9435709, "relation_name": "\"postgres\".\"public\".\"sap_ekbe_data\"", "raw_code": "", "doc_blocks": [], "root_path": "/home/runner/work/dbt_sap/dbt_sap/integration_tests", "depends_on": {"macros": []}}, "model.sap.sap__0material_attr": {"database": "postgres", "schema": "public_sap_dev", "name": "sap__0material_attr", "resource_type": "model", "package_name": "sap", "path": "extractor_reports/sap__0material_attr.sql", "original_file_path": "models/extractor_reports/sap__0material_attr.sql", "unique_id": "model.sap.sap__0material_attr", "fqn": ["sap", "extractor_reports", "sap__0material_attr"], "alias": "sap__0material_attr", "checksum": {"name": "sha256", "checksum": "71c1f6558fa307d46ef6dda92614505fc98940194f568b39f91479c15f7edad4"}, "config": {"enabled": true, "alias": null, "schema": "sap_dev", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "freshness": null}, "tags": [], "description": "This model is used to display material attribute information, originating from the mara source.", "columns": {"mandt": {"name": "mandt", "description": "Client", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "matnr": {"name": "matnr", "description": "Material number", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "ersda": {"name": "ersda", "description": "Created on", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "ernam": {"name": "ernam", "description": "Name of person who created the object", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "laeda": {"name": "laeda", "description": "Date of last change", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "aenam": {"name": "aenam", "description": "Name of person who changed object", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "vpsta": {"name": "vpsta", "description": "Maintenance status of complete material", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "pstat": {"name": "pstat", "description": "Maintenance status", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "lvorm": {"name": "lvorm", "description": "Flag material for deletion at client level", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "mtart": {"name": "mtart", "description": "Material type", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "mbrsh": {"name": "mbrsh", "description": "Industry sector", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "matkl": {"name": "matkl", "description": "Material group", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "bismt": {"name": "bismt", "description": "Old material number", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "meins": {"name": "meins", "description": "Base unit of measure", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "bstme": {"name": "bstme", "description": "Order unit", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "zeinr": {"name": "zeinr", "description": "Document number (without document management system)", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "zeiar": {"name": "zeiar", "description": "Document type (without document management system)", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "zeivr": {"name": "zeivr", "description": "Document version (without document management system)", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "zeifo": {"name": "zeifo", "description": "Page form of document (without document management system)", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "aeszn": {"name": "aeszn", "description": "Document change number (without document management system)", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "blatt": {"name": "blatt", "description": "Page number of document (without document management system)", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "blanz": {"name": "blanz", "description": "Number of sheets (without document management system)", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "ferth": {"name": "ferth", "description": "Production/inspection memo", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "formt": {"name": "formt", "description": "Page format of production memo", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "groes": {"name": "groes", "description": "Size/dimensions", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "wrkst": {"name": "wrkst", "description": "Basic material", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "normt": {"name": "normt", "description": "Industry Standard Description (such as ANSI or ISO)", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "labor": {"name": "labor", "description": "Laboratory/design office", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "ekwsl": {"name": "ekwsl", "description": "Purchasing value key", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "brgew": {"name": "brgew", "description": "Gross weight", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "ntgew": {"name": "ntgew", "description": "Net weight", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "gewei": {"name": "gewei", "description": "Weight unit", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "volum": {"name": "volum", "description": "Volume", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "voleh": {"name": "voleh", "description": "Volume unit", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "behvo": {"name": "behvo", "description": "Container requirements", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "raube": {"name": "raube", "description": "Storage conditions", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "tempb": {"name": "tempb", "description": "Temperature conditions indicator", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "disst": {"name": "disst", "description": "Low-level code", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "tragr": {"name": "tragr", "description": "Transportation group", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "stoff": {"name": "stoff", "description": "Hazardous material number", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "spart": {"name": "spart", "description": "Divsion", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "kunnr": {"name": "kunnr", "description": "Competitor", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "eannr": {"name": "eannr", "description": "European Article Number (EAN)", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "wesch": {"name": "wesch", "description": "Quantity, or number of GR/GI slips to be printed", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "bwvor": {"name": "bwvor", "description": "Procurement rule", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "bwscl": {"name": "bwscl", "description": "Source of supply", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "saiso": {"name": "saiso", "description": "Season category", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "etiar": {"name": "etiar", "description": "Label type", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "etifo": {"name": "etifo", "description": "Label form", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "entar": {"name": "entar", "description": "Disposal type", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "ean11": {"name": "ean11", "description": "International Article Number (EAN/UPC)", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "numtp": {"name": "numtp", "description": "Category of International Article Number (EAN)", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "laeng": {"name": "laeng", "description": "Length", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "breit": {"name": "breit", "description": "Width", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "hoehe": {"name": "hoehe", "description": "Height", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "meabm": {"name": "meabm", "description": "Unit of dimension for length/width/height", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "prdha": {"name": "prdha", "description": "Product hierarchy", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "aeklk": {"name": "aeklk", "description": "Stock transfer net change costing", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "cadkz": {"name": "cadkz", "description": "CAD indicator", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "qmpur": {"name": "qmpur", "description": "QM in procurement is active", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "ergew": {"name": "ergew", "description": "Allowed packaging weight", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "ergei": {"name": "ergei", "description": "Unit of weight (allowed packaging weight)", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "ervol": {"name": "ervol", "description": "Allowed packaging volume", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "ervoe": {"name": "ervoe", "description": "Volume unit (allowed packaging volume)", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "gewto": {"name": "gewto", "description": "Excess weight tolerance for handling unit", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "volto": {"name": "volto", "description": "Excess volume tolerance of the handling unit", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "vabme": {"name": "vabme", "description": "Variable purchase order unit active", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "kzrev": {"name": "kzrev", "description": "Revision level has been assigned to the material", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "kzkfg": {"name": "kzkfg", "description": "Configurable material", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "xchpf": {"name": "xchpf", "description": "Batch management requirement indicator", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "vhart": {"name": "vhart", "description": "Packaging material type", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "fuelg": {"name": "fuelg", "description": "Maximum level (by volume)", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "stfak": {"name": "stfak", "description": "Stacking factor", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "magrv": {"name": "magrv", "description": "Material group (Packaging materials)", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "begru": {"name": "begru", "description": "Authorization group", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "datab": {"name": "datab", "description": "Valid-from date", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "liqdt": {"name": "liqdt", "description": "Deletion date", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "saisj": {"name": "saisj", "description": "Season year", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "plgtp": {"name": "plgtp", "description": "Price band category", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "mlgut": {"name": "mlgut", "description": "Empties bill of material", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "extwg": {"name": "extwg", "description": "External material group", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "satnr": {"name": "satnr", "description": "Cross-plant configurable material", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "attyp": {"name": "attyp", "description": "Material category", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "kzkup": {"name": "kzkup", "description": "Indicator (Material can be co-product)", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "kznfm": {"name": "kznfm", "description": "Indicator (The amterial has a follow-up material)", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "pmata": {"name": "pmata", "description": "Pricing reference material", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "mstae": {"name": "mstae", "description": "Cross-plant material status", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "mstav": {"name": "mstav", "description": "Cross-distribution-chain material status", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "mstde": {"name": "mstde", "description": "Date from which the cross-plan material status is valid", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "mstdv": {"name": "mstdv", "description": "Date from which the X-distr.-chain material status is valid", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "taklv": {"name": "taklv", "description": "Tax classification of the material", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "rbnrm": {"name": "rbnrm", "description": "Catalog profile", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "mhdrz": {"name": "mhdrz", "description": "Minimum remaining shelf life", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "mhdhb": {"name": "mhdhb", "description": "Total shelf life", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "mhdlp": {"name": "mhdlp", "description": "Storage percentage", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "inhme": {"name": "inhme", "description": "Content unit", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "inhal": {"name": "inhal", "description": "Net contents", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "vpreh": {"name": "vpreh", "description": "Comparison price unit", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "etiag": {"name": "etiag", "description": "IS-R labeling (material grouping)", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "inhbr": {"name": "inhbr", "description": "Gross contents", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "cmeth": {"name": "cmeth", "description": "Quantity conversion method", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "cuobf": {"name": "cuobf", "description": "Internal object number", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "kzumw": {"name": "kzumw", "description": "Environmentally relevant", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "kosch": {"name": "kosch", "description": "Product allocation determination procedure", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "sprof": {"name": "sprof", "description": "Pricing profile for variants", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "nrfhg": {"name": "nrfhg", "description": "Material qualifies for discount in kind", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "mfrpn": {"name": "mfrpn", "description": "Manufacturer part number", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "mfrnr": {"name": "mfrnr", "description": "Manufacturer number", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "bmatn": {"name": "bmatn", "description": "Number of firm's own (internal) inventory-managed material", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "mprof": {"name": "mprof", "description": "Mfr part profile", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "kzwsm": {"name": "kzwsm", "description": "Units of measure usage", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "saity": {"name": "saity", "description": "Rollout in a season", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "profl": {"name": "profl", "description": "Dangerous goods indicator profile", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "ihivi": {"name": "ihivi", "description": "Indicator (highly viscous)", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "iloos": {"name": "iloos", "description": "Indicator (in bulk/liquid)", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "serlv": {"name": "serlv", "description": "Level of explicitness for serial numbers", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "kzgvh": {"name": "kzgvh", "description": "Packaging material is closed packaging", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "xgchp": {"name": "xgchp", "description": "Indicator (Approved batch record required)", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "kzeff": {"name": "kzeff", "description": "Assign effectivity parameter values / override change numbers", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "compl": {"name": "compl", "description": "Material completion level", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "iprkz": {"name": "iprkz", "description": "Period indicator for shelf life expiration date", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "rdmhd": {"name": "rdmhd", "description": "Rounding rule for calculation of SLED", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "przus": {"name": "przus", "description": "Indicator (Product composition printed on packaging)", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "mtpos_mara": {"name": "mtpos_mara", "description": "General item category group", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "bflme": {"name": "bflme", "description": "Generic material with logistical variants", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "nsnid": {"name": "nsnid", "description": "NATO item identification number", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": "sap://models/extractor_reports/extractor_reports.yml", "build_path": null, "unrendered_config": {"materialized": "table", "schema": "sap_{{ var('directed_schema','dev') }}", "enabled": true}, "created_at": 1756850330.5715592, "relation_name": "\"postgres\".\"public_sap_dev\".\"sap__0material_attr\"", "raw_code": "{{ config(enabled=var('sap_using_mara', True)) }}\n\nwith mara as ( \n\n\tselect * \n\tfrom {{ ref('stg_sap__mara') }}\n),\n\nfinal as (\n\n\tselect\n\t\tmandt,\n\t\tmatnr,\n\t\tersda,\n\t\ternam,\n\t\tlaeda,\n\t\taenam,\n\t\tvpsta,\n\t\tpstat,\n\t\tlvorm,\n\t\tmtart,\n\t\tmbrsh,\n\t\tmatkl,\n\t\tbismt,\n\t\tmeins,\n\t\tbstme,\n\t\tzeinr,\n\t\tzeiar,\n\t\tzeivr,\n\t\tzeifo,\n\t\taeszn,\n\t\tblatt,\n\t\tblanz,\n\t\tferth,\n\t\tformt,\n\t\tgroes,\n\t\twrkst,\n\t\tnormt,\n\t\tlabor,\n\t\tekwsl,\n\t\tbrgew,\n\t\tntgew,\n\t\tgewei,\n\t\tvolum,\n\t\tvoleh,\n\t\tbehvo,\n\t\traube,\n\t\ttempb,\n\t\tdisst,\n\t\ttragr,\n\t\tstoff,\n\t\tspart,\n\t\tkunnr,\n\t\teannr,\n\t\twesch,\n\t\tbwvor,\n\t\tbwscl,\n\t\tsaiso,\n\t\tetiar,\n\t\tetifo,\n\t\tentar,\n\t\tean11,\n\t\tnumtp,\n\t\tlaeng,\n\t\tbreit,\n\t\thoehe,\n\t\tmeabm,\n\t\tprdha,\n\t\taeklk,\n\t\tcadkz,\n\t\tqmpur,\n\t\tergew,\n\t\tergei,\n\t\tervol,\n\t\tervoe,\n\t\tgewto,\n\t\tvolto,\n\t\tvabme,\n\t\tkzrev,\n\t\tkzkfg,\n\t\txchpf,\n\t\tvhart,\n\t\tfuelg,\n\t\tstfak,\n\t\tmagrv,\n\t\tbegru,\n\t\tdatab,\n\t\tliqdt,\n\t\tsaisj,\n\t\tplgtp,\n\t\tmlgut,\n\t\textwg,\n\t\tsatnr,\n\t\tattyp,\n\t\tkzkup,\n\t\tkznfm,\n\t\tpmata,\n\t\tmstae,\n\t\tmstav,\n\t\tmstde,\n\t\tmstdv,\n\t\ttaklv,\n\t\trbnrm,\n\t\tmhdrz,\n\t\tmhdhb,\n\t\tmhdlp,\n\t\tinhme,\n\t\tinhal,\n\t\tvpreh,\n\t\tetiag,\n\t\tinhbr,\n\t\tcmeth,\n\t\tcuobf,\n\t\tkzumw,\n\t\tkosch,\n\t\tsprof,\n\t\tnrfhg,\n\t\tmfrpn,\n\t\tmfrnr,\n\t\tbmatn,\n\t\tmprof,\n\t\tkzwsm,\n\t\tsaity,\n\t\tprofl,\n\t\tihivi,\n\t\tiloos,\n\t\tserlv,\n\t\tkzgvh,\n\t\txgchp,\n\t\tkzeff,\n\t\tcompl,\n\t\tiprkz,\n\t\trdmhd,\n\t\tprzus,\n\t\tmtpos_mara,\n\t\tbflme,\n\t\tnsnid,\n\t\t_fivetran_rowid,\n\t\t_fivetran_deleted,\n\t\t_fivetran_synced\n\tfrom mara\n\n\t{% if var('mara_mandt_var',[]) %}\n\twhere mandt = '{{ var('mara_mandt_var') }}' \n\t{% endif %}\n)\n\nselect * \nfrom final", "doc_blocks": [], "language": "sql", "refs": [{"name": "stg_sap__mara", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": [], "nodes": ["model.sap.stg_sap__mara"]}, "compiled_path": "target/compiled/sap/models/extractor_reports/sap__0material_attr.sql", "compiled": true, "compiled_code": "\n\nwith mara as ( \n\n\tselect * \n\tfrom \"postgres\".\"public_sap_dev\".\"stg_sap__mara\"\n),\n\nfinal as (\n\n\tselect\n\t\tmandt,\n\t\tmatnr,\n\t\tersda,\n\t\ternam,\n\t\tlaeda,\n\t\taenam,\n\t\tvpsta,\n\t\tpstat,\n\t\tlvorm,\n\t\tmtart,\n\t\tmbrsh,\n\t\tmatkl,\n\t\tbismt,\n\t\tmeins,\n\t\tbstme,\n\t\tzeinr,\n\t\tzeiar,\n\t\tzeivr,\n\t\tzeifo,\n\t\taeszn,\n\t\tblatt,\n\t\tblanz,\n\t\tferth,\n\t\tformt,\n\t\tgroes,\n\t\twrkst,\n\t\tnormt,\n\t\tlabor,\n\t\tekwsl,\n\t\tbrgew,\n\t\tntgew,\n\t\tgewei,\n\t\tvolum,\n\t\tvoleh,\n\t\tbehvo,\n\t\traube,\n\t\ttempb,\n\t\tdisst,\n\t\ttragr,\n\t\tstoff,\n\t\tspart,\n\t\tkunnr,\n\t\teannr,\n\t\twesch,\n\t\tbwvor,\n\t\tbwscl,\n\t\tsaiso,\n\t\tetiar,\n\t\tetifo,\n\t\tentar,\n\t\tean11,\n\t\tnumtp,\n\t\tlaeng,\n\t\tbreit,\n\t\thoehe,\n\t\tmeabm,\n\t\tprdha,\n\t\taeklk,\n\t\tcadkz,\n\t\tqmpur,\n\t\tergew,\n\t\tergei,\n\t\tervol,\n\t\tervoe,\n\t\tgewto,\n\t\tvolto,\n\t\tvabme,\n\t\tkzrev,\n\t\tkzkfg,\n\t\txchpf,\n\t\tvhart,\n\t\tfuelg,\n\t\tstfak,\n\t\tmagrv,\n\t\tbegru,\n\t\tdatab,\n\t\tliqdt,\n\t\tsaisj,\n\t\tplgtp,\n\t\tmlgut,\n\t\textwg,\n\t\tsatnr,\n\t\tattyp,\n\t\tkzkup,\n\t\tkznfm,\n\t\tpmata,\n\t\tmstae,\n\t\tmstav,\n\t\tmstde,\n\t\tmstdv,\n\t\ttaklv,\n\t\trbnrm,\n\t\tmhdrz,\n\t\tmhdhb,\n\t\tmhdlp,\n\t\tinhme,\n\t\tinhal,\n\t\tvpreh,\n\t\tetiag,\n\t\tinhbr,\n\t\tcmeth,\n\t\tcuobf,\n\t\tkzumw,\n\t\tkosch,\n\t\tsprof,\n\t\tnrfhg,\n\t\tmfrpn,\n\t\tmfrnr,\n\t\tbmatn,\n\t\tmprof,\n\t\tkzwsm,\n\t\tsaity,\n\t\tprofl,\n\t\tihivi,\n\t\tiloos,\n\t\tserlv,\n\t\tkzgvh,\n\t\txgchp,\n\t\tkzeff,\n\t\tcompl,\n\t\tiprkz,\n\t\trdmhd,\n\t\tprzus,\n\t\tmtpos_mara,\n\t\tbflme,\n\t\tnsnid,\n\t\t_fivetran_rowid,\n\t\t_fivetran_deleted,\n\t\t_fivetran_synced\n\tfrom mara\n\n\t\n)\n\nselect * \nfrom final", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null, "primary_key": [], "time_spine": null}, "model.sap.sap__0customer_attr": {"database": "postgres", "schema": "public_sap_dev", "name": "sap__0customer_attr", "resource_type": "model", "package_name": "sap", "path": "extractor_reports/sap__0customer_attr.sql", "original_file_path": "models/extractor_reports/sap__0customer_attr.sql", "unique_id": "model.sap.sap__0customer_attr", "fqn": ["sap", "extractor_reports", "sap__0customer_attr"], "alias": "sap__0customer_attr", "checksum": {"name": "sha256", "checksum": "2bb9021ec2f26bc12855823e03cce98f2b1c4009238f45b5036103519329b549"}, "config": {"enabled": true, "alias": null, "schema": "sap_dev", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "freshness": null}, "tags": [], "description": "This model is used for loading customer master data, originating from the kna1 source.", "columns": {"mandt": {"name": "mandt", "description": "Client", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "kunnr": {"name": "kunnr", "description": "Customer number", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "brsch": {"name": "brsch", "description": "Industry key", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "ktokd": {"name": "ktokd", "description": "Customer account group", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "kukla": {"name": "kukla", "description": "Customer classification", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "land1": {"name": "land1", "description": "Country key", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "lifnr": {"name": "lifnr", "description": "Account number of vendor or creditor", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "loevm": {"name": "loevm", "description": "Central deletion flag for master record", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "name1": {"name": "name1", "description": "Name 1", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "niels": {"name": "niels", "description": "Nielsen ID", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "ort01": {"name": "ort01", "description": "City", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "pstlz": {"name": "pstlz", "description": "Postal code", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "regio": {"name": "regio", "description": "Regional market", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "counc": {"name": "counc", "description": "County code", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "stcd1": {"name": "stcd1", "description": "Tax number 1", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "stras": {"name": "stras", "description": "House number and street", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "telf1": {"name": "telf1", "description": "First telephone number", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "vbund": {"name": "vbund", "description": "Company id of trading partner", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "bran1": {"name": "bran1", "description": "Industry code 1", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "bran2": {"name": "bran2", "description": "Industry code 2", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "bran3": {"name": "bran3", "description": "Industry code 3", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "bran4": {"name": "bran4", "description": "Industry code 4", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "bran5": {"name": "bran5", "description": "Industry code 5", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "periv": {"name": "periv", "description": "Fiscal year variant", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "abrvw": {"name": "abrvw", "description": "Usage indicator", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "werks": {"name": "werks", "description": "Plant", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "name2": {"name": "name2", "description": "Name 2", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "name3": {"name": "name3", "description": "Name 3", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "dear6": {"name": "dear6", "description": "Indicator (Consumer)", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "pstl2": {"name": "pstl2", "description": "PO Box postal code", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": "sap://models/extractor_reports/extractor_reports.yml", "build_path": null, "unrendered_config": {"materialized": "table", "schema": "sap_{{ var('directed_schema','dev') }}", "enabled": true}, "created_at": 1756850330.447921, "relation_name": "\"postgres\".\"public_sap_dev\".\"sap__0customer_attr\"", "raw_code": "{{ config(enabled=var('sap_using_kna1', True)) }}\n\nwith kna1 as ( \n\n\tselect * \n\tfrom {{ ref('stg_sap__kna1') }}\n),\n\nfinal as (\n\n    select\n        mandt,\n        kunnr,\n        brsch,\n        ktokd,\n        kukla,\n        land1,\n        lifnr,\n        loevm,\n        name1,\n        niels,\n        ort01,\n        pstlz,\n        regio,\n        counc,\n        stcd1,\n        stras,\n        telf1,\n        vbund,\n        bran1,\n        bran2,\n        bran3,\n        bran4,\n        bran5,\n        periv,\n        abrvw,\n        werks,\n        name2,\n        name3,\n        dear6,\n        pstl2\n    from kna1\n\n    {% if var('kna1_mandt_var',[]) %}\n\twhere mandt = '{{ var('kna1_mandt_var') }}'\n\t{% endif %}\n \n)\n\nselect * \nfrom final", "doc_blocks": [], "language": "sql", "refs": [{"name": "stg_sap__kna1", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": [], "nodes": ["model.sap.stg_sap__kna1"]}, "compiled_path": "target/compiled/sap/models/extractor_reports/sap__0customer_attr.sql", "compiled": true, "compiled_code": "\n\nwith kna1 as ( \n\n\tselect * \n\tfrom \"postgres\".\"public_sap_dev\".\"stg_sap__kna1\"\n),\n\nfinal as (\n\n    select\n        mandt,\n        kunnr,\n        brsch,\n        ktokd,\n        kukla,\n        land1,\n        lifnr,\n        loevm,\n        name1,\n        niels,\n        ort01,\n        pstlz,\n        regio,\n        counc,\n        stcd1,\n        stras,\n        telf1,\n        vbund,\n        bran1,\n        bran2,\n        bran3,\n        bran4,\n        bran5,\n        periv,\n        abrvw,\n        werks,\n        name2,\n        name3,\n        dear6,\n        pstl2\n    from kna1\n\n    \n \n)\n\nselect * \nfrom final", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null, "primary_key": [], "time_spine": null}, "model.sap.sap__0gl_account_attr": {"database": "postgres", "schema": "public_sap_dev", "name": "sap__0gl_account_attr", "resource_type": "model", "package_name": "sap", "path": "extractor_reports/sap__0gl_account_attr.sql", "original_file_path": "models/extractor_reports/sap__0gl_account_attr.sql", "unique_id": "model.sap.sap__0gl_account_attr", "fqn": ["sap", "extractor_reports", "sap__0gl_account_attr"], "alias": "sap__0gl_account_attr", "checksum": {"name": "sha256", "checksum": "22f9a9cc402c2200aeeecb7824fa3713d64f123f36a7fcb4ae9232967c0118b0"}, "config": {"enabled": true, "alias": null, "schema": "sap_dev", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "freshness": null}, "tags": [], "description": "This model is used for loading G/L Account Number master data, originating from the ska1 source.", "columns": {"mandt": {"name": "mandt", "description": "Client", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "ktopl": {"name": "ktopl", "description": "Chart of accounts", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "saknr": {"name": "saknr", "description": "G/L account number", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "bilkt": {"name": "bilkt", "description": "Group account number", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "gvtyp": {"name": "gvtyp", "description": "P&L statement account type", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "vbund": {"name": "vbund", "description": "Company id of tradiing partner", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "xbilk": {"name": "xbilk", "description": "Indicator (account is a balance sheet account?)", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "sakan": {"name": "sakan", "description": "G/L account number, significant length", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "erdat": {"name": "erdat", "description": "Date on which the record was created", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "ernam": {"name": "ernam", "description": "Name of person who created the object", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "ktoks": {"name": "ktoks", "description": "G/L account group", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "xloev": {"name": "xloev", "description": "Indicator (account marked for deletion?)", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "xspea": {"name": "xspea", "description": "Indicator (account is blocked for creation?)", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "xspeb": {"name": "xspeb", "description": "Indicator (Is account blocked for posting?)", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "xspep": {"name": "xspep", "description": "Indicator (Account blocked for planning?)", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "func_area": {"name": "func_area", "description": "Functional area", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "mustr": {"name": "mustr", "description": "Number of the sample account", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": "sap://models/extractor_reports/extractor_reports.yml", "build_path": null, "unrendered_config": {"materialized": "table", "schema": "sap_{{ var('directed_schema','dev') }}", "enabled": true}, "created_at": 1756850330.5267, "relation_name": "\"postgres\".\"public_sap_dev\".\"sap__0gl_account_attr\"", "raw_code": "{{ config(enabled=var('sap_using_ska1', True)) }}\n\nwith ska1 as ( \n\n\tselect * \n\tfrom {{ ref('stg_sap__ska1') }}\n),\n\nfinal as (\n\n\tselect\n\t\tmandt, \n\t\tktopl,\n\t\tsaknr,\n\t\tbilkt,\n\t\tgvtyp,\n\t\tvbund,\n\t\txbilk,\n\t\tsakan,\n\t\terdat,\n\t\ternam,\n\t\tktoks,\n\t\txloev,\n\t\txspea,\n\t\txspeb,\n\t\txspep,\n\t\tfunc_area,\n\t\tmustr\t\n\tfrom ska1\n\n\t{% if var('ska1_mandt_var',[]) %}\n\twhere mandt = '{{ var('ska1_mandt_var') }}'\n\t{% endif %}\n)\n\nselect * \nfrom final", "doc_blocks": [], "language": "sql", "refs": [{"name": "stg_sap__ska1", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": [], "nodes": ["model.sap.stg_sap__ska1"]}, "compiled_path": "target/compiled/sap/models/extractor_reports/sap__0gl_account_attr.sql", "compiled": true, "compiled_code": "\n\nwith ska1 as ( \n\n\tselect * \n\tfrom \"postgres\".\"public_sap_dev\".\"stg_sap__ska1\"\n),\n\nfinal as (\n\n\tselect\n\t\tmandt, \n\t\tktopl,\n\t\tsaknr,\n\t\tbilkt,\n\t\tgvtyp,\n\t\tvbund,\n\t\txbilk,\n\t\tsakan,\n\t\terdat,\n\t\ternam,\n\t\tktoks,\n\t\txloev,\n\t\txspea,\n\t\txspeb,\n\t\txspep,\n\t\tfunc_area,\n\t\tmustr\t\n\tfrom ska1\n\n\t\n)\n\nselect * \nfrom final", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null, "primary_key": [], "time_spine": null}, "model.sap.sap__0vendor_text": {"database": "postgres", "schema": "public_sap_dev", "name": "sap__0vendor_text", "resource_type": "model", "package_name": "sap", "path": "extractor_reports/sap__0vendor_text.sql", "original_file_path": "models/extractor_reports/sap__0vendor_text.sql", "unique_id": "model.sap.sap__0vendor_text", "fqn": ["sap", "extractor_reports", "sap__0vendor_text"], "alias": "sap__0vendor_text", "checksum": {"name": "sha256", "checksum": "abb6def8af374a5adaccec5931a98b0470f7bfacc49036ffc17c420f7c6b2b30"}, "config": {"enabled": true, "alias": null, "schema": "sap_dev", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "freshness": null}, "tags": [], "description": "This model is used to display vendor text, originating from the lfa1 source.", "columns": {"mandt": {"name": "mandt", "description": "Client", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "lifnr": {"name": "lifnr", "description": "Account number of vendor or creditor", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "txtmd": {"name": "txtmd", "description": "Name of vendor", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": "sap://models/extractor_reports/extractor_reports.yml", "build_path": null, "unrendered_config": {"materialized": "table", "schema": "sap_{{ var('directed_schema','dev') }}", "enabled": true}, "created_at": 1756850330.5780032, "relation_name": "\"postgres\".\"public_sap_dev\".\"sap__0vendor_text\"", "raw_code": "{{ config(enabled=var('sap_using_lfa1', True)) }}\nwith lfa1 as ( \n\n\tselect * \n\tfrom {{ ref('stg_sap__lfa1') }}\n),\n\nfinal as (\n\n    select\n        mandt,\n        lifnr,\n        name1 as txtmd\n    from lfa1\n)\n\nselect * \nfrom final", "doc_blocks": [], "language": "sql", "refs": [{"name": "stg_sap__lfa1", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": [], "nodes": ["model.sap.stg_sap__lfa1"]}, "compiled_path": "target/compiled/sap/models/extractor_reports/sap__0vendor_text.sql", "compiled": true, "compiled_code": "\nwith lfa1 as ( \n\n\tselect * \n\tfrom \"postgres\".\"public_sap_dev\".\"stg_sap__lfa1\"\n),\n\nfinal as (\n\n    select\n        mandt,\n        lifnr,\n        name1 as txtmd\n    from lfa1\n)\n\nselect * \nfrom final", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null, "primary_key": [], "time_spine": null}, "model.sap.sap__0employee_attr": {"database": "postgres", "schema": "public_sap_dev", "name": "sap__0employee_attr", "resource_type": "model", "package_name": "sap", "path": "extractor_reports/sap__0employee_attr.sql", "original_file_path": "models/extractor_reports/sap__0employee_attr.sql", "unique_id": "model.sap.sap__0employee_attr", "fqn": ["sap", "extractor_reports", "sap__0employee_attr"], "alias": "sap__0employee_attr", "checksum": {"name": "sha256", "checksum": "1c84029be8c49513dffb919097b1bb7dcdb37d2a736bdb00afe3f76217d04722"}, "config": {"enabled": true, "alias": null, "schema": "sap_dev", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "freshness": null}, "tags": [], "description": "This model contains information that concerns the employee's work relationship, extracting master data from the personnel administration tables.", "columns": {"begda": {"name": "begda", "description": "Vaild from date", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "endda": {"name": "endda", "description": "Valid to date", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "pernr": {"name": "pernr", "description": "Personnel number", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "rfpnr": {"name": "rfpnr", "description": "Reference personnel number", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "bukrs": {"name": "bukrs", "description": "Company code", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "werks": {"name": "werks", "description": "Personnel area", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "btrtl": {"name": "btrtl", "description": "Personnel subarea", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "persg": {"name": "persg", "description": "Employee group", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "persk": {"name": "persk", "description": "Employee subgroup", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "orgeh": {"name": "orgeh", "description": "Organizational unit", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "stell": {"name": "stell", "description": "Job", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "plans": {"name": "plans", "description": "Position", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "kokrs": {"name": "kokrs", "description": "Controlling area of master cost center", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "kostl": {"name": "kostl", "description": "Master cost center", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "abkrs": {"name": "abkrs", "description": "Payroll area", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "trfar": {"name": "trfar", "description": "Pay scale type", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "trfgb": {"name": "trfgb", "description": "Pay scale area", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "trfkz": {"name": "trfkz", "description": "Employee subgroup grouping for collective agreement provisions", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "trfgr": {"name": "trfgr", "description": "Pay scale group", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "trfst": {"name": "trfst", "description": "Pay scale level", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "bsgrd": {"name": "bsgrd", "description": "Capacity utilization level", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "ancur": {"name": "ancur", "description": "Currency key for annual salary", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "empct": {"name": "empct", "description": "Employment percentage", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "stat2": {"name": "stat2", "description": "Employment status", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "ansvh": {"name": "ansvh", "description": "Work contract", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "vdsk1": {"name": "vdsk1", "description": "Organizational key", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "sname": {"name": "sname", "description": "Employee's name (sortable, LASTNAME, FIRSTNAME)", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": "sap://models/extractor_reports/extractor_reports.yml", "build_path": null, "unrendered_config": {"materialized": "table", "schema": "sap_{{ var('directed_schema','dev') }}", "enabled": true}, "created_at": 1756850330.458419, "relation_name": "\"postgres\".\"public_sap_dev\".\"sap__0employee_attr\"", "raw_code": "{{ config(enabled=var('sap_using_t503', True) \n        and var('sap_using_pa0000', True)\n        and var('sap_using_pa0001', True)\n        and var('sap_using_pa0007', True)\n        and var('sap_using_pa0008', True)\n        and var('sap_using_pa0031', True)\n        )}}\n\nwith pa0000 as (\n\n    select *\n    from {{ ref('stg_sap__pa0000') }} \n),\n\npa0001 as (\n\n    select *\n    from {{ ref('stg_sap__pa0001') }} \n),\n\npa0007 as (\n\n    select *\n    from {{ ref('stg_sap__pa0007') }} \n),\n\npa0008 as (\n\n    select *\n    from {{ ref('stg_sap__pa0008') }} \n),\n\npa0031 as (\n\n    select *\n    from {{ ref('stg_sap__pa0031') }} \n),\n\nt503 as (\n\n    select *\n    from {{ ref('stg_sap__t503') }} \n),\n\nemployee_date_changes as ( \n\n    select * \n    from {{ ref('int_sap__0employee_date_changes') }}\n    where endda is not null\n),\n\nfinal as (\n\n    select \n        employee_date_changes.begda,\n        employee_date_changes.endda,\n        pa0000.pernr,\n        coalesce(pa0031.rfp01, pa0031.rfp02, pa0031.rfp03, pa0031.rfp04, pa0031.rfp05,\n        pa0031.rfp06, pa0031.rfp07, pa0031.rfp08, pa0031.rfp09, pa0031.rfp10,\n        pa0031.rfp11, pa0031.rfp12, pa0031.rfp13, pa0031.rfp14, pa0031.rfp15,\n        pa0031.rfp16, pa0031.rfp17, pa0031.rfp18, pa0031.rfp19, pa0031.rfp20) as rfpnr,\n        pa0001.bukrs,\n        pa0001.werks,\n        pa0001.btrtl,\n        pa0001.persg,\n        pa0001.persk,\n        pa0001.orgeh,\n        pa0001.stell,\n        pa0001.plans,\n        pa0001.kokrs,\n        pa0001.kostl, \n        pa0001.abkrs, \n        pa0008.trfar,\n        pa0008.trfgb,\n        t503.trfkz,\n        pa0008.trfgr,\n        pa0008.trfst,\n        pa0008.bsgrd,\n        pa0008.ancur,\n        pa0007.empct,\n        pa0000.stat2, \n        pa0001.ansvh,\n        pa0001.vdsk1,\n        pa0001.sname\n    from pa0000\n    left join employee_date_changes\n        on pa0000.pernr = employee_date_changes.pernr\n        and pa0000.begda < employee_date_changes.endda\n        and pa0000.endda > employee_date_changes.begda\n    left join pa0001\n        on pa0001.pernr = employee_date_changes.pernr \n        and pa0001.begda < employee_date_changes.endda \n        and pa0001.endda > employee_date_changes.begda \n    left join pa0007  \n        on pa0007.pernr = employee_date_changes.pernr\n        and pa0007.begda < employee_date_changes.endda \n        and pa0007.endda > employee_date_changes.begda \n    left join pa0008\n        on pa0008.pernr = employee_date_changes.pernr\n        and pa0008.begda < employee_date_changes.endda\n        and pa0008.endda > employee_date_changes.begda \n    left join pa0031\n        on pa0031.pernr = employee_date_changes.pernr\n        and pa0031.begda < employee_date_changes.endda\n        and pa0031.endda > employee_date_changes.begda\n    inner join t503\n        on pa0001.mandt = t503.mandt\n        and pa0001.persg = t503.persg  \n        and pa0001.persk = t503.persk \n)\n\nselect *\nfrom final", "doc_blocks": [], "language": "sql", "refs": [{"name": "stg_sap__pa0000", "package": null, "version": null}, {"name": "stg_sap__pa0001", "package": null, "version": null}, {"name": "stg_sap__pa0007", "package": null, "version": null}, {"name": "stg_sap__pa0008", "package": null, "version": null}, {"name": "stg_sap__pa0031", "package": null, "version": null}, {"name": "stg_sap__t503", "package": null, "version": null}, {"name": "int_sap__0employee_date_changes", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": [], "nodes": ["model.sap.stg_sap__pa0000", "model.sap.stg_sap__pa0001", "model.sap.stg_sap__pa0007", "model.sap.stg_sap__pa0008", "model.sap.stg_sap__pa0031", "model.sap.stg_sap__t503", "model.sap.int_sap__0employee_date_changes"]}, "compiled_path": "target/compiled/sap/models/extractor_reports/sap__0employee_attr.sql", "compiled": true, "compiled_code": "\n\nwith pa0000 as (\n\n    select *\n    from \"postgres\".\"public_sap_dev\".\"stg_sap__pa0000\" \n),\n\npa0001 as (\n\n    select *\n    from \"postgres\".\"public_sap_dev\".\"stg_sap__pa0001\" \n),\n\npa0007 as (\n\n    select *\n    from \"postgres\".\"public_sap_dev\".\"stg_sap__pa0007\" \n),\n\npa0008 as (\n\n    select *\n    from \"postgres\".\"public_sap_dev\".\"stg_sap__pa0008\" \n),\n\npa0031 as (\n\n    select *\n    from \"postgres\".\"public_sap_dev\".\"stg_sap__pa0031\" \n),\n\nt503 as (\n\n    select *\n    from \"postgres\".\"public_sap_dev\".\"stg_sap__t503\" \n),\n\nemployee_date_changes as ( \n\n    select * \n    from \"postgres\".\"public_sap_dev\".\"int_sap__0employee_date_changes\"\n    where endda is not null\n),\n\nfinal as (\n\n    select \n        employee_date_changes.begda,\n        employee_date_changes.endda,\n        pa0000.pernr,\n        coalesce(pa0031.rfp01, pa0031.rfp02, pa0031.rfp03, pa0031.rfp04, pa0031.rfp05,\n        pa0031.rfp06, pa0031.rfp07, pa0031.rfp08, pa0031.rfp09, pa0031.rfp10,\n        pa0031.rfp11, pa0031.rfp12, pa0031.rfp13, pa0031.rfp14, pa0031.rfp15,\n        pa0031.rfp16, pa0031.rfp17, pa0031.rfp18, pa0031.rfp19, pa0031.rfp20) as rfpnr,\n        pa0001.bukrs,\n        pa0001.werks,\n        pa0001.btrtl,\n        pa0001.persg,\n        pa0001.persk,\n        pa0001.orgeh,\n        pa0001.stell,\n        pa0001.plans,\n        pa0001.kokrs,\n        pa0001.kostl, \n        pa0001.abkrs, \n        pa0008.trfar,\n        pa0008.trfgb,\n        t503.trfkz,\n        pa0008.trfgr,\n        pa0008.trfst,\n        pa0008.bsgrd,\n        pa0008.ancur,\n        pa0007.empct,\n        pa0000.stat2, \n        pa0001.ansvh,\n        pa0001.vdsk1,\n        pa0001.sname\n    from pa0000\n    left join employee_date_changes\n        on pa0000.pernr = employee_date_changes.pernr\n        and pa0000.begda < employee_date_changes.endda\n        and pa0000.endda > employee_date_changes.begda\n    left join pa0001\n        on pa0001.pernr = employee_date_changes.pernr \n        and pa0001.begda < employee_date_changes.endda \n        and pa0001.endda > employee_date_changes.begda \n    left join pa0007  \n        on pa0007.pernr = employee_date_changes.pernr\n        and pa0007.begda < employee_date_changes.endda \n        and pa0007.endda > employee_date_changes.begda \n    left join pa0008\n        on pa0008.pernr = employee_date_changes.pernr\n        and pa0008.begda < employee_date_changes.endda\n        and pa0008.endda > employee_date_changes.begda \n    left join pa0031\n        on pa0031.pernr = employee_date_changes.pernr\n        and pa0031.begda < employee_date_changes.endda\n        and pa0031.endda > employee_date_changes.begda\n    inner join t503\n        on pa0001.mandt = t503.mandt\n        and pa0001.persg = t503.persg  \n        and pa0001.persk = t503.persk \n)\n\nselect *\nfrom final", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null, "primary_key": [], "time_spine": null}, "model.sap.sap__0vendor_attr": {"database": "postgres", "schema": "public_sap_dev", "name": "sap__0vendor_attr", "resource_type": "model", "package_name": "sap", "path": "extractor_reports/sap__0vendor_attr.sql", "original_file_path": "models/extractor_reports/sap__0vendor_attr.sql", "unique_id": "model.sap.sap__0vendor_attr", "fqn": ["sap", "extractor_reports", "sap__0vendor_attr"], "alias": "sap__0vendor_attr", "checksum": {"name": "sha256", "checksum": "58f7be61faf5dfead19ce3f2904cca5b1f9bdc0e9b31c5d6b6a68bca10256a33"}, "config": {"enabled": true, "alias": null, "schema": "sap_dev", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "freshness": null}, "tags": [], "description": "This model is used to display vendor attributes, originating from the lfa1 source.", "columns": {"mandt": {"name": "mandt", "description": "Client", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "lifnr": {"name": "lifnr", "description": "Account number of vendor or creditor", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "brsch": {"name": "brsch", "description": "Industry key", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "ktokk": {"name": "ktokk", "description": "Vendor account group", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "land1": {"name": "land1", "description": "Country key", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "loevm": {"name": "loevm", "description": "Central deletion flag for master record", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "name1": {"name": "name1", "description": "Name 1", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "name2": {"name": "name2", "description": "Name 2", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "name3": {"name": "name3", "description": "Name 3", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "ort01": {"name": "ort01", "description": "City", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "ort02": {"name": "ort02", "description": "District", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "pfach": {"name": "pfach", "description": "PO Box", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "pstl2": {"name": "pstl2", "description": "P.O. Box postal code", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "pstlz": {"name": "pstlz", "description": "Postal code", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "regio": {"name": "regio", "description": "Region (State, province, county)", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "sortl": {"name": "sortl", "description": "Sort field", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "spras": {"name": "spras", "description": "Language key", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "stcd1": {"name": "stcd1", "description": "Tax number 1", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "stcd2": {"name": "stcd2", "description": "Tax number 2", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "stcd3": {"name": "stcd3", "description": "Tax number 3", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "stras": {"name": "stras", "description": "Street and house number", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "telf1": {"name": "telf1", "description": "First telephone number", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "telfx": {"name": "telfx", "description": "Fax number", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "xcpdk": {"name": "xcpdk", "description": "Indicator (is the account a one-time account?)", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "vbund": {"name": "vbund", "description": "Company id of trading partner", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "kraus": {"name": "kraus", "description": "Credit information number", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "pfort": {"name": "pfort", "description": "PO box city", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "werks": {"name": "werks", "description": "Plant", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": "sap://models/extractor_reports/extractor_reports.yml", "build_path": null, "unrendered_config": {"materialized": "table", "schema": "sap_{{ var('directed_schema','dev') }}", "enabled": true}, "created_at": 1756850330.5772665, "relation_name": "\"postgres\".\"public_sap_dev\".\"sap__0vendor_attr\"", "raw_code": "{{ config(enabled=var('sap_using_lfa1', True)) }}\n\nwith lfa1 as ( \n\n\tselect * \n\tfrom {{ ref('stg_sap__lfa1') }}\n),\n\nfinal as (\n\n    select\n        mandt,\n        lifnr,\n        brsch,\n        ktokk,\n        land1,\n        loevm,\n        name1,\n        name2,\n        name3,\n        ort01,\n        ort02,\n        pfach,\n        pstl2,\n        pstlz,\n        regio,\n        sortl,\n        spras,\n        stcd1,\n        stcd2,\n        stcd3,\n        stras,\n        telf1,\n        telfx,\n        xcpdk,\n        vbund,\n        kraus,\n        pfort,\n        werks\n    from lfa1\n\n    {% if var('lfa1_mandt_var',[]) %}\n    where mandt = '{{ var('lfa1_mandt_var') }}'\n    {% endif %}\n)\n\nselect *\nfrom final", "doc_blocks": [], "language": "sql", "refs": [{"name": "stg_sap__lfa1", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": [], "nodes": ["model.sap.stg_sap__lfa1"]}, "compiled_path": "target/compiled/sap/models/extractor_reports/sap__0vendor_attr.sql", "compiled": true, "compiled_code": "\n\nwith lfa1 as ( \n\n\tselect * \n\tfrom \"postgres\".\"public_sap_dev\".\"stg_sap__lfa1\"\n),\n\nfinal as (\n\n    select\n        mandt,\n        lifnr,\n        brsch,\n        ktokk,\n        land1,\n        loevm,\n        name1,\n        name2,\n        name3,\n        ort01,\n        ort02,\n        pfach,\n        pstl2,\n        pstlz,\n        regio,\n        sortl,\n        spras,\n        stcd1,\n        stcd2,\n        stcd3,\n        stras,\n        telf1,\n        telfx,\n        xcpdk,\n        vbund,\n        kraus,\n        pfort,\n        werks\n    from lfa1\n\n    \n)\n\nselect *\nfrom final", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null, "primary_key": [], "time_spine": null}, "model.sap.sap__0fi_gl_14": {"database": "postgres", "schema": "public_sap_dev", "name": "sap__0fi_gl_14", "resource_type": "model", "package_name": "sap", "path": "extractor_reports/sap__0fi_gl_14.sql", "original_file_path": "models/extractor_reports/sap__0fi_gl_14.sql", "unique_id": "model.sap.sap__0fi_gl_14", "fqn": ["sap", "extractor_reports", "sap__0fi_gl_14"], "alias": "sap__0fi_gl_14", "checksum": {"name": "sha256", "checksum": "db5bc98659cd087eac52dfbb1a9cec7b0dc333a8d6db514f2495bdea73d70bfc"}, "config": {"enabled": true, "alias": null, "schema": "sap_dev", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "freshness": null}, "tags": [], "description": "This model extracts line items from the leading ledger in new General Ledger Accounting.", "columns": {"ryear": {"name": "ryear", "description": "Fiscal year of the general ledger", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "docnr": {"name": "docnr", "description": "Document number of the general ledger document", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "rldnr": {"name": "rldnr", "description": "Ledger", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "rbukrs": {"name": "rbukrs", "description": "Company code", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "docln": {"name": "docln", "description": "Six-digit line item for ledger", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "activ": {"name": "activ", "description": "FI-SL business transaction", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "rmvct": {"name": "rmvct", "description": "Flow type", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "rtcur": {"name": "rtcur", "description": "Transaction currency key", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "runit": {"name": "runit", "description": "Base unit of measure", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "awtyp": {"name": "awtyp", "description": "Reference transaction", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "rrcty": {"name": "rrcty", "description": "Record type", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "rvers": {"name": "rvers", "description": "Version", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "logsys": {"name": "logsys", "description": "Logical system", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "racct": {"name": "racct", "description": "G/L account in General Ledger Accounting", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "cost_elem": {"name": "cost_elem", "description": "Cost element", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "rcntr": {"name": "rcntr", "description": "Cost center", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "prctr": {"name": "prctr", "description": "Profit center", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "rfarea": {"name": "rfarea", "description": "Functional area", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "rbusa": {"name": "rbusa", "description": "Business area", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "kokrs": {"name": "kokrs", "description": "Controlling area", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "segment": {"name": "segment", "description": "Segment for segment reporting", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "scntr": {"name": "scntr", "description": "Partner cost center", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "pprctr": {"name": "pprctr", "description": "Partner profit center", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "sfarea": {"name": "sfarea", "description": "Functional area of partner", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "sbusa": {"name": "sbusa", "description": "Business area of business partner", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "rassc": {"name": "rassc", "description": "Company id of trading partner", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "psegment": {"name": "psegment", "description": "Partner segment for segment reporting", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "tsl": {"name": "tsl", "description": "Amount in transaction currency", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "hsl": {"name": "hsl", "description": "Amount in local currency", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "ksl": {"name": "ksl", "description": "Amount in global currency", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "osl": {"name": "osl", "description": "Amount in another currency", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "msl": {"name": "msl", "description": "Quantity information", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "wsl": {"name": "wsl", "description": "Amount in original transaction currency", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "drcrk": {"name": "drcrk", "description": "Debit/credit indicator", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "poper": {"name": "poper", "description": "Posting period", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "rwcur": {"name": "rwcur", "description": "Document currency (key)", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "gjahr": {"name": "gjahr", "description": "Fiscal year", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "budat": {"name": "budat", "description": "Posting date in document", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "belnr": {"name": "belnr", "description": "Accounting document number", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "buzei": {"name": "buzei", "description": "Number of the line item within the accounting document", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "bschl": {"name": "bschl", "description": "Posting key", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "bstat": {"name": "bstat", "description": "Document status", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "faglflexa_timestamp": {"name": "faglflexa_timestamp", "description": "UTC time stamp in short form (YYYYMMDDhhmmss)", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "bukrs": {"name": "bukrs", "description": "Company code", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "blart": {"name": "blart", "description": "Document type", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "bldat": {"name": "bldat", "description": "Document date in document", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "monat": {"name": "monat", "description": "Fiscal period", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "cpudt": {"name": "cpudt", "description": "Entry date of the accounting document", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "xblnr": {"name": "xblnr", "description": "Reference document number", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "waers": {"name": "waers", "description": "Document currency (key)", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "glvor": {"name": "glvor", "description": "Business transaction", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "awkey": {"name": "awkey", "description": "Reference key", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "fikrs": {"name": "fikrs", "description": "Financial management area", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "hwaer": {"name": "hwaer", "description": "Local currency key", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "hwae2": {"name": "hwae2", "description": "Currency key of the second local currency", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "hwae3": {"name": "hwae3", "description": "Currency key of the third local currency", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "awsys": {"name": "awsys", "description": "Logical system", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "ldgrp": {"name": "ldgrp", "description": "Ledger group", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "kursf": {"name": "kursf", "description": "Effective exchange rate in line item", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "anln1": {"name": "anln1", "description": "Main asset number", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "anln2": {"name": "anln2", "description": "Asset subnumber - new, four-digit", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "aufnr": {"name": "aufnr", "description": "Order number", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "augbl": {"name": "augbl", "description": "Clearing document number", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "augdt": {"name": "augdt", "description": "Clearing date", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "ebeln": {"name": "ebeln", "description": "Purchasing document number", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "ebelp": {"name": "ebelp", "description": "Item number of purchasing document", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "eten2": {"name": "eten2", "description": "Schedule number", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "filkd": {"name": "filkd", "description": "Branch account number", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "gsber": {"name": "gsber", "description": "Business area", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "koart": {"name": "koart", "description": "Account types", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "kostl": {"name": "kostl", "description": "Cost center", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "maber": {"name": "maber", "description": "Dunning area", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "madat": {"name": "madat", "description": "Date of last dunning notices", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "mansp": {"name": "mansp", "description": "Dunning lock", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "manst": {"name": "manst", "description": "Dunning level", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "mschl": {"name": "mschl", "description": "Dunning key", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "mwskz": {"name": "mwskz", "description": "Tax on sales/purchases code", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "posn2": {"name": "posn2", "description": "Sales document items", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "qbshb": {"name": "qbshb", "description": "Withholding tax amount in document currency", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "qsfbt": {"name": "qsfbt", "description": "Withholding tax exempt amount in document currency", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "qsshb": {"name": "qsshb", "description": "Withholding tax base amount in document currency", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "rebzg": {"name": "rebzg", "description": "Document number of the invoice to which the transaction belongs", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "samnr": {"name": "samnr", "description": "Invoice list number", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "sgtxt": {"name": "sgtxt", "description": "Item text", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "shkzg": {"name": "shkzg", "description": "Debit/credit indicator", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "skfbt": {"name": "skfbt", "description": "Amount eligible for cash discount in document currency", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "wskto": {"name": "wskto", "description": "Cash discount amount in document currency", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "sknto": {"name": "sknto", "description": "Cash discount amount in local currency", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "umsks": {"name": "umsks", "description": "Transaction class special general ledger", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "umskz": {"name": "umskz", "description": "Special G/L indicator", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "uzawe": {"name": "uzawe", "description": "Additional payment method", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "valut": {"name": "valut", "description": "Value date", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "vbel2": {"name": "vbel2", "description": "Sales document", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "vbeln": {"name": "vbeln", "description": "Billing", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "vbewa": {"name": "vbewa", "description": "Flow type", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "vbund": {"name": "vbund", "description": "Company id of trading partner", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "vertn": {"name": "vertn", "description": "Contract number", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "vertt": {"name": "vertt", "description": "Contract type", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "werks": {"name": "werks", "description": "Plant", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "wverw": {"name": "wverw", "description": "Type of bill of exchange usage", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "xzahl": {"name": "xzahl", "description": "Indicator (Is this a payment transaction?)", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "zbd1p": {"name": "zbd1p", "description": "Cash discount percentage 1", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "zbd1t": {"name": "zbd1t", "description": "Cash discount days 1", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "zbd2p": {"name": "zbd2p", "description": "Cash discount percentage 2", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "zbd2t": {"name": "zbd2t", "description": "Cash discount days 2", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "zbd3t": {"name": "zbd3t", "description": "Deadline for terms of payment net", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "zfbdt": {"name": "zfbdt", "description": "Baseline date for due date calculation", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "zlsch": {"name": "zlsch", "description": "Payment method", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "zlspr": {"name": "zlspr", "description": "Payment lock key", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "zterm": {"name": "zterm", "description": "Terms of payment key", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "xref1": {"name": "xref1", "description": "Reference key of the business partner", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "zuonr": {"name": "zuonr", "description": "Assignemnt number", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "rstgr": {"name": "rstgr", "description": "Reason code for payments", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "rebzt": {"name": "rebzt", "description": "Type of follow-on document", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "hkont": {"name": "hkont", "description": "G/L account in general ledger accounting", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "pswbt": {"name": "pswbt", "description": "Amount for general ledger update (absolute)", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "zbfix": {"name": "zbfix", "description": "Fixed payment condition", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "xnegp": {"name": "xnegp", "description": "Indicator (negative posting)", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "ccbtc": {"name": "ccbtc", "description": "Payment cards (Settlement run)", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "rfzei": {"name": "rfzei", "description": "Payment card item", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "xref3": {"name": "xref3", "description": "Reference key for the document items", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "kkber": {"name": "kkber", "description": "Credit control area", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "dtws1": {"name": "dtws1", "description": "Instruction 1", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "dtws2": {"name": "dtws2", "description": "Instruction 2", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "dtws3": {"name": "dtws3", "description": "Instruction 3", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "dtws4": {"name": "dtws4", "description": "Instruction 4", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "projk": {"name": "projk", "description": "WBS element in external format", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "absbt": {"name": "absbt", "description": "Credit Management--Guaranteed amount (absolute)", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "kidno": {"name": "kidno", "description": "Payment reference", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "xpypr": {"name": "xpypr", "description": "Indicator (Payment order exists for this item)", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "secco": {"name": "secco", "description": "Withholding tax section", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "bupla": {"name": "bupla", "description": "Business place", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "pyamt": {"name": "pyamt", "description": "Amount in currency for automatic payment (absolute)", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "pycur": {"name": "pycur", "description": "Currency for automatic payment", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "cession_kz": {"name": "cession_kz", "description": "Accounts receivable pledging indicator", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "xragl": {"name": "xragl", "description": "Indicator (Clearing was undone)", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "auggj": {"name": "auggj", "description": "Fiscal year of clearing document", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "buzid": {"name": "buzid", "description": "Identification of posting line", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "bdiff": {"name": "bdiff", "description": "Valuation difference", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "agzei": {"name": "agzei", "description": "Clearing item", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "bdif2": {"name": "bdif2", "description": "Valuation difference for the second local currency", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "bdif3": {"name": "bdif3", "description": "Valuation difference for the third local currency", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "dabrz": {"name": "dabrz", "description": "Asset value date for billing", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "bewar": {"name": "bewar", "description": "Flow type", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "fkber": {"name": "fkber", "description": "Functional area", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "dmbtr": {"name": "dmbtr", "description": "Amount in local currency", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "imkey": {"name": "imkey", "description": "Internal key for Real Estate object", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "fkber_long": {"name": "fkber_long", "description": "Functional area (long)", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "kunnr": {"name": "kunnr", "description": "Customer number 1", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "kstar": {"name": "kstar", "description": "Cost element", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "meins": {"name": "meins", "description": "Base unit of measure", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "lifnr": {"name": "lifnr", "description": "Account number of vendor", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "pargb": {"name": "pargb", "description": "Business area of the business partner", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "menge": {"name": "menge", "description": "Quantity", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "pprct": {"name": "pprct", "description": "Partner profit center", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "pfkber": {"name": "pfkber", "description": "Functional area of partner", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "wrbtr": {"name": "wrbtr", "description": "Amount in document currency", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "saknr": {"name": "saknr", "description": "G/L account number", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "xlgclr": {"name": "xlgclr", "description": "Clearing specific to ledger groups", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "xopvw": {"name": "xopvw", "description": "Indicator (Open Item Management?)", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "zzspreg": {"name": "zzspreg", "description": "Special region", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "xreorg": {"name": "xreorg", "description": "Doc. contains open item that Was transferred during reorg.", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "zzbuspartn": {"name": "zzbuspartn", "description": "Business partner", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "zzproduct": {"name": "zzproduct", "description": "Product group", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "zzloca": {"name": "zzloca", "description": "City", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "zzchan": {"name": "zzchan", "description": "Distribution channel", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "zzlob": {"name": "zzlob", "description": "Business line", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "zzuserfld1": {"name": "zzuserfld1", "description": "Territory", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "zzuserfld2": {"name": "zzuserfld2", "description": "Owner/Cont.", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "zzuserfld3": {"name": "zzuserfld3", "description": "Vein", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "zzregion": {"name": "zzregion", "description": "User defined regions", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "zzstate": {"name": "zzstate", "description": "State/province code", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": "sap://models/extractor_reports/extractor_reports.yml", "build_path": null, "unrendered_config": {"materialized": "table", "schema": "sap_{{ var('directed_schema','dev') }}", "enabled": true}, "created_at": 1756850330.5212612, "relation_name": "\"postgres\".\"public_sap_dev\".\"sap__0fi_gl_14\"", "raw_code": "{{ config(enabled=var('sap_using_faglflexa', True) and var('sap_using_bkpf', True) and var('sap_using_bseg', True)) }}\n\nwith faglflexa as ( \n\n\tselect * \n\tfrom {{ ref('stg_sap__faglflexa') }}\n),\n\nbkpf as (\n\n    select *\n    from {{ ref('stg_sap__bkpf') }}\n),\n\nbseg as (\n\n    select *\n    from {{ ref('stg_sap__bseg') }}\n),\n\nfinal as (\n    \n    select\n        faglflexa.ryear,\n        faglflexa.docnr,\n        faglflexa.rldnr,\n        faglflexa.rbukrs,\n        faglflexa.docln,\n        faglflexa.activ,\n        faglflexa.rmvct,\n        faglflexa.rtcur,\n        faglflexa.runit,\n        faglflexa.awtyp,\n        faglflexa.rrcty,\n        faglflexa.rvers,\n        faglflexa.logsys,\n        faglflexa.racct,\n        faglflexa.cost_elem,\n        faglflexa.rcntr,\n        faglflexa.prctr,\n        faglflexa.rfarea,\n        faglflexa.rbusa,\n        faglflexa.kokrs,\n        faglflexa.segment,\n        faglflexa.scntr,\n        faglflexa.pprctr,\n        faglflexa.sfarea,\n        faglflexa.sbusa,\n        faglflexa.rassc,\n        faglflexa.psegment,\n        faglflexa.tsl,\n        faglflexa.hsl,\n        faglflexa.ksl,\n        faglflexa.osl,\n        faglflexa.msl,\n        faglflexa.wsl,\n        faglflexa.drcrk,\n        faglflexa.poper,\n        faglflexa.rwcur,\n        faglflexa.gjahr,\n        faglflexa.budat,\n        faglflexa.belnr,\n        faglflexa.buzei,\n        faglflexa.bschl,\n        faglflexa.bstat,\n        faglflexa.faglflexa_timestamp,\n        bkpf.bukrs,\n        bkpf.blart,\n        bkpf.bldat,\n        bkpf.monat,\n        bkpf.cpudt,\n        bkpf.xblnr,\n        bkpf.waers,\n        bkpf.glvor,\n        bkpf.awkey,\n        bkpf.fikrs,\n        bkpf.hwaer,\n        bkpf.hwae2,\n        bkpf.hwae3,\n        bkpf.awsys,\n        bkpf.ldgrp,\n        bkpf.kursf,\n        bseg.anln1,\n        bseg.anln2,\n        bseg.aufnr,\n        bseg.augbl,\n        bseg.augdt,\n        bseg.ebeln,\n        bseg.ebelp,\n        bseg.eten2, \n        bseg.filkd,\n        bseg.gsber, \n        bseg.koart, \n        bseg.kostl,\n        bseg.maber,\n        bseg.madat,\n        bseg.mansp,\n        bseg.manst,\n        bseg.mschl,\n        bseg.mwskz,\n        bseg.posn2,\n        bseg.qbshb,\n        bseg.qsfbt,\n        bseg.qsshb,\n        bseg.rebzg,\n        bseg.samnr,\n        bseg.sgtxt,\n        bseg.shkzg,\n        bseg.skfbt,\n        bseg.wskto,\n        bseg.sknto, \n        bseg.umsks,\n        bseg.umskz,\n        bseg.uzawe,\n        bseg.valut,\n        bseg.vbel2,\n        bseg.vbeln,\n        bseg.vbewa,\n        bseg.vbund,\n        bseg.vertn,\n        bseg.vertt, \n        bseg.werks, \n        bseg.wverw, \n        bseg.xzahl, \n        bseg.zbd1p,\n        bseg.zbd1t,\n        bseg.zbd2p,\n        bseg.zbd2t,\n        bseg.zbd3t,\n        bseg.zfbdt, \n        bseg.zlsch,\n        bseg.zlspr,\n        bseg.zterm,\n        bseg.zuonr,\n        bseg.xref1,\n        bseg.xref2, \n        bseg.rstgr,  \n        bseg.rebzt,\n        bseg.pswsl,\n        bseg.pswbt,\n        bseg.hkont,\n        bseg.xnegp,\n        bseg.zbfix,\n        bseg.rfzei,\n        bseg.ccbtc,\n        bseg.kkber,\n        bseg.xref3,\n        bseg.dtws1,\n        bseg.dtws2,\n        bseg.dtws3,\n        bseg.dtws4,\n        bseg.absbt, \n        bseg.projk,\n        bseg.xpypr,\n        bseg.kidno, \n        bseg.bupla,\n        bseg.secco, \n        bseg.pycur,\n        bseg.pyamt, \n        bseg.xragl,\n        bseg.cession_kz,\n        bseg.buzid,\n        bseg.auggj,\n        bseg.agzei, \n        bseg.bdiff,\n        bseg.bdif2,\n        bseg.bdif3,\n        bseg.bewar,\n        bseg.dabrz,\n        bseg.dmbtr,\n        bseg.fkber,\n        bseg.fkber_long,\n        bseg.imkey,\n        bseg.kstar,\n        bseg.kunnr,\n        bseg.lifnr,\n        bseg.meins,\n        bseg.menge,\n        bseg.pargb, \n        bseg.pfkber, \n        bseg.pprct, \n        bseg.saknr,\n        bseg.wrbtr,\n        bseg.xopvw,\n        bseg.xlgclr,\n        bkpf.xreorg,\n        bseg.zzspreg,\n        bseg.zzbuspartn,\n        bseg.zzproduct,\n        bseg.zzloca,\n        bseg.zzchan,\n        bseg.zzlob, \n        bseg.zzuserfld1,\n        bseg.zzuserfld2,\n        bseg.zzuserfld3,\n        bseg.zzregion,\n        bseg.zzstate\n    from faglflexa\n    inner join bkpf\n        on bkpf.bukrs = faglflexa.rbukrs\n        and bkpf.belnr = faglflexa.belnr\n        and bkpf.gjahr = faglflexa.gjahr\n        and bkpf.mandt = faglflexa.rclnt\n    left join bseg\n        on bkpf.mandt = bseg.mandt\n        and bkpf.bukrs = bseg.bukrs\n        and bkpf.belnr = bseg.belnr\n        and bkpf.gjahr = bseg.gjahr\n        and faglflexa.buzei = bseg.buzei\n    where 1=1\n    {% if var('bkpf_mandt_var',[]) %}  \n    and bkpf.mandt = '{{ var('bkpf_mandt_var') }}'\n    {% endif %}\n    {% if var('faglflexa_rldnr_var',[]) %}\n    and faglflexa.rldnr = '{{ var('faglflexa_rldnr_var') }}'\n    {% endif %}\n)\n\nselect *\nfrom final", "doc_blocks": [], "language": "sql", "refs": [{"name": "stg_sap__faglflexa", "package": null, "version": null}, {"name": "stg_sap__bkpf", "package": null, "version": null}, {"name": "stg_sap__bseg", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": [], "nodes": ["model.sap.stg_sap__faglflexa", "model.sap.stg_sap__bkpf", "model.sap.stg_sap__bseg"]}, "compiled_path": "target/compiled/sap/models/extractor_reports/sap__0fi_gl_14.sql", "compiled": true, "compiled_code": "\n\nwith faglflexa as ( \n\n\tselect * \n\tfrom \"postgres\".\"public_sap_dev\".\"stg_sap__faglflexa\"\n),\n\nbkpf as (\n\n    select *\n    from \"postgres\".\"public_sap_dev\".\"stg_sap__bkpf\"\n),\n\nbseg as (\n\n    select *\n    from \"postgres\".\"public_sap_dev\".\"stg_sap__bseg\"\n),\n\nfinal as (\n    \n    select\n        faglflexa.ryear,\n        faglflexa.docnr,\n        faglflexa.rldnr,\n        faglflexa.rbukrs,\n        faglflexa.docln,\n        faglflexa.activ,\n        faglflexa.rmvct,\n        faglflexa.rtcur,\n        faglflexa.runit,\n        faglflexa.awtyp,\n        faglflexa.rrcty,\n        faglflexa.rvers,\n        faglflexa.logsys,\n        faglflexa.racct,\n        faglflexa.cost_elem,\n        faglflexa.rcntr,\n        faglflexa.prctr,\n        faglflexa.rfarea,\n        faglflexa.rbusa,\n        faglflexa.kokrs,\n        faglflexa.segment,\n        faglflexa.scntr,\n        faglflexa.pprctr,\n        faglflexa.sfarea,\n        faglflexa.sbusa,\n        faglflexa.rassc,\n        faglflexa.psegment,\n        faglflexa.tsl,\n        faglflexa.hsl,\n        faglflexa.ksl,\n        faglflexa.osl,\n        faglflexa.msl,\n        faglflexa.wsl,\n        faglflexa.drcrk,\n        faglflexa.poper,\n        faglflexa.rwcur,\n        faglflexa.gjahr,\n        faglflexa.budat,\n        faglflexa.belnr,\n        faglflexa.buzei,\n        faglflexa.bschl,\n        faglflexa.bstat,\n        faglflexa.faglflexa_timestamp,\n        bkpf.bukrs,\n        bkpf.blart,\n        bkpf.bldat,\n        bkpf.monat,\n        bkpf.cpudt,\n        bkpf.xblnr,\n        bkpf.waers,\n        bkpf.glvor,\n        bkpf.awkey,\n        bkpf.fikrs,\n        bkpf.hwaer,\n        bkpf.hwae2,\n        bkpf.hwae3,\n        bkpf.awsys,\n        bkpf.ldgrp,\n        bkpf.kursf,\n        bseg.anln1,\n        bseg.anln2,\n        bseg.aufnr,\n        bseg.augbl,\n        bseg.augdt,\n        bseg.ebeln,\n        bseg.ebelp,\n        bseg.eten2, \n        bseg.filkd,\n        bseg.gsber, \n        bseg.koart, \n        bseg.kostl,\n        bseg.maber,\n        bseg.madat,\n        bseg.mansp,\n        bseg.manst,\n        bseg.mschl,\n        bseg.mwskz,\n        bseg.posn2,\n        bseg.qbshb,\n        bseg.qsfbt,\n        bseg.qsshb,\n        bseg.rebzg,\n        bseg.samnr,\n        bseg.sgtxt,\n        bseg.shkzg,\n        bseg.skfbt,\n        bseg.wskto,\n        bseg.sknto, \n        bseg.umsks,\n        bseg.umskz,\n        bseg.uzawe,\n        bseg.valut,\n        bseg.vbel2,\n        bseg.vbeln,\n        bseg.vbewa,\n        bseg.vbund,\n        bseg.vertn,\n        bseg.vertt, \n        bseg.werks, \n        bseg.wverw, \n        bseg.xzahl, \n        bseg.zbd1p,\n        bseg.zbd1t,\n        bseg.zbd2p,\n        bseg.zbd2t,\n        bseg.zbd3t,\n        bseg.zfbdt, \n        bseg.zlsch,\n        bseg.zlspr,\n        bseg.zterm,\n        bseg.zuonr,\n        bseg.xref1,\n        bseg.xref2, \n        bseg.rstgr,  \n        bseg.rebzt,\n        bseg.pswsl,\n        bseg.pswbt,\n        bseg.hkont,\n        bseg.xnegp,\n        bseg.zbfix,\n        bseg.rfzei,\n        bseg.ccbtc,\n        bseg.kkber,\n        bseg.xref3,\n        bseg.dtws1,\n        bseg.dtws2,\n        bseg.dtws3,\n        bseg.dtws4,\n        bseg.absbt, \n        bseg.projk,\n        bseg.xpypr,\n        bseg.kidno, \n        bseg.bupla,\n        bseg.secco, \n        bseg.pycur,\n        bseg.pyamt, \n        bseg.xragl,\n        bseg.cession_kz,\n        bseg.buzid,\n        bseg.auggj,\n        bseg.agzei, \n        bseg.bdiff,\n        bseg.bdif2,\n        bseg.bdif3,\n        bseg.bewar,\n        bseg.dabrz,\n        bseg.dmbtr,\n        bseg.fkber,\n        bseg.fkber_long,\n        bseg.imkey,\n        bseg.kstar,\n        bseg.kunnr,\n        bseg.lifnr,\n        bseg.meins,\n        bseg.menge,\n        bseg.pargb, \n        bseg.pfkber, \n        bseg.pprct, \n        bseg.saknr,\n        bseg.wrbtr,\n        bseg.xopvw,\n        bseg.xlgclr,\n        bkpf.xreorg,\n        bseg.zzspreg,\n        bseg.zzbuspartn,\n        bseg.zzproduct,\n        bseg.zzloca,\n        bseg.zzchan,\n        bseg.zzlob, \n        bseg.zzuserfld1,\n        bseg.zzuserfld2,\n        bseg.zzuserfld3,\n        bseg.zzregion,\n        bseg.zzstate\n    from faglflexa\n    inner join bkpf\n        on bkpf.bukrs = faglflexa.rbukrs\n        and bkpf.belnr = faglflexa.belnr\n        and bkpf.gjahr = faglflexa.gjahr\n        and bkpf.mandt = faglflexa.rclnt\n    left join bseg\n        on bkpf.mandt = bseg.mandt\n        and bkpf.bukrs = bseg.bukrs\n        and bkpf.belnr = bseg.belnr\n        and bkpf.gjahr = bseg.gjahr\n        and faglflexa.buzei = bseg.buzei\n    where 1=1\n    \n    \n)\n\nselect *\nfrom final", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null, "primary_key": [], "time_spine": null}, "model.sap.sap__0fi_gl_10": {"database": "postgres", "schema": "public_sap_dev", "name": "sap__0fi_gl_10", "resource_type": "model", "package_name": "sap", "path": "extractor_reports/sap__0fi_gl_10.sql", "original_file_path": "models/extractor_reports/sap__0fi_gl_10.sql", "unique_id": "model.sap.sap__0fi_gl_10", "fqn": ["sap", "extractor_reports", "sap__0fi_gl_10"], "alias": "sap__0fi_gl_10", "checksum": {"name": "sha256", "checksum": "7b6a3193a5cbb590e61e3d08f320ca1b9069a77d46f8e1203c1af5836f37ecb5"}, "config": {"enabled": true, "alias": null, "schema": "sap_dev", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "freshness": null}, "tags": [], "description": "This model extracts the transaction figures from the leading ledger in the new General Ledger.", "columns": {"ryear": {"name": "ryear", "description": "Fiscal year", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "activ": {"name": "activ", "description": "General ledger (transaction attributes)", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "rmvct": {"name": "rmvct", "description": "Transaction type", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "rtcur": {"name": "rtcur", "description": "Currency key", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "runit": {"name": "runit", "description": "Base unit of measurement", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "awtyp": {"name": "awtyp", "description": "Reference transaction", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "rldnr": {"name": "rldnr", "description": "Ledgers in general ledger accounting", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "rrcty": {"name": "rrcty", "description": "Record type", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "rvers": {"name": "rvers", "description": "Version", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "logsys": {"name": "logsys", "description": "Logical system", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "racct": {"name": "racct", "description": "Account number", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "cost_elem": {"name": "cost_elem", "description": "Cost element", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "rbukrs": {"name": "rbukrs", "description": "Company code", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "rcntr": {"name": "rcntr", "description": "Cost center", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "prctr": {"name": "prctr", "description": "Profit center", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "rfarea": {"name": "rfarea", "description": "Functional area", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "rbusa": {"name": "rbusa", "description": "Business area", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "kokrs": {"name": "kokrs", "description": "Controlling area", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "segment": {"name": "segment", "description": "Segment for segment reporting", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "scntr": {"name": "scntr", "description": "Sender cost center", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "pprctr": {"name": "pprctr", "description": "Partner profit center", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "sfarea": {"name": "sfarea", "description": "Partner functional area", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "sbusa": {"name": "sbusa", "description": "Business area of the business partner", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "rassc": {"name": "rassc", "description": "Company id of trading partner", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "psegment": {"name": "psegment", "description": "Partner segment for segment reporting", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "faglflext_timestamp": {"name": "faglflext_timestamp", "description": "UTC time stamp in short form (YYYYMMDDhhmmss)", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "currency_type": {"name": "currency_type", "description": "Currency type", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "fiscal_period": {"name": "fiscal_period", "description": "Fiscal year/period", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "debit_amount": {"name": "debit_amount", "description": "Total debit postings", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "credit_amount": {"name": "credit_amount", "description": "Total credit postings", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "accumulated_balance": {"name": "accumulated_balance", "description": "accumulated balance from the previous fiscal period. Value initially derived from hslvt, tslvt, kslvt, or oslvt fields. Will match turnover at the beginning of the first fiscal period of the year", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "turnover": {"name": "turnover", "description": "Turnover amount from the previous fiscal period. Value initially derived from aliased hslvt, tslvt, kslvt, or oslvt fields (hsmvt/tsmvt/ksmvt/osmvt). Will match accumulated_value at the beginning of the first fiscal period of the year", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": "sap://models/extractor_reports/extractor_reports.yml", "build_path": null, "unrendered_config": {"materialized": "table", "schema": "sap_{{ var('directed_schema','dev') }}", "enabled": true}, "created_at": 1756850330.47005, "relation_name": "\"postgres\".\"public_sap_dev\".\"sap__0fi_gl_10\"", "raw_code": "{{ config(enabled=var('sap_using_faglflext', True) and var('sap_using_t001', True)) }}\n\nwith unpivot_gl as ( \n\n\tselect * \n\tfrom {{ ref('int_sap__0fi_gl_10_unpivot') }}\n),\n\nfinal as (\n\n    select \n        ryear,\n        activ,\n        rmvct,\n        rtcur,\n        runit,\n        awtyp,\n        rldnr,\n        rrcty,\n        rvers,\n        logsys,\n        racct,\n        cost_elem,\n        rbukrs,\n        rcntr,\n        prctr,\n        rfarea,\n        rbusa,\n        kokrs,\n        segment,\n        scntr,\n        pprctr,\n        sfarea,\n        sbusa,\n        rassc,\n        psegment,\n        faglflext_timestamp,\n        currency_type,\n        fiscal_period,\n        sum(debit_amount) as debit_amount,\n        sum(credit_amount) as credit_amount,\n        sum(accumulated_balance) as accumulated_balance,\n        sum(turnover) as turnover\n    from unpivot_gl\n    {{ dbt_utils.group_by(28) }}  \n)\n\nselect * \nfrom final", "doc_blocks": [], "language": "sql", "refs": [{"name": "int_sap__0fi_gl_10_unpivot", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt_utils.group_by"], "nodes": ["model.sap.int_sap__0fi_gl_10_unpivot"]}, "compiled_path": "target/compiled/sap/models/extractor_reports/sap__0fi_gl_10.sql", "compiled": true, "compiled_code": "\n\nwith unpivot_gl as ( \n\n\tselect * \n\tfrom \"postgres\".\"public_sap_dev\".\"int_sap__0fi_gl_10_unpivot\"\n),\n\nfinal as (\n\n    select \n        ryear,\n        activ,\n        rmvct,\n        rtcur,\n        runit,\n        awtyp,\n        rldnr,\n        rrcty,\n        rvers,\n        logsys,\n        racct,\n        cost_elem,\n        rbukrs,\n        rcntr,\n        prctr,\n        rfarea,\n        rbusa,\n        kokrs,\n        segment,\n        scntr,\n        pprctr,\n        sfarea,\n        sbusa,\n        rassc,\n        psegment,\n        faglflext_timestamp,\n        currency_type,\n        fiscal_period,\n        sum(debit_amount) as debit_amount,\n        sum(credit_amount) as credit_amount,\n        sum(accumulated_balance) as accumulated_balance,\n        sum(turnover) as turnover\n    from unpivot_gl\n    group by 1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28  \n)\n\nselect * \nfrom final", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null, "primary_key": [], "time_spine": null}, "model.sap.sap__0comp_code_attr": {"database": "postgres", "schema": "public_sap_dev", "name": "sap__0comp_code_attr", "resource_type": "model", "package_name": "sap", "path": "extractor_reports/sap__0comp_code_attr.sql", "original_file_path": "models/extractor_reports/sap__0comp_code_attr.sql", "unique_id": "model.sap.sap__0comp_code_attr", "fqn": ["sap", "extractor_reports", "sap__0comp_code_attr"], "alias": "sap__0comp_code_attr", "checksum": {"name": "sha256", "checksum": "824c4be4b3ec29176d7398237f03afdbdbc7115767b1d1a0fd4d3ed6f622abf4"}, "config": {"enabled": true, "alias": null, "schema": "sap_dev", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "freshness": null}, "tags": [], "description": "This model is used for loading company code attributes, extracting from the t001 data source.", "columns": {"mandt": {"name": "mandt", "description": "Client", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "bukrs": {"name": "bukrs", "description": "Company code", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "waers": {"name": "waers", "description": "Currency key", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "periv": {"name": "periv", "description": "Fiscal year variant", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "ktopl": {"name": "ktopl", "description": "Chart of accounts", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "land1": {"name": "land1", "description": "Country key", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "kkber": {"name": "kkber", "description": "Credit control area", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "rcomp": {"name": "rcomp", "description": "Company", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": "sap://models/extractor_reports/extractor_reports.yml", "build_path": null, "unrendered_config": {"materialized": "table", "schema": "sap_{{ var('directed_schema','dev') }}", "enabled": true}, "created_at": 1756850330.4348907, "relation_name": "\"postgres\".\"public_sap_dev\".\"sap__0comp_code_attr\"", "raw_code": "{{ config(enabled=var('sap_using_t001', True)) }}\n\nwith t001 as ( \n\n\tselect * \n\tfrom {{ ref('stg_sap__t001') }}\n),\n\nfinal as (\n\n    select\n        mandt,\n        bukrs,\n        land1,\n        waers,\n        ktopl,\n        kkber,\n        periv,\n        rcomp\n    from t001\n\n    {% if var('t001_mandt_var',[]) %}\n    where mandt = '{{ var('t001_mandt_var') }}'\n    {% endif %}\n)\n\nselect * \nfrom final", "doc_blocks": [], "language": "sql", "refs": [{"name": "stg_sap__t001", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": [], "nodes": ["model.sap.stg_sap__t001"]}, "compiled_path": "target/compiled/sap/models/extractor_reports/sap__0comp_code_attr.sql", "compiled": true, "compiled_code": "\n\nwith t001 as ( \n\n\tselect * \n\tfrom \"postgres\".\"public_sap_dev\".\"stg_sap__t001\"\n),\n\nfinal as (\n\n    select\n        mandt,\n        bukrs,\n        land1,\n        waers,\n        ktopl,\n        kkber,\n        periv,\n        rcomp\n    from t001\n\n    \n)\n\nselect * \nfrom final", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null, "primary_key": [], "time_spine": null}, "model.sap.sap__0comp_code_text": {"database": "postgres", "schema": "public_sap_dev", "name": "sap__0comp_code_text", "resource_type": "model", "package_name": "sap", "path": "extractor_reports/sap__0comp_code_text.sql", "original_file_path": "models/extractor_reports/sap__0comp_code_text.sql", "unique_id": "model.sap.sap__0comp_code_text", "fqn": ["sap", "extractor_reports", "sap__0comp_code_text"], "alias": "sap__0comp_code_text", "checksum": {"name": "sha256", "checksum": "177f04199a522b9a729d0df8c9c64d7d94fa66c2c1428c71cf8508d77b2a4819"}, "config": {"enabled": true, "alias": null, "schema": "sap_dev", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "freshness": null}, "tags": [], "description": "This model is used for loading company code text information, extracting from the t001 data source.", "columns": {"mandt": {"name": "mandt", "description": "Client", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "bukrs": {"name": "bukrs", "description": "Company code", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "txtmd": {"name": "txtmd", "description": "Name of company code or company", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "langu": {"name": "langu", "description": "Language key", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": "sap://models/extractor_reports/extractor_reports.yml", "build_path": null, "unrendered_config": {"materialized": "table", "schema": "sap_{{ var('directed_schema','dev') }}", "enabled": true}, "created_at": 1756850330.4365742, "relation_name": "\"postgres\".\"public_sap_dev\".\"sap__0comp_code_text\"", "raw_code": "{{ config(enabled=var('sap_using_t001', True)) }}\n\nwith t001 as ( \n\n\tselect * \n\tfrom {{ ref('stg_sap__t001') }}\n),\n\nfinal as (\n\n    select\n        mandt,\n        bukrs,\n        butxt as txtmd,\n        spras as langu\n    from t001\n)\n\nselect * \nfrom final", "doc_blocks": [], "language": "sql", "refs": [{"name": "stg_sap__t001", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": [], "nodes": ["model.sap.stg_sap__t001"]}, "compiled_path": "target/compiled/sap/models/extractor_reports/sap__0comp_code_text.sql", "compiled": true, "compiled_code": "\n\nwith t001 as ( \n\n\tselect * \n\tfrom \"postgres\".\"public_sap_dev\".\"stg_sap__t001\"\n),\n\nfinal as (\n\n    select\n        mandt,\n        bukrs,\n        butxt as txtmd,\n        spras as langu\n    from t001\n)\n\nselect * \nfrom final", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null, "primary_key": [], "time_spine": null}, "model.sap.sap__0company_text": {"database": "postgres", "schema": "public_sap_dev", "name": "sap__0company_text", "resource_type": "model", "package_name": "sap", "path": "extractor_reports/sap__0company_text.sql", "original_file_path": "models/extractor_reports/sap__0company_text.sql", "unique_id": "model.sap.sap__0company_text", "fqn": ["sap", "extractor_reports", "sap__0company_text"], "alias": "sap__0company_text", "checksum": {"name": "sha256", "checksum": "d22d215faf4ce8fdb5c819c3cdc580248e493ec82d4543060161cb8dc347f4b5"}, "config": {"enabled": true, "alias": null, "schema": "sap_dev", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "freshness": null}, "tags": [], "description": "This model is used for loading customer text data, extracting from the t880 data source.", "columns": {"mandt": {"name": "mandt", "description": "Client", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "rcomp": {"name": "rcomp", "description": "Company", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "txtmd": {"name": "txtmd", "description": "Company name", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": "sap://models/extractor_reports/extractor_reports.yml", "build_path": null, "unrendered_config": {"materialized": "table", "schema": "sap_{{ var('directed_schema','dev') }}", "enabled": true}, "created_at": 1756850330.4374216, "relation_name": "\"postgres\".\"public_sap_dev\".\"sap__0company_text\"", "raw_code": "{{ config(enabled=var('sap_using_t880', True)) }}\n\nwith t880 as ( \n\n\tselect * \n\tfrom {{ ref('stg_sap__t880') }}\n),\n\nfinal as (\n\n    select \n        mandt,\n        rcomp,\n        name1 as txtmd\n    from t880\n)\n\nselect * \nfrom final", "doc_blocks": [], "language": "sql", "refs": [{"name": "stg_sap__t880", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": [], "nodes": ["model.sap.stg_sap__t880"]}, "compiled_path": "target/compiled/sap/models/extractor_reports/sap__0company_text.sql", "compiled": true, "compiled_code": "\n\nwith t880 as ( \n\n\tselect * \n\tfrom \"postgres\".\"public_sap_dev\".\"stg_sap__t880\"\n),\n\nfinal as (\n\n    select \n        mandt,\n        rcomp,\n        name1 as txtmd\n    from t880\n)\n\nselect * \nfrom final", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null, "primary_key": [], "time_spine": null}, "model.sap.int_sap__0fi_gl_10_sums": {"database": "postgres", "schema": "public_sap_dev", "name": "int_sap__0fi_gl_10_sums", "resource_type": "model", "package_name": "sap", "path": "extractor_reports/intermediate/int_sap__0fi_gl_10_sums.sql", "original_file_path": "models/extractor_reports/intermediate/int_sap__0fi_gl_10_sums.sql", "unique_id": "model.sap.int_sap__0fi_gl_10_sums", "fqn": ["sap", "extractor_reports", "intermediate", "int_sap__0fi_gl_10_sums"], "alias": "int_sap__0fi_gl_10_sums", "checksum": {"name": "sha256", "checksum": "0bfbdaf4c0daaaf52428ffc325413f076ce37f827e3bb50cc9b1c1900a5da50b"}, "config": {"enabled": true, "alias": null, "schema": "sap_dev", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "freshness": null}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "unrendered_config": {"materialized": "table", "schema": "sap_{{ var('directed_schema','dev') }}", "enabled": true}, "created_at": 1756850326.3623247, "relation_name": "\"postgres\".\"public_sap_dev\".\"int_sap__0fi_gl_10_sums\"", "raw_code": "{{ config(enabled=var('sap_using_faglflext', True) and var('sap_using_t001', True)) }}\n\n\nwith faglflext as ( \n\n\tselect * \n\tfrom {{ ref('stg_sap__faglflext') }}\n),\n\nt001 as (\n\n    select *\n    from {{ ref('stg_sap__t001') }}\n),\n\nfinal as (\n\n    select\n        faglflext.drcrk,\n        faglflext.objnr00,\n        faglflext.objnr01,\n        faglflext.objnr02,\n        faglflext.objnr03,\n        faglflext.objnr04,\n        faglflext.objnr05,\n        faglflext.objnr06,\n        faglflext.objnr07,\n        faglflext.objnr08,\n        faglflext.rclnt,\n        faglflext.rpmax,\n        faglflext.ryear,\n        faglflext.activ,\n        faglflext.rmvct,\n        faglflext.rtcur,\n        faglflext.runit,\n        faglflext.awtyp,\n        faglflext.rldnr,\n        faglflext.rrcty,\n        faglflext.rvers,\n        faglflext.logsys,\n        faglflext.racct,\n        faglflext.cost_elem,\n        faglflext.rbukrs,\n        faglflext.rcntr,\n        faglflext.prctr,\n        faglflext.rfarea,\n        faglflext.rbusa,\n        faglflext.kokrs,\n        faglflext.segment,\n        faglflext.zzspreg,\n        faglflext.scntr,\n        faglflext.pprctr,\n        faglflext.sfarea,\n        faglflext.sbusa,\n        faglflext.rassc,\n        faglflext.psegment,\n        t001.waers,\n        t001.periv,\n        t001.ktopl,\n        cast(faglflext.hslvt as {{ dbt.type_numeric() }}) as hslvt,  \n        cast(faglflext.hslvt as {{ dbt.type_numeric() }}) as hsmvt,  \n        cast(faglflext.hsl01 as {{ dbt.type_numeric() }}) as hsl01,  \n        cast((faglflext.hslvt+faglflext.hsl01) as {{ dbt.type_numeric() }}) as hsm01,\n        cast(faglflext.hsl02 as {{ dbt.type_numeric() }}) as hsl02,  \n        cast((faglflext.hslvt+faglflext.hsl01+faglflext.hsl02) as {{ dbt.type_numeric() }}) as hsm02,\n        cast(faglflext.hsl03 as {{ dbt.type_numeric() }}) as hsl03,  \n        cast((faglflext.hslvt+faglflext.hsl01+faglflext.hsl02+faglflext.hsl03) as {{ dbt.type_numeric() }}) as hsm03,\n        cast(faglflext.hsl04 as {{ dbt.type_numeric() }}) as hsl04,  \n        cast((faglflext.hslvt+faglflext.hsl01+faglflext.hsl02+faglflext.hsl03+faglflext.hsl04) as {{ dbt.type_numeric() }}) as hsm04,\n        cast(faglflext.hsl05 as {{ dbt.type_numeric() }}) as hsl05,  \n        cast((faglflext.hslvt+faglflext.hsl01+faglflext.hsl02+faglflext.hsl03+faglflext.hsl04+faglflext.hsl05) as {{ dbt.type_numeric() }}) as hsm05,\n        cast(faglflext.hsl06 as {{ dbt.type_numeric() }}) as hsl06,  \n        cast((faglflext.hslvt+faglflext.hsl01+faglflext.hsl02+faglflext.hsl03+faglflext.hsl04+faglflext.hsl05+faglflext.hsl06) as {{ dbt.type_numeric() }}) as hsm06,\n        cast(faglflext.hsl07 as {{ dbt.type_numeric() }}) as hsl07,  \n        cast((faglflext.hslvt+faglflext.hsl01+faglflext.hsl02+faglflext.hsl03+faglflext.hsl04+faglflext.hsl05+faglflext.hsl06+faglflext.hsl07) as {{ dbt.type_numeric() }}) as hsm07,\n        cast(faglflext.hsl08 as {{ dbt.type_numeric() }}) as hsl08,  \n        cast((faglflext.hslvt+faglflext.hsl01+faglflext.hsl02+faglflext.hsl03+faglflext.hsl04+faglflext.hsl05+faglflext.hsl06+faglflext.hsl07+faglflext.hsl08) as {{ dbt.type_numeric() }}) as hsm08,\n        cast(faglflext.hsl09 as {{ dbt.type_numeric() }}) as hsl09, \n        cast((faglflext.hslvt+faglflext.hsl01+faglflext.hsl02+faglflext.hsl03+faglflext.hsl04+faglflext.hsl05+faglflext.hsl06+faglflext.hsl07+faglflext.hsl08+faglflext.hsl09) as {{ dbt.type_numeric() }}) as hsm09,\n        cast(faglflext.hsl10 as {{ dbt.type_numeric() }}) as hsl10, \n        cast((faglflext.hslvt+faglflext.hsl01+faglflext.hsl02+faglflext.hsl03+faglflext.hsl04+faglflext.hsl05+faglflext.hsl06+faglflext.hsl07+faglflext.hsl08+faglflext.hsl09+faglflext.hsl10) as {{ dbt.type_numeric() }}) as hsm10,\n        cast(faglflext.hsl11 as {{ dbt.type_numeric() }}) as hsl11, \n        cast((faglflext.hslvt+faglflext.hsl01+faglflext.hsl02+faglflext.hsl03+faglflext.hsl04+faglflext.hsl05+faglflext.hsl06+faglflext.hsl07+faglflext.hsl08+faglflext.hsl09+faglflext.hsl10+faglflext.hsl11) as {{ dbt.type_numeric() }}) as hsm11,\n        cast(faglflext.hsl12 as {{ dbt.type_numeric() }}) as hsl12, \n        cast((faglflext.hslvt+faglflext.hsl01+faglflext.hsl02+faglflext.hsl03+faglflext.hsl04+faglflext.hsl05+faglflext.hsl06+faglflext.hsl07+faglflext.hsl08+faglflext.hsl09+faglflext.hsl10+faglflext.hsl11+faglflext.hsl12) as {{ dbt.type_numeric() }}) as hsm12,\n        cast(faglflext.hsl13 as {{ dbt.type_numeric() }}) as hsl13, \n        cast((faglflext.hslvt+faglflext.hsl01+faglflext.hsl02+faglflext.hsl03+faglflext.hsl04+faglflext.hsl05+faglflext.hsl06+faglflext.hsl07+faglflext.hsl08+faglflext.hsl09+faglflext.hsl10+faglflext.hsl11+faglflext.hsl12+faglflext.hsl13) as {{ dbt.type_numeric() }}) as hsm13,\n        cast(faglflext.hsl14 as {{ dbt.type_numeric() }}) as hsl14, \n        cast((faglflext.hslvt+faglflext.hsl01+faglflext.hsl02+faglflext.hsl03+faglflext.hsl04+faglflext.hsl05+faglflext.hsl06+faglflext.hsl07+faglflext.hsl08+faglflext.hsl09+faglflext.hsl10+faglflext.hsl11+faglflext.hsl12+faglflext.hsl13+faglflext.hsl14) as {{ dbt.type_numeric() }}) as hsm14,\n        cast(faglflext.hsl15 as {{ dbt.type_numeric() }}) as hsl15, \n        cast((faglflext.hslvt+faglflext.hsl01+faglflext.hsl02+faglflext.hsl03+faglflext.hsl04+faglflext.hsl05+faglflext.hsl06+faglflext.hsl07+faglflext.hsl08+faglflext.hsl09+faglflext.hsl10+faglflext.hsl11+faglflext.hsl12+faglflext.hsl13+faglflext.hsl14+faglflext.hsl15) as {{ dbt.type_numeric() }}) as hsm15,\n        cast(faglflext.hsl16 as {{ dbt.type_numeric() }}) as hsl16, \n        cast((faglflext.hslvt+faglflext.hsl01+faglflext.hsl02+faglflext.hsl03+faglflext.hsl04+faglflext.hsl05+faglflext.hsl06+faglflext.hsl07+faglflext.hsl08+faglflext.hsl09+faglflext.hsl10+faglflext.hsl11+faglflext.hsl12+faglflext.hsl13+faglflext.hsl14+faglflext.hsl15+faglflext.hsl16) as {{ dbt.type_numeric() }}) as hsm16, \n        cast(faglflext.tslvt as {{ dbt.type_numeric() }}) as tslvt, \n        cast(faglflext.tslvt as {{ dbt.type_numeric() }}) as tsmvt, \n        cast(faglflext.tsl01 as {{ dbt.type_numeric() }}) as tsl01,  \n        cast((faglflext.tslvt+faglflext.tsl01) as {{ dbt.type_numeric() }}) as tsm01,\n        cast(faglflext.tsl02 as {{ dbt.type_numeric() }}) as tsl02,  \n        cast((faglflext.tslvt+faglflext.tsl01+faglflext.tsl02) as {{ dbt.type_numeric() }}) as tsm02,\n        cast(faglflext.tsl03 as {{ dbt.type_numeric() }}) as tsl03,  \n        cast((faglflext.tslvt+faglflext.tsl01+faglflext.tsl02+faglflext.tsl03) as {{ dbt.type_numeric() }}) as tsm03,\n        cast(faglflext.tsl04 as {{ dbt.type_numeric() }}) as tsl04,  \n        cast((faglflext.tslvt+faglflext.tsl01+faglflext.tsl02+faglflext.tsl03+faglflext.tsl04) as {{ dbt.type_numeric() }}) as tsm04,\n        cast(faglflext.tsl05 as {{ dbt.type_numeric() }}) as tsl05,  \n        cast((faglflext.tslvt+faglflext.tsl01+faglflext.tsl02+faglflext.tsl03+faglflext.tsl04+faglflext.tsl05) as {{ dbt.type_numeric() }}) as tsm05,\n        cast(faglflext.tsl06 as {{ dbt.type_numeric() }}) as tsl06,  \n        cast((faglflext.tslvt+faglflext.tsl01+faglflext.tsl02+faglflext.tsl03+faglflext.tsl04+faglflext.tsl05+faglflext.tsl06) as {{ dbt.type_numeric() }}) as tsm06,\n        cast(faglflext.tsl07 as {{ dbt.type_numeric() }}) as tsl07,  \n        cast((faglflext.tslvt+faglflext.tsl01+faglflext.tsl02+faglflext.tsl03+faglflext.tsl04+faglflext.tsl05+faglflext.tsl06+faglflext.tsl07) as {{ dbt.type_numeric() }}) as tsm07,\n        cast(faglflext.tsl08 as {{ dbt.type_numeric() }}) as tsl08, \n        cast((faglflext.tslvt+faglflext.tsl01+faglflext.tsl02+faglflext.tsl03+faglflext.tsl04+faglflext.tsl05+faglflext.tsl06+faglflext.tsl07+faglflext.tsl08) as {{ dbt.type_numeric() }}) as tsm08,\n        cast(faglflext.tsl09 as {{ dbt.type_numeric() }}) as tsl09, \n        cast((faglflext.tslvt+faglflext.tsl01+faglflext.tsl02+faglflext.tsl03+faglflext.tsl04+faglflext.tsl05+faglflext.tsl06+faglflext.tsl07+faglflext.tsl08+faglflext.tsl09) as {{ dbt.type_numeric() }}) as tsm09,\n        cast(faglflext.tsl10 as {{ dbt.type_numeric() }}) as tsl10, \n        cast((faglflext.tslvt+faglflext.tsl01+faglflext.tsl02+faglflext.tsl03+faglflext.tsl04+faglflext.tsl05+faglflext.tsl06+faglflext.tsl07+faglflext.tsl08+faglflext.tsl09+faglflext.tsl10) as {{ dbt.type_numeric() }}) as tsm10,\n        cast(faglflext.tsl11 as {{ dbt.type_numeric() }}) as tsl11, \n        cast((faglflext.tslvt+faglflext.tsl01+faglflext.tsl02+faglflext.tsl03+faglflext.tsl04+faglflext.tsl05+faglflext.tsl06+faglflext.tsl07+faglflext.tsl08+faglflext.tsl09+faglflext.tsl10+faglflext.tsl11) as {{ dbt.type_numeric() }}) as tsm11,\n        cast(faglflext.tsl12 as {{ dbt.type_numeric() }}) as tsl12,\n        cast((faglflext.tslvt+faglflext.tsl01+faglflext.tsl02+faglflext.tsl03+faglflext.tsl04+faglflext.tsl05+faglflext.tsl06+faglflext.tsl07+faglflext.tsl08+faglflext.tsl09+faglflext.tsl10+faglflext.tsl11+faglflext.tsl12) as {{ dbt.type_numeric() }}) as tsm12,\n        cast(faglflext.tsl13 as {{ dbt.type_numeric() }}) as tsl13, \n        cast((faglflext.tslvt+faglflext.tsl01+faglflext.tsl02+faglflext.tsl03+faglflext.tsl04+faglflext.tsl05+faglflext.tsl06+faglflext.tsl07+faglflext.tsl08+faglflext.tsl09+faglflext.tsl10+faglflext.tsl11+faglflext.tsl12+faglflext.tsl13) as {{ dbt.type_numeric() }}) as tsm13,\n        cast(faglflext.tsl14 as {{ dbt.type_numeric() }}) as tsl14, \n        cast((faglflext.tslvt+faglflext.tsl01+faglflext.tsl02+faglflext.tsl03+faglflext.tsl04+faglflext.tsl05+faglflext.tsl06+faglflext.tsl07+faglflext.tsl08+faglflext.tsl09+faglflext.tsl10+faglflext.tsl11+faglflext.tsl12+faglflext.tsl13+faglflext.tsl14) as {{ dbt.type_numeric() }}) as tsm14,\n        cast(faglflext.tsl15 as {{ dbt.type_numeric() }}) as tsl15, \n        cast((faglflext.tslvt+faglflext.tsl01+faglflext.tsl02+faglflext.tsl03+faglflext.tsl04+faglflext.tsl05+faglflext.tsl06+faglflext.tsl07+faglflext.tsl08+faglflext.tsl09+faglflext.tsl10+faglflext.tsl11+faglflext.tsl12+faglflext.tsl13+faglflext.tsl14+faglflext.tsl15) as {{ dbt.type_numeric() }}) as tsm15,\n        cast(faglflext.tsl16 as {{ dbt.type_numeric() }}) as tsl16, \n        cast((faglflext.tslvt+faglflext.tsl01+faglflext.tsl02+faglflext.tsl03+faglflext.tsl04+faglflext.tsl05+faglflext.tsl06+faglflext.tsl07+faglflext.tsl08+faglflext.tsl09+faglflext.tsl10+faglflext.tsl11+faglflext.tsl12+faglflext.tsl13+faglflext.tsl14+faglflext.tsl15+faglflext.tsl16) as {{ dbt.type_numeric() }}) as tsm16,\n        cast(faglflext.kslvt as {{ dbt.type_numeric() }}) as kslvt,\n        cast(faglflext.kslvt as {{ dbt.type_numeric() }}) as ksmvt,\n        cast(faglflext.ksl01 as {{ dbt.type_numeric() }}) as ksl01,\n        cast((faglflext.kslvt+faglflext.ksl01) as {{ dbt.type_numeric() }}) as ksm01,\n        cast(faglflext.ksl02 as {{ dbt.type_numeric() }}) as ksl02,\n        cast((faglflext.kslvt+faglflext.ksl01+faglflext.ksl02) as {{ dbt.type_numeric() }}) as ksm02,\n        cast(faglflext.ksl03 as {{ dbt.type_numeric() }}) as ksl03,\n        cast((faglflext.kslvt+faglflext.ksl01+faglflext.ksl02+faglflext.ksl03) as {{ dbt.type_numeric() }}) as ksm03,\n        cast(faglflext.ksl04 as {{ dbt.type_numeric() }}) as ksl04,\n        cast((faglflext.kslvt+faglflext.ksl01+faglflext.ksl02+faglflext.ksl03+faglflext.ksl04) as {{ dbt.type_numeric() }}) as ksm04,\n        cast(faglflext.ksl05 as {{ dbt.type_numeric() }}) as ksl05,\n        cast((faglflext.kslvt+faglflext.ksl01+faglflext.ksl02+faglflext.ksl03+faglflext.ksl04+faglflext.ksl05) as {{ dbt.type_numeric() }}) as ksm05,\n        cast(faglflext.ksl06 as {{ dbt.type_numeric() }}) as ksl06,\n        cast((faglflext.kslvt+faglflext.ksl01+faglflext.ksl02+faglflext.ksl03+faglflext.ksl04+faglflext.ksl05+faglflext.ksl06) as {{ dbt.type_numeric() }}) as ksm06,\n        cast(faglflext.ksl07 as {{ dbt.type_numeric() }}) as ksl07,\n        cast((faglflext.kslvt+faglflext.ksl01+faglflext.ksl02+faglflext.ksl03+faglflext.ksl04+faglflext.ksl05+faglflext.ksl06+faglflext.ksl07) as {{ dbt.type_numeric() }}) as ksm07,\n        cast(faglflext.ksl08 as {{ dbt.type_numeric() }}) as ksl08,\n        cast((faglflext.kslvt+faglflext.ksl01+faglflext.ksl02+faglflext.ksl03+faglflext.ksl04+faglflext.ksl05+faglflext.ksl06+faglflext.ksl07+faglflext.ksl08) as {{ dbt.type_numeric() }}) as ksm08,\n        cast(faglflext.ksl09 as {{ dbt.type_numeric() }}) as ksl09,\n        cast((faglflext.kslvt+faglflext.ksl01+faglflext.ksl02+faglflext.ksl03+faglflext.ksl04+faglflext.ksl05+faglflext.ksl06+faglflext.ksl07+faglflext.ksl08+faglflext.ksl09) as {{ dbt.type_numeric() }}) as ksm09,\n        cast(faglflext.ksl10 as {{ dbt.type_numeric() }}) as ksl10,\n        cast((faglflext.kslvt+faglflext.ksl01+faglflext.ksl02+faglflext.ksl03+faglflext.ksl04+faglflext.ksl05+faglflext.ksl06+faglflext.ksl07+faglflext.ksl08+faglflext.ksl09+faglflext.ksl10) as {{ dbt.type_numeric() }}) as ksm10,\n        cast(faglflext.ksl11 as {{ dbt.type_numeric() }}) as ksl11,\n        cast((faglflext.kslvt+faglflext.ksl01+faglflext.ksl02+faglflext.ksl03+faglflext.ksl04+faglflext.ksl05+faglflext.ksl06+faglflext.ksl07+faglflext.ksl08+faglflext.ksl09+faglflext.ksl10+faglflext.ksl11) as {{ dbt.type_numeric() }}) as ksm11,\n        cast(faglflext.ksl12 as {{ dbt.type_numeric() }}) as ksl12,\n        cast((faglflext.kslvt+faglflext.ksl01+faglflext.ksl02+faglflext.ksl03+faglflext.ksl04+faglflext.ksl05+faglflext.ksl06+faglflext.ksl07+faglflext.ksl08+faglflext.ksl09+faglflext.ksl10+faglflext.ksl11+faglflext.ksl12) as {{ dbt.type_numeric() }}) as ksm12,\n        cast(faglflext.ksl13 as {{ dbt.type_numeric() }}) as ksl13,\n        cast((faglflext.kslvt+faglflext.ksl01+faglflext.ksl02+faglflext.ksl03+faglflext.ksl04+faglflext.ksl05+faglflext.ksl06+faglflext.ksl07+faglflext.ksl08+faglflext.ksl09+faglflext.ksl10+faglflext.ksl11+faglflext.ksl12+faglflext.ksl13) as {{ dbt.type_numeric() }}) as ksm13,\n        cast(faglflext.ksl14 as {{ dbt.type_numeric() }}) as ksl14,\n        cast((faglflext.kslvt+faglflext.ksl01+faglflext.ksl02+faglflext.ksl03+faglflext.ksl04+faglflext.ksl05+faglflext.ksl06+faglflext.ksl07+faglflext.ksl08+faglflext.ksl09+faglflext.ksl10+faglflext.ksl11+faglflext.ksl12+faglflext.ksl13+faglflext.ksl14) as {{ dbt.type_numeric() }}) as ksm14,\n        cast(faglflext.ksl15 as {{ dbt.type_numeric() }}) as ksl15,\n        cast((faglflext.kslvt+faglflext.ksl01+faglflext.ksl02+faglflext.ksl03+faglflext.ksl04+faglflext.ksl05+faglflext.ksl06+faglflext.ksl07+faglflext.ksl08+faglflext.ksl09+faglflext.ksl10+faglflext.ksl11+faglflext.ksl12+faglflext.ksl13+faglflext.ksl14+faglflext.ksl15) as {{ dbt.type_numeric() }}) as ksm15,\n        cast(faglflext.ksl16 as {{ dbt.type_numeric() }}) as ksl16,\n        cast((faglflext.kslvt+faglflext.ksl01+faglflext.ksl02+faglflext.ksl03+faglflext.ksl04+faglflext.ksl05+faglflext.ksl06+faglflext.ksl07+faglflext.ksl08+faglflext.ksl09+faglflext.ksl10+faglflext.ksl11+faglflext.ksl12+faglflext.ksl13+faglflext.ksl14+faglflext.ksl15+faglflext.ksl16) as {{ dbt.type_numeric() }}) as ksm16,\n        cast(faglflext.oslvt as {{ dbt.type_numeric() }}) as oslvt,\n        cast(faglflext.oslvt as {{ dbt.type_numeric() }}) as osmvt, \n        cast(faglflext.osl01 as {{ dbt.type_numeric() }}) as osl01, \n        cast((faglflext.oslvt+faglflext.osl01) as {{ dbt.type_numeric() }}) as osm01,\n        cast(faglflext.osl02 as {{ dbt.type_numeric() }}) as osl02, \n        cast((faglflext.oslvt+faglflext.osl01+faglflext.osl02) as {{ dbt.type_numeric() }}) as osm02,\n        cast(faglflext.osl03 as {{ dbt.type_numeric() }}) as osl03, \n        cast((faglflext.oslvt+faglflext.osl01+faglflext.osl02+faglflext.osl03) as {{ dbt.type_numeric() }}) as osm03,\n        cast(faglflext.osl04 as {{ dbt.type_numeric() }}) as osl04, \n        cast((faglflext.oslvt+faglflext.osl01+faglflext.osl02+faglflext.osl03+faglflext.osl04) as {{ dbt.type_numeric() }}) as osm04,\n        cast(faglflext.osl05 as {{ dbt.type_numeric() }}) as osl05, \n        cast((faglflext.oslvt+faglflext.osl01+faglflext.osl02+faglflext.osl03+faglflext.osl04+faglflext.osl05) as {{ dbt.type_numeric() }}) as osm05,\n        cast(faglflext.osl06 as {{ dbt.type_numeric() }}) as osl06, \n        cast((faglflext.oslvt+faglflext.osl01+faglflext.osl02+faglflext.osl03+faglflext.osl04+faglflext.osl05+faglflext.osl06) as {{ dbt.type_numeric() }}) as osm06,\n        cast(faglflext.osl07 as {{ dbt.type_numeric() }}) as osl07, \n        cast((faglflext.oslvt+faglflext.osl01+faglflext.osl02+faglflext.osl03+faglflext.osl04+faglflext.osl05+faglflext.osl06+faglflext.osl07) as {{ dbt.type_numeric() }}) as osm07,\n        cast(faglflext.osl08 as {{ dbt.type_numeric() }}) as osl08,\n        cast((faglflext.oslvt+faglflext.osl01+faglflext.osl02+faglflext.osl03+faglflext.osl04+faglflext.osl05+faglflext.osl06+faglflext.osl07+faglflext.osl08) as {{ dbt.type_numeric() }}) as osm08,\n        cast(faglflext.osl09 as {{ dbt.type_numeric() }}) as osl09,\n        cast((faglflext.oslvt+faglflext.osl01+faglflext.osl02+faglflext.osl03+faglflext.osl04+faglflext.osl05+faglflext.osl06+faglflext.osl07+faglflext.osl08+faglflext.osl09) as {{ dbt.type_numeric() }}) as osm09,\n        cast(faglflext.osl10 as {{ dbt.type_numeric() }}) as osl10,\n        cast((faglflext.oslvt+faglflext.osl01+faglflext.osl02+faglflext.osl03+faglflext.osl04+faglflext.osl05+faglflext.osl06+faglflext.osl07+faglflext.osl08+faglflext.osl09+faglflext.osl10) as {{ dbt.type_numeric() }}) as osm10,\n        cast(faglflext.osl11 as {{ dbt.type_numeric() }}) as osl11,\n        cast((faglflext.oslvt+faglflext.osl01+faglflext.osl02+faglflext.osl03+faglflext.osl04+faglflext.osl05+faglflext.osl06+faglflext.osl07+faglflext.osl08+faglflext.osl09+faglflext.osl10+faglflext.osl11) as {{ dbt.type_numeric() }}) as osm11,\n        cast(faglflext.osl12 as {{ dbt.type_numeric() }}) as osl12,\n        cast((faglflext.oslvt+faglflext.osl01+faglflext.osl02+faglflext.osl03+faglflext.osl04+faglflext.osl05+faglflext.osl06+faglflext.osl07+faglflext.osl08+faglflext.osl09+faglflext.osl10+faglflext.osl11+faglflext.osl12) as {{ dbt.type_numeric() }}) as osm12,\n        cast(faglflext.osl13 as {{ dbt.type_numeric() }}) as osl13,\n        cast((faglflext.oslvt+faglflext.osl01+faglflext.osl02+faglflext.osl03+faglflext.osl04+faglflext.osl05+faglflext.osl06+faglflext.osl07+faglflext.osl08+faglflext.osl09+faglflext.osl10+faglflext.osl11+faglflext.osl12+faglflext.osl13) as {{ dbt.type_numeric() }}) as osm13,\n        cast(faglflext.osl14 as {{ dbt.type_numeric() }}) as osl14,\n        cast((faglflext.oslvt+faglflext.osl01+faglflext.osl02+faglflext.osl03+faglflext.osl04+faglflext.osl05+faglflext.osl06+faglflext.osl07+faglflext.osl08+faglflext.osl09+faglflext.osl10+faglflext.osl11+faglflext.osl12+faglflext.osl13+faglflext.osl14) as {{ dbt.type_numeric() }}) as osm14,\n        cast(faglflext.osl15 as {{ dbt.type_numeric() }}) as osl15,\n        cast((faglflext.oslvt+faglflext.osl01+faglflext.osl02+faglflext.osl03+faglflext.osl04+faglflext.osl05+faglflext.osl06+faglflext.osl07+faglflext.osl08+faglflext.osl09+faglflext.osl10+faglflext.osl11+faglflext.osl12+faglflext.osl13+faglflext.osl14+faglflext.osl15) as {{ dbt.type_numeric() }}) as osm15,\n        cast(faglflext.osl16 as {{ dbt.type_numeric() }}) as osl16,\n        cast((faglflext.oslvt+faglflext.osl01+faglflext.osl02+faglflext.osl03+faglflext.osl04+faglflext.osl05+faglflext.osl06+faglflext.osl07+faglflext.osl08+faglflext.osl09+faglflext.osl10+faglflext.osl11+faglflext.osl12+faglflext.osl13+faglflext.osl14+faglflext.osl15+faglflext.osl16) as {{ dbt.type_numeric() }}) as osm16,\n        faglflext.faglflext_timestamp,\n        faglflext._fivetran_rowid,\n        faglflext._fivetran_deleted,\n        faglflext._fivetran_synced\n    from faglflext \n    inner join t001 \n        on faglflext.rbukrs = t001.bukrs\n        and faglflext.rclnt = t001.mandt\n    where 1=1\n    {% set var_checks = ['rclnt', 'ryear', 'rbukrs', 'rldnr'] %}\n    {% for v in var_checks %}\n    {% set variable = 'faglflext_' ~ v ~ '_var' %}\n        {% if var(variable,[]) %}\n        and faglflext.{{ v }} = '{{ var(variable) }}'\n        {% endif %}\n    {% endfor %}\n)\n\nselect *\nfrom final", "doc_blocks": [], "language": "sql", "refs": [{"name": "stg_sap__faglflext", "package": null, "version": null}, {"name": "stg_sap__t001", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt.type_numeric"], "nodes": ["model.sap.stg_sap__faglflext", "model.sap.stg_sap__t001"]}, "compiled_path": "target/compiled/sap/models/extractor_reports/intermediate/int_sap__0fi_gl_10_sums.sql", "compiled": true, "compiled_code": "\n\n\nwith faglflext as ( \n\n\tselect * \n\tfrom \"postgres\".\"public_sap_dev\".\"stg_sap__faglflext\"\n),\n\nt001 as (\n\n    select *\n    from \"postgres\".\"public_sap_dev\".\"stg_sap__t001\"\n),\n\nfinal as (\n\n    select\n        faglflext.drcrk,\n        faglflext.objnr00,\n        faglflext.objnr01,\n        faglflext.objnr02,\n        faglflext.objnr03,\n        faglflext.objnr04,\n        faglflext.objnr05,\n        faglflext.objnr06,\n        faglflext.objnr07,\n        faglflext.objnr08,\n        faglflext.rclnt,\n        faglflext.rpmax,\n        faglflext.ryear,\n        faglflext.activ,\n        faglflext.rmvct,\n        faglflext.rtcur,\n        faglflext.runit,\n        faglflext.awtyp,\n        faglflext.rldnr,\n        faglflext.rrcty,\n        faglflext.rvers,\n        faglflext.logsys,\n        faglflext.racct,\n        faglflext.cost_elem,\n        faglflext.rbukrs,\n        faglflext.rcntr,\n        faglflext.prctr,\n        faglflext.rfarea,\n        faglflext.rbusa,\n        faglflext.kokrs,\n        faglflext.segment,\n        faglflext.zzspreg,\n        faglflext.scntr,\n        faglflext.pprctr,\n        faglflext.sfarea,\n        faglflext.sbusa,\n        faglflext.rassc,\n        faglflext.psegment,\n        t001.waers,\n        t001.periv,\n        t001.ktopl,\n        cast(faglflext.hslvt as numeric(28,6)) as hslvt,  \n        cast(faglflext.hslvt as numeric(28,6)) as hsmvt,  \n        cast(faglflext.hsl01 as numeric(28,6)) as hsl01,  \n        cast((faglflext.hslvt+faglflext.hsl01) as numeric(28,6)) as hsm01,\n        cast(faglflext.hsl02 as numeric(28,6)) as hsl02,  \n        cast((faglflext.hslvt+faglflext.hsl01+faglflext.hsl02) as numeric(28,6)) as hsm02,\n        cast(faglflext.hsl03 as numeric(28,6)) as hsl03,  \n        cast((faglflext.hslvt+faglflext.hsl01+faglflext.hsl02+faglflext.hsl03) as numeric(28,6)) as hsm03,\n        cast(faglflext.hsl04 as numeric(28,6)) as hsl04,  \n        cast((faglflext.hslvt+faglflext.hsl01+faglflext.hsl02+faglflext.hsl03+faglflext.hsl04) as numeric(28,6)) as hsm04,\n        cast(faglflext.hsl05 as numeric(28,6)) as hsl05,  \n        cast((faglflext.hslvt+faglflext.hsl01+faglflext.hsl02+faglflext.hsl03+faglflext.hsl04+faglflext.hsl05) as numeric(28,6)) as hsm05,\n        cast(faglflext.hsl06 as numeric(28,6)) as hsl06,  \n        cast((faglflext.hslvt+faglflext.hsl01+faglflext.hsl02+faglflext.hsl03+faglflext.hsl04+faglflext.hsl05+faglflext.hsl06) as numeric(28,6)) as hsm06,\n        cast(faglflext.hsl07 as numeric(28,6)) as hsl07,  \n        cast((faglflext.hslvt+faglflext.hsl01+faglflext.hsl02+faglflext.hsl03+faglflext.hsl04+faglflext.hsl05+faglflext.hsl06+faglflext.hsl07) as numeric(28,6)) as hsm07,\n        cast(faglflext.hsl08 as numeric(28,6)) as hsl08,  \n        cast((faglflext.hslvt+faglflext.hsl01+faglflext.hsl02+faglflext.hsl03+faglflext.hsl04+faglflext.hsl05+faglflext.hsl06+faglflext.hsl07+faglflext.hsl08) as numeric(28,6)) as hsm08,\n        cast(faglflext.hsl09 as numeric(28,6)) as hsl09, \n        cast((faglflext.hslvt+faglflext.hsl01+faglflext.hsl02+faglflext.hsl03+faglflext.hsl04+faglflext.hsl05+faglflext.hsl06+faglflext.hsl07+faglflext.hsl08+faglflext.hsl09) as numeric(28,6)) as hsm09,\n        cast(faglflext.hsl10 as numeric(28,6)) as hsl10, \n        cast((faglflext.hslvt+faglflext.hsl01+faglflext.hsl02+faglflext.hsl03+faglflext.hsl04+faglflext.hsl05+faglflext.hsl06+faglflext.hsl07+faglflext.hsl08+faglflext.hsl09+faglflext.hsl10) as numeric(28,6)) as hsm10,\n        cast(faglflext.hsl11 as numeric(28,6)) as hsl11, \n        cast((faglflext.hslvt+faglflext.hsl01+faglflext.hsl02+faglflext.hsl03+faglflext.hsl04+faglflext.hsl05+faglflext.hsl06+faglflext.hsl07+faglflext.hsl08+faglflext.hsl09+faglflext.hsl10+faglflext.hsl11) as numeric(28,6)) as hsm11,\n        cast(faglflext.hsl12 as numeric(28,6)) as hsl12, \n        cast((faglflext.hslvt+faglflext.hsl01+faglflext.hsl02+faglflext.hsl03+faglflext.hsl04+faglflext.hsl05+faglflext.hsl06+faglflext.hsl07+faglflext.hsl08+faglflext.hsl09+faglflext.hsl10+faglflext.hsl11+faglflext.hsl12) as numeric(28,6)) as hsm12,\n        cast(faglflext.hsl13 as numeric(28,6)) as hsl13, \n        cast((faglflext.hslvt+faglflext.hsl01+faglflext.hsl02+faglflext.hsl03+faglflext.hsl04+faglflext.hsl05+faglflext.hsl06+faglflext.hsl07+faglflext.hsl08+faglflext.hsl09+faglflext.hsl10+faglflext.hsl11+faglflext.hsl12+faglflext.hsl13) as numeric(28,6)) as hsm13,\n        cast(faglflext.hsl14 as numeric(28,6)) as hsl14, \n        cast((faglflext.hslvt+faglflext.hsl01+faglflext.hsl02+faglflext.hsl03+faglflext.hsl04+faglflext.hsl05+faglflext.hsl06+faglflext.hsl07+faglflext.hsl08+faglflext.hsl09+faglflext.hsl10+faglflext.hsl11+faglflext.hsl12+faglflext.hsl13+faglflext.hsl14) as numeric(28,6)) as hsm14,\n        cast(faglflext.hsl15 as numeric(28,6)) as hsl15, \n        cast((faglflext.hslvt+faglflext.hsl01+faglflext.hsl02+faglflext.hsl03+faglflext.hsl04+faglflext.hsl05+faglflext.hsl06+faglflext.hsl07+faglflext.hsl08+faglflext.hsl09+faglflext.hsl10+faglflext.hsl11+faglflext.hsl12+faglflext.hsl13+faglflext.hsl14+faglflext.hsl15) as numeric(28,6)) as hsm15,\n        cast(faglflext.hsl16 as numeric(28,6)) as hsl16, \n        cast((faglflext.hslvt+faglflext.hsl01+faglflext.hsl02+faglflext.hsl03+faglflext.hsl04+faglflext.hsl05+faglflext.hsl06+faglflext.hsl07+faglflext.hsl08+faglflext.hsl09+faglflext.hsl10+faglflext.hsl11+faglflext.hsl12+faglflext.hsl13+faglflext.hsl14+faglflext.hsl15+faglflext.hsl16) as numeric(28,6)) as hsm16, \n        cast(faglflext.tslvt as numeric(28,6)) as tslvt, \n        cast(faglflext.tslvt as numeric(28,6)) as tsmvt, \n        cast(faglflext.tsl01 as numeric(28,6)) as tsl01,  \n        cast((faglflext.tslvt+faglflext.tsl01) as numeric(28,6)) as tsm01,\n        cast(faglflext.tsl02 as numeric(28,6)) as tsl02,  \n        cast((faglflext.tslvt+faglflext.tsl01+faglflext.tsl02) as numeric(28,6)) as tsm02,\n        cast(faglflext.tsl03 as numeric(28,6)) as tsl03,  \n        cast((faglflext.tslvt+faglflext.tsl01+faglflext.tsl02+faglflext.tsl03) as numeric(28,6)) as tsm03,\n        cast(faglflext.tsl04 as numeric(28,6)) as tsl04,  \n        cast((faglflext.tslvt+faglflext.tsl01+faglflext.tsl02+faglflext.tsl03+faglflext.tsl04) as numeric(28,6)) as tsm04,\n        cast(faglflext.tsl05 as numeric(28,6)) as tsl05,  \n        cast((faglflext.tslvt+faglflext.tsl01+faglflext.tsl02+faglflext.tsl03+faglflext.tsl04+faglflext.tsl05) as numeric(28,6)) as tsm05,\n        cast(faglflext.tsl06 as numeric(28,6)) as tsl06,  \n        cast((faglflext.tslvt+faglflext.tsl01+faglflext.tsl02+faglflext.tsl03+faglflext.tsl04+faglflext.tsl05+faglflext.tsl06) as numeric(28,6)) as tsm06,\n        cast(faglflext.tsl07 as numeric(28,6)) as tsl07,  \n        cast((faglflext.tslvt+faglflext.tsl01+faglflext.tsl02+faglflext.tsl03+faglflext.tsl04+faglflext.tsl05+faglflext.tsl06+faglflext.tsl07) as numeric(28,6)) as tsm07,\n        cast(faglflext.tsl08 as numeric(28,6)) as tsl08, \n        cast((faglflext.tslvt+faglflext.tsl01+faglflext.tsl02+faglflext.tsl03+faglflext.tsl04+faglflext.tsl05+faglflext.tsl06+faglflext.tsl07+faglflext.tsl08) as numeric(28,6)) as tsm08,\n        cast(faglflext.tsl09 as numeric(28,6)) as tsl09, \n        cast((faglflext.tslvt+faglflext.tsl01+faglflext.tsl02+faglflext.tsl03+faglflext.tsl04+faglflext.tsl05+faglflext.tsl06+faglflext.tsl07+faglflext.tsl08+faglflext.tsl09) as numeric(28,6)) as tsm09,\n        cast(faglflext.tsl10 as numeric(28,6)) as tsl10, \n        cast((faglflext.tslvt+faglflext.tsl01+faglflext.tsl02+faglflext.tsl03+faglflext.tsl04+faglflext.tsl05+faglflext.tsl06+faglflext.tsl07+faglflext.tsl08+faglflext.tsl09+faglflext.tsl10) as numeric(28,6)) as tsm10,\n        cast(faglflext.tsl11 as numeric(28,6)) as tsl11, \n        cast((faglflext.tslvt+faglflext.tsl01+faglflext.tsl02+faglflext.tsl03+faglflext.tsl04+faglflext.tsl05+faglflext.tsl06+faglflext.tsl07+faglflext.tsl08+faglflext.tsl09+faglflext.tsl10+faglflext.tsl11) as numeric(28,6)) as tsm11,\n        cast(faglflext.tsl12 as numeric(28,6)) as tsl12,\n        cast((faglflext.tslvt+faglflext.tsl01+faglflext.tsl02+faglflext.tsl03+faglflext.tsl04+faglflext.tsl05+faglflext.tsl06+faglflext.tsl07+faglflext.tsl08+faglflext.tsl09+faglflext.tsl10+faglflext.tsl11+faglflext.tsl12) as numeric(28,6)) as tsm12,\n        cast(faglflext.tsl13 as numeric(28,6)) as tsl13, \n        cast((faglflext.tslvt+faglflext.tsl01+faglflext.tsl02+faglflext.tsl03+faglflext.tsl04+faglflext.tsl05+faglflext.tsl06+faglflext.tsl07+faglflext.tsl08+faglflext.tsl09+faglflext.tsl10+faglflext.tsl11+faglflext.tsl12+faglflext.tsl13) as numeric(28,6)) as tsm13,\n        cast(faglflext.tsl14 as numeric(28,6)) as tsl14, \n        cast((faglflext.tslvt+faglflext.tsl01+faglflext.tsl02+faglflext.tsl03+faglflext.tsl04+faglflext.tsl05+faglflext.tsl06+faglflext.tsl07+faglflext.tsl08+faglflext.tsl09+faglflext.tsl10+faglflext.tsl11+faglflext.tsl12+faglflext.tsl13+faglflext.tsl14) as numeric(28,6)) as tsm14,\n        cast(faglflext.tsl15 as numeric(28,6)) as tsl15, \n        cast((faglflext.tslvt+faglflext.tsl01+faglflext.tsl02+faglflext.tsl03+faglflext.tsl04+faglflext.tsl05+faglflext.tsl06+faglflext.tsl07+faglflext.tsl08+faglflext.tsl09+faglflext.tsl10+faglflext.tsl11+faglflext.tsl12+faglflext.tsl13+faglflext.tsl14+faglflext.tsl15) as numeric(28,6)) as tsm15,\n        cast(faglflext.tsl16 as numeric(28,6)) as tsl16, \n        cast((faglflext.tslvt+faglflext.tsl01+faglflext.tsl02+faglflext.tsl03+faglflext.tsl04+faglflext.tsl05+faglflext.tsl06+faglflext.tsl07+faglflext.tsl08+faglflext.tsl09+faglflext.tsl10+faglflext.tsl11+faglflext.tsl12+faglflext.tsl13+faglflext.tsl14+faglflext.tsl15+faglflext.tsl16) as numeric(28,6)) as tsm16,\n        cast(faglflext.kslvt as numeric(28,6)) as kslvt,\n        cast(faglflext.kslvt as numeric(28,6)) as ksmvt,\n        cast(faglflext.ksl01 as numeric(28,6)) as ksl01,\n        cast((faglflext.kslvt+faglflext.ksl01) as numeric(28,6)) as ksm01,\n        cast(faglflext.ksl02 as numeric(28,6)) as ksl02,\n        cast((faglflext.kslvt+faglflext.ksl01+faglflext.ksl02) as numeric(28,6)) as ksm02,\n        cast(faglflext.ksl03 as numeric(28,6)) as ksl03,\n        cast((faglflext.kslvt+faglflext.ksl01+faglflext.ksl02+faglflext.ksl03) as numeric(28,6)) as ksm03,\n        cast(faglflext.ksl04 as numeric(28,6)) as ksl04,\n        cast((faglflext.kslvt+faglflext.ksl01+faglflext.ksl02+faglflext.ksl03+faglflext.ksl04) as numeric(28,6)) as ksm04,\n        cast(faglflext.ksl05 as numeric(28,6)) as ksl05,\n        cast((faglflext.kslvt+faglflext.ksl01+faglflext.ksl02+faglflext.ksl03+faglflext.ksl04+faglflext.ksl05) as numeric(28,6)) as ksm05,\n        cast(faglflext.ksl06 as numeric(28,6)) as ksl06,\n        cast((faglflext.kslvt+faglflext.ksl01+faglflext.ksl02+faglflext.ksl03+faglflext.ksl04+faglflext.ksl05+faglflext.ksl06) as numeric(28,6)) as ksm06,\n        cast(faglflext.ksl07 as numeric(28,6)) as ksl07,\n        cast((faglflext.kslvt+faglflext.ksl01+faglflext.ksl02+faglflext.ksl03+faglflext.ksl04+faglflext.ksl05+faglflext.ksl06+faglflext.ksl07) as numeric(28,6)) as ksm07,\n        cast(faglflext.ksl08 as numeric(28,6)) as ksl08,\n        cast((faglflext.kslvt+faglflext.ksl01+faglflext.ksl02+faglflext.ksl03+faglflext.ksl04+faglflext.ksl05+faglflext.ksl06+faglflext.ksl07+faglflext.ksl08) as numeric(28,6)) as ksm08,\n        cast(faglflext.ksl09 as numeric(28,6)) as ksl09,\n        cast((faglflext.kslvt+faglflext.ksl01+faglflext.ksl02+faglflext.ksl03+faglflext.ksl04+faglflext.ksl05+faglflext.ksl06+faglflext.ksl07+faglflext.ksl08+faglflext.ksl09) as numeric(28,6)) as ksm09,\n        cast(faglflext.ksl10 as numeric(28,6)) as ksl10,\n        cast((faglflext.kslvt+faglflext.ksl01+faglflext.ksl02+faglflext.ksl03+faglflext.ksl04+faglflext.ksl05+faglflext.ksl06+faglflext.ksl07+faglflext.ksl08+faglflext.ksl09+faglflext.ksl10) as numeric(28,6)) as ksm10,\n        cast(faglflext.ksl11 as numeric(28,6)) as ksl11,\n        cast((faglflext.kslvt+faglflext.ksl01+faglflext.ksl02+faglflext.ksl03+faglflext.ksl04+faglflext.ksl05+faglflext.ksl06+faglflext.ksl07+faglflext.ksl08+faglflext.ksl09+faglflext.ksl10+faglflext.ksl11) as numeric(28,6)) as ksm11,\n        cast(faglflext.ksl12 as numeric(28,6)) as ksl12,\n        cast((faglflext.kslvt+faglflext.ksl01+faglflext.ksl02+faglflext.ksl03+faglflext.ksl04+faglflext.ksl05+faglflext.ksl06+faglflext.ksl07+faglflext.ksl08+faglflext.ksl09+faglflext.ksl10+faglflext.ksl11+faglflext.ksl12) as numeric(28,6)) as ksm12,\n        cast(faglflext.ksl13 as numeric(28,6)) as ksl13,\n        cast((faglflext.kslvt+faglflext.ksl01+faglflext.ksl02+faglflext.ksl03+faglflext.ksl04+faglflext.ksl05+faglflext.ksl06+faglflext.ksl07+faglflext.ksl08+faglflext.ksl09+faglflext.ksl10+faglflext.ksl11+faglflext.ksl12+faglflext.ksl13) as numeric(28,6)) as ksm13,\n        cast(faglflext.ksl14 as numeric(28,6)) as ksl14,\n        cast((faglflext.kslvt+faglflext.ksl01+faglflext.ksl02+faglflext.ksl03+faglflext.ksl04+faglflext.ksl05+faglflext.ksl06+faglflext.ksl07+faglflext.ksl08+faglflext.ksl09+faglflext.ksl10+faglflext.ksl11+faglflext.ksl12+faglflext.ksl13+faglflext.ksl14) as numeric(28,6)) as ksm14,\n        cast(faglflext.ksl15 as numeric(28,6)) as ksl15,\n        cast((faglflext.kslvt+faglflext.ksl01+faglflext.ksl02+faglflext.ksl03+faglflext.ksl04+faglflext.ksl05+faglflext.ksl06+faglflext.ksl07+faglflext.ksl08+faglflext.ksl09+faglflext.ksl10+faglflext.ksl11+faglflext.ksl12+faglflext.ksl13+faglflext.ksl14+faglflext.ksl15) as numeric(28,6)) as ksm15,\n        cast(faglflext.ksl16 as numeric(28,6)) as ksl16,\n        cast((faglflext.kslvt+faglflext.ksl01+faglflext.ksl02+faglflext.ksl03+faglflext.ksl04+faglflext.ksl05+faglflext.ksl06+faglflext.ksl07+faglflext.ksl08+faglflext.ksl09+faglflext.ksl10+faglflext.ksl11+faglflext.ksl12+faglflext.ksl13+faglflext.ksl14+faglflext.ksl15+faglflext.ksl16) as numeric(28,6)) as ksm16,\n        cast(faglflext.oslvt as numeric(28,6)) as oslvt,\n        cast(faglflext.oslvt as numeric(28,6)) as osmvt, \n        cast(faglflext.osl01 as numeric(28,6)) as osl01, \n        cast((faglflext.oslvt+faglflext.osl01) as numeric(28,6)) as osm01,\n        cast(faglflext.osl02 as numeric(28,6)) as osl02, \n        cast((faglflext.oslvt+faglflext.osl01+faglflext.osl02) as numeric(28,6)) as osm02,\n        cast(faglflext.osl03 as numeric(28,6)) as osl03, \n        cast((faglflext.oslvt+faglflext.osl01+faglflext.osl02+faglflext.osl03) as numeric(28,6)) as osm03,\n        cast(faglflext.osl04 as numeric(28,6)) as osl04, \n        cast((faglflext.oslvt+faglflext.osl01+faglflext.osl02+faglflext.osl03+faglflext.osl04) as numeric(28,6)) as osm04,\n        cast(faglflext.osl05 as numeric(28,6)) as osl05, \n        cast((faglflext.oslvt+faglflext.osl01+faglflext.osl02+faglflext.osl03+faglflext.osl04+faglflext.osl05) as numeric(28,6)) as osm05,\n        cast(faglflext.osl06 as numeric(28,6)) as osl06, \n        cast((faglflext.oslvt+faglflext.osl01+faglflext.osl02+faglflext.osl03+faglflext.osl04+faglflext.osl05+faglflext.osl06) as numeric(28,6)) as osm06,\n        cast(faglflext.osl07 as numeric(28,6)) as osl07, \n        cast((faglflext.oslvt+faglflext.osl01+faglflext.osl02+faglflext.osl03+faglflext.osl04+faglflext.osl05+faglflext.osl06+faglflext.osl07) as numeric(28,6)) as osm07,\n        cast(faglflext.osl08 as numeric(28,6)) as osl08,\n        cast((faglflext.oslvt+faglflext.osl01+faglflext.osl02+faglflext.osl03+faglflext.osl04+faglflext.osl05+faglflext.osl06+faglflext.osl07+faglflext.osl08) as numeric(28,6)) as osm08,\n        cast(faglflext.osl09 as numeric(28,6)) as osl09,\n        cast((faglflext.oslvt+faglflext.osl01+faglflext.osl02+faglflext.osl03+faglflext.osl04+faglflext.osl05+faglflext.osl06+faglflext.osl07+faglflext.osl08+faglflext.osl09) as numeric(28,6)) as osm09,\n        cast(faglflext.osl10 as numeric(28,6)) as osl10,\n        cast((faglflext.oslvt+faglflext.osl01+faglflext.osl02+faglflext.osl03+faglflext.osl04+faglflext.osl05+faglflext.osl06+faglflext.osl07+faglflext.osl08+faglflext.osl09+faglflext.osl10) as numeric(28,6)) as osm10,\n        cast(faglflext.osl11 as numeric(28,6)) as osl11,\n        cast((faglflext.oslvt+faglflext.osl01+faglflext.osl02+faglflext.osl03+faglflext.osl04+faglflext.osl05+faglflext.osl06+faglflext.osl07+faglflext.osl08+faglflext.osl09+faglflext.osl10+faglflext.osl11) as numeric(28,6)) as osm11,\n        cast(faglflext.osl12 as numeric(28,6)) as osl12,\n        cast((faglflext.oslvt+faglflext.osl01+faglflext.osl02+faglflext.osl03+faglflext.osl04+faglflext.osl05+faglflext.osl06+faglflext.osl07+faglflext.osl08+faglflext.osl09+faglflext.osl10+faglflext.osl11+faglflext.osl12) as numeric(28,6)) as osm12,\n        cast(faglflext.osl13 as numeric(28,6)) as osl13,\n        cast((faglflext.oslvt+faglflext.osl01+faglflext.osl02+faglflext.osl03+faglflext.osl04+faglflext.osl05+faglflext.osl06+faglflext.osl07+faglflext.osl08+faglflext.osl09+faglflext.osl10+faglflext.osl11+faglflext.osl12+faglflext.osl13) as numeric(28,6)) as osm13,\n        cast(faglflext.osl14 as numeric(28,6)) as osl14,\n        cast((faglflext.oslvt+faglflext.osl01+faglflext.osl02+faglflext.osl03+faglflext.osl04+faglflext.osl05+faglflext.osl06+faglflext.osl07+faglflext.osl08+faglflext.osl09+faglflext.osl10+faglflext.osl11+faglflext.osl12+faglflext.osl13+faglflext.osl14) as numeric(28,6)) as osm14,\n        cast(faglflext.osl15 as numeric(28,6)) as osl15,\n        cast((faglflext.oslvt+faglflext.osl01+faglflext.osl02+faglflext.osl03+faglflext.osl04+faglflext.osl05+faglflext.osl06+faglflext.osl07+faglflext.osl08+faglflext.osl09+faglflext.osl10+faglflext.osl11+faglflext.osl12+faglflext.osl13+faglflext.osl14+faglflext.osl15) as numeric(28,6)) as osm15,\n        cast(faglflext.osl16 as numeric(28,6)) as osl16,\n        cast((faglflext.oslvt+faglflext.osl01+faglflext.osl02+faglflext.osl03+faglflext.osl04+faglflext.osl05+faglflext.osl06+faglflext.osl07+faglflext.osl08+faglflext.osl09+faglflext.osl10+faglflext.osl11+faglflext.osl12+faglflext.osl13+faglflext.osl14+faglflext.osl15+faglflext.osl16) as numeric(28,6)) as osm16,\n        faglflext.faglflext_timestamp,\n        faglflext._fivetran_rowid,\n        faglflext._fivetran_deleted,\n        faglflext._fivetran_synced\n    from faglflext \n    inner join t001 \n        on faglflext.rbukrs = t001.bukrs\n        and faglflext.rclnt = t001.mandt\n    where 1=1\n    \n    \n    \n        \n    \n    \n        \n    \n    \n        \n    \n    \n        \n    \n)\n\nselect *\nfrom final", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null, "primary_key": [], "time_spine": null}, "model.sap.int_sap__0employee_date_changes": {"database": "postgres", "schema": "public_sap_dev", "name": "int_sap__0employee_date_changes", "resource_type": "model", "package_name": "sap", "path": "extractor_reports/intermediate/int_sap__0employee_date_changes.sql", "original_file_path": "models/extractor_reports/intermediate/int_sap__0employee_date_changes.sql", "unique_id": "model.sap.int_sap__0employee_date_changes", "fqn": ["sap", "extractor_reports", "intermediate", "int_sap__0employee_date_changes"], "alias": "int_sap__0employee_date_changes", "checksum": {"name": "sha256", "checksum": "e8ecf1fbb48fc947828b2ccafb4957678aa79503b19bfde38b509422c32e76f1"}, "config": {"enabled": true, "alias": null, "schema": "sap_dev", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "freshness": null}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "unrendered_config": {"materialized": "table", "schema": "sap_{{ var('directed_schema','dev') }}", "enabled": true}, "created_at": 1756850326.4459903, "relation_name": "\"postgres\".\"public_sap_dev\".\"int_sap__0employee_date_changes\"", "raw_code": "{{ config(enabled=(var('sap_using_pa0000', True) and var('sap_using_pa0001', True) and var('sap_using_pa0007', True) and var('sap_using_pa0008', True) and var('sap_using_pa0031', True))) }}\n\n{% set employee_models = ['pa0000', 'pa0001', 'pa0007', 'pa0008', 'pa0031'] %}\n\nwith\n{% for employee_model in employee_models %}\n    {{ employee_model }}_beg as (\n        select\n            pernr,\n            begda as date_change\n        from {{ ref('stg_sap__' + employee_model) }}\n    ),\n\n    {{ employee_model }}_end as (\n        select\n            pernr,\n\t\t\tcase when endda = '99991231' then endda\n\t\t\t\telse {{ add_day_to_char_date('endda') }} \n\t\t\t\tend as date_change\n\t\tfrom {{ ref('stg_sap__' + employee_model) }}\n\t), \n{% endfor %}\n\n\nunioned as (\n\n\t{% for employee_model in employee_models %}\n\t\tselect \n\t\t\tpernr,\n\t\t\tdate_change \n\t\tfrom {{ employee_model }}_beg \n\n\t\tunion all\n\n\t\tselect \n\t\t\tpernr,\n\t\t\tdate_change \n\t\tfrom {{ employee_model }}_end \n\n\t\t{% if not loop.last %}\n\t\tunion all\n\t\t{% endif %} \n\t{% endfor %}\n),\n\t\n\nunioned_dates as (\n\t\n\tselect pernr, date_change \n\tfrom unioned\n\t{{ dbt_utils.group_by(2) }}\n\torder by pernr, date_change\n),\n\nemployee_date_ranges as (\n\n\tselect \n\t\tpernr,\n\t\tdate_change as begda,\n\t\tlead(date_change, 1) over (partition by pernr order by date_change) as endda      \n\tfrom unioned_dates\t\t\t\n),\n\nemployee_original_date_ranges as (\n\n\tselect\n\t\tpernr,\n\t\tbegda,\n\t\tcase when endda = '99991231' then endda\n\t\t\telse {{ subtract_day_to_char_date('endda') }} \n\t\t\tend as endda\n\tfrom employee_date_ranges\n)\n\nselect * \nfrom employee_original_date_ranges", "doc_blocks": [], "language": "sql", "refs": [{"name": "stg_sap__pa0000", "package": null, "version": null}, {"name": "stg_sap__pa0000", "package": null, "version": null}, {"name": "stg_sap__pa0001", "package": null, "version": null}, {"name": "stg_sap__pa0001", "package": null, "version": null}, {"name": "stg_sap__pa0007", "package": null, "version": null}, {"name": "stg_sap__pa0007", "package": null, "version": null}, {"name": "stg_sap__pa0008", "package": null, "version": null}, {"name": "stg_sap__pa0008", "package": null, "version": null}, {"name": "stg_sap__pa0031", "package": null, "version": null}, {"name": "stg_sap__pa0031", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.sap.add_day_to_char_date", "macro.dbt_utils.group_by", "macro.sap.subtract_day_to_char_date"], "nodes": ["model.sap.stg_sap__pa0000", "model.sap.stg_sap__pa0001", "model.sap.stg_sap__pa0007", "model.sap.stg_sap__pa0008", "model.sap.stg_sap__pa0031"]}, "compiled_path": "target/compiled/sap/models/extractor_reports/intermediate/int_sap__0employee_date_changes.sql", "compiled": true, "compiled_code": "\n\n\n\nwith\n\n    pa0000_beg as (\n        select\n            pernr,\n            begda as date_change\n        from \"postgres\".\"public_sap_dev\".\"stg_sap__pa0000\"\n    ),\n\n    pa0000_end as (\n        select\n            pernr,\n\t\t\tcase when endda = '99991231' then endda\n\t\t\t\telse \n\n    to_char(to_date(endda, 'YYYYMMDD') + interval '1 day', 'YYYYMMDD')\n\n \n\t\t\t\tend as date_change\n\t\tfrom \"postgres\".\"public_sap_dev\".\"stg_sap__pa0000\"\n\t), \n\n    pa0001_beg as (\n        select\n            pernr,\n            begda as date_change\n        from \"postgres\".\"public_sap_dev\".\"stg_sap__pa0001\"\n    ),\n\n    pa0001_end as (\n        select\n            pernr,\n\t\t\tcase when endda = '99991231' then endda\n\t\t\t\telse \n\n    to_char(to_date(endda, 'YYYYMMDD') + interval '1 day', 'YYYYMMDD')\n\n \n\t\t\t\tend as date_change\n\t\tfrom \"postgres\".\"public_sap_dev\".\"stg_sap__pa0001\"\n\t), \n\n    pa0007_beg as (\n        select\n            pernr,\n            begda as date_change\n        from \"postgres\".\"public_sap_dev\".\"stg_sap__pa0007\"\n    ),\n\n    pa0007_end as (\n        select\n            pernr,\n\t\t\tcase when endda = '99991231' then endda\n\t\t\t\telse \n\n    to_char(to_date(endda, 'YYYYMMDD') + interval '1 day', 'YYYYMMDD')\n\n \n\t\t\t\tend as date_change\n\t\tfrom \"postgres\".\"public_sap_dev\".\"stg_sap__pa0007\"\n\t), \n\n    pa0008_beg as (\n        select\n            pernr,\n            begda as date_change\n        from \"postgres\".\"public_sap_dev\".\"stg_sap__pa0008\"\n    ),\n\n    pa0008_end as (\n        select\n            pernr,\n\t\t\tcase when endda = '99991231' then endda\n\t\t\t\telse \n\n    to_char(to_date(endda, 'YYYYMMDD') + interval '1 day', 'YYYYMMDD')\n\n \n\t\t\t\tend as date_change\n\t\tfrom \"postgres\".\"public_sap_dev\".\"stg_sap__pa0008\"\n\t), \n\n    pa0031_beg as (\n        select\n            pernr,\n            begda as date_change\n        from \"postgres\".\"public_sap_dev\".\"stg_sap__pa0031\"\n    ),\n\n    pa0031_end as (\n        select\n            pernr,\n\t\t\tcase when endda = '99991231' then endda\n\t\t\t\telse \n\n    to_char(to_date(endda, 'YYYYMMDD') + interval '1 day', 'YYYYMMDD')\n\n \n\t\t\t\tend as date_change\n\t\tfrom \"postgres\".\"public_sap_dev\".\"stg_sap__pa0031\"\n\t), \n\n\n\nunioned as (\n\n\t\n\t\tselect \n\t\t\tpernr,\n\t\t\tdate_change \n\t\tfrom pa0000_beg \n\n\t\tunion all\n\n\t\tselect \n\t\t\tpernr,\n\t\t\tdate_change \n\t\tfrom pa0000_end \n\n\t\t\n\t\tunion all\n\t\t \n\t\n\t\tselect \n\t\t\tpernr,\n\t\t\tdate_change \n\t\tfrom pa0001_beg \n\n\t\tunion all\n\n\t\tselect \n\t\t\tpernr,\n\t\t\tdate_change \n\t\tfrom pa0001_end \n\n\t\t\n\t\tunion all\n\t\t \n\t\n\t\tselect \n\t\t\tpernr,\n\t\t\tdate_change \n\t\tfrom pa0007_beg \n\n\t\tunion all\n\n\t\tselect \n\t\t\tpernr,\n\t\t\tdate_change \n\t\tfrom pa0007_end \n\n\t\t\n\t\tunion all\n\t\t \n\t\n\t\tselect \n\t\t\tpernr,\n\t\t\tdate_change \n\t\tfrom pa0008_beg \n\n\t\tunion all\n\n\t\tselect \n\t\t\tpernr,\n\t\t\tdate_change \n\t\tfrom pa0008_end \n\n\t\t\n\t\tunion all\n\t\t \n\t\n\t\tselect \n\t\t\tpernr,\n\t\t\tdate_change \n\t\tfrom pa0031_beg \n\n\t\tunion all\n\n\t\tselect \n\t\t\tpernr,\n\t\t\tdate_change \n\t\tfrom pa0031_end \n\n\t\t \n\t\n),\n\t\n\nunioned_dates as (\n\t\n\tselect pernr, date_change \n\tfrom unioned\n\tgroup by 1,2\n\torder by pernr, date_change\n),\n\nemployee_date_ranges as (\n\n\tselect \n\t\tpernr,\n\t\tdate_change as begda,\n\t\tlead(date_change, 1) over (partition by pernr order by date_change) as endda      \n\tfrom unioned_dates\t\t\t\n),\n\nemployee_original_date_ranges as (\n\n\tselect\n\t\tpernr,\n\t\tbegda,\n\t\tcase when endda = '99991231' then endda\n\t\t\telse \n\n    to_char(to_date(endda, 'YYYYMMDD') - interval '1 day', 'YYYYMMDD')\n\n \n\t\t\tend as endda\n\tfrom employee_date_ranges\n)\n\nselect * \nfrom employee_original_date_ranges", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null, "primary_key": [], "time_spine": null}, "model.sap.int_sap__0fi_gl_10_unpivot": {"database": "postgres", "schema": "public_sap_dev", "name": "int_sap__0fi_gl_10_unpivot", "resource_type": "model", "package_name": "sap", "path": "extractor_reports/intermediate/int_sap__0fi_gl_10_unpivot.sql", "original_file_path": "models/extractor_reports/intermediate/int_sap__0fi_gl_10_unpivot.sql", "unique_id": "model.sap.int_sap__0fi_gl_10_unpivot", "fqn": ["sap", "extractor_reports", "intermediate", "int_sap__0fi_gl_10_unpivot"], "alias": "int_sap__0fi_gl_10_unpivot", "checksum": {"name": "sha256", "checksum": "d4eedf4a90654c7c6f521d45bbbcd2b993dff446c1ba0006499e0997738984b5"}, "config": {"enabled": true, "alias": null, "schema": "sap_dev", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "freshness": null}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "unrendered_config": {"materialized": "table", "schema": "sap_{{ var('directed_schema','dev') }}", "enabled": true}, "created_at": 1756850326.463796, "relation_name": "\"postgres\".\"public_sap_dev\".\"int_sap__0fi_gl_10_unpivot\"", "raw_code": "{{ config(enabled=var('sap_using_faglflext', True) and var('sap_using_t001', True)) }}\n\nwith sums as ( \n\n\tselect * \n\tfrom {{ ref('int_sap__0fi_gl_10_sums') }}\n),\n\n{% if target.type == 'postgres' %}\nfinal as (\n\n  \tselect\n  \t\tryear,\n\t\tactiv, \n\t\trmvct, \n\t\trtcur, \n\t\trunit, \n\t\tawtyp, \n\t\trldnr, \n\t\trrcty, \n\t\trvers, \n\t\tlogsys, \n\t\tracct, \n\t\tcost_elem, \n\t\trbukrs, \n\t\trcntr, \n\t\tprctr, \n\t\trfarea, \n\t\trbusa, \n\t\tkokrs, \n\t\tsegment, \n\t\tscntr, \n\t\tpprctr, \n\t\tsfarea, \n\t\tsbusa, \n\t\trassc, \n\t\tpsegment, \n\t\tfaglflext_timestamp, \n  \t\tcase\n  \t\t  when left(fieldtype, 1) = 't' then '00'\n  \t\t  when left(fieldtype, 1) = 'h' then '10'\n  \t\t  when left(fieldtype, 1) = 'k' then '20'\n  \t\t  when left(fieldtype, 1) = 'o' then '40'\n  \t\tend as currency_type,\n\t\t'0' || case when right(fieldtype, 2) = 'vt' then '00' else right(fieldtype, 2) end|| '.' || ryear as fiscal_period,\n\t\tcase when drcrk = 's' and substring(fieldtype,3,1) = 'l' then value \n\t\t\telse 0 \n\t\t\tend as debit_amount,\n\t\tcase when drcrk = 'h' and substring(fieldtype,3,1) = 'l' then value \n\t\t\telse 0 \n\t\t\tend as credit_amount,\n\t\tcase when substring(fieldtype,3,1) = 'm' then value \n\t\t\telse 0 \n\t\t\tend as accumulated_balance,\n\t\tcase when substring(fieldtype,3,1) = 'l' then value \n\t\t\telse 0 \n\t\t\tend as turnover,\n  \t\tunnested.fieldtype,\n  \t\tunnested.value\n  \tfrom sums\n  \tcross join lateral (\n  \t  \tvalues ('hslvt', hslvt), \n\t\t\t   ('hsmvt', hsmvt), \n\t\t\t   ('hsl01', hsl01), \n\t\t\t   ('hsm01', hsm01), \n\t\t\t   ('hsl02', hsl02), \n\t\t\t   ('hsm02', hsm02), \n\t\t\t   ('hsl03', hsl03),\n\t\t\t   ('hsm03', hsm03), \n\t\t\t   ('hsl04', hsl04),\n\t\t\t   ('hsm04', hsm04), \n\t\t\t   ('hsl05', hsl05),\n\t\t\t   ('hsm05', hsm05), \n\t\t\t   ('hsl06', hsl06),\n\t\t\t   ('hsm06', hsm06), \n\t\t\t   ('hsl07', hsl07),\n\t\t\t   ('hsm07', hsm07),\n\t\t\t   ('hsl08', hsl08), \n\t\t\t   ('hsm08', hsm08), \n\t\t\t   ('hsl09', hsl09), \n\t\t\t   ('hsm09', hsm09),\n\t\t\t   ('hsl10', hsl10),  \n\t\t\t   ('hsm10', hsm10), \n\t\t\t   ('hsl11', hsl11), \n\t\t\t   ('hsm11', hsm11), \n\t\t\t   ('hsl12', hsl12), \n\t\t\t   ('hsm12', hsm12),\n\t\t\t   ('hsl13', hsl13),\n\t\t\t   ('hsm13', hsm13),\n\t\t\t   ('hsl14', hsl14),\n\t\t\t   ('hsm14', hsm14),\n\t\t\t   ('hsl15', hsl15),\n\t\t\t   ('hsm15', hsm15),\n\t\t\t   ('hsl16', hsl16),\n\t\t\t   ('hsm16', hsm16),\n\t\t\t   ('tslvt', tslvt),\n\t\t\t   ('tsmvt', tsmvt),\n\t\t\t   ('tsl01', tsl01),\n\t\t\t   ('tsm01', tsm01),\n\t\t\t   ('tsl02', tsl02),\n\t\t\t   ('tsm02', tsm02),\n\t\t\t   ('tsl03', tsl03),\n\t\t\t   ('tsm03', tsm03),\n\t\t\t   ('tsl04', tsl04),\n\t\t\t   ('tsm04', tsm04),\n\t\t\t   ('tsl05', tsl05),\n\t\t\t   ('tsm05', tsm05),\n\t\t\t   ('tsl06', tsl06),\n\t\t\t   ('tsm06', tsm06),\n\t\t\t   ('tsl07', tsl07),\n\t\t\t   ('tsm07', tsm07),\n\t\t\t   ('tsl08', tsl08),\n\t\t\t   ('tsm08', tsm08),\n\t\t\t   ('tsl09', tsl09),\n\t\t\t   ('tsm09', tsm09),\n\t\t\t   ('tsl10', tsl10),\n\t\t\t   ('tsm10', tsm10),\n\t\t\t   ('tsl11', tsl11),\n\t\t\t   ('tsm11', tsm11),\n\t\t\t   ('tsl12', tsl12),\n\t\t\t   ('tsm12', tsm12),\n\t\t\t   ('tsl13', tsl13),\n\t\t\t   ('tsm13', tsm13),\n\t\t\t   ('tsl14', tsl14),\n\t\t\t   ('tsm14', tsm14),\n\t\t\t   ('tsl15', tsl15),\n\t\t\t   ('tsm15', tsm15),\n\t\t\t   ('tsl16', tsl16),\n\t\t\t   ('tsm16', tsm16),\n\t\t\t   ('kslvt', kslvt),\n\t\t\t   ('ksmvt', ksmvt),\n\t\t\t   ('ksl01', ksl01),\n\t\t\t   ('ksm01', ksm01),\n\t\t\t   ('ksl02', ksl02),\n\t\t\t   ('ksm02', ksm02),\n\t\t\t   ('ksl03', ksl03),\n\t\t\t   ('ksm03', ksm03),\n\t\t\t   ('ksl04', ksl04), \n\t\t\t   ('ksm04', ksm04),\n\t\t\t   ('ksl05', ksl05),\n\t\t\t   ('ksm05', ksm05),\n\t\t\t   ('ksl06', ksl06),\n\t\t\t   ('ksm06', ksm06),\n\t\t\t   ('ksl07', ksl07),\n\t\t\t   ('ksm07', ksm07),\n\t\t\t   ('ksl08', ksl08),\n\t\t\t   ('ksm08', ksm08),\n\t\t\t   ('ksl09', ksl09),\n\t\t\t   ('ksm09', ksm09),\n\t\t\t   ('ksl10', ksl10),\n\t\t\t   ('ksm10', ksm10),\n\t\t\t   ('ksl11', ksl11), \n\t\t\t   ('ksm11', ksm11),\n\t\t\t   ('ksl12', ksl12),\n\t\t\t   ('ksm12', ksm12),\n\t\t\t   ('ksl13', ksl13),\n\t\t\t   ('ksm13', ksm13),\n\t\t\t   ('ksl14', ksl14),\n\t\t\t   ('ksm14', ksm14),\n\t\t\t   ('ksl15', ksl15),\n\t\t\t   ('ksm15', ksm15),\n\t\t\t   ('ksl16', ksl16),\n\t\t\t   ('ksm16', ksm16),\n\t\t\t   ('oslvt', oslvt),\n\t\t\t   ('osmvt', osmvt),\n\t\t\t   ('osl01', osl01),\n\t\t\t   ('osm01', osm01),\n\t\t\t   ('osl02', osl02),\n\t\t\t   ('osm02', osm02),\n\t\t\t   ('osl03', osl03),\n\t\t\t   ('osm03', osm03),\n\t\t\t   ('osl04', osl04),\n\t\t\t   ('osm04', osm04),\n\t\t\t   ('osl05', osl05),\n\t\t\t   ('osm05', osm05),\n\t\t\t   ('osl06', osl06),\n\t\t\t   ('osm06', osm06),\n\t\t\t   ('osl07', osl07),\n\t\t\t   ('osm07', osm07),\n\t\t\t   ('osl08', osl08),\n\t\t\t   ('osm08', osm08),\n\t\t\t   ('osl09', osl09),\n\t\t\t   ('osm09', osm09),\n\t\t\t   ('osl10', osl10),\n\t\t\t   ('osm10', osm10),\n\t\t\t   ('osl11', osl11),\n\t\t\t   ('osm11', osm11),\n\t\t\t   ('osl12', osl12),\n\t\t\t   ('osm12', osm12),\n\t\t\t   ('osl13', osl13),\n\t\t\t   ('osm13', osm13),\n\t\t\t   ('osl14', osl14),\n\t\t\t   ('osm14', osm14),\n\t\t\t   ('osl15', osl15),\n\t\t\t   ('osm15', osm15),\n\t\t\t   ('osl16', osl16),\n\t\t\t   ('osm16', osm16))\n\t\tas unnested (fieldtype, value)\n) \n\nselect *\nfrom final\n \n{% else %}\nfinal as ( \n\n\tselect   \n\t\tryear, \n\t\tactiv, \n\t\trmvct, \n\t\trtcur, \n\t\trunit, \n\t\tawtyp, \n\t\trldnr, \n\t\trrcty, \n\t\trvers, \n\t\tlogsys, \n\t\tracct, \n\t\tcost_elem, \n\t\trbukrs, \n\t\trcntr, \n\t\tprctr, \n\t\trfarea, \n\t\trbusa, \n\t\tkokrs, \n\t\tsegment, \n\t\tscntr, \n\t\tpprctr, \n\t\tsfarea, \n\t\tsbusa, \n\t\trassc, \n\t\tpsegment, \n\t\tfaglflext_timestamp, \n\t\tcase when left(fieldtype,1) = 't' then '00'\t   \n\t\t\twhen left(fieldtype,1) = 'h' then '10'\n\t\t\twhen left(fieldtype,1) = 'k' then '20' \n\t\t\twhen left(fieldtype,1) = 'o' then '40' \n\t\t\tend as currency_type,\n\t\t'0' || case when right(fieldtype, 2) = 'vt' then '00' else right(fieldtype, 2) end|| '.' || ryear as fiscal_period, \n\t\tcase when drcrk = 's' and substring(fieldtype,3,1) = 'l' then value \n\t\t\telse 0 \n\t\t\tend as debit_amount,\n\t\tcase when drcrk = 'h' and substring(fieldtype,3,1) = 'l' then value \n\t\t\telse 0 \n\t\t\tend as credit_amount,\n\t\tcase when substring(fieldtype,3,1) = 'm' then value \n\t\t\telse 0 \n\t\t\tend as accumulated_balance,\n\t\tcase when substring(fieldtype,3,1) = 'l' then value \n\t\t\telse 0 \n\t\t\tend as turnover\n    from sums\n\t{% if target.type == 'databricks' %}\n\t \tlateral view\n   \t\t\tstack(136,\n      \t\t\t'hslvt', hslvt,\n      \t\t\t'hsmvt', hsmvt,\n      \t\t\t'hsl01', hsl01,\n      \t\t\t'hsm01', hsm01,\n\t\t\t    'hsl02', hsl02,\n\t\t\t    'hsm02', hsm02,\n\t\t\t    'hsl03', hsl03,\n\t\t\t    'hsm03', hsm03, \n\t\t\t    'hsl04', hsl04,\n\t\t\t    'hsm04', hsm04, \n\t\t\t    'hsl05', hsl05,\n\t\t\t    'hsm05', hsm05, \n\t\t\t    'hsl06', hsl06,\n\t\t\t    'hsm06', hsm06, \n\t\t\t    'hsl07', hsl07,\n\t\t\t    'hsm07', hsm07,\n\t\t\t    'hsl08', hsl08, \n\t\t\t    'hsm08', hsm08, \n\t\t\t    'hsl09', hsl09, \n\t\t\t    'hsm09', hsm09,\n\t\t\t    'hsl10', hsl10,  \n\t\t\t    'hsm10', hsm10, \n\t\t\t    'hsl11', hsl11, \n\t\t\t    'hsm11', hsm11, \n\t\t\t    'hsl12', hsl12, \n\t\t\t    'hsm12', hsm12,\n\t\t\t    'hsl13', hsl13,\n\t\t\t    'hsm13', hsm13,\n\t\t\t    'hsl14', hsl14,\n\t\t\t    'hsm14', hsm14,\n\t\t\t    'hsl15', hsl15,\n\t\t\t    'hsm15', hsm15,\n\t\t\t    'hsl16', hsl16,\n\t\t\t    'hsm16', hsm16,\n\t\t\t    'tslvt', tslvt,\n\t\t\t    'tsmvt', tsmvt,\n\t\t\t    'tsl01', tsl01,\n\t\t\t    'tsm01', tsm01,\n\t\t\t    'tsl02', tsl02,\n\t\t\t    'tsm02', tsm02,\n\t\t\t    'tsl03', tsl03,\n\t\t\t    'tsm03', tsm03,\n\t\t\t    'tsl04', tsl04,\n\t\t\t    'tsm04', tsm04,\n\t\t\t    'tsl05', tsl05,\n\t\t\t    'tsm05', tsm05,\n\t\t\t    'tsl06', tsl06,\n\t\t\t    'tsm06', tsm06,\n\t\t\t    'tsl07', tsl07,\n\t\t\t    'tsm07', tsm07,\n\t\t\t    'tsl08', tsl08,\n\t\t\t    'tsm08', tsm08,\n\t\t\t    'tsl09', tsl09,\n\t\t\t    'tsm09', tsm09,\n\t\t\t    'tsl10', tsl10,\n\t\t\t    'tsm10', tsm10,\n\t\t\t    'tsl11', tsl11,\n\t\t\t    'tsm11', tsm11,\n\t\t\t    'tsl12', tsl12,\n\t\t\t    'tsm12', tsm12,\n\t\t\t    'tsl13', tsl13,\n\t\t\t    'tsm13', tsm13,\n\t\t\t    'tsl14', tsl14,\n\t\t\t    'tsm14', tsm14,\n\t\t\t    'tsl15', tsl15,\n\t\t\t    'tsm15', tsm15,\n\t\t\t    'tsl16', tsl16,\n\t\t\t    'tsm16', tsm16,\n\t\t\t    'kslvt', kslvt,\n\t\t\t    'ksmvt', ksmvt,\n\t\t\t    'ksl01', ksl01,\n\t\t\t    'ksm01', ksm01,\n\t\t\t    'ksl02', ksl02,\n\t\t\t    'ksm02', ksm02,\n\t\t\t    'ksl03', ksl03,\n\t\t\t    'ksm03', ksm03,\n\t\t\t    'ksl04', ksl04, \n\t\t\t    'ksm04', ksm04,\n\t\t\t    'ksl05', ksl05,\n\t\t\t    'ksm05', ksm05,\n\t\t\t    'ksl06', ksl06,\n\t\t\t    'ksm06', ksm06,\n\t\t\t    'ksl07', ksl07,\n\t\t\t    'ksm07', ksm07,\n\t\t\t    'ksl08', ksl08,\n\t\t\t    'ksm08', ksm08,\n\t\t\t    'ksl09', ksl09,\n\t\t\t    'ksm09', ksm09,\n\t\t\t    'ksl10', ksl10,\n\t\t\t    'ksm10', ksm10,\n\t\t\t    'ksl11', ksl11, \n\t\t\t    'ksm11', ksm11,\n\t\t\t    'ksl12', ksl12,\n\t\t\t    'ksm12', ksm12,\n\t\t\t    'ksl13', ksl13,\n\t\t\t    'ksm13', ksm13,\n\t\t\t    'ksl14', ksl14,\n\t\t\t    'ksm14', ksm14,\n\t\t\t    'ksl15', ksl15,\n\t\t\t    'ksm15', ksm15,\n\t\t\t    'ksl16', ksl16,\n\t\t\t    'ksm16', ksm16,\n\t\t\t    'oslvt', oslvt,\n\t\t\t    'osmvt', osmvt,\n\t\t\t    'osl01', osl01,\n\t\t\t    'osm01', osm01,\n\t\t\t    'osl02', osl02,\n\t\t\t    'osm02', osm02,\n\t\t\t    'osl03', osl03,\n\t\t\t    'osm03', osm03,\n\t\t\t    'osl04', osl04,\n\t\t\t    'osm04', osm04,\n\t\t\t    'osl05', osl05,\n\t\t\t    'osm05', osm05,\n\t\t\t    'osl06', osl06,\n\t\t\t    'osm06', osm06,\n\t\t\t    'osl07', osl07,\n\t\t\t    'osm07', osm07,\n\t\t\t    'osl08', osl08,\n\t\t\t    'osm08', osm08,\n\t\t\t    'osl09', osl09,\n\t\t\t    'osm09', osm09,\n\t\t\t    'osl10', osl10,\n\t\t\t    'osm10', osm10,\n\t\t\t    'osl11', osl11,\n\t\t\t    'osm11', osm11,\n\t\t\t    'osl12', osl12,\n\t\t\t    'osm12', osm12,\n\t\t\t    'osl13', osl13,\n\t\t\t    'osm13', osm13,\n\t\t\t    'osl14', osl14,\n\t\t\t    'osm14', osm14,\n\t\t\t    'osl15', osl15,\n\t\t\t    'osm15', osm15,\n\t\t\t    'osl16', osl16,\n\t\t\t    'osm16', osm16\n    \t) final as fieldtype, value\n\t{% else %} \n\t\tunpivot(value for fieldtype in (\n\t\t\t\thslvt, \n\t\t\t\thsmvt,\n\t\t\t\thsl01,\n\t\t\t\thsm01,\n\t\t\t\thsl02,\n\t\t\t\thsm02,\n\t\t\t\thsl03,\n\t\t\t\thsm03,\n\t\t\t\thsl04,\n\t\t\t\thsm04,\n\t\t\t\thsl05,\n\t\t\t\thsm05,\n\t\t\t\thsl06,\n\t\t\t\thsm06,\n\t\t\t\thsl07,\n\t\t\t\thsm07,\n\t\t\t\thsl08,\n\t\t\t\thsm08,\n\t\t\t\thsl09,\n\t\t\t\thsm09,\n\t\t\t\thsl10,\n\t\t\t\thsm10,\n\t\t\t\thsl11,\n\t\t\t\thsm11,\n\t\t\t\thsl12,\n\t\t\t\thsm12,\n\t\t\t\thsl13,\n\t\t\t\thsm13,\n\t\t\t\thsl14,\n\t\t\t\thsm14,\n\t\t\t\thsl15,\n\t\t\t\thsm15,\n\t\t\t\thsl16,\n\t\t\t\thsm16,\n\t\t\t\ttslvt,\n\t\t\t\ttsmvt,\n\t\t\t\ttsl01,\n\t\t\t\ttsm01,\n\t\t\t\ttsl02,\n\t\t\t\ttsm02,\n\t\t\t\ttsl03,\n\t\t\t\ttsm03,\n\t\t\t\ttsl04,\n\t\t\t\ttsm04,\n\t\t\t\ttsl05,\n\t\t\t\ttsm05,\n\t\t\t\ttsl06,\n\t\t\t\ttsm06,\n\t\t\t\ttsl07,\n\t\t\t\ttsm07,\n\t\t\t\ttsl08,\n\t\t\t\ttsm08,\n\t\t\t\ttsl09,\n\t\t\t\ttsm09,\n\t\t\t\ttsl10,\n\t\t\t\ttsm10,\n\t\t\t\ttsl11,\n\t\t\t\ttsm11,\n\t\t\t\ttsl12,\n\t\t\t\ttsm12,\n\t\t\t\ttsl13,\n\t\t\t\ttsm13,\n\t\t\t\ttsl14,\n\t\t\t\ttsm14,\n\t\t\t\ttsl15,\n\t\t\t\ttsm15,\n\t\t\t\ttsl16,\n\t\t\t\ttsm16,\n\t\t\t\tkslvt,\n\t\t\t\tksmvt,\n\t\t\t\tksl01,\n\t\t\t\tksm01,\n\t\t\t\tksl02,\n\t\t\t\tksm02,\n\t\t\t\tksl03,\n\t\t\t\tksm03,\n\t\t\t\tksl04,\n\t\t\t\tksm04,\n\t\t\t\tksl05,\n\t\t\t\tksm05,\n\t\t\t\tksl06,\n\t\t\t\tksm06,\n\t\t\t\tksl07,\n\t\t\t\tksm07,\n\t\t\t\tksl08,\n\t\t\t\tksm08,\n\t\t\t\tksl09,\n\t\t\t\tksm09,\n\t\t\t\tksl10,\n\t\t\t\tksm10,\n\t\t\t\tksl11,\n\t\t\t\tksm11,\n\t\t\t\tksl12,\n\t\t\t\tksm12,\n\t\t\t\tksl13,\n\t\t\t\tksm13,\n\t\t\t\tksl14,\n\t\t\t\tksm14,\n\t\t\t\tksl15,\n\t\t\t\tksm15,\n\t\t\t\tksl16,\n\t\t\t\tksm16,\n\t\t\t\toslvt,\n\t\t\t\tosmvt,\n\t\t\t\tosl01,\n\t\t\t\tosm01,\n\t\t\t\tosl02,\n\t\t\t\tosm02,\n\t\t\t\tosl03,\n\t\t\t\tosm03,\n\t\t\t\tosl04,\n\t\t\t\tosm04,\n\t\t\t\tosl05,\n\t\t\t\tosm05,\n\t\t\t\tosl06,\n\t\t\t\tosm06,\n\t\t\t\tosl07,\n\t\t\t\tosm07,\n\t\t\t\tosl08,\n\t\t\t\tosm08,\n\t\t\t\tosl09,\n\t\t\t\tosm09,\n\t\t\t\tosl10,\n\t\t\t\tosm10,\n\t\t\t\tosl11,\n\t\t\t\tosm11,\n\t\t\t\tosl12,\n\t\t\t\tosm12,\n\t\t\t\tosl13,\n\t\t\t\tosm13,\n\t\t\t\tosl14,\n\t\t\t\tosm14,\n\t\t\t\tosl15,\n\t\t\t\tosm15,\n\t\t\t\tosl16,\n\t\t\t\tosm16)\n\t\t)\n\t{% endif %}\n)\n\n\nselect * \nfrom final\n{% endif %}", "doc_blocks": [], "language": "sql", "refs": [{"name": "int_sap__0fi_gl_10_sums", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": [], "nodes": ["model.sap.int_sap__0fi_gl_10_sums"]}, "compiled_path": "target/compiled/sap/models/extractor_reports/intermediate/int_sap__0fi_gl_10_unpivot.sql", "compiled": true, "compiled_code": "\n\nwith sums as ( \n\n\tselect * \n\tfrom \"postgres\".\"public_sap_dev\".\"int_sap__0fi_gl_10_sums\"\n),\n\n\nfinal as (\n\n  \tselect\n  \t\tryear,\n\t\tactiv, \n\t\trmvct, \n\t\trtcur, \n\t\trunit, \n\t\tawtyp, \n\t\trldnr, \n\t\trrcty, \n\t\trvers, \n\t\tlogsys, \n\t\tracct, \n\t\tcost_elem, \n\t\trbukrs, \n\t\trcntr, \n\t\tprctr, \n\t\trfarea, \n\t\trbusa, \n\t\tkokrs, \n\t\tsegment, \n\t\tscntr, \n\t\tpprctr, \n\t\tsfarea, \n\t\tsbusa, \n\t\trassc, \n\t\tpsegment, \n\t\tfaglflext_timestamp, \n  \t\tcase\n  \t\t  when left(fieldtype, 1) = 't' then '00'\n  \t\t  when left(fieldtype, 1) = 'h' then '10'\n  \t\t  when left(fieldtype, 1) = 'k' then '20'\n  \t\t  when left(fieldtype, 1) = 'o' then '40'\n  \t\tend as currency_type,\n\t\t'0' || case when right(fieldtype, 2) = 'vt' then '00' else right(fieldtype, 2) end|| '.' || ryear as fiscal_period,\n\t\tcase when drcrk = 's' and substring(fieldtype,3,1) = 'l' then value \n\t\t\telse 0 \n\t\t\tend as debit_amount,\n\t\tcase when drcrk = 'h' and substring(fieldtype,3,1) = 'l' then value \n\t\t\telse 0 \n\t\t\tend as credit_amount,\n\t\tcase when substring(fieldtype,3,1) = 'm' then value \n\t\t\telse 0 \n\t\t\tend as accumulated_balance,\n\t\tcase when substring(fieldtype,3,1) = 'l' then value \n\t\t\telse 0 \n\t\t\tend as turnover,\n  \t\tunnested.fieldtype,\n  \t\tunnested.value\n  \tfrom sums\n  \tcross join lateral (\n  \t  \tvalues ('hslvt', hslvt), \n\t\t\t   ('hsmvt', hsmvt), \n\t\t\t   ('hsl01', hsl01), \n\t\t\t   ('hsm01', hsm01), \n\t\t\t   ('hsl02', hsl02), \n\t\t\t   ('hsm02', hsm02), \n\t\t\t   ('hsl03', hsl03),\n\t\t\t   ('hsm03', hsm03), \n\t\t\t   ('hsl04', hsl04),\n\t\t\t   ('hsm04', hsm04), \n\t\t\t   ('hsl05', hsl05),\n\t\t\t   ('hsm05', hsm05), \n\t\t\t   ('hsl06', hsl06),\n\t\t\t   ('hsm06', hsm06), \n\t\t\t   ('hsl07', hsl07),\n\t\t\t   ('hsm07', hsm07),\n\t\t\t   ('hsl08', hsl08), \n\t\t\t   ('hsm08', hsm08), \n\t\t\t   ('hsl09', hsl09), \n\t\t\t   ('hsm09', hsm09),\n\t\t\t   ('hsl10', hsl10),  \n\t\t\t   ('hsm10', hsm10), \n\t\t\t   ('hsl11', hsl11), \n\t\t\t   ('hsm11', hsm11), \n\t\t\t   ('hsl12', hsl12), \n\t\t\t   ('hsm12', hsm12),\n\t\t\t   ('hsl13', hsl13),\n\t\t\t   ('hsm13', hsm13),\n\t\t\t   ('hsl14', hsl14),\n\t\t\t   ('hsm14', hsm14),\n\t\t\t   ('hsl15', hsl15),\n\t\t\t   ('hsm15', hsm15),\n\t\t\t   ('hsl16', hsl16),\n\t\t\t   ('hsm16', hsm16),\n\t\t\t   ('tslvt', tslvt),\n\t\t\t   ('tsmvt', tsmvt),\n\t\t\t   ('tsl01', tsl01),\n\t\t\t   ('tsm01', tsm01),\n\t\t\t   ('tsl02', tsl02),\n\t\t\t   ('tsm02', tsm02),\n\t\t\t   ('tsl03', tsl03),\n\t\t\t   ('tsm03', tsm03),\n\t\t\t   ('tsl04', tsl04),\n\t\t\t   ('tsm04', tsm04),\n\t\t\t   ('tsl05', tsl05),\n\t\t\t   ('tsm05', tsm05),\n\t\t\t   ('tsl06', tsl06),\n\t\t\t   ('tsm06', tsm06),\n\t\t\t   ('tsl07', tsl07),\n\t\t\t   ('tsm07', tsm07),\n\t\t\t   ('tsl08', tsl08),\n\t\t\t   ('tsm08', tsm08),\n\t\t\t   ('tsl09', tsl09),\n\t\t\t   ('tsm09', tsm09),\n\t\t\t   ('tsl10', tsl10),\n\t\t\t   ('tsm10', tsm10),\n\t\t\t   ('tsl11', tsl11),\n\t\t\t   ('tsm11', tsm11),\n\t\t\t   ('tsl12', tsl12),\n\t\t\t   ('tsm12', tsm12),\n\t\t\t   ('tsl13', tsl13),\n\t\t\t   ('tsm13', tsm13),\n\t\t\t   ('tsl14', tsl14),\n\t\t\t   ('tsm14', tsm14),\n\t\t\t   ('tsl15', tsl15),\n\t\t\t   ('tsm15', tsm15),\n\t\t\t   ('tsl16', tsl16),\n\t\t\t   ('tsm16', tsm16),\n\t\t\t   ('kslvt', kslvt),\n\t\t\t   ('ksmvt', ksmvt),\n\t\t\t   ('ksl01', ksl01),\n\t\t\t   ('ksm01', ksm01),\n\t\t\t   ('ksl02', ksl02),\n\t\t\t   ('ksm02', ksm02),\n\t\t\t   ('ksl03', ksl03),\n\t\t\t   ('ksm03', ksm03),\n\t\t\t   ('ksl04', ksl04), \n\t\t\t   ('ksm04', ksm04),\n\t\t\t   ('ksl05', ksl05),\n\t\t\t   ('ksm05', ksm05),\n\t\t\t   ('ksl06', ksl06),\n\t\t\t   ('ksm06', ksm06),\n\t\t\t   ('ksl07', ksl07),\n\t\t\t   ('ksm07', ksm07),\n\t\t\t   ('ksl08', ksl08),\n\t\t\t   ('ksm08', ksm08),\n\t\t\t   ('ksl09', ksl09),\n\t\t\t   ('ksm09', ksm09),\n\t\t\t   ('ksl10', ksl10),\n\t\t\t   ('ksm10', ksm10),\n\t\t\t   ('ksl11', ksl11), \n\t\t\t   ('ksm11', ksm11),\n\t\t\t   ('ksl12', ksl12),\n\t\t\t   ('ksm12', ksm12),\n\t\t\t   ('ksl13', ksl13),\n\t\t\t   ('ksm13', ksm13),\n\t\t\t   ('ksl14', ksl14),\n\t\t\t   ('ksm14', ksm14),\n\t\t\t   ('ksl15', ksl15),\n\t\t\t   ('ksm15', ksm15),\n\t\t\t   ('ksl16', ksl16),\n\t\t\t   ('ksm16', ksm16),\n\t\t\t   ('oslvt', oslvt),\n\t\t\t   ('osmvt', osmvt),\n\t\t\t   ('osl01', osl01),\n\t\t\t   ('osm01', osm01),\n\t\t\t   ('osl02', osl02),\n\t\t\t   ('osm02', osm02),\n\t\t\t   ('osl03', osl03),\n\t\t\t   ('osm03', osm03),\n\t\t\t   ('osl04', osl04),\n\t\t\t   ('osm04', osm04),\n\t\t\t   ('osl05', osl05),\n\t\t\t   ('osm05', osm05),\n\t\t\t   ('osl06', osl06),\n\t\t\t   ('osm06', osm06),\n\t\t\t   ('osl07', osl07),\n\t\t\t   ('osm07', osm07),\n\t\t\t   ('osl08', osl08),\n\t\t\t   ('osm08', osm08),\n\t\t\t   ('osl09', osl09),\n\t\t\t   ('osm09', osm09),\n\t\t\t   ('osl10', osl10),\n\t\t\t   ('osm10', osm10),\n\t\t\t   ('osl11', osl11),\n\t\t\t   ('osm11', osm11),\n\t\t\t   ('osl12', osl12),\n\t\t\t   ('osm12', osm12),\n\t\t\t   ('osl13', osl13),\n\t\t\t   ('osm13', osm13),\n\t\t\t   ('osl14', osl14),\n\t\t\t   ('osm14', osm14),\n\t\t\t   ('osl15', osl15),\n\t\t\t   ('osm15', osm15),\n\t\t\t   ('osl16', osl16),\n\t\t\t   ('osm16', osm16))\n\t\tas unnested (fieldtype, value)\n) \n\nselect *\nfrom final\n \n", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null, "primary_key": [], "time_spine": null}, "model.sap.sap__fact_purchasing_order": {"database": "postgres", "schema": "public_sap_dev", "name": "sap__fact_purchasing_order", "resource_type": "model", "package_name": "sap", "path": "sales_and_procurement/star_schema/sap__fact_purchasing_order.sql", "original_file_path": "models/sales_and_procurement/star_schema/sap__fact_purchasing_order.sql", "unique_id": "model.sap.sap__fact_purchasing_order", "fqn": ["sap", "sales_and_procurement", "star_schema", "sap__fact_purchasing_order"], "alias": "sap__fact_purchasing_order", "checksum": {"name": "sha256", "checksum": "38e86957ebc2d5611a4d885db6acfd70b8def4e722e3d19233b8d515b04478b1"}, "config": {"enabled": true, "alias": null, "schema": "sap_dev", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "freshness": null}, "tags": [], "description": "Line-level metrics for purchasing documents", "columns": {"purchasing_document_id": {"name": "purchasing_document_id", "description": "ID of the purchasing document", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "purchasing_document_item_id": {"name": "purchasing_document_item_id", "description": "Item number in the purchasing document", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "company_code_id": {"name": "company_code_id", "description": "Company code that created the order", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "currency_id": {"name": "currency_id", "description": "Currency used in the transaction", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "material_id": {"name": "material_id", "description": "Foreign key to the material master", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "plant_id": {"name": "plant_id", "description": "Plant where the goods are delivered", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "purchasing_group_id": {"name": "purchasing_group_id", "description": "Responsible purchasing group", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "purchasing_organization_id": {"name": "purchasing_organization_id", "description": "Responsible purchasing organization", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "vendor_id": {"name": "vendor_id", "description": "Vendor supplying the goods", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "order_uom_id": {"name": "order_uom_id", "description": "Unit of measure for the order", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "purchasing_document_date": {"name": "purchasing_document_date", "description": "Creation date of the purchasing document", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "scheduled_delivery_date": {"name": "scheduled_delivery_date", "description": "Planned date of delivery", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "purchase_deliver_late_days": {"name": "purchase_deliver_late_days", "description": "Days the delivery was late", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "purchase_late_lead_days": {"name": "purchase_late_lead_days", "description": "Days past lead time", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "purchase_order_quantity": {"name": "purchase_order_quantity", "description": "Quantity ordered", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "purchase_open_quantity": {"name": "purchase_open_quantity", "description": "Quantity yet to be delivered", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "purchasing_delivered_quantity": {"name": "purchasing_delivered_quantity", "description": "Quantity delivered", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "purchase_late_quantity": {"name": "purchase_late_quantity", "description": "Quantity delivered late", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "cancel_purchase_quantity": {"name": "cancel_purchase_quantity", "description": "Quantity canceled", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "purchase_order_amount": {"name": "purchase_order_amount", "description": "Total order value", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "purchasing_document_currency_amount": {"name": "purchasing_document_currency_amount", "description": "Order value in document currency", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "document_currency_id": {"name": "document_currency_id", "description": "Currency code for the order", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "purchase_open_amount": {"name": "purchase_open_amount", "description": "Value of undelivered quantity", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "purchase_delivered_amount": {"name": "purchase_delivered_amount", "description": "Value of delivered quantity", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "cancel_purchase_amount": {"name": "cancel_purchase_amount", "description": "Value of canceled quantity", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "purchase_late_amount": {"name": "purchase_late_amount", "description": "Value of late-delivered quantity", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "purchase_invoiced_amount": {"name": "purchase_invoiced_amount", "description": "Invoiced amount", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "purchase_order_item_count": {"name": "purchase_order_item_count", "description": "Number of line items in the order", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "purchase_item_late_count": {"name": "purchase_item_late_count", "description": "Number of items delivered late", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "purchase_item_open_count": {"name": "purchase_item_open_count", "description": "Number of open (undelivered) items", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "purchase_item_closed_count": {"name": "purchase_item_closed_count", "description": "Number of closed/completed items", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "returns_item": {"name": "returns_item", "description": "Indicates if the item is a return ('' if not a return)", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "rejection_indicator": {"name": "rejection_indicator", "description": "Flag indicating whether the item has been rejected", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "exchange_rate": {"name": "exchange_rate", "description": "Exchange rate between the document currency and local currency", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "latest_goods_receive_date": {"name": "latest_goods_receive_date", "description": "Most recent goods receipt date recorded", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "delivery_completed": {"name": "delivery_completed", "description": "Flag indicating whether delivery for the item is complete", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": "sap://models/sales_and_procurement/star_schema/sales_and_procurement.yml", "build_path": null, "unrendered_config": {"materialized": "table", "schema": "sap_{{ var('directed_schema','dev') }}", "enabled": true}, "created_at": 1756850330.6088734, "relation_name": "\"postgres\".\"public_sap_dev\".\"sap__fact_purchasing_order\"", "raw_code": "{% set using_purchasing_document_item = var('sap_using_ekpo', True) %}\n{% set using_purchasing_document_header = var('sap_using_ekko', True) %}\n{% set using_company = var('sap_using_t001', True) %}\n{% set using_purchasing_document_overview = var('sap_using_ekbe', True) %}\n{% set using_purchasing_document_schedule_total = var('sap_using_eket', True) %}\n\n{{ config(enabled=using_purchasing_document_item) }}\n\nwith purchasing_document_item as (\n    select *\n    from {{ ref('int_sap__purchasing_document_item') }}\n\n{% if using_purchasing_document_header %}\n), purchasing_document_header as (\n    select *\n    from {{ ref('int_sap__purchasing_document_header') }}\n{% endif %}\n\n{% if using_company %}\n), company as (\n    select *\n    from {{ ref('int_sap__company') }}\n{% endif %}\n\n{% if using_purchasing_document_overview %}\n), purchasing_document_overview as (\n    select *\n    from {{ ref('int_sap__purchasing_document_overview') }}\n{% endif %}\n\n{% if using_purchasing_document_schedule_total %}\n), purchasing_document_schedule_total as (\n    select *\n    from {{ ref('int_sap__purchasing_document_schedule_total') }}\n{% endif %}\n\n), final as (\n    select\n        purchasing_document_item.purchasing_document_id,\n        purchasing_document_item.purchasing_document_item_id,\n        purchasing_document_item.material_id,\n        purchasing_document_item.plant_id,\n        purchasing_document_item.order_uom_id,\n        purchasing_document_item.returns_item,\n        purchasing_document_item.rejection_indicator,\n        purchasing_document_item.net_order_po_currency_val as purchasing_document_currency_amount,\n        case \n            when purchasing_document_item.returns_item = ''\n                then purchasing_document_item.purchase_order_quantity\n            else -1 * purchasing_document_item.purchase_order_quantity\n        end as purchase_order_quantity,\n        case \n            when lower(purchasing_document_item.rejection_indicator) = 'x'\n                then purchasing_document_item.purchase_order_quantity\n            else cast(0 as {{ dbt.type_numeric() }})\n        end as cancel_purchase_quantity,\n\n        {% if using_purchasing_document_header %}\n        purchasing_document_header.company_code_id,\n        purchasing_document_header.purchasing_group_id,\n        purchasing_document_header.purchasing_organization_id,\n        purchasing_document_header.vendor_id,\n        purchasing_document_header.purchasing_document_date,\n        purchasing_document_header.exchange_rate,\n        purchasing_document_header.currency_id as document_currency_id,\n        cast(\n            purchasing_document_item.net_order_po_currency_val *\n            case \n                when purchasing_document_header.exchange_rate < 0\n                    then -1 / purchasing_document_header.exchange_rate\n                else purchasing_document_header.exchange_rate\n            end as {{ dbt.type_numeric() }}\n        ) as purchase_order_amount,\n        case \n            when lower(purchasing_document_item.rejection_indicator) = 'x'\n                then cast(purchasing_document_item.net_order_po_currency_val * case \n                    when purchasing_document_header.exchange_rate < 0\n                        then - 1 / purchasing_document_header.exchange_rate\n                    else purchasing_document_header.exchange_rate\n                    end as {{ dbt.type_numeric() }}\n                    )\n            else cast(0 as {{ dbt.type_numeric() }})\n\t\tend as cancel_purchase_amount,\n        {% endif %}\n\n        {% if using_company %}\n        company.currency_id,\n        {% endif %}\n\n        {% if using_purchasing_document_schedule_total %}\n        purchasing_document_schedule_total.lastest_scheduled_delivery_date as scheduled_delivery_date,\n        {% endif %}\n\n        {% if using_purchasing_document_overview %}\n        purchasing_document_overview.latest_goods_receive_date,\n        purchasing_document_overview.received_quantity as purchasing_delivered_quantity,\n        purchasing_document_overview.received_value_in_local_curr as purchase_delivered_amount,\n        purchasing_document_overview.invoice_value_local_curr as purchase_invoiced_amount,\n        purchasing_document_overview.delivery_completed,\n        case\n            when purchasing_document_item.delivery_completed <> ''\n                then cast(0 as {{ dbt.type_numeric() }})\n            else (purchasing_document_item.purchase_order_quantity - coalesce(purchasing_document_overview.received_quantity, 0))\n        end as purchase_open_quantity,\n        case \n            when coalesce(purchasing_document_overview.delivery_completed, 'n') <> ' '\n                and coalesce(purchasing_document_overview.received_quantity, 0) < purchasing_document_item.purchase_order_quantity\n                then cast(1 as {{ dbt.type_numeric() }})\n            else cast(0 as {{ dbt.type_numeric() }})\n        end as purchase_item_open_count,\n        case \n            when coalesce(purchasing_document_overview.delivery_completed, 'n') <> ' '\n                or purchasing_document_overview.received_quantity >= purchasing_document_item.purchase_order_quantity\n                then cast(1 as {{ dbt.type_numeric() }})\n            else cast(0 as {{ dbt.type_numeric() }})\n        end as purchase_item_closed_count,\n        {% endif %}\n\n        {% if using_purchasing_document_header and using_purchasing_document_overview %}\n        {{ dbt.datediff(\"purchasing_document_header.purchasing_document_date\", \"purchasing_document_overview.latest_goods_receive_date\", \"day\") }} as purchase_deliver_late_days,\n        case\n            when purchasing_document_overview.delivery_completed is not null\n                then cast(0 as {{ dbt.type_numeric() }})\n            else (\n                purchasing_document_item.net_order_po_currency_val * \n                (\n                    case \n                        when purchasing_document_header.exchange_rate < 0\n                            then -1 / purchasing_document_header.exchange_rate\n                        else purchasing_document_header.exchange_rate\n                    end\n                )\n            ) - purchasing_document_overview.received_value_in_local_curr\n        end as purchase_open_amount,\n        {% endif %}\n\n        {% if using_purchasing_document_overview and using_purchasing_document_schedule_total %}\n        {{ dbt.datediff(\"purchasing_document_schedule_total.lastest_scheduled_delivery_date\", \"purchasing_document_overview.latest_goods_receive_date\", \"day\") }} as purchase_late_lead_days,\n        case \n            when purchasing_document_overview.latest_goods_receive_date > purchasing_document_schedule_total.lastest_scheduled_delivery_date\n                then purchasing_document_overview.received_quantity\n            else cast(0 as {{ dbt.type_numeric() }})\n        end as purchase_late_quantity,\n        case \n            when purchasing_document_overview.latest_goods_receive_date > purchasing_document_schedule_total.lastest_scheduled_delivery_date\n                then purchasing_document_overview.received_value_in_local_curr\n            else cast(0 as {{ dbt.type_numeric() }})\n        end as purchase_late_amount,\n        case \n            when purchasing_document_overview.latest_goods_receive_date > purchasing_document_schedule_total.lastest_scheduled_delivery_date\n                then cast(1 as {{ dbt.type_numeric() }})\n            else cast(0 as {{ dbt.type_numeric() }})\n        end as purchase_item_late_count,\n        {% endif %}\n\n        cast(1 as {{ dbt.type_numeric() }}) as purchase_order_item_count\n\n    from purchasing_document_item\n\n    {% if using_purchasing_document_header %}\n    left join purchasing_document_header\n        on purchasing_document_header.purchasing_document_id = purchasing_document_item.purchasing_document_id\n    {% endif %}\n\n    {% if using_company %}\n    left join company\n        on company.company_code_id = purchasing_document_header.company_code_id\n    {% endif %}\n\n    {% if using_purchasing_document_overview %}\n    left join purchasing_document_overview\n        on purchasing_document_overview.purchasing_document_id = purchasing_document_item.purchasing_document_id\n        and purchasing_document_overview.purchasing_document_item_id = purchasing_document_item.purchasing_document_item_id\n    {% endif %}\n\n    {% if using_purchasing_document_schedule_total %}\n    left join purchasing_document_schedule_total\n        on purchasing_document_schedule_total.purchasing_document_id = purchasing_document_item.purchasing_document_id\n        and purchasing_document_schedule_total.purchasing_document_item_id = purchasing_document_item.purchasing_document_item_id\n    {% endif %}\n)\n\nselect *\nfrom final", "doc_blocks": [], "language": "sql", "refs": [{"name": "int_sap__purchasing_document_item", "package": null, "version": null}, {"name": "int_sap__purchasing_document_header", "package": null, "version": null}, {"name": "int_sap__company", "package": null, "version": null}, {"name": "int_sap__purchasing_document_overview", "package": null, "version": null}, {"name": "int_sap__purchasing_document_schedule_total", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt.type_numeric", "macro.dbt.datediff"], "nodes": ["model.sap.int_sap__purchasing_document_item", "model.sap.int_sap__purchasing_document_header", "model.sap.int_sap__company", "model.sap.int_sap__purchasing_document_overview", "model.sap.int_sap__purchasing_document_schedule_total"]}, "compiled_path": "target/compiled/sap/models/sales_and_procurement/star_schema/sap__fact_purchasing_order.sql", "compiled": true, "compiled_code": "\n\n\n\n\n\n\n\nwith  __dbt__cte__int_sap__purchasing_document_item as (\n\n\nselect\n    mandt as client_id,\n    ebeln as purchasing_document_id,\n    ebelp as purchasing_document_item_id,\n    loekz as deletion_indicator,\n    statu as rfq_status,\n    \n    case\n        when aedat::text ~ '^[0-9]{8}$'\n            and substring(aedat::text, 5, 2)::int between 1 and 12\n            and substring(aedat::text, 7, 2)::int between 1 and 31\n        then to_date(aedat::text, 'YYYYMMDD')\n        else null\n    end\n as last_changed_on_date,\n    txz01 as short_text,\n    matnr as material_id,\n    ematn as material_number_id,\n    bukrs as company_code_id,\n    werks as plant_id,\n    lgort as storage_location_id,\n    bednr as requirement_tracking_number,\n    matkl as material_group_id,\n    infnr as number_purchasing_info_id,\n    idnlf as material_number_used_by_vendor,\n    ktmng as target_quantity,\n    menge as purchase_order_quantity,\n    meins as order_uom_id,\n    bprme as order_price_purchasing_uom_id,\n    bpumz as quantity_conversion,\n    bpumn as bpumn,\n    umrez as equal_to,\n    umren as denominator,\n    netpr as net_order_price_val,\n    peinh as price_unit,\n    netwr as net_order_po_currency_val,\n    brtwr as gross_order_po_currency_val,\n    \n    case\n        when agdat::text ~ '^[0-9]{8}$'\n            and substring(agdat::text, 5, 2)::int between 1 and 12\n            and substring(agdat::text, 7, 2)::int between 1 and 31\n        then to_date(agdat::text, 'YYYYMMDD')\n        else null\n    end\n as quotation_deadline_date,\n    webaz as gr_processing_time,\n    mwskz as tax_code_id,\n    bonus as settlement_group_1_purchasing,\n    insmk as stock_type,\n    spinf as indicator_update_info,\n    prsdr as price_printout,\n    schpr as indicator_estimated_price,\n    mahnz as number_reminders_expediters,\n    mahn1 as _1st_reminder_exped,\n    mahn2 as _2nd_reminder_exped,\n    mahn3 as _3rd_reminder_exped,\n    uebto as overdelivery_tolerance_limit,\n    uebtk as unltd_overdelivery,\n    untto as underdelivery_tolerance_limit,\n    bwtar as valuation_type_id,\n    bwtty as valuation_category_id,\n    abskz as rejection_indicator,\n    agmem as internal_comment_on_quotation_id,\n    elikz as delivery_completed,\n    erekz as final_invoice_indicator,\n    pstyp as item_category_id,\n    knttp as account_assignment_category_id,\n    kzvbr as consumption_posting,\n    vrtkz as distribut_indicator,\n    twrkz as partial_invoice_indicator,\n    wepos as goods_receipt_indicator,\n    weunb as goods_receipt_non_valuated,\n    repos as invoice_receipt_indicator,\n    webre as gr_based_inv_verif,\n    kzabs as order_acknowledgment_requirement,\n    labnr as order_acknowledgment_number,\n    konnr as outline_agreement_id,\n    ktpnr as princ_agreement_item_id,\n    \n    case\n        when abdat::text ~ '^[0-9]{8}$'\n            and substring(abdat::text, 5, 2)::int between 1 and 12\n            and substring(abdat::text, 7, 2)::int between 1 and 31\n        then to_date(abdat::text, 'YYYYMMDD')\n        else null\n    end\n as reconciliation_date,\n    abftz as agreed_cumulative_quantity,\n    etfz1 as firm_zone,\n    etfz2 as trade_off_zone,\n    kzstu as binding_on_mrp,\n    notkz as exclusion_indicator,\n    lmein as base_uom_id,\n    evers as shipping_instruction_id,\n    zwert as oa_target_val,\n    navnw as non_deductible_put_tax_val,\n    abmng as standard_release_order_quantity,\n    \n    case\n        when prdat::text ~ '^[0-9]{8}$'\n            and substring(prdat::text, 5, 2)::int between 1 and 12\n            and substring(prdat::text, 7, 2)::int between 1 and 31\n        then to_date(prdat::text, 'YYYYMMDD')\n        else null\n    end\n as price_determination_date,\n    bstyp as purch_doc_category,\n    effwr as effective_item_val,\n    xoblr as item_affects_commitments,\n    kunnr as customer_id,\n    adrnr as address_id,\n    ekkol as condition_group_with_vendor,\n    sktof as no_cash_discount,\n    stafo as update_group_stats_id,\n    plifz as planned_delivery_time_in_days,\n    ntgew as net_weight,\n    gewei as weight_uom_id,\n    txjcd as tax_jurisdiction_id,\n    etdrk as print_relevant,\n    sobkz as special_stock_id,\n    arsnr as settlement_reservation_number,\n    arsps as item_settlem_reser,\n    insnc as not_changeable,\n    ssqss as qm_control_key_id,\n    zgtyp as certificate_type_id,\n    ean11 as ean,\n    bstae as confirmation_control_key_id,\n    revlv as revision_level,\n    geber as fund_id,\n    fistl as funds_center_id,\n    fipos as commitment_item_id,\n    ko_gsber as bus_area_reported_to_partner_id,\n    ko_pargb as partners_assumed_bus_area_id,\n    ko_prctr as profit_center_id,\n    ko_pprctr as partner_profit_center_id,\n    meprf as pricing_date_control,\n    brgew as gross_weight,\n    volum as volume,\n    voleh as volume_uom_id,\n    inco1 as incoterms_id,\n    inco2 as incoterms_part_2,\n    vorab as advance_procurement,\n    kolif as prior_vendor_id,\n    ltsnr as vendor_subrange_id,\n    packno as package_number_id,\n    fplnr as invoicing_plan_number,\n    gnetwr as currently_not_used_val,\n    stapo as item_is_statistical,\n    uebpo as higher_level_item_id,\n    \n    case\n        when lewed::text ~ '^[0-9]{8}$'\n            and substring(lewed::text, 5, 2)::int between 1 and 12\n            and substring(lewed::text, 7, 2)::int between 1 and 31\n        then to_date(lewed::text, 'YYYYMMDD')\n        else null\n    end\n as latest_possible_goods_receipt_date,\n    emlif as vendor_id,\n    lblkz as subcontracting_vendor,\n    satnr as cross_plant_cm_id,\n    attyp as material_category,\n    vsart as shipping_type_id,\n    handoverloc as handover_location,\n    kanba as kanban_indicator,\n    adrn2 as number_delivery_address_id,\n    cuobj as internal_object_no,\n    xersy as eval_receipt_sett,\n    \n    case\n        when eildt::text ~ '^[0-9]{8}$'\n            and substring(eildt::text, 5, 2)::int between 1 and 12\n            and substring(eildt::text, 7, 2)::int between 1 and 31\n        then to_date(eildt::text, 'YYYYMMDD')\n        else null\n    end\n as gr_b_settlement_from_date,\n    \n    case\n        when drdat::text ~ '^[0-9]{8}$'\n            and substring(drdat::text, 5, 2)::int between 1 and 12\n            and substring(drdat::text, 7, 2)::int between 1 and 31\n        then to_date(drdat::text, 'YYYYMMDD')\n        else null\n    end\n as last_transmission_date,\n    druhr as tim,\n    drunr as sequential_number,\n    aktnr as promotion_id,\n    abeln as allocation_table_number_id,\n    abelp as item_number_allocation_table_id,\n    anzpu as number_points,\n    punei as points_uom_id,\n    saiso as season_category_id,\n    saisj as season_year,\n    ebon2 as settlement_group_2,\n    ebon3 as settlement_group_3,\n    ebonf as subseq_settlement,\n    mlmaa as mat_ledger_active,\n    mhdrz as minimum_remaining_shelf_life,\n    anfnr as rfq_number_id,\n    anfps as item_number_rfq_id,\n    kzkfg as origin_configuration,\n    usequ as quota_arrangement_usage_id,\n    umsok as sp_ind_stock_tfr_id,\n    banfn as purchase_requisition_number,\n    bnfpo as item_requisition_id,\n    mtart as material_type_id,\n    uptyp as subitem_category_id,\n    upvor as subitems_exist,\n    kzwi1 as subtotal_1_val,\n    kzwi2 as subtotal_2_val,\n    kzwi3 as subtotal_3_val,\n    kzwi4 as subtotal_4_val,\n    kzwi5 as subtotal_5_val,\n    kzwi6 as subtotal_6_val,\n    sikgr as processing_key_sub_items_id,\n    mfzhi as maximum_cmg_quantity,\n    ffzhi as maximum_cum_pgq,\n    retpo as returns_item,\n    aurel as relevant_to_allocation_table,\n    bsgru as reason_ordering_id,\n    lfret as del_type_f_returns_id,\n    mfrgr as material_freight_group_id,\n    nrfhg as qual_f_freegoodsdis,\n    j_1bnbm as brazilian_ncm_code_id,\n    j_1bmatuse as usage_the_material,\n    j_1bmatorg as origin_the_material,\n    j_1bownpro as produced_in_house,\n    j_1bindust as material_cfop_category,\n    abueb as release_creation_profile_id,\n    \n    case\n        when nlabd::text ~ '^[0-9]{8}$'\n            and substring(nlabd::text, 5, 2)::int between 1 and 12\n            and substring(nlabd::text, 7, 2)::int between 1 and 31\n        then to_date(nlabd::text, 'YYYYMMDD')\n        else null\n    end\n as next_forecast_delivery_schedule_transm_date,\n    \n    case\n        when nfabd::text ~ '^[0-9]{8}$'\n            and substring(nfabd::text, 5, 2)::int between 1 and 12\n            and substring(nfabd::text, 7, 2)::int between 1 and 31\n        then to_date(nfabd::text, 'YYYYMMDD')\n        else null\n    end\n as next_jit_delivery_schedule_transmission_date,\n    kzbws as special_stock_valuation,\n    bonba as rebate_basis_1_val,\n    fabkz as jit_sched_indicator,\n    j_1aindxp as inflation_index_id,\n    \n    case\n        when j_1aidatep::text ~ '^[0-9]{8}$'\n            and substring(j_1aidatep::text, 5, 2)::int between 1 and 12\n            and substring(j_1aidatep::text, 7, 2)::int between 1 and 31\n        then to_date(j_1aidatep::text, 'YYYYMMDD')\n        else null\n    end\n as inflation_index_date,\n    mprof as mfr_part_profile_id,\n    eglkz as final_delivery,\n    kztlf as partial_deliv_item,\n    kzfme as units_measure_usage,\n    rdprf as rounding_profile_id,\n    techs as standard_variant,\n    chg_srv as configuration_changed,\n    chg_fplnr as chg_fplnr,\n    mfrpn as manufacturer_part_number,\n    mfrnr as manufacturer_number_id,\n    emnfr as ext_manufacturer,\n    novet as item_blocked_sd_delivery,\n    afnam as name_requisitioner_requester,\n    tzonrc as time_zone_recipient_location_id,\n    iprkz as period_ind_sled,\n    lebre as service_based_invoice_verification,\n    berid as mrp_area_id,\n    xconditions as xconditions,\n    apoms as apo_as_planning_system,\n    ccomp as stock_transfer_cat,\n    grant_nbr as _grant,\n    fkber as functional_area_id,\n    status as item_status,\n    reslo as issuing_storage_loc_id,\n    kblnr as earmarked_funds_id,\n    kblpos as earmarked_funds_document_item_id,\n    weora as acceptance_at_origin,\n    srv_bas_com as service_based_commitment,\n    prio_urg as requirement_urgency_id,\n    prio_req as requirement_priority_id,\n    empst as receiving_point,\n    diff_invoice as differential_invoicing,\n    trmrisk_relevant as risk_relevancy_in_purchasing,\n    spe_abgru as reason_rejection,\n    spe_crm_so as crm_sales_order_number_tpop_process,\n    spe_crm_so_item as crm_sales_order_item_number_in_tpop_proc,\n    spe_crm_ref_so as crm_ref_order_number_tpop_process,\n    spe_crm_ref_item as crm_reference_item_number_in_tpop_proc,\n    spe_crm_fkrel as billing_relevance_crm,\n    spe_chng_sys as last_changers_system_type,\n    spe_insmk_src as source_stor_loc_stock_type,\n    spe_cq_ctrltype as cq_control_type,\n    spe_cq_nocq as no_transmission_cqs_in_sa_release,\n    reason_code as goods_receipt_reason_code,\n    cqu_sar as cumulative_grs_from_redirected_pos,\n    anzsn as number_serial_numbers,\n    spe_ewm_dtc as ewm_del_tol_chk,\n    exlin as item_number_length,\n    exsnr as external_sorting,\n    ehtyp as external_hierarchy_category_id,\n    retpc as retention_in_percent,\n    dptyp as down_payment_indicator,\n    dppct as down_payment_percentage,\n    dpamt as down_payment_amount_val,\n    \n    case\n        when dpdat::text ~ '^[0-9]{8}$'\n            and substring(dpdat::text, 5, 2)::int between 1 and 12\n            and substring(dpdat::text, 7, 2)::int between 1 and 31\n        then to_date(dpdat::text, 'YYYYMMDD')\n        else null\n    end\n as due_down_payment_date,\n    fls_rsto as enh_store_return,\n    ext_rfx_number as document_no_external_doc,\n    ext_rfx_item as item_number_external_document,\n    ext_rfx_system as logical_system_id,\n    srm_contract_id as central_contract,\n    srm_contract_itm as central_contract_item_number,\n    blk_reason_id as blocking_reason_id,\n    blk_reason_txt as blocking_reason_text,\n    itcons as real_time_cons_post,\n    fixmg as delivery_date_and_quantity_fixed,\n    wabwe as gi_based_goods_rcpt,\n    cmpl_dlv_itm as complete_delivery,\n    inco2_l as incoterms_location_1,\n    inco3_l as incoterms_location_2,\n    tc_aut_det as tax_code_automatically_determined_id,\n    manual_tc_reason as manual_tax_code_reason_id,\n    fiscal_incentive as tax_incentive_type_id,\n    tax_subject_st as tax_subject_to_substituicao_tributaria,\n    fiscal_incentive_id as incentive_id,\n    sf_txjcd as origin_jurisd_code_id,\n    _bev1_negen_item as bev1_indicator_item_is_generated,\n    _bev1_nedepfree as bev1_dependent_items_free,\n    _bev1_nestruccat as bev1_structure_category,\n    advcode as advice_code_id,\n    budget_pd as budget_period_id,\n    excpe as acceptance_period,\n    fmfgus_key as us_government_fields,\n    iuid_relevant as iuid_relevant,\n    mrpind as max_retail_price_relevant,\n    oipipeval as val_ind_pipeline,\n    oic_lifnr as oic_lifnr,\n    oic_dcityc as destination_city_code_id,\n    oic_dcounc as destination_county_code_id,\n    oic_dregio as destination_region_id,\n    oic_dland1 as destination_country_id,\n    oic_ocityc as origin_city_code_id,\n    oic_ocounc as origin_county_code_id,\n    oic_oregio as origin_region_id,\n    oic_oland1 as origin_country_id,\n    oic_porgin as tax_origin,\n    oic_pdestn as tax_destination,\n    oic_ptrip as pipeline_trip_number_external,\n    oic_pbatch as pipe_ex_batch_no,\n    oic_mot as mode_transport_id,\n    oic_aorgin as alternate_origin,\n    oic_adestn as alternate_destination,\n    oic_truckn as truck_number,\n    oia_baselo as base_location,\n    oitaxfrom as tax_key_from_id,\n    oihantyp as handling_type_id,\n    oipricie as ed_pricing_external,\n    oitaxto as tax_key_to_id,\n    oitaxcon as excise_duty_tax_val,\n    oitaxgrp as excise_duty_group_id,\n    oioilcon as oil_content_perc,\n    oiinex as ed_pricing_key_id,\n    oiexgnum as exchange_agreement_number_id,\n    oiexgtyp as exchange_type_id,\n    oifeetot as fee_total_val,\n    \n    case\n        when oifeedt::text ~ '^[0-9]{8}$'\n            and substring(oifeedt::text, 5, 2)::int between 1 and 12\n            and substring(oifeedt::text, 7, 2)::int between 1 and 31\n        then to_date(oifeedt::text, 'YYYYMMDD')\n        else null\n    end\n as fee_pricing_condition_date,\n    oinetcyc as netting_cycle_id,\n    oiferp as fee_repricing_indicator,\n    oifeech as fee_edit_control,\n    oia_ipmvat as vat_on_int_mat,\n    oia_spltiv as split_invoice_verif,\n    oivath as loccur_amount,\n    oivatf as amount_document_currency_val,\n    oisbrel as s_b_prod_relev_ind,\n    oibasprod as base_product_number_id,\n    oitrknr as tracking_number,\n    oitrkjr as tracking_number_year,\n    oiextnr as external_tracking_number,\n    oiitmnr as tracking_number_item_line,\n    oiftind as final_transfer_indicator,\n    oipriop as price_opt_gains,\n    oitrind as transfer_sign,\n    oighndl as gain_handling,\n    oiumbar as val_type_issuing_loc_id,\n    oitxcon1 as ed_tax_1_val,\n    oitxcon2 as ed_tax_2_val,\n    oitxcon3 as ed_tax_3_val,\n    oitxcon4 as ed_tax_4_val,\n    oitxcon5 as ed_tax_5_val,\n    oitxcon6 as ed_tax_6_val,\n    oid_extbol as external_bill_lading,\n    oid_miscdl as miscellaneous_delivery_number,\n    oimatcyc as material_inv_cycle_id,\n    oiedok as excise_duty_validation_indicator,\n    oiedbal as ed_balance_indicator,\n    oiedbalm as balance_method_ind,\n    oicertf1 as external_license_no,\n    \n    case\n        when oidatfm1::text ~ '^[0-9]{8}$'\n            and substring(oidatfm1::text, 5, 2)::int between 1 and 12\n            and substring(oidatfm1::text, 7, 2)::int between 1 and 31\n        then to_date(oidatfm1::text, 'YYYYMMDD')\n        else null\n    end\n as valid_from_date,\n    \n    case\n        when oidatto1::text ~ '^[0-9]{8}$'\n            and substring(oidatto1::text, 5, 2)::int between 1 and 12\n            and substring(oidatto1::text, 7, 2)::int between 1 and 31\n        then to_date(oidatto1::text, 'YYYYMMDD')\n        else null\n    end\n as valid_to_date,\n    oih_lictp as license_type_id,\n    oih_licin as internal_license_no_id,\n    oih_lcfol as follow_on_license_id,\n    oih_folqty as _2nd_license_qty,\n    oiedok_gi as ed_validation,\n    oiedbal_gi as excise_duty_balance,\n    oiedbalm_gi as balance_method,\n    oihantyp_gi as oihantyp_gi,\n    oiinex_gi as oiinex_gi,\n    oitaxgrp_gi as oitaxgrp_gi,\n    oicertf1_gi as ext_license_no_gi,\n    \n    case\n        when oidatfm1_gi::text ~ '^[0-9]{8}$'\n            and substring(oidatfm1_gi::text, 5, 2)::int between 1 and 12\n            and substring(oidatfm1_gi::text, 7, 2)::int between 1 and 31\n        then to_date(oidatfm1_gi::text, 'YYYYMMDD')\n        else null\n    end\n as oidatfm1_gi,\n    \n    case\n        when oidatto1_gi::text ~ '^[0-9]{8}$'\n            and substring(oidatto1_gi::text, 5, 2)::int between 1 and 12\n            and substring(oidatto1_gi::text, 7, 2)::int between 1 and 31\n        then to_date(oidatto1_gi::text, 'YYYYMMDD')\n        else null\n    end\n as oidatto1_gi,\n    oih_lictp_gi as license_type_to_material_sto_id,\n    oih_licin_gi as inter_license_no_to_id,\n    oih_lcfol_gi as oih_lcfol_gi,\n    oih_folqty_gi as oih_folqty_gi,\n    sgt_scat as stock_segment,\n    sgt_rcat as requirement_segment,\n    wrf_charstc1 as characteristic_value_1,\n    wrf_charstc2 as characteristic_value_2,\n    wrf_charstc3 as characteristic_value_3,\n    refsite as reference_site_purchasing,\n    _accgo_is_co_rel as accgo_call_off_applies,\n    serru as type_subcontracting,\n    sernp as serial_number_profile_id,\n    disub_sobkz as special_stock,\n    disub_pspnr as wbs_element_id,\n    disub_kunnr as disub_kunnr,\n    disub_vbeln as sales_document_id,\n    disub_posnr as sd_item_id,\n    disub_owner as owner_stock_id,\n    fsh_season_year as fsh_season_year,\n    fsh_season as season_id,\n    fsh_collection as fashion_collection,\n    fsh_theme as fashion_theme,\n    \n    case\n        when fsh_atp_date::text ~ '^[0-9]{8}$'\n            and substring(fsh_atp_date::text, 5, 2)::int between 1 and 12\n            and substring(fsh_atp_date::text, 7, 2)::int between 1 and 31\n        then to_date(fsh_atp_date::text, 'YYYYMMDD')\n        else null\n    end\n as starting_with_atp_date,\n    fsh_vas_rel as vas_relevant,\n    fsh_vas_prnt_id as fsh_vas_prnt_id,\n    fsh_transaction as transaction_number,\n    fsh_item_group as item_group,\n    fsh_item as item_number,\n    fsh_ss as order_scheduling_strategy,\n    fsh_grid_cond_rec as grid_condition_number,\n    fsh_psm_pfm_split as psm_and_pfm_split_id,\n    cnfm_qty as committed_quantity,\n    ref_item as reference_item_id,\n    source_id as origin_profile_id,\n    source_key as key_in_source_system,\n    put_back as put_back_indicator,\n    pol_id as order_list_item_number,\n    cons_order as purchase_order_consignment,\n    hvr_is_deleted as hvr_is_deleted,\n    hvr_change_time as hvr_change_time\nfrom \"postgres\".\"public_sap_dev\".\"stg_sap__ekpo\"\nwhere mandt in ('800')\n),  __dbt__cte__int_sap__purchasing_document_header as (\n\n\nselect\n    mandt as client_id,\n    ebeln as purchasing_document_id,\n    bukrs as company_code_id,\n    bstyp as purchasing_document_category,\n    bsart as purchasing_document_type_id,\n    bsakz as control_indicator,\n    loekz as deletion_indicator,\n    statu as status_purchasing_document,\n    \n    case\n        when aedat::text ~ '^[0-9]{8}$'\n            and substring(aedat::text, 5, 2)::int between 1 and 12\n            and substring(aedat::text, 7, 2)::int between 1 and 31\n        then to_date(aedat::text, 'YYYYMMDD')\n        else null\n    end\n as created_date,\n    ernam as created_by,\n    pincr as item_number_interval,\n    lponr as last_item_number_id,\n    lifnr as vendor_id,\n    spras as language_key_id,\n    zterm as payment_terms,\n    zbd1t as payment_in,\n    zbd2t as zbd2t,\n    zbd3t as zbd3t,\n    zbd1p as cash_discount_percentage_1,\n    zbd2p as cash_discount_percentage_2,\n    ekorg as purchasing_organization_id,\n    ekgrp as purchasing_group_id,\n    waers as currency_id,\n    wkurs as exchange_rate,\n    kufix as exchange_rate_fixed,\n    \n    case\n        when bedat::text ~ '^[0-9]{8}$'\n            and substring(bedat::text, 5, 2)::int between 1 and 12\n            and substring(bedat::text, 7, 2)::int between 1 and 31\n        then to_date(bedat::text, 'YYYYMMDD')\n        else null\n    end\n as purchasing_document_date,\n    \n    case\n        when kdatb::text ~ '^[0-9]{8}$'\n            and substring(kdatb::text, 5, 2)::int between 1 and 12\n            and substring(kdatb::text, 7, 2)::int between 1 and 31\n        then to_date(kdatb::text, 'YYYYMMDD')\n        else null\n    end\n as start_validity_period_date,\n    \n    case\n        when kdate::text ~ '^[0-9]{8}$'\n            and substring(kdate::text, 5, 2)::int between 1 and 12\n            and substring(kdate::text, 7, 2)::int between 1 and 31\n        then to_date(kdate::text, 'YYYYMMDD')\n        else null\n    end\n as end_validity_period_date,\n    \n    case\n        when bwbdt::text ~ '^[0-9]{8}$'\n            and substring(bwbdt::text, 5, 2)::int between 1 and 12\n            and substring(bwbdt::text, 7, 2)::int between 1 and 31\n        then to_date(bwbdt::text, 'YYYYMMDD')\n        else null\n    end\n as closing_applications_date,\n    \n    case\n        when angdt::text ~ '^[0-9]{8}$'\n            and substring(angdt::text, 5, 2)::int between 1 and 12\n            and substring(angdt::text, 7, 2)::int between 1 and 31\n        then to_date(angdt::text, 'YYYYMMDD')\n        else null\n    end\n as quotation_deadline_date,\n    \n    case\n        when bnddt::text ~ '^[0-9]{8}$'\n            and substring(bnddt::text, 5, 2)::int between 1 and 12\n            and substring(bnddt::text, 7, 2)::int between 1 and 31\n        then to_date(bnddt::text, 'YYYYMMDD')\n        else null\n    end\n as binding_period_quotation_date,\n    \n    case\n        when gwldt::text ~ '^[0-9]{8}$'\n            and substring(gwldt::text, 5, 2)::int between 1 and 12\n            and substring(gwldt::text, 7, 2)::int between 1 and 31\n        then to_date(gwldt::text, 'YYYYMMDD')\n        else null\n    end\n as warranty_date,\n    ausnr as bid_invitation_number_id,\n    angnr as quotation_number,\n    \n    case\n        when ihran::text ~ '^[0-9]{8}$'\n            and substring(ihran::text, 5, 2)::int between 1 and 12\n            and substring(ihran::text, 7, 2)::int between 1 and 31\n        then to_date(ihran::text, 'YYYYMMDD')\n        else null\n    end\n as quotation_submission_date,\n    ihrez as your_reference,\n    verkf as salesperson,\n    telf1 as vendors_telephone_number,\n    llief as supplying_vendor_id,\n    kunnr as customer_id,\n    konnr as outline_agreement_id,\n    abgru as field_not_used,\n    autlf as complete_delivery,\n    weakt as indicator_goods_receipt_message,\n    reswk as supplying_plant_id,\n    lblif as field_not_used_id,\n    inco1 as incoterms_id,\n    inco2 as incoterms_part_2,\n    ktwrt as target_header_val,\n    submi as collective_number,\n    knumv as document_condition_no,\n    kalsm as procedure_id,\n    stafo as update_group_stats_id,\n    lifre as different_invoicing_party_id,\n    exnum as number_foreign_trade_id,\n    unsez as our_reference,\n    logsy as logical_system_id,\n    upinc as subitem_interval,\n    stako as time_dep_conditions,\n    frggr as release_group_id,\n    frgsx as release_strategy_id,\n    frgke as release_indicator_id,\n    frgzu as release_state,\n    frgrl as subject_to_release,\n    lands as country_tax_return_id,\n    lphis as rel_documentation,\n    adrnr as address_number_id,\n    stceg_l as country_sales_tax_id_number_id,\n    stceg as vat_registration_no,\n    absgr as reason_cancellation_id,\n    addnr as document_number_additional,\n    kornr as corr_misc_provis,\n    memory as purchase_order_not_yet_complete,\n    procstat as purch_doc_proc_state,\n    rlwrt as total_at_time_release_val,\n    revno as version_number_in_purchasing,\n    scmproc as scmproc,\n    reason_code as goods_receipt_reason_code,\n    memorytype as category_incompleteness,\n    rettp as retention_indicator,\n    retpc as retention_in_percent,\n    dptyp as down_payment_indicator,\n    dppct as down_payment_percentage,\n    dpamt as down_payment_amount_val,\n    \n    case\n        when dpdat::text ~ '^[0-9]{8}$'\n            and substring(dpdat::text, 5, 2)::int between 1 and 12\n            and substring(dpdat::text, 7, 2)::int between 1 and 31\n        then to_date(dpdat::text, 'YYYYMMDD')\n        else null\n    end\n as due_down_payment_date,\n    msr_id as process_identification_number,\n    hierarchy_exists as part_contract_hierarchy,\n    threshold_exists as threshold_value_exchange_rates,\n    legal_contract as legal_contract_number,\n    description as contract_name,\n    \n    case\n        when release_date::text ~ '^[0-9]{8}$'\n            and substring(release_date::text, 5, 2)::int between 1 and 12\n            and substring(release_date::text, 7, 2)::int between 1 and 31\n        then to_date(release_date::text, 'YYYYMMDD')\n        else null\n    end\n as release_contract_date,\n    vsart as shipping_type_id,\n    handoverloc as handover_location,\n    shipcond as shipping_conditions_id,\n    incov as incoterms_version_id,\n    inco2_l as incoterms_location_1,\n    inco3_l as incoterms_location_2,\n    force_id as internal_key_force_element,\n    force_cnt as internal_version_counter,\n    reloc_id as relocation_id,\n    reloc_seq_id as relocation_step_id,\n    source_logsys as source_logsys,\n    fsh_transaction as transaction_number,\n    fsh_item_group as item_group,\n    fsh_vas_last_item as last_vas_item_number,\n    fsh_os_stg_change as os_strategy_specific_fields_change,\n    vzskz as interest_calculation_indicator_id,\n    fsh_snst_status as snapshot_status,\n    pohf_type as document_category,\n    \n    case\n        when eq_eindt::text ~ '^[0-9]{8}$'\n            and substring(eq_eindt::text, 5, 2)::int between 1 and 12\n            and substring(eq_eindt::text, 7, 2)::int between 1 and 31\n        then to_date(eq_eindt::text, 'YYYYMMDD')\n        else null\n    end\n as same_delivery_date,\n    eq_werks as same_plant_id,\n    fixpo as firm_deal_indicator,\n    ekgrp_allow as take_account_purch_group,\n    werks_allow as take_account_plants,\n    contract_allow as take_account_contracts,\n    pstyp_allow as take_account_item_categories,\n    fixpo_allow as take_account_fixed_date_purchases,\n    key_id_allow as consider_budget,\n    aurel_allow as take_account_alloc_table_relevance,\n    delper_allow as take_account_dlvy_period,\n    eindt_allow as take_account_delivery_date,\n    ltsnr_allow as include_vendor_subrange,\n    otb_level as otb_check_level,\n    otb_cond_type as otb_condition_type_id,\n    key_id as unique_number_budget,\n    otb_value as required_budget_val,\n    otb_curr as otb_currency_id,\n    otb_res_value as reserved_budget_val,\n    otb_spec_value as special_release_budget_val,\n    spr_rsn_profile as otb_reason_profile_special_release,\n    budg_type as budget_type,\n    otb_status as otb_check_status,\n    otb_reason as reason,\n    check_type as type_otb_check,\n    con_otb_req as otb_relevant_contract,\n    con_prebook_lev as indicator_level_contracts,\n    con_distr_lev as distrib_using_target_value_or_item,\n    hvr_is_deleted as hvr_is_deleted,\n    hvr_change_time as hvr_change_time\nfrom \"postgres\".\"public_sap_dev\".\"stg_sap__ekko\"\nwhere mandt in ('800')\n),  __dbt__cte__int_sap__company as (\n\n\nselect\n    bukrs as company_code_id,\n    mandt as client_id,\n    dkweg as import_gr,\n    xgjrv as indicator_propose_fiscal_year,\n    xeink as purchase_acct_proc,\n    fdbuk as cash_management_company_code_id,\n    pp_pdate as posting_date_parking,\n    xprod as company_code_is_productive,\n    xskfn as discount_base_is_net_value,\n    xcovr as indicator_hedge_request_active,\n    ebukr as original_key_the_company_code,\n    bukrs_glob as name_global_company_code_id,\n    xmwsn as tax_base_is_net_value,\n    butxt as company_code_txt,\n    bapovar as ba_variant_id,\n    xbbko as contract,\n    dttdsp as remittance_challan_document_type_id,\n    dtaxr as deferred_tax_rule_id,\n    impda as import_in_po,\n    kkber as credit_control_area_id,\n    xfmca as update_fm,\n    xfmcb as csh_bdgt_mgt_active,\n    surccm as surcharge_calculation_method,\n    fstvare as field_status_variant_id,\n    periv as fiscal_year_variant_id,\n    txjcd as jurisdiction_code_id,\n    fmhrdate as fds_ctr_active_in_hr_date,\n    xbbba as purchase_requisition,\n    ort01 as city,\n    rcomp as company_id,\n    xsplt as enable_amount_split,\n    kopim as copying_control_gr,\n    infmt as inflation_method_id,\n    fm_derive_acc as activate_aa_derivation,\n    ktopl as chart_of_accounts_id,\n    umkrs as sales_purchases_tax_group_id,\n    xkkbi as control_area_can_be_input,\n    pst_per_var as manage_posting_period_cocode_ledger,\n    xvatdate as tax_reporting_date_active,\n    txkrs as cur_transl_tax,\n    waers as currency_id,\n    xkdft as post_translation,\n    xcos as cost_sales_accounting_status,\n    xbbbf as inventory_management,\n    xbbsc as shopping_cart,\n    xfmco as project_cash_mgmt_active,\n    dttaxc as document_type_jv_tax_code_id,\n    mregl as sample_acct_rules_var_id,\n    mwskv as input_tax_code_id,\n    xstdt as tax_determ_with_doc_date,\n    xnegp as negative_postings_permitted,\n    spras as language_key_id,\n    xvvwa as financial_assets_mgmt_active,\n    dtprov as document_type_provisions_taxes_id,\n    waabw as max_exchange_rate_deviation,\n    wt_newwt as extended_withholding_tax_active,\n    xcession as accts_recble_pled_active,\n    xslta as no_forex_rate_diff_when_clearing_in_lc,\n    adrnr as address_id,\n    xjvaa as indicator_jva_active,\n    opvar as posting_period_variant_id,\n    mwska as output_tax_code_id,\n    kokfi as allocation_indicator,\n    ktop2 as country_chart_accts_id,\n    xextb as external_co_code,\n    buvar as company_code_variant_screen,\n    offsacct as method_offsttng_acct,\n    dtamtc as document_type_jv_amount_correction_id,\n    wfvar as workflow_variant_id,\n    land1 as country_key_id,\n    fstva as fstva,\n    xfdis as cash_management_activated,\n    xbbbe as po_scheduling_agmt,\n    xvalv as define_default_value_date,\n    fikrs as financial_management_area_id,\n    xfdsd as update_sd_in_cmf,\n    xfdmm as update_mm_in_cmf,\n    xgsbe as business_area_fin_statements,\n    stceg as vat_registration_no,\n    _fivetran_deleted as _fivetran_deleted,\n    _fivetran_synced as _fivetran_synced,\n    _fivetran_sap_archived as _fivetran_sap_archived\n\nfrom \"postgres\".\"public_sap_dev\".\"stg_sap__t001\"\nwhere mandt in ('800')\n),  __dbt__cte__int_sap__purchasing_document_history as (\n\n\nselect\n    mandt as client_id,\n    ebeln as purchasing_document_id,\n    ebelp as purchasing_document_item_id,\n    zekkn as seq_no_account_assgt_id,\n    vgabe as trans_event_type_id,\n    gjahr as material_document_year_id,\n    belnr as material_document_id,\n    buzei as item_in_material_document_id,\n    bewtp as purchase_order_history_category_id,\n    bwart as movement_type_id,\n    \n    case\n        when budat::text ~ '^[0-9]{8}$'\n            and substring(budat::text, 5, 2)::int between 1 and 12\n            and substring(budat::text, 7, 2)::int between 1 and 31\n        then to_date(budat::text, 'YYYYMMDD')\n        else null\n    end\n as posting_in_the_document_date,\n    menge as qty,\n    bpmng as quantity_in_opun,\n    dmbtr as loccur_amount,\n    wrbtr as amount_document_currency_val,\n    waers as currency_id,\n    arewr as gr_ir_clearg_local_currency_val,\n    wesbs as gr_blck_stock_in_oun,\n    bpwes as gr_blocked_stck_opun,\n    shkzg as debitcredit_indicator,\n    bwtar as valuation_type_id,\n    elikz as delivery_completed,\n    xblnr as reference_document_number,\n    lfgja as fisc_year_ref_doc,\n    lfbnr as reference_document,\n    lfpos as item_reference_document,\n    grund as reason_movement_id,\n    \n    case\n        when cpudt::text ~ '^[0-9]{8}$'\n            and substring(cpudt::text, 5, 2)::int between 1 and 12\n            and substring(cpudt::text, 7, 2)::int between 1 and 31\n        then to_date(cpudt::text, 'YYYYMMDD')\n        else null\n    end\n as entry_date,\n    cputm as entry_tim,\n    reewr as voice_val,\n    evere as compliance_with_shipping_instr_id,\n    refwr as voice_fc_val,\n    matnr as material_id,\n    werks as plant_id,\n    xwsbr as revgr_despite_ir,\n    etens as sequential_number,\n    knumv as document_condition_no,\n    mwskz as tax_code_id,\n    lsmng as del_note_quantity,\n    lsmeh as delivery_note_uom_id,\n    ematn as material_number_id,\n    areww as gr_ir_clearg_fc_val,\n    hswae as local_currency_key_id,\n    bamng as bamng,\n    charg as batch_id,\n    \n    case\n        when bldat::text ~ '^[0-9]{8}$'\n            and substring(bldat::text, 5, 2)::int between 1 and 12\n            and substring(bldat::text, 7, 2)::int between 1 and 31\n        then to_date(bldat::text, 'YYYYMMDD')\n        else null\n    end\n as document_in_document_date,\n    xwoff as calculation_val_open,\n    xunpl as unplanned_acct_assgmt_inv_verification,\n    ernam as created_by,\n    srvpos as service_number_id,\n    packno as package_number_service_id,\n    introw as line_number_service,\n    bekkn as number_po_account_assignment,\n    lemin as returns_indicator,\n    arewb as arewb,\n    rewrb as voice_amount_po_currency_val,\n    saprl as sap_release,\n    menge_pop as menge_pop,\n    bpmng_pop as bpmng_pop,\n    dmbtr_pop as dmbtr_pop,\n    wrbtr_pop as wrbtr_pop,\n    wesbb as val_gr_blocked_stock_in_oun,\n    bpweb as valuated_gr_blocked_stock_in_opun,\n    weora as acceptance_at_origin,\n    arewr_pop as arewr_pop,\n    kudif as exchange_rate_difference_amount_val,\n    retamt_fc as retention_document_currency_val,\n    retamt_lc as retention_company_code_currency_val,\n    retamtp_fc as posted_retention_document_currency_val,\n    retamtp_lc as posted_security_retention_cc_crcy_val,\n    xmacc as multiple_account_assignment,\n    wkurs as exchange_rate,\n    inv_item_origin as origin_an_invoice_item,\n    vbeln_st as delivery_id,\n    vbelp_st as delivery_item_id,\n    sgt_scat as stock_segment,\n    et_upd as slqupd,\n    j_sc_die_comp_f as depreciation_completion_flag,\n    fsh_season_year as season_year,\n    fsh_season as season_id,\n    fsh_collection as fashion_collection,\n    fsh_theme as fashion_theme,\n    wrf_charstc1 as characteristic_value_1,\n    wrf_charstc2 as characteristic_value_2,\n    wrf_charstc3 as characteristic_value_3,\n    hvr_is_deleted as hvr_is_deleted,\n    hvr_change_time as hvr_change_time\nfrom \"postgres\".\"public_sap_dev\".\"stg_sap__ekbe\"\nwhere mandt in ('800')\n),  __dbt__cte__int_sap__purchasing_document_overview as (\n\n\nselect\n    purchasing_document_id,\n    purchasing_document_item_id,\n    max(delivery_completed) delivery_completed,\n    max(case when trans_event_type_id = '1' then posting_in_the_document_date else null end) as latest_goods_receive_date,\n    max(case when trans_event_type_id = '2' then posting_in_the_document_date else null end) as latest_invoice_receive_date,\n    sum(case when trans_event_type_id = '1' then case when debitcredit_indicator = 'h' then -1*qty else qty end else null end) as received_quantity,\n    sum(case when trans_event_type_id = '1' then case when debitcredit_indicator = 'h' then -1*loccur_amount else loccur_amount end else null end) as received_value_in_local_curr,\n    sum(case when trans_event_type_id = '1' then case when debitcredit_indicator = 'h' then -1*amount_document_currency_val else amount_document_currency_val end else null end) as received_value_in_doc_curr,\n    sum(case when trans_event_type_id = '2' then case when debitcredit_indicator = 'h' then -1*qty else qty end else null end) as invoice_quantity, \n    sum(case when trans_event_type_id = '2' then case when debitcredit_indicator = 'h' then -1*voice_val else voice_val end else null end) as invoice_value_local_curr,\n    sum(case when trans_event_type_id = '2' then case when debitcredit_indicator = 'h' then -1*voice_fc_val else voice_fc_val end else null end) as invoice_value_foreign_curr,\n    max(hvr_change_time) hvr_change_time,\n    max(hvr_is_deleted) hvr_is_deleted \nfrom __dbt__cte__int_sap__purchasing_document_history\ngroup by 1,2\n),  __dbt__cte__int_sap__purchasing_document_schedule_line as (\n\n\nselect\n    mandt as client_id,\n    ebeln as purchasing_document_id,\n    ebelp as purchasing_document_item_id,\n    etenr as delivery_schedule_line_counter_id,\n    \n    case\n        when eindt::text ~ '^[0-9]{8}$'\n            and substring(eindt::text, 5, 2)::int between 1 and 12\n            and substring(eindt::text, 7, 2)::int between 1 and 31\n        then to_date(eindt::text, 'YYYYMMDD')\n        else null\n    end\n as item_delivery_date,\n    \n    case\n        when slfdt::text ~ '^[0-9]{8}$'\n            and substring(slfdt::text, 5, 2)::int between 1 and 12\n            and substring(slfdt::text, 7, 2)::int between 1 and 31\n        then to_date(slfdt::text, 'YYYYMMDD')\n        else null\n    end\n as stat_rel_del_date,\n    lpein as category_delivery_date_id,\n    menge as scheduled_quantity,\n    ameng as previous_quantity,\n    wemng as quantity_goods_received,\n    wamng as issued_quantity,\n    uzeit as delivery_date_spot_tim,\n    banfn as purchase_requisition_number,\n    bnfpo as item_requisition_id,\n    estkz as creation_indicator,\n    qunum as number_quota_arrangement,\n    qupos as quota_arrangement_item,\n    mahnz as no_rem_expediters,\n    \n    case\n        when bedat::text ~ '^[0-9]{8}$'\n            and substring(bedat::text, 5, 2)::int between 1 and 12\n            and substring(bedat::text, 7, 2)::int between 1 and 31\n        then to_date(bedat::text, 'YYYYMMDD')\n        else null\n    end\n as order_schedule_line_date,\n    rsnum as reservation_id,\n    sernr as bom_explosion_number_id,\n    fixkz as schedule_line_is_fixed,\n    glmng as qty_delivered,\n    dabmg as quantity_reduced_mrp,\n    charg as batch_id,\n    licha as vendor_batch_number,\n    chkom as components,\n    verid as production_version_id,\n    abart as release_type,\n    mng02 as committed_quantity,\n    \n    case\n        when dat01::text ~ '^[0-9]{8}$'\n            and substring(dat01::text, 5, 2)::int between 1 and 12\n            and substring(dat01::text, 7, 2)::int between 1 and 31\n        then to_date(dat01::text, 'YYYYMMDD')\n        else null\n    end\n as committed_date,\n    \n    case\n        when altdt::text ~ '^[0-9]{8}$'\n            and substring(altdt::text, 5, 2)::int between 1 and 12\n            and substring(altdt::text, 7, 2)::int between 1 and 31\n        then to_date(altdt::text, 'YYYYMMDD')\n        else null\n    end\n as previous_delivery_date,\n    aulwe as route_schedule_id,\n    \n    case\n        when mbdat::text ~ '^[0-9]{8}$'\n            and substring(mbdat::text, 5, 2)::int between 1 and 12\n            and substring(mbdat::text, 7, 2)::int between 1 and 31\n        then to_date(mbdat::text, 'YYYYMMDD')\n        else null\n    end\n as material_availability_date,\n    mbuhr as matl_staging_tim,\n    \n    case\n        when lddat::text ~ '^[0-9]{8}$'\n            and substring(lddat::text, 5, 2)::int between 1 and 12\n            and substring(lddat::text, 7, 2)::int between 1 and 31\n        then to_date(lddat::text, 'YYYYMMDD')\n        else null\n    end\n as loading_date,\n    lduhr as loading_tim,\n    \n    case\n        when tddat::text ~ '^[0-9]{8}$'\n            and substring(tddat::text, 5, 2)::int between 1 and 12\n            and substring(tddat::text, 7, 2)::int between 1 and 31\n        then to_date(tddat::text, 'YYYYMMDD')\n        else null\n    end\n as transportation_planning_date,\n    tduhr as transp_plan_tim,\n    \n    case\n        when wadat::text ~ '^[0-9]{8}$'\n            and substring(wadat::text, 5, 2)::int between 1 and 12\n            and substring(wadat::text, 7, 2)::int between 1 and 31\n        then to_date(wadat::text, 'YYYYMMDD')\n        else null\n    end\n as goods_issue_date,\n    wauhr as goods_issue_tim,\n    \n    case\n        when eldat::text ~ '^[0-9]{8}$'\n            and substring(eldat::text, 5, 2)::int between 1 and 12\n            and substring(eldat::text, 7, 2)::int between 1 and 31\n        then to_date(eldat::text, 'YYYYMMDD')\n        else null\n    end\n as goods_receipt_end_date,\n    eluhr as goods_receipt_end_tim,\n    anzsn as number_serial_numbers,\n    nodisp as reservation_purc_req,\n    geo_route as geographical_route,\n    route_gts as gts_route_code,\n    gts_ind as goods_traffic_type,\n    tsp as forwarding_agent_id,\n    cd_locno as location_number_in_apo,\n    cd_loctype as apo_location_type,\n    \n    case\n        when handoverdate::text ~ '^[0-9]{8}$'\n            and substring(handoverdate::text, 5, 2)::int between 1 and 12\n            and substring(handoverdate::text, 7, 2)::int between 1 and 31\n        then to_date(handoverdate::text, 'YYYYMMDD')\n        else null\n    end\n as handover_date,\n    handovertime as handover_tim,\n    fsh_ralloc_qty as requirement_allocated_quantity,\n    fsh_salloc_qty as allocated_stock_quantity,\n    fsh_os_id as order_scheduling_group_id,\n    key_id as unique_number_budget,\n    otb_value as required_budget_val,\n    otb_curr as otb_currency_id,\n    otb_res_value as reserved_budget_val,\n    otb_spec_value as special_release_budget_val,\n    spr_rsn_profile as otb_reason_profile_special_release,\n    budg_type as budget_type,\n    otb_status as otb_check_status,\n    otb_reason as reason,\n    check_type as type_otb_check,\n    dl_id as dateline_id_guid,\n    \n    case\n        when handover_date::text ~ '^[0-9]{8}$'\n            and substring(handover_date::text, 5, 2)::int between 1 and 12\n            and substring(handover_date::text, 7, 2)::int between 1 and 31\n        then to_date(handover_date::text, 'YYYYMMDD')\n        else null\n    end\n as transfer_date,\n    no_scem as no_scem_controlling,\n    \n    case\n        when dng_date::text ~ '^[0-9]{8}$'\n            and substring(dng_date::text, 5, 2)::int between 1 and 12\n            and substring(dng_date::text, 7, 2)::int between 1 and 31\n        then to_date(dng_date::text, 'YYYYMMDD')\n        else null\n    end\n as rem_date,\n    dng_time as reminder_tim,\n    cncl_ancmnt_done as cancellation_threat_made,\n    dateshift_number as number_current_date_shifts,\n    hvr_is_deleted as hvr_is_deleted,\n    hvr_change_time as hvr_change_time\nfrom \"postgres\".\"public_sap_dev\".\"stg_sap__eket\"\nwhere mandt in ('800')\n),  __dbt__cte__int_sap__purchasing_document_schedule_total as (\n\n\nselect\n    purchasing_document_id, \n    purchasing_document_item_id, \n    max(item_delivery_date) as lastest_scheduled_delivery_date,\n    sum(scheduled_quantity) as total_scheduled_delivery_quantity\nfrom __dbt__cte__int_sap__purchasing_document_schedule_line\ngroup by 1,2\n), purchasing_document_item as (\n    select *\n    from __dbt__cte__int_sap__purchasing_document_item\n\n\n), purchasing_document_header as (\n    select *\n    from __dbt__cte__int_sap__purchasing_document_header\n\n\n\n), company as (\n    select *\n    from __dbt__cte__int_sap__company\n\n\n\n), purchasing_document_overview as (\n    select *\n    from __dbt__cte__int_sap__purchasing_document_overview\n\n\n\n), purchasing_document_schedule_total as (\n    select *\n    from __dbt__cte__int_sap__purchasing_document_schedule_total\n\n\n), final as (\n    select\n        purchasing_document_item.purchasing_document_id,\n        purchasing_document_item.purchasing_document_item_id,\n        purchasing_document_item.material_id,\n        purchasing_document_item.plant_id,\n        purchasing_document_item.order_uom_id,\n        purchasing_document_item.returns_item,\n        purchasing_document_item.rejection_indicator,\n        purchasing_document_item.net_order_po_currency_val as purchasing_document_currency_amount,\n        case \n            when purchasing_document_item.returns_item = ''\n                then purchasing_document_item.purchase_order_quantity\n            else -1 * purchasing_document_item.purchase_order_quantity\n        end as purchase_order_quantity,\n        case \n            when lower(purchasing_document_item.rejection_indicator) = 'x'\n                then purchasing_document_item.purchase_order_quantity\n            else cast(0 as numeric(28,6))\n        end as cancel_purchase_quantity,\n\n        \n        purchasing_document_header.company_code_id,\n        purchasing_document_header.purchasing_group_id,\n        purchasing_document_header.purchasing_organization_id,\n        purchasing_document_header.vendor_id,\n        purchasing_document_header.purchasing_document_date,\n        purchasing_document_header.exchange_rate,\n        purchasing_document_header.currency_id as document_currency_id,\n        cast(\n            purchasing_document_item.net_order_po_currency_val *\n            case \n                when purchasing_document_header.exchange_rate < 0\n                    then -1 / purchasing_document_header.exchange_rate\n                else purchasing_document_header.exchange_rate\n            end as numeric(28,6)\n        ) as purchase_order_amount,\n        case \n            when lower(purchasing_document_item.rejection_indicator) = 'x'\n                then cast(purchasing_document_item.net_order_po_currency_val * case \n                    when purchasing_document_header.exchange_rate < 0\n                        then - 1 / purchasing_document_header.exchange_rate\n                    else purchasing_document_header.exchange_rate\n                    end as numeric(28,6)\n                    )\n            else cast(0 as numeric(28,6))\n\t\tend as cancel_purchase_amount,\n        \n\n        \n        company.currency_id,\n        \n\n        \n        purchasing_document_schedule_total.lastest_scheduled_delivery_date as scheduled_delivery_date,\n        \n\n        \n        purchasing_document_overview.latest_goods_receive_date,\n        purchasing_document_overview.received_quantity as purchasing_delivered_quantity,\n        purchasing_document_overview.received_value_in_local_curr as purchase_delivered_amount,\n        purchasing_document_overview.invoice_value_local_curr as purchase_invoiced_amount,\n        purchasing_document_overview.delivery_completed,\n        case\n            when purchasing_document_item.delivery_completed <> ''\n                then cast(0 as numeric(28,6))\n            else (purchasing_document_item.purchase_order_quantity - coalesce(purchasing_document_overview.received_quantity, 0))\n        end as purchase_open_quantity,\n        case \n            when coalesce(purchasing_document_overview.delivery_completed, 'n') <> ' '\n                and coalesce(purchasing_document_overview.received_quantity, 0) < purchasing_document_item.purchase_order_quantity\n                then cast(1 as numeric(28,6))\n            else cast(0 as numeric(28,6))\n        end as purchase_item_open_count,\n        case \n            when coalesce(purchasing_document_overview.delivery_completed, 'n') <> ' '\n                or purchasing_document_overview.received_quantity >= purchasing_document_item.purchase_order_quantity\n                then cast(1 as numeric(28,6))\n            else cast(0 as numeric(28,6))\n        end as purchase_item_closed_count,\n        \n\n        \n        \n        ((purchasing_document_overview.latest_goods_receive_date)::date - (purchasing_document_header.purchasing_document_date)::date)\n     as purchase_deliver_late_days,\n        case\n            when purchasing_document_overview.delivery_completed is not null\n                then cast(0 as numeric(28,6))\n            else (\n                purchasing_document_item.net_order_po_currency_val * \n                (\n                    case \n                        when purchasing_document_header.exchange_rate < 0\n                            then -1 / purchasing_document_header.exchange_rate\n                        else purchasing_document_header.exchange_rate\n                    end\n                )\n            ) - purchasing_document_overview.received_value_in_local_curr\n        end as purchase_open_amount,\n        \n\n        \n        \n        ((purchasing_document_overview.latest_goods_receive_date)::date - (purchasing_document_schedule_total.lastest_scheduled_delivery_date)::date)\n     as purchase_late_lead_days,\n        case \n            when purchasing_document_overview.latest_goods_receive_date > purchasing_document_schedule_total.lastest_scheduled_delivery_date\n                then purchasing_document_overview.received_quantity\n            else cast(0 as numeric(28,6))\n        end as purchase_late_quantity,\n        case \n            when purchasing_document_overview.latest_goods_receive_date > purchasing_document_schedule_total.lastest_scheduled_delivery_date\n                then purchasing_document_overview.received_value_in_local_curr\n            else cast(0 as numeric(28,6))\n        end as purchase_late_amount,\n        case \n            when purchasing_document_overview.latest_goods_receive_date > purchasing_document_schedule_total.lastest_scheduled_delivery_date\n                then cast(1 as numeric(28,6))\n            else cast(0 as numeric(28,6))\n        end as purchase_item_late_count,\n        \n\n        cast(1 as numeric(28,6)) as purchase_order_item_count\n\n    from purchasing_document_item\n\n    \n    left join purchasing_document_header\n        on purchasing_document_header.purchasing_document_id = purchasing_document_item.purchasing_document_id\n    \n\n    \n    left join company\n        on company.company_code_id = purchasing_document_header.company_code_id\n    \n\n    \n    left join purchasing_document_overview\n        on purchasing_document_overview.purchasing_document_id = purchasing_document_item.purchasing_document_id\n        and purchasing_document_overview.purchasing_document_item_id = purchasing_document_item.purchasing_document_item_id\n    \n\n    \n    left join purchasing_document_schedule_total\n        on purchasing_document_schedule_total.purchasing_document_id = purchasing_document_item.purchasing_document_id\n        and purchasing_document_schedule_total.purchasing_document_item_id = purchasing_document_item.purchasing_document_item_id\n    \n)\n\nselect *\nfrom final", "extra_ctes_injected": true, "extra_ctes": [{"id": "model.sap.int_sap__purchasing_document_item", "sql": " __dbt__cte__int_sap__purchasing_document_item as (\n\n\nselect\n    mandt as client_id,\n    ebeln as purchasing_document_id,\n    ebelp as purchasing_document_item_id,\n    loekz as deletion_indicator,\n    statu as rfq_status,\n    \n    case\n        when aedat::text ~ '^[0-9]{8}$'\n            and substring(aedat::text, 5, 2)::int between 1 and 12\n            and substring(aedat::text, 7, 2)::int between 1 and 31\n        then to_date(aedat::text, 'YYYYMMDD')\n        else null\n    end\n as last_changed_on_date,\n    txz01 as short_text,\n    matnr as material_id,\n    ematn as material_number_id,\n    bukrs as company_code_id,\n    werks as plant_id,\n    lgort as storage_location_id,\n    bednr as requirement_tracking_number,\n    matkl as material_group_id,\n    infnr as number_purchasing_info_id,\n    idnlf as material_number_used_by_vendor,\n    ktmng as target_quantity,\n    menge as purchase_order_quantity,\n    meins as order_uom_id,\n    bprme as order_price_purchasing_uom_id,\n    bpumz as quantity_conversion,\n    bpumn as bpumn,\n    umrez as equal_to,\n    umren as denominator,\n    netpr as net_order_price_val,\n    peinh as price_unit,\n    netwr as net_order_po_currency_val,\n    brtwr as gross_order_po_currency_val,\n    \n    case\n        when agdat::text ~ '^[0-9]{8}$'\n            and substring(agdat::text, 5, 2)::int between 1 and 12\n            and substring(agdat::text, 7, 2)::int between 1 and 31\n        then to_date(agdat::text, 'YYYYMMDD')\n        else null\n    end\n as quotation_deadline_date,\n    webaz as gr_processing_time,\n    mwskz as tax_code_id,\n    bonus as settlement_group_1_purchasing,\n    insmk as stock_type,\n    spinf as indicator_update_info,\n    prsdr as price_printout,\n    schpr as indicator_estimated_price,\n    mahnz as number_reminders_expediters,\n    mahn1 as _1st_reminder_exped,\n    mahn2 as _2nd_reminder_exped,\n    mahn3 as _3rd_reminder_exped,\n    uebto as overdelivery_tolerance_limit,\n    uebtk as unltd_overdelivery,\n    untto as underdelivery_tolerance_limit,\n    bwtar as valuation_type_id,\n    bwtty as valuation_category_id,\n    abskz as rejection_indicator,\n    agmem as internal_comment_on_quotation_id,\n    elikz as delivery_completed,\n    erekz as final_invoice_indicator,\n    pstyp as item_category_id,\n    knttp as account_assignment_category_id,\n    kzvbr as consumption_posting,\n    vrtkz as distribut_indicator,\n    twrkz as partial_invoice_indicator,\n    wepos as goods_receipt_indicator,\n    weunb as goods_receipt_non_valuated,\n    repos as invoice_receipt_indicator,\n    webre as gr_based_inv_verif,\n    kzabs as order_acknowledgment_requirement,\n    labnr as order_acknowledgment_number,\n    konnr as outline_agreement_id,\n    ktpnr as princ_agreement_item_id,\n    \n    case\n        when abdat::text ~ '^[0-9]{8}$'\n            and substring(abdat::text, 5, 2)::int between 1 and 12\n            and substring(abdat::text, 7, 2)::int between 1 and 31\n        then to_date(abdat::text, 'YYYYMMDD')\n        else null\n    end\n as reconciliation_date,\n    abftz as agreed_cumulative_quantity,\n    etfz1 as firm_zone,\n    etfz2 as trade_off_zone,\n    kzstu as binding_on_mrp,\n    notkz as exclusion_indicator,\n    lmein as base_uom_id,\n    evers as shipping_instruction_id,\n    zwert as oa_target_val,\n    navnw as non_deductible_put_tax_val,\n    abmng as standard_release_order_quantity,\n    \n    case\n        when prdat::text ~ '^[0-9]{8}$'\n            and substring(prdat::text, 5, 2)::int between 1 and 12\n            and substring(prdat::text, 7, 2)::int between 1 and 31\n        then to_date(prdat::text, 'YYYYMMDD')\n        else null\n    end\n as price_determination_date,\n    bstyp as purch_doc_category,\n    effwr as effective_item_val,\n    xoblr as item_affects_commitments,\n    kunnr as customer_id,\n    adrnr as address_id,\n    ekkol as condition_group_with_vendor,\n    sktof as no_cash_discount,\n    stafo as update_group_stats_id,\n    plifz as planned_delivery_time_in_days,\n    ntgew as net_weight,\n    gewei as weight_uom_id,\n    txjcd as tax_jurisdiction_id,\n    etdrk as print_relevant,\n    sobkz as special_stock_id,\n    arsnr as settlement_reservation_number,\n    arsps as item_settlem_reser,\n    insnc as not_changeable,\n    ssqss as qm_control_key_id,\n    zgtyp as certificate_type_id,\n    ean11 as ean,\n    bstae as confirmation_control_key_id,\n    revlv as revision_level,\n    geber as fund_id,\n    fistl as funds_center_id,\n    fipos as commitment_item_id,\n    ko_gsber as bus_area_reported_to_partner_id,\n    ko_pargb as partners_assumed_bus_area_id,\n    ko_prctr as profit_center_id,\n    ko_pprctr as partner_profit_center_id,\n    meprf as pricing_date_control,\n    brgew as gross_weight,\n    volum as volume,\n    voleh as volume_uom_id,\n    inco1 as incoterms_id,\n    inco2 as incoterms_part_2,\n    vorab as advance_procurement,\n    kolif as prior_vendor_id,\n    ltsnr as vendor_subrange_id,\n    packno as package_number_id,\n    fplnr as invoicing_plan_number,\n    gnetwr as currently_not_used_val,\n    stapo as item_is_statistical,\n    uebpo as higher_level_item_id,\n    \n    case\n        when lewed::text ~ '^[0-9]{8}$'\n            and substring(lewed::text, 5, 2)::int between 1 and 12\n            and substring(lewed::text, 7, 2)::int between 1 and 31\n        then to_date(lewed::text, 'YYYYMMDD')\n        else null\n    end\n as latest_possible_goods_receipt_date,\n    emlif as vendor_id,\n    lblkz as subcontracting_vendor,\n    satnr as cross_plant_cm_id,\n    attyp as material_category,\n    vsart as shipping_type_id,\n    handoverloc as handover_location,\n    kanba as kanban_indicator,\n    adrn2 as number_delivery_address_id,\n    cuobj as internal_object_no,\n    xersy as eval_receipt_sett,\n    \n    case\n        when eildt::text ~ '^[0-9]{8}$'\n            and substring(eildt::text, 5, 2)::int between 1 and 12\n            and substring(eildt::text, 7, 2)::int between 1 and 31\n        then to_date(eildt::text, 'YYYYMMDD')\n        else null\n    end\n as gr_b_settlement_from_date,\n    \n    case\n        when drdat::text ~ '^[0-9]{8}$'\n            and substring(drdat::text, 5, 2)::int between 1 and 12\n            and substring(drdat::text, 7, 2)::int between 1 and 31\n        then to_date(drdat::text, 'YYYYMMDD')\n        else null\n    end\n as last_transmission_date,\n    druhr as tim,\n    drunr as sequential_number,\n    aktnr as promotion_id,\n    abeln as allocation_table_number_id,\n    abelp as item_number_allocation_table_id,\n    anzpu as number_points,\n    punei as points_uom_id,\n    saiso as season_category_id,\n    saisj as season_year,\n    ebon2 as settlement_group_2,\n    ebon3 as settlement_group_3,\n    ebonf as subseq_settlement,\n    mlmaa as mat_ledger_active,\n    mhdrz as minimum_remaining_shelf_life,\n    anfnr as rfq_number_id,\n    anfps as item_number_rfq_id,\n    kzkfg as origin_configuration,\n    usequ as quota_arrangement_usage_id,\n    umsok as sp_ind_stock_tfr_id,\n    banfn as purchase_requisition_number,\n    bnfpo as item_requisition_id,\n    mtart as material_type_id,\n    uptyp as subitem_category_id,\n    upvor as subitems_exist,\n    kzwi1 as subtotal_1_val,\n    kzwi2 as subtotal_2_val,\n    kzwi3 as subtotal_3_val,\n    kzwi4 as subtotal_4_val,\n    kzwi5 as subtotal_5_val,\n    kzwi6 as subtotal_6_val,\n    sikgr as processing_key_sub_items_id,\n    mfzhi as maximum_cmg_quantity,\n    ffzhi as maximum_cum_pgq,\n    retpo as returns_item,\n    aurel as relevant_to_allocation_table,\n    bsgru as reason_ordering_id,\n    lfret as del_type_f_returns_id,\n    mfrgr as material_freight_group_id,\n    nrfhg as qual_f_freegoodsdis,\n    j_1bnbm as brazilian_ncm_code_id,\n    j_1bmatuse as usage_the_material,\n    j_1bmatorg as origin_the_material,\n    j_1bownpro as produced_in_house,\n    j_1bindust as material_cfop_category,\n    abueb as release_creation_profile_id,\n    \n    case\n        when nlabd::text ~ '^[0-9]{8}$'\n            and substring(nlabd::text, 5, 2)::int between 1 and 12\n            and substring(nlabd::text, 7, 2)::int between 1 and 31\n        then to_date(nlabd::text, 'YYYYMMDD')\n        else null\n    end\n as next_forecast_delivery_schedule_transm_date,\n    \n    case\n        when nfabd::text ~ '^[0-9]{8}$'\n            and substring(nfabd::text, 5, 2)::int between 1 and 12\n            and substring(nfabd::text, 7, 2)::int between 1 and 31\n        then to_date(nfabd::text, 'YYYYMMDD')\n        else null\n    end\n as next_jit_delivery_schedule_transmission_date,\n    kzbws as special_stock_valuation,\n    bonba as rebate_basis_1_val,\n    fabkz as jit_sched_indicator,\n    j_1aindxp as inflation_index_id,\n    \n    case\n        when j_1aidatep::text ~ '^[0-9]{8}$'\n            and substring(j_1aidatep::text, 5, 2)::int between 1 and 12\n            and substring(j_1aidatep::text, 7, 2)::int between 1 and 31\n        then to_date(j_1aidatep::text, 'YYYYMMDD')\n        else null\n    end\n as inflation_index_date,\n    mprof as mfr_part_profile_id,\n    eglkz as final_delivery,\n    kztlf as partial_deliv_item,\n    kzfme as units_measure_usage,\n    rdprf as rounding_profile_id,\n    techs as standard_variant,\n    chg_srv as configuration_changed,\n    chg_fplnr as chg_fplnr,\n    mfrpn as manufacturer_part_number,\n    mfrnr as manufacturer_number_id,\n    emnfr as ext_manufacturer,\n    novet as item_blocked_sd_delivery,\n    afnam as name_requisitioner_requester,\n    tzonrc as time_zone_recipient_location_id,\n    iprkz as period_ind_sled,\n    lebre as service_based_invoice_verification,\n    berid as mrp_area_id,\n    xconditions as xconditions,\n    apoms as apo_as_planning_system,\n    ccomp as stock_transfer_cat,\n    grant_nbr as _grant,\n    fkber as functional_area_id,\n    status as item_status,\n    reslo as issuing_storage_loc_id,\n    kblnr as earmarked_funds_id,\n    kblpos as earmarked_funds_document_item_id,\n    weora as acceptance_at_origin,\n    srv_bas_com as service_based_commitment,\n    prio_urg as requirement_urgency_id,\n    prio_req as requirement_priority_id,\n    empst as receiving_point,\n    diff_invoice as differential_invoicing,\n    trmrisk_relevant as risk_relevancy_in_purchasing,\n    spe_abgru as reason_rejection,\n    spe_crm_so as crm_sales_order_number_tpop_process,\n    spe_crm_so_item as crm_sales_order_item_number_in_tpop_proc,\n    spe_crm_ref_so as crm_ref_order_number_tpop_process,\n    spe_crm_ref_item as crm_reference_item_number_in_tpop_proc,\n    spe_crm_fkrel as billing_relevance_crm,\n    spe_chng_sys as last_changers_system_type,\n    spe_insmk_src as source_stor_loc_stock_type,\n    spe_cq_ctrltype as cq_control_type,\n    spe_cq_nocq as no_transmission_cqs_in_sa_release,\n    reason_code as goods_receipt_reason_code,\n    cqu_sar as cumulative_grs_from_redirected_pos,\n    anzsn as number_serial_numbers,\n    spe_ewm_dtc as ewm_del_tol_chk,\n    exlin as item_number_length,\n    exsnr as external_sorting,\n    ehtyp as external_hierarchy_category_id,\n    retpc as retention_in_percent,\n    dptyp as down_payment_indicator,\n    dppct as down_payment_percentage,\n    dpamt as down_payment_amount_val,\n    \n    case\n        when dpdat::text ~ '^[0-9]{8}$'\n            and substring(dpdat::text, 5, 2)::int between 1 and 12\n            and substring(dpdat::text, 7, 2)::int between 1 and 31\n        then to_date(dpdat::text, 'YYYYMMDD')\n        else null\n    end\n as due_down_payment_date,\n    fls_rsto as enh_store_return,\n    ext_rfx_number as document_no_external_doc,\n    ext_rfx_item as item_number_external_document,\n    ext_rfx_system as logical_system_id,\n    srm_contract_id as central_contract,\n    srm_contract_itm as central_contract_item_number,\n    blk_reason_id as blocking_reason_id,\n    blk_reason_txt as blocking_reason_text,\n    itcons as real_time_cons_post,\n    fixmg as delivery_date_and_quantity_fixed,\n    wabwe as gi_based_goods_rcpt,\n    cmpl_dlv_itm as complete_delivery,\n    inco2_l as incoterms_location_1,\n    inco3_l as incoterms_location_2,\n    tc_aut_det as tax_code_automatically_determined_id,\n    manual_tc_reason as manual_tax_code_reason_id,\n    fiscal_incentive as tax_incentive_type_id,\n    tax_subject_st as tax_subject_to_substituicao_tributaria,\n    fiscal_incentive_id as incentive_id,\n    sf_txjcd as origin_jurisd_code_id,\n    _bev1_negen_item as bev1_indicator_item_is_generated,\n    _bev1_nedepfree as bev1_dependent_items_free,\n    _bev1_nestruccat as bev1_structure_category,\n    advcode as advice_code_id,\n    budget_pd as budget_period_id,\n    excpe as acceptance_period,\n    fmfgus_key as us_government_fields,\n    iuid_relevant as iuid_relevant,\n    mrpind as max_retail_price_relevant,\n    oipipeval as val_ind_pipeline,\n    oic_lifnr as oic_lifnr,\n    oic_dcityc as destination_city_code_id,\n    oic_dcounc as destination_county_code_id,\n    oic_dregio as destination_region_id,\n    oic_dland1 as destination_country_id,\n    oic_ocityc as origin_city_code_id,\n    oic_ocounc as origin_county_code_id,\n    oic_oregio as origin_region_id,\n    oic_oland1 as origin_country_id,\n    oic_porgin as tax_origin,\n    oic_pdestn as tax_destination,\n    oic_ptrip as pipeline_trip_number_external,\n    oic_pbatch as pipe_ex_batch_no,\n    oic_mot as mode_transport_id,\n    oic_aorgin as alternate_origin,\n    oic_adestn as alternate_destination,\n    oic_truckn as truck_number,\n    oia_baselo as base_location,\n    oitaxfrom as tax_key_from_id,\n    oihantyp as handling_type_id,\n    oipricie as ed_pricing_external,\n    oitaxto as tax_key_to_id,\n    oitaxcon as excise_duty_tax_val,\n    oitaxgrp as excise_duty_group_id,\n    oioilcon as oil_content_perc,\n    oiinex as ed_pricing_key_id,\n    oiexgnum as exchange_agreement_number_id,\n    oiexgtyp as exchange_type_id,\n    oifeetot as fee_total_val,\n    \n    case\n        when oifeedt::text ~ '^[0-9]{8}$'\n            and substring(oifeedt::text, 5, 2)::int between 1 and 12\n            and substring(oifeedt::text, 7, 2)::int between 1 and 31\n        then to_date(oifeedt::text, 'YYYYMMDD')\n        else null\n    end\n as fee_pricing_condition_date,\n    oinetcyc as netting_cycle_id,\n    oiferp as fee_repricing_indicator,\n    oifeech as fee_edit_control,\n    oia_ipmvat as vat_on_int_mat,\n    oia_spltiv as split_invoice_verif,\n    oivath as loccur_amount,\n    oivatf as amount_document_currency_val,\n    oisbrel as s_b_prod_relev_ind,\n    oibasprod as base_product_number_id,\n    oitrknr as tracking_number,\n    oitrkjr as tracking_number_year,\n    oiextnr as external_tracking_number,\n    oiitmnr as tracking_number_item_line,\n    oiftind as final_transfer_indicator,\n    oipriop as price_opt_gains,\n    oitrind as transfer_sign,\n    oighndl as gain_handling,\n    oiumbar as val_type_issuing_loc_id,\n    oitxcon1 as ed_tax_1_val,\n    oitxcon2 as ed_tax_2_val,\n    oitxcon3 as ed_tax_3_val,\n    oitxcon4 as ed_tax_4_val,\n    oitxcon5 as ed_tax_5_val,\n    oitxcon6 as ed_tax_6_val,\n    oid_extbol as external_bill_lading,\n    oid_miscdl as miscellaneous_delivery_number,\n    oimatcyc as material_inv_cycle_id,\n    oiedok as excise_duty_validation_indicator,\n    oiedbal as ed_balance_indicator,\n    oiedbalm as balance_method_ind,\n    oicertf1 as external_license_no,\n    \n    case\n        when oidatfm1::text ~ '^[0-9]{8}$'\n            and substring(oidatfm1::text, 5, 2)::int between 1 and 12\n            and substring(oidatfm1::text, 7, 2)::int between 1 and 31\n        then to_date(oidatfm1::text, 'YYYYMMDD')\n        else null\n    end\n as valid_from_date,\n    \n    case\n        when oidatto1::text ~ '^[0-9]{8}$'\n            and substring(oidatto1::text, 5, 2)::int between 1 and 12\n            and substring(oidatto1::text, 7, 2)::int between 1 and 31\n        then to_date(oidatto1::text, 'YYYYMMDD')\n        else null\n    end\n as valid_to_date,\n    oih_lictp as license_type_id,\n    oih_licin as internal_license_no_id,\n    oih_lcfol as follow_on_license_id,\n    oih_folqty as _2nd_license_qty,\n    oiedok_gi as ed_validation,\n    oiedbal_gi as excise_duty_balance,\n    oiedbalm_gi as balance_method,\n    oihantyp_gi as oihantyp_gi,\n    oiinex_gi as oiinex_gi,\n    oitaxgrp_gi as oitaxgrp_gi,\n    oicertf1_gi as ext_license_no_gi,\n    \n    case\n        when oidatfm1_gi::text ~ '^[0-9]{8}$'\n            and substring(oidatfm1_gi::text, 5, 2)::int between 1 and 12\n            and substring(oidatfm1_gi::text, 7, 2)::int between 1 and 31\n        then to_date(oidatfm1_gi::text, 'YYYYMMDD')\n        else null\n    end\n as oidatfm1_gi,\n    \n    case\n        when oidatto1_gi::text ~ '^[0-9]{8}$'\n            and substring(oidatto1_gi::text, 5, 2)::int between 1 and 12\n            and substring(oidatto1_gi::text, 7, 2)::int between 1 and 31\n        then to_date(oidatto1_gi::text, 'YYYYMMDD')\n        else null\n    end\n as oidatto1_gi,\n    oih_lictp_gi as license_type_to_material_sto_id,\n    oih_licin_gi as inter_license_no_to_id,\n    oih_lcfol_gi as oih_lcfol_gi,\n    oih_folqty_gi as oih_folqty_gi,\n    sgt_scat as stock_segment,\n    sgt_rcat as requirement_segment,\n    wrf_charstc1 as characteristic_value_1,\n    wrf_charstc2 as characteristic_value_2,\n    wrf_charstc3 as characteristic_value_3,\n    refsite as reference_site_purchasing,\n    _accgo_is_co_rel as accgo_call_off_applies,\n    serru as type_subcontracting,\n    sernp as serial_number_profile_id,\n    disub_sobkz as special_stock,\n    disub_pspnr as wbs_element_id,\n    disub_kunnr as disub_kunnr,\n    disub_vbeln as sales_document_id,\n    disub_posnr as sd_item_id,\n    disub_owner as owner_stock_id,\n    fsh_season_year as fsh_season_year,\n    fsh_season as season_id,\n    fsh_collection as fashion_collection,\n    fsh_theme as fashion_theme,\n    \n    case\n        when fsh_atp_date::text ~ '^[0-9]{8}$'\n            and substring(fsh_atp_date::text, 5, 2)::int between 1 and 12\n            and substring(fsh_atp_date::text, 7, 2)::int between 1 and 31\n        then to_date(fsh_atp_date::text, 'YYYYMMDD')\n        else null\n    end\n as starting_with_atp_date,\n    fsh_vas_rel as vas_relevant,\n    fsh_vas_prnt_id as fsh_vas_prnt_id,\n    fsh_transaction as transaction_number,\n    fsh_item_group as item_group,\n    fsh_item as item_number,\n    fsh_ss as order_scheduling_strategy,\n    fsh_grid_cond_rec as grid_condition_number,\n    fsh_psm_pfm_split as psm_and_pfm_split_id,\n    cnfm_qty as committed_quantity,\n    ref_item as reference_item_id,\n    source_id as origin_profile_id,\n    source_key as key_in_source_system,\n    put_back as put_back_indicator,\n    pol_id as order_list_item_number,\n    cons_order as purchase_order_consignment,\n    hvr_is_deleted as hvr_is_deleted,\n    hvr_change_time as hvr_change_time\nfrom \"postgres\".\"public_sap_dev\".\"stg_sap__ekpo\"\nwhere mandt in ('800')\n)"}, {"id": "model.sap.int_sap__purchasing_document_header", "sql": " __dbt__cte__int_sap__purchasing_document_header as (\n\n\nselect\n    mandt as client_id,\n    ebeln as purchasing_document_id,\n    bukrs as company_code_id,\n    bstyp as purchasing_document_category,\n    bsart as purchasing_document_type_id,\n    bsakz as control_indicator,\n    loekz as deletion_indicator,\n    statu as status_purchasing_document,\n    \n    case\n        when aedat::text ~ '^[0-9]{8}$'\n            and substring(aedat::text, 5, 2)::int between 1 and 12\n            and substring(aedat::text, 7, 2)::int between 1 and 31\n        then to_date(aedat::text, 'YYYYMMDD')\n        else null\n    end\n as created_date,\n    ernam as created_by,\n    pincr as item_number_interval,\n    lponr as last_item_number_id,\n    lifnr as vendor_id,\n    spras as language_key_id,\n    zterm as payment_terms,\n    zbd1t as payment_in,\n    zbd2t as zbd2t,\n    zbd3t as zbd3t,\n    zbd1p as cash_discount_percentage_1,\n    zbd2p as cash_discount_percentage_2,\n    ekorg as purchasing_organization_id,\n    ekgrp as purchasing_group_id,\n    waers as currency_id,\n    wkurs as exchange_rate,\n    kufix as exchange_rate_fixed,\n    \n    case\n        when bedat::text ~ '^[0-9]{8}$'\n            and substring(bedat::text, 5, 2)::int between 1 and 12\n            and substring(bedat::text, 7, 2)::int between 1 and 31\n        then to_date(bedat::text, 'YYYYMMDD')\n        else null\n    end\n as purchasing_document_date,\n    \n    case\n        when kdatb::text ~ '^[0-9]{8}$'\n            and substring(kdatb::text, 5, 2)::int between 1 and 12\n            and substring(kdatb::text, 7, 2)::int between 1 and 31\n        then to_date(kdatb::text, 'YYYYMMDD')\n        else null\n    end\n as start_validity_period_date,\n    \n    case\n        when kdate::text ~ '^[0-9]{8}$'\n            and substring(kdate::text, 5, 2)::int between 1 and 12\n            and substring(kdate::text, 7, 2)::int between 1 and 31\n        then to_date(kdate::text, 'YYYYMMDD')\n        else null\n    end\n as end_validity_period_date,\n    \n    case\n        when bwbdt::text ~ '^[0-9]{8}$'\n            and substring(bwbdt::text, 5, 2)::int between 1 and 12\n            and substring(bwbdt::text, 7, 2)::int between 1 and 31\n        then to_date(bwbdt::text, 'YYYYMMDD')\n        else null\n    end\n as closing_applications_date,\n    \n    case\n        when angdt::text ~ '^[0-9]{8}$'\n            and substring(angdt::text, 5, 2)::int between 1 and 12\n            and substring(angdt::text, 7, 2)::int between 1 and 31\n        then to_date(angdt::text, 'YYYYMMDD')\n        else null\n    end\n as quotation_deadline_date,\n    \n    case\n        when bnddt::text ~ '^[0-9]{8}$'\n            and substring(bnddt::text, 5, 2)::int between 1 and 12\n            and substring(bnddt::text, 7, 2)::int between 1 and 31\n        then to_date(bnddt::text, 'YYYYMMDD')\n        else null\n    end\n as binding_period_quotation_date,\n    \n    case\n        when gwldt::text ~ '^[0-9]{8}$'\n            and substring(gwldt::text, 5, 2)::int between 1 and 12\n            and substring(gwldt::text, 7, 2)::int between 1 and 31\n        then to_date(gwldt::text, 'YYYYMMDD')\n        else null\n    end\n as warranty_date,\n    ausnr as bid_invitation_number_id,\n    angnr as quotation_number,\n    \n    case\n        when ihran::text ~ '^[0-9]{8}$'\n            and substring(ihran::text, 5, 2)::int between 1 and 12\n            and substring(ihran::text, 7, 2)::int between 1 and 31\n        then to_date(ihran::text, 'YYYYMMDD')\n        else null\n    end\n as quotation_submission_date,\n    ihrez as your_reference,\n    verkf as salesperson,\n    telf1 as vendors_telephone_number,\n    llief as supplying_vendor_id,\n    kunnr as customer_id,\n    konnr as outline_agreement_id,\n    abgru as field_not_used,\n    autlf as complete_delivery,\n    weakt as indicator_goods_receipt_message,\n    reswk as supplying_plant_id,\n    lblif as field_not_used_id,\n    inco1 as incoterms_id,\n    inco2 as incoterms_part_2,\n    ktwrt as target_header_val,\n    submi as collective_number,\n    knumv as document_condition_no,\n    kalsm as procedure_id,\n    stafo as update_group_stats_id,\n    lifre as different_invoicing_party_id,\n    exnum as number_foreign_trade_id,\n    unsez as our_reference,\n    logsy as logical_system_id,\n    upinc as subitem_interval,\n    stako as time_dep_conditions,\n    frggr as release_group_id,\n    frgsx as release_strategy_id,\n    frgke as release_indicator_id,\n    frgzu as release_state,\n    frgrl as subject_to_release,\n    lands as country_tax_return_id,\n    lphis as rel_documentation,\n    adrnr as address_number_id,\n    stceg_l as country_sales_tax_id_number_id,\n    stceg as vat_registration_no,\n    absgr as reason_cancellation_id,\n    addnr as document_number_additional,\n    kornr as corr_misc_provis,\n    memory as purchase_order_not_yet_complete,\n    procstat as purch_doc_proc_state,\n    rlwrt as total_at_time_release_val,\n    revno as version_number_in_purchasing,\n    scmproc as scmproc,\n    reason_code as goods_receipt_reason_code,\n    memorytype as category_incompleteness,\n    rettp as retention_indicator,\n    retpc as retention_in_percent,\n    dptyp as down_payment_indicator,\n    dppct as down_payment_percentage,\n    dpamt as down_payment_amount_val,\n    \n    case\n        when dpdat::text ~ '^[0-9]{8}$'\n            and substring(dpdat::text, 5, 2)::int between 1 and 12\n            and substring(dpdat::text, 7, 2)::int between 1 and 31\n        then to_date(dpdat::text, 'YYYYMMDD')\n        else null\n    end\n as due_down_payment_date,\n    msr_id as process_identification_number,\n    hierarchy_exists as part_contract_hierarchy,\n    threshold_exists as threshold_value_exchange_rates,\n    legal_contract as legal_contract_number,\n    description as contract_name,\n    \n    case\n        when release_date::text ~ '^[0-9]{8}$'\n            and substring(release_date::text, 5, 2)::int between 1 and 12\n            and substring(release_date::text, 7, 2)::int between 1 and 31\n        then to_date(release_date::text, 'YYYYMMDD')\n        else null\n    end\n as release_contract_date,\n    vsart as shipping_type_id,\n    handoverloc as handover_location,\n    shipcond as shipping_conditions_id,\n    incov as incoterms_version_id,\n    inco2_l as incoterms_location_1,\n    inco3_l as incoterms_location_2,\n    force_id as internal_key_force_element,\n    force_cnt as internal_version_counter,\n    reloc_id as relocation_id,\n    reloc_seq_id as relocation_step_id,\n    source_logsys as source_logsys,\n    fsh_transaction as transaction_number,\n    fsh_item_group as item_group,\n    fsh_vas_last_item as last_vas_item_number,\n    fsh_os_stg_change as os_strategy_specific_fields_change,\n    vzskz as interest_calculation_indicator_id,\n    fsh_snst_status as snapshot_status,\n    pohf_type as document_category,\n    \n    case\n        when eq_eindt::text ~ '^[0-9]{8}$'\n            and substring(eq_eindt::text, 5, 2)::int between 1 and 12\n            and substring(eq_eindt::text, 7, 2)::int between 1 and 31\n        then to_date(eq_eindt::text, 'YYYYMMDD')\n        else null\n    end\n as same_delivery_date,\n    eq_werks as same_plant_id,\n    fixpo as firm_deal_indicator,\n    ekgrp_allow as take_account_purch_group,\n    werks_allow as take_account_plants,\n    contract_allow as take_account_contracts,\n    pstyp_allow as take_account_item_categories,\n    fixpo_allow as take_account_fixed_date_purchases,\n    key_id_allow as consider_budget,\n    aurel_allow as take_account_alloc_table_relevance,\n    delper_allow as take_account_dlvy_period,\n    eindt_allow as take_account_delivery_date,\n    ltsnr_allow as include_vendor_subrange,\n    otb_level as otb_check_level,\n    otb_cond_type as otb_condition_type_id,\n    key_id as unique_number_budget,\n    otb_value as required_budget_val,\n    otb_curr as otb_currency_id,\n    otb_res_value as reserved_budget_val,\n    otb_spec_value as special_release_budget_val,\n    spr_rsn_profile as otb_reason_profile_special_release,\n    budg_type as budget_type,\n    otb_status as otb_check_status,\n    otb_reason as reason,\n    check_type as type_otb_check,\n    con_otb_req as otb_relevant_contract,\n    con_prebook_lev as indicator_level_contracts,\n    con_distr_lev as distrib_using_target_value_or_item,\n    hvr_is_deleted as hvr_is_deleted,\n    hvr_change_time as hvr_change_time\nfrom \"postgres\".\"public_sap_dev\".\"stg_sap__ekko\"\nwhere mandt in ('800')\n)"}, {"id": "model.sap.int_sap__company", "sql": " __dbt__cte__int_sap__company as (\n\n\nselect\n    bukrs as company_code_id,\n    mandt as client_id,\n    dkweg as import_gr,\n    xgjrv as indicator_propose_fiscal_year,\n    xeink as purchase_acct_proc,\n    fdbuk as cash_management_company_code_id,\n    pp_pdate as posting_date_parking,\n    xprod as company_code_is_productive,\n    xskfn as discount_base_is_net_value,\n    xcovr as indicator_hedge_request_active,\n    ebukr as original_key_the_company_code,\n    bukrs_glob as name_global_company_code_id,\n    xmwsn as tax_base_is_net_value,\n    butxt as company_code_txt,\n    bapovar as ba_variant_id,\n    xbbko as contract,\n    dttdsp as remittance_challan_document_type_id,\n    dtaxr as deferred_tax_rule_id,\n    impda as import_in_po,\n    kkber as credit_control_area_id,\n    xfmca as update_fm,\n    xfmcb as csh_bdgt_mgt_active,\n    surccm as surcharge_calculation_method,\n    fstvare as field_status_variant_id,\n    periv as fiscal_year_variant_id,\n    txjcd as jurisdiction_code_id,\n    fmhrdate as fds_ctr_active_in_hr_date,\n    xbbba as purchase_requisition,\n    ort01 as city,\n    rcomp as company_id,\n    xsplt as enable_amount_split,\n    kopim as copying_control_gr,\n    infmt as inflation_method_id,\n    fm_derive_acc as activate_aa_derivation,\n    ktopl as chart_of_accounts_id,\n    umkrs as sales_purchases_tax_group_id,\n    xkkbi as control_area_can_be_input,\n    pst_per_var as manage_posting_period_cocode_ledger,\n    xvatdate as tax_reporting_date_active,\n    txkrs as cur_transl_tax,\n    waers as currency_id,\n    xkdft as post_translation,\n    xcos as cost_sales_accounting_status,\n    xbbbf as inventory_management,\n    xbbsc as shopping_cart,\n    xfmco as project_cash_mgmt_active,\n    dttaxc as document_type_jv_tax_code_id,\n    mregl as sample_acct_rules_var_id,\n    mwskv as input_tax_code_id,\n    xstdt as tax_determ_with_doc_date,\n    xnegp as negative_postings_permitted,\n    spras as language_key_id,\n    xvvwa as financial_assets_mgmt_active,\n    dtprov as document_type_provisions_taxes_id,\n    waabw as max_exchange_rate_deviation,\n    wt_newwt as extended_withholding_tax_active,\n    xcession as accts_recble_pled_active,\n    xslta as no_forex_rate_diff_when_clearing_in_lc,\n    adrnr as address_id,\n    xjvaa as indicator_jva_active,\n    opvar as posting_period_variant_id,\n    mwska as output_tax_code_id,\n    kokfi as allocation_indicator,\n    ktop2 as country_chart_accts_id,\n    xextb as external_co_code,\n    buvar as company_code_variant_screen,\n    offsacct as method_offsttng_acct,\n    dtamtc as document_type_jv_amount_correction_id,\n    wfvar as workflow_variant_id,\n    land1 as country_key_id,\n    fstva as fstva,\n    xfdis as cash_management_activated,\n    xbbbe as po_scheduling_agmt,\n    xvalv as define_default_value_date,\n    fikrs as financial_management_area_id,\n    xfdsd as update_sd_in_cmf,\n    xfdmm as update_mm_in_cmf,\n    xgsbe as business_area_fin_statements,\n    stceg as vat_registration_no,\n    _fivetran_deleted as _fivetran_deleted,\n    _fivetran_synced as _fivetran_synced,\n    _fivetran_sap_archived as _fivetran_sap_archived\n\nfrom \"postgres\".\"public_sap_dev\".\"stg_sap__t001\"\nwhere mandt in ('800')\n)"}, {"id": "model.sap.int_sap__purchasing_document_history", "sql": " __dbt__cte__int_sap__purchasing_document_history as (\n\n\nselect\n    mandt as client_id,\n    ebeln as purchasing_document_id,\n    ebelp as purchasing_document_item_id,\n    zekkn as seq_no_account_assgt_id,\n    vgabe as trans_event_type_id,\n    gjahr as material_document_year_id,\n    belnr as material_document_id,\n    buzei as item_in_material_document_id,\n    bewtp as purchase_order_history_category_id,\n    bwart as movement_type_id,\n    \n    case\n        when budat::text ~ '^[0-9]{8}$'\n            and substring(budat::text, 5, 2)::int between 1 and 12\n            and substring(budat::text, 7, 2)::int between 1 and 31\n        then to_date(budat::text, 'YYYYMMDD')\n        else null\n    end\n as posting_in_the_document_date,\n    menge as qty,\n    bpmng as quantity_in_opun,\n    dmbtr as loccur_amount,\n    wrbtr as amount_document_currency_val,\n    waers as currency_id,\n    arewr as gr_ir_clearg_local_currency_val,\n    wesbs as gr_blck_stock_in_oun,\n    bpwes as gr_blocked_stck_opun,\n    shkzg as debitcredit_indicator,\n    bwtar as valuation_type_id,\n    elikz as delivery_completed,\n    xblnr as reference_document_number,\n    lfgja as fisc_year_ref_doc,\n    lfbnr as reference_document,\n    lfpos as item_reference_document,\n    grund as reason_movement_id,\n    \n    case\n        when cpudt::text ~ '^[0-9]{8}$'\n            and substring(cpudt::text, 5, 2)::int between 1 and 12\n            and substring(cpudt::text, 7, 2)::int between 1 and 31\n        then to_date(cpudt::text, 'YYYYMMDD')\n        else null\n    end\n as entry_date,\n    cputm as entry_tim,\n    reewr as voice_val,\n    evere as compliance_with_shipping_instr_id,\n    refwr as voice_fc_val,\n    matnr as material_id,\n    werks as plant_id,\n    xwsbr as revgr_despite_ir,\n    etens as sequential_number,\n    knumv as document_condition_no,\n    mwskz as tax_code_id,\n    lsmng as del_note_quantity,\n    lsmeh as delivery_note_uom_id,\n    ematn as material_number_id,\n    areww as gr_ir_clearg_fc_val,\n    hswae as local_currency_key_id,\n    bamng as bamng,\n    charg as batch_id,\n    \n    case\n        when bldat::text ~ '^[0-9]{8}$'\n            and substring(bldat::text, 5, 2)::int between 1 and 12\n            and substring(bldat::text, 7, 2)::int between 1 and 31\n        then to_date(bldat::text, 'YYYYMMDD')\n        else null\n    end\n as document_in_document_date,\n    xwoff as calculation_val_open,\n    xunpl as unplanned_acct_assgmt_inv_verification,\n    ernam as created_by,\n    srvpos as service_number_id,\n    packno as package_number_service_id,\n    introw as line_number_service,\n    bekkn as number_po_account_assignment,\n    lemin as returns_indicator,\n    arewb as arewb,\n    rewrb as voice_amount_po_currency_val,\n    saprl as sap_release,\n    menge_pop as menge_pop,\n    bpmng_pop as bpmng_pop,\n    dmbtr_pop as dmbtr_pop,\n    wrbtr_pop as wrbtr_pop,\n    wesbb as val_gr_blocked_stock_in_oun,\n    bpweb as valuated_gr_blocked_stock_in_opun,\n    weora as acceptance_at_origin,\n    arewr_pop as arewr_pop,\n    kudif as exchange_rate_difference_amount_val,\n    retamt_fc as retention_document_currency_val,\n    retamt_lc as retention_company_code_currency_val,\n    retamtp_fc as posted_retention_document_currency_val,\n    retamtp_lc as posted_security_retention_cc_crcy_val,\n    xmacc as multiple_account_assignment,\n    wkurs as exchange_rate,\n    inv_item_origin as origin_an_invoice_item,\n    vbeln_st as delivery_id,\n    vbelp_st as delivery_item_id,\n    sgt_scat as stock_segment,\n    et_upd as slqupd,\n    j_sc_die_comp_f as depreciation_completion_flag,\n    fsh_season_year as season_year,\n    fsh_season as season_id,\n    fsh_collection as fashion_collection,\n    fsh_theme as fashion_theme,\n    wrf_charstc1 as characteristic_value_1,\n    wrf_charstc2 as characteristic_value_2,\n    wrf_charstc3 as characteristic_value_3,\n    hvr_is_deleted as hvr_is_deleted,\n    hvr_change_time as hvr_change_time\nfrom \"postgres\".\"public_sap_dev\".\"stg_sap__ekbe\"\nwhere mandt in ('800')\n)"}, {"id": "model.sap.int_sap__purchasing_document_overview", "sql": " __dbt__cte__int_sap__purchasing_document_overview as (\n\n\nselect\n    purchasing_document_id,\n    purchasing_document_item_id,\n    max(delivery_completed) delivery_completed,\n    max(case when trans_event_type_id = '1' then posting_in_the_document_date else null end) as latest_goods_receive_date,\n    max(case when trans_event_type_id = '2' then posting_in_the_document_date else null end) as latest_invoice_receive_date,\n    sum(case when trans_event_type_id = '1' then case when debitcredit_indicator = 'h' then -1*qty else qty end else null end) as received_quantity,\n    sum(case when trans_event_type_id = '1' then case when debitcredit_indicator = 'h' then -1*loccur_amount else loccur_amount end else null end) as received_value_in_local_curr,\n    sum(case when trans_event_type_id = '1' then case when debitcredit_indicator = 'h' then -1*amount_document_currency_val else amount_document_currency_val end else null end) as received_value_in_doc_curr,\n    sum(case when trans_event_type_id = '2' then case when debitcredit_indicator = 'h' then -1*qty else qty end else null end) as invoice_quantity, \n    sum(case when trans_event_type_id = '2' then case when debitcredit_indicator = 'h' then -1*voice_val else voice_val end else null end) as invoice_value_local_curr,\n    sum(case when trans_event_type_id = '2' then case when debitcredit_indicator = 'h' then -1*voice_fc_val else voice_fc_val end else null end) as invoice_value_foreign_curr,\n    max(hvr_change_time) hvr_change_time,\n    max(hvr_is_deleted) hvr_is_deleted \nfrom __dbt__cte__int_sap__purchasing_document_history\ngroup by 1,2\n)"}, {"id": "model.sap.int_sap__purchasing_document_schedule_line", "sql": " __dbt__cte__int_sap__purchasing_document_schedule_line as (\n\n\nselect\n    mandt as client_id,\n    ebeln as purchasing_document_id,\n    ebelp as purchasing_document_item_id,\n    etenr as delivery_schedule_line_counter_id,\n    \n    case\n        when eindt::text ~ '^[0-9]{8}$'\n            and substring(eindt::text, 5, 2)::int between 1 and 12\n            and substring(eindt::text, 7, 2)::int between 1 and 31\n        then to_date(eindt::text, 'YYYYMMDD')\n        else null\n    end\n as item_delivery_date,\n    \n    case\n        when slfdt::text ~ '^[0-9]{8}$'\n            and substring(slfdt::text, 5, 2)::int between 1 and 12\n            and substring(slfdt::text, 7, 2)::int between 1 and 31\n        then to_date(slfdt::text, 'YYYYMMDD')\n        else null\n    end\n as stat_rel_del_date,\n    lpein as category_delivery_date_id,\n    menge as scheduled_quantity,\n    ameng as previous_quantity,\n    wemng as quantity_goods_received,\n    wamng as issued_quantity,\n    uzeit as delivery_date_spot_tim,\n    banfn as purchase_requisition_number,\n    bnfpo as item_requisition_id,\n    estkz as creation_indicator,\n    qunum as number_quota_arrangement,\n    qupos as quota_arrangement_item,\n    mahnz as no_rem_expediters,\n    \n    case\n        when bedat::text ~ '^[0-9]{8}$'\n            and substring(bedat::text, 5, 2)::int between 1 and 12\n            and substring(bedat::text, 7, 2)::int between 1 and 31\n        then to_date(bedat::text, 'YYYYMMDD')\n        else null\n    end\n as order_schedule_line_date,\n    rsnum as reservation_id,\n    sernr as bom_explosion_number_id,\n    fixkz as schedule_line_is_fixed,\n    glmng as qty_delivered,\n    dabmg as quantity_reduced_mrp,\n    charg as batch_id,\n    licha as vendor_batch_number,\n    chkom as components,\n    verid as production_version_id,\n    abart as release_type,\n    mng02 as committed_quantity,\n    \n    case\n        when dat01::text ~ '^[0-9]{8}$'\n            and substring(dat01::text, 5, 2)::int between 1 and 12\n            and substring(dat01::text, 7, 2)::int between 1 and 31\n        then to_date(dat01::text, 'YYYYMMDD')\n        else null\n    end\n as committed_date,\n    \n    case\n        when altdt::text ~ '^[0-9]{8}$'\n            and substring(altdt::text, 5, 2)::int between 1 and 12\n            and substring(altdt::text, 7, 2)::int between 1 and 31\n        then to_date(altdt::text, 'YYYYMMDD')\n        else null\n    end\n as previous_delivery_date,\n    aulwe as route_schedule_id,\n    \n    case\n        when mbdat::text ~ '^[0-9]{8}$'\n            and substring(mbdat::text, 5, 2)::int between 1 and 12\n            and substring(mbdat::text, 7, 2)::int between 1 and 31\n        then to_date(mbdat::text, 'YYYYMMDD')\n        else null\n    end\n as material_availability_date,\n    mbuhr as matl_staging_tim,\n    \n    case\n        when lddat::text ~ '^[0-9]{8}$'\n            and substring(lddat::text, 5, 2)::int between 1 and 12\n            and substring(lddat::text, 7, 2)::int between 1 and 31\n        then to_date(lddat::text, 'YYYYMMDD')\n        else null\n    end\n as loading_date,\n    lduhr as loading_tim,\n    \n    case\n        when tddat::text ~ '^[0-9]{8}$'\n            and substring(tddat::text, 5, 2)::int between 1 and 12\n            and substring(tddat::text, 7, 2)::int between 1 and 31\n        then to_date(tddat::text, 'YYYYMMDD')\n        else null\n    end\n as transportation_planning_date,\n    tduhr as transp_plan_tim,\n    \n    case\n        when wadat::text ~ '^[0-9]{8}$'\n            and substring(wadat::text, 5, 2)::int between 1 and 12\n            and substring(wadat::text, 7, 2)::int between 1 and 31\n        then to_date(wadat::text, 'YYYYMMDD')\n        else null\n    end\n as goods_issue_date,\n    wauhr as goods_issue_tim,\n    \n    case\n        when eldat::text ~ '^[0-9]{8}$'\n            and substring(eldat::text, 5, 2)::int between 1 and 12\n            and substring(eldat::text, 7, 2)::int between 1 and 31\n        then to_date(eldat::text, 'YYYYMMDD')\n        else null\n    end\n as goods_receipt_end_date,\n    eluhr as goods_receipt_end_tim,\n    anzsn as number_serial_numbers,\n    nodisp as reservation_purc_req,\n    geo_route as geographical_route,\n    route_gts as gts_route_code,\n    gts_ind as goods_traffic_type,\n    tsp as forwarding_agent_id,\n    cd_locno as location_number_in_apo,\n    cd_loctype as apo_location_type,\n    \n    case\n        when handoverdate::text ~ '^[0-9]{8}$'\n            and substring(handoverdate::text, 5, 2)::int between 1 and 12\n            and substring(handoverdate::text, 7, 2)::int between 1 and 31\n        then to_date(handoverdate::text, 'YYYYMMDD')\n        else null\n    end\n as handover_date,\n    handovertime as handover_tim,\n    fsh_ralloc_qty as requirement_allocated_quantity,\n    fsh_salloc_qty as allocated_stock_quantity,\n    fsh_os_id as order_scheduling_group_id,\n    key_id as unique_number_budget,\n    otb_value as required_budget_val,\n    otb_curr as otb_currency_id,\n    otb_res_value as reserved_budget_val,\n    otb_spec_value as special_release_budget_val,\n    spr_rsn_profile as otb_reason_profile_special_release,\n    budg_type as budget_type,\n    otb_status as otb_check_status,\n    otb_reason as reason,\n    check_type as type_otb_check,\n    dl_id as dateline_id_guid,\n    \n    case\n        when handover_date::text ~ '^[0-9]{8}$'\n            and substring(handover_date::text, 5, 2)::int between 1 and 12\n            and substring(handover_date::text, 7, 2)::int between 1 and 31\n        then to_date(handover_date::text, 'YYYYMMDD')\n        else null\n    end\n as transfer_date,\n    no_scem as no_scem_controlling,\n    \n    case\n        when dng_date::text ~ '^[0-9]{8}$'\n            and substring(dng_date::text, 5, 2)::int between 1 and 12\n            and substring(dng_date::text, 7, 2)::int between 1 and 31\n        then to_date(dng_date::text, 'YYYYMMDD')\n        else null\n    end\n as rem_date,\n    dng_time as reminder_tim,\n    cncl_ancmnt_done as cancellation_threat_made,\n    dateshift_number as number_current_date_shifts,\n    hvr_is_deleted as hvr_is_deleted,\n    hvr_change_time as hvr_change_time\nfrom \"postgres\".\"public_sap_dev\".\"stg_sap__eket\"\nwhere mandt in ('800')\n)"}, {"id": "model.sap.int_sap__purchasing_document_schedule_total", "sql": " __dbt__cte__int_sap__purchasing_document_schedule_total as (\n\n\nselect\n    purchasing_document_id, \n    purchasing_document_item_id, \n    max(item_delivery_date) as lastest_scheduled_delivery_date,\n    sum(scheduled_quantity) as total_scheduled_delivery_quantity\nfrom __dbt__cte__int_sap__purchasing_document_schedule_line\ngroup by 1,2\n)"}], "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null, "primary_key": [], "time_spine": null}, "model.sap.sap__dim_material": {"database": "postgres", "schema": "public_sap_dev", "name": "sap__dim_material", "resource_type": "model", "package_name": "sap", "path": "sales_and_procurement/star_schema/sap__dim_material.sql", "original_file_path": "models/sales_and_procurement/star_schema/sap__dim_material.sql", "unique_id": "model.sap.sap__dim_material", "fqn": ["sap", "sales_and_procurement", "star_schema", "sap__dim_material"], "alias": "sap__dim_material", "checksum": {"name": "sha256", "checksum": "54bf184d2c8d625b4d0cb5ea44b6ff1b94ff920150d9e5493ba3cd615eb26f79"}, "config": {"enabled": true, "alias": null, "schema": "sap_dev", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "freshness": null}, "tags": [], "description": "Material master dimension table", "columns": {"material_number": {"name": "material_number", "description": "Unique identifier for the material", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "material_description": {"name": "material_description", "description": "Text description of the material", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "material_type_id": {"name": "material_type_id", "description": "Identifier for material type (e.g., finished goods)", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "material_type_description": {"name": "material_type_description", "description": "Description of the material type", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "base_uom_id": {"name": "base_uom_id", "description": "Base unit of measure for the material", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "gross_weight": {"name": "gross_weight", "description": "Gross weight of the material", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "weight_uom_id": {"name": "weight_uom_id", "description": "Unit of measure for weight", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "material_id": {"name": "material_id", "description": "Surrogate key for the material", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": "sap://models/sales_and_procurement/star_schema/sales_and_procurement.yml", "build_path": null, "unrendered_config": {"materialized": "table", "schema": "sap_{{ var('directed_schema','dev') }}", "enabled": true}, "created_at": 1756850330.5848167, "relation_name": "\"postgres\".\"public_sap_dev\".\"sap__dim_material\"", "raw_code": "{% set using_material = var('sap_using_mara', True) %}\n{% set using_material_type = var('sap_using_t134', True) %}\n\n{{ config(enabled=using_material) }}\n\nwith\n\nmaterial as (\n    select *\n    from {{ ref('int_sap__material') }}\n)\n\n{% if using_material_type %}\n, material_type as (\n    select *\n    from {{ ref('int_sap__material_type') }}\n)\n{% endif %}\n\nselect\n    ltrim(material.material_id , '0') as material_number,\n    material.material_description,\n    material.base_uom_id,\n    material.gross_weight,\n    material.weight_uom_id,\n    material.material_id\n\n    {% if using_material_type %}\n    , material_type.material_type_id\n    , material_type.description_material_type as material_type_description\n    {% endif %}\n\nfrom material\n\n{% if using_material_type %}\nleft outer join material_type\n    on material.material_type_id = material_type.material_type_id\n{% endif %}", "doc_blocks": [], "language": "sql", "refs": [{"name": "int_sap__material", "package": null, "version": null}, {"name": "int_sap__material_type", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": [], "nodes": ["model.sap.int_sap__material", "model.sap.int_sap__material_type"]}, "compiled_path": "target/compiled/sap/models/sales_and_procurement/star_schema/sap__dim_material.sql", "compiled": true, "compiled_code": "\n\n\n\n\nwith\n\n __dbt__cte__int_sap__material as (\n\n\nwith mara as (\n    select *\n    from \"postgres\".\"public_sap_dev\".\"stg_sap__mara\"\n\n\n\n), makt as (\n    select *\n    from \"postgres\".\"public_sap_dev\".\"stg_sap__makt\"\n\n\n), final as (\n    select\n        mara.mandt as client_id,\n        mara.matnr as material_id,\n        mara.retdelc as return_code_id,\n        mara._sttpec_syncchg as _sttpec_syncchg,\n        mara.sgt_covsa as segmentation_strategy_id,\n        mara._sttpec_synctime as _sttpec_synctime,\n        mara.size2 as second_size,\n        mara.bwscl as source_supply_id,\n        mara.liqdt as deletion_date,\n        mara.compl as material_completion_level_id,\n        mara.whstc as warehouse_storage_condition_id,\n        mara.maxc_tol as overcapacity_toler,\n        mara.ergew as allowed_packaging_weight,\n        mara._sttpec_prdcat as _sttpec_prdcat,\n        mara.kzwsm as units_measure_usage,\n        mara.cotype as object_type_id,\n        mara.bbtyp as assortment_list_type_id,\n        mara.laeda as last_change_date,\n        mara.ersda as created_date,\n        mara.rdmhd as rounding_rule_sled,\n        mara.picnum as supersession_chain_number,\n        mara.herkl as country_of_origin_id,\n        mara._vso_r_top_ind as _vso_r_top_ind,\n        mara.magrv as matl_grp_pack_matls_id,\n        mara.qgrp as quality_inspection_group_id,\n        mara.fsh_sc_mid as material_conv_id,\n        mara.behvo as container_requirements_id,\n        mara.brgew as gross_weight,\n        mara.mfrpn as manufacturer_part_number,\n        mara.color_atinn as int_char_number_id,\n        mara.kunnr as competitor_id,\n        mara.qmpur as qm_in_procurement_is_active,\n        mara.ipmipproduct as intellectual_property,\n        mara.ferth as production_inspection_memo,\n        mara.voleh as volume_uom_id,\n        mara._vso_r_no_p_gvh as _vso_r_no_p_gvh,\n        mara.mstav as x_distr_chain_status_id,\n        mara.mtpos_mara as item_category_group_id,\n        mara.kzumw as environmentally_relevant,\n        mara.kzgvh as closed,\n        mara.free_char as free_charact_value,\n        mara.fiber_part1 as percentage_share_1,\n        mara.eannr as ean_number,\n        mara.brand_id as brand_id,\n        mara.aeszn as document_change_no,\n        mara.fiber_part2 as percentage_share_2,\n        mara.ihivi as indicator_highly_viscous,\n        mara.hutyp_dflt as standard_hu_type_id,\n        mara.mbrsh as industry_sector_id,\n        mara.textile_comp_ind as textile_composition_maintenance_active,\n        mara.fiber_part3 as percentage_share_3,\n        mara.dg_pack_status as dangerous_goods_packaging_status_id,\n        mara.fiber_part4 as percentage_share_4,\n        mara._vso_r_tilt_ind as _vso_r_tilt_ind,\n        mara.mcond as material_condition_management,\n        mara._vso_r_tol_b_ht as _vso_r_tol_b_ht,\n        mara.fsh_mg_at2 as fashion_information_field_2,\n        mara.fiber_part5 as percentage_share_5,\n        mara.adprof as adjustment_profile_id,\n        mara.mstde as valid_from_date,\n        mara.volto as excess_volume_tol,\n        mara.gtin_variant as global_trade_item_number_variant,\n        mara.saisj as season_year,\n        mara.zeiar as document_type,\n        mara.prdha as product_hierarchy_id,\n        mara.maxh as max_pack_height,\n        mara.inhal as net_contents,\n        mara.bwvor as procurement_rule_id,\n        mara.groes as size_dimensions,\n        mara.bflme as logistical_variants,\n        mara.volum as volume,\n        mara.sgt_stat as segmentation_status,\n        mara.cadkz as cad_indicator,\n        mara.qqtime as quarantine_period,\n        mara._vso_r_pal_ovr_w as _vso_r_pal_ovr_w,\n        mara.fiber_code3 as component_3_id,\n        mara.fiber_code2 as component_2_id,\n        mara.sprof as pricing_profile_variants,\n        mara.fiber_code4 as component_4_id,\n        mara.cwqtolgr as cw_tolerance_group_id,\n        mara.kosch as product_allocation_id,\n        mara.fiber_code5 as component_5_id,\n        mara.xgchp as appr_batch_rec_req,\n        mara.logunit as logistics_uom_id,\n        mara.lvorm as df_at_client_level,\n        mara.hoehe as height,\n        mara.ergei as weight_uom_id,\n        mara.begru as authorization_group,\n        mara.ekwsl as purchasing_value_key_id,\n        mara.gds_relevant as gds_relevant,\n        mara.taklv as tax_classification_id,\n        mara.datab as datab,\n        mara.xchpf as batch_management,\n        mara.care_code as care_code,\n        mara.mhdrz as minimum_remaining_shelf_life,\n        mara.oitrind as transfer_sign,\n        mara.oihmtxgr as material_tax_group_id,\n        mara.saity as rollout_in_season_id,\n        mara.iprkz as period_ind_sled,\n        mara._sttpec_country_ref as _sttpec_country_ref,\n        mara.normt as industry_std_desc,\n        mara.serlv as serialization_level,\n        mara.kzkup as co_product,\n        mara.mstdv as mstdv,\n        mara.attyp as material_category,\n        mara._dsd_sv_cnt_grp as _dsd_sv_cnt_grp,\n        mara.stfak as stacking_factor,\n        mara.tare_var as variable_tare_weight,\n        mara.mfrnr as manufacturer_number_id,\n        mara.allow_pmat_igno as variant_price_allowed,\n        mara.imatn as fff_class,\n        mara.profl as dg_indicator_profile_id,\n        mara.tragr as transportation_group_id,\n        mara.hutyp as handling_unit_type_id,\n        mara.meins as base_uom_id,\n        mara.bstme as order_uom_id,\n        mara._vso_r_stack_no as _vso_r_stack_no,\n        mara.cwqproc as cw_profile_cw_qty_id,\n        mara.psm_code as protected_species_management_code_id,\n        mara.blatt as page_number,\n        mara._vso_r_pal_b_ht as _vso_r_pal_b_ht,\n        mara._bev1_luldegrp as _bev1_luldegrp,\n        mara._bev1_luleinh as _bev1_luleinh,\n        mara.size1 as main_size,\n        mara.maxc as maximum_capacity,\n        mara.ntgew as net_weight,\n        mara.saiso as season_category_id,\n        mara.commodity as physical_commodity_id,\n        mara.przus as product_composition,\n        mara.cobjid as object_id,\n        mara._vso_r_kzgvh_ind as _vso_r_kzgvh_ind,\n        mara.anp as anp_code_id,\n        mara.mprof as mfr_part_profile_id,\n        mara.fsh_mg_at3 as fashion_information_field_3,\n        mara.spart as division_id,\n        mara.fsh_seaim as season_active_in_inventory_management,\n        mara.formt as page_format_production_memo,\n        mara.whmatgr as warehouse_material_group_id,\n        mara.sled_bbd as expiration_date,\n        mara.gennr as generic_material_id,\n        mara.maxl as max_pack_length,\n        mara.matkl as material_group_id,\n        mara.nrfhg as qual_f_freegoodsdis,\n        mara.serial as serial_number_profile_id,\n        mara.matfi as material_is_locked,\n        mara.qqtimeuom as time_quarantine_period_uom_id,\n        mara.vpreh as comparison_price_unit,\n        mara.zeivr as doc_version,\n        mara.bmatn as int_material_number_id,\n        mara.size1_atinn as size1_atinn,\n        mara.loglev_reto as return_to_logistics_level_id,\n        mara.fuelg as maximum_level_by_volume,\n        mara.pilferable as pilferable,\n        mara.kzrev as revision_level_assgd,\n        mara._sttpec_sertype as _sttpec_sertype,\n        mara._vso_r_pal_ind as _vso_r_pal_ind,\n        mara.sgt_scope as segmentation_strategy_scope,\n        mara.maxdim_uom as ment_uom_id,\n        mara.nsnid as nato_item_identification_number,\n        mara.etiar as label_type_id,\n        mara.fsh_mg_at1 as fashion_information_field_1,\n        mara.ervol as allowed_packaging_volume,\n        mara.satnr as cross_plant_cm_id,\n        mara.sgt_csgr as segmentation_structure_id,\n        mara.blanz as number_sheets,\n        mara.mtart as material_type_id,\n        mara.etiag as labeling_matl_grpg_id,\n        mara.fiber_code1 as component_1_id,\n        mara.mfrgr as material_freight_group_id,\n        mara._vso_r_stack_ind as _vso_r_stack_ind,\n        mara.zeinr as document,\n        mara.medium as medium_id,\n        mara.cwqrel as catch_weight_relevant,\n        mara.mhdhb as total_shelf_life,\n        mara.vpsta as compl_maint_status,\n        mara.wrkst as basic_material_id,\n        mara.aeklk as net_change_costing,\n        mara.stoff as hazardous_material_number_id,\n        mara.packcode as packaging_code_id,\n        mara.sgt_rel as segmentation_relevant,\n        mara._vso_r_bot_ind as _vso_r_bot_ind,\n        mara.breit as width,\n        mara.adspc_spc as spare_part_class_code,\n        mara.size2_atinn as size2_atinn,\n        mara.weora as acceptance_at_origin,\n        mara.inhbr as gross_contents,\n        mara.fsh_sealv as indicator_use_season,\n        mara.kzeff as assign_effect_vals,\n        mara.plgtp as price_band_category_id,\n        mara.pmata as pricing_reference_material_id,\n        mara.rbnrm as catalog_profile_id,\n        mara.meabm as dimension_uom_id,\n        mara.cuobf as internal_object_number,\n        mara._bev1_nestruccat as _bev1_nestruccat,\n        mara.inhme as content_uom_id,\n        mara.kznfm as follow_up_material,\n        mara.hazmat as rel_hs,\n        mara.mlgut as empties_bill_material,\n        mara.wesch as number_gr_slips,\n        mara._vso_r_pal_min_h as _vso_r_pal_min_h,\n        mara.oigroupnam as td_product_group_id,\n        mara.maxb as max_pack_width,\n        mara.bismt as old_material_number,\n        mara.disst as low_level_code,\n        mara._sttpec_syncact as _sttpec_syncact,\n        mara.bstat as creation_status_id,\n        mara.animal_origin as cont_non_textile_parts_animal_origin,\n        mara.etifo as label_form_id,\n        mara.kzkfg as configurable_material,\n        mara._dsd_sl_toltyp as _dsd_sl_toltyp,\n        mara.fashgrd as fashion_grade_id,\n        mara.cmeth as quantity_conversion_method,\n        mara.rmatp as reference_matl_packing_id,\n        mara.vhart as packaging_material_type_id,\n        mara.mhdlp as storage_percentage,\n        mara.ervoe as ervoe,\n        mara.tempb as temperature_conditions_indicator_id,\n        mara.ean11 as ean,\n        mara._accgo_assgd_uom as _accgo_assgd_uom,\n        mara._vso_r_quan_unit as _vso_r_quan_unit,\n        mara.ernam as created_by,\n        mara.gewto as excess_wt_tolerance,\n        mara.numtp as ean_category_id,\n        mara.labor as laboratory_design_office_id,\n        mara.iloos as indicator_in_bulk_liquid,\n        mara.cmrel as relevant_cm,\n        mara._dsd_vc_group as _dsd_vc_group,\n        mara.raube as storage_conditions_id,\n        mara.extwg as external_material_group_id,\n        mara.vabme as variable_purchase_order_unit,\n        mara.laeng as length,\n        mara.hndlcode as handling_indicator_id,\n        mara._vso_r_pal_ovr_d as _vso_r_pal_ovr_d,\n        mara.ps_smartform as form_name_id,\n        mara.entar as deactivated_id,\n        mara.pstat as maintenance_status,\n        mara.color as color,\n        mara.gewei as gewei,\n        mara.aenam as changed_by,\n        mara.mstae as cross_plant_material_status_id,\n        mara.zeifo as page_format,\n        mara._fivetran_deleted as _fivetran_deleted,\n        mara._fivetran_synced as _fivetran_synced,\n        mara._fivetran_sap_archived as _fivetran_sap_archived,\n        makt.maktx as material_description\n    from mara\n\n    \n    left join makt\n        on mara.mandt = makt.mandt\n        and mara.matnr = makt.matnr\n        and makt.spras = 'e'\n    \n\n    where mara.mandt in ('800')\n)\n\nselect *\nfrom final\n),  __dbt__cte__int_sap__material_type as (\n\n\nwith t134 as (\n    select *\n    from \"postgres\".\"public_sap_dev\".\"stg_sap__t134\"\n\n\n\n), t134t as (\n    select *\n    from \"postgres\".\"public_sap_dev\".\"stg_sap__t134t\"\n\n\n), final as (\n    select\n        t134.mandt as client_id,\n        t134.mtart as material_type_id,\n        t134.mtref as reference_material_type,\n        t134.mbref as sref_material_type,\n        t134.flref as field_reference_id,\n        t134.numki as number_range,\n        t134.numke as numke,\n        t134.envop as external_no_assignment_w_o_check,\n        t134.bsext as external_purchase_orders_allowed,\n        t134.bsint as internal_purchase_orders_allowed,\n        t134.pstat as maintenance_status,\n        t134.kkref as account_category_reference_id,\n        t134.vprsv as price_control,\n        t134.kzvpr as price_control_mandatory,\n        t134.vmtpo as item_category_group_id,\n        t134.ekalr as with_qty_structure,\n        t134.kzgrp as grouping_indicator,\n        t134.kzkfg as configurable_material,\n        t134.begru as authorization_group_id,\n        t134.kzprc as material_f_process,\n        t134.kzpip as pipeline_handling_mandatory,\n        t134.prdru as print_price,\n        t134.aranz as display_material,\n        t134.wmakg as wmakg,\n        t134.izust as initial_status_new_batch,\n        t134.ardel as time_till_deleted,\n        t134.kzmpn as manufacturer_part,\n        t134.mstae as cross_plant_material_status_id,\n        t134.cchis as history_reqmt,\n        t134.ctype as class_type_id,\n        t134.class as class_number,\n        t134.chneu as create_new_batch,\n        t134.vtype as version_category_id,\n        t134.vnumki as vnumki,\n        t134.vnumke as vnumke,\n        t134.kzrac as mand_rp_logistics,\n        t134.hvr_is_deleted as hvr_is_deleted,\n        t134.hvr_change_time as hvr_change_time,\n        t134t.mtbez  as description_material_type\n\n    from t134\n\n    \n    left join t134t\n        on t134.mandt = t134t.mandt\n        and t134.mtart = t134t.mtart\n        and t134t.spras = 'e'\n    \n\n    where t134.mandt in ('800')\n)\n\nselect *\nfrom final\n), material as (\n    select *\n    from __dbt__cte__int_sap__material\n)\n\n\n, material_type as (\n    select *\n    from __dbt__cte__int_sap__material_type\n)\n\n\nselect\n    ltrim(material.material_id , '0') as material_number,\n    material.material_description,\n    material.base_uom_id,\n    material.gross_weight,\n    material.weight_uom_id,\n    material.material_id\n\n    \n    , material_type.material_type_id\n    , material_type.description_material_type as material_type_description\n    \n\nfrom material\n\n\nleft outer join material_type\n    on material.material_type_id = material_type.material_type_id\n", "extra_ctes_injected": true, "extra_ctes": [{"id": "model.sap.int_sap__material", "sql": " __dbt__cte__int_sap__material as (\n\n\nwith mara as (\n    select *\n    from \"postgres\".\"public_sap_dev\".\"stg_sap__mara\"\n\n\n\n), makt as (\n    select *\n    from \"postgres\".\"public_sap_dev\".\"stg_sap__makt\"\n\n\n), final as (\n    select\n        mara.mandt as client_id,\n        mara.matnr as material_id,\n        mara.retdelc as return_code_id,\n        mara._sttpec_syncchg as _sttpec_syncchg,\n        mara.sgt_covsa as segmentation_strategy_id,\n        mara._sttpec_synctime as _sttpec_synctime,\n        mara.size2 as second_size,\n        mara.bwscl as source_supply_id,\n        mara.liqdt as deletion_date,\n        mara.compl as material_completion_level_id,\n        mara.whstc as warehouse_storage_condition_id,\n        mara.maxc_tol as overcapacity_toler,\n        mara.ergew as allowed_packaging_weight,\n        mara._sttpec_prdcat as _sttpec_prdcat,\n        mara.kzwsm as units_measure_usage,\n        mara.cotype as object_type_id,\n        mara.bbtyp as assortment_list_type_id,\n        mara.laeda as last_change_date,\n        mara.ersda as created_date,\n        mara.rdmhd as rounding_rule_sled,\n        mara.picnum as supersession_chain_number,\n        mara.herkl as country_of_origin_id,\n        mara._vso_r_top_ind as _vso_r_top_ind,\n        mara.magrv as matl_grp_pack_matls_id,\n        mara.qgrp as quality_inspection_group_id,\n        mara.fsh_sc_mid as material_conv_id,\n        mara.behvo as container_requirements_id,\n        mara.brgew as gross_weight,\n        mara.mfrpn as manufacturer_part_number,\n        mara.color_atinn as int_char_number_id,\n        mara.kunnr as competitor_id,\n        mara.qmpur as qm_in_procurement_is_active,\n        mara.ipmipproduct as intellectual_property,\n        mara.ferth as production_inspection_memo,\n        mara.voleh as volume_uom_id,\n        mara._vso_r_no_p_gvh as _vso_r_no_p_gvh,\n        mara.mstav as x_distr_chain_status_id,\n        mara.mtpos_mara as item_category_group_id,\n        mara.kzumw as environmentally_relevant,\n        mara.kzgvh as closed,\n        mara.free_char as free_charact_value,\n        mara.fiber_part1 as percentage_share_1,\n        mara.eannr as ean_number,\n        mara.brand_id as brand_id,\n        mara.aeszn as document_change_no,\n        mara.fiber_part2 as percentage_share_2,\n        mara.ihivi as indicator_highly_viscous,\n        mara.hutyp_dflt as standard_hu_type_id,\n        mara.mbrsh as industry_sector_id,\n        mara.textile_comp_ind as textile_composition_maintenance_active,\n        mara.fiber_part3 as percentage_share_3,\n        mara.dg_pack_status as dangerous_goods_packaging_status_id,\n        mara.fiber_part4 as percentage_share_4,\n        mara._vso_r_tilt_ind as _vso_r_tilt_ind,\n        mara.mcond as material_condition_management,\n        mara._vso_r_tol_b_ht as _vso_r_tol_b_ht,\n        mara.fsh_mg_at2 as fashion_information_field_2,\n        mara.fiber_part5 as percentage_share_5,\n        mara.adprof as adjustment_profile_id,\n        mara.mstde as valid_from_date,\n        mara.volto as excess_volume_tol,\n        mara.gtin_variant as global_trade_item_number_variant,\n        mara.saisj as season_year,\n        mara.zeiar as document_type,\n        mara.prdha as product_hierarchy_id,\n        mara.maxh as max_pack_height,\n        mara.inhal as net_contents,\n        mara.bwvor as procurement_rule_id,\n        mara.groes as size_dimensions,\n        mara.bflme as logistical_variants,\n        mara.volum as volume,\n        mara.sgt_stat as segmentation_status,\n        mara.cadkz as cad_indicator,\n        mara.qqtime as quarantine_period,\n        mara._vso_r_pal_ovr_w as _vso_r_pal_ovr_w,\n        mara.fiber_code3 as component_3_id,\n        mara.fiber_code2 as component_2_id,\n        mara.sprof as pricing_profile_variants,\n        mara.fiber_code4 as component_4_id,\n        mara.cwqtolgr as cw_tolerance_group_id,\n        mara.kosch as product_allocation_id,\n        mara.fiber_code5 as component_5_id,\n        mara.xgchp as appr_batch_rec_req,\n        mara.logunit as logistics_uom_id,\n        mara.lvorm as df_at_client_level,\n        mara.hoehe as height,\n        mara.ergei as weight_uom_id,\n        mara.begru as authorization_group,\n        mara.ekwsl as purchasing_value_key_id,\n        mara.gds_relevant as gds_relevant,\n        mara.taklv as tax_classification_id,\n        mara.datab as datab,\n        mara.xchpf as batch_management,\n        mara.care_code as care_code,\n        mara.mhdrz as minimum_remaining_shelf_life,\n        mara.oitrind as transfer_sign,\n        mara.oihmtxgr as material_tax_group_id,\n        mara.saity as rollout_in_season_id,\n        mara.iprkz as period_ind_sled,\n        mara._sttpec_country_ref as _sttpec_country_ref,\n        mara.normt as industry_std_desc,\n        mara.serlv as serialization_level,\n        mara.kzkup as co_product,\n        mara.mstdv as mstdv,\n        mara.attyp as material_category,\n        mara._dsd_sv_cnt_grp as _dsd_sv_cnt_grp,\n        mara.stfak as stacking_factor,\n        mara.tare_var as variable_tare_weight,\n        mara.mfrnr as manufacturer_number_id,\n        mara.allow_pmat_igno as variant_price_allowed,\n        mara.imatn as fff_class,\n        mara.profl as dg_indicator_profile_id,\n        mara.tragr as transportation_group_id,\n        mara.hutyp as handling_unit_type_id,\n        mara.meins as base_uom_id,\n        mara.bstme as order_uom_id,\n        mara._vso_r_stack_no as _vso_r_stack_no,\n        mara.cwqproc as cw_profile_cw_qty_id,\n        mara.psm_code as protected_species_management_code_id,\n        mara.blatt as page_number,\n        mara._vso_r_pal_b_ht as _vso_r_pal_b_ht,\n        mara._bev1_luldegrp as _bev1_luldegrp,\n        mara._bev1_luleinh as _bev1_luleinh,\n        mara.size1 as main_size,\n        mara.maxc as maximum_capacity,\n        mara.ntgew as net_weight,\n        mara.saiso as season_category_id,\n        mara.commodity as physical_commodity_id,\n        mara.przus as product_composition,\n        mara.cobjid as object_id,\n        mara._vso_r_kzgvh_ind as _vso_r_kzgvh_ind,\n        mara.anp as anp_code_id,\n        mara.mprof as mfr_part_profile_id,\n        mara.fsh_mg_at3 as fashion_information_field_3,\n        mara.spart as division_id,\n        mara.fsh_seaim as season_active_in_inventory_management,\n        mara.formt as page_format_production_memo,\n        mara.whmatgr as warehouse_material_group_id,\n        mara.sled_bbd as expiration_date,\n        mara.gennr as generic_material_id,\n        mara.maxl as max_pack_length,\n        mara.matkl as material_group_id,\n        mara.nrfhg as qual_f_freegoodsdis,\n        mara.serial as serial_number_profile_id,\n        mara.matfi as material_is_locked,\n        mara.qqtimeuom as time_quarantine_period_uom_id,\n        mara.vpreh as comparison_price_unit,\n        mara.zeivr as doc_version,\n        mara.bmatn as int_material_number_id,\n        mara.size1_atinn as size1_atinn,\n        mara.loglev_reto as return_to_logistics_level_id,\n        mara.fuelg as maximum_level_by_volume,\n        mara.pilferable as pilferable,\n        mara.kzrev as revision_level_assgd,\n        mara._sttpec_sertype as _sttpec_sertype,\n        mara._vso_r_pal_ind as _vso_r_pal_ind,\n        mara.sgt_scope as segmentation_strategy_scope,\n        mara.maxdim_uom as ment_uom_id,\n        mara.nsnid as nato_item_identification_number,\n        mara.etiar as label_type_id,\n        mara.fsh_mg_at1 as fashion_information_field_1,\n        mara.ervol as allowed_packaging_volume,\n        mara.satnr as cross_plant_cm_id,\n        mara.sgt_csgr as segmentation_structure_id,\n        mara.blanz as number_sheets,\n        mara.mtart as material_type_id,\n        mara.etiag as labeling_matl_grpg_id,\n        mara.fiber_code1 as component_1_id,\n        mara.mfrgr as material_freight_group_id,\n        mara._vso_r_stack_ind as _vso_r_stack_ind,\n        mara.zeinr as document,\n        mara.medium as medium_id,\n        mara.cwqrel as catch_weight_relevant,\n        mara.mhdhb as total_shelf_life,\n        mara.vpsta as compl_maint_status,\n        mara.wrkst as basic_material_id,\n        mara.aeklk as net_change_costing,\n        mara.stoff as hazardous_material_number_id,\n        mara.packcode as packaging_code_id,\n        mara.sgt_rel as segmentation_relevant,\n        mara._vso_r_bot_ind as _vso_r_bot_ind,\n        mara.breit as width,\n        mara.adspc_spc as spare_part_class_code,\n        mara.size2_atinn as size2_atinn,\n        mara.weora as acceptance_at_origin,\n        mara.inhbr as gross_contents,\n        mara.fsh_sealv as indicator_use_season,\n        mara.kzeff as assign_effect_vals,\n        mara.plgtp as price_band_category_id,\n        mara.pmata as pricing_reference_material_id,\n        mara.rbnrm as catalog_profile_id,\n        mara.meabm as dimension_uom_id,\n        mara.cuobf as internal_object_number,\n        mara._bev1_nestruccat as _bev1_nestruccat,\n        mara.inhme as content_uom_id,\n        mara.kznfm as follow_up_material,\n        mara.hazmat as rel_hs,\n        mara.mlgut as empties_bill_material,\n        mara.wesch as number_gr_slips,\n        mara._vso_r_pal_min_h as _vso_r_pal_min_h,\n        mara.oigroupnam as td_product_group_id,\n        mara.maxb as max_pack_width,\n        mara.bismt as old_material_number,\n        mara.disst as low_level_code,\n        mara._sttpec_syncact as _sttpec_syncact,\n        mara.bstat as creation_status_id,\n        mara.animal_origin as cont_non_textile_parts_animal_origin,\n        mara.etifo as label_form_id,\n        mara.kzkfg as configurable_material,\n        mara._dsd_sl_toltyp as _dsd_sl_toltyp,\n        mara.fashgrd as fashion_grade_id,\n        mara.cmeth as quantity_conversion_method,\n        mara.rmatp as reference_matl_packing_id,\n        mara.vhart as packaging_material_type_id,\n        mara.mhdlp as storage_percentage,\n        mara.ervoe as ervoe,\n        mara.tempb as temperature_conditions_indicator_id,\n        mara.ean11 as ean,\n        mara._accgo_assgd_uom as _accgo_assgd_uom,\n        mara._vso_r_quan_unit as _vso_r_quan_unit,\n        mara.ernam as created_by,\n        mara.gewto as excess_wt_tolerance,\n        mara.numtp as ean_category_id,\n        mara.labor as laboratory_design_office_id,\n        mara.iloos as indicator_in_bulk_liquid,\n        mara.cmrel as relevant_cm,\n        mara._dsd_vc_group as _dsd_vc_group,\n        mara.raube as storage_conditions_id,\n        mara.extwg as external_material_group_id,\n        mara.vabme as variable_purchase_order_unit,\n        mara.laeng as length,\n        mara.hndlcode as handling_indicator_id,\n        mara._vso_r_pal_ovr_d as _vso_r_pal_ovr_d,\n        mara.ps_smartform as form_name_id,\n        mara.entar as deactivated_id,\n        mara.pstat as maintenance_status,\n        mara.color as color,\n        mara.gewei as gewei,\n        mara.aenam as changed_by,\n        mara.mstae as cross_plant_material_status_id,\n        mara.zeifo as page_format,\n        mara._fivetran_deleted as _fivetran_deleted,\n        mara._fivetran_synced as _fivetran_synced,\n        mara._fivetran_sap_archived as _fivetran_sap_archived,\n        makt.maktx as material_description\n    from mara\n\n    \n    left join makt\n        on mara.mandt = makt.mandt\n        and mara.matnr = makt.matnr\n        and makt.spras = 'e'\n    \n\n    where mara.mandt in ('800')\n)\n\nselect *\nfrom final\n)"}, {"id": "model.sap.int_sap__material_type", "sql": " __dbt__cte__int_sap__material_type as (\n\n\nwith t134 as (\n    select *\n    from \"postgres\".\"public_sap_dev\".\"stg_sap__t134\"\n\n\n\n), t134t as (\n    select *\n    from \"postgres\".\"public_sap_dev\".\"stg_sap__t134t\"\n\n\n), final as (\n    select\n        t134.mandt as client_id,\n        t134.mtart as material_type_id,\n        t134.mtref as reference_material_type,\n        t134.mbref as sref_material_type,\n        t134.flref as field_reference_id,\n        t134.numki as number_range,\n        t134.numke as numke,\n        t134.envop as external_no_assignment_w_o_check,\n        t134.bsext as external_purchase_orders_allowed,\n        t134.bsint as internal_purchase_orders_allowed,\n        t134.pstat as maintenance_status,\n        t134.kkref as account_category_reference_id,\n        t134.vprsv as price_control,\n        t134.kzvpr as price_control_mandatory,\n        t134.vmtpo as item_category_group_id,\n        t134.ekalr as with_qty_structure,\n        t134.kzgrp as grouping_indicator,\n        t134.kzkfg as configurable_material,\n        t134.begru as authorization_group_id,\n        t134.kzprc as material_f_process,\n        t134.kzpip as pipeline_handling_mandatory,\n        t134.prdru as print_price,\n        t134.aranz as display_material,\n        t134.wmakg as wmakg,\n        t134.izust as initial_status_new_batch,\n        t134.ardel as time_till_deleted,\n        t134.kzmpn as manufacturer_part,\n        t134.mstae as cross_plant_material_status_id,\n        t134.cchis as history_reqmt,\n        t134.ctype as class_type_id,\n        t134.class as class_number,\n        t134.chneu as create_new_batch,\n        t134.vtype as version_category_id,\n        t134.vnumki as vnumki,\n        t134.vnumke as vnumke,\n        t134.kzrac as mand_rp_logistics,\n        t134.hvr_is_deleted as hvr_is_deleted,\n        t134.hvr_change_time as hvr_change_time,\n        t134t.mtbez  as description_material_type\n\n    from t134\n\n    \n    left join t134t\n        on t134.mandt = t134t.mandt\n        and t134.mtart = t134t.mtart\n        and t134t.spras = 'e'\n    \n\n    where t134.mandt in ('800')\n)\n\nselect *\nfrom final\n)"}], "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null, "primary_key": [], "time_spine": null}, "model.sap.sap__dim_vendor": {"database": "postgres", "schema": "public_sap_dev", "name": "sap__dim_vendor", "resource_type": "model", "package_name": "sap", "path": "sales_and_procurement/star_schema/sap__dim_vendor.sql", "original_file_path": "models/sales_and_procurement/star_schema/sap__dim_vendor.sql", "unique_id": "model.sap.sap__dim_vendor", "fqn": ["sap", "sales_and_procurement", "star_schema", "sap__dim_vendor"], "alias": "sap__dim_vendor", "checksum": {"name": "sha256", "checksum": "d1495ab777a4aa0cc1f8bf807ca1f40563be98f0415833dd3399874257883ff1"}, "config": {"enabled": true, "alias": null, "schema": "sap_dev", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "freshness": null}, "tags": [], "description": "Vendor dimension table.", "columns": {"vendor_id": {"name": "vendor_id", "description": "ID of the vendor", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "country_key_id": {"name": "country_key_id", "description": "Country key of the vendor", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "name": {"name": "name", "description": "Vendor name (line 1)", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "name_2": {"name": "name_2", "description": "Vendor name (line 2)", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "city": {"name": "city", "description": "Vendor city", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "sort_field": {"name": "sort_field", "description": "Sort field for vendor", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "authorization_group_id": {"name": "authorization_group_id", "description": "Authorization group ID", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "industry_key_id": {"name": "industry_key_id", "description": "Industry classification key", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "group_key": {"name": "group_key", "description": "Grouping key for vendors", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "vendor_account_group_id": {"name": "vendor_account_group_id", "description": "Account group ID for the vendor", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": "sap://models/sales_and_procurement/star_schema/sales_and_procurement.yml", "build_path": null, "unrendered_config": {"materialized": "table", "schema": "sap_{{ var('directed_schema','dev') }}", "enabled": true}, "created_at": 1756850330.5974886, "relation_name": "\"postgres\".\"public_sap_dev\".\"sap__dim_vendor\"", "raw_code": "{{ config(enabled=var('sap_using_lfa1', true)) }}\n\nselect \n    vendor_id,\n    country_key_id,\n    name,\n    name_2,\n    city,\n    sort_field,\n    authorization_group_id,\n    industry_key_id,\n    group_key,\n    vendor_account_group_id\nfrom {{ ref('int_sap__vendor') }}", "doc_blocks": [], "language": "sql", "refs": [{"name": "int_sap__vendor", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": [], "nodes": ["model.sap.int_sap__vendor"]}, "compiled_path": "target/compiled/sap/models/sales_and_procurement/star_schema/sap__dim_vendor.sql", "compiled": true, "compiled_code": "\n\nwith __dbt__cte__int_sap__vendor as (\n\n\nselect\n    mandt as client_id,\n    lifnr as vendor_id,\n    land1 as country_key_id,\n    name1 as name,\n    name2 as name_2,\n    name3 as name_3,\n    name4 as name_4,\n    ort01 as city,\n    ort02 as district,\n    pfach as po_box,\n    pstl2 as p_o_box_postal_code,\n    pstlz as postal_code,\n    regio as region_id,\n    sortl as sort_field,\n    stras as street_and_house_number,\n    adrnr as address_id,\n    mcod1 as search_term_matchcode_search,\n    mcod2 as mcod2,\n    mcod3 as mcod3,\n    anred as title,\n    bahns as train_station,\n    bbbnr as int_location_no_1,\n    bbsnr as int_location_no_2,\n    begru as authorization_group_id,\n    brsch as industry_key_id,\n    bubkz as check_digit,\n    datlt as communication_line_no,\n    dtams as dme_indicator,\n    dtaws as instruction_key_id,\n    \n    case\n        when erdat::text ~ '^[0-9]{8}$'\n            and substring(erdat::text, 5, 2)::int between 1 and 12\n            and substring(erdat::text, 7, 2)::int between 1 and 31\n        then to_date(erdat::text, 'YYYYMMDD')\n        else null\n    end\n as created_on_date,\n    ernam as created_by,\n    esrnr as por_subscriber_number,\n    konzs as group_key,\n    ktokk as vendor_account_group_id,\n    kunnr as customer_id,\n    lnrza as alternative_payee_id,\n    loevm as central_deletion_flag,\n    sperr as central_posting_block,\n    sperm as central_purchasing_block,\n    spras as language_key_id,\n    stcd1 as tax_number_1,\n    stcd2 as tax_number_2,\n    stkza as sales_equalizatn_tax,\n    stkzu as liable_vat,\n    telbx as telebox_number,\n    telf1 as telephone_1,\n    telf2 as second_telephone_number,\n    telfx as fax_number,\n    teltx as teletex_number,\n    telx1 as telex_number,\n    xcpdk as one_time_account,\n    xzemp as payee_in_document,\n    vbund as trading_partner_id,\n    fiskn as fiscal_address_id,\n    stceg as vat_registration_no,\n    stkzn as natural_person,\n    sperq as function_that_will_be_blocked_id,\n    gbort as place_birth,\n    \n    case\n        when gbdat::text ~ '^[0-9]{8}$'\n            and substring(gbdat::text, 5, 2)::int between 1 and 12\n            and substring(gbdat::text, 7, 2)::int between 1 and 31\n        then to_date(gbdat::text, 'YYYYMMDD')\n        else null\n    end\n as birth_date,\n    sexkz as sex,\n    kraus as credit_information_number,\n    \n    case\n        when revdb::text ~ '^[0-9]{8}$'\n            and substring(revdb::text, 5, 2)::int between 1 and 12\n            and substring(revdb::text, 7, 2)::int between 1 and 31\n        then to_date(revdb::text, 'YYYYMMDD')\n        else null\n    end\n as last_review_external_date,\n    qssys as vendors_qm_system_id,\n    ktock as reference_acct_group_id,\n    pfort as po_box_city,\n    werks as plant_own_or_external_id,\n    ltsna as vendor_sub_range_relevant,\n    werkr as indicator_plant_level_relevant,\n    plkal as factory_calendar_id,\n    duefl as status_transfer_to_next_release,\n    txjcd as tax_jurisdiction_id,\n    sperz as payment_block,\n    scacd as standard_carrier_access_code,\n    sfrgr as forwarding_agent_freight_group_id,\n    lzone as transportation_zone_id,\n    xlfza as accts_alt_payee,\n    dlgrp as service_agent_procedure_group_id,\n    fityp as tax_type_id,\n    stcdt as tax_number_type_id,\n    regss as registered_social_insurance,\n    actss as social_ins_code_id,\n    stcd3 as tax_number_3,\n    stcd4 as tax_number_4,\n    stcd5 as tax_number_5,\n    ipisp as tax_split,\n    taxbs as tax_base_in_percentage,\n    profs as profession,\n    stgdl as stat_grp_service_agent_id,\n    emnfr as ext_manufacturer,\n    lfurl as uniform_resource_locator,\n    j_1kfrepre as name_representative,\n    j_1kftbus as type_business_id,\n    j_1kftind as type_industry_id,\n    confs as confirmation_status,\n    \n    case\n        when updat::text ~ '^[0-9]{8}$'\n            and substring(updat::text, 5, 2)::int between 1 and 12\n            and substring(updat::text, 7, 2)::int between 1 and 31\n        then to_date(updat::text, 'YYYYMMDD')\n        else null\n    end\n as confirmation_date,\n    uptim as last_change_confirmation_tim,\n    nodel as central_del_block,\n    \n    case\n        when qssysdat::text ~ '^[0-9]{8}$'\n            and substring(qssysdat::text, 5, 2)::int between 1 and 12\n            and substring(qssysdat::text, 7, 2)::int between 1 and 31\n        then to_date(qssysdat::text, 'YYYYMMDD')\n        else null\n    end\n as validity_certification_date,\n    podkzb as relevant_pod,\n    fisku as tax_office_responsible_id,\n    stenr as tax_number_at_responsible_tax_authority,\n    carrier_conf as carrier_confirmation_is_expected,\n    min_comp as micro_company_indicator,\n    term_li as terms_liability,\n    crc_num as crc_number,\n    cvp_xblck as business_purpose_completed_flag,\n    rg as rg_number,\n    exp as issued_by,\n    uf as state,\n    \n    case\n        when rgdate::text ~ '^[0-9]{8}$'\n            and substring(rgdate::text, 5, 2)::int between 1 and 12\n            and substring(rgdate::text, 7, 2)::int between 1 and 31\n        then to_date(rgdate::text, 'YYYYMMDD')\n        else null\n    end\n as rg_issuing_date,\n    ric as ric_number,\n    rne as foreign_national_registration,\n    \n    case\n        when rnedate::text ~ '^[0-9]{8}$'\n            and substring(rnedate::text, 5, 2)::int between 1 and 12\n            and substring(rnedate::text, 7, 2)::int between 1 and 31\n        then to_date(rnedate::text, 'YYYYMMDD')\n        else null\n    end\n as rne_issuing_date,\n    cnae as cnae_id,\n    legalnat as legal_nature_id,\n    crtn as crt_number,\n    icmstaxpay as icms_taxpayer_id,\n    indtyp as industry_main_type_id,\n    tdt as tax_declaration_type_id,\n    comsize as company_size_id,\n    decregpc as declaration_regimen_pis_cofins_id,\n    j_sc_capital as capital_amount_val,\n    j_sc_currency as currency_id,\n    alc as agency_location_code_id,\n    pmt_office as payment_office_id,\n    ppa_relevant as vendor_is_ppa_relevant,\n    psofg as processor_group_id,\n    psois as slaprepr_proced,\n    pson1 as pson1,\n    pson2 as pson2,\n    pson3 as pson3,\n    psovn as first_name,\n    psotl as psotl,\n    psohs as house_number,\n    psost as street,\n    transport_chain as transportation_chain_id,\n    staging_time as staging_time_in_days,\n    scheduling_type as scheduling_procedure,\n    submi_relevant as cd_relevant_collective_numbering,\n    _fivetran_deleted as _fivetran_deleted,\n    _fivetran_synced as _fivetran_synced,\n    _fivetran_rowid as _fivetran_rowid\nfrom \"postgres\".\"public_sap_dev\".\"stg_sap__lfa1\"\nwhere mandt in ('800')\n) select \n    vendor_id,\n    country_key_id,\n    name,\n    name_2,\n    city,\n    sort_field,\n    authorization_group_id,\n    industry_key_id,\n    group_key,\n    vendor_account_group_id\nfrom __dbt__cte__int_sap__vendor", "extra_ctes_injected": true, "extra_ctes": [{"id": "model.sap.int_sap__vendor", "sql": " __dbt__cte__int_sap__vendor as (\n\n\nselect\n    mandt as client_id,\n    lifnr as vendor_id,\n    land1 as country_key_id,\n    name1 as name,\n    name2 as name_2,\n    name3 as name_3,\n    name4 as name_4,\n    ort01 as city,\n    ort02 as district,\n    pfach as po_box,\n    pstl2 as p_o_box_postal_code,\n    pstlz as postal_code,\n    regio as region_id,\n    sortl as sort_field,\n    stras as street_and_house_number,\n    adrnr as address_id,\n    mcod1 as search_term_matchcode_search,\n    mcod2 as mcod2,\n    mcod3 as mcod3,\n    anred as title,\n    bahns as train_station,\n    bbbnr as int_location_no_1,\n    bbsnr as int_location_no_2,\n    begru as authorization_group_id,\n    brsch as industry_key_id,\n    bubkz as check_digit,\n    datlt as communication_line_no,\n    dtams as dme_indicator,\n    dtaws as instruction_key_id,\n    \n    case\n        when erdat::text ~ '^[0-9]{8}$'\n            and substring(erdat::text, 5, 2)::int between 1 and 12\n            and substring(erdat::text, 7, 2)::int between 1 and 31\n        then to_date(erdat::text, 'YYYYMMDD')\n        else null\n    end\n as created_on_date,\n    ernam as created_by,\n    esrnr as por_subscriber_number,\n    konzs as group_key,\n    ktokk as vendor_account_group_id,\n    kunnr as customer_id,\n    lnrza as alternative_payee_id,\n    loevm as central_deletion_flag,\n    sperr as central_posting_block,\n    sperm as central_purchasing_block,\n    spras as language_key_id,\n    stcd1 as tax_number_1,\n    stcd2 as tax_number_2,\n    stkza as sales_equalizatn_tax,\n    stkzu as liable_vat,\n    telbx as telebox_number,\n    telf1 as telephone_1,\n    telf2 as second_telephone_number,\n    telfx as fax_number,\n    teltx as teletex_number,\n    telx1 as telex_number,\n    xcpdk as one_time_account,\n    xzemp as payee_in_document,\n    vbund as trading_partner_id,\n    fiskn as fiscal_address_id,\n    stceg as vat_registration_no,\n    stkzn as natural_person,\n    sperq as function_that_will_be_blocked_id,\n    gbort as place_birth,\n    \n    case\n        when gbdat::text ~ '^[0-9]{8}$'\n            and substring(gbdat::text, 5, 2)::int between 1 and 12\n            and substring(gbdat::text, 7, 2)::int between 1 and 31\n        then to_date(gbdat::text, 'YYYYMMDD')\n        else null\n    end\n as birth_date,\n    sexkz as sex,\n    kraus as credit_information_number,\n    \n    case\n        when revdb::text ~ '^[0-9]{8}$'\n            and substring(revdb::text, 5, 2)::int between 1 and 12\n            and substring(revdb::text, 7, 2)::int between 1 and 31\n        then to_date(revdb::text, 'YYYYMMDD')\n        else null\n    end\n as last_review_external_date,\n    qssys as vendors_qm_system_id,\n    ktock as reference_acct_group_id,\n    pfort as po_box_city,\n    werks as plant_own_or_external_id,\n    ltsna as vendor_sub_range_relevant,\n    werkr as indicator_plant_level_relevant,\n    plkal as factory_calendar_id,\n    duefl as status_transfer_to_next_release,\n    txjcd as tax_jurisdiction_id,\n    sperz as payment_block,\n    scacd as standard_carrier_access_code,\n    sfrgr as forwarding_agent_freight_group_id,\n    lzone as transportation_zone_id,\n    xlfza as accts_alt_payee,\n    dlgrp as service_agent_procedure_group_id,\n    fityp as tax_type_id,\n    stcdt as tax_number_type_id,\n    regss as registered_social_insurance,\n    actss as social_ins_code_id,\n    stcd3 as tax_number_3,\n    stcd4 as tax_number_4,\n    stcd5 as tax_number_5,\n    ipisp as tax_split,\n    taxbs as tax_base_in_percentage,\n    profs as profession,\n    stgdl as stat_grp_service_agent_id,\n    emnfr as ext_manufacturer,\n    lfurl as uniform_resource_locator,\n    j_1kfrepre as name_representative,\n    j_1kftbus as type_business_id,\n    j_1kftind as type_industry_id,\n    confs as confirmation_status,\n    \n    case\n        when updat::text ~ '^[0-9]{8}$'\n            and substring(updat::text, 5, 2)::int between 1 and 12\n            and substring(updat::text, 7, 2)::int between 1 and 31\n        then to_date(updat::text, 'YYYYMMDD')\n        else null\n    end\n as confirmation_date,\n    uptim as last_change_confirmation_tim,\n    nodel as central_del_block,\n    \n    case\n        when qssysdat::text ~ '^[0-9]{8}$'\n            and substring(qssysdat::text, 5, 2)::int between 1 and 12\n            and substring(qssysdat::text, 7, 2)::int between 1 and 31\n        then to_date(qssysdat::text, 'YYYYMMDD')\n        else null\n    end\n as validity_certification_date,\n    podkzb as relevant_pod,\n    fisku as tax_office_responsible_id,\n    stenr as tax_number_at_responsible_tax_authority,\n    carrier_conf as carrier_confirmation_is_expected,\n    min_comp as micro_company_indicator,\n    term_li as terms_liability,\n    crc_num as crc_number,\n    cvp_xblck as business_purpose_completed_flag,\n    rg as rg_number,\n    exp as issued_by,\n    uf as state,\n    \n    case\n        when rgdate::text ~ '^[0-9]{8}$'\n            and substring(rgdate::text, 5, 2)::int between 1 and 12\n            and substring(rgdate::text, 7, 2)::int between 1 and 31\n        then to_date(rgdate::text, 'YYYYMMDD')\n        else null\n    end\n as rg_issuing_date,\n    ric as ric_number,\n    rne as foreign_national_registration,\n    \n    case\n        when rnedate::text ~ '^[0-9]{8}$'\n            and substring(rnedate::text, 5, 2)::int between 1 and 12\n            and substring(rnedate::text, 7, 2)::int between 1 and 31\n        then to_date(rnedate::text, 'YYYYMMDD')\n        else null\n    end\n as rne_issuing_date,\n    cnae as cnae_id,\n    legalnat as legal_nature_id,\n    crtn as crt_number,\n    icmstaxpay as icms_taxpayer_id,\n    indtyp as industry_main_type_id,\n    tdt as tax_declaration_type_id,\n    comsize as company_size_id,\n    decregpc as declaration_regimen_pis_cofins_id,\n    j_sc_capital as capital_amount_val,\n    j_sc_currency as currency_id,\n    alc as agency_location_code_id,\n    pmt_office as payment_office_id,\n    ppa_relevant as vendor_is_ppa_relevant,\n    psofg as processor_group_id,\n    psois as slaprepr_proced,\n    pson1 as pson1,\n    pson2 as pson2,\n    pson3 as pson3,\n    psovn as first_name,\n    psotl as psotl,\n    psohs as house_number,\n    psost as street,\n    transport_chain as transportation_chain_id,\n    staging_time as staging_time_in_days,\n    scheduling_type as scheduling_procedure,\n    submi_relevant as cd_relevant_collective_numbering,\n    _fivetran_deleted as _fivetran_deleted,\n    _fivetran_synced as _fivetran_synced,\n    _fivetran_rowid as _fivetran_rowid\nfrom \"postgres\".\"public_sap_dev\".\"stg_sap__lfa1\"\nwhere mandt in ('800')\n)"}], "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null, "primary_key": [], "time_spine": null}, "model.sap.sap__fact_sales_order": {"database": "postgres", "schema": "public_sap_dev", "name": "sap__fact_sales_order", "resource_type": "model", "package_name": "sap", "path": "sales_and_procurement/star_schema/sap__fact_sales_order.sql", "original_file_path": "models/sales_and_procurement/star_schema/sap__fact_sales_order.sql", "unique_id": "model.sap.sap__fact_sales_order", "fqn": ["sap", "sales_and_procurement", "star_schema", "sap__fact_sales_order"], "alias": "sap__fact_sales_order", "checksum": {"name": "sha256", "checksum": "0711581254b2749611c6d05f5fed96c8c89b997b371841826277bc5c022ed121"}, "config": {"enabled": true, "alias": null, "schema": "sap_dev", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "freshness": null}, "tags": [], "description": "Line-level sales order facts and metrics", "columns": {"sales_document_number": {"name": "sales_document_number", "description": "Sales document number", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "sales_document_item": {"name": "sales_document_item", "description": "Sales document item number", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "sd_document_category": {"name": "sd_document_category", "description": "Sales document category (e.g. order, quote)", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "sales_document_type_id": {"name": "sales_document_type_id", "description": "Type of sales document", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "order_reason_id": {"name": "order_reason_id", "description": "Reason code for sales order", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "delivery_block_id": {"name": "delivery_block_id", "description": "Delivery block reason code", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "sales_organization_id": {"name": "sales_organization_id", "description": "Sales organization responsible for the sale", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "distribution_channel_id": {"name": "distribution_channel_id", "description": "Distribution channel (e.g. online, retail)", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "division_id": {"name": "division_id", "description": "Product division", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "plant_id": {"name": "plant_id", "description": "Plant fulfilling the order", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "document_date": {"name": "document_date", "description": "Date the sales document was created", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "requested_delivery_date": {"name": "requested_delivery_date", "description": "Requested delivery date", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "sold_to_customer_id": {"name": "sold_to_customer_id", "description": "Customer placing the order", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "sales_document_id": {"name": "sales_document_id", "description": "Unique ID of the sales document", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "material_id": {"name": "material_id", "description": "ID of the material or product sold", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "material_group_id": {"name": "material_group_id", "description": "Grouping of similar materials", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "sales_document_item_category_id": {"name": "sales_document_item_category_id", "description": "Sales item category (e.g. standard, service)", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "product_hierarchy_id": {"name": "product_hierarchy_id", "description": "Product hierarchy classification", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "base_uom_id": {"name": "base_uom_id", "description": "Base unit of measure for the material", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "order_quantity": {"name": "order_quantity", "description": "Quantity ordered", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "sales_uom_id": {"name": "sales_uom_id", "description": "Sales unit of measure", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "net_value": {"name": "net_value", "description": "Net value of the sales order item", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "net_price": {"name": "net_price", "description": "Net price per unit", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "sd_document_currency_id": {"name": "sd_document_currency_id", "description": "Currency of the sales document", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "gross_weight": {"name": "gross_weight", "description": "Gross weight of the item", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "weight_uom_id": {"name": "weight_uom_id", "description": "Unit of measure for weight", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "created_date": {"name": "created_date", "description": "Date the order was created", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "returns_item": {"name": "returns_item", "description": "Flag indicating if this is a returns item", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "reason_rejection_id": {"name": "reason_rejection_id", "description": "Reason for item rejection", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "delivery_status": {"name": "delivery_status", "description": "Delivery status of the item", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "overall_status": {"name": "overall_status", "description": "Overall status of the sales order", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "item_delivery_status": {"name": "item_delivery_status", "description": "Status of item delivery", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "created_by": {"name": "created_by", "description": "User who created the sales document", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "_fivetran_deleted": {"name": "_fivetran_deleted", "description": "Fivetran deletion marker", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "_fivetran_synced": {"name": "_fivetran_synced", "description": "Fivetran sync timestamp", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": "sap://models/sales_and_procurement/star_schema/sales_and_procurement.yml", "build_path": null, "unrendered_config": {"materialized": "table", "schema": "sap_{{ var('directed_schema','dev') }}", "enabled": true}, "created_at": 1756850330.6198964, "relation_name": "\"postgres\".\"public_sap_dev\".\"sap__fact_sales_order\"", "raw_code": "{% set using_sales_document_header = var('sap_using_vbak', True) %}\n{% set using_sales_document_item = var('sap_using_vbap', True) %}\n{% set using_sales_document_header_status = var('sap_using_vbuk', True) %}\n{% set using_sales_document_item_status = var('sap_using_vbup', True) %}\n\n{{ config(enabled=using_sales_document_header) }}\n\nwith sales_document_header as (\n    select *\n    from {{ ref('int_sap__sales_document_header') }}\n\n{% if using_sales_document_item %}\n), sales_document_item as (\n    select *\n    from {{ ref('int_sap__sales_document_item') }}\n{% endif %}\n\n{% if using_sales_document_header_status %}\n), sales_document_header_status as (\n    select *\n    from {{ ref('int_sap__sales_document_header_status') }}\n{% endif %}\n\n{% if using_sales_document_item_status %}\n), sales_document_item_status as (\n    select *\n    from {{ ref('int_sap__sales_document_item_status') }}\n{% endif %}\n\n), final as (\n    select\n        ltrim(sales_document_header.sales_document_id, '0') as sales_document_number,\n        sales_document_header.sd_document_category,\n        sales_document_header.sales_document_type_id,\n        sales_document_header.order_reason_id,\n        sales_document_header.delivery_block_document_header_id as delivery_block_id,\n        sales_document_header.sales_organization_id,\n        sales_document_header.distribution_channel_id,\n        sales_document_header.division_id,\n        sales_document_header.document_date,\n        sales_document_header.requested_delivery_date,\n        sales_document_header.sold_to_party_id as sold_to_customer_id,\n        sales_document_header.sales_document_id,\n        sales_document_header.created_date,\n        sales_document_header.created_by,\n\n        {% if using_sales_document_item %}\n        ltrim(sales_document_item.sales_document_item_id, '0') as sales_document_item,\n        sales_document_item.plant_own_or_external_id as plant_id,\n        sales_document_item.material_id,\n        sales_document_item.material_group_id,\n        sales_document_item.sales_document_item_category_id,\n        sales_document_item.product_hierarchy_id,\n        sales_document_item.base_uom_id,\n        case \n            when sales_document_header.sd_document_category = 'c' then sales_document_item.order_quantity\n            else sales_document_item.order_quantity * -1\n        end as order_quantity,\n        sales_document_item.sales_uom_id,\n        case \n            when sales_document_header.sd_document_category = 'c' then sales_document_item.net_val\n            else sales_document_item.net_val * -1\n        end as net_value,\n        sales_document_item.net_price_val as net_price,\n        sales_document_item.sd_document_currency_id,\n        sales_document_item.gross_weight_the_item as gross_weight,\n        sales_document_item.weight_uom_id,\n        sales_document_item.returns_item,\n        sales_document_item.reason_rejection_id,\n        sales_document_item._fivetran_deleted,\n        sales_document_item._fivetran_synced,\n        {% endif %}\n\n        {% if using_sales_document_header_status %}\n        sales_document_header_status.delivery_status,\n        sales_document_header_status.overall_status,\n        {% endif %}\n\n        {% if using_sales_document_item_status %}\n        sales_document_item_status.delivery_status as item_delivery_status\n        {% endif %}\n\n    from sales_document_header\n\n    {% if using_sales_document_item %}\n    inner join sales_document_item\n        on sales_document_header.sales_document_id = sales_document_item.sales_document_id\n    {% endif %}\n\n    {% if using_sales_document_header_status %}\n    inner join sales_document_header_status\n        on sales_document_header.sales_document_id = sales_document_header_status.sales_document_id\n    {% endif %}\n\n    {% if using_sales_document_item_status %}\n    inner join sales_document_item_status\n        on sales_document_item.sales_document_id = sales_document_item_status.sales_document_id\n        and sales_document_item.sales_document_item_id = sales_document_item_status.sd_item_id\n    {% endif %}\n\n    where sales_document_header.sd_document_category in ('c', 'h')\n)\n\nselect *\nfrom final", "doc_blocks": [], "language": "sql", "refs": [{"name": "int_sap__sales_document_header", "package": null, "version": null}, {"name": "int_sap__sales_document_item", "package": null, "version": null}, {"name": "int_sap__sales_document_header_status", "package": null, "version": null}, {"name": "int_sap__sales_document_item_status", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": [], "nodes": ["model.sap.int_sap__sales_document_header", "model.sap.int_sap__sales_document_item", "model.sap.int_sap__sales_document_header_status", "model.sap.int_sap__sales_document_item_status"]}, "compiled_path": "target/compiled/sap/models/sales_and_procurement/star_schema/sap__fact_sales_order.sql", "compiled": true, "compiled_code": "\n\n\n\n\n\n\nwith  __dbt__cte__int_sap__sales_document_header as (\n\n\nselect\n\tmandt as client_id,\n    vbeln as sales_document_id,\n    kostl as cost_center_id,\n    mahza as number_contacts,\n    msr_id as process_identification_number,\n    _dataaging as filter_value_aging_date,\n    taxk5 as taxclass5_cust_id,\n    kvgr4 as customer_group_4_id,\n    amtbl as rel_credit_val,\n    trvog as transaction_group,\n    hb_resdate as resolution_date,\n    fmbdat as material_availability_date,\n    fsh_vrsn_status as snapshot_status,\n    upd_tmstmp as time_stamp,\n    auart as sales_document_type_id,\n    hb_expdate as expiration_date,\n    scheme_grp as group_ref_procedure_id,\n    smenr as number_sales_unit_id,\n    taxk6 as taxclass6_cust_id,\n    fsh_transaction as transaction_number,\n    kvgr5 as customer_group_5_id,\n    gskst as business_area_from_cost_center_id,\n    vkgrp as sales_group_id,\n    pay_method as payment_methods,\n    ktext as search_term_product_proposal,\n    ps_psp_pnr as wbs_element_id,\n    faksk as billing_block_in_sd_document_id,\n    bnddt as quotation_valid_to_date,\n    cmwae as currency_id,\n    kokrs as controlling_area_id,\n    kunnr as sold_to_party_id,\n    betc as business_event_type_code,\n    fsh_rereg as release_rule_id,\n    tas as treasury_account_symbol,\n    cancel_allow as cancellation_allowed,\n    fkara as order_rel_bill_type_id,\n    taxk7 as taxclass7_cust_id,\n    gwldt as guarantee_date,\n    psm_budat as posting_in_the_document_date,\n    objnr as object_number_at_header_level_id,\n    autlf as complete_delivery,\n    stwae as statistics_currency_id,\n    abhov as pick_up_tim,\n    logsysb as logical_system_id,\n    fsh_kvgr6 as customer_group_6_id,\n    bname as name_orderer,\n    taxk8 as taxclass8_cust_id,\n    xblnr as reference_document_number,\n    mtlaur as marker_low_income_housing_id,\n    augru as order_reason_id,\n    stafo as update_group_stats_id,\n    swenr as business_entity_number_id,\n    _xlso_trans_ctxt as _xlso_trans_ctxt,\n    abruf_part as check_partner_authorizations,\n    cmngv as next_date,\n    knkli as credit_account_id,\n    spart as division_id,\n    proli as dg_mgmt_profile_id,\n    enqueue_grp as enqueue_grp,\n    vzeit as requested_dely_tim,\n    kalcd as proc_camp_determin_id,\n    bukrs_vf as company_code_to_be_billed_id,\n    fsh_kvgr7 as customer_group_7_id,\n    vprgr as proposed_date_type,\n    crm_guid as character_field_length_70,\n    hityp_pr as hierarchy_type_pricing_id,\n    taxk9 as taxclass9_cust_id,\n    vgbel as reference_document_id,\n    erzet as created_tim,\n    ihrez as your_reference,\n    submi as collective_number_sd,\n    vdatu as requested_delivery_date,\n    _xlso_variant_id as _xlso_variant_id,\n    abdis as mrp_delivery_schedule_types,\n    fsh_kvgr8 as customer_group_8_id,\n    ernam as created_by,\n    hb_cont_reason as contingency_id,\n    netwr as net_val,\n    vbkla as original_system,\n    vgtyp as preceding_doc_categ,\n    sbgrp as credit_rep_group_id,\n    stceg_l as tax_destination_country_id,\n    fsh_kvgr10 as customer_group_10_id,\n    knuma as agreement_id,\n    fsh_ss as order_scheduling_strategy_id,\n    fsh_cq_check as requirement_relevant,\n    xegdr as eu_triangular_deal,\n    bstnk as customer_purchase_order_number,\n    multi as multiple_promotions,\n    sppaym as payment_method,\n    lifsk as delivery_block_document_header_id,\n    fsh_kvgr9 as customer_group_9_id,\n    aedat as changed_date,\n    wtysc_clm_hdr as claim_header,\n    dat_fzau as cml_delivery_order_qty_date,\n    awahr as sales_probability,\n    kurst as exchange_rate_type_id,\n    gueen as valid_to_date,\n    _xlso_so_vald_to as _xlso_so_vald_to,\n    cmnup as next_check_date,\n    abhod as pick_up_date,\n    vkorg as sales_organization_id,\n    audat as document_date,\n    zuonr as assignment_number,\n    angdt as quotation_inquiry_is_valid_from_date,\n    vsbed as shipping_conditions_id,\n    _xlso_payment_op as _xlso_payment_op,\n    rep_freq as reporting_frequency,\n    handle as int_id,\n    _xlso_so_vald_fm as _xlso_so_vald_fm,\n    bstzd as purchase_order_number_supplement,\n    taxk1 as alternative_tax_classification_id,\n    mahdt as last_customer_contact_date,\n    bstdk as customer_purchase_order_date,\n    vbeln_grp as mster_contract_number_id,\n    handoverloc as handover_location,\n    qmnum as notification_id,\n    kalsm_ch as search_procedure_id,\n    cont_dg as contains_dg,\n    cmfre as release_date,\n    vtweg as distribution_channel_id,\n    telf1 as telephone_number,\n    aufnr as order_id,\n    phase as sales_phase_id,\n    taxk2 as taxclass2_cust_id,\n    kvgr1 as customer_group_1_id,\n    grupp as customer_credit_group_id,\n    fsh_os_stg_change as os_strategy_specific_fields_change,\n    abhob as abhob,\n    landtx as tax_departure_country_id,\n    kalsm as pricing_procedure_id,\n    erdat as created_date,\n    bpn as business_partner_number_id,\n    stage as construction_stage,\n    kkber as credit_control_area_id,\n    taxk3 as taxclass3_cust_id,\n    abrvw as usage_id,\n    vbtyp as sd_document_category,\n    kvgr2 as customer_group_2_id,\n    knumv as document_condition_no,\n    guebg as valid_from_date,\n    fsh_vas_cg as vas_customer_group_id,\n    waerk as sd_document_currency_id,\n    vkbur as sales_office_id,\n    ctlpc as credit_management_risk_category_id,\n    vsnmr_v as sales_document_version_number,\n    rplnr as number_payment_card_plan_type_id,\n    vbklt as sd_document_indicator,\n    mod_allow as modification_allowed,\n    taxk4 as tax_classification_4_customer_id,\n    _xlso_catalog_id as _xlso_catalog_id,\n    kvgr3 as customer_group_3_id,\n    fsh_candate as cancellation_date,\n    agrzr as accrual_period,\n    mill_appl_id as application_id,\n    bsark as customer_purchase_order_type_id,\n    tm_ctrl_key as control_key,\n    gsber as business_area_id,\n    _fivetran_deleted as _fivetran_deleted,\n    _fivetran_synced as _fivetran_synced,\n    _fivetran_sap_archived as _fivetran_sap_archived\nfrom \"postgres\".\"public_sap_dev\".\"stg_sap__vbak\"\nwhere mandt in ('800')\n),  __dbt__cte__int_sap__sales_document_item as (\n\n\nselect\n    mandt as client_id,\n    posnr as sales_document_item_id,\n    vbeln as sales_document_id,\n    smeng as scale_quantity,\n    stlty as bom_category,\n    vgref as preceding_document_resulted_from_ref,\n    bwtar as valuation_type_id,\n    knuma_ag as sales_deal_id,\n    spart as division_id,\n    bwtex as indicator_separate_valuation,\n    oih_licin as internal_license_no_id,\n    oic_dcounc as destination_county_code_id,\n    knuma_pi as promotion_id,\n    oic_dcityc as destination_city_code_id,\n    tas as treasury_account_symbol,\n    oignrule as gross_net_pricing_rule_id,\n    upmat as mnitm_prcrefmatl_id,\n    kalsm_k as costing_sheet_id,\n    oicertf1_ex as external_license_no,\n    aplzl_olc as counter,\n    umvkn as denominator,\n    oidmsg_qty as quantity_message,\n    kever as deviation_days,\n    mtvfp as availability_check_id,\n    oihantyp_ex as handling_type_id,\n    abgru as reason_rejection_id,\n    xchar as batch_management,\n    kostl as cost_center_id,\n    _accgo_tx_p as _accgo_tx_p,\n    prs_work_period as work_period,\n    vkgru as repair_classification_items_id,\n    wktnr as value_contract_no_id,\n    absfz as absolute_deviation,\n    oih_lcfol as follow_on_license_id,\n    vbeaf as fixed_process_time,\n    ernam as created_by,\n    oitaxfrom_im as tax_key_from_id,\n    stafo as update_group_stats_id,\n    oic_lifnr as vendor_id,\n    j_1btxsdc as sd_tax_code_id,\n    taxm1 as tax_classification_id,\n    lprio as delivery_priority_id,\n    oiedbalm_ex as balance_method_ind,\n    umziz as conversion_factor,\n    kzvbr as consumption_posting,\n    oic_aorgin as alternate_origin,\n    _slce_inst_guid as _slce_inst_guid,\n    charg as batch_id,\n    stlkn as bom_item_node_number,\n    fsh_collection as fashion_collection_id,\n    cmeth as quantity_conversion_method,\n    aplzl_oaa as aplzl_oaa,\n    oidmsg_dat as validity_date_msg,\n    umvkz as numerator,\n    oitaxgrp_ex as excise_duty_group_id,\n    fsh_candate as cancellation_date,\n    oipricie_im as ed_pricing_external,\n    _slce_sol_posnr as _slce_sol_posnr,\n    tax_subject_st as tax_subject_to_substituicao_tributaria,\n    gewei as weight_uom_id,\n    revacc_refid as revenue_accounting_reference_id,\n    oic_porgin as tax_origin,\n    sobkz as special_stock_id,\n    vpwrk as planning_plant_id,\n    waerk as sd_document_currency_id,\n    mod_allow as modification_allowed,\n    umzin as umzin,\n    magrv as matl_grp_pack_matls_id,\n    oic_pbatch as pipe_ex_batch_no,\n    bonus as volume_rebate_group_id,\n    sloctype as location_type,\n    oiedbal_im as ed_balance_indicator,\n    fsh_vas_prnt_id as sd_item_id,\n    ablfz as rounding_quantity_delivery,\n    taxm3 as taxm3,\n    pstyv as sales_document_item_category_id,\n    _xlso_course_eda as _xlso_course_eda,\n    fiscal_incentive as tax_incentive_type_id,\n    oic_mot as mode_transport_id,\n    oic_oregio as origin_region_id,\n    fistl as funds_center_id,\n    vpmat as planning_material_id,\n    awahr as order_probability_the_item,\n    kpein as condition_pricing_unit,\n    voleh as volume_uom_id,\n    werks as plant_own_or_external_id,\n    oicertf1 as oicertf1,\n    knumh as no_cond_rec_batch,\n    taxm2 as taxm2,\n    fsh_psm_pfm_split as psm_and_pfm_split_id,\n    tc_aut_det as tax_code_automatically_determined_id,\n    serail as serial_number_profile_id,\n    kosch as product_allocation_id,\n    oid_miscdl as miscellaneous_delivery_number,\n    oih_lictp_ex as license_type_id,\n    paobjnr as profitability_segment_no,\n    ps_psp_pnr as wbs_element_id,\n    rkfkf as billing_meth_co_ppc,\n    sktof as cash_discount_indicator,\n    fkrel as relevant_billing,\n    oihantyp as oihantyp,\n    _slce_sol_matnr as _slce_sol_matnr,\n    oiplantd as is_oil_plant_determ,\n    lstanr as free_goods_delivery_control,\n    _dataaging as filter_value_aging_date,\n    cpd_updat as time_stamp,\n    oic_drcreg as drc_region_id,\n    bedae as requirements_type_id,\n    manual_tc_reason as manual_tax_code_reason_id,\n    spcsto as nf_cfop_special_case_id,\n    aedat as changed_date,\n    z_prs_offshore as on_near_offshore_delivery_type,\n    kzwi1 as subtotal_1_val,\n    oiedok as excise_duty_validation_indicator,\n    fsh_pqr_uepos as higher_lev_item_partial_quantity_rej_id,\n    handovertime as handover_tim,\n    xchpf as xchpf,\n    oibwtar_im as oibwtar_im,\n    shkzg as returns_item,\n    _slce_sol_cuobj as _slce_sol_cuobj,\n    aufpl_olc as operation_task_list_no,\n    ntgew as net_weight_the_item,\n    vgtyp as preceding_doc_categ,\n    stockloc as location,\n    pmatn as pricing_reference_material_id,\n    sernr as bom_explosion_number_id,\n    taxm4 as taxm4,\n    kalnr as cost_estimate_number_id,\n    oiexgnum as exchange_agreement_number_id,\n    erlre as completion_rule,\n    oiexgtyp as exchange_type_id,\n    oitaxto_im as tax_key_to_id,\n    kzbws as special_stock_valuation,\n    _accgo_is_co_rel as _accgo_is_co_rel,\n    pargb as trading_partba_id,\n    oimetind as metropolitan_indicator_id,\n    oih_folqty as _2nd_license_qty,\n    oic_truckn as truck_number,\n    uebtk as unlimited_overdelivery_allowed,\n    arsnum as reservation_id,\n    kdmat as material_number_used_by_customer,\n    bpn as business_partner_number_id,\n    mvgr1 as material_group_1_id,\n    voref as complete_reference_indicator,\n    erzet as created_tim,\n    arktx as short_text_sales_order_item,\n    cmpnt as credit_funct_active,\n    oihnotlgort as storage_loc_id,\n    uepos as higher_level_item_id,\n    stdat as key_the_bill_material_date,\n    stcur as exchange_rate_stats,\n    oitaxfrom_ex as oitaxfrom_ex,\n    fiscal_incentive_id as incentive_id,\n    _slce_single_conf_done as _slce_single_conf_done,\n    klmeng as cumul_confirmed_qty,\n    zmeng as target_quantity_in_sales_units,\n    oidrc as differ_refer_code_id,\n    pay_method as payment_methods,\n    _slce_sol_ext_guid as _slce_sol_ext_guid,\n    kzwi2 as subtotal_2_val,\n    oibypass as is_oil_plt_det_ind,\n    fsh_item_group as item_group,\n    aufpl_oaa as aufpl_oaa,\n    kwmeng as order_quantity,\n    oih_lcfol_ex as oih_lcfol_ex,\n    koupd as condition_update,\n    fsh_grid_cond_rec as grid_condition_number,\n    techs as standard_variant,\n    matnr as material_id,\n    wgru1 as material_group_hierarchy_1,\n    oitaxfrom as oitaxfrom,\n    taxm5 as taxm5,\n    kztlf as partial_delivery_at_item_level,\n    iuid_relevant as iuid_relevant_customer,\n    oic_kmpos as ref_contract_item,\n    z_prs_country as country_key_id,\n    gsber as business_area_id,\n    oipricie_ex as oipricie_ex,\n    fsh_crsd as condition_no,\n    fsh_transaction as transaction_number,\n    grkor as delivery_group,\n    uepvw as id_higher_level_item_usage,\n    mfrgr as material_freight_group_id,\n    vbelv as originating_document_id,\n    untto as underdelivery_tolerance_limit,\n    plavo as plandelschedinstruct_id,\n    vpzuo as allocation_indicator,\n    mvgr3 as material_group_3_id,\n    sugrd as reason_material_substitution_id,\n    oic_ptrip as pipeline_trip_number_external,\n    oic_adestn as alternate_destination,\n    oic_oland1 as origin_country_id,\n    mvgr2 as material_group_2_id,\n    netpr as net_price_val,\n    oicontnr as outline_agreement_contract_id,\n    stman as inconsistent_configuration,\n    oiedbal_ex as oiedbal_ex,\n    j_1btaxlw3 as iss_tax_law_id,\n    _slce_single_conf_reqired as _slce_single_conf_reqired,\n    oinetcyc as netting_cycle_id,\n    prsok as pricing_is_ok,\n    vgpos as reference_item_id,\n    cuobj_ch as internal_object_no,\n    oic_pdestn as tax_destination,\n    rep_freq as reporting_frequency,\n    lsmeng as required_deliv_qty,\n    stpoz as stpoz,\n    kzwi3 as subtotal_3_val,\n    posar as item_type,\n    budget_pd as budget_period_id,\n    z_prs_chargelevl as staff_grade,\n    posnv as originating_item_id,\n    wgru2 as material_group_hierarchy_2,\n    oifeetot as fee_total_val,\n    oic_dregio as destination_region_id,\n    oih_licin_ex as oih_licin_ex,\n    oioilcon as oil_content_perc,\n    aufnr as order_id,\n    sgt_rcat as requirement_segment,\n    oidmsg_uom as unit_measure_msg,\n    oibasprod as base_product_number_id,\n    msr_refund_code as returns_refund_code_id,\n    cuobj as configuration,\n    kbver as deviation_in_percent,\n    sposn as bom_item_number,\n    fsh_season_year as season_year_id,\n    zzdea_license as dea_number,\n    taxm6 as taxm6,\n    mprok as status_manual_price_change,\n    provg as commission_group_id,\n    oitaxto as oitaxto,\n    cmkua as cred_exch_rate,\n    cmtfg as partial_release,\n    oid_extbol as external_bill_lading,\n    ukonm as mnitem_matpricinggrp_id,\n    mvgr4 as material_group_4_id,\n    kmein as condition_uom_id,\n    klvar as costing_variant_id,\n    prs_sd_spsnr as standard_wbs_element_id,\n    mwsbp as tax_amount_document_currency_val,\n    revacc_reftype as rev_acc_reference_type,\n    wrf_charstc1 as characteristic_value_1,\n    fsh_item as item_number,\n    skopf as assortment_module_id,\n    oibwtar_ex as oibwtar_ex,\n    prodh as product_hierarchy_id,\n    stkey as origin_the_bill_material,\n    j_1btaxlw4 as cofins_tax_law_id,\n    route as route_id,\n    _xlso_course_bda as _xlso_course_bda,\n    matkl as material_group_id,\n    oic_drctry as drc_country_id,\n    kalvar as kalvar,\n    lfrel as item_is_relevant_delivery,\n    kmpmg as component_quantity,\n    kzwi4 as subtotal_4_val,\n    wtysc_clmitem as claim_item_number,\n    fmeng as quantity_is_fixed,\n    nrab_knumh as condition_number,\n    oitaxto_ex as oitaxto_ex,\n    cmpre as item_credit_price_val,\n    handoverdate as handover_date,\n    nachl as no_gr_posted_by_cst,\n    abdat as reconciliation_date,\n    kondm as material_pricing_group_id,\n    oic_dland1 as destination_country_id,\n    cmpre_flt as item_credit_price,\n    taxm7 as taxm7,\n    ferc_ind as regulatory_indicator_id,\n    oifeech as fee_edit_control,\n    oih_folqty_ex as oih_folqty_ex,\n    prctr as profit_center_id,\n    eannr as ean_number,\n    zschl_k as overhead_key,\n    oislf as state_license_fee_zone_id,\n    pctrf as profit_center_billing_id,\n    fsh_vas_rel as vas_relevant,\n    mvgr5 as material_group_5_id,\n    fkber as functional_area_id,\n    vbeav as var_processing_time,\n    zwert as oa_target_val,\n    antlf as max_part_deliveries,\n    cancel_allow as cancellation_allowed,\n    fsh_searef as copied_season,\n    oipricie as oipricie,\n    wrf_charstc2 as characteristic_value_2,\n    upflu as update_document_flow,\n    oihcotdisch as imp_posting_at_pod,\n    oidmsg_shp as ship_to_party_msg,\n    grant_nbr as _grant,\n    oidmsg_trm as payment_terms_msg,\n    umref as conversion_factor_quantities,\n    kzwi6 as subtotal_6_val,\n    knttp as account_assignment_category_id,\n    j_1btaxlw5 as pis_tax_law_id,\n    stlnr as bill_material,\n    vkaus as usage_id,\n    erdat as created_date,\n    kzwi5 as subtotal_5_val,\n    fsh_theme as fashion_theme_id,\n    fsh_season as season_id,\n    zieme as target_quantity_uom_uom_id,\n    oipsdrc as pricing_drc_id,\n    uebto as overdelivery_tolerance_limit,\n    grpos as alternative_to_item,\n    chmvs as quantity_proposal,\n    oihantyp_im as oihantyp_im,\n    abges as guaranteed,\n    oihnotwerks as cross_excise_duty_plant_id,\n    z_prs_bill_flag as billable_non_billable,\n    abgrs as results_analysis_key_id,\n    taxm8 as taxm8,\n    objnr as object_number_at_item_level_id,\n    volum as volume_the_item,\n    oiinex_ex as ed_pricing_key_id,\n    j_1btaxlw1 as icms_law_id,\n    j_1bcfop as cfop_code_and_extension_id,\n    kowrr as statistical_values,\n    fixmg as delivery_date_and_quantity_fixed,\n    _xlso_course_id as _xlso_course_id,\n    fmfgus_key as us_government_fields,\n    atpkz as replacement_part,\n    oifeedt as fee_pricing_condition_date,\n    meins as base_uom_id,\n    oiinex as oiinex,\n    msr_ret_reason as return_reason_id,\n    handoverloc as handover_location,\n    lfmng as minimum_delivery_qty,\n    ktgrm as acct_assignment_grp_id,\n    oia_baselo as base_location,\n    betc as business_event_type_code,\n    wrf_charstc3 as characteristic_value_3,\n    oiedbalm_im as oiedbalm_im,\n    oihtaxrcp_ex as tax_recipient,\n    oic_ocounc as origin_county_code_id,\n    exart as bus_transaction_type_id,\n    fsh_vasref as copied_vas,\n    oiwap as wide_area_pricing_zone_id,\n    vgbel as reference_document_id,\n    kannr as kanban_sequence_number,\n    sumbd as summing_up_requirements,\n    oidmsg_prd as products_message,\n    posex as purchase_order_item,\n    oitaxgrp_im as oitaxgrp_im,\n    oic_ocityc as origin_city_code_id,\n    oid_ship as ship_to_party_id,\n    prosa as id_material_determination,\n    berid as mrp_area_id,\n    logsys_ext as logical_system_id,\n    oipipeval as val_ind_pipeline,\n    oitaxgrp as oitaxgrp,\n    vrkme as sales_uom_id,\n    ean11 as ean,\n    taxm9 as taxm9,\n    kzfme as leading_uom,\n    wktps as value_contract_item_id,\n    j_1btaxlw2 as ipi_law_id,\n    oiedbalm as oiedbalm,\n    stpos as bill_material_item_number,\n    anzsn as number_serial_numbers,\n    oisbrel as s_b_prod_relev_ind,\n    oih_lictp as oih_lictp,\n    wavwr as cost_document_currency_val,\n    arspos as item_no_reservation,\n    _bev1_srfund as _bev1_srfund,\n    netwr as net_val,\n    prs_objnr as engagement_mgmt_object_number,\n    kbmeng as kbmeng,\n    prefe as preference_auth,\n    prbme as product_group_uom_id,\n    clint as internal_class_number_id,\n    zzdea_schedule as dea_schedule_key,\n    oiedbal as oiedbal,\n    trmrisk_relevant as risk_relevancy_in_sales,\n    chspl as batch_split_allowed,\n    matwa as material_entered_id,\n    faksp as billing_block_item_id,\n    fonds as fund_id,\n    brgew as gross_weight_the_item,\n    abfor as form_payment_guarantee_id,\n    stadat as statistics_date,\n    vstel as shipping_point_id,\n    mill_se_gposn as global_item_id,\n    lgort as storage_location_id,\n    msr_approv_block as approval_block,\n    cepok as status_expected_price,\n    _fivetran_deleted as _fivetran_deleted,\n    _fivetran_synced as _fivetran_synced,\n    _fivetran_sap_archived as _fivetran_sap_archived\nfrom \"postgres\".\"public_sap_dev\".\"stg_sap__vbap\"\nwhere mandt in ('800')\n),  __dbt__cte__int_sap__sales_document_header_status as (\n\n\nselect\n    mandt as client_id,\n    vbeln as sales_document_id,\n    rfstk as reference_document_header_status,\n    rfgsk as total_reference_stat,\n    bestk as confirmation_status,\n    lfstk as delivery_status,\n    lfgsk as overall_dlv_status,\n    wbstk as total_goods_movement_status,\n    fkstk as billing_status,\n    fksak as bill_stat_order_rel,\n    buchk as posting_status,\n    abstk as rejection_status,\n    gbstk as overall_status,\n    kostk as overall_picking_putaway_status,\n    lvstk as overall_wm_status,\n    uvals as item,\n    uvvls as item_delivery,\n    uvfas as item_billing,\n    uvall as header,\n    uvvlk as header_delivery,\n    uvfak as header_billing,\n    uvprs as pricing,\n    vbtyp as sd_document_category,\n    vbobj as sd_document_object,\n    \n    case\n        when aedat::text ~ '^[0-9]{8}$'\n            and substring(aedat::text, 5, 2)::int between 1 and 12\n            and substring(aedat::text, 7, 2)::int between 1 and 31\n        then to_date(aedat::text, 'YYYYMMDD')\n        else null\n    end\n as changed_date,\n    fkivk as totals_status,\n    relik as inv_list_status,\n    uvk01 as header_reserves_1,\n    uvk02 as header_reserves_2,\n    uvk03 as header_reserves_3,\n    uvk04 as header_reserves_4,\n    uvk05 as header_reserves_5,\n    uvs01 as total_reserves_1,\n    uvs02 as total_reserves_2,\n    uvs03 as total_reserves_3,\n    uvs04 as total_reserves_4,\n    uvs05 as total_reserves_5,\n    pkstk as packing_status,\n    cmpsa as static_check,\n    cmpsb as dynamic_check,\n    cmpsc as maximum_value,\n    cmpsd as terms_payment,\n    cmpse as customer_review_date,\n    cmpsf as overdue_open_items,\n    cmpsg as oldest_open_items,\n    cmpsh as max_dunning_level,\n    cmpsi as financial_document,\n    cmpsj as expt_cred_insurance,\n    cmpsk as payment_card,\n    cmpsl as reserve,\n    cmps0 as cmps0,\n    cmps1 as cmps1,\n    cmps2 as cmps2,\n    cmgst as overall_status_credit_checks,\n    trsta as transportation_planning_status,\n    koquk as status_pick_confirmation,\n    costa as confirmation_status_ale,\n    saprl as sap_release,\n    uvpas as it_packaging,\n    uvpis as it_picking_putaway,\n    uvwas as item_goods_mvmt,\n    uvpak as head_packaging,\n    uvpik as head_picking_putaway,\n    uvwak as head_goods_mvmt,\n    uvgek as unused,\n    cmpsm as credit_check_is_obsolete,\n    dcstk as delay_status,\n    vestk as handling_unit_placed_in_stock,\n    vlstk as status_decent_whse,\n    rrsta as revenue_determination_status,\n    block as block,\n    fsstk as overall_billing_block_status,\n    lsstk as overall_delivery_block_status,\n    spstg as overall_blocked_status,\n    pdstk as pod_status_on_header_level,\n    fmstk as status_funds_management,\n    manek as manual_completion_contract,\n    spe_tmpid as temporary_inbound_delivery,\n    hdall as on_hold,\n    hdals as pos_hold,\n    cmps_cm as sap_credit_management,\n    cmps_te as credit_mgmt_te_status,\n    vbtyp_ext as doc_cat_extension,\n    fsh_ar_stat_hdr as arun_status_at_header,\n    hvr_is_deleted as hvr_is_deleted,\n    hvr_change_time as hvr_change_time\nfrom \"postgres\".\"public_sap_dev\".\"stg_sap__vbuk\"\nwhere mandt in ('800')\n),  __dbt__cte__int_sap__sales_document_item_status as (\n\n\nselect\n    mandt as client_id,\n    posnr as sd_item_id,\n    vbeln as sales_document_id,\n    uvpak as item_packaging,\n    uvvlk as item_deliv,\n    mill_vs_vssta as status_sales_order_item,\n    pksta as packing_status_item,\n    lssta as delivery_block_status_item,\n    vlstp as decentralized_whse_processing,\n    absta as rejection_status_sd_item,\n    fksta as billing_status,\n    fkivp as intercompany_billing_status,\n    lfgsa as overall_deliv_status,\n    rrsta as revenue_determination_status,\n    lfsta as delivery_status,\n    fksaa as ord_related_bill_st,\n    wbsta as goods_movement_status,\n    ltsps as stockable_type_switched_into_stand_prod,\n    costa as confirmation_status_ale,\n    fssta as billing_block_status_items,\n    kosta as picking_status_putaway_status,\n    uvpik as item_picking_putaway,\n    uvfak as item_billing,\n    uvall as item,\n    rfgsa as overall_status_reference,\n    uvprs as pricing_item_is_incomplete,\n    lvsta as wm_activity_status,\n    rfsta as reference_status,\n    cmppj as expt_cred_insurance,\n    cmppi as financial_document,\n    hdall as delivery_item_not_complete,\n    besta as confirmed,\n    pdsta as pod_status_on_item_level,\n    fsh_ar_stat_itm as arun_status_item_level,\n    manek as manual_completion_contract,\n    gbsta as overall_status,\n    uvwak as item_goods_mvmt,\n    dcsta as delay_status,\n    uvp05 as customer_reserves_5_item_status,\n    uvp02 as customer_reserves_2_item_status,\n    uvp04 as item_reserves_4_item_status,\n    koqua as pick_confirmation,\n    uvp01 as customer_reserves_1_item_status,\n    uvp03 as item_reserves_3_item_status,\n    _fivetran_deleted as _fivetran_deleted,\n    _fivetran_synced as _fivetran_synced,\n    _fivetran_sap_archived as _fivetran_sap_archived\nfrom \"postgres\".\"public_sap_dev\".\"stg_sap__vbup\"\nwhere mandt in ('800')\n), sales_document_header as (\n    select *\n    from __dbt__cte__int_sap__sales_document_header\n\n\n), sales_document_item as (\n    select *\n    from __dbt__cte__int_sap__sales_document_item\n\n\n\n), sales_document_header_status as (\n    select *\n    from __dbt__cte__int_sap__sales_document_header_status\n\n\n\n), sales_document_item_status as (\n    select *\n    from __dbt__cte__int_sap__sales_document_item_status\n\n\n), final as (\n    select\n        ltrim(sales_document_header.sales_document_id, '0') as sales_document_number,\n        sales_document_header.sd_document_category,\n        sales_document_header.sales_document_type_id,\n        sales_document_header.order_reason_id,\n        sales_document_header.delivery_block_document_header_id as delivery_block_id,\n        sales_document_header.sales_organization_id,\n        sales_document_header.distribution_channel_id,\n        sales_document_header.division_id,\n        sales_document_header.document_date,\n        sales_document_header.requested_delivery_date,\n        sales_document_header.sold_to_party_id as sold_to_customer_id,\n        sales_document_header.sales_document_id,\n        sales_document_header.created_date,\n        sales_document_header.created_by,\n\n        \n        ltrim(sales_document_item.sales_document_item_id, '0') as sales_document_item,\n        sales_document_item.plant_own_or_external_id as plant_id,\n        sales_document_item.material_id,\n        sales_document_item.material_group_id,\n        sales_document_item.sales_document_item_category_id,\n        sales_document_item.product_hierarchy_id,\n        sales_document_item.base_uom_id,\n        case \n            when sales_document_header.sd_document_category = 'c' then sales_document_item.order_quantity\n            else sales_document_item.order_quantity * -1\n        end as order_quantity,\n        sales_document_item.sales_uom_id,\n        case \n            when sales_document_header.sd_document_category = 'c' then sales_document_item.net_val\n            else sales_document_item.net_val * -1\n        end as net_value,\n        sales_document_item.net_price_val as net_price,\n        sales_document_item.sd_document_currency_id,\n        sales_document_item.gross_weight_the_item as gross_weight,\n        sales_document_item.weight_uom_id,\n        sales_document_item.returns_item,\n        sales_document_item.reason_rejection_id,\n        sales_document_item._fivetran_deleted,\n        sales_document_item._fivetran_synced,\n        \n\n        \n        sales_document_header_status.delivery_status,\n        sales_document_header_status.overall_status,\n        \n\n        \n        sales_document_item_status.delivery_status as item_delivery_status\n        \n\n    from sales_document_header\n\n    \n    inner join sales_document_item\n        on sales_document_header.sales_document_id = sales_document_item.sales_document_id\n    \n\n    \n    inner join sales_document_header_status\n        on sales_document_header.sales_document_id = sales_document_header_status.sales_document_id\n    \n\n    \n    inner join sales_document_item_status\n        on sales_document_item.sales_document_id = sales_document_item_status.sales_document_id\n        and sales_document_item.sales_document_item_id = sales_document_item_status.sd_item_id\n    \n\n    where sales_document_header.sd_document_category in ('c', 'h')\n)\n\nselect *\nfrom final", "extra_ctes_injected": true, "extra_ctes": [{"id": "model.sap.int_sap__sales_document_header", "sql": " __dbt__cte__int_sap__sales_document_header as (\n\n\nselect\n\tmandt as client_id,\n    vbeln as sales_document_id,\n    kostl as cost_center_id,\n    mahza as number_contacts,\n    msr_id as process_identification_number,\n    _dataaging as filter_value_aging_date,\n    taxk5 as taxclass5_cust_id,\n    kvgr4 as customer_group_4_id,\n    amtbl as rel_credit_val,\n    trvog as transaction_group,\n    hb_resdate as resolution_date,\n    fmbdat as material_availability_date,\n    fsh_vrsn_status as snapshot_status,\n    upd_tmstmp as time_stamp,\n    auart as sales_document_type_id,\n    hb_expdate as expiration_date,\n    scheme_grp as group_ref_procedure_id,\n    smenr as number_sales_unit_id,\n    taxk6 as taxclass6_cust_id,\n    fsh_transaction as transaction_number,\n    kvgr5 as customer_group_5_id,\n    gskst as business_area_from_cost_center_id,\n    vkgrp as sales_group_id,\n    pay_method as payment_methods,\n    ktext as search_term_product_proposal,\n    ps_psp_pnr as wbs_element_id,\n    faksk as billing_block_in_sd_document_id,\n    bnddt as quotation_valid_to_date,\n    cmwae as currency_id,\n    kokrs as controlling_area_id,\n    kunnr as sold_to_party_id,\n    betc as business_event_type_code,\n    fsh_rereg as release_rule_id,\n    tas as treasury_account_symbol,\n    cancel_allow as cancellation_allowed,\n    fkara as order_rel_bill_type_id,\n    taxk7 as taxclass7_cust_id,\n    gwldt as guarantee_date,\n    psm_budat as posting_in_the_document_date,\n    objnr as object_number_at_header_level_id,\n    autlf as complete_delivery,\n    stwae as statistics_currency_id,\n    abhov as pick_up_tim,\n    logsysb as logical_system_id,\n    fsh_kvgr6 as customer_group_6_id,\n    bname as name_orderer,\n    taxk8 as taxclass8_cust_id,\n    xblnr as reference_document_number,\n    mtlaur as marker_low_income_housing_id,\n    augru as order_reason_id,\n    stafo as update_group_stats_id,\n    swenr as business_entity_number_id,\n    _xlso_trans_ctxt as _xlso_trans_ctxt,\n    abruf_part as check_partner_authorizations,\n    cmngv as next_date,\n    knkli as credit_account_id,\n    spart as division_id,\n    proli as dg_mgmt_profile_id,\n    enqueue_grp as enqueue_grp,\n    vzeit as requested_dely_tim,\n    kalcd as proc_camp_determin_id,\n    bukrs_vf as company_code_to_be_billed_id,\n    fsh_kvgr7 as customer_group_7_id,\n    vprgr as proposed_date_type,\n    crm_guid as character_field_length_70,\n    hityp_pr as hierarchy_type_pricing_id,\n    taxk9 as taxclass9_cust_id,\n    vgbel as reference_document_id,\n    erzet as created_tim,\n    ihrez as your_reference,\n    submi as collective_number_sd,\n    vdatu as requested_delivery_date,\n    _xlso_variant_id as _xlso_variant_id,\n    abdis as mrp_delivery_schedule_types,\n    fsh_kvgr8 as customer_group_8_id,\n    ernam as created_by,\n    hb_cont_reason as contingency_id,\n    netwr as net_val,\n    vbkla as original_system,\n    vgtyp as preceding_doc_categ,\n    sbgrp as credit_rep_group_id,\n    stceg_l as tax_destination_country_id,\n    fsh_kvgr10 as customer_group_10_id,\n    knuma as agreement_id,\n    fsh_ss as order_scheduling_strategy_id,\n    fsh_cq_check as requirement_relevant,\n    xegdr as eu_triangular_deal,\n    bstnk as customer_purchase_order_number,\n    multi as multiple_promotions,\n    sppaym as payment_method,\n    lifsk as delivery_block_document_header_id,\n    fsh_kvgr9 as customer_group_9_id,\n    aedat as changed_date,\n    wtysc_clm_hdr as claim_header,\n    dat_fzau as cml_delivery_order_qty_date,\n    awahr as sales_probability,\n    kurst as exchange_rate_type_id,\n    gueen as valid_to_date,\n    _xlso_so_vald_to as _xlso_so_vald_to,\n    cmnup as next_check_date,\n    abhod as pick_up_date,\n    vkorg as sales_organization_id,\n    audat as document_date,\n    zuonr as assignment_number,\n    angdt as quotation_inquiry_is_valid_from_date,\n    vsbed as shipping_conditions_id,\n    _xlso_payment_op as _xlso_payment_op,\n    rep_freq as reporting_frequency,\n    handle as int_id,\n    _xlso_so_vald_fm as _xlso_so_vald_fm,\n    bstzd as purchase_order_number_supplement,\n    taxk1 as alternative_tax_classification_id,\n    mahdt as last_customer_contact_date,\n    bstdk as customer_purchase_order_date,\n    vbeln_grp as mster_contract_number_id,\n    handoverloc as handover_location,\n    qmnum as notification_id,\n    kalsm_ch as search_procedure_id,\n    cont_dg as contains_dg,\n    cmfre as release_date,\n    vtweg as distribution_channel_id,\n    telf1 as telephone_number,\n    aufnr as order_id,\n    phase as sales_phase_id,\n    taxk2 as taxclass2_cust_id,\n    kvgr1 as customer_group_1_id,\n    grupp as customer_credit_group_id,\n    fsh_os_stg_change as os_strategy_specific_fields_change,\n    abhob as abhob,\n    landtx as tax_departure_country_id,\n    kalsm as pricing_procedure_id,\n    erdat as created_date,\n    bpn as business_partner_number_id,\n    stage as construction_stage,\n    kkber as credit_control_area_id,\n    taxk3 as taxclass3_cust_id,\n    abrvw as usage_id,\n    vbtyp as sd_document_category,\n    kvgr2 as customer_group_2_id,\n    knumv as document_condition_no,\n    guebg as valid_from_date,\n    fsh_vas_cg as vas_customer_group_id,\n    waerk as sd_document_currency_id,\n    vkbur as sales_office_id,\n    ctlpc as credit_management_risk_category_id,\n    vsnmr_v as sales_document_version_number,\n    rplnr as number_payment_card_plan_type_id,\n    vbklt as sd_document_indicator,\n    mod_allow as modification_allowed,\n    taxk4 as tax_classification_4_customer_id,\n    _xlso_catalog_id as _xlso_catalog_id,\n    kvgr3 as customer_group_3_id,\n    fsh_candate as cancellation_date,\n    agrzr as accrual_period,\n    mill_appl_id as application_id,\n    bsark as customer_purchase_order_type_id,\n    tm_ctrl_key as control_key,\n    gsber as business_area_id,\n    _fivetran_deleted as _fivetran_deleted,\n    _fivetran_synced as _fivetran_synced,\n    _fivetran_sap_archived as _fivetran_sap_archived\nfrom \"postgres\".\"public_sap_dev\".\"stg_sap__vbak\"\nwhere mandt in ('800')\n)"}, {"id": "model.sap.int_sap__sales_document_item", "sql": " __dbt__cte__int_sap__sales_document_item as (\n\n\nselect\n    mandt as client_id,\n    posnr as sales_document_item_id,\n    vbeln as sales_document_id,\n    smeng as scale_quantity,\n    stlty as bom_category,\n    vgref as preceding_document_resulted_from_ref,\n    bwtar as valuation_type_id,\n    knuma_ag as sales_deal_id,\n    spart as division_id,\n    bwtex as indicator_separate_valuation,\n    oih_licin as internal_license_no_id,\n    oic_dcounc as destination_county_code_id,\n    knuma_pi as promotion_id,\n    oic_dcityc as destination_city_code_id,\n    tas as treasury_account_symbol,\n    oignrule as gross_net_pricing_rule_id,\n    upmat as mnitm_prcrefmatl_id,\n    kalsm_k as costing_sheet_id,\n    oicertf1_ex as external_license_no,\n    aplzl_olc as counter,\n    umvkn as denominator,\n    oidmsg_qty as quantity_message,\n    kever as deviation_days,\n    mtvfp as availability_check_id,\n    oihantyp_ex as handling_type_id,\n    abgru as reason_rejection_id,\n    xchar as batch_management,\n    kostl as cost_center_id,\n    _accgo_tx_p as _accgo_tx_p,\n    prs_work_period as work_period,\n    vkgru as repair_classification_items_id,\n    wktnr as value_contract_no_id,\n    absfz as absolute_deviation,\n    oih_lcfol as follow_on_license_id,\n    vbeaf as fixed_process_time,\n    ernam as created_by,\n    oitaxfrom_im as tax_key_from_id,\n    stafo as update_group_stats_id,\n    oic_lifnr as vendor_id,\n    j_1btxsdc as sd_tax_code_id,\n    taxm1 as tax_classification_id,\n    lprio as delivery_priority_id,\n    oiedbalm_ex as balance_method_ind,\n    umziz as conversion_factor,\n    kzvbr as consumption_posting,\n    oic_aorgin as alternate_origin,\n    _slce_inst_guid as _slce_inst_guid,\n    charg as batch_id,\n    stlkn as bom_item_node_number,\n    fsh_collection as fashion_collection_id,\n    cmeth as quantity_conversion_method,\n    aplzl_oaa as aplzl_oaa,\n    oidmsg_dat as validity_date_msg,\n    umvkz as numerator,\n    oitaxgrp_ex as excise_duty_group_id,\n    fsh_candate as cancellation_date,\n    oipricie_im as ed_pricing_external,\n    _slce_sol_posnr as _slce_sol_posnr,\n    tax_subject_st as tax_subject_to_substituicao_tributaria,\n    gewei as weight_uom_id,\n    revacc_refid as revenue_accounting_reference_id,\n    oic_porgin as tax_origin,\n    sobkz as special_stock_id,\n    vpwrk as planning_plant_id,\n    waerk as sd_document_currency_id,\n    mod_allow as modification_allowed,\n    umzin as umzin,\n    magrv as matl_grp_pack_matls_id,\n    oic_pbatch as pipe_ex_batch_no,\n    bonus as volume_rebate_group_id,\n    sloctype as location_type,\n    oiedbal_im as ed_balance_indicator,\n    fsh_vas_prnt_id as sd_item_id,\n    ablfz as rounding_quantity_delivery,\n    taxm3 as taxm3,\n    pstyv as sales_document_item_category_id,\n    _xlso_course_eda as _xlso_course_eda,\n    fiscal_incentive as tax_incentive_type_id,\n    oic_mot as mode_transport_id,\n    oic_oregio as origin_region_id,\n    fistl as funds_center_id,\n    vpmat as planning_material_id,\n    awahr as order_probability_the_item,\n    kpein as condition_pricing_unit,\n    voleh as volume_uom_id,\n    werks as plant_own_or_external_id,\n    oicertf1 as oicertf1,\n    knumh as no_cond_rec_batch,\n    taxm2 as taxm2,\n    fsh_psm_pfm_split as psm_and_pfm_split_id,\n    tc_aut_det as tax_code_automatically_determined_id,\n    serail as serial_number_profile_id,\n    kosch as product_allocation_id,\n    oid_miscdl as miscellaneous_delivery_number,\n    oih_lictp_ex as license_type_id,\n    paobjnr as profitability_segment_no,\n    ps_psp_pnr as wbs_element_id,\n    rkfkf as billing_meth_co_ppc,\n    sktof as cash_discount_indicator,\n    fkrel as relevant_billing,\n    oihantyp as oihantyp,\n    _slce_sol_matnr as _slce_sol_matnr,\n    oiplantd as is_oil_plant_determ,\n    lstanr as free_goods_delivery_control,\n    _dataaging as filter_value_aging_date,\n    cpd_updat as time_stamp,\n    oic_drcreg as drc_region_id,\n    bedae as requirements_type_id,\n    manual_tc_reason as manual_tax_code_reason_id,\n    spcsto as nf_cfop_special_case_id,\n    aedat as changed_date,\n    z_prs_offshore as on_near_offshore_delivery_type,\n    kzwi1 as subtotal_1_val,\n    oiedok as excise_duty_validation_indicator,\n    fsh_pqr_uepos as higher_lev_item_partial_quantity_rej_id,\n    handovertime as handover_tim,\n    xchpf as xchpf,\n    oibwtar_im as oibwtar_im,\n    shkzg as returns_item,\n    _slce_sol_cuobj as _slce_sol_cuobj,\n    aufpl_olc as operation_task_list_no,\n    ntgew as net_weight_the_item,\n    vgtyp as preceding_doc_categ,\n    stockloc as location,\n    pmatn as pricing_reference_material_id,\n    sernr as bom_explosion_number_id,\n    taxm4 as taxm4,\n    kalnr as cost_estimate_number_id,\n    oiexgnum as exchange_agreement_number_id,\n    erlre as completion_rule,\n    oiexgtyp as exchange_type_id,\n    oitaxto_im as tax_key_to_id,\n    kzbws as special_stock_valuation,\n    _accgo_is_co_rel as _accgo_is_co_rel,\n    pargb as trading_partba_id,\n    oimetind as metropolitan_indicator_id,\n    oih_folqty as _2nd_license_qty,\n    oic_truckn as truck_number,\n    uebtk as unlimited_overdelivery_allowed,\n    arsnum as reservation_id,\n    kdmat as material_number_used_by_customer,\n    bpn as business_partner_number_id,\n    mvgr1 as material_group_1_id,\n    voref as complete_reference_indicator,\n    erzet as created_tim,\n    arktx as short_text_sales_order_item,\n    cmpnt as credit_funct_active,\n    oihnotlgort as storage_loc_id,\n    uepos as higher_level_item_id,\n    stdat as key_the_bill_material_date,\n    stcur as exchange_rate_stats,\n    oitaxfrom_ex as oitaxfrom_ex,\n    fiscal_incentive_id as incentive_id,\n    _slce_single_conf_done as _slce_single_conf_done,\n    klmeng as cumul_confirmed_qty,\n    zmeng as target_quantity_in_sales_units,\n    oidrc as differ_refer_code_id,\n    pay_method as payment_methods,\n    _slce_sol_ext_guid as _slce_sol_ext_guid,\n    kzwi2 as subtotal_2_val,\n    oibypass as is_oil_plt_det_ind,\n    fsh_item_group as item_group,\n    aufpl_oaa as aufpl_oaa,\n    kwmeng as order_quantity,\n    oih_lcfol_ex as oih_lcfol_ex,\n    koupd as condition_update,\n    fsh_grid_cond_rec as grid_condition_number,\n    techs as standard_variant,\n    matnr as material_id,\n    wgru1 as material_group_hierarchy_1,\n    oitaxfrom as oitaxfrom,\n    taxm5 as taxm5,\n    kztlf as partial_delivery_at_item_level,\n    iuid_relevant as iuid_relevant_customer,\n    oic_kmpos as ref_contract_item,\n    z_prs_country as country_key_id,\n    gsber as business_area_id,\n    oipricie_ex as oipricie_ex,\n    fsh_crsd as condition_no,\n    fsh_transaction as transaction_number,\n    grkor as delivery_group,\n    uepvw as id_higher_level_item_usage,\n    mfrgr as material_freight_group_id,\n    vbelv as originating_document_id,\n    untto as underdelivery_tolerance_limit,\n    plavo as plandelschedinstruct_id,\n    vpzuo as allocation_indicator,\n    mvgr3 as material_group_3_id,\n    sugrd as reason_material_substitution_id,\n    oic_ptrip as pipeline_trip_number_external,\n    oic_adestn as alternate_destination,\n    oic_oland1 as origin_country_id,\n    mvgr2 as material_group_2_id,\n    netpr as net_price_val,\n    oicontnr as outline_agreement_contract_id,\n    stman as inconsistent_configuration,\n    oiedbal_ex as oiedbal_ex,\n    j_1btaxlw3 as iss_tax_law_id,\n    _slce_single_conf_reqired as _slce_single_conf_reqired,\n    oinetcyc as netting_cycle_id,\n    prsok as pricing_is_ok,\n    vgpos as reference_item_id,\n    cuobj_ch as internal_object_no,\n    oic_pdestn as tax_destination,\n    rep_freq as reporting_frequency,\n    lsmeng as required_deliv_qty,\n    stpoz as stpoz,\n    kzwi3 as subtotal_3_val,\n    posar as item_type,\n    budget_pd as budget_period_id,\n    z_prs_chargelevl as staff_grade,\n    posnv as originating_item_id,\n    wgru2 as material_group_hierarchy_2,\n    oifeetot as fee_total_val,\n    oic_dregio as destination_region_id,\n    oih_licin_ex as oih_licin_ex,\n    oioilcon as oil_content_perc,\n    aufnr as order_id,\n    sgt_rcat as requirement_segment,\n    oidmsg_uom as unit_measure_msg,\n    oibasprod as base_product_number_id,\n    msr_refund_code as returns_refund_code_id,\n    cuobj as configuration,\n    kbver as deviation_in_percent,\n    sposn as bom_item_number,\n    fsh_season_year as season_year_id,\n    zzdea_license as dea_number,\n    taxm6 as taxm6,\n    mprok as status_manual_price_change,\n    provg as commission_group_id,\n    oitaxto as oitaxto,\n    cmkua as cred_exch_rate,\n    cmtfg as partial_release,\n    oid_extbol as external_bill_lading,\n    ukonm as mnitem_matpricinggrp_id,\n    mvgr4 as material_group_4_id,\n    kmein as condition_uom_id,\n    klvar as costing_variant_id,\n    prs_sd_spsnr as standard_wbs_element_id,\n    mwsbp as tax_amount_document_currency_val,\n    revacc_reftype as rev_acc_reference_type,\n    wrf_charstc1 as characteristic_value_1,\n    fsh_item as item_number,\n    skopf as assortment_module_id,\n    oibwtar_ex as oibwtar_ex,\n    prodh as product_hierarchy_id,\n    stkey as origin_the_bill_material,\n    j_1btaxlw4 as cofins_tax_law_id,\n    route as route_id,\n    _xlso_course_bda as _xlso_course_bda,\n    matkl as material_group_id,\n    oic_drctry as drc_country_id,\n    kalvar as kalvar,\n    lfrel as item_is_relevant_delivery,\n    kmpmg as component_quantity,\n    kzwi4 as subtotal_4_val,\n    wtysc_clmitem as claim_item_number,\n    fmeng as quantity_is_fixed,\n    nrab_knumh as condition_number,\n    oitaxto_ex as oitaxto_ex,\n    cmpre as item_credit_price_val,\n    handoverdate as handover_date,\n    nachl as no_gr_posted_by_cst,\n    abdat as reconciliation_date,\n    kondm as material_pricing_group_id,\n    oic_dland1 as destination_country_id,\n    cmpre_flt as item_credit_price,\n    taxm7 as taxm7,\n    ferc_ind as regulatory_indicator_id,\n    oifeech as fee_edit_control,\n    oih_folqty_ex as oih_folqty_ex,\n    prctr as profit_center_id,\n    eannr as ean_number,\n    zschl_k as overhead_key,\n    oislf as state_license_fee_zone_id,\n    pctrf as profit_center_billing_id,\n    fsh_vas_rel as vas_relevant,\n    mvgr5 as material_group_5_id,\n    fkber as functional_area_id,\n    vbeav as var_processing_time,\n    zwert as oa_target_val,\n    antlf as max_part_deliveries,\n    cancel_allow as cancellation_allowed,\n    fsh_searef as copied_season,\n    oipricie as oipricie,\n    wrf_charstc2 as characteristic_value_2,\n    upflu as update_document_flow,\n    oihcotdisch as imp_posting_at_pod,\n    oidmsg_shp as ship_to_party_msg,\n    grant_nbr as _grant,\n    oidmsg_trm as payment_terms_msg,\n    umref as conversion_factor_quantities,\n    kzwi6 as subtotal_6_val,\n    knttp as account_assignment_category_id,\n    j_1btaxlw5 as pis_tax_law_id,\n    stlnr as bill_material,\n    vkaus as usage_id,\n    erdat as created_date,\n    kzwi5 as subtotal_5_val,\n    fsh_theme as fashion_theme_id,\n    fsh_season as season_id,\n    zieme as target_quantity_uom_uom_id,\n    oipsdrc as pricing_drc_id,\n    uebto as overdelivery_tolerance_limit,\n    grpos as alternative_to_item,\n    chmvs as quantity_proposal,\n    oihantyp_im as oihantyp_im,\n    abges as guaranteed,\n    oihnotwerks as cross_excise_duty_plant_id,\n    z_prs_bill_flag as billable_non_billable,\n    abgrs as results_analysis_key_id,\n    taxm8 as taxm8,\n    objnr as object_number_at_item_level_id,\n    volum as volume_the_item,\n    oiinex_ex as ed_pricing_key_id,\n    j_1btaxlw1 as icms_law_id,\n    j_1bcfop as cfop_code_and_extension_id,\n    kowrr as statistical_values,\n    fixmg as delivery_date_and_quantity_fixed,\n    _xlso_course_id as _xlso_course_id,\n    fmfgus_key as us_government_fields,\n    atpkz as replacement_part,\n    oifeedt as fee_pricing_condition_date,\n    meins as base_uom_id,\n    oiinex as oiinex,\n    msr_ret_reason as return_reason_id,\n    handoverloc as handover_location,\n    lfmng as minimum_delivery_qty,\n    ktgrm as acct_assignment_grp_id,\n    oia_baselo as base_location,\n    betc as business_event_type_code,\n    wrf_charstc3 as characteristic_value_3,\n    oiedbalm_im as oiedbalm_im,\n    oihtaxrcp_ex as tax_recipient,\n    oic_ocounc as origin_county_code_id,\n    exart as bus_transaction_type_id,\n    fsh_vasref as copied_vas,\n    oiwap as wide_area_pricing_zone_id,\n    vgbel as reference_document_id,\n    kannr as kanban_sequence_number,\n    sumbd as summing_up_requirements,\n    oidmsg_prd as products_message,\n    posex as purchase_order_item,\n    oitaxgrp_im as oitaxgrp_im,\n    oic_ocityc as origin_city_code_id,\n    oid_ship as ship_to_party_id,\n    prosa as id_material_determination,\n    berid as mrp_area_id,\n    logsys_ext as logical_system_id,\n    oipipeval as val_ind_pipeline,\n    oitaxgrp as oitaxgrp,\n    vrkme as sales_uom_id,\n    ean11 as ean,\n    taxm9 as taxm9,\n    kzfme as leading_uom,\n    wktps as value_contract_item_id,\n    j_1btaxlw2 as ipi_law_id,\n    oiedbalm as oiedbalm,\n    stpos as bill_material_item_number,\n    anzsn as number_serial_numbers,\n    oisbrel as s_b_prod_relev_ind,\n    oih_lictp as oih_lictp,\n    wavwr as cost_document_currency_val,\n    arspos as item_no_reservation,\n    _bev1_srfund as _bev1_srfund,\n    netwr as net_val,\n    prs_objnr as engagement_mgmt_object_number,\n    kbmeng as kbmeng,\n    prefe as preference_auth,\n    prbme as product_group_uom_id,\n    clint as internal_class_number_id,\n    zzdea_schedule as dea_schedule_key,\n    oiedbal as oiedbal,\n    trmrisk_relevant as risk_relevancy_in_sales,\n    chspl as batch_split_allowed,\n    matwa as material_entered_id,\n    faksp as billing_block_item_id,\n    fonds as fund_id,\n    brgew as gross_weight_the_item,\n    abfor as form_payment_guarantee_id,\n    stadat as statistics_date,\n    vstel as shipping_point_id,\n    mill_se_gposn as global_item_id,\n    lgort as storage_location_id,\n    msr_approv_block as approval_block,\n    cepok as status_expected_price,\n    _fivetran_deleted as _fivetran_deleted,\n    _fivetran_synced as _fivetran_synced,\n    _fivetran_sap_archived as _fivetran_sap_archived\nfrom \"postgres\".\"public_sap_dev\".\"stg_sap__vbap\"\nwhere mandt in ('800')\n)"}, {"id": "model.sap.int_sap__sales_document_header_status", "sql": " __dbt__cte__int_sap__sales_document_header_status as (\n\n\nselect\n    mandt as client_id,\n    vbeln as sales_document_id,\n    rfstk as reference_document_header_status,\n    rfgsk as total_reference_stat,\n    bestk as confirmation_status,\n    lfstk as delivery_status,\n    lfgsk as overall_dlv_status,\n    wbstk as total_goods_movement_status,\n    fkstk as billing_status,\n    fksak as bill_stat_order_rel,\n    buchk as posting_status,\n    abstk as rejection_status,\n    gbstk as overall_status,\n    kostk as overall_picking_putaway_status,\n    lvstk as overall_wm_status,\n    uvals as item,\n    uvvls as item_delivery,\n    uvfas as item_billing,\n    uvall as header,\n    uvvlk as header_delivery,\n    uvfak as header_billing,\n    uvprs as pricing,\n    vbtyp as sd_document_category,\n    vbobj as sd_document_object,\n    \n    case\n        when aedat::text ~ '^[0-9]{8}$'\n            and substring(aedat::text, 5, 2)::int between 1 and 12\n            and substring(aedat::text, 7, 2)::int between 1 and 31\n        then to_date(aedat::text, 'YYYYMMDD')\n        else null\n    end\n as changed_date,\n    fkivk as totals_status,\n    relik as inv_list_status,\n    uvk01 as header_reserves_1,\n    uvk02 as header_reserves_2,\n    uvk03 as header_reserves_3,\n    uvk04 as header_reserves_4,\n    uvk05 as header_reserves_5,\n    uvs01 as total_reserves_1,\n    uvs02 as total_reserves_2,\n    uvs03 as total_reserves_3,\n    uvs04 as total_reserves_4,\n    uvs05 as total_reserves_5,\n    pkstk as packing_status,\n    cmpsa as static_check,\n    cmpsb as dynamic_check,\n    cmpsc as maximum_value,\n    cmpsd as terms_payment,\n    cmpse as customer_review_date,\n    cmpsf as overdue_open_items,\n    cmpsg as oldest_open_items,\n    cmpsh as max_dunning_level,\n    cmpsi as financial_document,\n    cmpsj as expt_cred_insurance,\n    cmpsk as payment_card,\n    cmpsl as reserve,\n    cmps0 as cmps0,\n    cmps1 as cmps1,\n    cmps2 as cmps2,\n    cmgst as overall_status_credit_checks,\n    trsta as transportation_planning_status,\n    koquk as status_pick_confirmation,\n    costa as confirmation_status_ale,\n    saprl as sap_release,\n    uvpas as it_packaging,\n    uvpis as it_picking_putaway,\n    uvwas as item_goods_mvmt,\n    uvpak as head_packaging,\n    uvpik as head_picking_putaway,\n    uvwak as head_goods_mvmt,\n    uvgek as unused,\n    cmpsm as credit_check_is_obsolete,\n    dcstk as delay_status,\n    vestk as handling_unit_placed_in_stock,\n    vlstk as status_decent_whse,\n    rrsta as revenue_determination_status,\n    block as block,\n    fsstk as overall_billing_block_status,\n    lsstk as overall_delivery_block_status,\n    spstg as overall_blocked_status,\n    pdstk as pod_status_on_header_level,\n    fmstk as status_funds_management,\n    manek as manual_completion_contract,\n    spe_tmpid as temporary_inbound_delivery,\n    hdall as on_hold,\n    hdals as pos_hold,\n    cmps_cm as sap_credit_management,\n    cmps_te as credit_mgmt_te_status,\n    vbtyp_ext as doc_cat_extension,\n    fsh_ar_stat_hdr as arun_status_at_header,\n    hvr_is_deleted as hvr_is_deleted,\n    hvr_change_time as hvr_change_time\nfrom \"postgres\".\"public_sap_dev\".\"stg_sap__vbuk\"\nwhere mandt in ('800')\n)"}, {"id": "model.sap.int_sap__sales_document_item_status", "sql": " __dbt__cte__int_sap__sales_document_item_status as (\n\n\nselect\n    mandt as client_id,\n    posnr as sd_item_id,\n    vbeln as sales_document_id,\n    uvpak as item_packaging,\n    uvvlk as item_deliv,\n    mill_vs_vssta as status_sales_order_item,\n    pksta as packing_status_item,\n    lssta as delivery_block_status_item,\n    vlstp as decentralized_whse_processing,\n    absta as rejection_status_sd_item,\n    fksta as billing_status,\n    fkivp as intercompany_billing_status,\n    lfgsa as overall_deliv_status,\n    rrsta as revenue_determination_status,\n    lfsta as delivery_status,\n    fksaa as ord_related_bill_st,\n    wbsta as goods_movement_status,\n    ltsps as stockable_type_switched_into_stand_prod,\n    costa as confirmation_status_ale,\n    fssta as billing_block_status_items,\n    kosta as picking_status_putaway_status,\n    uvpik as item_picking_putaway,\n    uvfak as item_billing,\n    uvall as item,\n    rfgsa as overall_status_reference,\n    uvprs as pricing_item_is_incomplete,\n    lvsta as wm_activity_status,\n    rfsta as reference_status,\n    cmppj as expt_cred_insurance,\n    cmppi as financial_document,\n    hdall as delivery_item_not_complete,\n    besta as confirmed,\n    pdsta as pod_status_on_item_level,\n    fsh_ar_stat_itm as arun_status_item_level,\n    manek as manual_completion_contract,\n    gbsta as overall_status,\n    uvwak as item_goods_mvmt,\n    dcsta as delay_status,\n    uvp05 as customer_reserves_5_item_status,\n    uvp02 as customer_reserves_2_item_status,\n    uvp04 as item_reserves_4_item_status,\n    koqua as pick_confirmation,\n    uvp01 as customer_reserves_1_item_status,\n    uvp03 as item_reserves_3_item_status,\n    _fivetran_deleted as _fivetran_deleted,\n    _fivetran_synced as _fivetran_synced,\n    _fivetran_sap_archived as _fivetran_sap_archived\nfrom \"postgres\".\"public_sap_dev\".\"stg_sap__vbup\"\nwhere mandt in ('800')\n)"}], "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null, "primary_key": [], "time_spine": null}, "model.sap.sap__dim_purchasing_order": {"database": "postgres", "schema": "public_sap_dev", "name": "sap__dim_purchasing_order", "resource_type": "model", "package_name": "sap", "path": "sales_and_procurement/star_schema/sap__dim_purchasing_order.sql", "original_file_path": "models/sales_and_procurement/star_schema/sap__dim_purchasing_order.sql", "unique_id": "model.sap.sap__dim_purchasing_order", "fqn": ["sap", "sales_and_procurement", "star_schema", "sap__dim_purchasing_order"], "alias": "sap__dim_purchasing_order", "checksum": {"name": "sha256", "checksum": "94c100ef1e03e1e60dd6d08faf300d29092909a8a6bac94fbb3c5a2cababd5cd"}, "config": {"enabled": true, "alias": null, "schema": "sap_dev", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "freshness": null}, "tags": [], "description": "Purchasing document header attributes", "columns": {"purchasing_document_id": {"name": "purchasing_document_id", "description": "Unique ID of the purchasing document", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "purchasing_document_category": {"name": "purchasing_document_category", "description": "Category code of the purchasing document", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "purchasing_document_category_txt": {"name": "purchasing_document_category_txt", "description": "Description of the document category", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "purchasing_document_type_id": {"name": "purchasing_document_type_id", "description": "Document type code (e.g. NB, FO)", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "purchasing_document_type_text": {"name": "purchasing_document_type_text", "description": "Description of the purchasing document type", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "purchasing_group_id": {"name": "purchasing_group_id", "description": "ID of the purchasing group", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "description_purchasing_group": {"name": "description_purchasing_group", "description": "Description of the purchasing group", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "purchasing_document_status": {"name": "purchasing_document_status", "description": "Status code of the purchasing document", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "purchasing_document_status_txt": {"name": "purchasing_document_status_txt", "description": "Description of document status", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "payment_terms": {"name": "payment_terms", "description": "Terms of payment key", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "reason_cancellation_id": {"name": "reason_cancellation_id", "description": "Reason code for cancellation", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "company_code_id": {"name": "company_code_id", "description": "Company code associated with the document", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": "sap://models/sales_and_procurement/star_schema/sales_and_procurement.yml", "build_path": null, "unrendered_config": {"materialized": "table", "schema": "sap_{{ var('directed_schema','dev') }}", "enabled": true}, "created_at": 1756850330.591045, "relation_name": "\"postgres\".\"public_sap_dev\".\"sap__dim_purchasing_order\"", "raw_code": "{% set using_purchasing_document_header = var('sap_using_ekko', True) %}\n{% set using_purchasing_document_category = var('sap_using_dd07l', True) %}\n{% set using_purchasing_document_type = var('sap_using_t161', True) %}\n{% set using_purchasing_group = var('sap_using_t024', True) %}\n{% set using_purchasing_document_status = var('sap_using_dd07l', True) %}\n\n{{ config(enabled=using_purchasing_document_header) }}\n\nwith purchasing_document_header as (\n    select *\n    from {{ ref('int_sap__purchasing_document_header') }}\n)\n\n{% if using_purchasing_document_category %}\n, purchasing_document_category as (\n    select *\n    from {{ ref('int_sap__purchasing_document_category') }}\n)\n{% endif %}\n\n{% if using_purchasing_document_type %}\n, purchasing_document_type as (\n    select *\n    from {{ ref('int_sap__purchasing_document_type') }}\n)\n{% endif %}\n\n{% if using_purchasing_group %}\n, purchasing_group as (\n    select *\n    from {{ ref('int_sap__purchasing_group') }}\n)\n{% endif %}\n\n{% if using_purchasing_document_status %}\n, purchasing_document_status as (\n    select *\n    from {{ ref('int_sap__purchasing_document_status') }}\n)\n{% endif %}\n\n, final as (\n    select\n        purchasing_document_header.purchasing_document_id,\n        purchasing_document_header.purchasing_document_category,\n        purchasing_document_header.purchasing_document_type_id,\n        purchasing_document_header.purchasing_group_id,\n        purchasing_document_header.status_purchasing_document as purchasing_document_status,\n        purchasing_document_header.payment_terms,\n        purchasing_document_header.reason_cancellation_id,\n        purchasing_document_header.company_code_id\n\n        {% if using_purchasing_document_category %}\n        , purchasing_document_category.purchasing_document_category_txt\n        {% endif %}\n\n        {% if using_purchasing_document_type %}\n        , purchasing_document_type.doc_type_descript as purchasing_document_type_text\n        {% endif %}\n\n        {% if using_purchasing_group %}\n        , purchasing_group.description_purchasing_group\n        {% endif %}\n\n        {% if using_purchasing_document_status %}\n        , purchasing_document_status.document_status_txt as purchasing_document_status_txt\n        {% endif %}\n\n    from purchasing_document_header\n\n    {% if using_purchasing_document_category %}\n    left join purchasing_document_category\n        on purchasing_document_header.purchasing_document_category = purchasing_document_category.purchasing_document_category_id  \n    {% endif %}\n\n    {% if using_purchasing_document_type %}\n    left join purchasing_document_type\n        on purchasing_document_header.purchasing_document_type_id = purchasing_document_type.purchasing_document_type_id \n        and purchasing_document_type.purch_doc_category_id = purchasing_document_header.purchasing_document_category \n    {% endif %}\n\n    {% if using_purchasing_group %}\n    left join purchasing_group\n        on purchasing_group.purchasing_group_id = purchasing_document_header.purchasing_group_id \n    {% endif %}\n\n    {% if using_purchasing_document_status %}\n    left join purchasing_document_status\n        on purchasing_document_status.document_status_id = purchasing_document_header.status_purchasing_document\n    {% endif %}\n)\n\nselect *\nfrom final", "doc_blocks": [], "language": "sql", "refs": [{"name": "int_sap__purchasing_document_header", "package": null, "version": null}, {"name": "int_sap__purchasing_document_category", "package": null, "version": null}, {"name": "int_sap__purchasing_document_type", "package": null, "version": null}, {"name": "int_sap__purchasing_group", "package": null, "version": null}, {"name": "int_sap__purchasing_document_status", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": [], "nodes": ["model.sap.int_sap__purchasing_document_header", "model.sap.int_sap__purchasing_document_category", "model.sap.int_sap__purchasing_document_type", "model.sap.int_sap__purchasing_group", "model.sap.int_sap__purchasing_document_status"]}, "compiled_path": "target/compiled/sap/models/sales_and_procurement/star_schema/sap__dim_purchasing_order.sql", "compiled": true, "compiled_code": "\n\n\n\n\n\n\n\nwith  __dbt__cte__int_sap__purchasing_document_header as (\n\n\nselect\n    mandt as client_id,\n    ebeln as purchasing_document_id,\n    bukrs as company_code_id,\n    bstyp as purchasing_document_category,\n    bsart as purchasing_document_type_id,\n    bsakz as control_indicator,\n    loekz as deletion_indicator,\n    statu as status_purchasing_document,\n    \n    case\n        when aedat::text ~ '^[0-9]{8}$'\n            and substring(aedat::text, 5, 2)::int between 1 and 12\n            and substring(aedat::text, 7, 2)::int between 1 and 31\n        then to_date(aedat::text, 'YYYYMMDD')\n        else null\n    end\n as created_date,\n    ernam as created_by,\n    pincr as item_number_interval,\n    lponr as last_item_number_id,\n    lifnr as vendor_id,\n    spras as language_key_id,\n    zterm as payment_terms,\n    zbd1t as payment_in,\n    zbd2t as zbd2t,\n    zbd3t as zbd3t,\n    zbd1p as cash_discount_percentage_1,\n    zbd2p as cash_discount_percentage_2,\n    ekorg as purchasing_organization_id,\n    ekgrp as purchasing_group_id,\n    waers as currency_id,\n    wkurs as exchange_rate,\n    kufix as exchange_rate_fixed,\n    \n    case\n        when bedat::text ~ '^[0-9]{8}$'\n            and substring(bedat::text, 5, 2)::int between 1 and 12\n            and substring(bedat::text, 7, 2)::int between 1 and 31\n        then to_date(bedat::text, 'YYYYMMDD')\n        else null\n    end\n as purchasing_document_date,\n    \n    case\n        when kdatb::text ~ '^[0-9]{8}$'\n            and substring(kdatb::text, 5, 2)::int between 1 and 12\n            and substring(kdatb::text, 7, 2)::int between 1 and 31\n        then to_date(kdatb::text, 'YYYYMMDD')\n        else null\n    end\n as start_validity_period_date,\n    \n    case\n        when kdate::text ~ '^[0-9]{8}$'\n            and substring(kdate::text, 5, 2)::int between 1 and 12\n            and substring(kdate::text, 7, 2)::int between 1 and 31\n        then to_date(kdate::text, 'YYYYMMDD')\n        else null\n    end\n as end_validity_period_date,\n    \n    case\n        when bwbdt::text ~ '^[0-9]{8}$'\n            and substring(bwbdt::text, 5, 2)::int between 1 and 12\n            and substring(bwbdt::text, 7, 2)::int between 1 and 31\n        then to_date(bwbdt::text, 'YYYYMMDD')\n        else null\n    end\n as closing_applications_date,\n    \n    case\n        when angdt::text ~ '^[0-9]{8}$'\n            and substring(angdt::text, 5, 2)::int between 1 and 12\n            and substring(angdt::text, 7, 2)::int between 1 and 31\n        then to_date(angdt::text, 'YYYYMMDD')\n        else null\n    end\n as quotation_deadline_date,\n    \n    case\n        when bnddt::text ~ '^[0-9]{8}$'\n            and substring(bnddt::text, 5, 2)::int between 1 and 12\n            and substring(bnddt::text, 7, 2)::int between 1 and 31\n        then to_date(bnddt::text, 'YYYYMMDD')\n        else null\n    end\n as binding_period_quotation_date,\n    \n    case\n        when gwldt::text ~ '^[0-9]{8}$'\n            and substring(gwldt::text, 5, 2)::int between 1 and 12\n            and substring(gwldt::text, 7, 2)::int between 1 and 31\n        then to_date(gwldt::text, 'YYYYMMDD')\n        else null\n    end\n as warranty_date,\n    ausnr as bid_invitation_number_id,\n    angnr as quotation_number,\n    \n    case\n        when ihran::text ~ '^[0-9]{8}$'\n            and substring(ihran::text, 5, 2)::int between 1 and 12\n            and substring(ihran::text, 7, 2)::int between 1 and 31\n        then to_date(ihran::text, 'YYYYMMDD')\n        else null\n    end\n as quotation_submission_date,\n    ihrez as your_reference,\n    verkf as salesperson,\n    telf1 as vendors_telephone_number,\n    llief as supplying_vendor_id,\n    kunnr as customer_id,\n    konnr as outline_agreement_id,\n    abgru as field_not_used,\n    autlf as complete_delivery,\n    weakt as indicator_goods_receipt_message,\n    reswk as supplying_plant_id,\n    lblif as field_not_used_id,\n    inco1 as incoterms_id,\n    inco2 as incoterms_part_2,\n    ktwrt as target_header_val,\n    submi as collective_number,\n    knumv as document_condition_no,\n    kalsm as procedure_id,\n    stafo as update_group_stats_id,\n    lifre as different_invoicing_party_id,\n    exnum as number_foreign_trade_id,\n    unsez as our_reference,\n    logsy as logical_system_id,\n    upinc as subitem_interval,\n    stako as time_dep_conditions,\n    frggr as release_group_id,\n    frgsx as release_strategy_id,\n    frgke as release_indicator_id,\n    frgzu as release_state,\n    frgrl as subject_to_release,\n    lands as country_tax_return_id,\n    lphis as rel_documentation,\n    adrnr as address_number_id,\n    stceg_l as country_sales_tax_id_number_id,\n    stceg as vat_registration_no,\n    absgr as reason_cancellation_id,\n    addnr as document_number_additional,\n    kornr as corr_misc_provis,\n    memory as purchase_order_not_yet_complete,\n    procstat as purch_doc_proc_state,\n    rlwrt as total_at_time_release_val,\n    revno as version_number_in_purchasing,\n    scmproc as scmproc,\n    reason_code as goods_receipt_reason_code,\n    memorytype as category_incompleteness,\n    rettp as retention_indicator,\n    retpc as retention_in_percent,\n    dptyp as down_payment_indicator,\n    dppct as down_payment_percentage,\n    dpamt as down_payment_amount_val,\n    \n    case\n        when dpdat::text ~ '^[0-9]{8}$'\n            and substring(dpdat::text, 5, 2)::int between 1 and 12\n            and substring(dpdat::text, 7, 2)::int between 1 and 31\n        then to_date(dpdat::text, 'YYYYMMDD')\n        else null\n    end\n as due_down_payment_date,\n    msr_id as process_identification_number,\n    hierarchy_exists as part_contract_hierarchy,\n    threshold_exists as threshold_value_exchange_rates,\n    legal_contract as legal_contract_number,\n    description as contract_name,\n    \n    case\n        when release_date::text ~ '^[0-9]{8}$'\n            and substring(release_date::text, 5, 2)::int between 1 and 12\n            and substring(release_date::text, 7, 2)::int between 1 and 31\n        then to_date(release_date::text, 'YYYYMMDD')\n        else null\n    end\n as release_contract_date,\n    vsart as shipping_type_id,\n    handoverloc as handover_location,\n    shipcond as shipping_conditions_id,\n    incov as incoterms_version_id,\n    inco2_l as incoterms_location_1,\n    inco3_l as incoterms_location_2,\n    force_id as internal_key_force_element,\n    force_cnt as internal_version_counter,\n    reloc_id as relocation_id,\n    reloc_seq_id as relocation_step_id,\n    source_logsys as source_logsys,\n    fsh_transaction as transaction_number,\n    fsh_item_group as item_group,\n    fsh_vas_last_item as last_vas_item_number,\n    fsh_os_stg_change as os_strategy_specific_fields_change,\n    vzskz as interest_calculation_indicator_id,\n    fsh_snst_status as snapshot_status,\n    pohf_type as document_category,\n    \n    case\n        when eq_eindt::text ~ '^[0-9]{8}$'\n            and substring(eq_eindt::text, 5, 2)::int between 1 and 12\n            and substring(eq_eindt::text, 7, 2)::int between 1 and 31\n        then to_date(eq_eindt::text, 'YYYYMMDD')\n        else null\n    end\n as same_delivery_date,\n    eq_werks as same_plant_id,\n    fixpo as firm_deal_indicator,\n    ekgrp_allow as take_account_purch_group,\n    werks_allow as take_account_plants,\n    contract_allow as take_account_contracts,\n    pstyp_allow as take_account_item_categories,\n    fixpo_allow as take_account_fixed_date_purchases,\n    key_id_allow as consider_budget,\n    aurel_allow as take_account_alloc_table_relevance,\n    delper_allow as take_account_dlvy_period,\n    eindt_allow as take_account_delivery_date,\n    ltsnr_allow as include_vendor_subrange,\n    otb_level as otb_check_level,\n    otb_cond_type as otb_condition_type_id,\n    key_id as unique_number_budget,\n    otb_value as required_budget_val,\n    otb_curr as otb_currency_id,\n    otb_res_value as reserved_budget_val,\n    otb_spec_value as special_release_budget_val,\n    spr_rsn_profile as otb_reason_profile_special_release,\n    budg_type as budget_type,\n    otb_status as otb_check_status,\n    otb_reason as reason,\n    check_type as type_otb_check,\n    con_otb_req as otb_relevant_contract,\n    con_prebook_lev as indicator_level_contracts,\n    con_distr_lev as distrib_using_target_value_or_item,\n    hvr_is_deleted as hvr_is_deleted,\n    hvr_change_time as hvr_change_time\nfrom \"postgres\".\"public_sap_dev\".\"stg_sap__ekko\"\nwhere mandt in ('800')\n),  __dbt__cte__int_sap__purchasing_document_category as (\n\n\nwith dd07l as (\n    select *\n    from \"postgres\".\"public_sap_dev\".\"stg_sap__dd07l\"\n\n\n\n), dd07t as (\n    select *\n    from \"postgres\".\"public_sap_dev\".\"stg_sap__dd07t\"\n\n\n), final as (\n    select \n        dd07l.domvalue_l as purchasing_document_category_id,\n        dd07l.hvr_change_time as hvr_change_time,\n        dd07t.ddtext as purchasing_document_category_txt\n    from dd07l\n\n    \n    left join dd07t\n        on dd07l.domname = dd07t.domname\n        and dd07l.domvalue_l = dd07t.domvalue_l\n        and dd07l.as4vers = dd07t.as4vers\n        and dd07t.ddlanguage in ('e')\n    \n\n    where dd07l.domname = 'bstyp'\n        and dd07l.as4vers = '0000'\n)\n\nselect *\nfrom final\n),  __dbt__cte__int_sap__purchasing_document_type as (\n\n\nwith t161 as (\n    select *\n    from \"postgres\".\"public_sap_dev\".\"stg_sap__t161\"\n\n\n\n), t161t as (\n    select *\n    from \"postgres\".\"public_sap_dev\".\"stg_sap__t161t\"\n\n\n), final as (\n    select\n        t161.mandt as client_id,\n        t161.bstyp as purch_doc_category_id,\n        t161.bsart as purchasing_document_type_id,\n        t161.bsakz as control_indicator,\n        t161.pincr as item_number_interval,\n        t161.numki as no_range_int_assgt,\n        t161.numke as no_range_ext_assg,\n        t161.brefn as field_selection_key_id,\n        t161.refba as reference_document_type_id,\n        t161.abvor as stdrd_rel_order_qty,\n        t161.stafo as update_group_stats_id,\n        t161.upinc as subitem_interval,\n        t161.stako as time_dep_conditions,\n        t161.pargr as partner_determination_procedure_id,\n        t161.numka as number_range_ale,\n        t161.hityp as vendor_hierarchy_cat_id,\n        t161.lphis as rel_documentation,\n        t161.gsfrg as overall_release_requisitions,\n        t161.variante as layout,\n        t161.shenq as shared_lock_only,\n        t161.kzale as distributed_contract_ale,\n        t161.abgebot as global_perc_bid,\n        t161.kornr as corr_misc_provis,\n        t161.umlif as vendor,\n        t161.koett as contract_with_delivery_schedule,\n        t161.ar_object as document_type_id,\n        t161.koako as koako,\n        t161.oicsegi as qty_sched_permitted,\n        t161.oirfqreq as precedence_f_rfq_req,\n        t161.wvvkz as further_processing_summar_docs,\n        t161.xlokz as cross_system_transit,\n        t161.cp_aktive as commitment_plan_is_active,\n        t161.cptype as category_commitment_plan,\n        t161.fls_rsto as enh_store_return,\n        t161.msr_active as adv_returns_active,\n        t161.rdp_profile as risk_distribution_plan_profile_id,\n        t161.numkc as srm_contract_number_range,\n        t161._sapmp_ceact as sapmp_fastentry_chars_is_active,\n        t161._sapmp_pdact as sapmp_activate_inheritance,\n        t161._sapmp_pprot as sapmp_inheritance_log,\n        t161._sapmp_puser as sapmp_inheritance_overwrite_user_values,\n        t161._sapmp_pausw as sapmp_inheritance_char_selection_list,\n        t161._sapmp_atnam as sapmp_characteristic_name,\n        t161._sapmp_gauf as sapmp_global_local_group_may_be_undone,\n        t161.tolsl as tolerance_key_id,\n        t161.fsh_vas_act as vas_active_flag,\n        t161.fsh_vas_kalsm as determination_procedure,\n        t161.fsh_vas_del as vas_deletion_criteria,\n        t161.fsh_vas_detdt as date_vas_determination,\n        t161.fsh_excl_return as exclude_return_items,\n        t161.fsh_var_kalsm as determination_procedure_id,\n        t161.fsh_dpr_detpro as fsh_dpr_detpro,\n        t161.fsh_po_idoc as generic_article_in_po_using_idoc,\n        t161.mill_omkz as use_ref_characteristics,\n        t161.wrf_enable_dateline as enable_dateline,\n        t161.hvr_is_deleted as hvr_is_deleted,\n        t161.hvr_change_time as hvr_change_time,\n        t161t.batxt as doc_type_descript\n    from t161\n\n    \n    left join t161t\n        on t161.mandt = t161t.mandt\n        and t161.bsart = t161t.bsart\n        and t161.bstyp = t161t.bstyp\n        and t161t.spras = 'e'\n    \n\n    where t161.mandt in ('800')\n)\n\nselect *\nfrom final\n),  __dbt__cte__int_sap__purchasing_group as (\n\n\nselect\n    ekgrp as purchasing_group_id,\n    mandt as client_id,\n    tel_number as telephone,\n    telfx as fax_number,\n    ldest as spool_output_device_id,\n    ektel as tel_no_purch_group,\n    smtp_addr as e_mail_address,\n    tel_extens as telephone_no_extension,\n    eknam as description_purchasing_group,\n    _fivetran_deleted as _fivetran_deleted,\n    _fivetran_synced as _fivetran_synced,\n    _fivetran_sap_archived as _fivetran_sap_archived\nfrom \"postgres\".\"public_sap_dev\".\"stg_sap__t024\"\nwhere mandt in ('800')\n),  __dbt__cte__int_sap__purchasing_document_status as (\n\n\nwith dd07l as (\n    select *\n    from \"postgres\".\"public_sap_dev\".\"stg_sap__dd07l\"\n\n\n\n), dd07t as (\n    select *\n    from \"postgres\".\"public_sap_dev\".\"stg_sap__dd07t\"\n\n\n), final as (\n    select \n        dd07l.domvalue_l as document_status_id,\n        dd07l.hvr_change_time as hvr_change_time,\n        dd07t.ddtext as document_status_txt\n    from dd07l\n\n    \n    left join dd07t\n        on dd07l.domname = dd07t.domname\n        and dd07l.domvalue_l = dd07t.domvalue_l\n        and dd07l.as4vers = dd07t.as4vers\n        and dd07t.ddlanguage in ('e')\n    \n\n    where dd07l.domname = 'statv'\n        and dd07l.as4vers = '0000'\n)\n\nselect *\nfrom final\n), purchasing_document_header as (\n    select *\n    from __dbt__cte__int_sap__purchasing_document_header\n)\n\n\n, purchasing_document_category as (\n    select *\n    from __dbt__cte__int_sap__purchasing_document_category\n)\n\n\n\n, purchasing_document_type as (\n    select *\n    from __dbt__cte__int_sap__purchasing_document_type\n)\n\n\n\n, purchasing_group as (\n    select *\n    from __dbt__cte__int_sap__purchasing_group\n)\n\n\n\n, purchasing_document_status as (\n    select *\n    from __dbt__cte__int_sap__purchasing_document_status\n)\n\n\n, final as (\n    select\n        purchasing_document_header.purchasing_document_id,\n        purchasing_document_header.purchasing_document_category,\n        purchasing_document_header.purchasing_document_type_id,\n        purchasing_document_header.purchasing_group_id,\n        purchasing_document_header.status_purchasing_document as purchasing_document_status,\n        purchasing_document_header.payment_terms,\n        purchasing_document_header.reason_cancellation_id,\n        purchasing_document_header.company_code_id\n\n        \n        , purchasing_document_category.purchasing_document_category_txt\n        \n\n        \n        , purchasing_document_type.doc_type_descript as purchasing_document_type_text\n        \n\n        \n        , purchasing_group.description_purchasing_group\n        \n\n        \n        , purchasing_document_status.document_status_txt as purchasing_document_status_txt\n        \n\n    from purchasing_document_header\n\n    \n    left join purchasing_document_category\n        on purchasing_document_header.purchasing_document_category = purchasing_document_category.purchasing_document_category_id  \n    \n\n    \n    left join purchasing_document_type\n        on purchasing_document_header.purchasing_document_type_id = purchasing_document_type.purchasing_document_type_id \n        and purchasing_document_type.purch_doc_category_id = purchasing_document_header.purchasing_document_category \n    \n\n    \n    left join purchasing_group\n        on purchasing_group.purchasing_group_id = purchasing_document_header.purchasing_group_id \n    \n\n    \n    left join purchasing_document_status\n        on purchasing_document_status.document_status_id = purchasing_document_header.status_purchasing_document\n    \n)\n\nselect *\nfrom final", "extra_ctes_injected": true, "extra_ctes": [{"id": "model.sap.int_sap__purchasing_document_header", "sql": " __dbt__cte__int_sap__purchasing_document_header as (\n\n\nselect\n    mandt as client_id,\n    ebeln as purchasing_document_id,\n    bukrs as company_code_id,\n    bstyp as purchasing_document_category,\n    bsart as purchasing_document_type_id,\n    bsakz as control_indicator,\n    loekz as deletion_indicator,\n    statu as status_purchasing_document,\n    \n    case\n        when aedat::text ~ '^[0-9]{8}$'\n            and substring(aedat::text, 5, 2)::int between 1 and 12\n            and substring(aedat::text, 7, 2)::int between 1 and 31\n        then to_date(aedat::text, 'YYYYMMDD')\n        else null\n    end\n as created_date,\n    ernam as created_by,\n    pincr as item_number_interval,\n    lponr as last_item_number_id,\n    lifnr as vendor_id,\n    spras as language_key_id,\n    zterm as payment_terms,\n    zbd1t as payment_in,\n    zbd2t as zbd2t,\n    zbd3t as zbd3t,\n    zbd1p as cash_discount_percentage_1,\n    zbd2p as cash_discount_percentage_2,\n    ekorg as purchasing_organization_id,\n    ekgrp as purchasing_group_id,\n    waers as currency_id,\n    wkurs as exchange_rate,\n    kufix as exchange_rate_fixed,\n    \n    case\n        when bedat::text ~ '^[0-9]{8}$'\n            and substring(bedat::text, 5, 2)::int between 1 and 12\n            and substring(bedat::text, 7, 2)::int between 1 and 31\n        then to_date(bedat::text, 'YYYYMMDD')\n        else null\n    end\n as purchasing_document_date,\n    \n    case\n        when kdatb::text ~ '^[0-9]{8}$'\n            and substring(kdatb::text, 5, 2)::int between 1 and 12\n            and substring(kdatb::text, 7, 2)::int between 1 and 31\n        then to_date(kdatb::text, 'YYYYMMDD')\n        else null\n    end\n as start_validity_period_date,\n    \n    case\n        when kdate::text ~ '^[0-9]{8}$'\n            and substring(kdate::text, 5, 2)::int between 1 and 12\n            and substring(kdate::text, 7, 2)::int between 1 and 31\n        then to_date(kdate::text, 'YYYYMMDD')\n        else null\n    end\n as end_validity_period_date,\n    \n    case\n        when bwbdt::text ~ '^[0-9]{8}$'\n            and substring(bwbdt::text, 5, 2)::int between 1 and 12\n            and substring(bwbdt::text, 7, 2)::int between 1 and 31\n        then to_date(bwbdt::text, 'YYYYMMDD')\n        else null\n    end\n as closing_applications_date,\n    \n    case\n        when angdt::text ~ '^[0-9]{8}$'\n            and substring(angdt::text, 5, 2)::int between 1 and 12\n            and substring(angdt::text, 7, 2)::int between 1 and 31\n        then to_date(angdt::text, 'YYYYMMDD')\n        else null\n    end\n as quotation_deadline_date,\n    \n    case\n        when bnddt::text ~ '^[0-9]{8}$'\n            and substring(bnddt::text, 5, 2)::int between 1 and 12\n            and substring(bnddt::text, 7, 2)::int between 1 and 31\n        then to_date(bnddt::text, 'YYYYMMDD')\n        else null\n    end\n as binding_period_quotation_date,\n    \n    case\n        when gwldt::text ~ '^[0-9]{8}$'\n            and substring(gwldt::text, 5, 2)::int between 1 and 12\n            and substring(gwldt::text, 7, 2)::int between 1 and 31\n        then to_date(gwldt::text, 'YYYYMMDD')\n        else null\n    end\n as warranty_date,\n    ausnr as bid_invitation_number_id,\n    angnr as quotation_number,\n    \n    case\n        when ihran::text ~ '^[0-9]{8}$'\n            and substring(ihran::text, 5, 2)::int between 1 and 12\n            and substring(ihran::text, 7, 2)::int between 1 and 31\n        then to_date(ihran::text, 'YYYYMMDD')\n        else null\n    end\n as quotation_submission_date,\n    ihrez as your_reference,\n    verkf as salesperson,\n    telf1 as vendors_telephone_number,\n    llief as supplying_vendor_id,\n    kunnr as customer_id,\n    konnr as outline_agreement_id,\n    abgru as field_not_used,\n    autlf as complete_delivery,\n    weakt as indicator_goods_receipt_message,\n    reswk as supplying_plant_id,\n    lblif as field_not_used_id,\n    inco1 as incoterms_id,\n    inco2 as incoterms_part_2,\n    ktwrt as target_header_val,\n    submi as collective_number,\n    knumv as document_condition_no,\n    kalsm as procedure_id,\n    stafo as update_group_stats_id,\n    lifre as different_invoicing_party_id,\n    exnum as number_foreign_trade_id,\n    unsez as our_reference,\n    logsy as logical_system_id,\n    upinc as subitem_interval,\n    stako as time_dep_conditions,\n    frggr as release_group_id,\n    frgsx as release_strategy_id,\n    frgke as release_indicator_id,\n    frgzu as release_state,\n    frgrl as subject_to_release,\n    lands as country_tax_return_id,\n    lphis as rel_documentation,\n    adrnr as address_number_id,\n    stceg_l as country_sales_tax_id_number_id,\n    stceg as vat_registration_no,\n    absgr as reason_cancellation_id,\n    addnr as document_number_additional,\n    kornr as corr_misc_provis,\n    memory as purchase_order_not_yet_complete,\n    procstat as purch_doc_proc_state,\n    rlwrt as total_at_time_release_val,\n    revno as version_number_in_purchasing,\n    scmproc as scmproc,\n    reason_code as goods_receipt_reason_code,\n    memorytype as category_incompleteness,\n    rettp as retention_indicator,\n    retpc as retention_in_percent,\n    dptyp as down_payment_indicator,\n    dppct as down_payment_percentage,\n    dpamt as down_payment_amount_val,\n    \n    case\n        when dpdat::text ~ '^[0-9]{8}$'\n            and substring(dpdat::text, 5, 2)::int between 1 and 12\n            and substring(dpdat::text, 7, 2)::int between 1 and 31\n        then to_date(dpdat::text, 'YYYYMMDD')\n        else null\n    end\n as due_down_payment_date,\n    msr_id as process_identification_number,\n    hierarchy_exists as part_contract_hierarchy,\n    threshold_exists as threshold_value_exchange_rates,\n    legal_contract as legal_contract_number,\n    description as contract_name,\n    \n    case\n        when release_date::text ~ '^[0-9]{8}$'\n            and substring(release_date::text, 5, 2)::int between 1 and 12\n            and substring(release_date::text, 7, 2)::int between 1 and 31\n        then to_date(release_date::text, 'YYYYMMDD')\n        else null\n    end\n as release_contract_date,\n    vsart as shipping_type_id,\n    handoverloc as handover_location,\n    shipcond as shipping_conditions_id,\n    incov as incoterms_version_id,\n    inco2_l as incoterms_location_1,\n    inco3_l as incoterms_location_2,\n    force_id as internal_key_force_element,\n    force_cnt as internal_version_counter,\n    reloc_id as relocation_id,\n    reloc_seq_id as relocation_step_id,\n    source_logsys as source_logsys,\n    fsh_transaction as transaction_number,\n    fsh_item_group as item_group,\n    fsh_vas_last_item as last_vas_item_number,\n    fsh_os_stg_change as os_strategy_specific_fields_change,\n    vzskz as interest_calculation_indicator_id,\n    fsh_snst_status as snapshot_status,\n    pohf_type as document_category,\n    \n    case\n        when eq_eindt::text ~ '^[0-9]{8}$'\n            and substring(eq_eindt::text, 5, 2)::int between 1 and 12\n            and substring(eq_eindt::text, 7, 2)::int between 1 and 31\n        then to_date(eq_eindt::text, 'YYYYMMDD')\n        else null\n    end\n as same_delivery_date,\n    eq_werks as same_plant_id,\n    fixpo as firm_deal_indicator,\n    ekgrp_allow as take_account_purch_group,\n    werks_allow as take_account_plants,\n    contract_allow as take_account_contracts,\n    pstyp_allow as take_account_item_categories,\n    fixpo_allow as take_account_fixed_date_purchases,\n    key_id_allow as consider_budget,\n    aurel_allow as take_account_alloc_table_relevance,\n    delper_allow as take_account_dlvy_period,\n    eindt_allow as take_account_delivery_date,\n    ltsnr_allow as include_vendor_subrange,\n    otb_level as otb_check_level,\n    otb_cond_type as otb_condition_type_id,\n    key_id as unique_number_budget,\n    otb_value as required_budget_val,\n    otb_curr as otb_currency_id,\n    otb_res_value as reserved_budget_val,\n    otb_spec_value as special_release_budget_val,\n    spr_rsn_profile as otb_reason_profile_special_release,\n    budg_type as budget_type,\n    otb_status as otb_check_status,\n    otb_reason as reason,\n    check_type as type_otb_check,\n    con_otb_req as otb_relevant_contract,\n    con_prebook_lev as indicator_level_contracts,\n    con_distr_lev as distrib_using_target_value_or_item,\n    hvr_is_deleted as hvr_is_deleted,\n    hvr_change_time as hvr_change_time\nfrom \"postgres\".\"public_sap_dev\".\"stg_sap__ekko\"\nwhere mandt in ('800')\n)"}, {"id": "model.sap.int_sap__purchasing_document_category", "sql": " __dbt__cte__int_sap__purchasing_document_category as (\n\n\nwith dd07l as (\n    select *\n    from \"postgres\".\"public_sap_dev\".\"stg_sap__dd07l\"\n\n\n\n), dd07t as (\n    select *\n    from \"postgres\".\"public_sap_dev\".\"stg_sap__dd07t\"\n\n\n), final as (\n    select \n        dd07l.domvalue_l as purchasing_document_category_id,\n        dd07l.hvr_change_time as hvr_change_time,\n        dd07t.ddtext as purchasing_document_category_txt\n    from dd07l\n\n    \n    left join dd07t\n        on dd07l.domname = dd07t.domname\n        and dd07l.domvalue_l = dd07t.domvalue_l\n        and dd07l.as4vers = dd07t.as4vers\n        and dd07t.ddlanguage in ('e')\n    \n\n    where dd07l.domname = 'bstyp'\n        and dd07l.as4vers = '0000'\n)\n\nselect *\nfrom final\n)"}, {"id": "model.sap.int_sap__purchasing_document_type", "sql": " __dbt__cte__int_sap__purchasing_document_type as (\n\n\nwith t161 as (\n    select *\n    from \"postgres\".\"public_sap_dev\".\"stg_sap__t161\"\n\n\n\n), t161t as (\n    select *\n    from \"postgres\".\"public_sap_dev\".\"stg_sap__t161t\"\n\n\n), final as (\n    select\n        t161.mandt as client_id,\n        t161.bstyp as purch_doc_category_id,\n        t161.bsart as purchasing_document_type_id,\n        t161.bsakz as control_indicator,\n        t161.pincr as item_number_interval,\n        t161.numki as no_range_int_assgt,\n        t161.numke as no_range_ext_assg,\n        t161.brefn as field_selection_key_id,\n        t161.refba as reference_document_type_id,\n        t161.abvor as stdrd_rel_order_qty,\n        t161.stafo as update_group_stats_id,\n        t161.upinc as subitem_interval,\n        t161.stako as time_dep_conditions,\n        t161.pargr as partner_determination_procedure_id,\n        t161.numka as number_range_ale,\n        t161.hityp as vendor_hierarchy_cat_id,\n        t161.lphis as rel_documentation,\n        t161.gsfrg as overall_release_requisitions,\n        t161.variante as layout,\n        t161.shenq as shared_lock_only,\n        t161.kzale as distributed_contract_ale,\n        t161.abgebot as global_perc_bid,\n        t161.kornr as corr_misc_provis,\n        t161.umlif as vendor,\n        t161.koett as contract_with_delivery_schedule,\n        t161.ar_object as document_type_id,\n        t161.koako as koako,\n        t161.oicsegi as qty_sched_permitted,\n        t161.oirfqreq as precedence_f_rfq_req,\n        t161.wvvkz as further_processing_summar_docs,\n        t161.xlokz as cross_system_transit,\n        t161.cp_aktive as commitment_plan_is_active,\n        t161.cptype as category_commitment_plan,\n        t161.fls_rsto as enh_store_return,\n        t161.msr_active as adv_returns_active,\n        t161.rdp_profile as risk_distribution_plan_profile_id,\n        t161.numkc as srm_contract_number_range,\n        t161._sapmp_ceact as sapmp_fastentry_chars_is_active,\n        t161._sapmp_pdact as sapmp_activate_inheritance,\n        t161._sapmp_pprot as sapmp_inheritance_log,\n        t161._sapmp_puser as sapmp_inheritance_overwrite_user_values,\n        t161._sapmp_pausw as sapmp_inheritance_char_selection_list,\n        t161._sapmp_atnam as sapmp_characteristic_name,\n        t161._sapmp_gauf as sapmp_global_local_group_may_be_undone,\n        t161.tolsl as tolerance_key_id,\n        t161.fsh_vas_act as vas_active_flag,\n        t161.fsh_vas_kalsm as determination_procedure,\n        t161.fsh_vas_del as vas_deletion_criteria,\n        t161.fsh_vas_detdt as date_vas_determination,\n        t161.fsh_excl_return as exclude_return_items,\n        t161.fsh_var_kalsm as determination_procedure_id,\n        t161.fsh_dpr_detpro as fsh_dpr_detpro,\n        t161.fsh_po_idoc as generic_article_in_po_using_idoc,\n        t161.mill_omkz as use_ref_characteristics,\n        t161.wrf_enable_dateline as enable_dateline,\n        t161.hvr_is_deleted as hvr_is_deleted,\n        t161.hvr_change_time as hvr_change_time,\n        t161t.batxt as doc_type_descript\n    from t161\n\n    \n    left join t161t\n        on t161.mandt = t161t.mandt\n        and t161.bsart = t161t.bsart\n        and t161.bstyp = t161t.bstyp\n        and t161t.spras = 'e'\n    \n\n    where t161.mandt in ('800')\n)\n\nselect *\nfrom final\n)"}, {"id": "model.sap.int_sap__purchasing_group", "sql": " __dbt__cte__int_sap__purchasing_group as (\n\n\nselect\n    ekgrp as purchasing_group_id,\n    mandt as client_id,\n    tel_number as telephone,\n    telfx as fax_number,\n    ldest as spool_output_device_id,\n    ektel as tel_no_purch_group,\n    smtp_addr as e_mail_address,\n    tel_extens as telephone_no_extension,\n    eknam as description_purchasing_group,\n    _fivetran_deleted as _fivetran_deleted,\n    _fivetran_synced as _fivetran_synced,\n    _fivetran_sap_archived as _fivetran_sap_archived\nfrom \"postgres\".\"public_sap_dev\".\"stg_sap__t024\"\nwhere mandt in ('800')\n)"}, {"id": "model.sap.int_sap__purchasing_document_status", "sql": " __dbt__cte__int_sap__purchasing_document_status as (\n\n\nwith dd07l as (\n    select *\n    from \"postgres\".\"public_sap_dev\".\"stg_sap__dd07l\"\n\n\n\n), dd07t as (\n    select *\n    from \"postgres\".\"public_sap_dev\".\"stg_sap__dd07t\"\n\n\n), final as (\n    select \n        dd07l.domvalue_l as document_status_id,\n        dd07l.hvr_change_time as hvr_change_time,\n        dd07t.ddtext as document_status_txt\n    from dd07l\n\n    \n    left join dd07t\n        on dd07l.domname = dd07t.domname\n        and dd07l.domvalue_l = dd07t.domvalue_l\n        and dd07l.as4vers = dd07t.as4vers\n        and dd07t.ddlanguage in ('e')\n    \n\n    where dd07l.domname = 'statv'\n        and dd07l.as4vers = '0000'\n)\n\nselect *\nfrom final\n)"}], "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null, "primary_key": [], "time_spine": null}, "model.sap.sap__dim_customer": {"database": "postgres", "schema": "public_sap_dev", "name": "sap__dim_customer", "resource_type": "model", "package_name": "sap", "path": "sales_and_procurement/star_schema/sap__dim_customer.sql", "original_file_path": "models/sales_and_procurement/star_schema/sap__dim_customer.sql", "unique_id": "model.sap.sap__dim_customer", "fqn": ["sap", "sales_and_procurement", "star_schema", "sap__dim_customer"], "alias": "sap__dim_customer", "checksum": {"name": "sha256", "checksum": "b0a0371a152e3739ff757f9498791ff8c72ac1e2804527252fbdf9a4e74d8c1d"}, "config": {"enabled": true, "alias": null, "schema": "sap_dev", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "freshness": null}, "tags": [], "description": "Customer dimension table", "columns": {"customer_number": {"name": "customer_number", "description": "Unique identifier of the customer in SAP", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "country_key_id": {"name": "country_key_id", "description": "Country key associated with the customer", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "customer_name": {"name": "customer_name", "description": "Full name of the customer", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "city": {"name": "city", "description": "Customer\u2019s city of residence", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "customer_id": {"name": "customer_id", "description": "Surrogate key for the customer", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": "sap://models/sales_and_procurement/star_schema/sales_and_procurement.yml", "build_path": null, "unrendered_config": {"materialized": "table", "schema": "sap_{{ var('directed_schema','dev') }}", "enabled": true}, "created_at": 1756850330.5810921, "relation_name": "\"postgres\".\"public_sap_dev\".\"sap__dim_customer\"", "raw_code": "{{ config(enabled=var('sap_using_kna1', True)) }}\n\nselect\n\tltrim(customer_id, '0' ) as customer_number,\n\tcountry_key_id,\n\tname as customer_name,\n\tcity,\n\tcustomer_id \t\nfrom {{ ref('int_sap__customer') }}", "doc_blocks": [], "language": "sql", "refs": [{"name": "int_sap__customer", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": [], "nodes": ["model.sap.int_sap__customer"]}, "compiled_path": "target/compiled/sap/models/sales_and_procurement/star_schema/sap__dim_customer.sql", "compiled": true, "compiled_code": "\n\nwith __dbt__cte__int_sap__customer as (\n\n\nselect\n    kunnr as customer_id,\n    mandt as client_id,\n    pmt_office as payment_office_id,\n    brsch as industry_key_id,\n    katr9 as attribute_9_id,\n    uwaer as currency_sales_figure_id,\n    kdkg1 as customer_condition_group_1_id,\n    pson3 as name_3,\n    bran4 as industry_code_4_id,\n    ort02 as district,\n    _vso_r_matpal as _vso_r_matpal,\n    _vso_r_one_sort as _vso_r_one_sort,\n    fiskn as fiscal_address_id,\n    konzs as group_key,\n    etikg as lab_customer_group_id,\n    psoo2 as free_description,\n    sperz as payment_block,\n    katr4 as attribute_4_id,\n    telx1 as telex_number,\n    crtn as crt_number,\n    dtaws as instruction_key_id,\n    pstl2 as p_o_box_postal_code,\n    datlt as communication_line_no,\n    rne as foreign_national_registration,\n    name4 as name_4,\n    xzemp as alt_payer_in_doc,\n    kukla as customer_classification_id,\n    _xlso_customer as _xlso_customer,\n    name2 as name_2,\n    bahne as express_train_station,\n    psohs as house_number,\n    duns4 as duns_4,\n    kdkg2 as customer_condition_group_2_id,\n    oidrc as differ_refer_code_id,\n    bran5 as industry_code_5_id,\n    umsat as annual_sales_val,\n    stcd3 as tax_number_3,\n    uf as state,\n    txlw1 as icms_law_id,\n    psoo3 as psoo3,\n    rnedate as rne_issuing_date,\n    begru as authorization_group_id,\n    katr5 as attribute_5_id,\n    stcdt as tax_number_type_id,\n    duns as duns_number,\n    updat as confirmation_date,\n    katr10 as attribute_10_id,\n    dear1 as indicator_competitor,\n    inspatdebi as after_delivery,\n    periv as fiscal_year_variant_id,\n    _vso_r_pal_ul as _vso_r_pal_ul,\n    kdkg3 as customer_condition_group_3_id,\n    abrvw as usage_id,\n    rg as rg_number,\n    stcd4 as tax_number_4,\n    loevm as central_deletion_flag,\n    txlw2 as ipi_law_id,\n    lifnr as vendor_id,\n    psoo4 as psoo4,\n    _xlso_pref_pay as _xlso_pref_pay,\n    counc as county_code_id,\n    telfx as fax_number,\n    stcd2 as tax_number_2,\n    inspbydebi as by_customer,\n    dear2 as indicator_sales_partner,\n    stcd1 as tax_number_1,\n    ort01 as city,\n    oid_poreqd as purchase_order_req,\n    kdkg4 as customer_condition_group_4_id,\n    cvp_xblck as business_purpose_completed_flag,\n    faksd as central_billing_block_id,\n    ktokd as customer_account_group_id,\n    telbx as telebox_number,\n    legalnat as legal_nature_id,\n    stras as street_and_house_number,\n    ccc01 as biochemical_warfare,\n    dtams as dme_indicator,\n    psoo5 as psoo5,\n    j_1kftind as type_industry_id,\n    stkzn as natural_person,\n    exp as issued_by,\n    psotl as title,\n    _xlso_partner as _xlso_partner,\n    dear3 as indicator_sales_prospect,\n    xxipi as customer_is_ipi_exempt,\n    niels as nielsen_id,\n    umsa1 as umsa1,\n    bahns as train_station,\n    bubkz as check_digit,\n    kdkg5 as customer_condition_group_5_id,\n    _vso_r_one_mat as _vso_r_one_mat,\n    knurl as uniform_resource_locator,\n    xknza as accts_alt_payer,\n    dear6 as indicator_consumer,\n    pfort as po_box_city,\n    stcd5 as tax_number_5,\n    cityc as city_code_id,\n    ccc02 as nuclear_nonprolif,\n    ric as ric_number,\n    land1 as country_key_id,\n    umjah as year_which_sales_are_given,\n    fee_schedule as fee_schedule,\n    dear4 as indicator_customer_type_4,\n    _xlso_client as _xlso_client,\n    erdat as created_on_date,\n    _vso_r_dpoint as _vso_r_dpoint,\n    teltx as teletex_number,\n    ccc03 as national_security,\n    oipbl as business_location_id,\n    _xlso_sysid as _xlso_sysid,\n    rgdate as rg_issuing_date,\n    anred as anred,\n    ekont as initial_contact_id,\n    vbund as trading_partner_id,\n    psost as street,\n    knrza as alternative_payer_id,\n    dear5 as id_default_sold_to_party,\n    psofg as processor_group_id,\n    jmjah as year_no_given_for,\n    tdt as tax_declaration_type_id,\n    bbbnr as int_location_no_1,\n    regio as region_id,\n    alc as agency_location_code_id,\n    aufsd as central_order_block_customer_id,\n    ccc04 as missile_technology,\n    lifsd as central_delivery_block_id,\n    cassd as central_sales_block_customer,\n    werks as plant_id,\n    katr6 as attribute_6_id,\n    psois as slaprepr_proced,\n    _vso_r_load_pref as _vso_r_load_pref,\n    adrnr as address_id,\n    civve as id_mainly_non_military_use,\n    stkzu as liable_vat,\n    fityp as tax_type_id,\n    bran1 as industry_code_1_id,\n    psovn as first_name,\n    comsize as company_size_id,\n    j_1kfrepre as name_representative,\n    mcod1 as search_term_matchcode_search,\n    katr1 as attribute_1_id,\n    hzuor as assignment_to_hierarchy,\n    xicms as customer_is_icms_exempt,\n    indtyp as industry_main_type_id,\n    xcpdk as one_time_account,\n    lzone as transportation_zone_id,\n    sortl as sort_field,\n    katr7 as attribute_7_id,\n    gform as legal_status_id,\n    pson1 as name,\n    bran2 as industry_code_2_id,\n    stceg as vat_registration_no,\n    sperr as central_posting_block,\n    locco as city_coordinates,\n    uptim as last_change_confirmation_tim,\n    cnae as cnae_id,\n    mcod2 as mcod2,\n    ernam as created_by,\n    txjcd as tax_jurisdiction_id,\n    katr2 as attribute_2_id,\n    confs as confirmation_status,\n    telf1 as telephone_1,\n    _vso_r_palhgt as _vso_r_palhgt,\n    j_1kftbus as type_business_id,\n    spras as language_key_id,\n    _vso_r_uld_side as _vso_r_uld_side,\n    bbsnr as int_location_no_2,\n    xsubt as subtrib_group_id,\n    katr8 as attribute_8_id,\n    jmzah as yearly_number_employees,\n    nodel as central_del_block,\n    _vso_r_i_no_lyr as _vso_r_i_no_lyr,\n    decregpc as declaration_regimen_pis_cofins_id,\n    duefl as status_transfer_to_next_release,\n    pson2 as pson2,\n    cfopc as customers_cfop_category,\n    pfach as po_box,\n    icmstaxpay as icms_taxpayer_id,\n    bran3 as industry_code_3_id,\n    suframa as suframa_code,\n    exabl as unloading_points,\n    pstlz as postal_code,\n    stkza as sales_equalizatn_tax,\n    psoo1 as psoo1,\n    ktocd as reference_acct_group_id,\n    telf2 as second_telephone_number,\n    knazk as working_time_calendar_id,\n    milve as id_mainly_military_use,\n    katr3 as attribute_3_id,\n    mcod3 as mcod3,\n    rpmkr as regional_market,\n    _vso_r_pk_mat as _vso_r_pk_mat,\n    name3 as name3,\n    name1 as name1,\n    _fivetran_deleted as _fivetran_deleted,\n    _fivetran_synced as _fivetran_synced,\n    _fivetran_sap_archived as _fivetran_sap_archived\nfrom \"postgres\".\"public_sap_dev\".\"stg_sap__kna1\"\nwhere mandt in ('800')\n) select\n\tltrim(customer_id, '0' ) as customer_number,\n\tcountry_key_id,\n\tname as customer_name,\n\tcity,\n\tcustomer_id \t\nfrom __dbt__cte__int_sap__customer", "extra_ctes_injected": true, "extra_ctes": [{"id": "model.sap.int_sap__customer", "sql": " __dbt__cte__int_sap__customer as (\n\n\nselect\n    kunnr as customer_id,\n    mandt as client_id,\n    pmt_office as payment_office_id,\n    brsch as industry_key_id,\n    katr9 as attribute_9_id,\n    uwaer as currency_sales_figure_id,\n    kdkg1 as customer_condition_group_1_id,\n    pson3 as name_3,\n    bran4 as industry_code_4_id,\n    ort02 as district,\n    _vso_r_matpal as _vso_r_matpal,\n    _vso_r_one_sort as _vso_r_one_sort,\n    fiskn as fiscal_address_id,\n    konzs as group_key,\n    etikg as lab_customer_group_id,\n    psoo2 as free_description,\n    sperz as payment_block,\n    katr4 as attribute_4_id,\n    telx1 as telex_number,\n    crtn as crt_number,\n    dtaws as instruction_key_id,\n    pstl2 as p_o_box_postal_code,\n    datlt as communication_line_no,\n    rne as foreign_national_registration,\n    name4 as name_4,\n    xzemp as alt_payer_in_doc,\n    kukla as customer_classification_id,\n    _xlso_customer as _xlso_customer,\n    name2 as name_2,\n    bahne as express_train_station,\n    psohs as house_number,\n    duns4 as duns_4,\n    kdkg2 as customer_condition_group_2_id,\n    oidrc as differ_refer_code_id,\n    bran5 as industry_code_5_id,\n    umsat as annual_sales_val,\n    stcd3 as tax_number_3,\n    uf as state,\n    txlw1 as icms_law_id,\n    psoo3 as psoo3,\n    rnedate as rne_issuing_date,\n    begru as authorization_group_id,\n    katr5 as attribute_5_id,\n    stcdt as tax_number_type_id,\n    duns as duns_number,\n    updat as confirmation_date,\n    katr10 as attribute_10_id,\n    dear1 as indicator_competitor,\n    inspatdebi as after_delivery,\n    periv as fiscal_year_variant_id,\n    _vso_r_pal_ul as _vso_r_pal_ul,\n    kdkg3 as customer_condition_group_3_id,\n    abrvw as usage_id,\n    rg as rg_number,\n    stcd4 as tax_number_4,\n    loevm as central_deletion_flag,\n    txlw2 as ipi_law_id,\n    lifnr as vendor_id,\n    psoo4 as psoo4,\n    _xlso_pref_pay as _xlso_pref_pay,\n    counc as county_code_id,\n    telfx as fax_number,\n    stcd2 as tax_number_2,\n    inspbydebi as by_customer,\n    dear2 as indicator_sales_partner,\n    stcd1 as tax_number_1,\n    ort01 as city,\n    oid_poreqd as purchase_order_req,\n    kdkg4 as customer_condition_group_4_id,\n    cvp_xblck as business_purpose_completed_flag,\n    faksd as central_billing_block_id,\n    ktokd as customer_account_group_id,\n    telbx as telebox_number,\n    legalnat as legal_nature_id,\n    stras as street_and_house_number,\n    ccc01 as biochemical_warfare,\n    dtams as dme_indicator,\n    psoo5 as psoo5,\n    j_1kftind as type_industry_id,\n    stkzn as natural_person,\n    exp as issued_by,\n    psotl as title,\n    _xlso_partner as _xlso_partner,\n    dear3 as indicator_sales_prospect,\n    xxipi as customer_is_ipi_exempt,\n    niels as nielsen_id,\n    umsa1 as umsa1,\n    bahns as train_station,\n    bubkz as check_digit,\n    kdkg5 as customer_condition_group_5_id,\n    _vso_r_one_mat as _vso_r_one_mat,\n    knurl as uniform_resource_locator,\n    xknza as accts_alt_payer,\n    dear6 as indicator_consumer,\n    pfort as po_box_city,\n    stcd5 as tax_number_5,\n    cityc as city_code_id,\n    ccc02 as nuclear_nonprolif,\n    ric as ric_number,\n    land1 as country_key_id,\n    umjah as year_which_sales_are_given,\n    fee_schedule as fee_schedule,\n    dear4 as indicator_customer_type_4,\n    _xlso_client as _xlso_client,\n    erdat as created_on_date,\n    _vso_r_dpoint as _vso_r_dpoint,\n    teltx as teletex_number,\n    ccc03 as national_security,\n    oipbl as business_location_id,\n    _xlso_sysid as _xlso_sysid,\n    rgdate as rg_issuing_date,\n    anred as anred,\n    ekont as initial_contact_id,\n    vbund as trading_partner_id,\n    psost as street,\n    knrza as alternative_payer_id,\n    dear5 as id_default_sold_to_party,\n    psofg as processor_group_id,\n    jmjah as year_no_given_for,\n    tdt as tax_declaration_type_id,\n    bbbnr as int_location_no_1,\n    regio as region_id,\n    alc as agency_location_code_id,\n    aufsd as central_order_block_customer_id,\n    ccc04 as missile_technology,\n    lifsd as central_delivery_block_id,\n    cassd as central_sales_block_customer,\n    werks as plant_id,\n    katr6 as attribute_6_id,\n    psois as slaprepr_proced,\n    _vso_r_load_pref as _vso_r_load_pref,\n    adrnr as address_id,\n    civve as id_mainly_non_military_use,\n    stkzu as liable_vat,\n    fityp as tax_type_id,\n    bran1 as industry_code_1_id,\n    psovn as first_name,\n    comsize as company_size_id,\n    j_1kfrepre as name_representative,\n    mcod1 as search_term_matchcode_search,\n    katr1 as attribute_1_id,\n    hzuor as assignment_to_hierarchy,\n    xicms as customer_is_icms_exempt,\n    indtyp as industry_main_type_id,\n    xcpdk as one_time_account,\n    lzone as transportation_zone_id,\n    sortl as sort_field,\n    katr7 as attribute_7_id,\n    gform as legal_status_id,\n    pson1 as name,\n    bran2 as industry_code_2_id,\n    stceg as vat_registration_no,\n    sperr as central_posting_block,\n    locco as city_coordinates,\n    uptim as last_change_confirmation_tim,\n    cnae as cnae_id,\n    mcod2 as mcod2,\n    ernam as created_by,\n    txjcd as tax_jurisdiction_id,\n    katr2 as attribute_2_id,\n    confs as confirmation_status,\n    telf1 as telephone_1,\n    _vso_r_palhgt as _vso_r_palhgt,\n    j_1kftbus as type_business_id,\n    spras as language_key_id,\n    _vso_r_uld_side as _vso_r_uld_side,\n    bbsnr as int_location_no_2,\n    xsubt as subtrib_group_id,\n    katr8 as attribute_8_id,\n    jmzah as yearly_number_employees,\n    nodel as central_del_block,\n    _vso_r_i_no_lyr as _vso_r_i_no_lyr,\n    decregpc as declaration_regimen_pis_cofins_id,\n    duefl as status_transfer_to_next_release,\n    pson2 as pson2,\n    cfopc as customers_cfop_category,\n    pfach as po_box,\n    icmstaxpay as icms_taxpayer_id,\n    bran3 as industry_code_3_id,\n    suframa as suframa_code,\n    exabl as unloading_points,\n    pstlz as postal_code,\n    stkza as sales_equalizatn_tax,\n    psoo1 as psoo1,\n    ktocd as reference_acct_group_id,\n    telf2 as second_telephone_number,\n    knazk as working_time_calendar_id,\n    milve as id_mainly_military_use,\n    katr3 as attribute_3_id,\n    mcod3 as mcod3,\n    rpmkr as regional_market,\n    _vso_r_pk_mat as _vso_r_pk_mat,\n    name3 as name3,\n    name1 as name1,\n    _fivetran_deleted as _fivetran_deleted,\n    _fivetran_synced as _fivetran_synced,\n    _fivetran_sap_archived as _fivetran_sap_archived\nfrom \"postgres\".\"public_sap_dev\".\"stg_sap__kna1\"\nwhere mandt in ('800')\n)"}], "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null, "primary_key": [], "time_spine": null}, "model.sap.sap__dim_purchasing_organization": {"database": "postgres", "schema": "public_sap_dev", "name": "sap__dim_purchasing_organization", "resource_type": "model", "package_name": "sap", "path": "sales_and_procurement/star_schema/sap__dim_purchasing_organization.sql", "original_file_path": "models/sales_and_procurement/star_schema/sap__dim_purchasing_organization.sql", "unique_id": "model.sap.sap__dim_purchasing_organization", "fqn": ["sap", "sales_and_procurement", "star_schema", "sap__dim_purchasing_organization"], "alias": "sap__dim_purchasing_organization", "checksum": {"name": "sha256", "checksum": "fc898ce3e7e4ebd6967148206e593c695b2c2d4a9f94dbfb3a70ef0ad3c9fdaa"}, "config": {"enabled": true, "alias": null, "schema": "sap_dev", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "freshness": null}, "tags": [], "description": "Purchasing organization dimension", "columns": {"company_code_id": {"name": "company_code_id", "description": "Company code assigned to the organization", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "purchasing_organization_id": {"name": "purchasing_organization_id", "description": "ID of the purchasing organization", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "description": {"name": "description", "description": "Description of the purchasing organization", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": "sap://models/sales_and_procurement/star_schema/sales_and_procurement.yml", "build_path": null, "unrendered_config": {"materialized": "table", "schema": "sap_{{ var('directed_schema','dev') }}", "enabled": true}, "created_at": 1756850330.5924838, "relation_name": "\"postgres\".\"public_sap_dev\".\"sap__dim_purchasing_organization\"", "raw_code": "{{ config(enabled=var('sap_using_t024e', true)) }}\n\nselect\n\tcompany_code_id,\n    purchasing_organization_id,\n    description\nfrom {{ ref('int_sap__purchasing_organization') }}", "doc_blocks": [], "language": "sql", "refs": [{"name": "int_sap__purchasing_organization", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": [], "nodes": ["model.sap.int_sap__purchasing_organization"]}, "compiled_path": "target/compiled/sap/models/sales_and_procurement/star_schema/sap__dim_purchasing_organization.sql", "compiled": true, "compiled_code": "\n\nwith __dbt__cte__int_sap__purchasing_organization as (\n\n\nselect\n    ekorg as purchasing_organization_id,\n    mandt as client_id,\n    ekotx as description,\n    txfus as text_name_footer_lines,\n    txgru as text_name_complimentary_close,\n    bpeff as effective_price,\n    txkop as text_name_letter_heading,\n    kalse as purorg_schema_group_id,\n    txadr as text_name_sender_line,\n    mkals as market_price_schema_id,\n    bukrs as company_code_id,\n    bukrs_ntr as cocdsubsstlmt_id,\n    _fivetran_deleted as _fivetran_deleted,\n    _fivetran_synced as _fivetran_synced,\n    _fivetran_sap_archived as _fivetran_sap_archived\nfrom \"postgres\".\"public_sap_dev\".\"stg_sap__t024e\"\nwhere mandt in ('800')\n) select\n\tcompany_code_id,\n    purchasing_organization_id,\n    description\nfrom __dbt__cte__int_sap__purchasing_organization", "extra_ctes_injected": true, "extra_ctes": [{"id": "model.sap.int_sap__purchasing_organization", "sql": " __dbt__cte__int_sap__purchasing_organization as (\n\n\nselect\n    ekorg as purchasing_organization_id,\n    mandt as client_id,\n    ekotx as description,\n    txfus as text_name_footer_lines,\n    txgru as text_name_complimentary_close,\n    bpeff as effective_price,\n    txkop as text_name_letter_heading,\n    kalse as purorg_schema_group_id,\n    txadr as text_name_sender_line,\n    mkals as market_price_schema_id,\n    bukrs as company_code_id,\n    bukrs_ntr as cocdsubsstlmt_id,\n    _fivetran_deleted as _fivetran_deleted,\n    _fivetran_synced as _fivetran_synced,\n    _fivetran_sap_archived as _fivetran_sap_archived\nfrom \"postgres\".\"public_sap_dev\".\"stg_sap__t024e\"\nwhere mandt in ('800')\n)"}], "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null, "primary_key": [], "time_spine": null}, "model.sap.sap__dim_plant": {"database": "postgres", "schema": "public_sap_dev", "name": "sap__dim_plant", "resource_type": "model", "package_name": "sap", "path": "sales_and_procurement/star_schema/sap__dim_plant.sql", "original_file_path": "models/sales_and_procurement/star_schema/sap__dim_plant.sql", "unique_id": "model.sap.sap__dim_plant", "fqn": ["sap", "sales_and_procurement", "star_schema", "sap__dim_plant"], "alias": "sap__dim_plant", "checksum": {"name": "sha256", "checksum": "68752ac0f6bdf9cb6468a55a5e4deed3152409d11676b9ef13be8735f13f54e2"}, "config": {"enabled": true, "alias": null, "schema": "sap_dev", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "freshness": null}, "tags": [], "description": "Plant/branch dimension table", "columns": {"plant_id": {"name": "plant_id", "description": "Unique identifier for the plant", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "plant_name": {"name": "plant_name", "description": "Name of the plant", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "country_key_id": {"name": "country_key_id", "description": "Country key", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": "sap://models/sales_and_procurement/star_schema/sales_and_procurement.yml", "build_path": null, "unrendered_config": {"materialized": "table", "schema": "sap_{{ var('directed_schema','dev') }}", "enabled": true}, "created_at": 1756850330.586132, "relation_name": "\"postgres\".\"public_sap_dev\".\"sap__dim_plant\"", "raw_code": "{{ config(enabled=var('sap_using_t001w', True)) }}\n\nselect\n    plant_id,\n    name as plant_name,\n    country_key_id\nfrom {{ ref('int_sap__plant') }}", "doc_blocks": [], "language": "sql", "refs": [{"name": "int_sap__plant", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": [], "nodes": ["model.sap.int_sap__plant"]}, "compiled_path": "target/compiled/sap/models/sales_and_procurement/star_schema/sap__dim_plant.sql", "compiled": true, "compiled_code": "\n\nwith __dbt__cte__int_sap__plant as (\n\n\nselect\n    mandt as client_id,\n    werks as plant_id,\n    fsh_mg_arun_req as order_allocation_run,\n    taxiw as tax_indicator_plant_id,\n    cityc as city_code_id,\n    regio as region_id,\n    fabkl as factory_calendar_id,\n    mgvlaupd as actual_activities_updated,\n    misch as mixed_costing,\n    oihvtype as vendor_type,\n    ekorg as purchasing_organization_id,\n    nodetype as node_type_supply_chain_network_id,\n    storetype as store_cat,\n    vtweg as distrib_channel_id,\n    txnam_ma1 as text_1st_dunning,\n    oihcredipi as ipi_credit_allowed,\n    kunnr as customer_number_plant_id,\n    name1 as name,\n    fsh_seaim as season_active_in_inventory_management,\n    adrnr as address_id,\n    bzirk as sales_district_id,\n    spras as language_key_id,\n    stras as street_and_house_number,\n    zone1 as supply_region_region_supplied_id,\n    vkorg as sales_organization_id,\n    nschema as structure_name_formation_id,\n    dep_store as superior_department_store_id,\n    bedpl as activating_requirements_planning,\n    lifnr as vendor_number_plant_id,\n    pfach as po_box,\n    spart as int_co_billing_div_id,\n    let03 as _3rd_reminder_exped,\n    oilival as exchange_valuation_indicator,\n    sourcing as af_srce_det_via_atp,\n    wksop as sop_plant,\n    kordb as source_list,\n    counc as county_code_id,\n    vstel as shipping_point_id,\n    txnam_ma3 as text_3rd_dunning,\n    let02 as _2nd_reminder_exped,\n    dvsart as batch_type_dms_used,\n    pstlz as postal_code,\n    bzqhl as take_regular_vendor_into_account,\n    mgvupd as actual_costing,\n    pkosa as cost_obj_controlling,\n    chazv as batch_status_mgmt,\n    txjcd as tax_jurisdiction_id,\n    awsls as variance_key_id,\n    chazv_old as chazv_old,\n    mgvlareval as control_credit_cost_centers,\n    bwkey as valuation_area_id,\n    vlfkz as plant_category,\n    let01 as _1st_reminder_exped,\n    txnam_ma2 as text_2nd_dunning,\n    fsh_bom_maintenance as control_bom,\n    kkowk as conds_at_plant_level,\n    j_1bbranch as business_place_id,\n    betol as po_tolerance,\n    vtbfi as sales_area_detrm,\n    name2 as name_2,\n    land1 as country_key_id,\n    achvm as archiving_marker,\n    fprfw as distrib_profile_plant_id,\n    ort01 as city,\n    iwerk as maintenance_planning_plant_id,\n    _fivetran_deleted as _fivetran_deleted,\n    _fivetran_synced as _fivetran_synced,\n    _fivetran_sap_archived as _fivetran_sap_archived\nfrom \"postgres\".\"public_sap_dev\".\"stg_sap__t001w\"\nwhere mandt in ('800')\n) select\n    plant_id,\n    name as plant_name,\n    country_key_id\nfrom __dbt__cte__int_sap__plant", "extra_ctes_injected": true, "extra_ctes": [{"id": "model.sap.int_sap__plant", "sql": " __dbt__cte__int_sap__plant as (\n\n\nselect\n    mandt as client_id,\n    werks as plant_id,\n    fsh_mg_arun_req as order_allocation_run,\n    taxiw as tax_indicator_plant_id,\n    cityc as city_code_id,\n    regio as region_id,\n    fabkl as factory_calendar_id,\n    mgvlaupd as actual_activities_updated,\n    misch as mixed_costing,\n    oihvtype as vendor_type,\n    ekorg as purchasing_organization_id,\n    nodetype as node_type_supply_chain_network_id,\n    storetype as store_cat,\n    vtweg as distrib_channel_id,\n    txnam_ma1 as text_1st_dunning,\n    oihcredipi as ipi_credit_allowed,\n    kunnr as customer_number_plant_id,\n    name1 as name,\n    fsh_seaim as season_active_in_inventory_management,\n    adrnr as address_id,\n    bzirk as sales_district_id,\n    spras as language_key_id,\n    stras as street_and_house_number,\n    zone1 as supply_region_region_supplied_id,\n    vkorg as sales_organization_id,\n    nschema as structure_name_formation_id,\n    dep_store as superior_department_store_id,\n    bedpl as activating_requirements_planning,\n    lifnr as vendor_number_plant_id,\n    pfach as po_box,\n    spart as int_co_billing_div_id,\n    let03 as _3rd_reminder_exped,\n    oilival as exchange_valuation_indicator,\n    sourcing as af_srce_det_via_atp,\n    wksop as sop_plant,\n    kordb as source_list,\n    counc as county_code_id,\n    vstel as shipping_point_id,\n    txnam_ma3 as text_3rd_dunning,\n    let02 as _2nd_reminder_exped,\n    dvsart as batch_type_dms_used,\n    pstlz as postal_code,\n    bzqhl as take_regular_vendor_into_account,\n    mgvupd as actual_costing,\n    pkosa as cost_obj_controlling,\n    chazv as batch_status_mgmt,\n    txjcd as tax_jurisdiction_id,\n    awsls as variance_key_id,\n    chazv_old as chazv_old,\n    mgvlareval as control_credit_cost_centers,\n    bwkey as valuation_area_id,\n    vlfkz as plant_category,\n    let01 as _1st_reminder_exped,\n    txnam_ma2 as text_2nd_dunning,\n    fsh_bom_maintenance as control_bom,\n    kkowk as conds_at_plant_level,\n    j_1bbranch as business_place_id,\n    betol as po_tolerance,\n    vtbfi as sales_area_detrm,\n    name2 as name_2,\n    land1 as country_key_id,\n    achvm as archiving_marker,\n    fprfw as distrib_profile_plant_id,\n    ort01 as city,\n    iwerk as maintenance_planning_plant_id,\n    _fivetran_deleted as _fivetran_deleted,\n    _fivetran_synced as _fivetran_synced,\n    _fivetran_sap_archived as _fivetran_sap_archived\nfrom \"postgres\".\"public_sap_dev\".\"stg_sap__t001w\"\nwhere mandt in ('800')\n)"}], "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null, "primary_key": [], "time_spine": null}, "model.sap.sap__dim_rejection_reason": {"database": "postgres", "schema": "public_sap_dev", "name": "sap__dim_rejection_reason", "resource_type": "model", "package_name": "sap", "path": "sales_and_procurement/star_schema/sap__dim_rejection_reason.sql", "original_file_path": "models/sales_and_procurement/star_schema/sap__dim_rejection_reason.sql", "unique_id": "model.sap.sap__dim_rejection_reason", "fqn": ["sap", "sales_and_procurement", "star_schema", "sap__dim_rejection_reason"], "alias": "sap__dim_rejection_reason", "checksum": {"name": "sha256", "checksum": "1cbb55baf16cb07c6d720378bea9d6cc80652f182b9511faaa5c8fc26990565f"}, "config": {"enabled": true, "alias": null, "schema": "sap_dev", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "freshness": null}, "tags": [], "description": "Reasons for purchase/sales document rejections", "columns": {"reason_rejection_id": {"name": "reason_rejection_id", "description": "Code for rejection reason", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "rejection_reason_description": {"name": "rejection_reason_description", "description": "Description of the rejection reason", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": "sap://models/sales_and_procurement/star_schema/sales_and_procurement.yml", "build_path": null, "unrendered_config": {"materialized": "table", "schema": "sap_{{ var('directed_schema','dev') }}", "enabled": true}, "created_at": 1756850330.5937488, "relation_name": "\"postgres\".\"public_sap_dev\".\"sap__dim_rejection_reason\"", "raw_code": "{{ config(enabled=var('sap_using_tvag', True)) }}\n\nselect\n\treason_rejection_id, \n\tdescription as rejection_reason_description\nfrom {{ ref('int_sap__sales_document_rejection_reason') }}", "doc_blocks": [], "language": "sql", "refs": [{"name": "int_sap__sales_document_rejection_reason", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": [], "nodes": ["model.sap.int_sap__sales_document_rejection_reason"]}, "compiled_path": "target/compiled/sap/models/sales_and_procurement/star_schema/sap__dim_rejection_reason.sql", "compiled": true, "compiled_code": "\n\nwith __dbt__cte__int_sap__sales_document_rejection_reason as (\n\n\nwith tvag as (\n    select *\n    from \"postgres\".\"public_sap_dev\".\"stg_sap__tvag\"\n\n\n\n), tvagt as (\n    select *\n    from \"postgres\".\"public_sap_dev\".\"stg_sap__tvagt\"\n\n\n), final as (\n    select\n        -- From tvag (required)\n        tvag.mandt as client_id,\n        tvag.abgru as reason_rejection_id,\n        tvag.dragr as not_relevant_printing,\n        tvag.ep_off as resource_item_open_again,\n        tvag.fk_erl as not_relevant_billing,\n        tvag.kowrr as statistical_values,\n        tvag.fsh_pqr_spec as relevant_partial_quantity_rejection,\n        tvag.hvr_is_deleted as hvr_is_deleted,\n        tvag.hvr_change_time as hvr_change_time,\n        tvagt.bezei as description\n    from tvag\n\n    \n    left join tvagt\n        on tvag.mandt = tvagt.mandt\n        and tvag.abgru = tvagt.abgru\n        and tvagt.spras = 'e'\n    \n\n    where tvag.mandt in ('800')\n)\n\nselect *\nfrom final\n) select\n\treason_rejection_id, \n\tdescription as rejection_reason_description\nfrom __dbt__cte__int_sap__sales_document_rejection_reason", "extra_ctes_injected": true, "extra_ctes": [{"id": "model.sap.int_sap__sales_document_rejection_reason", "sql": " __dbt__cte__int_sap__sales_document_rejection_reason as (\n\n\nwith tvag as (\n    select *\n    from \"postgres\".\"public_sap_dev\".\"stg_sap__tvag\"\n\n\n\n), tvagt as (\n    select *\n    from \"postgres\".\"public_sap_dev\".\"stg_sap__tvagt\"\n\n\n), final as (\n    select\n        -- From tvag (required)\n        tvag.mandt as client_id,\n        tvag.abgru as reason_rejection_id,\n        tvag.dragr as not_relevant_printing,\n        tvag.ep_off as resource_item_open_again,\n        tvag.fk_erl as not_relevant_billing,\n        tvag.kowrr as statistical_values,\n        tvag.fsh_pqr_spec as relevant_partial_quantity_rejection,\n        tvag.hvr_is_deleted as hvr_is_deleted,\n        tvag.hvr_change_time as hvr_change_time,\n        tvagt.bezei as description\n    from tvag\n\n    \n    left join tvagt\n        on tvag.mandt = tvagt.mandt\n        and tvag.abgru = tvagt.abgru\n        and tvagt.spras = 'e'\n    \n\n    where tvag.mandt in ('800')\n)\n\nselect *\nfrom final\n)"}], "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null, "primary_key": [], "time_spine": null}, "model.sap.int_sap__purchasing_document_status": {"database": "postgres", "schema": "public_sap_dev", "name": "int_sap__purchasing_document_status", "resource_type": "model", "package_name": "sap", "path": "sales_and_procurement/star_schema/intermediate/int_sap__purchasing_document_status.sql", "original_file_path": "models/sales_and_procurement/star_schema/intermediate/int_sap__purchasing_document_status.sql", "unique_id": "model.sap.int_sap__purchasing_document_status", "fqn": ["sap", "sales_and_procurement", "star_schema", "intermediate", "int_sap__purchasing_document_status"], "alias": "int_sap__purchasing_document_status", "checksum": {"name": "sha256", "checksum": "3f9d96303c6e5697613188481dc7bc140b33a895054447647dbb5546471803bf"}, "config": {"enabled": true, "alias": null, "schema": "sap_dev", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "ephemeral", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "freshness": null}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "unrendered_config": {"materialized": "ephemeral", "schema": "sap_{{ var('directed_schema','dev') }}", "enabled": true}, "created_at": 1756850326.5830057, "relation_name": null, "raw_code": "{{ config(enabled=var('sap_using_dd07l', True)) }}\n\nwith dd07l as (\n    select *\n    from {{ ref('stg_sap__dd07l') }}\n\n{% set using_dd07t = var('sap_using_dd07t', True) %}\n{% if using_dd07t %}\n), dd07t as (\n    select *\n    from {{ ref('stg_sap__dd07t') }}\n{% endif %}\n\n), final as (\n    select \n        dd07l.domvalue_l as document_status_id,\n        dd07l.hvr_change_time as hvr_change_time,\n        {{ 'dd07t.ddtext' if using_dd07t else 'cast(null as ' ~ dbt.type_string() ~ ')' }} as document_status_txt\n    from dd07l\n\n    {% if using_dd07t %}\n    left join dd07t\n        on dd07l.domname = dd07t.domname\n        and dd07l.domvalue_l = dd07t.domvalue_l\n        and dd07l.as4vers = dd07t.as4vers\n        and dd07t.ddlanguage in ('e')\n    {% endif %}\n\n    where dd07l.domname = 'statv'\n        and dd07l.as4vers = '0000'\n)\n\nselect *\nfrom final", "doc_blocks": [], "language": "sql", "refs": [{"name": "stg_sap__dd07l", "package": null, "version": null}, {"name": "stg_sap__dd07t", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": [], "nodes": ["model.sap.stg_sap__dd07l", "model.sap.stg_sap__dd07t"]}, "compiled_path": "target/compiled/sap/models/sales_and_procurement/star_schema/intermediate/int_sap__purchasing_document_status.sql", "compiled": true, "compiled_code": "\n\nwith dd07l as (\n    select *\n    from \"postgres\".\"public_sap_dev\".\"stg_sap__dd07l\"\n\n\n\n), dd07t as (\n    select *\n    from \"postgres\".\"public_sap_dev\".\"stg_sap__dd07t\"\n\n\n), final as (\n    select \n        dd07l.domvalue_l as document_status_id,\n        dd07l.hvr_change_time as hvr_change_time,\n        dd07t.ddtext as document_status_txt\n    from dd07l\n\n    \n    left join dd07t\n        on dd07l.domname = dd07t.domname\n        and dd07l.domvalue_l = dd07t.domvalue_l\n        and dd07l.as4vers = dd07t.as4vers\n        and dd07t.ddlanguage in ('e')\n    \n\n    where dd07l.domname = 'statv'\n        and dd07l.as4vers = '0000'\n)\n\nselect *\nfrom final", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null, "primary_key": [], "time_spine": null}, "model.sap.int_sap__sales_document_item": {"database": "postgres", "schema": "public_sap_dev", "name": "int_sap__sales_document_item", "resource_type": "model", "package_name": "sap", "path": "sales_and_procurement/star_schema/intermediate/int_sap__sales_document_item.sql", "original_file_path": "models/sales_and_procurement/star_schema/intermediate/int_sap__sales_document_item.sql", "unique_id": "model.sap.int_sap__sales_document_item", "fqn": ["sap", "sales_and_procurement", "star_schema", "intermediate", "int_sap__sales_document_item"], "alias": "int_sap__sales_document_item", "checksum": {"name": "sha256", "checksum": "7076f9b4f330edc6f07e15cd3eb9c9e6ef27c1349f5d55ce439d3193f096d363"}, "config": {"enabled": true, "alias": null, "schema": "sap_dev", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "ephemeral", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "freshness": null}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "unrendered_config": {"materialized": "ephemeral", "schema": "sap_{{ var('directed_schema','dev') }}", "enabled": true}, "created_at": 1756850326.5917256, "relation_name": null, "raw_code": "{{ config(enabled=var('sap_using_vbap', True)) }}\n\nselect\n    mandt as client_id,\n    posnr as sales_document_item_id,\n    vbeln as sales_document_id,\n    smeng as scale_quantity,\n    stlty as bom_category,\n    vgref as preceding_document_resulted_from_ref,\n    bwtar as valuation_type_id,\n    knuma_ag as sales_deal_id,\n    spart as division_id,\n    bwtex as indicator_separate_valuation,\n    oih_licin as internal_license_no_id,\n    oic_dcounc as destination_county_code_id,\n    knuma_pi as promotion_id,\n    oic_dcityc as destination_city_code_id,\n    tas as treasury_account_symbol,\n    oignrule as gross_net_pricing_rule_id,\n    upmat as mnitm_prcrefmatl_id,\n    kalsm_k as costing_sheet_id,\n    oicertf1_ex as external_license_no,\n    aplzl_olc as counter,\n    umvkn as denominator,\n    oidmsg_qty as quantity_message,\n    kever as deviation_days,\n    mtvfp as availability_check_id,\n    oihantyp_ex as handling_type_id,\n    abgru as reason_rejection_id,\n    xchar as batch_management,\n    kostl as cost_center_id,\n    _accgo_tx_p as _accgo_tx_p,\n    prs_work_period as work_period,\n    vkgru as repair_classification_items_id,\n    wktnr as value_contract_no_id,\n    absfz as absolute_deviation,\n    oih_lcfol as follow_on_license_id,\n    vbeaf as fixed_process_time,\n    ernam as created_by,\n    oitaxfrom_im as tax_key_from_id,\n    stafo as update_group_stats_id,\n    oic_lifnr as vendor_id,\n    j_1btxsdc as sd_tax_code_id,\n    taxm1 as tax_classification_id,\n    lprio as delivery_priority_id,\n    oiedbalm_ex as balance_method_ind,\n    umziz as conversion_factor,\n    kzvbr as consumption_posting,\n    oic_aorgin as alternate_origin,\n    _slce_inst_guid as _slce_inst_guid,\n    charg as batch_id,\n    stlkn as bom_item_node_number,\n    fsh_collection as fashion_collection_id,\n    cmeth as quantity_conversion_method,\n    aplzl_oaa as aplzl_oaa,\n    oidmsg_dat as validity_date_msg,\n    umvkz as numerator,\n    oitaxgrp_ex as excise_duty_group_id,\n    fsh_candate as cancellation_date,\n    oipricie_im as ed_pricing_external,\n    _slce_sol_posnr as _slce_sol_posnr,\n    tax_subject_st as tax_subject_to_substituicao_tributaria,\n    gewei as weight_uom_id,\n    revacc_refid as revenue_accounting_reference_id,\n    oic_porgin as tax_origin,\n    sobkz as special_stock_id,\n    vpwrk as planning_plant_id,\n    waerk as sd_document_currency_id,\n    mod_allow as modification_allowed,\n    umzin as umzin,\n    magrv as matl_grp_pack_matls_id,\n    oic_pbatch as pipe_ex_batch_no,\n    bonus as volume_rebate_group_id,\n    sloctype as location_type,\n    oiedbal_im as ed_balance_indicator,\n    fsh_vas_prnt_id as sd_item_id,\n    ablfz as rounding_quantity_delivery,\n    taxm3 as taxm3,\n    pstyv as sales_document_item_category_id,\n    _xlso_course_eda as _xlso_course_eda,\n    fiscal_incentive as tax_incentive_type_id,\n    oic_mot as mode_transport_id,\n    oic_oregio as origin_region_id,\n    fistl as funds_center_id,\n    vpmat as planning_material_id,\n    awahr as order_probability_the_item,\n    kpein as condition_pricing_unit,\n    voleh as volume_uom_id,\n    werks as plant_own_or_external_id,\n    oicertf1 as oicertf1,\n    knumh as no_cond_rec_batch,\n    taxm2 as taxm2,\n    fsh_psm_pfm_split as psm_and_pfm_split_id,\n    tc_aut_det as tax_code_automatically_determined_id,\n    serail as serial_number_profile_id,\n    kosch as product_allocation_id,\n    oid_miscdl as miscellaneous_delivery_number,\n    oih_lictp_ex as license_type_id,\n    paobjnr as profitability_segment_no,\n    ps_psp_pnr as wbs_element_id,\n    rkfkf as billing_meth_co_ppc,\n    sktof as cash_discount_indicator,\n    fkrel as relevant_billing,\n    oihantyp as oihantyp,\n    _slce_sol_matnr as _slce_sol_matnr,\n    oiplantd as is_oil_plant_determ,\n    lstanr as free_goods_delivery_control,\n    _dataaging as filter_value_aging_date,\n    cpd_updat as time_stamp,\n    oic_drcreg as drc_region_id,\n    bedae as requirements_type_id,\n    manual_tc_reason as manual_tax_code_reason_id,\n    spcsto as nf_cfop_special_case_id,\n    aedat as changed_date,\n    z_prs_offshore as on_near_offshore_delivery_type,\n    kzwi1 as subtotal_1_val,\n    oiedok as excise_duty_validation_indicator,\n    fsh_pqr_uepos as higher_lev_item_partial_quantity_rej_id,\n    handovertime as handover_tim,\n    xchpf as xchpf,\n    oibwtar_im as oibwtar_im,\n    shkzg as returns_item,\n    _slce_sol_cuobj as _slce_sol_cuobj,\n    aufpl_olc as operation_task_list_no,\n    ntgew as net_weight_the_item,\n    vgtyp as preceding_doc_categ,\n    stockloc as location,\n    pmatn as pricing_reference_material_id,\n    sernr as bom_explosion_number_id,\n    taxm4 as taxm4,\n    kalnr as cost_estimate_number_id,\n    oiexgnum as exchange_agreement_number_id,\n    erlre as completion_rule,\n    oiexgtyp as exchange_type_id,\n    oitaxto_im as tax_key_to_id,\n    kzbws as special_stock_valuation,\n    _accgo_is_co_rel as _accgo_is_co_rel,\n    pargb as trading_partba_id,\n    oimetind as metropolitan_indicator_id,\n    oih_folqty as _2nd_license_qty,\n    oic_truckn as truck_number,\n    uebtk as unlimited_overdelivery_allowed,\n    arsnum as reservation_id,\n    kdmat as material_number_used_by_customer,\n    bpn as business_partner_number_id,\n    mvgr1 as material_group_1_id,\n    voref as complete_reference_indicator,\n    erzet as created_tim,\n    arktx as short_text_sales_order_item,\n    cmpnt as credit_funct_active,\n    oihnotlgort as storage_loc_id,\n    uepos as higher_level_item_id,\n    stdat as key_the_bill_material_date,\n    stcur as exchange_rate_stats,\n    oitaxfrom_ex as oitaxfrom_ex,\n    fiscal_incentive_id as incentive_id,\n    _slce_single_conf_done as _slce_single_conf_done,\n    klmeng as cumul_confirmed_qty,\n    zmeng as target_quantity_in_sales_units,\n    oidrc as differ_refer_code_id,\n    pay_method as payment_methods,\n    _slce_sol_ext_guid as _slce_sol_ext_guid,\n    kzwi2 as subtotal_2_val,\n    oibypass as is_oil_plt_det_ind,\n    fsh_item_group as item_group,\n    aufpl_oaa as aufpl_oaa,\n    kwmeng as order_quantity,\n    oih_lcfol_ex as oih_lcfol_ex,\n    koupd as condition_update,\n    fsh_grid_cond_rec as grid_condition_number,\n    techs as standard_variant,\n    matnr as material_id,\n    wgru1 as material_group_hierarchy_1,\n    oitaxfrom as oitaxfrom,\n    taxm5 as taxm5,\n    kztlf as partial_delivery_at_item_level,\n    iuid_relevant as iuid_relevant_customer,\n    oic_kmpos as ref_contract_item,\n    z_prs_country as country_key_id,\n    gsber as business_area_id,\n    oipricie_ex as oipricie_ex,\n    fsh_crsd as condition_no,\n    fsh_transaction as transaction_number,\n    grkor as delivery_group,\n    uepvw as id_higher_level_item_usage,\n    mfrgr as material_freight_group_id,\n    vbelv as originating_document_id,\n    untto as underdelivery_tolerance_limit,\n    plavo as plandelschedinstruct_id,\n    vpzuo as allocation_indicator,\n    mvgr3 as material_group_3_id,\n    sugrd as reason_material_substitution_id,\n    oic_ptrip as pipeline_trip_number_external,\n    oic_adestn as alternate_destination,\n    oic_oland1 as origin_country_id,\n    mvgr2 as material_group_2_id,\n    netpr as net_price_val,\n    oicontnr as outline_agreement_contract_id,\n    stman as inconsistent_configuration,\n    oiedbal_ex as oiedbal_ex,\n    j_1btaxlw3 as iss_tax_law_id,\n    _slce_single_conf_reqired as _slce_single_conf_reqired,\n    oinetcyc as netting_cycle_id,\n    prsok as pricing_is_ok,\n    vgpos as reference_item_id,\n    cuobj_ch as internal_object_no,\n    oic_pdestn as tax_destination,\n    rep_freq as reporting_frequency,\n    lsmeng as required_deliv_qty,\n    stpoz as stpoz,\n    kzwi3 as subtotal_3_val,\n    posar as item_type,\n    budget_pd as budget_period_id,\n    z_prs_chargelevl as staff_grade,\n    posnv as originating_item_id,\n    wgru2 as material_group_hierarchy_2,\n    oifeetot as fee_total_val,\n    oic_dregio as destination_region_id,\n    oih_licin_ex as oih_licin_ex,\n    oioilcon as oil_content_perc,\n    aufnr as order_id,\n    sgt_rcat as requirement_segment,\n    oidmsg_uom as unit_measure_msg,\n    oibasprod as base_product_number_id,\n    msr_refund_code as returns_refund_code_id,\n    cuobj as configuration,\n    kbver as deviation_in_percent,\n    sposn as bom_item_number,\n    fsh_season_year as season_year_id,\n    zzdea_license as dea_number,\n    taxm6 as taxm6,\n    mprok as status_manual_price_change,\n    provg as commission_group_id,\n    oitaxto as oitaxto,\n    cmkua as cred_exch_rate,\n    cmtfg as partial_release,\n    oid_extbol as external_bill_lading,\n    ukonm as mnitem_matpricinggrp_id,\n    mvgr4 as material_group_4_id,\n    kmein as condition_uom_id,\n    klvar as costing_variant_id,\n    prs_sd_spsnr as standard_wbs_element_id,\n    mwsbp as tax_amount_document_currency_val,\n    revacc_reftype as rev_acc_reference_type,\n    wrf_charstc1 as characteristic_value_1,\n    fsh_item as item_number,\n    skopf as assortment_module_id,\n    oibwtar_ex as oibwtar_ex,\n    prodh as product_hierarchy_id,\n    stkey as origin_the_bill_material,\n    j_1btaxlw4 as cofins_tax_law_id,\n    route as route_id,\n    _xlso_course_bda as _xlso_course_bda,\n    matkl as material_group_id,\n    oic_drctry as drc_country_id,\n    kalvar as kalvar,\n    lfrel as item_is_relevant_delivery,\n    kmpmg as component_quantity,\n    kzwi4 as subtotal_4_val,\n    wtysc_clmitem as claim_item_number,\n    fmeng as quantity_is_fixed,\n    nrab_knumh as condition_number,\n    oitaxto_ex as oitaxto_ex,\n    cmpre as item_credit_price_val,\n    handoverdate as handover_date,\n    nachl as no_gr_posted_by_cst,\n    abdat as reconciliation_date,\n    kondm as material_pricing_group_id,\n    oic_dland1 as destination_country_id,\n    cmpre_flt as item_credit_price,\n    taxm7 as taxm7,\n    ferc_ind as regulatory_indicator_id,\n    oifeech as fee_edit_control,\n    oih_folqty_ex as oih_folqty_ex,\n    prctr as profit_center_id,\n    eannr as ean_number,\n    zschl_k as overhead_key,\n    oislf as state_license_fee_zone_id,\n    pctrf as profit_center_billing_id,\n    fsh_vas_rel as vas_relevant,\n    mvgr5 as material_group_5_id,\n    fkber as functional_area_id,\n    vbeav as var_processing_time,\n    zwert as oa_target_val,\n    antlf as max_part_deliveries,\n    cancel_allow as cancellation_allowed,\n    fsh_searef as copied_season,\n    oipricie as oipricie,\n    wrf_charstc2 as characteristic_value_2,\n    upflu as update_document_flow,\n    oihcotdisch as imp_posting_at_pod,\n    oidmsg_shp as ship_to_party_msg,\n    grant_nbr as _grant,\n    oidmsg_trm as payment_terms_msg,\n    umref as conversion_factor_quantities,\n    kzwi6 as subtotal_6_val,\n    knttp as account_assignment_category_id,\n    j_1btaxlw5 as pis_tax_law_id,\n    stlnr as bill_material,\n    vkaus as usage_id,\n    erdat as created_date,\n    kzwi5 as subtotal_5_val,\n    fsh_theme as fashion_theme_id,\n    fsh_season as season_id,\n    zieme as target_quantity_uom_uom_id,\n    oipsdrc as pricing_drc_id,\n    uebto as overdelivery_tolerance_limit,\n    grpos as alternative_to_item,\n    chmvs as quantity_proposal,\n    oihantyp_im as oihantyp_im,\n    abges as guaranteed,\n    oihnotwerks as cross_excise_duty_plant_id,\n    z_prs_bill_flag as billable_non_billable,\n    abgrs as results_analysis_key_id,\n    taxm8 as taxm8,\n    objnr as object_number_at_item_level_id,\n    volum as volume_the_item,\n    oiinex_ex as ed_pricing_key_id,\n    j_1btaxlw1 as icms_law_id,\n    j_1bcfop as cfop_code_and_extension_id,\n    kowrr as statistical_values,\n    fixmg as delivery_date_and_quantity_fixed,\n    _xlso_course_id as _xlso_course_id,\n    fmfgus_key as us_government_fields,\n    atpkz as replacement_part,\n    oifeedt as fee_pricing_condition_date,\n    meins as base_uom_id,\n    oiinex as oiinex,\n    msr_ret_reason as return_reason_id,\n    handoverloc as handover_location,\n    lfmng as minimum_delivery_qty,\n    ktgrm as acct_assignment_grp_id,\n    oia_baselo as base_location,\n    betc as business_event_type_code,\n    wrf_charstc3 as characteristic_value_3,\n    oiedbalm_im as oiedbalm_im,\n    oihtaxrcp_ex as tax_recipient,\n    oic_ocounc as origin_county_code_id,\n    exart as bus_transaction_type_id,\n    fsh_vasref as copied_vas,\n    oiwap as wide_area_pricing_zone_id,\n    vgbel as reference_document_id,\n    kannr as kanban_sequence_number,\n    sumbd as summing_up_requirements,\n    oidmsg_prd as products_message,\n    posex as purchase_order_item,\n    oitaxgrp_im as oitaxgrp_im,\n    oic_ocityc as origin_city_code_id,\n    oid_ship as ship_to_party_id,\n    prosa as id_material_determination,\n    berid as mrp_area_id,\n    logsys_ext as logical_system_id,\n    oipipeval as val_ind_pipeline,\n    oitaxgrp as oitaxgrp,\n    vrkme as sales_uom_id,\n    ean11 as ean,\n    taxm9 as taxm9,\n    kzfme as leading_uom,\n    wktps as value_contract_item_id,\n    j_1btaxlw2 as ipi_law_id,\n    oiedbalm as oiedbalm,\n    stpos as bill_material_item_number,\n    anzsn as number_serial_numbers,\n    oisbrel as s_b_prod_relev_ind,\n    oih_lictp as oih_lictp,\n    wavwr as cost_document_currency_val,\n    arspos as item_no_reservation,\n    _bev1_srfund as _bev1_srfund,\n    netwr as net_val,\n    prs_objnr as engagement_mgmt_object_number,\n    kbmeng as kbmeng,\n    prefe as preference_auth,\n    prbme as product_group_uom_id,\n    clint as internal_class_number_id,\n    zzdea_schedule as dea_schedule_key,\n    oiedbal as oiedbal,\n    trmrisk_relevant as risk_relevancy_in_sales,\n    chspl as batch_split_allowed,\n    matwa as material_entered_id,\n    faksp as billing_block_item_id,\n    fonds as fund_id,\n    brgew as gross_weight_the_item,\n    abfor as form_payment_guarantee_id,\n    stadat as statistics_date,\n    vstel as shipping_point_id,\n    mill_se_gposn as global_item_id,\n    lgort as storage_location_id,\n    msr_approv_block as approval_block,\n    cepok as status_expected_price,\n    _fivetran_deleted as _fivetran_deleted,\n    _fivetran_synced as _fivetran_synced,\n    _fivetran_sap_archived as _fivetran_sap_archived\nfrom {{ ref('stg_sap__vbap') }}\nwhere mandt in ('{{ var(\"sales_and_procurement_mandt_var\", [\"800\"]) | join(\"','\") }}')", "doc_blocks": [], "language": "sql", "refs": [{"name": "stg_sap__vbap", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": [], "nodes": ["model.sap.stg_sap__vbap"]}, "compiled_path": "target/compiled/sap/models/sales_and_procurement/star_schema/intermediate/int_sap__sales_document_item.sql", "compiled": true, "compiled_code": "\n\nselect\n    mandt as client_id,\n    posnr as sales_document_item_id,\n    vbeln as sales_document_id,\n    smeng as scale_quantity,\n    stlty as bom_category,\n    vgref as preceding_document_resulted_from_ref,\n    bwtar as valuation_type_id,\n    knuma_ag as sales_deal_id,\n    spart as division_id,\n    bwtex as indicator_separate_valuation,\n    oih_licin as internal_license_no_id,\n    oic_dcounc as destination_county_code_id,\n    knuma_pi as promotion_id,\n    oic_dcityc as destination_city_code_id,\n    tas as treasury_account_symbol,\n    oignrule as gross_net_pricing_rule_id,\n    upmat as mnitm_prcrefmatl_id,\n    kalsm_k as costing_sheet_id,\n    oicertf1_ex as external_license_no,\n    aplzl_olc as counter,\n    umvkn as denominator,\n    oidmsg_qty as quantity_message,\n    kever as deviation_days,\n    mtvfp as availability_check_id,\n    oihantyp_ex as handling_type_id,\n    abgru as reason_rejection_id,\n    xchar as batch_management,\n    kostl as cost_center_id,\n    _accgo_tx_p as _accgo_tx_p,\n    prs_work_period as work_period,\n    vkgru as repair_classification_items_id,\n    wktnr as value_contract_no_id,\n    absfz as absolute_deviation,\n    oih_lcfol as follow_on_license_id,\n    vbeaf as fixed_process_time,\n    ernam as created_by,\n    oitaxfrom_im as tax_key_from_id,\n    stafo as update_group_stats_id,\n    oic_lifnr as vendor_id,\n    j_1btxsdc as sd_tax_code_id,\n    taxm1 as tax_classification_id,\n    lprio as delivery_priority_id,\n    oiedbalm_ex as balance_method_ind,\n    umziz as conversion_factor,\n    kzvbr as consumption_posting,\n    oic_aorgin as alternate_origin,\n    _slce_inst_guid as _slce_inst_guid,\n    charg as batch_id,\n    stlkn as bom_item_node_number,\n    fsh_collection as fashion_collection_id,\n    cmeth as quantity_conversion_method,\n    aplzl_oaa as aplzl_oaa,\n    oidmsg_dat as validity_date_msg,\n    umvkz as numerator,\n    oitaxgrp_ex as excise_duty_group_id,\n    fsh_candate as cancellation_date,\n    oipricie_im as ed_pricing_external,\n    _slce_sol_posnr as _slce_sol_posnr,\n    tax_subject_st as tax_subject_to_substituicao_tributaria,\n    gewei as weight_uom_id,\n    revacc_refid as revenue_accounting_reference_id,\n    oic_porgin as tax_origin,\n    sobkz as special_stock_id,\n    vpwrk as planning_plant_id,\n    waerk as sd_document_currency_id,\n    mod_allow as modification_allowed,\n    umzin as umzin,\n    magrv as matl_grp_pack_matls_id,\n    oic_pbatch as pipe_ex_batch_no,\n    bonus as volume_rebate_group_id,\n    sloctype as location_type,\n    oiedbal_im as ed_balance_indicator,\n    fsh_vas_prnt_id as sd_item_id,\n    ablfz as rounding_quantity_delivery,\n    taxm3 as taxm3,\n    pstyv as sales_document_item_category_id,\n    _xlso_course_eda as _xlso_course_eda,\n    fiscal_incentive as tax_incentive_type_id,\n    oic_mot as mode_transport_id,\n    oic_oregio as origin_region_id,\n    fistl as funds_center_id,\n    vpmat as planning_material_id,\n    awahr as order_probability_the_item,\n    kpein as condition_pricing_unit,\n    voleh as volume_uom_id,\n    werks as plant_own_or_external_id,\n    oicertf1 as oicertf1,\n    knumh as no_cond_rec_batch,\n    taxm2 as taxm2,\n    fsh_psm_pfm_split as psm_and_pfm_split_id,\n    tc_aut_det as tax_code_automatically_determined_id,\n    serail as serial_number_profile_id,\n    kosch as product_allocation_id,\n    oid_miscdl as miscellaneous_delivery_number,\n    oih_lictp_ex as license_type_id,\n    paobjnr as profitability_segment_no,\n    ps_psp_pnr as wbs_element_id,\n    rkfkf as billing_meth_co_ppc,\n    sktof as cash_discount_indicator,\n    fkrel as relevant_billing,\n    oihantyp as oihantyp,\n    _slce_sol_matnr as _slce_sol_matnr,\n    oiplantd as is_oil_plant_determ,\n    lstanr as free_goods_delivery_control,\n    _dataaging as filter_value_aging_date,\n    cpd_updat as time_stamp,\n    oic_drcreg as drc_region_id,\n    bedae as requirements_type_id,\n    manual_tc_reason as manual_tax_code_reason_id,\n    spcsto as nf_cfop_special_case_id,\n    aedat as changed_date,\n    z_prs_offshore as on_near_offshore_delivery_type,\n    kzwi1 as subtotal_1_val,\n    oiedok as excise_duty_validation_indicator,\n    fsh_pqr_uepos as higher_lev_item_partial_quantity_rej_id,\n    handovertime as handover_tim,\n    xchpf as xchpf,\n    oibwtar_im as oibwtar_im,\n    shkzg as returns_item,\n    _slce_sol_cuobj as _slce_sol_cuobj,\n    aufpl_olc as operation_task_list_no,\n    ntgew as net_weight_the_item,\n    vgtyp as preceding_doc_categ,\n    stockloc as location,\n    pmatn as pricing_reference_material_id,\n    sernr as bom_explosion_number_id,\n    taxm4 as taxm4,\n    kalnr as cost_estimate_number_id,\n    oiexgnum as exchange_agreement_number_id,\n    erlre as completion_rule,\n    oiexgtyp as exchange_type_id,\n    oitaxto_im as tax_key_to_id,\n    kzbws as special_stock_valuation,\n    _accgo_is_co_rel as _accgo_is_co_rel,\n    pargb as trading_partba_id,\n    oimetind as metropolitan_indicator_id,\n    oih_folqty as _2nd_license_qty,\n    oic_truckn as truck_number,\n    uebtk as unlimited_overdelivery_allowed,\n    arsnum as reservation_id,\n    kdmat as material_number_used_by_customer,\n    bpn as business_partner_number_id,\n    mvgr1 as material_group_1_id,\n    voref as complete_reference_indicator,\n    erzet as created_tim,\n    arktx as short_text_sales_order_item,\n    cmpnt as credit_funct_active,\n    oihnotlgort as storage_loc_id,\n    uepos as higher_level_item_id,\n    stdat as key_the_bill_material_date,\n    stcur as exchange_rate_stats,\n    oitaxfrom_ex as oitaxfrom_ex,\n    fiscal_incentive_id as incentive_id,\n    _slce_single_conf_done as _slce_single_conf_done,\n    klmeng as cumul_confirmed_qty,\n    zmeng as target_quantity_in_sales_units,\n    oidrc as differ_refer_code_id,\n    pay_method as payment_methods,\n    _slce_sol_ext_guid as _slce_sol_ext_guid,\n    kzwi2 as subtotal_2_val,\n    oibypass as is_oil_plt_det_ind,\n    fsh_item_group as item_group,\n    aufpl_oaa as aufpl_oaa,\n    kwmeng as order_quantity,\n    oih_lcfol_ex as oih_lcfol_ex,\n    koupd as condition_update,\n    fsh_grid_cond_rec as grid_condition_number,\n    techs as standard_variant,\n    matnr as material_id,\n    wgru1 as material_group_hierarchy_1,\n    oitaxfrom as oitaxfrom,\n    taxm5 as taxm5,\n    kztlf as partial_delivery_at_item_level,\n    iuid_relevant as iuid_relevant_customer,\n    oic_kmpos as ref_contract_item,\n    z_prs_country as country_key_id,\n    gsber as business_area_id,\n    oipricie_ex as oipricie_ex,\n    fsh_crsd as condition_no,\n    fsh_transaction as transaction_number,\n    grkor as delivery_group,\n    uepvw as id_higher_level_item_usage,\n    mfrgr as material_freight_group_id,\n    vbelv as originating_document_id,\n    untto as underdelivery_tolerance_limit,\n    plavo as plandelschedinstruct_id,\n    vpzuo as allocation_indicator,\n    mvgr3 as material_group_3_id,\n    sugrd as reason_material_substitution_id,\n    oic_ptrip as pipeline_trip_number_external,\n    oic_adestn as alternate_destination,\n    oic_oland1 as origin_country_id,\n    mvgr2 as material_group_2_id,\n    netpr as net_price_val,\n    oicontnr as outline_agreement_contract_id,\n    stman as inconsistent_configuration,\n    oiedbal_ex as oiedbal_ex,\n    j_1btaxlw3 as iss_tax_law_id,\n    _slce_single_conf_reqired as _slce_single_conf_reqired,\n    oinetcyc as netting_cycle_id,\n    prsok as pricing_is_ok,\n    vgpos as reference_item_id,\n    cuobj_ch as internal_object_no,\n    oic_pdestn as tax_destination,\n    rep_freq as reporting_frequency,\n    lsmeng as required_deliv_qty,\n    stpoz as stpoz,\n    kzwi3 as subtotal_3_val,\n    posar as item_type,\n    budget_pd as budget_period_id,\n    z_prs_chargelevl as staff_grade,\n    posnv as originating_item_id,\n    wgru2 as material_group_hierarchy_2,\n    oifeetot as fee_total_val,\n    oic_dregio as destination_region_id,\n    oih_licin_ex as oih_licin_ex,\n    oioilcon as oil_content_perc,\n    aufnr as order_id,\n    sgt_rcat as requirement_segment,\n    oidmsg_uom as unit_measure_msg,\n    oibasprod as base_product_number_id,\n    msr_refund_code as returns_refund_code_id,\n    cuobj as configuration,\n    kbver as deviation_in_percent,\n    sposn as bom_item_number,\n    fsh_season_year as season_year_id,\n    zzdea_license as dea_number,\n    taxm6 as taxm6,\n    mprok as status_manual_price_change,\n    provg as commission_group_id,\n    oitaxto as oitaxto,\n    cmkua as cred_exch_rate,\n    cmtfg as partial_release,\n    oid_extbol as external_bill_lading,\n    ukonm as mnitem_matpricinggrp_id,\n    mvgr4 as material_group_4_id,\n    kmein as condition_uom_id,\n    klvar as costing_variant_id,\n    prs_sd_spsnr as standard_wbs_element_id,\n    mwsbp as tax_amount_document_currency_val,\n    revacc_reftype as rev_acc_reference_type,\n    wrf_charstc1 as characteristic_value_1,\n    fsh_item as item_number,\n    skopf as assortment_module_id,\n    oibwtar_ex as oibwtar_ex,\n    prodh as product_hierarchy_id,\n    stkey as origin_the_bill_material,\n    j_1btaxlw4 as cofins_tax_law_id,\n    route as route_id,\n    _xlso_course_bda as _xlso_course_bda,\n    matkl as material_group_id,\n    oic_drctry as drc_country_id,\n    kalvar as kalvar,\n    lfrel as item_is_relevant_delivery,\n    kmpmg as component_quantity,\n    kzwi4 as subtotal_4_val,\n    wtysc_clmitem as claim_item_number,\n    fmeng as quantity_is_fixed,\n    nrab_knumh as condition_number,\n    oitaxto_ex as oitaxto_ex,\n    cmpre as item_credit_price_val,\n    handoverdate as handover_date,\n    nachl as no_gr_posted_by_cst,\n    abdat as reconciliation_date,\n    kondm as material_pricing_group_id,\n    oic_dland1 as destination_country_id,\n    cmpre_flt as item_credit_price,\n    taxm7 as taxm7,\n    ferc_ind as regulatory_indicator_id,\n    oifeech as fee_edit_control,\n    oih_folqty_ex as oih_folqty_ex,\n    prctr as profit_center_id,\n    eannr as ean_number,\n    zschl_k as overhead_key,\n    oislf as state_license_fee_zone_id,\n    pctrf as profit_center_billing_id,\n    fsh_vas_rel as vas_relevant,\n    mvgr5 as material_group_5_id,\n    fkber as functional_area_id,\n    vbeav as var_processing_time,\n    zwert as oa_target_val,\n    antlf as max_part_deliveries,\n    cancel_allow as cancellation_allowed,\n    fsh_searef as copied_season,\n    oipricie as oipricie,\n    wrf_charstc2 as characteristic_value_2,\n    upflu as update_document_flow,\n    oihcotdisch as imp_posting_at_pod,\n    oidmsg_shp as ship_to_party_msg,\n    grant_nbr as _grant,\n    oidmsg_trm as payment_terms_msg,\n    umref as conversion_factor_quantities,\n    kzwi6 as subtotal_6_val,\n    knttp as account_assignment_category_id,\n    j_1btaxlw5 as pis_tax_law_id,\n    stlnr as bill_material,\n    vkaus as usage_id,\n    erdat as created_date,\n    kzwi5 as subtotal_5_val,\n    fsh_theme as fashion_theme_id,\n    fsh_season as season_id,\n    zieme as target_quantity_uom_uom_id,\n    oipsdrc as pricing_drc_id,\n    uebto as overdelivery_tolerance_limit,\n    grpos as alternative_to_item,\n    chmvs as quantity_proposal,\n    oihantyp_im as oihantyp_im,\n    abges as guaranteed,\n    oihnotwerks as cross_excise_duty_plant_id,\n    z_prs_bill_flag as billable_non_billable,\n    abgrs as results_analysis_key_id,\n    taxm8 as taxm8,\n    objnr as object_number_at_item_level_id,\n    volum as volume_the_item,\n    oiinex_ex as ed_pricing_key_id,\n    j_1btaxlw1 as icms_law_id,\n    j_1bcfop as cfop_code_and_extension_id,\n    kowrr as statistical_values,\n    fixmg as delivery_date_and_quantity_fixed,\n    _xlso_course_id as _xlso_course_id,\n    fmfgus_key as us_government_fields,\n    atpkz as replacement_part,\n    oifeedt as fee_pricing_condition_date,\n    meins as base_uom_id,\n    oiinex as oiinex,\n    msr_ret_reason as return_reason_id,\n    handoverloc as handover_location,\n    lfmng as minimum_delivery_qty,\n    ktgrm as acct_assignment_grp_id,\n    oia_baselo as base_location,\n    betc as business_event_type_code,\n    wrf_charstc3 as characteristic_value_3,\n    oiedbalm_im as oiedbalm_im,\n    oihtaxrcp_ex as tax_recipient,\n    oic_ocounc as origin_county_code_id,\n    exart as bus_transaction_type_id,\n    fsh_vasref as copied_vas,\n    oiwap as wide_area_pricing_zone_id,\n    vgbel as reference_document_id,\n    kannr as kanban_sequence_number,\n    sumbd as summing_up_requirements,\n    oidmsg_prd as products_message,\n    posex as purchase_order_item,\n    oitaxgrp_im as oitaxgrp_im,\n    oic_ocityc as origin_city_code_id,\n    oid_ship as ship_to_party_id,\n    prosa as id_material_determination,\n    berid as mrp_area_id,\n    logsys_ext as logical_system_id,\n    oipipeval as val_ind_pipeline,\n    oitaxgrp as oitaxgrp,\n    vrkme as sales_uom_id,\n    ean11 as ean,\n    taxm9 as taxm9,\n    kzfme as leading_uom,\n    wktps as value_contract_item_id,\n    j_1btaxlw2 as ipi_law_id,\n    oiedbalm as oiedbalm,\n    stpos as bill_material_item_number,\n    anzsn as number_serial_numbers,\n    oisbrel as s_b_prod_relev_ind,\n    oih_lictp as oih_lictp,\n    wavwr as cost_document_currency_val,\n    arspos as item_no_reservation,\n    _bev1_srfund as _bev1_srfund,\n    netwr as net_val,\n    prs_objnr as engagement_mgmt_object_number,\n    kbmeng as kbmeng,\n    prefe as preference_auth,\n    prbme as product_group_uom_id,\n    clint as internal_class_number_id,\n    zzdea_schedule as dea_schedule_key,\n    oiedbal as oiedbal,\n    trmrisk_relevant as risk_relevancy_in_sales,\n    chspl as batch_split_allowed,\n    matwa as material_entered_id,\n    faksp as billing_block_item_id,\n    fonds as fund_id,\n    brgew as gross_weight_the_item,\n    abfor as form_payment_guarantee_id,\n    stadat as statistics_date,\n    vstel as shipping_point_id,\n    mill_se_gposn as global_item_id,\n    lgort as storage_location_id,\n    msr_approv_block as approval_block,\n    cepok as status_expected_price,\n    _fivetran_deleted as _fivetran_deleted,\n    _fivetran_synced as _fivetran_synced,\n    _fivetran_sap_archived as _fivetran_sap_archived\nfrom \"postgres\".\"public_sap_dev\".\"stg_sap__vbap\"\nwhere mandt in ('800')", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null, "primary_key": [], "time_spine": null}, "model.sap.int_sap__purchasing_document_type": {"database": "postgres", "schema": "public_sap_dev", "name": "int_sap__purchasing_document_type", "resource_type": "model", "package_name": "sap", "path": "sales_and_procurement/star_schema/intermediate/int_sap__purchasing_document_type.sql", "original_file_path": "models/sales_and_procurement/star_schema/intermediate/int_sap__purchasing_document_type.sql", "unique_id": "model.sap.int_sap__purchasing_document_type", "fqn": ["sap", "sales_and_procurement", "star_schema", "intermediate", "int_sap__purchasing_document_type"], "alias": "int_sap__purchasing_document_type", "checksum": {"name": "sha256", "checksum": "36b39624634671c3d554d96acdb30d6e8c16ad9f1786a65e919495707afda911"}, "config": {"enabled": true, "alias": null, "schema": "sap_dev", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "ephemeral", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "freshness": null}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "unrendered_config": {"materialized": "ephemeral", "schema": "sap_{{ var('directed_schema','dev') }}", "enabled": true}, "created_at": 1756850326.600878, "relation_name": null, "raw_code": "{{ config(enabled=var('sap_using_t161', True)) }}\n\nwith t161 as (\n    select *\n    from {{ ref('stg_sap__t161') }}\n\n{% set using_t161t = var('sap_using_t161t', True) %}\n{% if using_t161t %}\n), t161t as (\n    select *\n    from {{ ref('stg_sap__t161t') }}\n{% endif %}\n\n), final as (\n    select\n        t161.mandt as client_id,\n        t161.bstyp as purch_doc_category_id,\n        t161.bsart as purchasing_document_type_id,\n        t161.bsakz as control_indicator,\n        t161.pincr as item_number_interval,\n        t161.numki as no_range_int_assgt,\n        t161.numke as no_range_ext_assg,\n        t161.brefn as field_selection_key_id,\n        t161.refba as reference_document_type_id,\n        t161.abvor as stdrd_rel_order_qty,\n        t161.stafo as update_group_stats_id,\n        t161.upinc as subitem_interval,\n        t161.stako as time_dep_conditions,\n        t161.pargr as partner_determination_procedure_id,\n        t161.numka as number_range_ale,\n        t161.hityp as vendor_hierarchy_cat_id,\n        t161.lphis as rel_documentation,\n        t161.gsfrg as overall_release_requisitions,\n        t161.variante as layout,\n        t161.shenq as shared_lock_only,\n        t161.kzale as distributed_contract_ale,\n        t161.abgebot as global_perc_bid,\n        t161.kornr as corr_misc_provis,\n        t161.umlif as vendor,\n        t161.koett as contract_with_delivery_schedule,\n        t161.ar_object as document_type_id,\n        t161.koako as koako,\n        t161.oicsegi as qty_sched_permitted,\n        t161.oirfqreq as precedence_f_rfq_req,\n        t161.wvvkz as further_processing_summar_docs,\n        t161.xlokz as cross_system_transit,\n        t161.cp_aktive as commitment_plan_is_active,\n        t161.cptype as category_commitment_plan,\n        t161.fls_rsto as enh_store_return,\n        t161.msr_active as adv_returns_active,\n        t161.rdp_profile as risk_distribution_plan_profile_id,\n        t161.numkc as srm_contract_number_range,\n        t161._sapmp_ceact as sapmp_fastentry_chars_is_active,\n        t161._sapmp_pdact as sapmp_activate_inheritance,\n        t161._sapmp_pprot as sapmp_inheritance_log,\n        t161._sapmp_puser as sapmp_inheritance_overwrite_user_values,\n        t161._sapmp_pausw as sapmp_inheritance_char_selection_list,\n        t161._sapmp_atnam as sapmp_characteristic_name,\n        t161._sapmp_gauf as sapmp_global_local_group_may_be_undone,\n        t161.tolsl as tolerance_key_id,\n        t161.fsh_vas_act as vas_active_flag,\n        t161.fsh_vas_kalsm as determination_procedure,\n        t161.fsh_vas_del as vas_deletion_criteria,\n        t161.fsh_vas_detdt as date_vas_determination,\n        t161.fsh_excl_return as exclude_return_items,\n        t161.fsh_var_kalsm as determination_procedure_id,\n        t161.fsh_dpr_detpro as fsh_dpr_detpro,\n        t161.fsh_po_idoc as generic_article_in_po_using_idoc,\n        t161.mill_omkz as use_ref_characteristics,\n        t161.wrf_enable_dateline as enable_dateline,\n        t161.hvr_is_deleted as hvr_is_deleted,\n        t161.hvr_change_time as hvr_change_time,\n        {{ 't161t.batxt' if using_t161t else 'cast(null as ' ~ dbt.type_string() ~ ')' }} as doc_type_descript\n    from t161\n\n    {% if using_t161t %}\n    left join t161t\n        on t161.mandt = t161t.mandt\n        and t161.bsart = t161t.bsart\n        and t161.bstyp = t161t.bstyp\n        and t161t.spras = 'e'\n    {% endif %}\n\n    where t161.mandt in ('{{ var(\"sales_and_procurement_mandt_var\", [\"800\"]) | join(\"','\") }}')\n)\n\nselect *\nfrom final", "doc_blocks": [], "language": "sql", "refs": [{"name": "stg_sap__t161", "package": null, "version": null}, {"name": "stg_sap__t161t", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": [], "nodes": ["model.sap.stg_sap__t161", "model.sap.stg_sap__t161t"]}, "compiled_path": "target/compiled/sap/models/sales_and_procurement/star_schema/intermediate/int_sap__purchasing_document_type.sql", "compiled": true, "compiled_code": "\n\nwith t161 as (\n    select *\n    from \"postgres\".\"public_sap_dev\".\"stg_sap__t161\"\n\n\n\n), t161t as (\n    select *\n    from \"postgres\".\"public_sap_dev\".\"stg_sap__t161t\"\n\n\n), final as (\n    select\n        t161.mandt as client_id,\n        t161.bstyp as purch_doc_category_id,\n        t161.bsart as purchasing_document_type_id,\n        t161.bsakz as control_indicator,\n        t161.pincr as item_number_interval,\n        t161.numki as no_range_int_assgt,\n        t161.numke as no_range_ext_assg,\n        t161.brefn as field_selection_key_id,\n        t161.refba as reference_document_type_id,\n        t161.abvor as stdrd_rel_order_qty,\n        t161.stafo as update_group_stats_id,\n        t161.upinc as subitem_interval,\n        t161.stako as time_dep_conditions,\n        t161.pargr as partner_determination_procedure_id,\n        t161.numka as number_range_ale,\n        t161.hityp as vendor_hierarchy_cat_id,\n        t161.lphis as rel_documentation,\n        t161.gsfrg as overall_release_requisitions,\n        t161.variante as layout,\n        t161.shenq as shared_lock_only,\n        t161.kzale as distributed_contract_ale,\n        t161.abgebot as global_perc_bid,\n        t161.kornr as corr_misc_provis,\n        t161.umlif as vendor,\n        t161.koett as contract_with_delivery_schedule,\n        t161.ar_object as document_type_id,\n        t161.koako as koako,\n        t161.oicsegi as qty_sched_permitted,\n        t161.oirfqreq as precedence_f_rfq_req,\n        t161.wvvkz as further_processing_summar_docs,\n        t161.xlokz as cross_system_transit,\n        t161.cp_aktive as commitment_plan_is_active,\n        t161.cptype as category_commitment_plan,\n        t161.fls_rsto as enh_store_return,\n        t161.msr_active as adv_returns_active,\n        t161.rdp_profile as risk_distribution_plan_profile_id,\n        t161.numkc as srm_contract_number_range,\n        t161._sapmp_ceact as sapmp_fastentry_chars_is_active,\n        t161._sapmp_pdact as sapmp_activate_inheritance,\n        t161._sapmp_pprot as sapmp_inheritance_log,\n        t161._sapmp_puser as sapmp_inheritance_overwrite_user_values,\n        t161._sapmp_pausw as sapmp_inheritance_char_selection_list,\n        t161._sapmp_atnam as sapmp_characteristic_name,\n        t161._sapmp_gauf as sapmp_global_local_group_may_be_undone,\n        t161.tolsl as tolerance_key_id,\n        t161.fsh_vas_act as vas_active_flag,\n        t161.fsh_vas_kalsm as determination_procedure,\n        t161.fsh_vas_del as vas_deletion_criteria,\n        t161.fsh_vas_detdt as date_vas_determination,\n        t161.fsh_excl_return as exclude_return_items,\n        t161.fsh_var_kalsm as determination_procedure_id,\n        t161.fsh_dpr_detpro as fsh_dpr_detpro,\n        t161.fsh_po_idoc as generic_article_in_po_using_idoc,\n        t161.mill_omkz as use_ref_characteristics,\n        t161.wrf_enable_dateline as enable_dateline,\n        t161.hvr_is_deleted as hvr_is_deleted,\n        t161.hvr_change_time as hvr_change_time,\n        t161t.batxt as doc_type_descript\n    from t161\n\n    \n    left join t161t\n        on t161.mandt = t161t.mandt\n        and t161.bsart = t161t.bsart\n        and t161.bstyp = t161t.bstyp\n        and t161t.spras = 'e'\n    \n\n    where t161.mandt in ('800')\n)\n\nselect *\nfrom final", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null, "primary_key": [], "time_spine": null}, "model.sap.int_sap__purchasing_document_header": {"database": "postgres", "schema": "public_sap_dev", "name": "int_sap__purchasing_document_header", "resource_type": "model", "package_name": "sap", "path": "sales_and_procurement/star_schema/intermediate/int_sap__purchasing_document_header.sql", "original_file_path": "models/sales_and_procurement/star_schema/intermediate/int_sap__purchasing_document_header.sql", "unique_id": "model.sap.int_sap__purchasing_document_header", "fqn": ["sap", "sales_and_procurement", "star_schema", "intermediate", "int_sap__purchasing_document_header"], "alias": "int_sap__purchasing_document_header", "checksum": {"name": "sha256", "checksum": "34c590e1a384e0b4d449b1c041b14448b74b1dbb61ca4bdb22ec52ad29dcf61a"}, "config": {"enabled": true, "alias": null, "schema": "sap_dev", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "ephemeral", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "freshness": null}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "unrendered_config": {"materialized": "ephemeral", "schema": "sap_{{ var('directed_schema','dev') }}", "enabled": true}, "created_at": 1756850326.6110723, "relation_name": null, "raw_code": "{{ config(enabled=var('sap_using_ekko', True)) }}\n\nselect\n    mandt as client_id,\n    ebeln as purchasing_document_id,\n    bukrs as company_code_id,\n    bstyp as purchasing_document_category,\n    bsart as purchasing_document_type_id,\n    bsakz as control_indicator,\n    loekz as deletion_indicator,\n    statu as status_purchasing_document,\n    {{ char_yyyymmdd_to_date('aedat') }} as created_date,\n    ernam as created_by,\n    pincr as item_number_interval,\n    lponr as last_item_number_id,\n    lifnr as vendor_id,\n    spras as language_key_id,\n    zterm as payment_terms,\n    zbd1t as payment_in,\n    zbd2t as zbd2t,\n    zbd3t as zbd3t,\n    zbd1p as cash_discount_percentage_1,\n    zbd2p as cash_discount_percentage_2,\n    ekorg as purchasing_organization_id,\n    ekgrp as purchasing_group_id,\n    waers as currency_id,\n    wkurs as exchange_rate,\n    kufix as exchange_rate_fixed,\n    {{ char_yyyymmdd_to_date('bedat') }} as purchasing_document_date,\n    {{ char_yyyymmdd_to_date('kdatb') }} as start_validity_period_date,\n    {{ char_yyyymmdd_to_date('kdate') }} as end_validity_period_date,\n    {{ char_yyyymmdd_to_date('bwbdt') }} as closing_applications_date,\n    {{ char_yyyymmdd_to_date('angdt') }} as quotation_deadline_date,\n    {{ char_yyyymmdd_to_date('bnddt') }} as binding_period_quotation_date,\n    {{ char_yyyymmdd_to_date('gwldt') }} as warranty_date,\n    ausnr as bid_invitation_number_id,\n    angnr as quotation_number,\n    {{ char_yyyymmdd_to_date('ihran') }} as quotation_submission_date,\n    ihrez as your_reference,\n    verkf as salesperson,\n    telf1 as vendors_telephone_number,\n    llief as supplying_vendor_id,\n    kunnr as customer_id,\n    konnr as outline_agreement_id,\n    abgru as field_not_used,\n    autlf as complete_delivery,\n    weakt as indicator_goods_receipt_message,\n    reswk as supplying_plant_id,\n    lblif as field_not_used_id,\n    inco1 as incoterms_id,\n    inco2 as incoterms_part_2,\n    ktwrt as target_header_val,\n    submi as collective_number,\n    knumv as document_condition_no,\n    kalsm as procedure_id,\n    stafo as update_group_stats_id,\n    lifre as different_invoicing_party_id,\n    exnum as number_foreign_trade_id,\n    unsez as our_reference,\n    logsy as logical_system_id,\n    upinc as subitem_interval,\n    stako as time_dep_conditions,\n    frggr as release_group_id,\n    frgsx as release_strategy_id,\n    frgke as release_indicator_id,\n    frgzu as release_state,\n    frgrl as subject_to_release,\n    lands as country_tax_return_id,\n    lphis as rel_documentation,\n    adrnr as address_number_id,\n    stceg_l as country_sales_tax_id_number_id,\n    stceg as vat_registration_no,\n    absgr as reason_cancellation_id,\n    addnr as document_number_additional,\n    kornr as corr_misc_provis,\n    memory as purchase_order_not_yet_complete,\n    procstat as purch_doc_proc_state,\n    rlwrt as total_at_time_release_val,\n    revno as version_number_in_purchasing,\n    scmproc as scmproc,\n    reason_code as goods_receipt_reason_code,\n    memorytype as category_incompleteness,\n    rettp as retention_indicator,\n    retpc as retention_in_percent,\n    dptyp as down_payment_indicator,\n    dppct as down_payment_percentage,\n    dpamt as down_payment_amount_val,\n    {{ char_yyyymmdd_to_date('dpdat') }} as due_down_payment_date,\n    msr_id as process_identification_number,\n    hierarchy_exists as part_contract_hierarchy,\n    threshold_exists as threshold_value_exchange_rates,\n    legal_contract as legal_contract_number,\n    description as contract_name,\n    {{ char_yyyymmdd_to_date('release_date') }} as release_contract_date,\n    vsart as shipping_type_id,\n    handoverloc as handover_location,\n    shipcond as shipping_conditions_id,\n    incov as incoterms_version_id,\n    inco2_l as incoterms_location_1,\n    inco3_l as incoterms_location_2,\n    force_id as internal_key_force_element,\n    force_cnt as internal_version_counter,\n    reloc_id as relocation_id,\n    reloc_seq_id as relocation_step_id,\n    source_logsys as source_logsys,\n    fsh_transaction as transaction_number,\n    fsh_item_group as item_group,\n    fsh_vas_last_item as last_vas_item_number,\n    fsh_os_stg_change as os_strategy_specific_fields_change,\n    vzskz as interest_calculation_indicator_id,\n    fsh_snst_status as snapshot_status,\n    pohf_type as document_category,\n    {{ char_yyyymmdd_to_date('eq_eindt') }} as same_delivery_date,\n    eq_werks as same_plant_id,\n    fixpo as firm_deal_indicator,\n    ekgrp_allow as take_account_purch_group,\n    werks_allow as take_account_plants,\n    contract_allow as take_account_contracts,\n    pstyp_allow as take_account_item_categories,\n    fixpo_allow as take_account_fixed_date_purchases,\n    key_id_allow as consider_budget,\n    aurel_allow as take_account_alloc_table_relevance,\n    delper_allow as take_account_dlvy_period,\n    eindt_allow as take_account_delivery_date,\n    ltsnr_allow as include_vendor_subrange,\n    otb_level as otb_check_level,\n    otb_cond_type as otb_condition_type_id,\n    key_id as unique_number_budget,\n    otb_value as required_budget_val,\n    otb_curr as otb_currency_id,\n    otb_res_value as reserved_budget_val,\n    otb_spec_value as special_release_budget_val,\n    spr_rsn_profile as otb_reason_profile_special_release,\n    budg_type as budget_type,\n    otb_status as otb_check_status,\n    otb_reason as reason,\n    check_type as type_otb_check,\n    con_otb_req as otb_relevant_contract,\n    con_prebook_lev as indicator_level_contracts,\n    con_distr_lev as distrib_using_target_value_or_item,\n    hvr_is_deleted as hvr_is_deleted,\n    hvr_change_time as hvr_change_time\nfrom {{ ref('stg_sap__ekko') }}\nwhere mandt in ('{{ var(\"sales_and_procurement_mandt_var\", [\"800\"]) | join(\"','\") }}')", "doc_blocks": [], "language": "sql", "refs": [{"name": "stg_sap__ekko", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.sap.char_yyyymmdd_to_date"], "nodes": ["model.sap.stg_sap__ekko"]}, "compiled_path": "target/compiled/sap/models/sales_and_procurement/star_schema/intermediate/int_sap__purchasing_document_header.sql", "compiled": true, "compiled_code": "\n\nselect\n    mandt as client_id,\n    ebeln as purchasing_document_id,\n    bukrs as company_code_id,\n    bstyp as purchasing_document_category,\n    bsart as purchasing_document_type_id,\n    bsakz as control_indicator,\n    loekz as deletion_indicator,\n    statu as status_purchasing_document,\n    \n    case\n        when aedat::text ~ '^[0-9]{8}$'\n            and substring(aedat::text, 5, 2)::int between 1 and 12\n            and substring(aedat::text, 7, 2)::int between 1 and 31\n        then to_date(aedat::text, 'YYYYMMDD')\n        else null\n    end\n as created_date,\n    ernam as created_by,\n    pincr as item_number_interval,\n    lponr as last_item_number_id,\n    lifnr as vendor_id,\n    spras as language_key_id,\n    zterm as payment_terms,\n    zbd1t as payment_in,\n    zbd2t as zbd2t,\n    zbd3t as zbd3t,\n    zbd1p as cash_discount_percentage_1,\n    zbd2p as cash_discount_percentage_2,\n    ekorg as purchasing_organization_id,\n    ekgrp as purchasing_group_id,\n    waers as currency_id,\n    wkurs as exchange_rate,\n    kufix as exchange_rate_fixed,\n    \n    case\n        when bedat::text ~ '^[0-9]{8}$'\n            and substring(bedat::text, 5, 2)::int between 1 and 12\n            and substring(bedat::text, 7, 2)::int between 1 and 31\n        then to_date(bedat::text, 'YYYYMMDD')\n        else null\n    end\n as purchasing_document_date,\n    \n    case\n        when kdatb::text ~ '^[0-9]{8}$'\n            and substring(kdatb::text, 5, 2)::int between 1 and 12\n            and substring(kdatb::text, 7, 2)::int between 1 and 31\n        then to_date(kdatb::text, 'YYYYMMDD')\n        else null\n    end\n as start_validity_period_date,\n    \n    case\n        when kdate::text ~ '^[0-9]{8}$'\n            and substring(kdate::text, 5, 2)::int between 1 and 12\n            and substring(kdate::text, 7, 2)::int between 1 and 31\n        then to_date(kdate::text, 'YYYYMMDD')\n        else null\n    end\n as end_validity_period_date,\n    \n    case\n        when bwbdt::text ~ '^[0-9]{8}$'\n            and substring(bwbdt::text, 5, 2)::int between 1 and 12\n            and substring(bwbdt::text, 7, 2)::int between 1 and 31\n        then to_date(bwbdt::text, 'YYYYMMDD')\n        else null\n    end\n as closing_applications_date,\n    \n    case\n        when angdt::text ~ '^[0-9]{8}$'\n            and substring(angdt::text, 5, 2)::int between 1 and 12\n            and substring(angdt::text, 7, 2)::int between 1 and 31\n        then to_date(angdt::text, 'YYYYMMDD')\n        else null\n    end\n as quotation_deadline_date,\n    \n    case\n        when bnddt::text ~ '^[0-9]{8}$'\n            and substring(bnddt::text, 5, 2)::int between 1 and 12\n            and substring(bnddt::text, 7, 2)::int between 1 and 31\n        then to_date(bnddt::text, 'YYYYMMDD')\n        else null\n    end\n as binding_period_quotation_date,\n    \n    case\n        when gwldt::text ~ '^[0-9]{8}$'\n            and substring(gwldt::text, 5, 2)::int between 1 and 12\n            and substring(gwldt::text, 7, 2)::int between 1 and 31\n        then to_date(gwldt::text, 'YYYYMMDD')\n        else null\n    end\n as warranty_date,\n    ausnr as bid_invitation_number_id,\n    angnr as quotation_number,\n    \n    case\n        when ihran::text ~ '^[0-9]{8}$'\n            and substring(ihran::text, 5, 2)::int between 1 and 12\n            and substring(ihran::text, 7, 2)::int between 1 and 31\n        then to_date(ihran::text, 'YYYYMMDD')\n        else null\n    end\n as quotation_submission_date,\n    ihrez as your_reference,\n    verkf as salesperson,\n    telf1 as vendors_telephone_number,\n    llief as supplying_vendor_id,\n    kunnr as customer_id,\n    konnr as outline_agreement_id,\n    abgru as field_not_used,\n    autlf as complete_delivery,\n    weakt as indicator_goods_receipt_message,\n    reswk as supplying_plant_id,\n    lblif as field_not_used_id,\n    inco1 as incoterms_id,\n    inco2 as incoterms_part_2,\n    ktwrt as target_header_val,\n    submi as collective_number,\n    knumv as document_condition_no,\n    kalsm as procedure_id,\n    stafo as update_group_stats_id,\n    lifre as different_invoicing_party_id,\n    exnum as number_foreign_trade_id,\n    unsez as our_reference,\n    logsy as logical_system_id,\n    upinc as subitem_interval,\n    stako as time_dep_conditions,\n    frggr as release_group_id,\n    frgsx as release_strategy_id,\n    frgke as release_indicator_id,\n    frgzu as release_state,\n    frgrl as subject_to_release,\n    lands as country_tax_return_id,\n    lphis as rel_documentation,\n    adrnr as address_number_id,\n    stceg_l as country_sales_tax_id_number_id,\n    stceg as vat_registration_no,\n    absgr as reason_cancellation_id,\n    addnr as document_number_additional,\n    kornr as corr_misc_provis,\n    memory as purchase_order_not_yet_complete,\n    procstat as purch_doc_proc_state,\n    rlwrt as total_at_time_release_val,\n    revno as version_number_in_purchasing,\n    scmproc as scmproc,\n    reason_code as goods_receipt_reason_code,\n    memorytype as category_incompleteness,\n    rettp as retention_indicator,\n    retpc as retention_in_percent,\n    dptyp as down_payment_indicator,\n    dppct as down_payment_percentage,\n    dpamt as down_payment_amount_val,\n    \n    case\n        when dpdat::text ~ '^[0-9]{8}$'\n            and substring(dpdat::text, 5, 2)::int between 1 and 12\n            and substring(dpdat::text, 7, 2)::int between 1 and 31\n        then to_date(dpdat::text, 'YYYYMMDD')\n        else null\n    end\n as due_down_payment_date,\n    msr_id as process_identification_number,\n    hierarchy_exists as part_contract_hierarchy,\n    threshold_exists as threshold_value_exchange_rates,\n    legal_contract as legal_contract_number,\n    description as contract_name,\n    \n    case\n        when release_date::text ~ '^[0-9]{8}$'\n            and substring(release_date::text, 5, 2)::int between 1 and 12\n            and substring(release_date::text, 7, 2)::int between 1 and 31\n        then to_date(release_date::text, 'YYYYMMDD')\n        else null\n    end\n as release_contract_date,\n    vsart as shipping_type_id,\n    handoverloc as handover_location,\n    shipcond as shipping_conditions_id,\n    incov as incoterms_version_id,\n    inco2_l as incoterms_location_1,\n    inco3_l as incoterms_location_2,\n    force_id as internal_key_force_element,\n    force_cnt as internal_version_counter,\n    reloc_id as relocation_id,\n    reloc_seq_id as relocation_step_id,\n    source_logsys as source_logsys,\n    fsh_transaction as transaction_number,\n    fsh_item_group as item_group,\n    fsh_vas_last_item as last_vas_item_number,\n    fsh_os_stg_change as os_strategy_specific_fields_change,\n    vzskz as interest_calculation_indicator_id,\n    fsh_snst_status as snapshot_status,\n    pohf_type as document_category,\n    \n    case\n        when eq_eindt::text ~ '^[0-9]{8}$'\n            and substring(eq_eindt::text, 5, 2)::int between 1 and 12\n            and substring(eq_eindt::text, 7, 2)::int between 1 and 31\n        then to_date(eq_eindt::text, 'YYYYMMDD')\n        else null\n    end\n as same_delivery_date,\n    eq_werks as same_plant_id,\n    fixpo as firm_deal_indicator,\n    ekgrp_allow as take_account_purch_group,\n    werks_allow as take_account_plants,\n    contract_allow as take_account_contracts,\n    pstyp_allow as take_account_item_categories,\n    fixpo_allow as take_account_fixed_date_purchases,\n    key_id_allow as consider_budget,\n    aurel_allow as take_account_alloc_table_relevance,\n    delper_allow as take_account_dlvy_period,\n    eindt_allow as take_account_delivery_date,\n    ltsnr_allow as include_vendor_subrange,\n    otb_level as otb_check_level,\n    otb_cond_type as otb_condition_type_id,\n    key_id as unique_number_budget,\n    otb_value as required_budget_val,\n    otb_curr as otb_currency_id,\n    otb_res_value as reserved_budget_val,\n    otb_spec_value as special_release_budget_val,\n    spr_rsn_profile as otb_reason_profile_special_release,\n    budg_type as budget_type,\n    otb_status as otb_check_status,\n    otb_reason as reason,\n    check_type as type_otb_check,\n    con_otb_req as otb_relevant_contract,\n    con_prebook_lev as indicator_level_contracts,\n    con_distr_lev as distrib_using_target_value_or_item,\n    hvr_is_deleted as hvr_is_deleted,\n    hvr_change_time as hvr_change_time\nfrom \"postgres\".\"public_sap_dev\".\"stg_sap__ekko\"\nwhere mandt in ('800')", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null, "primary_key": [], "time_spine": null}, "model.sap.int_sap__purchasing_document_schedule_total": {"database": "postgres", "schema": "public_sap_dev", "name": "int_sap__purchasing_document_schedule_total", "resource_type": "model", "package_name": "sap", "path": "sales_and_procurement/star_schema/intermediate/int_sap__purchasing_document_schedule_total.sql", "original_file_path": "models/sales_and_procurement/star_schema/intermediate/int_sap__purchasing_document_schedule_total.sql", "unique_id": "model.sap.int_sap__purchasing_document_schedule_total", "fqn": ["sap", "sales_and_procurement", "star_schema", "intermediate", "int_sap__purchasing_document_schedule_total"], "alias": "int_sap__purchasing_document_schedule_total", "checksum": {"name": "sha256", "checksum": "a3743f48da9c4afdaf9f51dea27e84cbb444c0afc6ffaf221c0274ebefdc06eb"}, "config": {"enabled": true, "alias": null, "schema": "sap_dev", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "ephemeral", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "freshness": null}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "unrendered_config": {"materialized": "ephemeral", "schema": "sap_{{ var('directed_schema','dev') }}", "enabled": true}, "created_at": 1756850326.6262252, "relation_name": null, "raw_code": "{{ config(enabled=var('sap_using_eket', True)) }}\n\nselect\n    purchasing_document_id, \n    purchasing_document_item_id, \n    max(item_delivery_date) as lastest_scheduled_delivery_date,\n    sum(scheduled_quantity) as total_scheduled_delivery_quantity\nfrom {{ ref('int_sap__purchasing_document_schedule_line') }}\ngroup by 1,2", "doc_blocks": [], "language": "sql", "refs": [{"name": "int_sap__purchasing_document_schedule_line", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": [], "nodes": ["model.sap.int_sap__purchasing_document_schedule_line"]}, "compiled_path": "target/compiled/sap/models/sales_and_procurement/star_schema/intermediate/int_sap__purchasing_document_schedule_total.sql", "compiled": true, "compiled_code": "\n\nwith __dbt__cte__int_sap__purchasing_document_schedule_line as (\n\n\nselect\n    mandt as client_id,\n    ebeln as purchasing_document_id,\n    ebelp as purchasing_document_item_id,\n    etenr as delivery_schedule_line_counter_id,\n    \n    case\n        when eindt::text ~ '^[0-9]{8}$'\n            and substring(eindt::text, 5, 2)::int between 1 and 12\n            and substring(eindt::text, 7, 2)::int between 1 and 31\n        then to_date(eindt::text, 'YYYYMMDD')\n        else null\n    end\n as item_delivery_date,\n    \n    case\n        when slfdt::text ~ '^[0-9]{8}$'\n            and substring(slfdt::text, 5, 2)::int between 1 and 12\n            and substring(slfdt::text, 7, 2)::int between 1 and 31\n        then to_date(slfdt::text, 'YYYYMMDD')\n        else null\n    end\n as stat_rel_del_date,\n    lpein as category_delivery_date_id,\n    menge as scheduled_quantity,\n    ameng as previous_quantity,\n    wemng as quantity_goods_received,\n    wamng as issued_quantity,\n    uzeit as delivery_date_spot_tim,\n    banfn as purchase_requisition_number,\n    bnfpo as item_requisition_id,\n    estkz as creation_indicator,\n    qunum as number_quota_arrangement,\n    qupos as quota_arrangement_item,\n    mahnz as no_rem_expediters,\n    \n    case\n        when bedat::text ~ '^[0-9]{8}$'\n            and substring(bedat::text, 5, 2)::int between 1 and 12\n            and substring(bedat::text, 7, 2)::int between 1 and 31\n        then to_date(bedat::text, 'YYYYMMDD')\n        else null\n    end\n as order_schedule_line_date,\n    rsnum as reservation_id,\n    sernr as bom_explosion_number_id,\n    fixkz as schedule_line_is_fixed,\n    glmng as qty_delivered,\n    dabmg as quantity_reduced_mrp,\n    charg as batch_id,\n    licha as vendor_batch_number,\n    chkom as components,\n    verid as production_version_id,\n    abart as release_type,\n    mng02 as committed_quantity,\n    \n    case\n        when dat01::text ~ '^[0-9]{8}$'\n            and substring(dat01::text, 5, 2)::int between 1 and 12\n            and substring(dat01::text, 7, 2)::int between 1 and 31\n        then to_date(dat01::text, 'YYYYMMDD')\n        else null\n    end\n as committed_date,\n    \n    case\n        when altdt::text ~ '^[0-9]{8}$'\n            and substring(altdt::text, 5, 2)::int between 1 and 12\n            and substring(altdt::text, 7, 2)::int between 1 and 31\n        then to_date(altdt::text, 'YYYYMMDD')\n        else null\n    end\n as previous_delivery_date,\n    aulwe as route_schedule_id,\n    \n    case\n        when mbdat::text ~ '^[0-9]{8}$'\n            and substring(mbdat::text, 5, 2)::int between 1 and 12\n            and substring(mbdat::text, 7, 2)::int between 1 and 31\n        then to_date(mbdat::text, 'YYYYMMDD')\n        else null\n    end\n as material_availability_date,\n    mbuhr as matl_staging_tim,\n    \n    case\n        when lddat::text ~ '^[0-9]{8}$'\n            and substring(lddat::text, 5, 2)::int between 1 and 12\n            and substring(lddat::text, 7, 2)::int between 1 and 31\n        then to_date(lddat::text, 'YYYYMMDD')\n        else null\n    end\n as loading_date,\n    lduhr as loading_tim,\n    \n    case\n        when tddat::text ~ '^[0-9]{8}$'\n            and substring(tddat::text, 5, 2)::int between 1 and 12\n            and substring(tddat::text, 7, 2)::int between 1 and 31\n        then to_date(tddat::text, 'YYYYMMDD')\n        else null\n    end\n as transportation_planning_date,\n    tduhr as transp_plan_tim,\n    \n    case\n        when wadat::text ~ '^[0-9]{8}$'\n            and substring(wadat::text, 5, 2)::int between 1 and 12\n            and substring(wadat::text, 7, 2)::int between 1 and 31\n        then to_date(wadat::text, 'YYYYMMDD')\n        else null\n    end\n as goods_issue_date,\n    wauhr as goods_issue_tim,\n    \n    case\n        when eldat::text ~ '^[0-9]{8}$'\n            and substring(eldat::text, 5, 2)::int between 1 and 12\n            and substring(eldat::text, 7, 2)::int between 1 and 31\n        then to_date(eldat::text, 'YYYYMMDD')\n        else null\n    end\n as goods_receipt_end_date,\n    eluhr as goods_receipt_end_tim,\n    anzsn as number_serial_numbers,\n    nodisp as reservation_purc_req,\n    geo_route as geographical_route,\n    route_gts as gts_route_code,\n    gts_ind as goods_traffic_type,\n    tsp as forwarding_agent_id,\n    cd_locno as location_number_in_apo,\n    cd_loctype as apo_location_type,\n    \n    case\n        when handoverdate::text ~ '^[0-9]{8}$'\n            and substring(handoverdate::text, 5, 2)::int between 1 and 12\n            and substring(handoverdate::text, 7, 2)::int between 1 and 31\n        then to_date(handoverdate::text, 'YYYYMMDD')\n        else null\n    end\n as handover_date,\n    handovertime as handover_tim,\n    fsh_ralloc_qty as requirement_allocated_quantity,\n    fsh_salloc_qty as allocated_stock_quantity,\n    fsh_os_id as order_scheduling_group_id,\n    key_id as unique_number_budget,\n    otb_value as required_budget_val,\n    otb_curr as otb_currency_id,\n    otb_res_value as reserved_budget_val,\n    otb_spec_value as special_release_budget_val,\n    spr_rsn_profile as otb_reason_profile_special_release,\n    budg_type as budget_type,\n    otb_status as otb_check_status,\n    otb_reason as reason,\n    check_type as type_otb_check,\n    dl_id as dateline_id_guid,\n    \n    case\n        when handover_date::text ~ '^[0-9]{8}$'\n            and substring(handover_date::text, 5, 2)::int between 1 and 12\n            and substring(handover_date::text, 7, 2)::int between 1 and 31\n        then to_date(handover_date::text, 'YYYYMMDD')\n        else null\n    end\n as transfer_date,\n    no_scem as no_scem_controlling,\n    \n    case\n        when dng_date::text ~ '^[0-9]{8}$'\n            and substring(dng_date::text, 5, 2)::int between 1 and 12\n            and substring(dng_date::text, 7, 2)::int between 1 and 31\n        then to_date(dng_date::text, 'YYYYMMDD')\n        else null\n    end\n as rem_date,\n    dng_time as reminder_tim,\n    cncl_ancmnt_done as cancellation_threat_made,\n    dateshift_number as number_current_date_shifts,\n    hvr_is_deleted as hvr_is_deleted,\n    hvr_change_time as hvr_change_time\nfrom \"postgres\".\"public_sap_dev\".\"stg_sap__eket\"\nwhere mandt in ('800')\n) select\n    purchasing_document_id, \n    purchasing_document_item_id, \n    max(item_delivery_date) as lastest_scheduled_delivery_date,\n    sum(scheduled_quantity) as total_scheduled_delivery_quantity\nfrom __dbt__cte__int_sap__purchasing_document_schedule_line\ngroup by 1,2", "extra_ctes_injected": true, "extra_ctes": [{"id": "model.sap.int_sap__purchasing_document_schedule_line", "sql": " __dbt__cte__int_sap__purchasing_document_schedule_line as (\n\n\nselect\n    mandt as client_id,\n    ebeln as purchasing_document_id,\n    ebelp as purchasing_document_item_id,\n    etenr as delivery_schedule_line_counter_id,\n    \n    case\n        when eindt::text ~ '^[0-9]{8}$'\n            and substring(eindt::text, 5, 2)::int between 1 and 12\n            and substring(eindt::text, 7, 2)::int between 1 and 31\n        then to_date(eindt::text, 'YYYYMMDD')\n        else null\n    end\n as item_delivery_date,\n    \n    case\n        when slfdt::text ~ '^[0-9]{8}$'\n            and substring(slfdt::text, 5, 2)::int between 1 and 12\n            and substring(slfdt::text, 7, 2)::int between 1 and 31\n        then to_date(slfdt::text, 'YYYYMMDD')\n        else null\n    end\n as stat_rel_del_date,\n    lpein as category_delivery_date_id,\n    menge as scheduled_quantity,\n    ameng as previous_quantity,\n    wemng as quantity_goods_received,\n    wamng as issued_quantity,\n    uzeit as delivery_date_spot_tim,\n    banfn as purchase_requisition_number,\n    bnfpo as item_requisition_id,\n    estkz as creation_indicator,\n    qunum as number_quota_arrangement,\n    qupos as quota_arrangement_item,\n    mahnz as no_rem_expediters,\n    \n    case\n        when bedat::text ~ '^[0-9]{8}$'\n            and substring(bedat::text, 5, 2)::int between 1 and 12\n            and substring(bedat::text, 7, 2)::int between 1 and 31\n        then to_date(bedat::text, 'YYYYMMDD')\n        else null\n    end\n as order_schedule_line_date,\n    rsnum as reservation_id,\n    sernr as bom_explosion_number_id,\n    fixkz as schedule_line_is_fixed,\n    glmng as qty_delivered,\n    dabmg as quantity_reduced_mrp,\n    charg as batch_id,\n    licha as vendor_batch_number,\n    chkom as components,\n    verid as production_version_id,\n    abart as release_type,\n    mng02 as committed_quantity,\n    \n    case\n        when dat01::text ~ '^[0-9]{8}$'\n            and substring(dat01::text, 5, 2)::int between 1 and 12\n            and substring(dat01::text, 7, 2)::int between 1 and 31\n        then to_date(dat01::text, 'YYYYMMDD')\n        else null\n    end\n as committed_date,\n    \n    case\n        when altdt::text ~ '^[0-9]{8}$'\n            and substring(altdt::text, 5, 2)::int between 1 and 12\n            and substring(altdt::text, 7, 2)::int between 1 and 31\n        then to_date(altdt::text, 'YYYYMMDD')\n        else null\n    end\n as previous_delivery_date,\n    aulwe as route_schedule_id,\n    \n    case\n        when mbdat::text ~ '^[0-9]{8}$'\n            and substring(mbdat::text, 5, 2)::int between 1 and 12\n            and substring(mbdat::text, 7, 2)::int between 1 and 31\n        then to_date(mbdat::text, 'YYYYMMDD')\n        else null\n    end\n as material_availability_date,\n    mbuhr as matl_staging_tim,\n    \n    case\n        when lddat::text ~ '^[0-9]{8}$'\n            and substring(lddat::text, 5, 2)::int between 1 and 12\n            and substring(lddat::text, 7, 2)::int between 1 and 31\n        then to_date(lddat::text, 'YYYYMMDD')\n        else null\n    end\n as loading_date,\n    lduhr as loading_tim,\n    \n    case\n        when tddat::text ~ '^[0-9]{8}$'\n            and substring(tddat::text, 5, 2)::int between 1 and 12\n            and substring(tddat::text, 7, 2)::int between 1 and 31\n        then to_date(tddat::text, 'YYYYMMDD')\n        else null\n    end\n as transportation_planning_date,\n    tduhr as transp_plan_tim,\n    \n    case\n        when wadat::text ~ '^[0-9]{8}$'\n            and substring(wadat::text, 5, 2)::int between 1 and 12\n            and substring(wadat::text, 7, 2)::int between 1 and 31\n        then to_date(wadat::text, 'YYYYMMDD')\n        else null\n    end\n as goods_issue_date,\n    wauhr as goods_issue_tim,\n    \n    case\n        when eldat::text ~ '^[0-9]{8}$'\n            and substring(eldat::text, 5, 2)::int between 1 and 12\n            and substring(eldat::text, 7, 2)::int between 1 and 31\n        then to_date(eldat::text, 'YYYYMMDD')\n        else null\n    end\n as goods_receipt_end_date,\n    eluhr as goods_receipt_end_tim,\n    anzsn as number_serial_numbers,\n    nodisp as reservation_purc_req,\n    geo_route as geographical_route,\n    route_gts as gts_route_code,\n    gts_ind as goods_traffic_type,\n    tsp as forwarding_agent_id,\n    cd_locno as location_number_in_apo,\n    cd_loctype as apo_location_type,\n    \n    case\n        when handoverdate::text ~ '^[0-9]{8}$'\n            and substring(handoverdate::text, 5, 2)::int between 1 and 12\n            and substring(handoverdate::text, 7, 2)::int between 1 and 31\n        then to_date(handoverdate::text, 'YYYYMMDD')\n        else null\n    end\n as handover_date,\n    handovertime as handover_tim,\n    fsh_ralloc_qty as requirement_allocated_quantity,\n    fsh_salloc_qty as allocated_stock_quantity,\n    fsh_os_id as order_scheduling_group_id,\n    key_id as unique_number_budget,\n    otb_value as required_budget_val,\n    otb_curr as otb_currency_id,\n    otb_res_value as reserved_budget_val,\n    otb_spec_value as special_release_budget_val,\n    spr_rsn_profile as otb_reason_profile_special_release,\n    budg_type as budget_type,\n    otb_status as otb_check_status,\n    otb_reason as reason,\n    check_type as type_otb_check,\n    dl_id as dateline_id_guid,\n    \n    case\n        when handover_date::text ~ '^[0-9]{8}$'\n            and substring(handover_date::text, 5, 2)::int between 1 and 12\n            and substring(handover_date::text, 7, 2)::int between 1 and 31\n        then to_date(handover_date::text, 'YYYYMMDD')\n        else null\n    end\n as transfer_date,\n    no_scem as no_scem_controlling,\n    \n    case\n        when dng_date::text ~ '^[0-9]{8}$'\n            and substring(dng_date::text, 5, 2)::int between 1 and 12\n            and substring(dng_date::text, 7, 2)::int between 1 and 31\n        then to_date(dng_date::text, 'YYYYMMDD')\n        else null\n    end\n as rem_date,\n    dng_time as reminder_tim,\n    cncl_ancmnt_done as cancellation_threat_made,\n    dateshift_number as number_current_date_shifts,\n    hvr_is_deleted as hvr_is_deleted,\n    hvr_change_time as hvr_change_time\nfrom \"postgres\".\"public_sap_dev\".\"stg_sap__eket\"\nwhere mandt in ('800')\n)"}], "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null, "primary_key": [], "time_spine": null}, "model.sap.int_sap__purchasing_document_category": {"database": "postgres", "schema": "public_sap_dev", "name": "int_sap__purchasing_document_category", "resource_type": "model", "package_name": "sap", "path": "sales_and_procurement/star_schema/intermediate/int_sap__purchasing_document_category.sql", "original_file_path": "models/sales_and_procurement/star_schema/intermediate/int_sap__purchasing_document_category.sql", "unique_id": "model.sap.int_sap__purchasing_document_category", "fqn": ["sap", "sales_and_procurement", "star_schema", "intermediate", "int_sap__purchasing_document_category"], "alias": "int_sap__purchasing_document_category", "checksum": {"name": "sha256", "checksum": "ebe0e9e761a189c40d68b10d1fd8b4ee3a9a8eab0f8d4f771c6beb72301ab228"}, "config": {"enabled": true, "alias": null, "schema": "sap_dev", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "ephemeral", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "freshness": null}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "unrendered_config": {"materialized": "ephemeral", "schema": "sap_{{ var('directed_schema','dev') }}", "enabled": true}, "created_at": 1756850326.6338732, "relation_name": null, "raw_code": "{{ config(enabled=var('sap_using_dd07l', True)) }}\n\nwith dd07l as (\n    select *\n    from {{ ref('stg_sap__dd07l') }}\n\n{% set using_dd07t = var('sap_using_dd07t', True) %}\n{% if using_dd07t %}\n), dd07t as (\n    select *\n    from {{ ref('stg_sap__dd07t') }}\n{% endif %}\n\n), final as (\n    select \n        dd07l.domvalue_l as purchasing_document_category_id,\n        dd07l.hvr_change_time as hvr_change_time,\n        {{ 'dd07t.ddtext' if using_dd07t else 'cast(null as ' ~ dbt.type_string() ~ ')' }} as purchasing_document_category_txt\n    from dd07l\n\n    {% if using_dd07t %}\n    left join dd07t\n        on dd07l.domname = dd07t.domname\n        and dd07l.domvalue_l = dd07t.domvalue_l\n        and dd07l.as4vers = dd07t.as4vers\n        and dd07t.ddlanguage in ('e')\n    {% endif %}\n\n    where dd07l.domname = 'bstyp'\n        and dd07l.as4vers = '0000'\n)\n\nselect *\nfrom final", "doc_blocks": [], "language": "sql", "refs": [{"name": "stg_sap__dd07l", "package": null, "version": null}, {"name": "stg_sap__dd07t", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": [], "nodes": ["model.sap.stg_sap__dd07l", "model.sap.stg_sap__dd07t"]}, "compiled_path": "target/compiled/sap/models/sales_and_procurement/star_schema/intermediate/int_sap__purchasing_document_category.sql", "compiled": true, "compiled_code": "\n\nwith dd07l as (\n    select *\n    from \"postgres\".\"public_sap_dev\".\"stg_sap__dd07l\"\n\n\n\n), dd07t as (\n    select *\n    from \"postgres\".\"public_sap_dev\".\"stg_sap__dd07t\"\n\n\n), final as (\n    select \n        dd07l.domvalue_l as purchasing_document_category_id,\n        dd07l.hvr_change_time as hvr_change_time,\n        dd07t.ddtext as purchasing_document_category_txt\n    from dd07l\n\n    \n    left join dd07t\n        on dd07l.domname = dd07t.domname\n        and dd07l.domvalue_l = dd07t.domvalue_l\n        and dd07l.as4vers = dd07t.as4vers\n        and dd07t.ddlanguage in ('e')\n    \n\n    where dd07l.domname = 'bstyp'\n        and dd07l.as4vers = '0000'\n)\n\nselect *\nfrom final", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null, "primary_key": [], "time_spine": null}, "model.sap.int_sap__purchasing_organization": {"database": "postgres", "schema": "public_sap_dev", "name": "int_sap__purchasing_organization", "resource_type": "model", "package_name": "sap", "path": "sales_and_procurement/star_schema/intermediate/int_sap__purchasing_organization.sql", "original_file_path": "models/sales_and_procurement/star_schema/intermediate/int_sap__purchasing_organization.sql", "unique_id": "model.sap.int_sap__purchasing_organization", "fqn": ["sap", "sales_and_procurement", "star_schema", "intermediate", "int_sap__purchasing_organization"], "alias": "int_sap__purchasing_organization", "checksum": {"name": "sha256", "checksum": "b43171980fc868522b4d7bce27eac1ce5c541a05dd86fa7625914f7bc70c3a7c"}, "config": {"enabled": true, "alias": null, "schema": "sap_dev", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "ephemeral", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "freshness": null}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "unrendered_config": {"materialized": "ephemeral", "schema": "sap_{{ var('directed_schema','dev') }}", "enabled": true}, "created_at": 1756850326.6428046, "relation_name": null, "raw_code": "{{ config(enabled=var('sap_using_t024e', true)) }}\n\nselect\n    ekorg as purchasing_organization_id,\n    mandt as client_id,\n    ekotx as description,\n    txfus as text_name_footer_lines,\n    txgru as text_name_complimentary_close,\n    bpeff as effective_price,\n    txkop as text_name_letter_heading,\n    kalse as purorg_schema_group_id,\n    txadr as text_name_sender_line,\n    mkals as market_price_schema_id,\n    bukrs as company_code_id,\n    bukrs_ntr as cocdsubsstlmt_id,\n    _fivetran_deleted as _fivetran_deleted,\n    _fivetran_synced as _fivetran_synced,\n    _fivetran_sap_archived as _fivetran_sap_archived\nfrom {{ ref('stg_sap__t024e') }}\nwhere mandt in ('{{ var(\"sales_and_procurement_mandt_var\", [\"800\"]) | join(\"','\") }}')", "doc_blocks": [], "language": "sql", "refs": [{"name": "stg_sap__t024e", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": [], "nodes": ["model.sap.stg_sap__t024e"]}, "compiled_path": "target/compiled/sap/models/sales_and_procurement/star_schema/intermediate/int_sap__purchasing_organization.sql", "compiled": true, "compiled_code": "\n\nselect\n    ekorg as purchasing_organization_id,\n    mandt as client_id,\n    ekotx as description,\n    txfus as text_name_footer_lines,\n    txgru as text_name_complimentary_close,\n    bpeff as effective_price,\n    txkop as text_name_letter_heading,\n    kalse as purorg_schema_group_id,\n    txadr as text_name_sender_line,\n    mkals as market_price_schema_id,\n    bukrs as company_code_id,\n    bukrs_ntr as cocdsubsstlmt_id,\n    _fivetran_deleted as _fivetran_deleted,\n    _fivetran_synced as _fivetran_synced,\n    _fivetran_sap_archived as _fivetran_sap_archived\nfrom \"postgres\".\"public_sap_dev\".\"stg_sap__t024e\"\nwhere mandt in ('800')", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null, "primary_key": [], "time_spine": null}, "model.sap.int_sap__company": {"database": "postgres", "schema": "public_sap_dev", "name": "int_sap__company", "resource_type": "model", "package_name": "sap", "path": "sales_and_procurement/star_schema/intermediate/int_sap__company.sql", "original_file_path": "models/sales_and_procurement/star_schema/intermediate/int_sap__company.sql", "unique_id": "model.sap.int_sap__company", "fqn": ["sap", "sales_and_procurement", "star_schema", "intermediate", "int_sap__company"], "alias": "int_sap__company", "checksum": {"name": "sha256", "checksum": "ede37853d945043f34078b7efc39728fc3614048cd8ed4c2fa504c8629f448f9"}, "config": {"enabled": true, "alias": null, "schema": "sap_dev", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "ephemeral", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "freshness": null}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "unrendered_config": {"materialized": "ephemeral", "schema": "sap_{{ var('directed_schema','dev') }}", "enabled": true}, "created_at": 1756850326.6507957, "relation_name": null, "raw_code": "{{ config(enabled=var('sap_using_t001', true)) }}\n\nselect\n    bukrs as company_code_id,\n    mandt as client_id,\n    dkweg as import_gr,\n    xgjrv as indicator_propose_fiscal_year,\n    xeink as purchase_acct_proc,\n    fdbuk as cash_management_company_code_id,\n    pp_pdate as posting_date_parking,\n    xprod as company_code_is_productive,\n    xskfn as discount_base_is_net_value,\n    xcovr as indicator_hedge_request_active,\n    ebukr as original_key_the_company_code,\n    bukrs_glob as name_global_company_code_id,\n    xmwsn as tax_base_is_net_value,\n    butxt as company_code_txt,\n    bapovar as ba_variant_id,\n    xbbko as contract,\n    dttdsp as remittance_challan_document_type_id,\n    dtaxr as deferred_tax_rule_id,\n    impda as import_in_po,\n    kkber as credit_control_area_id,\n    xfmca as update_fm,\n    xfmcb as csh_bdgt_mgt_active,\n    surccm as surcharge_calculation_method,\n    fstvare as field_status_variant_id,\n    periv as fiscal_year_variant_id,\n    txjcd as jurisdiction_code_id,\n    fmhrdate as fds_ctr_active_in_hr_date,\n    xbbba as purchase_requisition,\n    ort01 as city,\n    rcomp as company_id,\n    xsplt as enable_amount_split,\n    kopim as copying_control_gr,\n    infmt as inflation_method_id,\n    fm_derive_acc as activate_aa_derivation,\n    ktopl as chart_of_accounts_id,\n    umkrs as sales_purchases_tax_group_id,\n    xkkbi as control_area_can_be_input,\n    pst_per_var as manage_posting_period_cocode_ledger,\n    xvatdate as tax_reporting_date_active,\n    txkrs as cur_transl_tax,\n    waers as currency_id,\n    xkdft as post_translation,\n    xcos as cost_sales_accounting_status,\n    xbbbf as inventory_management,\n    xbbsc as shopping_cart,\n    xfmco as project_cash_mgmt_active,\n    dttaxc as document_type_jv_tax_code_id,\n    mregl as sample_acct_rules_var_id,\n    mwskv as input_tax_code_id,\n    xstdt as tax_determ_with_doc_date,\n    xnegp as negative_postings_permitted,\n    spras as language_key_id,\n    xvvwa as financial_assets_mgmt_active,\n    dtprov as document_type_provisions_taxes_id,\n    waabw as max_exchange_rate_deviation,\n    wt_newwt as extended_withholding_tax_active,\n    xcession as accts_recble_pled_active,\n    xslta as no_forex_rate_diff_when_clearing_in_lc,\n    adrnr as address_id,\n    xjvaa as indicator_jva_active,\n    opvar as posting_period_variant_id,\n    mwska as output_tax_code_id,\n    kokfi as allocation_indicator,\n    ktop2 as country_chart_accts_id,\n    xextb as external_co_code,\n    buvar as company_code_variant_screen,\n    offsacct as method_offsttng_acct,\n    dtamtc as document_type_jv_amount_correction_id,\n    wfvar as workflow_variant_id,\n    land1 as country_key_id,\n    fstva as fstva,\n    xfdis as cash_management_activated,\n    xbbbe as po_scheduling_agmt,\n    xvalv as define_default_value_date,\n    fikrs as financial_management_area_id,\n    xfdsd as update_sd_in_cmf,\n    xfdmm as update_mm_in_cmf,\n    xgsbe as business_area_fin_statements,\n    stceg as vat_registration_no,\n    _fivetran_deleted as _fivetran_deleted,\n    _fivetran_synced as _fivetran_synced,\n    _fivetran_sap_archived as _fivetran_sap_archived\n\nfrom {{ ref('stg_sap__t001') }}\nwhere mandt in ('{{ var(sales_and_procurement_mandt_var, [800]) | join(',') }}')", "doc_blocks": [], "language": "sql", "refs": [{"name": "stg_sap__t001", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": [], "nodes": ["model.sap.stg_sap__t001"]}, "compiled_path": "target/compiled/sap/models/sales_and_procurement/star_schema/intermediate/int_sap__company.sql", "compiled": true, "compiled_code": "\n\nselect\n    bukrs as company_code_id,\n    mandt as client_id,\n    dkweg as import_gr,\n    xgjrv as indicator_propose_fiscal_year,\n    xeink as purchase_acct_proc,\n    fdbuk as cash_management_company_code_id,\n    pp_pdate as posting_date_parking,\n    xprod as company_code_is_productive,\n    xskfn as discount_base_is_net_value,\n    xcovr as indicator_hedge_request_active,\n    ebukr as original_key_the_company_code,\n    bukrs_glob as name_global_company_code_id,\n    xmwsn as tax_base_is_net_value,\n    butxt as company_code_txt,\n    bapovar as ba_variant_id,\n    xbbko as contract,\n    dttdsp as remittance_challan_document_type_id,\n    dtaxr as deferred_tax_rule_id,\n    impda as import_in_po,\n    kkber as credit_control_area_id,\n    xfmca as update_fm,\n    xfmcb as csh_bdgt_mgt_active,\n    surccm as surcharge_calculation_method,\n    fstvare as field_status_variant_id,\n    periv as fiscal_year_variant_id,\n    txjcd as jurisdiction_code_id,\n    fmhrdate as fds_ctr_active_in_hr_date,\n    xbbba as purchase_requisition,\n    ort01 as city,\n    rcomp as company_id,\n    xsplt as enable_amount_split,\n    kopim as copying_control_gr,\n    infmt as inflation_method_id,\n    fm_derive_acc as activate_aa_derivation,\n    ktopl as chart_of_accounts_id,\n    umkrs as sales_purchases_tax_group_id,\n    xkkbi as control_area_can_be_input,\n    pst_per_var as manage_posting_period_cocode_ledger,\n    xvatdate as tax_reporting_date_active,\n    txkrs as cur_transl_tax,\n    waers as currency_id,\n    xkdft as post_translation,\n    xcos as cost_sales_accounting_status,\n    xbbbf as inventory_management,\n    xbbsc as shopping_cart,\n    xfmco as project_cash_mgmt_active,\n    dttaxc as document_type_jv_tax_code_id,\n    mregl as sample_acct_rules_var_id,\n    mwskv as input_tax_code_id,\n    xstdt as tax_determ_with_doc_date,\n    xnegp as negative_postings_permitted,\n    spras as language_key_id,\n    xvvwa as financial_assets_mgmt_active,\n    dtprov as document_type_provisions_taxes_id,\n    waabw as max_exchange_rate_deviation,\n    wt_newwt as extended_withholding_tax_active,\n    xcession as accts_recble_pled_active,\n    xslta as no_forex_rate_diff_when_clearing_in_lc,\n    adrnr as address_id,\n    xjvaa as indicator_jva_active,\n    opvar as posting_period_variant_id,\n    mwska as output_tax_code_id,\n    kokfi as allocation_indicator,\n    ktop2 as country_chart_accts_id,\n    xextb as external_co_code,\n    buvar as company_code_variant_screen,\n    offsacct as method_offsttng_acct,\n    dtamtc as document_type_jv_amount_correction_id,\n    wfvar as workflow_variant_id,\n    land1 as country_key_id,\n    fstva as fstva,\n    xfdis as cash_management_activated,\n    xbbbe as po_scheduling_agmt,\n    xvalv as define_default_value_date,\n    fikrs as financial_management_area_id,\n    xfdsd as update_sd_in_cmf,\n    xfdmm as update_mm_in_cmf,\n    xgsbe as business_area_fin_statements,\n    stceg as vat_registration_no,\n    _fivetran_deleted as _fivetran_deleted,\n    _fivetran_synced as _fivetran_synced,\n    _fivetran_sap_archived as _fivetran_sap_archived\n\nfrom \"postgres\".\"public_sap_dev\".\"stg_sap__t001\"\nwhere mandt in ('800')", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null, "primary_key": [], "time_spine": null}, "model.sap.int_sap__vendor": {"database": "postgres", "schema": "public_sap_dev", "name": "int_sap__vendor", "resource_type": "model", "package_name": "sap", "path": "sales_and_procurement/star_schema/intermediate/int_sap__vendor.sql", "original_file_path": "models/sales_and_procurement/star_schema/intermediate/int_sap__vendor.sql", "unique_id": "model.sap.int_sap__vendor", "fqn": ["sap", "sales_and_procurement", "star_schema", "intermediate", "int_sap__vendor"], "alias": "int_sap__vendor", "checksum": {"name": "sha256", "checksum": "78b9e32e62b46e9104896411bedbd3b85367ce2f88dced7d06a70f5369baeb20"}, "config": {"enabled": true, "alias": null, "schema": "sap_dev", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "ephemeral", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "freshness": null}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "unrendered_config": {"materialized": "ephemeral", "schema": "sap_{{ var('directed_schema','dev') }}", "enabled": true}, "created_at": 1756850326.6592445, "relation_name": null, "raw_code": "{{ config(enabled=var('sap_using_lfa1', true)) }}\n\nselect\n    mandt as client_id,\n    lifnr as vendor_id,\n    land1 as country_key_id,\n    name1 as name,\n    name2 as name_2,\n    name3 as name_3,\n    name4 as name_4,\n    ort01 as city,\n    ort02 as district,\n    pfach as po_box,\n    pstl2 as p_o_box_postal_code,\n    pstlz as postal_code,\n    regio as region_id,\n    sortl as sort_field,\n    stras as street_and_house_number,\n    adrnr as address_id,\n    mcod1 as search_term_matchcode_search,\n    mcod2 as mcod2,\n    mcod3 as mcod3,\n    anred as title,\n    bahns as train_station,\n    bbbnr as int_location_no_1,\n    bbsnr as int_location_no_2,\n    begru as authorization_group_id,\n    brsch as industry_key_id,\n    bubkz as check_digit,\n    datlt as communication_line_no,\n    dtams as dme_indicator,\n    dtaws as instruction_key_id,\n    {{ char_yyyymmdd_to_date('erdat') }} as created_on_date,\n    ernam as created_by,\n    esrnr as por_subscriber_number,\n    konzs as group_key,\n    ktokk as vendor_account_group_id,\n    kunnr as customer_id,\n    lnrza as alternative_payee_id,\n    loevm as central_deletion_flag,\n    sperr as central_posting_block,\n    sperm as central_purchasing_block,\n    spras as language_key_id,\n    stcd1 as tax_number_1,\n    stcd2 as tax_number_2,\n    stkza as sales_equalizatn_tax,\n    stkzu as liable_vat,\n    telbx as telebox_number,\n    telf1 as telephone_1,\n    telf2 as second_telephone_number,\n    telfx as fax_number,\n    teltx as teletex_number,\n    telx1 as telex_number,\n    xcpdk as one_time_account,\n    xzemp as payee_in_document,\n    vbund as trading_partner_id,\n    fiskn as fiscal_address_id,\n    stceg as vat_registration_no,\n    stkzn as natural_person,\n    sperq as function_that_will_be_blocked_id,\n    gbort as place_birth,\n    {{ char_yyyymmdd_to_date('gbdat') }} as birth_date,\n    sexkz as sex,\n    kraus as credit_information_number,\n    {{ char_yyyymmdd_to_date('revdb') }} as last_review_external_date,\n    qssys as vendors_qm_system_id,\n    ktock as reference_acct_group_id,\n    pfort as po_box_city,\n    werks as plant_own_or_external_id,\n    ltsna as vendor_sub_range_relevant,\n    werkr as indicator_plant_level_relevant,\n    plkal as factory_calendar_id,\n    duefl as status_transfer_to_next_release,\n    txjcd as tax_jurisdiction_id,\n    sperz as payment_block,\n    scacd as standard_carrier_access_code,\n    sfrgr as forwarding_agent_freight_group_id,\n    lzone as transportation_zone_id,\n    xlfza as accts_alt_payee,\n    dlgrp as service_agent_procedure_group_id,\n    fityp as tax_type_id,\n    stcdt as tax_number_type_id,\n    regss as registered_social_insurance,\n    actss as social_ins_code_id,\n    stcd3 as tax_number_3,\n    stcd4 as tax_number_4,\n    stcd5 as tax_number_5,\n    ipisp as tax_split,\n    taxbs as tax_base_in_percentage,\n    profs as profession,\n    stgdl as stat_grp_service_agent_id,\n    emnfr as ext_manufacturer,\n    lfurl as uniform_resource_locator,\n    j_1kfrepre as name_representative,\n    j_1kftbus as type_business_id,\n    j_1kftind as type_industry_id,\n    confs as confirmation_status,\n    {{ char_yyyymmdd_to_date('updat') }} as confirmation_date,\n    uptim as last_change_confirmation_tim,\n    nodel as central_del_block,\n    {{ char_yyyymmdd_to_date('qssysdat') }} as validity_certification_date,\n    podkzb as relevant_pod,\n    fisku as tax_office_responsible_id,\n    stenr as tax_number_at_responsible_tax_authority,\n    carrier_conf as carrier_confirmation_is_expected,\n    min_comp as micro_company_indicator,\n    term_li as terms_liability,\n    crc_num as crc_number,\n    cvp_xblck as business_purpose_completed_flag,\n    rg as rg_number,\n    exp as issued_by,\n    uf as state,\n    {{ char_yyyymmdd_to_date('rgdate') }} as rg_issuing_date,\n    ric as ric_number,\n    rne as foreign_national_registration,\n    {{ char_yyyymmdd_to_date('rnedate') }} as rne_issuing_date,\n    cnae as cnae_id,\n    legalnat as legal_nature_id,\n    crtn as crt_number,\n    icmstaxpay as icms_taxpayer_id,\n    indtyp as industry_main_type_id,\n    tdt as tax_declaration_type_id,\n    comsize as company_size_id,\n    decregpc as declaration_regimen_pis_cofins_id,\n    j_sc_capital as capital_amount_val,\n    j_sc_currency as currency_id,\n    alc as agency_location_code_id,\n    pmt_office as payment_office_id,\n    ppa_relevant as vendor_is_ppa_relevant,\n    psofg as processor_group_id,\n    psois as slaprepr_proced,\n    pson1 as pson1,\n    pson2 as pson2,\n    pson3 as pson3,\n    psovn as first_name,\n    psotl as psotl,\n    psohs as house_number,\n    psost as street,\n    transport_chain as transportation_chain_id,\n    staging_time as staging_time_in_days,\n    scheduling_type as scheduling_procedure,\n    submi_relevant as cd_relevant_collective_numbering,\n    _fivetran_deleted as _fivetran_deleted,\n    _fivetran_synced as _fivetran_synced,\n    _fivetran_rowid as _fivetran_rowid\nfrom {{ ref('stg_sap__lfa1') }}\nwhere mandt in ('{{ var(sales_and_procurement_mandt_var, [800]) | join(',') }}')", "doc_blocks": [], "language": "sql", "refs": [{"name": "stg_sap__lfa1", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.sap.char_yyyymmdd_to_date"], "nodes": ["model.sap.stg_sap__lfa1"]}, "compiled_path": "target/compiled/sap/models/sales_and_procurement/star_schema/intermediate/int_sap__vendor.sql", "compiled": true, "compiled_code": "\n\nselect\n    mandt as client_id,\n    lifnr as vendor_id,\n    land1 as country_key_id,\n    name1 as name,\n    name2 as name_2,\n    name3 as name_3,\n    name4 as name_4,\n    ort01 as city,\n    ort02 as district,\n    pfach as po_box,\n    pstl2 as p_o_box_postal_code,\n    pstlz as postal_code,\n    regio as region_id,\n    sortl as sort_field,\n    stras as street_and_house_number,\n    adrnr as address_id,\n    mcod1 as search_term_matchcode_search,\n    mcod2 as mcod2,\n    mcod3 as mcod3,\n    anred as title,\n    bahns as train_station,\n    bbbnr as int_location_no_1,\n    bbsnr as int_location_no_2,\n    begru as authorization_group_id,\n    brsch as industry_key_id,\n    bubkz as check_digit,\n    datlt as communication_line_no,\n    dtams as dme_indicator,\n    dtaws as instruction_key_id,\n    \n    case\n        when erdat::text ~ '^[0-9]{8}$'\n            and substring(erdat::text, 5, 2)::int between 1 and 12\n            and substring(erdat::text, 7, 2)::int between 1 and 31\n        then to_date(erdat::text, 'YYYYMMDD')\n        else null\n    end\n as created_on_date,\n    ernam as created_by,\n    esrnr as por_subscriber_number,\n    konzs as group_key,\n    ktokk as vendor_account_group_id,\n    kunnr as customer_id,\n    lnrza as alternative_payee_id,\n    loevm as central_deletion_flag,\n    sperr as central_posting_block,\n    sperm as central_purchasing_block,\n    spras as language_key_id,\n    stcd1 as tax_number_1,\n    stcd2 as tax_number_2,\n    stkza as sales_equalizatn_tax,\n    stkzu as liable_vat,\n    telbx as telebox_number,\n    telf1 as telephone_1,\n    telf2 as second_telephone_number,\n    telfx as fax_number,\n    teltx as teletex_number,\n    telx1 as telex_number,\n    xcpdk as one_time_account,\n    xzemp as payee_in_document,\n    vbund as trading_partner_id,\n    fiskn as fiscal_address_id,\n    stceg as vat_registration_no,\n    stkzn as natural_person,\n    sperq as function_that_will_be_blocked_id,\n    gbort as place_birth,\n    \n    case\n        when gbdat::text ~ '^[0-9]{8}$'\n            and substring(gbdat::text, 5, 2)::int between 1 and 12\n            and substring(gbdat::text, 7, 2)::int between 1 and 31\n        then to_date(gbdat::text, 'YYYYMMDD')\n        else null\n    end\n as birth_date,\n    sexkz as sex,\n    kraus as credit_information_number,\n    \n    case\n        when revdb::text ~ '^[0-9]{8}$'\n            and substring(revdb::text, 5, 2)::int between 1 and 12\n            and substring(revdb::text, 7, 2)::int between 1 and 31\n        then to_date(revdb::text, 'YYYYMMDD')\n        else null\n    end\n as last_review_external_date,\n    qssys as vendors_qm_system_id,\n    ktock as reference_acct_group_id,\n    pfort as po_box_city,\n    werks as plant_own_or_external_id,\n    ltsna as vendor_sub_range_relevant,\n    werkr as indicator_plant_level_relevant,\n    plkal as factory_calendar_id,\n    duefl as status_transfer_to_next_release,\n    txjcd as tax_jurisdiction_id,\n    sperz as payment_block,\n    scacd as standard_carrier_access_code,\n    sfrgr as forwarding_agent_freight_group_id,\n    lzone as transportation_zone_id,\n    xlfza as accts_alt_payee,\n    dlgrp as service_agent_procedure_group_id,\n    fityp as tax_type_id,\n    stcdt as tax_number_type_id,\n    regss as registered_social_insurance,\n    actss as social_ins_code_id,\n    stcd3 as tax_number_3,\n    stcd4 as tax_number_4,\n    stcd5 as tax_number_5,\n    ipisp as tax_split,\n    taxbs as tax_base_in_percentage,\n    profs as profession,\n    stgdl as stat_grp_service_agent_id,\n    emnfr as ext_manufacturer,\n    lfurl as uniform_resource_locator,\n    j_1kfrepre as name_representative,\n    j_1kftbus as type_business_id,\n    j_1kftind as type_industry_id,\n    confs as confirmation_status,\n    \n    case\n        when updat::text ~ '^[0-9]{8}$'\n            and substring(updat::text, 5, 2)::int between 1 and 12\n            and substring(updat::text, 7, 2)::int between 1 and 31\n        then to_date(updat::text, 'YYYYMMDD')\n        else null\n    end\n as confirmation_date,\n    uptim as last_change_confirmation_tim,\n    nodel as central_del_block,\n    \n    case\n        when qssysdat::text ~ '^[0-9]{8}$'\n            and substring(qssysdat::text, 5, 2)::int between 1 and 12\n            and substring(qssysdat::text, 7, 2)::int between 1 and 31\n        then to_date(qssysdat::text, 'YYYYMMDD')\n        else null\n    end\n as validity_certification_date,\n    podkzb as relevant_pod,\n    fisku as tax_office_responsible_id,\n    stenr as tax_number_at_responsible_tax_authority,\n    carrier_conf as carrier_confirmation_is_expected,\n    min_comp as micro_company_indicator,\n    term_li as terms_liability,\n    crc_num as crc_number,\n    cvp_xblck as business_purpose_completed_flag,\n    rg as rg_number,\n    exp as issued_by,\n    uf as state,\n    \n    case\n        when rgdate::text ~ '^[0-9]{8}$'\n            and substring(rgdate::text, 5, 2)::int between 1 and 12\n            and substring(rgdate::text, 7, 2)::int between 1 and 31\n        then to_date(rgdate::text, 'YYYYMMDD')\n        else null\n    end\n as rg_issuing_date,\n    ric as ric_number,\n    rne as foreign_national_registration,\n    \n    case\n        when rnedate::text ~ '^[0-9]{8}$'\n            and substring(rnedate::text, 5, 2)::int between 1 and 12\n            and substring(rnedate::text, 7, 2)::int between 1 and 31\n        then to_date(rnedate::text, 'YYYYMMDD')\n        else null\n    end\n as rne_issuing_date,\n    cnae as cnae_id,\n    legalnat as legal_nature_id,\n    crtn as crt_number,\n    icmstaxpay as icms_taxpayer_id,\n    indtyp as industry_main_type_id,\n    tdt as tax_declaration_type_id,\n    comsize as company_size_id,\n    decregpc as declaration_regimen_pis_cofins_id,\n    j_sc_capital as capital_amount_val,\n    j_sc_currency as currency_id,\n    alc as agency_location_code_id,\n    pmt_office as payment_office_id,\n    ppa_relevant as vendor_is_ppa_relevant,\n    psofg as processor_group_id,\n    psois as slaprepr_proced,\n    pson1 as pson1,\n    pson2 as pson2,\n    pson3 as pson3,\n    psovn as first_name,\n    psotl as psotl,\n    psohs as house_number,\n    psost as street,\n    transport_chain as transportation_chain_id,\n    staging_time as staging_time_in_days,\n    scheduling_type as scheduling_procedure,\n    submi_relevant as cd_relevant_collective_numbering,\n    _fivetran_deleted as _fivetran_deleted,\n    _fivetran_synced as _fivetran_synced,\n    _fivetran_rowid as _fivetran_rowid\nfrom \"postgres\".\"public_sap_dev\".\"stg_sap__lfa1\"\nwhere mandt in ('800')", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null, "primary_key": [], "time_spine": null}, "model.sap.int_sap__sales_document_item_status": {"database": "postgres", "schema": "public_sap_dev", "name": "int_sap__sales_document_item_status", "resource_type": "model", "package_name": "sap", "path": "sales_and_procurement/star_schema/intermediate/int_sap__sales_document_item_status.sql", "original_file_path": "models/sales_and_procurement/star_schema/intermediate/int_sap__sales_document_item_status.sql", "unique_id": "model.sap.int_sap__sales_document_item_status", "fqn": ["sap", "sales_and_procurement", "star_schema", "intermediate", "int_sap__sales_document_item_status"], "alias": "int_sap__sales_document_item_status", "checksum": {"name": "sha256", "checksum": "2b7efd682b3f8000e69acd86d8ebaf905b8116aa35079fc8f2a27c5b57f35361"}, "config": {"enabled": true, "alias": null, "schema": "sap_dev", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "ephemeral", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "freshness": null}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "unrendered_config": {"materialized": "ephemeral", "schema": "sap_{{ var('directed_schema','dev') }}", "enabled": true}, "created_at": 1756850326.6709077, "relation_name": null, "raw_code": "{{ config(enabled=var('sap_using_vbup', True)) }}\n\nselect\n    mandt as client_id,\n    posnr as sd_item_id,\n    vbeln as sales_document_id,\n    uvpak as item_packaging,\n    uvvlk as item_deliv,\n    mill_vs_vssta as status_sales_order_item,\n    pksta as packing_status_item,\n    lssta as delivery_block_status_item,\n    vlstp as decentralized_whse_processing,\n    absta as rejection_status_sd_item,\n    fksta as billing_status,\n    fkivp as intercompany_billing_status,\n    lfgsa as overall_deliv_status,\n    rrsta as revenue_determination_status,\n    lfsta as delivery_status,\n    fksaa as ord_related_bill_st,\n    wbsta as goods_movement_status,\n    ltsps as stockable_type_switched_into_stand_prod,\n    costa as confirmation_status_ale,\n    fssta as billing_block_status_items,\n    kosta as picking_status_putaway_status,\n    uvpik as item_picking_putaway,\n    uvfak as item_billing,\n    uvall as item,\n    rfgsa as overall_status_reference,\n    uvprs as pricing_item_is_incomplete,\n    lvsta as wm_activity_status,\n    rfsta as reference_status,\n    cmppj as expt_cred_insurance,\n    cmppi as financial_document,\n    hdall as delivery_item_not_complete,\n    besta as confirmed,\n    pdsta as pod_status_on_item_level,\n    fsh_ar_stat_itm as arun_status_item_level,\n    manek as manual_completion_contract,\n    gbsta as overall_status,\n    uvwak as item_goods_mvmt,\n    dcsta as delay_status,\n    uvp05 as customer_reserves_5_item_status,\n    uvp02 as customer_reserves_2_item_status,\n    uvp04 as item_reserves_4_item_status,\n    koqua as pick_confirmation,\n    uvp01 as customer_reserves_1_item_status,\n    uvp03 as item_reserves_3_item_status,\n    _fivetran_deleted as _fivetran_deleted,\n    _fivetran_synced as _fivetran_synced,\n    _fivetran_sap_archived as _fivetran_sap_archived\nfrom {{ ref('stg_sap__vbup') }}\nwhere mandt in ('{{ var(\"sales_and_procurement_mandt_var\", [\"800\"]) | join(\"','\") }}')", "doc_blocks": [], "language": "sql", "refs": [{"name": "stg_sap__vbup", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": [], "nodes": ["model.sap.stg_sap__vbup"]}, "compiled_path": "target/compiled/sap/models/sales_and_procurement/star_schema/intermediate/int_sap__sales_document_item_status.sql", "compiled": true, "compiled_code": "\n\nselect\n    mandt as client_id,\n    posnr as sd_item_id,\n    vbeln as sales_document_id,\n    uvpak as item_packaging,\n    uvvlk as item_deliv,\n    mill_vs_vssta as status_sales_order_item,\n    pksta as packing_status_item,\n    lssta as delivery_block_status_item,\n    vlstp as decentralized_whse_processing,\n    absta as rejection_status_sd_item,\n    fksta as billing_status,\n    fkivp as intercompany_billing_status,\n    lfgsa as overall_deliv_status,\n    rrsta as revenue_determination_status,\n    lfsta as delivery_status,\n    fksaa as ord_related_bill_st,\n    wbsta as goods_movement_status,\n    ltsps as stockable_type_switched_into_stand_prod,\n    costa as confirmation_status_ale,\n    fssta as billing_block_status_items,\n    kosta as picking_status_putaway_status,\n    uvpik as item_picking_putaway,\n    uvfak as item_billing,\n    uvall as item,\n    rfgsa as overall_status_reference,\n    uvprs as pricing_item_is_incomplete,\n    lvsta as wm_activity_status,\n    rfsta as reference_status,\n    cmppj as expt_cred_insurance,\n    cmppi as financial_document,\n    hdall as delivery_item_not_complete,\n    besta as confirmed,\n    pdsta as pod_status_on_item_level,\n    fsh_ar_stat_itm as arun_status_item_level,\n    manek as manual_completion_contract,\n    gbsta as overall_status,\n    uvwak as item_goods_mvmt,\n    dcsta as delay_status,\n    uvp05 as customer_reserves_5_item_status,\n    uvp02 as customer_reserves_2_item_status,\n    uvp04 as item_reserves_4_item_status,\n    koqua as pick_confirmation,\n    uvp01 as customer_reserves_1_item_status,\n    uvp03 as item_reserves_3_item_status,\n    _fivetran_deleted as _fivetran_deleted,\n    _fivetran_synced as _fivetran_synced,\n    _fivetran_sap_archived as _fivetran_sap_archived\nfrom \"postgres\".\"public_sap_dev\".\"stg_sap__vbup\"\nwhere mandt in ('800')", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null, "primary_key": [], "time_spine": null}, "model.sap.int_sap__purchasing_document_schedule_line": {"database": "postgres", "schema": "public_sap_dev", "name": "int_sap__purchasing_document_schedule_line", "resource_type": "model", "package_name": "sap", "path": "sales_and_procurement/star_schema/intermediate/int_sap__purchasing_document_schedule_line.sql", "original_file_path": "models/sales_and_procurement/star_schema/intermediate/int_sap__purchasing_document_schedule_line.sql", "unique_id": "model.sap.int_sap__purchasing_document_schedule_line", "fqn": ["sap", "sales_and_procurement", "star_schema", "intermediate", "int_sap__purchasing_document_schedule_line"], "alias": "int_sap__purchasing_document_schedule_line", "checksum": {"name": "sha256", "checksum": "b6c5bec7caaa42535e7b13c8d04dca67a4e9bcf40f357299c9bb6f45eeac0776"}, "config": {"enabled": true, "alias": null, "schema": "sap_dev", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "ephemeral", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "freshness": null}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "unrendered_config": {"materialized": "ephemeral", "schema": "sap_{{ var('directed_schema','dev') }}", "enabled": true}, "created_at": 1756850326.6785948, "relation_name": null, "raw_code": "{{ config(enabled=var('sap_using_eket', True)) }}\n\nselect\n    mandt as client_id,\n    ebeln as purchasing_document_id,\n    ebelp as purchasing_document_item_id,\n    etenr as delivery_schedule_line_counter_id,\n    {{ char_yyyymmdd_to_date('eindt') }} as item_delivery_date,\n    {{ char_yyyymmdd_to_date('slfdt') }} as stat_rel_del_date,\n    lpein as category_delivery_date_id,\n    menge as scheduled_quantity,\n    ameng as previous_quantity,\n    wemng as quantity_goods_received,\n    wamng as issued_quantity,\n    uzeit as delivery_date_spot_tim,\n    banfn as purchase_requisition_number,\n    bnfpo as item_requisition_id,\n    estkz as creation_indicator,\n    qunum as number_quota_arrangement,\n    qupos as quota_arrangement_item,\n    mahnz as no_rem_expediters,\n    {{ char_yyyymmdd_to_date('bedat') }} as order_schedule_line_date,\n    rsnum as reservation_id,\n    sernr as bom_explosion_number_id,\n    fixkz as schedule_line_is_fixed,\n    glmng as qty_delivered,\n    dabmg as quantity_reduced_mrp,\n    charg as batch_id,\n    licha as vendor_batch_number,\n    chkom as components,\n    verid as production_version_id,\n    abart as release_type,\n    mng02 as committed_quantity,\n    {{ char_yyyymmdd_to_date('dat01') }} as committed_date,\n    {{ char_yyyymmdd_to_date('altdt') }} as previous_delivery_date,\n    aulwe as route_schedule_id,\n    {{ char_yyyymmdd_to_date('mbdat') }} as material_availability_date,\n    mbuhr as matl_staging_tim,\n    {{ char_yyyymmdd_to_date('lddat') }} as loading_date,\n    lduhr as loading_tim,\n    {{ char_yyyymmdd_to_date('tddat') }} as transportation_planning_date,\n    tduhr as transp_plan_tim,\n    {{ char_yyyymmdd_to_date('wadat') }} as goods_issue_date,\n    wauhr as goods_issue_tim,\n    {{ char_yyyymmdd_to_date('eldat') }} as goods_receipt_end_date,\n    eluhr as goods_receipt_end_tim,\n    anzsn as number_serial_numbers,\n    nodisp as reservation_purc_req,\n    geo_route as geographical_route,\n    route_gts as gts_route_code,\n    gts_ind as goods_traffic_type,\n    tsp as forwarding_agent_id,\n    cd_locno as location_number_in_apo,\n    cd_loctype as apo_location_type,\n    {{ char_yyyymmdd_to_date('handoverdate') }} as handover_date,\n    handovertime as handover_tim,\n    fsh_ralloc_qty as requirement_allocated_quantity,\n    fsh_salloc_qty as allocated_stock_quantity,\n    fsh_os_id as order_scheduling_group_id,\n    key_id as unique_number_budget,\n    otb_value as required_budget_val,\n    otb_curr as otb_currency_id,\n    otb_res_value as reserved_budget_val,\n    otb_spec_value as special_release_budget_val,\n    spr_rsn_profile as otb_reason_profile_special_release,\n    budg_type as budget_type,\n    otb_status as otb_check_status,\n    otb_reason as reason,\n    check_type as type_otb_check,\n    dl_id as dateline_id_guid,\n    {{ char_yyyymmdd_to_date('handover_date') }} as transfer_date,\n    no_scem as no_scem_controlling,\n    {{ char_yyyymmdd_to_date('dng_date') }} as rem_date,\n    dng_time as reminder_tim,\n    cncl_ancmnt_done as cancellation_threat_made,\n    dateshift_number as number_current_date_shifts,\n    hvr_is_deleted as hvr_is_deleted,\n    hvr_change_time as hvr_change_time\nfrom {{ ref('stg_sap__eket') }}\nwhere mandt in ('{{ var(\"sales_and_procurement_mandt_var\", [\"800\"]) | join(\"','\") }}')", "doc_blocks": [], "language": "sql", "refs": [{"name": "stg_sap__eket", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.sap.char_yyyymmdd_to_date"], "nodes": ["model.sap.stg_sap__eket"]}, "compiled_path": "target/compiled/sap/models/sales_and_procurement/star_schema/intermediate/int_sap__purchasing_document_schedule_line.sql", "compiled": true, "compiled_code": "\n\nselect\n    mandt as client_id,\n    ebeln as purchasing_document_id,\n    ebelp as purchasing_document_item_id,\n    etenr as delivery_schedule_line_counter_id,\n    \n    case\n        when eindt::text ~ '^[0-9]{8}$'\n            and substring(eindt::text, 5, 2)::int between 1 and 12\n            and substring(eindt::text, 7, 2)::int between 1 and 31\n        then to_date(eindt::text, 'YYYYMMDD')\n        else null\n    end\n as item_delivery_date,\n    \n    case\n        when slfdt::text ~ '^[0-9]{8}$'\n            and substring(slfdt::text, 5, 2)::int between 1 and 12\n            and substring(slfdt::text, 7, 2)::int between 1 and 31\n        then to_date(slfdt::text, 'YYYYMMDD')\n        else null\n    end\n as stat_rel_del_date,\n    lpein as category_delivery_date_id,\n    menge as scheduled_quantity,\n    ameng as previous_quantity,\n    wemng as quantity_goods_received,\n    wamng as issued_quantity,\n    uzeit as delivery_date_spot_tim,\n    banfn as purchase_requisition_number,\n    bnfpo as item_requisition_id,\n    estkz as creation_indicator,\n    qunum as number_quota_arrangement,\n    qupos as quota_arrangement_item,\n    mahnz as no_rem_expediters,\n    \n    case\n        when bedat::text ~ '^[0-9]{8}$'\n            and substring(bedat::text, 5, 2)::int between 1 and 12\n            and substring(bedat::text, 7, 2)::int between 1 and 31\n        then to_date(bedat::text, 'YYYYMMDD')\n        else null\n    end\n as order_schedule_line_date,\n    rsnum as reservation_id,\n    sernr as bom_explosion_number_id,\n    fixkz as schedule_line_is_fixed,\n    glmng as qty_delivered,\n    dabmg as quantity_reduced_mrp,\n    charg as batch_id,\n    licha as vendor_batch_number,\n    chkom as components,\n    verid as production_version_id,\n    abart as release_type,\n    mng02 as committed_quantity,\n    \n    case\n        when dat01::text ~ '^[0-9]{8}$'\n            and substring(dat01::text, 5, 2)::int between 1 and 12\n            and substring(dat01::text, 7, 2)::int between 1 and 31\n        then to_date(dat01::text, 'YYYYMMDD')\n        else null\n    end\n as committed_date,\n    \n    case\n        when altdt::text ~ '^[0-9]{8}$'\n            and substring(altdt::text, 5, 2)::int between 1 and 12\n            and substring(altdt::text, 7, 2)::int between 1 and 31\n        then to_date(altdt::text, 'YYYYMMDD')\n        else null\n    end\n as previous_delivery_date,\n    aulwe as route_schedule_id,\n    \n    case\n        when mbdat::text ~ '^[0-9]{8}$'\n            and substring(mbdat::text, 5, 2)::int between 1 and 12\n            and substring(mbdat::text, 7, 2)::int between 1 and 31\n        then to_date(mbdat::text, 'YYYYMMDD')\n        else null\n    end\n as material_availability_date,\n    mbuhr as matl_staging_tim,\n    \n    case\n        when lddat::text ~ '^[0-9]{8}$'\n            and substring(lddat::text, 5, 2)::int between 1 and 12\n            and substring(lddat::text, 7, 2)::int between 1 and 31\n        then to_date(lddat::text, 'YYYYMMDD')\n        else null\n    end\n as loading_date,\n    lduhr as loading_tim,\n    \n    case\n        when tddat::text ~ '^[0-9]{8}$'\n            and substring(tddat::text, 5, 2)::int between 1 and 12\n            and substring(tddat::text, 7, 2)::int between 1 and 31\n        then to_date(tddat::text, 'YYYYMMDD')\n        else null\n    end\n as transportation_planning_date,\n    tduhr as transp_plan_tim,\n    \n    case\n        when wadat::text ~ '^[0-9]{8}$'\n            and substring(wadat::text, 5, 2)::int between 1 and 12\n            and substring(wadat::text, 7, 2)::int between 1 and 31\n        then to_date(wadat::text, 'YYYYMMDD')\n        else null\n    end\n as goods_issue_date,\n    wauhr as goods_issue_tim,\n    \n    case\n        when eldat::text ~ '^[0-9]{8}$'\n            and substring(eldat::text, 5, 2)::int between 1 and 12\n            and substring(eldat::text, 7, 2)::int between 1 and 31\n        then to_date(eldat::text, 'YYYYMMDD')\n        else null\n    end\n as goods_receipt_end_date,\n    eluhr as goods_receipt_end_tim,\n    anzsn as number_serial_numbers,\n    nodisp as reservation_purc_req,\n    geo_route as geographical_route,\n    route_gts as gts_route_code,\n    gts_ind as goods_traffic_type,\n    tsp as forwarding_agent_id,\n    cd_locno as location_number_in_apo,\n    cd_loctype as apo_location_type,\n    \n    case\n        when handoverdate::text ~ '^[0-9]{8}$'\n            and substring(handoverdate::text, 5, 2)::int between 1 and 12\n            and substring(handoverdate::text, 7, 2)::int between 1 and 31\n        then to_date(handoverdate::text, 'YYYYMMDD')\n        else null\n    end\n as handover_date,\n    handovertime as handover_tim,\n    fsh_ralloc_qty as requirement_allocated_quantity,\n    fsh_salloc_qty as allocated_stock_quantity,\n    fsh_os_id as order_scheduling_group_id,\n    key_id as unique_number_budget,\n    otb_value as required_budget_val,\n    otb_curr as otb_currency_id,\n    otb_res_value as reserved_budget_val,\n    otb_spec_value as special_release_budget_val,\n    spr_rsn_profile as otb_reason_profile_special_release,\n    budg_type as budget_type,\n    otb_status as otb_check_status,\n    otb_reason as reason,\n    check_type as type_otb_check,\n    dl_id as dateline_id_guid,\n    \n    case\n        when handover_date::text ~ '^[0-9]{8}$'\n            and substring(handover_date::text, 5, 2)::int between 1 and 12\n            and substring(handover_date::text, 7, 2)::int between 1 and 31\n        then to_date(handover_date::text, 'YYYYMMDD')\n        else null\n    end\n as transfer_date,\n    no_scem as no_scem_controlling,\n    \n    case\n        when dng_date::text ~ '^[0-9]{8}$'\n            and substring(dng_date::text, 5, 2)::int between 1 and 12\n            and substring(dng_date::text, 7, 2)::int between 1 and 31\n        then to_date(dng_date::text, 'YYYYMMDD')\n        else null\n    end\n as rem_date,\n    dng_time as reminder_tim,\n    cncl_ancmnt_done as cancellation_threat_made,\n    dateshift_number as number_current_date_shifts,\n    hvr_is_deleted as hvr_is_deleted,\n    hvr_change_time as hvr_change_time\nfrom \"postgres\".\"public_sap_dev\".\"stg_sap__eket\"\nwhere mandt in ('800')", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null, "primary_key": [], "time_spine": null}, "model.sap.int_sap__purchasing_group": {"database": "postgres", "schema": "public_sap_dev", "name": "int_sap__purchasing_group", "resource_type": "model", "package_name": "sap", "path": "sales_and_procurement/star_schema/intermediate/int_sap__purchasing_group.sql", "original_file_path": "models/sales_and_procurement/star_schema/intermediate/int_sap__purchasing_group.sql", "unique_id": "model.sap.int_sap__purchasing_group", "fqn": ["sap", "sales_and_procurement", "star_schema", "intermediate", "int_sap__purchasing_group"], "alias": "int_sap__purchasing_group", "checksum": {"name": "sha256", "checksum": "b64d94c8f1a62f2749c04b6b86f4b4d4626342e7b7f362341c4b226535fcea3e"}, "config": {"enabled": true, "alias": null, "schema": "sap_dev", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "ephemeral", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "freshness": null}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "unrendered_config": {"materialized": "ephemeral", "schema": "sap_{{ var('directed_schema','dev') }}", "enabled": true}, "created_at": 1756850326.6903296, "relation_name": null, "raw_code": "{{ config(enabled=var('sap_using_t024', True)) }}\n\nselect\n    ekgrp as purchasing_group_id,\n    mandt as client_id,\n    tel_number as telephone,\n    telfx as fax_number,\n    ldest as spool_output_device_id,\n    ektel as tel_no_purch_group,\n    smtp_addr as e_mail_address,\n    tel_extens as telephone_no_extension,\n    eknam as description_purchasing_group,\n    _fivetran_deleted as _fivetran_deleted,\n    _fivetran_synced as _fivetran_synced,\n    _fivetran_sap_archived as _fivetran_sap_archived\nfrom {{ ref('stg_sap__t024') }}\nwhere mandt in ('{{ var(\"sales_and_procurement_mandt_var\", [\"800\"]) | join(\"','\") }}')", "doc_blocks": [], "language": "sql", "refs": [{"name": "stg_sap__t024", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": [], "nodes": ["model.sap.stg_sap__t024"]}, "compiled_path": "target/compiled/sap/models/sales_and_procurement/star_schema/intermediate/int_sap__purchasing_group.sql", "compiled": true, "compiled_code": "\n\nselect\n    ekgrp as purchasing_group_id,\n    mandt as client_id,\n    tel_number as telephone,\n    telfx as fax_number,\n    ldest as spool_output_device_id,\n    ektel as tel_no_purch_group,\n    smtp_addr as e_mail_address,\n    tel_extens as telephone_no_extension,\n    eknam as description_purchasing_group,\n    _fivetran_deleted as _fivetran_deleted,\n    _fivetran_synced as _fivetran_synced,\n    _fivetran_sap_archived as _fivetran_sap_archived\nfrom \"postgres\".\"public_sap_dev\".\"stg_sap__t024\"\nwhere mandt in ('800')", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null, "primary_key": [], "time_spine": null}, "model.sap.int_sap__material": {"database": "postgres", "schema": "public_sap_dev", "name": "int_sap__material", "resource_type": "model", "package_name": "sap", "path": "sales_and_procurement/star_schema/intermediate/int_sap__material.sql", "original_file_path": "models/sales_and_procurement/star_schema/intermediate/int_sap__material.sql", "unique_id": "model.sap.int_sap__material", "fqn": ["sap", "sales_and_procurement", "star_schema", "intermediate", "int_sap__material"], "alias": "int_sap__material", "checksum": {"name": "sha256", "checksum": "47fcac526568cb0d3e2fa29a39974f33d21755007c188ea0c698bfebb10f4c29"}, "config": {"enabled": true, "alias": null, "schema": "sap_dev", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "ephemeral", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "freshness": null}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "unrendered_config": {"materialized": "ephemeral", "schema": "sap_{{ var('directed_schema','dev') }}", "enabled": true}, "created_at": 1756850326.698407, "relation_name": null, "raw_code": "{{ config(enabled=var('sap_using_mara', True)) }}\n\nwith mara as (\n    select *\n    from {{ ref('stg_sap__mara') }}\n\n{% set using_makt = var('sap_using_makt', True) %}\n{% if using_makt %}\n), makt as (\n    select *\n    from {{ ref('stg_sap__makt') }}\n{% endif %}\n\n), final as (\n    select\n        mara.mandt as client_id,\n        mara.matnr as material_id,\n        mara.retdelc as return_code_id,\n        mara._sttpec_syncchg as _sttpec_syncchg,\n        mara.sgt_covsa as segmentation_strategy_id,\n        mara._sttpec_synctime as _sttpec_synctime,\n        mara.size2 as second_size,\n        mara.bwscl as source_supply_id,\n        mara.liqdt as deletion_date,\n        mara.compl as material_completion_level_id,\n        mara.whstc as warehouse_storage_condition_id,\n        mara.maxc_tol as overcapacity_toler,\n        mara.ergew as allowed_packaging_weight,\n        mara._sttpec_prdcat as _sttpec_prdcat,\n        mara.kzwsm as units_measure_usage,\n        mara.cotype as object_type_id,\n        mara.bbtyp as assortment_list_type_id,\n        mara.laeda as last_change_date,\n        mara.ersda as created_date,\n        mara.rdmhd as rounding_rule_sled,\n        mara.picnum as supersession_chain_number,\n        mara.herkl as country_of_origin_id,\n        mara._vso_r_top_ind as _vso_r_top_ind,\n        mara.magrv as matl_grp_pack_matls_id,\n        mara.qgrp as quality_inspection_group_id,\n        mara.fsh_sc_mid as material_conv_id,\n        mara.behvo as container_requirements_id,\n        mara.brgew as gross_weight,\n        mara.mfrpn as manufacturer_part_number,\n        mara.color_atinn as int_char_number_id,\n        mara.kunnr as competitor_id,\n        mara.qmpur as qm_in_procurement_is_active,\n        mara.ipmipproduct as intellectual_property,\n        mara.ferth as production_inspection_memo,\n        mara.voleh as volume_uom_id,\n        mara._vso_r_no_p_gvh as _vso_r_no_p_gvh,\n        mara.mstav as x_distr_chain_status_id,\n        mara.mtpos_mara as item_category_group_id,\n        mara.kzumw as environmentally_relevant,\n        mara.kzgvh as closed,\n        mara.free_char as free_charact_value,\n        mara.fiber_part1 as percentage_share_1,\n        mara.eannr as ean_number,\n        mara.brand_id as brand_id,\n        mara.aeszn as document_change_no,\n        mara.fiber_part2 as percentage_share_2,\n        mara.ihivi as indicator_highly_viscous,\n        mara.hutyp_dflt as standard_hu_type_id,\n        mara.mbrsh as industry_sector_id,\n        mara.textile_comp_ind as textile_composition_maintenance_active,\n        mara.fiber_part3 as percentage_share_3,\n        mara.dg_pack_status as dangerous_goods_packaging_status_id,\n        mara.fiber_part4 as percentage_share_4,\n        mara._vso_r_tilt_ind as _vso_r_tilt_ind,\n        mara.mcond as material_condition_management,\n        mara._vso_r_tol_b_ht as _vso_r_tol_b_ht,\n        mara.fsh_mg_at2 as fashion_information_field_2,\n        mara.fiber_part5 as percentage_share_5,\n        mara.adprof as adjustment_profile_id,\n        mara.mstde as valid_from_date,\n        mara.volto as excess_volume_tol,\n        mara.gtin_variant as global_trade_item_number_variant,\n        mara.saisj as season_year,\n        mara.zeiar as document_type,\n        mara.prdha as product_hierarchy_id,\n        mara.maxh as max_pack_height,\n        mara.inhal as net_contents,\n        mara.bwvor as procurement_rule_id,\n        mara.groes as size_dimensions,\n        mara.bflme as logistical_variants,\n        mara.volum as volume,\n        mara.sgt_stat as segmentation_status,\n        mara.cadkz as cad_indicator,\n        mara.qqtime as quarantine_period,\n        mara._vso_r_pal_ovr_w as _vso_r_pal_ovr_w,\n        mara.fiber_code3 as component_3_id,\n        mara.fiber_code2 as component_2_id,\n        mara.sprof as pricing_profile_variants,\n        mara.fiber_code4 as component_4_id,\n        mara.cwqtolgr as cw_tolerance_group_id,\n        mara.kosch as product_allocation_id,\n        mara.fiber_code5 as component_5_id,\n        mara.xgchp as appr_batch_rec_req,\n        mara.logunit as logistics_uom_id,\n        mara.lvorm as df_at_client_level,\n        mara.hoehe as height,\n        mara.ergei as weight_uom_id,\n        mara.begru as authorization_group,\n        mara.ekwsl as purchasing_value_key_id,\n        mara.gds_relevant as gds_relevant,\n        mara.taklv as tax_classification_id,\n        mara.datab as datab,\n        mara.xchpf as batch_management,\n        mara.care_code as care_code,\n        mara.mhdrz as minimum_remaining_shelf_life,\n        mara.oitrind as transfer_sign,\n        mara.oihmtxgr as material_tax_group_id,\n        mara.saity as rollout_in_season_id,\n        mara.iprkz as period_ind_sled,\n        mara._sttpec_country_ref as _sttpec_country_ref,\n        mara.normt as industry_std_desc,\n        mara.serlv as serialization_level,\n        mara.kzkup as co_product,\n        mara.mstdv as mstdv,\n        mara.attyp as material_category,\n        mara._dsd_sv_cnt_grp as _dsd_sv_cnt_grp,\n        mara.stfak as stacking_factor,\n        mara.tare_var as variable_tare_weight,\n        mara.mfrnr as manufacturer_number_id,\n        mara.allow_pmat_igno as variant_price_allowed,\n        mara.imatn as fff_class,\n        mara.profl as dg_indicator_profile_id,\n        mara.tragr as transportation_group_id,\n        mara.hutyp as handling_unit_type_id,\n        mara.meins as base_uom_id,\n        mara.bstme as order_uom_id,\n        mara._vso_r_stack_no as _vso_r_stack_no,\n        mara.cwqproc as cw_profile_cw_qty_id,\n        mara.psm_code as protected_species_management_code_id,\n        mara.blatt as page_number,\n        mara._vso_r_pal_b_ht as _vso_r_pal_b_ht,\n        mara._bev1_luldegrp as _bev1_luldegrp,\n        mara._bev1_luleinh as _bev1_luleinh,\n        mara.size1 as main_size,\n        mara.maxc as maximum_capacity,\n        mara.ntgew as net_weight,\n        mara.saiso as season_category_id,\n        mara.commodity as physical_commodity_id,\n        mara.przus as product_composition,\n        mara.cobjid as object_id,\n        mara._vso_r_kzgvh_ind as _vso_r_kzgvh_ind,\n        mara.anp as anp_code_id,\n        mara.mprof as mfr_part_profile_id,\n        mara.fsh_mg_at3 as fashion_information_field_3,\n        mara.spart as division_id,\n        mara.fsh_seaim as season_active_in_inventory_management,\n        mara.formt as page_format_production_memo,\n        mara.whmatgr as warehouse_material_group_id,\n        mara.sled_bbd as expiration_date,\n        mara.gennr as generic_material_id,\n        mara.maxl as max_pack_length,\n        mara.matkl as material_group_id,\n        mara.nrfhg as qual_f_freegoodsdis,\n        mara.serial as serial_number_profile_id,\n        mara.matfi as material_is_locked,\n        mara.qqtimeuom as time_quarantine_period_uom_id,\n        mara.vpreh as comparison_price_unit,\n        mara.zeivr as doc_version,\n        mara.bmatn as int_material_number_id,\n        mara.size1_atinn as size1_atinn,\n        mara.loglev_reto as return_to_logistics_level_id,\n        mara.fuelg as maximum_level_by_volume,\n        mara.pilferable as pilferable,\n        mara.kzrev as revision_level_assgd,\n        mara._sttpec_sertype as _sttpec_sertype,\n        mara._vso_r_pal_ind as _vso_r_pal_ind,\n        mara.sgt_scope as segmentation_strategy_scope,\n        mara.maxdim_uom as ment_uom_id,\n        mara.nsnid as nato_item_identification_number,\n        mara.etiar as label_type_id,\n        mara.fsh_mg_at1 as fashion_information_field_1,\n        mara.ervol as allowed_packaging_volume,\n        mara.satnr as cross_plant_cm_id,\n        mara.sgt_csgr as segmentation_structure_id,\n        mara.blanz as number_sheets,\n        mara.mtart as material_type_id,\n        mara.etiag as labeling_matl_grpg_id,\n        mara.fiber_code1 as component_1_id,\n        mara.mfrgr as material_freight_group_id,\n        mara._vso_r_stack_ind as _vso_r_stack_ind,\n        mara.zeinr as document,\n        mara.medium as medium_id,\n        mara.cwqrel as catch_weight_relevant,\n        mara.mhdhb as total_shelf_life,\n        mara.vpsta as compl_maint_status,\n        mara.wrkst as basic_material_id,\n        mara.aeklk as net_change_costing,\n        mara.stoff as hazardous_material_number_id,\n        mara.packcode as packaging_code_id,\n        mara.sgt_rel as segmentation_relevant,\n        mara._vso_r_bot_ind as _vso_r_bot_ind,\n        mara.breit as width,\n        mara.adspc_spc as spare_part_class_code,\n        mara.size2_atinn as size2_atinn,\n        mara.weora as acceptance_at_origin,\n        mara.inhbr as gross_contents,\n        mara.fsh_sealv as indicator_use_season,\n        mara.kzeff as assign_effect_vals,\n        mara.plgtp as price_band_category_id,\n        mara.pmata as pricing_reference_material_id,\n        mara.rbnrm as catalog_profile_id,\n        mara.meabm as dimension_uom_id,\n        mara.cuobf as internal_object_number,\n        mara._bev1_nestruccat as _bev1_nestruccat,\n        mara.inhme as content_uom_id,\n        mara.kznfm as follow_up_material,\n        mara.hazmat as rel_hs,\n        mara.mlgut as empties_bill_material,\n        mara.wesch as number_gr_slips,\n        mara._vso_r_pal_min_h as _vso_r_pal_min_h,\n        mara.oigroupnam as td_product_group_id,\n        mara.maxb as max_pack_width,\n        mara.bismt as old_material_number,\n        mara.disst as low_level_code,\n        mara._sttpec_syncact as _sttpec_syncact,\n        mara.bstat as creation_status_id,\n        mara.animal_origin as cont_non_textile_parts_animal_origin,\n        mara.etifo as label_form_id,\n        mara.kzkfg as configurable_material,\n        mara._dsd_sl_toltyp as _dsd_sl_toltyp,\n        mara.fashgrd as fashion_grade_id,\n        mara.cmeth as quantity_conversion_method,\n        mara.rmatp as reference_matl_packing_id,\n        mara.vhart as packaging_material_type_id,\n        mara.mhdlp as storage_percentage,\n        mara.ervoe as ervoe,\n        mara.tempb as temperature_conditions_indicator_id,\n        mara.ean11 as ean,\n        mara._accgo_assgd_uom as _accgo_assgd_uom,\n        mara._vso_r_quan_unit as _vso_r_quan_unit,\n        mara.ernam as created_by,\n        mara.gewto as excess_wt_tolerance,\n        mara.numtp as ean_category_id,\n        mara.labor as laboratory_design_office_id,\n        mara.iloos as indicator_in_bulk_liquid,\n        mara.cmrel as relevant_cm,\n        mara._dsd_vc_group as _dsd_vc_group,\n        mara.raube as storage_conditions_id,\n        mara.extwg as external_material_group_id,\n        mara.vabme as variable_purchase_order_unit,\n        mara.laeng as length,\n        mara.hndlcode as handling_indicator_id,\n        mara._vso_r_pal_ovr_d as _vso_r_pal_ovr_d,\n        mara.ps_smartform as form_name_id,\n        mara.entar as deactivated_id,\n        mara.pstat as maintenance_status,\n        mara.color as color,\n        mara.gewei as gewei,\n        mara.aenam as changed_by,\n        mara.mstae as cross_plant_material_status_id,\n        mara.zeifo as page_format,\n        mara._fivetran_deleted as _fivetran_deleted,\n        mara._fivetran_synced as _fivetran_synced,\n        mara._fivetran_sap_archived as _fivetran_sap_archived,\n        {{ 'makt.maktx' if using_makt else 'cast(null as ' ~ dbt.type_string() ~ ')' }} as material_description\n    from mara\n\n    {% if using_makt %}\n    left join makt\n        on mara.mandt = makt.mandt\n        and mara.matnr = makt.matnr\n        and makt.spras = 'e'\n    {% endif %}\n\n    where mara.mandt in ('{{ var(\"sales_and_procurement_mandt_var\", [\"800\"]) | join(\"','\") }}')\n)\n\nselect *\nfrom final", "doc_blocks": [], "language": "sql", "refs": [{"name": "stg_sap__mara", "package": null, "version": null}, {"name": "stg_sap__makt", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": [], "nodes": ["model.sap.stg_sap__mara", "model.sap.stg_sap__makt"]}, "compiled_path": "target/compiled/sap/models/sales_and_procurement/star_schema/intermediate/int_sap__material.sql", "compiled": true, "compiled_code": "\n\nwith mara as (\n    select *\n    from \"postgres\".\"public_sap_dev\".\"stg_sap__mara\"\n\n\n\n), makt as (\n    select *\n    from \"postgres\".\"public_sap_dev\".\"stg_sap__makt\"\n\n\n), final as (\n    select\n        mara.mandt as client_id,\n        mara.matnr as material_id,\n        mara.retdelc as return_code_id,\n        mara._sttpec_syncchg as _sttpec_syncchg,\n        mara.sgt_covsa as segmentation_strategy_id,\n        mara._sttpec_synctime as _sttpec_synctime,\n        mara.size2 as second_size,\n        mara.bwscl as source_supply_id,\n        mara.liqdt as deletion_date,\n        mara.compl as material_completion_level_id,\n        mara.whstc as warehouse_storage_condition_id,\n        mara.maxc_tol as overcapacity_toler,\n        mara.ergew as allowed_packaging_weight,\n        mara._sttpec_prdcat as _sttpec_prdcat,\n        mara.kzwsm as units_measure_usage,\n        mara.cotype as object_type_id,\n        mara.bbtyp as assortment_list_type_id,\n        mara.laeda as last_change_date,\n        mara.ersda as created_date,\n        mara.rdmhd as rounding_rule_sled,\n        mara.picnum as supersession_chain_number,\n        mara.herkl as country_of_origin_id,\n        mara._vso_r_top_ind as _vso_r_top_ind,\n        mara.magrv as matl_grp_pack_matls_id,\n        mara.qgrp as quality_inspection_group_id,\n        mara.fsh_sc_mid as material_conv_id,\n        mara.behvo as container_requirements_id,\n        mara.brgew as gross_weight,\n        mara.mfrpn as manufacturer_part_number,\n        mara.color_atinn as int_char_number_id,\n        mara.kunnr as competitor_id,\n        mara.qmpur as qm_in_procurement_is_active,\n        mara.ipmipproduct as intellectual_property,\n        mara.ferth as production_inspection_memo,\n        mara.voleh as volume_uom_id,\n        mara._vso_r_no_p_gvh as _vso_r_no_p_gvh,\n        mara.mstav as x_distr_chain_status_id,\n        mara.mtpos_mara as item_category_group_id,\n        mara.kzumw as environmentally_relevant,\n        mara.kzgvh as closed,\n        mara.free_char as free_charact_value,\n        mara.fiber_part1 as percentage_share_1,\n        mara.eannr as ean_number,\n        mara.brand_id as brand_id,\n        mara.aeszn as document_change_no,\n        mara.fiber_part2 as percentage_share_2,\n        mara.ihivi as indicator_highly_viscous,\n        mara.hutyp_dflt as standard_hu_type_id,\n        mara.mbrsh as industry_sector_id,\n        mara.textile_comp_ind as textile_composition_maintenance_active,\n        mara.fiber_part3 as percentage_share_3,\n        mara.dg_pack_status as dangerous_goods_packaging_status_id,\n        mara.fiber_part4 as percentage_share_4,\n        mara._vso_r_tilt_ind as _vso_r_tilt_ind,\n        mara.mcond as material_condition_management,\n        mara._vso_r_tol_b_ht as _vso_r_tol_b_ht,\n        mara.fsh_mg_at2 as fashion_information_field_2,\n        mara.fiber_part5 as percentage_share_5,\n        mara.adprof as adjustment_profile_id,\n        mara.mstde as valid_from_date,\n        mara.volto as excess_volume_tol,\n        mara.gtin_variant as global_trade_item_number_variant,\n        mara.saisj as season_year,\n        mara.zeiar as document_type,\n        mara.prdha as product_hierarchy_id,\n        mara.maxh as max_pack_height,\n        mara.inhal as net_contents,\n        mara.bwvor as procurement_rule_id,\n        mara.groes as size_dimensions,\n        mara.bflme as logistical_variants,\n        mara.volum as volume,\n        mara.sgt_stat as segmentation_status,\n        mara.cadkz as cad_indicator,\n        mara.qqtime as quarantine_period,\n        mara._vso_r_pal_ovr_w as _vso_r_pal_ovr_w,\n        mara.fiber_code3 as component_3_id,\n        mara.fiber_code2 as component_2_id,\n        mara.sprof as pricing_profile_variants,\n        mara.fiber_code4 as component_4_id,\n        mara.cwqtolgr as cw_tolerance_group_id,\n        mara.kosch as product_allocation_id,\n        mara.fiber_code5 as component_5_id,\n        mara.xgchp as appr_batch_rec_req,\n        mara.logunit as logistics_uom_id,\n        mara.lvorm as df_at_client_level,\n        mara.hoehe as height,\n        mara.ergei as weight_uom_id,\n        mara.begru as authorization_group,\n        mara.ekwsl as purchasing_value_key_id,\n        mara.gds_relevant as gds_relevant,\n        mara.taklv as tax_classification_id,\n        mara.datab as datab,\n        mara.xchpf as batch_management,\n        mara.care_code as care_code,\n        mara.mhdrz as minimum_remaining_shelf_life,\n        mara.oitrind as transfer_sign,\n        mara.oihmtxgr as material_tax_group_id,\n        mara.saity as rollout_in_season_id,\n        mara.iprkz as period_ind_sled,\n        mara._sttpec_country_ref as _sttpec_country_ref,\n        mara.normt as industry_std_desc,\n        mara.serlv as serialization_level,\n        mara.kzkup as co_product,\n        mara.mstdv as mstdv,\n        mara.attyp as material_category,\n        mara._dsd_sv_cnt_grp as _dsd_sv_cnt_grp,\n        mara.stfak as stacking_factor,\n        mara.tare_var as variable_tare_weight,\n        mara.mfrnr as manufacturer_number_id,\n        mara.allow_pmat_igno as variant_price_allowed,\n        mara.imatn as fff_class,\n        mara.profl as dg_indicator_profile_id,\n        mara.tragr as transportation_group_id,\n        mara.hutyp as handling_unit_type_id,\n        mara.meins as base_uom_id,\n        mara.bstme as order_uom_id,\n        mara._vso_r_stack_no as _vso_r_stack_no,\n        mara.cwqproc as cw_profile_cw_qty_id,\n        mara.psm_code as protected_species_management_code_id,\n        mara.blatt as page_number,\n        mara._vso_r_pal_b_ht as _vso_r_pal_b_ht,\n        mara._bev1_luldegrp as _bev1_luldegrp,\n        mara._bev1_luleinh as _bev1_luleinh,\n        mara.size1 as main_size,\n        mara.maxc as maximum_capacity,\n        mara.ntgew as net_weight,\n        mara.saiso as season_category_id,\n        mara.commodity as physical_commodity_id,\n        mara.przus as product_composition,\n        mara.cobjid as object_id,\n        mara._vso_r_kzgvh_ind as _vso_r_kzgvh_ind,\n        mara.anp as anp_code_id,\n        mara.mprof as mfr_part_profile_id,\n        mara.fsh_mg_at3 as fashion_information_field_3,\n        mara.spart as division_id,\n        mara.fsh_seaim as season_active_in_inventory_management,\n        mara.formt as page_format_production_memo,\n        mara.whmatgr as warehouse_material_group_id,\n        mara.sled_bbd as expiration_date,\n        mara.gennr as generic_material_id,\n        mara.maxl as max_pack_length,\n        mara.matkl as material_group_id,\n        mara.nrfhg as qual_f_freegoodsdis,\n        mara.serial as serial_number_profile_id,\n        mara.matfi as material_is_locked,\n        mara.qqtimeuom as time_quarantine_period_uom_id,\n        mara.vpreh as comparison_price_unit,\n        mara.zeivr as doc_version,\n        mara.bmatn as int_material_number_id,\n        mara.size1_atinn as size1_atinn,\n        mara.loglev_reto as return_to_logistics_level_id,\n        mara.fuelg as maximum_level_by_volume,\n        mara.pilferable as pilferable,\n        mara.kzrev as revision_level_assgd,\n        mara._sttpec_sertype as _sttpec_sertype,\n        mara._vso_r_pal_ind as _vso_r_pal_ind,\n        mara.sgt_scope as segmentation_strategy_scope,\n        mara.maxdim_uom as ment_uom_id,\n        mara.nsnid as nato_item_identification_number,\n        mara.etiar as label_type_id,\n        mara.fsh_mg_at1 as fashion_information_field_1,\n        mara.ervol as allowed_packaging_volume,\n        mara.satnr as cross_plant_cm_id,\n        mara.sgt_csgr as segmentation_structure_id,\n        mara.blanz as number_sheets,\n        mara.mtart as material_type_id,\n        mara.etiag as labeling_matl_grpg_id,\n        mara.fiber_code1 as component_1_id,\n        mara.mfrgr as material_freight_group_id,\n        mara._vso_r_stack_ind as _vso_r_stack_ind,\n        mara.zeinr as document,\n        mara.medium as medium_id,\n        mara.cwqrel as catch_weight_relevant,\n        mara.mhdhb as total_shelf_life,\n        mara.vpsta as compl_maint_status,\n        mara.wrkst as basic_material_id,\n        mara.aeklk as net_change_costing,\n        mara.stoff as hazardous_material_number_id,\n        mara.packcode as packaging_code_id,\n        mara.sgt_rel as segmentation_relevant,\n        mara._vso_r_bot_ind as _vso_r_bot_ind,\n        mara.breit as width,\n        mara.adspc_spc as spare_part_class_code,\n        mara.size2_atinn as size2_atinn,\n        mara.weora as acceptance_at_origin,\n        mara.inhbr as gross_contents,\n        mara.fsh_sealv as indicator_use_season,\n        mara.kzeff as assign_effect_vals,\n        mara.plgtp as price_band_category_id,\n        mara.pmata as pricing_reference_material_id,\n        mara.rbnrm as catalog_profile_id,\n        mara.meabm as dimension_uom_id,\n        mara.cuobf as internal_object_number,\n        mara._bev1_nestruccat as _bev1_nestruccat,\n        mara.inhme as content_uom_id,\n        mara.kznfm as follow_up_material,\n        mara.hazmat as rel_hs,\n        mara.mlgut as empties_bill_material,\n        mara.wesch as number_gr_slips,\n        mara._vso_r_pal_min_h as _vso_r_pal_min_h,\n        mara.oigroupnam as td_product_group_id,\n        mara.maxb as max_pack_width,\n        mara.bismt as old_material_number,\n        mara.disst as low_level_code,\n        mara._sttpec_syncact as _sttpec_syncact,\n        mara.bstat as creation_status_id,\n        mara.animal_origin as cont_non_textile_parts_animal_origin,\n        mara.etifo as label_form_id,\n        mara.kzkfg as configurable_material,\n        mara._dsd_sl_toltyp as _dsd_sl_toltyp,\n        mara.fashgrd as fashion_grade_id,\n        mara.cmeth as quantity_conversion_method,\n        mara.rmatp as reference_matl_packing_id,\n        mara.vhart as packaging_material_type_id,\n        mara.mhdlp as storage_percentage,\n        mara.ervoe as ervoe,\n        mara.tempb as temperature_conditions_indicator_id,\n        mara.ean11 as ean,\n        mara._accgo_assgd_uom as _accgo_assgd_uom,\n        mara._vso_r_quan_unit as _vso_r_quan_unit,\n        mara.ernam as created_by,\n        mara.gewto as excess_wt_tolerance,\n        mara.numtp as ean_category_id,\n        mara.labor as laboratory_design_office_id,\n        mara.iloos as indicator_in_bulk_liquid,\n        mara.cmrel as relevant_cm,\n        mara._dsd_vc_group as _dsd_vc_group,\n        mara.raube as storage_conditions_id,\n        mara.extwg as external_material_group_id,\n        mara.vabme as variable_purchase_order_unit,\n        mara.laeng as length,\n        mara.hndlcode as handling_indicator_id,\n        mara._vso_r_pal_ovr_d as _vso_r_pal_ovr_d,\n        mara.ps_smartform as form_name_id,\n        mara.entar as deactivated_id,\n        mara.pstat as maintenance_status,\n        mara.color as color,\n        mara.gewei as gewei,\n        mara.aenam as changed_by,\n        mara.mstae as cross_plant_material_status_id,\n        mara.zeifo as page_format,\n        mara._fivetran_deleted as _fivetran_deleted,\n        mara._fivetran_synced as _fivetran_synced,\n        mara._fivetran_sap_archived as _fivetran_sap_archived,\n        makt.maktx as material_description\n    from mara\n\n    \n    left join makt\n        on mara.mandt = makt.mandt\n        and mara.matnr = makt.matnr\n        and makt.spras = 'e'\n    \n\n    where mara.mandt in ('800')\n)\n\nselect *\nfrom final", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null, "primary_key": [], "time_spine": null}, "model.sap.int_sap__sales_document_header": {"database": "postgres", "schema": "public_sap_dev", "name": "int_sap__sales_document_header", "resource_type": "model", "package_name": "sap", "path": "sales_and_procurement/star_schema/intermediate/int_sap__sales_document_header.sql", "original_file_path": "models/sales_and_procurement/star_schema/intermediate/int_sap__sales_document_header.sql", "unique_id": "model.sap.int_sap__sales_document_header", "fqn": ["sap", "sales_and_procurement", "star_schema", "intermediate", "int_sap__sales_document_header"], "alias": "int_sap__sales_document_header", "checksum": {"name": "sha256", "checksum": "a373f3d908fb2b5cd16e35b3d024c2281a6b0eab684d82f6f8c2c460d91e9ef0"}, "config": {"enabled": true, "alias": null, "schema": "sap_dev", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "ephemeral", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "freshness": null}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "unrendered_config": {"materialized": "ephemeral", "schema": "sap_{{ var('directed_schema','dev') }}", "enabled": true}, "created_at": 1756850326.7108293, "relation_name": null, "raw_code": "{{ config(enabled=var('sap_using_vbak', True)) }}\n\nselect\n\tmandt as client_id,\n    vbeln as sales_document_id,\n    kostl as cost_center_id,\n    mahza as number_contacts,\n    msr_id as process_identification_number,\n    _dataaging as filter_value_aging_date,\n    taxk5 as taxclass5_cust_id,\n    kvgr4 as customer_group_4_id,\n    amtbl as rel_credit_val,\n    trvog as transaction_group,\n    hb_resdate as resolution_date,\n    fmbdat as material_availability_date,\n    fsh_vrsn_status as snapshot_status,\n    upd_tmstmp as time_stamp,\n    auart as sales_document_type_id,\n    hb_expdate as expiration_date,\n    scheme_grp as group_ref_procedure_id,\n    smenr as number_sales_unit_id,\n    taxk6 as taxclass6_cust_id,\n    fsh_transaction as transaction_number,\n    kvgr5 as customer_group_5_id,\n    gskst as business_area_from_cost_center_id,\n    vkgrp as sales_group_id,\n    pay_method as payment_methods,\n    ktext as search_term_product_proposal,\n    ps_psp_pnr as wbs_element_id,\n    faksk as billing_block_in_sd_document_id,\n    bnddt as quotation_valid_to_date,\n    cmwae as currency_id,\n    kokrs as controlling_area_id,\n    kunnr as sold_to_party_id,\n    betc as business_event_type_code,\n    fsh_rereg as release_rule_id,\n    tas as treasury_account_symbol,\n    cancel_allow as cancellation_allowed,\n    fkara as order_rel_bill_type_id,\n    taxk7 as taxclass7_cust_id,\n    gwldt as guarantee_date,\n    psm_budat as posting_in_the_document_date,\n    objnr as object_number_at_header_level_id,\n    autlf as complete_delivery,\n    stwae as statistics_currency_id,\n    abhov as pick_up_tim,\n    logsysb as logical_system_id,\n    fsh_kvgr6 as customer_group_6_id,\n    bname as name_orderer,\n    taxk8 as taxclass8_cust_id,\n    xblnr as reference_document_number,\n    mtlaur as marker_low_income_housing_id,\n    augru as order_reason_id,\n    stafo as update_group_stats_id,\n    swenr as business_entity_number_id,\n    _xlso_trans_ctxt as _xlso_trans_ctxt,\n    abruf_part as check_partner_authorizations,\n    cmngv as next_date,\n    knkli as credit_account_id,\n    spart as division_id,\n    proli as dg_mgmt_profile_id,\n    enqueue_grp as enqueue_grp,\n    vzeit as requested_dely_tim,\n    kalcd as proc_camp_determin_id,\n    bukrs_vf as company_code_to_be_billed_id,\n    fsh_kvgr7 as customer_group_7_id,\n    vprgr as proposed_date_type,\n    crm_guid as character_field_length_70,\n    hityp_pr as hierarchy_type_pricing_id,\n    taxk9 as taxclass9_cust_id,\n    vgbel as reference_document_id,\n    erzet as created_tim,\n    ihrez as your_reference,\n    submi as collective_number_sd,\n    vdatu as requested_delivery_date,\n    _xlso_variant_id as _xlso_variant_id,\n    abdis as mrp_delivery_schedule_types,\n    fsh_kvgr8 as customer_group_8_id,\n    ernam as created_by,\n    hb_cont_reason as contingency_id,\n    netwr as net_val,\n    vbkla as original_system,\n    vgtyp as preceding_doc_categ,\n    sbgrp as credit_rep_group_id,\n    stceg_l as tax_destination_country_id,\n    fsh_kvgr10 as customer_group_10_id,\n    knuma as agreement_id,\n    fsh_ss as order_scheduling_strategy_id,\n    fsh_cq_check as requirement_relevant,\n    xegdr as eu_triangular_deal,\n    bstnk as customer_purchase_order_number,\n    multi as multiple_promotions,\n    sppaym as payment_method,\n    lifsk as delivery_block_document_header_id,\n    fsh_kvgr9 as customer_group_9_id,\n    aedat as changed_date,\n    wtysc_clm_hdr as claim_header,\n    dat_fzau as cml_delivery_order_qty_date,\n    awahr as sales_probability,\n    kurst as exchange_rate_type_id,\n    gueen as valid_to_date,\n    _xlso_so_vald_to as _xlso_so_vald_to,\n    cmnup as next_check_date,\n    abhod as pick_up_date,\n    vkorg as sales_organization_id,\n    audat as document_date,\n    zuonr as assignment_number,\n    angdt as quotation_inquiry_is_valid_from_date,\n    vsbed as shipping_conditions_id,\n    _xlso_payment_op as _xlso_payment_op,\n    rep_freq as reporting_frequency,\n    handle as int_id,\n    _xlso_so_vald_fm as _xlso_so_vald_fm,\n    bstzd as purchase_order_number_supplement,\n    taxk1 as alternative_tax_classification_id,\n    mahdt as last_customer_contact_date,\n    bstdk as customer_purchase_order_date,\n    vbeln_grp as mster_contract_number_id,\n    handoverloc as handover_location,\n    qmnum as notification_id,\n    kalsm_ch as search_procedure_id,\n    cont_dg as contains_dg,\n    cmfre as release_date,\n    vtweg as distribution_channel_id,\n    telf1 as telephone_number,\n    aufnr as order_id,\n    phase as sales_phase_id,\n    taxk2 as taxclass2_cust_id,\n    kvgr1 as customer_group_1_id,\n    grupp as customer_credit_group_id,\n    fsh_os_stg_change as os_strategy_specific_fields_change,\n    abhob as abhob,\n    landtx as tax_departure_country_id,\n    kalsm as pricing_procedure_id,\n    erdat as created_date,\n    bpn as business_partner_number_id,\n    stage as construction_stage,\n    kkber as credit_control_area_id,\n    taxk3 as taxclass3_cust_id,\n    abrvw as usage_id,\n    vbtyp as sd_document_category,\n    kvgr2 as customer_group_2_id,\n    knumv as document_condition_no,\n    guebg as valid_from_date,\n    fsh_vas_cg as vas_customer_group_id,\n    waerk as sd_document_currency_id,\n    vkbur as sales_office_id,\n    ctlpc as credit_management_risk_category_id,\n    vsnmr_v as sales_document_version_number,\n    rplnr as number_payment_card_plan_type_id,\n    vbklt as sd_document_indicator,\n    mod_allow as modification_allowed,\n    taxk4 as tax_classification_4_customer_id,\n    _xlso_catalog_id as _xlso_catalog_id,\n    kvgr3 as customer_group_3_id,\n    fsh_candate as cancellation_date,\n    agrzr as accrual_period,\n    mill_appl_id as application_id,\n    bsark as customer_purchase_order_type_id,\n    tm_ctrl_key as control_key,\n    gsber as business_area_id,\n    _fivetran_deleted as _fivetran_deleted,\n    _fivetran_synced as _fivetran_synced,\n    _fivetran_sap_archived as _fivetran_sap_archived\nfrom {{ ref('stg_sap__vbak') }}\nwhere mandt in ('{{ var(\"sales_and_procurement_mandt_var\", [\"800\"]) | join(\"','\") }}')", "doc_blocks": [], "language": "sql", "refs": [{"name": "stg_sap__vbak", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": [], "nodes": ["model.sap.stg_sap__vbak"]}, "compiled_path": "target/compiled/sap/models/sales_and_procurement/star_schema/intermediate/int_sap__sales_document_header.sql", "compiled": true, "compiled_code": "\n\nselect\n\tmandt as client_id,\n    vbeln as sales_document_id,\n    kostl as cost_center_id,\n    mahza as number_contacts,\n    msr_id as process_identification_number,\n    _dataaging as filter_value_aging_date,\n    taxk5 as taxclass5_cust_id,\n    kvgr4 as customer_group_4_id,\n    amtbl as rel_credit_val,\n    trvog as transaction_group,\n    hb_resdate as resolution_date,\n    fmbdat as material_availability_date,\n    fsh_vrsn_status as snapshot_status,\n    upd_tmstmp as time_stamp,\n    auart as sales_document_type_id,\n    hb_expdate as expiration_date,\n    scheme_grp as group_ref_procedure_id,\n    smenr as number_sales_unit_id,\n    taxk6 as taxclass6_cust_id,\n    fsh_transaction as transaction_number,\n    kvgr5 as customer_group_5_id,\n    gskst as business_area_from_cost_center_id,\n    vkgrp as sales_group_id,\n    pay_method as payment_methods,\n    ktext as search_term_product_proposal,\n    ps_psp_pnr as wbs_element_id,\n    faksk as billing_block_in_sd_document_id,\n    bnddt as quotation_valid_to_date,\n    cmwae as currency_id,\n    kokrs as controlling_area_id,\n    kunnr as sold_to_party_id,\n    betc as business_event_type_code,\n    fsh_rereg as release_rule_id,\n    tas as treasury_account_symbol,\n    cancel_allow as cancellation_allowed,\n    fkara as order_rel_bill_type_id,\n    taxk7 as taxclass7_cust_id,\n    gwldt as guarantee_date,\n    psm_budat as posting_in_the_document_date,\n    objnr as object_number_at_header_level_id,\n    autlf as complete_delivery,\n    stwae as statistics_currency_id,\n    abhov as pick_up_tim,\n    logsysb as logical_system_id,\n    fsh_kvgr6 as customer_group_6_id,\n    bname as name_orderer,\n    taxk8 as taxclass8_cust_id,\n    xblnr as reference_document_number,\n    mtlaur as marker_low_income_housing_id,\n    augru as order_reason_id,\n    stafo as update_group_stats_id,\n    swenr as business_entity_number_id,\n    _xlso_trans_ctxt as _xlso_trans_ctxt,\n    abruf_part as check_partner_authorizations,\n    cmngv as next_date,\n    knkli as credit_account_id,\n    spart as division_id,\n    proli as dg_mgmt_profile_id,\n    enqueue_grp as enqueue_grp,\n    vzeit as requested_dely_tim,\n    kalcd as proc_camp_determin_id,\n    bukrs_vf as company_code_to_be_billed_id,\n    fsh_kvgr7 as customer_group_7_id,\n    vprgr as proposed_date_type,\n    crm_guid as character_field_length_70,\n    hityp_pr as hierarchy_type_pricing_id,\n    taxk9 as taxclass9_cust_id,\n    vgbel as reference_document_id,\n    erzet as created_tim,\n    ihrez as your_reference,\n    submi as collective_number_sd,\n    vdatu as requested_delivery_date,\n    _xlso_variant_id as _xlso_variant_id,\n    abdis as mrp_delivery_schedule_types,\n    fsh_kvgr8 as customer_group_8_id,\n    ernam as created_by,\n    hb_cont_reason as contingency_id,\n    netwr as net_val,\n    vbkla as original_system,\n    vgtyp as preceding_doc_categ,\n    sbgrp as credit_rep_group_id,\n    stceg_l as tax_destination_country_id,\n    fsh_kvgr10 as customer_group_10_id,\n    knuma as agreement_id,\n    fsh_ss as order_scheduling_strategy_id,\n    fsh_cq_check as requirement_relevant,\n    xegdr as eu_triangular_deal,\n    bstnk as customer_purchase_order_number,\n    multi as multiple_promotions,\n    sppaym as payment_method,\n    lifsk as delivery_block_document_header_id,\n    fsh_kvgr9 as customer_group_9_id,\n    aedat as changed_date,\n    wtysc_clm_hdr as claim_header,\n    dat_fzau as cml_delivery_order_qty_date,\n    awahr as sales_probability,\n    kurst as exchange_rate_type_id,\n    gueen as valid_to_date,\n    _xlso_so_vald_to as _xlso_so_vald_to,\n    cmnup as next_check_date,\n    abhod as pick_up_date,\n    vkorg as sales_organization_id,\n    audat as document_date,\n    zuonr as assignment_number,\n    angdt as quotation_inquiry_is_valid_from_date,\n    vsbed as shipping_conditions_id,\n    _xlso_payment_op as _xlso_payment_op,\n    rep_freq as reporting_frequency,\n    handle as int_id,\n    _xlso_so_vald_fm as _xlso_so_vald_fm,\n    bstzd as purchase_order_number_supplement,\n    taxk1 as alternative_tax_classification_id,\n    mahdt as last_customer_contact_date,\n    bstdk as customer_purchase_order_date,\n    vbeln_grp as mster_contract_number_id,\n    handoverloc as handover_location,\n    qmnum as notification_id,\n    kalsm_ch as search_procedure_id,\n    cont_dg as contains_dg,\n    cmfre as release_date,\n    vtweg as distribution_channel_id,\n    telf1 as telephone_number,\n    aufnr as order_id,\n    phase as sales_phase_id,\n    taxk2 as taxclass2_cust_id,\n    kvgr1 as customer_group_1_id,\n    grupp as customer_credit_group_id,\n    fsh_os_stg_change as os_strategy_specific_fields_change,\n    abhob as abhob,\n    landtx as tax_departure_country_id,\n    kalsm as pricing_procedure_id,\n    erdat as created_date,\n    bpn as business_partner_number_id,\n    stage as construction_stage,\n    kkber as credit_control_area_id,\n    taxk3 as taxclass3_cust_id,\n    abrvw as usage_id,\n    vbtyp as sd_document_category,\n    kvgr2 as customer_group_2_id,\n    knumv as document_condition_no,\n    guebg as valid_from_date,\n    fsh_vas_cg as vas_customer_group_id,\n    waerk as sd_document_currency_id,\n    vkbur as sales_office_id,\n    ctlpc as credit_management_risk_category_id,\n    vsnmr_v as sales_document_version_number,\n    rplnr as number_payment_card_plan_type_id,\n    vbklt as sd_document_indicator,\n    mod_allow as modification_allowed,\n    taxk4 as tax_classification_4_customer_id,\n    _xlso_catalog_id as _xlso_catalog_id,\n    kvgr3 as customer_group_3_id,\n    fsh_candate as cancellation_date,\n    agrzr as accrual_period,\n    mill_appl_id as application_id,\n    bsark as customer_purchase_order_type_id,\n    tm_ctrl_key as control_key,\n    gsber as business_area_id,\n    _fivetran_deleted as _fivetran_deleted,\n    _fivetran_synced as _fivetran_synced,\n    _fivetran_sap_archived as _fivetran_sap_archived\nfrom \"postgres\".\"public_sap_dev\".\"stg_sap__vbak\"\nwhere mandt in ('800')", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null, "primary_key": [], "time_spine": null}, "model.sap.int_sap__purchasing_document_item": {"database": "postgres", "schema": "public_sap_dev", "name": "int_sap__purchasing_document_item", "resource_type": "model", "package_name": "sap", "path": "sales_and_procurement/star_schema/intermediate/int_sap__purchasing_document_item.sql", "original_file_path": "models/sales_and_procurement/star_schema/intermediate/int_sap__purchasing_document_item.sql", "unique_id": "model.sap.int_sap__purchasing_document_item", "fqn": ["sap", "sales_and_procurement", "star_schema", "intermediate", "int_sap__purchasing_document_item"], "alias": "int_sap__purchasing_document_item", "checksum": {"name": "sha256", "checksum": "be492b56de9e3bbfaecebed654662522bdf23c43a4234d0d875761d2edd2fc43"}, "config": {"enabled": true, "alias": null, "schema": "sap_dev", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "ephemeral", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "freshness": null}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "unrendered_config": {"materialized": "ephemeral", "schema": "sap_{{ var('directed_schema','dev') }}", "enabled": true}, "created_at": 1756850326.7197084, "relation_name": null, "raw_code": "{{ config(enabled=var('sap_using_ekpo', True)) }}\n\nselect\n    mandt as client_id,\n    ebeln as purchasing_document_id,\n    ebelp as purchasing_document_item_id,\n    loekz as deletion_indicator,\n    statu as rfq_status,\n    {{ char_yyyymmdd_to_date('aedat') }} as last_changed_on_date,\n    txz01 as short_text,\n    matnr as material_id,\n    ematn as material_number_id,\n    bukrs as company_code_id,\n    werks as plant_id,\n    lgort as storage_location_id,\n    bednr as requirement_tracking_number,\n    matkl as material_group_id,\n    infnr as number_purchasing_info_id,\n    idnlf as material_number_used_by_vendor,\n    ktmng as target_quantity,\n    menge as purchase_order_quantity,\n    meins as order_uom_id,\n    bprme as order_price_purchasing_uom_id,\n    bpumz as quantity_conversion,\n    bpumn as bpumn,\n    umrez as equal_to,\n    umren as denominator,\n    netpr as net_order_price_val,\n    peinh as price_unit,\n    netwr as net_order_po_currency_val,\n    brtwr as gross_order_po_currency_val,\n    {{ char_yyyymmdd_to_date('agdat') }} as quotation_deadline_date,\n    webaz as gr_processing_time,\n    mwskz as tax_code_id,\n    bonus as settlement_group_1_purchasing,\n    insmk as stock_type,\n    spinf as indicator_update_info,\n    prsdr as price_printout,\n    schpr as indicator_estimated_price,\n    mahnz as number_reminders_expediters,\n    mahn1 as _1st_reminder_exped,\n    mahn2 as _2nd_reminder_exped,\n    mahn3 as _3rd_reminder_exped,\n    uebto as overdelivery_tolerance_limit,\n    uebtk as unltd_overdelivery,\n    untto as underdelivery_tolerance_limit,\n    bwtar as valuation_type_id,\n    bwtty as valuation_category_id,\n    abskz as rejection_indicator,\n    agmem as internal_comment_on_quotation_id,\n    elikz as delivery_completed,\n    erekz as final_invoice_indicator,\n    pstyp as item_category_id,\n    knttp as account_assignment_category_id,\n    kzvbr as consumption_posting,\n    vrtkz as distribut_indicator,\n    twrkz as partial_invoice_indicator,\n    wepos as goods_receipt_indicator,\n    weunb as goods_receipt_non_valuated,\n    repos as invoice_receipt_indicator,\n    webre as gr_based_inv_verif,\n    kzabs as order_acknowledgment_requirement,\n    labnr as order_acknowledgment_number,\n    konnr as outline_agreement_id,\n    ktpnr as princ_agreement_item_id,\n    {{ char_yyyymmdd_to_date('abdat') }} as reconciliation_date,\n    abftz as agreed_cumulative_quantity,\n    etfz1 as firm_zone,\n    etfz2 as trade_off_zone,\n    kzstu as binding_on_mrp,\n    notkz as exclusion_indicator,\n    lmein as base_uom_id,\n    evers as shipping_instruction_id,\n    zwert as oa_target_val,\n    navnw as non_deductible_put_tax_val,\n    abmng as standard_release_order_quantity,\n    {{ char_yyyymmdd_to_date('prdat') }} as price_determination_date,\n    bstyp as purch_doc_category,\n    effwr as effective_item_val,\n    xoblr as item_affects_commitments,\n    kunnr as customer_id,\n    adrnr as address_id,\n    ekkol as condition_group_with_vendor,\n    sktof as no_cash_discount,\n    stafo as update_group_stats_id,\n    plifz as planned_delivery_time_in_days,\n    ntgew as net_weight,\n    gewei as weight_uom_id,\n    txjcd as tax_jurisdiction_id,\n    etdrk as print_relevant,\n    sobkz as special_stock_id,\n    arsnr as settlement_reservation_number,\n    arsps as item_settlem_reser,\n    insnc as not_changeable,\n    ssqss as qm_control_key_id,\n    zgtyp as certificate_type_id,\n    ean11 as ean,\n    bstae as confirmation_control_key_id,\n    revlv as revision_level,\n    geber as fund_id,\n    fistl as funds_center_id,\n    fipos as commitment_item_id,\n    ko_gsber as bus_area_reported_to_partner_id,\n    ko_pargb as partners_assumed_bus_area_id,\n    ko_prctr as profit_center_id,\n    ko_pprctr as partner_profit_center_id,\n    meprf as pricing_date_control,\n    brgew as gross_weight,\n    volum as volume,\n    voleh as volume_uom_id,\n    inco1 as incoterms_id,\n    inco2 as incoterms_part_2,\n    vorab as advance_procurement,\n    kolif as prior_vendor_id,\n    ltsnr as vendor_subrange_id,\n    packno as package_number_id,\n    fplnr as invoicing_plan_number,\n    gnetwr as currently_not_used_val,\n    stapo as item_is_statistical,\n    uebpo as higher_level_item_id,\n    {{ char_yyyymmdd_to_date('lewed') }} as latest_possible_goods_receipt_date,\n    emlif as vendor_id,\n    lblkz as subcontracting_vendor,\n    satnr as cross_plant_cm_id,\n    attyp as material_category,\n    vsart as shipping_type_id,\n    handoverloc as handover_location,\n    kanba as kanban_indicator,\n    adrn2 as number_delivery_address_id,\n    cuobj as internal_object_no,\n    xersy as eval_receipt_sett,\n    {{ char_yyyymmdd_to_date('eildt') }} as gr_b_settlement_from_date,\n    {{ char_yyyymmdd_to_date('drdat') }} as last_transmission_date,\n    druhr as tim,\n    drunr as sequential_number,\n    aktnr as promotion_id,\n    abeln as allocation_table_number_id,\n    abelp as item_number_allocation_table_id,\n    anzpu as number_points,\n    punei as points_uom_id,\n    saiso as season_category_id,\n    saisj as season_year,\n    ebon2 as settlement_group_2,\n    ebon3 as settlement_group_3,\n    ebonf as subseq_settlement,\n    mlmaa as mat_ledger_active,\n    mhdrz as minimum_remaining_shelf_life,\n    anfnr as rfq_number_id,\n    anfps as item_number_rfq_id,\n    kzkfg as origin_configuration,\n    usequ as quota_arrangement_usage_id,\n    umsok as sp_ind_stock_tfr_id,\n    banfn as purchase_requisition_number,\n    bnfpo as item_requisition_id,\n    mtart as material_type_id,\n    uptyp as subitem_category_id,\n    upvor as subitems_exist,\n    kzwi1 as subtotal_1_val,\n    kzwi2 as subtotal_2_val,\n    kzwi3 as subtotal_3_val,\n    kzwi4 as subtotal_4_val,\n    kzwi5 as subtotal_5_val,\n    kzwi6 as subtotal_6_val,\n    sikgr as processing_key_sub_items_id,\n    mfzhi as maximum_cmg_quantity,\n    ffzhi as maximum_cum_pgq,\n    retpo as returns_item,\n    aurel as relevant_to_allocation_table,\n    bsgru as reason_ordering_id,\n    lfret as del_type_f_returns_id,\n    mfrgr as material_freight_group_id,\n    nrfhg as qual_f_freegoodsdis,\n    j_1bnbm as brazilian_ncm_code_id,\n    j_1bmatuse as usage_the_material,\n    j_1bmatorg as origin_the_material,\n    j_1bownpro as produced_in_house,\n    j_1bindust as material_cfop_category,\n    abueb as release_creation_profile_id,\n    {{ char_yyyymmdd_to_date('nlabd') }} as next_forecast_delivery_schedule_transm_date,\n    {{ char_yyyymmdd_to_date('nfabd') }} as next_jit_delivery_schedule_transmission_date,\n    kzbws as special_stock_valuation,\n    bonba as rebate_basis_1_val,\n    fabkz as jit_sched_indicator,\n    j_1aindxp as inflation_index_id,\n    {{ char_yyyymmdd_to_date('j_1aidatep') }} as inflation_index_date,\n    mprof as mfr_part_profile_id,\n    eglkz as final_delivery,\n    kztlf as partial_deliv_item,\n    kzfme as units_measure_usage,\n    rdprf as rounding_profile_id,\n    techs as standard_variant,\n    chg_srv as configuration_changed,\n    chg_fplnr as chg_fplnr,\n    mfrpn as manufacturer_part_number,\n    mfrnr as manufacturer_number_id,\n    emnfr as ext_manufacturer,\n    novet as item_blocked_sd_delivery,\n    afnam as name_requisitioner_requester,\n    tzonrc as time_zone_recipient_location_id,\n    iprkz as period_ind_sled,\n    lebre as service_based_invoice_verification,\n    berid as mrp_area_id,\n    xconditions as xconditions,\n    apoms as apo_as_planning_system,\n    ccomp as stock_transfer_cat,\n    grant_nbr as _grant,\n    fkber as functional_area_id,\n    status as item_status,\n    reslo as issuing_storage_loc_id,\n    kblnr as earmarked_funds_id,\n    kblpos as earmarked_funds_document_item_id,\n    weora as acceptance_at_origin,\n    srv_bas_com as service_based_commitment,\n    prio_urg as requirement_urgency_id,\n    prio_req as requirement_priority_id,\n    empst as receiving_point,\n    diff_invoice as differential_invoicing,\n    trmrisk_relevant as risk_relevancy_in_purchasing,\n    spe_abgru as reason_rejection,\n    spe_crm_so as crm_sales_order_number_tpop_process,\n    spe_crm_so_item as crm_sales_order_item_number_in_tpop_proc,\n    spe_crm_ref_so as crm_ref_order_number_tpop_process,\n    spe_crm_ref_item as crm_reference_item_number_in_tpop_proc,\n    spe_crm_fkrel as billing_relevance_crm,\n    spe_chng_sys as last_changers_system_type,\n    spe_insmk_src as source_stor_loc_stock_type,\n    spe_cq_ctrltype as cq_control_type,\n    spe_cq_nocq as no_transmission_cqs_in_sa_release,\n    reason_code as goods_receipt_reason_code,\n    cqu_sar as cumulative_grs_from_redirected_pos,\n    anzsn as number_serial_numbers,\n    spe_ewm_dtc as ewm_del_tol_chk,\n    exlin as item_number_length,\n    exsnr as external_sorting,\n    ehtyp as external_hierarchy_category_id,\n    retpc as retention_in_percent,\n    dptyp as down_payment_indicator,\n    dppct as down_payment_percentage,\n    dpamt as down_payment_amount_val,\n    {{ char_yyyymmdd_to_date('dpdat') }} as due_down_payment_date,\n    fls_rsto as enh_store_return,\n    ext_rfx_number as document_no_external_doc,\n    ext_rfx_item as item_number_external_document,\n    ext_rfx_system as logical_system_id,\n    srm_contract_id as central_contract,\n    srm_contract_itm as central_contract_item_number,\n    blk_reason_id as blocking_reason_id,\n    blk_reason_txt as blocking_reason_text,\n    itcons as real_time_cons_post,\n    fixmg as delivery_date_and_quantity_fixed,\n    wabwe as gi_based_goods_rcpt,\n    cmpl_dlv_itm as complete_delivery,\n    inco2_l as incoterms_location_1,\n    inco3_l as incoterms_location_2,\n    tc_aut_det as tax_code_automatically_determined_id,\n    manual_tc_reason as manual_tax_code_reason_id,\n    fiscal_incentive as tax_incentive_type_id,\n    tax_subject_st as tax_subject_to_substituicao_tributaria,\n    fiscal_incentive_id as incentive_id,\n    sf_txjcd as origin_jurisd_code_id,\n    _bev1_negen_item as bev1_indicator_item_is_generated,\n    _bev1_nedepfree as bev1_dependent_items_free,\n    _bev1_nestruccat as bev1_structure_category,\n    advcode as advice_code_id,\n    budget_pd as budget_period_id,\n    excpe as acceptance_period,\n    fmfgus_key as us_government_fields,\n    iuid_relevant as iuid_relevant,\n    mrpind as max_retail_price_relevant,\n    oipipeval as val_ind_pipeline,\n    oic_lifnr as oic_lifnr,\n    oic_dcityc as destination_city_code_id,\n    oic_dcounc as destination_county_code_id,\n    oic_dregio as destination_region_id,\n    oic_dland1 as destination_country_id,\n    oic_ocityc as origin_city_code_id,\n    oic_ocounc as origin_county_code_id,\n    oic_oregio as origin_region_id,\n    oic_oland1 as origin_country_id,\n    oic_porgin as tax_origin,\n    oic_pdestn as tax_destination,\n    oic_ptrip as pipeline_trip_number_external,\n    oic_pbatch as pipe_ex_batch_no,\n    oic_mot as mode_transport_id,\n    oic_aorgin as alternate_origin,\n    oic_adestn as alternate_destination,\n    oic_truckn as truck_number,\n    oia_baselo as base_location,\n    oitaxfrom as tax_key_from_id,\n    oihantyp as handling_type_id,\n    oipricie as ed_pricing_external,\n    oitaxto as tax_key_to_id,\n    oitaxcon as excise_duty_tax_val,\n    oitaxgrp as excise_duty_group_id,\n    oioilcon as oil_content_perc,\n    oiinex as ed_pricing_key_id,\n    oiexgnum as exchange_agreement_number_id,\n    oiexgtyp as exchange_type_id,\n    oifeetot as fee_total_val,\n    {{ char_yyyymmdd_to_date('oifeedt') }} as fee_pricing_condition_date,\n    oinetcyc as netting_cycle_id,\n    oiferp as fee_repricing_indicator,\n    oifeech as fee_edit_control,\n    oia_ipmvat as vat_on_int_mat,\n    oia_spltiv as split_invoice_verif,\n    oivath as loccur_amount,\n    oivatf as amount_document_currency_val,\n    oisbrel as s_b_prod_relev_ind,\n    oibasprod as base_product_number_id,\n    oitrknr as tracking_number,\n    oitrkjr as tracking_number_year,\n    oiextnr as external_tracking_number,\n    oiitmnr as tracking_number_item_line,\n    oiftind as final_transfer_indicator,\n    oipriop as price_opt_gains,\n    oitrind as transfer_sign,\n    oighndl as gain_handling,\n    oiumbar as val_type_issuing_loc_id,\n    oitxcon1 as ed_tax_1_val,\n    oitxcon2 as ed_tax_2_val,\n    oitxcon3 as ed_tax_3_val,\n    oitxcon4 as ed_tax_4_val,\n    oitxcon5 as ed_tax_5_val,\n    oitxcon6 as ed_tax_6_val,\n    oid_extbol as external_bill_lading,\n    oid_miscdl as miscellaneous_delivery_number,\n    oimatcyc as material_inv_cycle_id,\n    oiedok as excise_duty_validation_indicator,\n    oiedbal as ed_balance_indicator,\n    oiedbalm as balance_method_ind,\n    oicertf1 as external_license_no,\n    {{ char_yyyymmdd_to_date('oidatfm1') }} as valid_from_date,\n    {{ char_yyyymmdd_to_date('oidatto1') }} as valid_to_date,\n    oih_lictp as license_type_id,\n    oih_licin as internal_license_no_id,\n    oih_lcfol as follow_on_license_id,\n    oih_folqty as _2nd_license_qty,\n    oiedok_gi as ed_validation,\n    oiedbal_gi as excise_duty_balance,\n    oiedbalm_gi as balance_method,\n    oihantyp_gi as oihantyp_gi,\n    oiinex_gi as oiinex_gi,\n    oitaxgrp_gi as oitaxgrp_gi,\n    oicertf1_gi as ext_license_no_gi,\n    {{ char_yyyymmdd_to_date('oidatfm1_gi') }} as oidatfm1_gi,\n    {{ char_yyyymmdd_to_date('oidatto1_gi') }} as oidatto1_gi,\n    oih_lictp_gi as license_type_to_material_sto_id,\n    oih_licin_gi as inter_license_no_to_id,\n    oih_lcfol_gi as oih_lcfol_gi,\n    oih_folqty_gi as oih_folqty_gi,\n    sgt_scat as stock_segment,\n    sgt_rcat as requirement_segment,\n    wrf_charstc1 as characteristic_value_1,\n    wrf_charstc2 as characteristic_value_2,\n    wrf_charstc3 as characteristic_value_3,\n    refsite as reference_site_purchasing,\n    _accgo_is_co_rel as accgo_call_off_applies,\n    serru as type_subcontracting,\n    sernp as serial_number_profile_id,\n    disub_sobkz as special_stock,\n    disub_pspnr as wbs_element_id,\n    disub_kunnr as disub_kunnr,\n    disub_vbeln as sales_document_id,\n    disub_posnr as sd_item_id,\n    disub_owner as owner_stock_id,\n    fsh_season_year as fsh_season_year,\n    fsh_season as season_id,\n    fsh_collection as fashion_collection,\n    fsh_theme as fashion_theme,\n    {{ char_yyyymmdd_to_date('fsh_atp_date') }} as starting_with_atp_date,\n    fsh_vas_rel as vas_relevant,\n    fsh_vas_prnt_id as fsh_vas_prnt_id,\n    fsh_transaction as transaction_number,\n    fsh_item_group as item_group,\n    fsh_item as item_number,\n    fsh_ss as order_scheduling_strategy,\n    fsh_grid_cond_rec as grid_condition_number,\n    fsh_psm_pfm_split as psm_and_pfm_split_id,\n    cnfm_qty as committed_quantity,\n    ref_item as reference_item_id,\n    source_id as origin_profile_id,\n    source_key as key_in_source_system,\n    put_back as put_back_indicator,\n    pol_id as order_list_item_number,\n    cons_order as purchase_order_consignment,\n    hvr_is_deleted as hvr_is_deleted,\n    hvr_change_time as hvr_change_time\nfrom {{ ref('stg_sap__ekpo') }}\nwhere mandt in ('{{ var(\"sales_and_procurement_mandt_var\", [\"800\"]) | join(\"','\") }}')", "doc_blocks": [], "language": "sql", "refs": [{"name": "stg_sap__ekpo", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.sap.char_yyyymmdd_to_date"], "nodes": ["model.sap.stg_sap__ekpo"]}, "compiled_path": "target/compiled/sap/models/sales_and_procurement/star_schema/intermediate/int_sap__purchasing_document_item.sql", "compiled": true, "compiled_code": "\n\nselect\n    mandt as client_id,\n    ebeln as purchasing_document_id,\n    ebelp as purchasing_document_item_id,\n    loekz as deletion_indicator,\n    statu as rfq_status,\n    \n    case\n        when aedat::text ~ '^[0-9]{8}$'\n            and substring(aedat::text, 5, 2)::int between 1 and 12\n            and substring(aedat::text, 7, 2)::int between 1 and 31\n        then to_date(aedat::text, 'YYYYMMDD')\n        else null\n    end\n as last_changed_on_date,\n    txz01 as short_text,\n    matnr as material_id,\n    ematn as material_number_id,\n    bukrs as company_code_id,\n    werks as plant_id,\n    lgort as storage_location_id,\n    bednr as requirement_tracking_number,\n    matkl as material_group_id,\n    infnr as number_purchasing_info_id,\n    idnlf as material_number_used_by_vendor,\n    ktmng as target_quantity,\n    menge as purchase_order_quantity,\n    meins as order_uom_id,\n    bprme as order_price_purchasing_uom_id,\n    bpumz as quantity_conversion,\n    bpumn as bpumn,\n    umrez as equal_to,\n    umren as denominator,\n    netpr as net_order_price_val,\n    peinh as price_unit,\n    netwr as net_order_po_currency_val,\n    brtwr as gross_order_po_currency_val,\n    \n    case\n        when agdat::text ~ '^[0-9]{8}$'\n            and substring(agdat::text, 5, 2)::int between 1 and 12\n            and substring(agdat::text, 7, 2)::int between 1 and 31\n        then to_date(agdat::text, 'YYYYMMDD')\n        else null\n    end\n as quotation_deadline_date,\n    webaz as gr_processing_time,\n    mwskz as tax_code_id,\n    bonus as settlement_group_1_purchasing,\n    insmk as stock_type,\n    spinf as indicator_update_info,\n    prsdr as price_printout,\n    schpr as indicator_estimated_price,\n    mahnz as number_reminders_expediters,\n    mahn1 as _1st_reminder_exped,\n    mahn2 as _2nd_reminder_exped,\n    mahn3 as _3rd_reminder_exped,\n    uebto as overdelivery_tolerance_limit,\n    uebtk as unltd_overdelivery,\n    untto as underdelivery_tolerance_limit,\n    bwtar as valuation_type_id,\n    bwtty as valuation_category_id,\n    abskz as rejection_indicator,\n    agmem as internal_comment_on_quotation_id,\n    elikz as delivery_completed,\n    erekz as final_invoice_indicator,\n    pstyp as item_category_id,\n    knttp as account_assignment_category_id,\n    kzvbr as consumption_posting,\n    vrtkz as distribut_indicator,\n    twrkz as partial_invoice_indicator,\n    wepos as goods_receipt_indicator,\n    weunb as goods_receipt_non_valuated,\n    repos as invoice_receipt_indicator,\n    webre as gr_based_inv_verif,\n    kzabs as order_acknowledgment_requirement,\n    labnr as order_acknowledgment_number,\n    konnr as outline_agreement_id,\n    ktpnr as princ_agreement_item_id,\n    \n    case\n        when abdat::text ~ '^[0-9]{8}$'\n            and substring(abdat::text, 5, 2)::int between 1 and 12\n            and substring(abdat::text, 7, 2)::int between 1 and 31\n        then to_date(abdat::text, 'YYYYMMDD')\n        else null\n    end\n as reconciliation_date,\n    abftz as agreed_cumulative_quantity,\n    etfz1 as firm_zone,\n    etfz2 as trade_off_zone,\n    kzstu as binding_on_mrp,\n    notkz as exclusion_indicator,\n    lmein as base_uom_id,\n    evers as shipping_instruction_id,\n    zwert as oa_target_val,\n    navnw as non_deductible_put_tax_val,\n    abmng as standard_release_order_quantity,\n    \n    case\n        when prdat::text ~ '^[0-9]{8}$'\n            and substring(prdat::text, 5, 2)::int between 1 and 12\n            and substring(prdat::text, 7, 2)::int between 1 and 31\n        then to_date(prdat::text, 'YYYYMMDD')\n        else null\n    end\n as price_determination_date,\n    bstyp as purch_doc_category,\n    effwr as effective_item_val,\n    xoblr as item_affects_commitments,\n    kunnr as customer_id,\n    adrnr as address_id,\n    ekkol as condition_group_with_vendor,\n    sktof as no_cash_discount,\n    stafo as update_group_stats_id,\n    plifz as planned_delivery_time_in_days,\n    ntgew as net_weight,\n    gewei as weight_uom_id,\n    txjcd as tax_jurisdiction_id,\n    etdrk as print_relevant,\n    sobkz as special_stock_id,\n    arsnr as settlement_reservation_number,\n    arsps as item_settlem_reser,\n    insnc as not_changeable,\n    ssqss as qm_control_key_id,\n    zgtyp as certificate_type_id,\n    ean11 as ean,\n    bstae as confirmation_control_key_id,\n    revlv as revision_level,\n    geber as fund_id,\n    fistl as funds_center_id,\n    fipos as commitment_item_id,\n    ko_gsber as bus_area_reported_to_partner_id,\n    ko_pargb as partners_assumed_bus_area_id,\n    ko_prctr as profit_center_id,\n    ko_pprctr as partner_profit_center_id,\n    meprf as pricing_date_control,\n    brgew as gross_weight,\n    volum as volume,\n    voleh as volume_uom_id,\n    inco1 as incoterms_id,\n    inco2 as incoterms_part_2,\n    vorab as advance_procurement,\n    kolif as prior_vendor_id,\n    ltsnr as vendor_subrange_id,\n    packno as package_number_id,\n    fplnr as invoicing_plan_number,\n    gnetwr as currently_not_used_val,\n    stapo as item_is_statistical,\n    uebpo as higher_level_item_id,\n    \n    case\n        when lewed::text ~ '^[0-9]{8}$'\n            and substring(lewed::text, 5, 2)::int between 1 and 12\n            and substring(lewed::text, 7, 2)::int between 1 and 31\n        then to_date(lewed::text, 'YYYYMMDD')\n        else null\n    end\n as latest_possible_goods_receipt_date,\n    emlif as vendor_id,\n    lblkz as subcontracting_vendor,\n    satnr as cross_plant_cm_id,\n    attyp as material_category,\n    vsart as shipping_type_id,\n    handoverloc as handover_location,\n    kanba as kanban_indicator,\n    adrn2 as number_delivery_address_id,\n    cuobj as internal_object_no,\n    xersy as eval_receipt_sett,\n    \n    case\n        when eildt::text ~ '^[0-9]{8}$'\n            and substring(eildt::text, 5, 2)::int between 1 and 12\n            and substring(eildt::text, 7, 2)::int between 1 and 31\n        then to_date(eildt::text, 'YYYYMMDD')\n        else null\n    end\n as gr_b_settlement_from_date,\n    \n    case\n        when drdat::text ~ '^[0-9]{8}$'\n            and substring(drdat::text, 5, 2)::int between 1 and 12\n            and substring(drdat::text, 7, 2)::int between 1 and 31\n        then to_date(drdat::text, 'YYYYMMDD')\n        else null\n    end\n as last_transmission_date,\n    druhr as tim,\n    drunr as sequential_number,\n    aktnr as promotion_id,\n    abeln as allocation_table_number_id,\n    abelp as item_number_allocation_table_id,\n    anzpu as number_points,\n    punei as points_uom_id,\n    saiso as season_category_id,\n    saisj as season_year,\n    ebon2 as settlement_group_2,\n    ebon3 as settlement_group_3,\n    ebonf as subseq_settlement,\n    mlmaa as mat_ledger_active,\n    mhdrz as minimum_remaining_shelf_life,\n    anfnr as rfq_number_id,\n    anfps as item_number_rfq_id,\n    kzkfg as origin_configuration,\n    usequ as quota_arrangement_usage_id,\n    umsok as sp_ind_stock_tfr_id,\n    banfn as purchase_requisition_number,\n    bnfpo as item_requisition_id,\n    mtart as material_type_id,\n    uptyp as subitem_category_id,\n    upvor as subitems_exist,\n    kzwi1 as subtotal_1_val,\n    kzwi2 as subtotal_2_val,\n    kzwi3 as subtotal_3_val,\n    kzwi4 as subtotal_4_val,\n    kzwi5 as subtotal_5_val,\n    kzwi6 as subtotal_6_val,\n    sikgr as processing_key_sub_items_id,\n    mfzhi as maximum_cmg_quantity,\n    ffzhi as maximum_cum_pgq,\n    retpo as returns_item,\n    aurel as relevant_to_allocation_table,\n    bsgru as reason_ordering_id,\n    lfret as del_type_f_returns_id,\n    mfrgr as material_freight_group_id,\n    nrfhg as qual_f_freegoodsdis,\n    j_1bnbm as brazilian_ncm_code_id,\n    j_1bmatuse as usage_the_material,\n    j_1bmatorg as origin_the_material,\n    j_1bownpro as produced_in_house,\n    j_1bindust as material_cfop_category,\n    abueb as release_creation_profile_id,\n    \n    case\n        when nlabd::text ~ '^[0-9]{8}$'\n            and substring(nlabd::text, 5, 2)::int between 1 and 12\n            and substring(nlabd::text, 7, 2)::int between 1 and 31\n        then to_date(nlabd::text, 'YYYYMMDD')\n        else null\n    end\n as next_forecast_delivery_schedule_transm_date,\n    \n    case\n        when nfabd::text ~ '^[0-9]{8}$'\n            and substring(nfabd::text, 5, 2)::int between 1 and 12\n            and substring(nfabd::text, 7, 2)::int between 1 and 31\n        then to_date(nfabd::text, 'YYYYMMDD')\n        else null\n    end\n as next_jit_delivery_schedule_transmission_date,\n    kzbws as special_stock_valuation,\n    bonba as rebate_basis_1_val,\n    fabkz as jit_sched_indicator,\n    j_1aindxp as inflation_index_id,\n    \n    case\n        when j_1aidatep::text ~ '^[0-9]{8}$'\n            and substring(j_1aidatep::text, 5, 2)::int between 1 and 12\n            and substring(j_1aidatep::text, 7, 2)::int between 1 and 31\n        then to_date(j_1aidatep::text, 'YYYYMMDD')\n        else null\n    end\n as inflation_index_date,\n    mprof as mfr_part_profile_id,\n    eglkz as final_delivery,\n    kztlf as partial_deliv_item,\n    kzfme as units_measure_usage,\n    rdprf as rounding_profile_id,\n    techs as standard_variant,\n    chg_srv as configuration_changed,\n    chg_fplnr as chg_fplnr,\n    mfrpn as manufacturer_part_number,\n    mfrnr as manufacturer_number_id,\n    emnfr as ext_manufacturer,\n    novet as item_blocked_sd_delivery,\n    afnam as name_requisitioner_requester,\n    tzonrc as time_zone_recipient_location_id,\n    iprkz as period_ind_sled,\n    lebre as service_based_invoice_verification,\n    berid as mrp_area_id,\n    xconditions as xconditions,\n    apoms as apo_as_planning_system,\n    ccomp as stock_transfer_cat,\n    grant_nbr as _grant,\n    fkber as functional_area_id,\n    status as item_status,\n    reslo as issuing_storage_loc_id,\n    kblnr as earmarked_funds_id,\n    kblpos as earmarked_funds_document_item_id,\n    weora as acceptance_at_origin,\n    srv_bas_com as service_based_commitment,\n    prio_urg as requirement_urgency_id,\n    prio_req as requirement_priority_id,\n    empst as receiving_point,\n    diff_invoice as differential_invoicing,\n    trmrisk_relevant as risk_relevancy_in_purchasing,\n    spe_abgru as reason_rejection,\n    spe_crm_so as crm_sales_order_number_tpop_process,\n    spe_crm_so_item as crm_sales_order_item_number_in_tpop_proc,\n    spe_crm_ref_so as crm_ref_order_number_tpop_process,\n    spe_crm_ref_item as crm_reference_item_number_in_tpop_proc,\n    spe_crm_fkrel as billing_relevance_crm,\n    spe_chng_sys as last_changers_system_type,\n    spe_insmk_src as source_stor_loc_stock_type,\n    spe_cq_ctrltype as cq_control_type,\n    spe_cq_nocq as no_transmission_cqs_in_sa_release,\n    reason_code as goods_receipt_reason_code,\n    cqu_sar as cumulative_grs_from_redirected_pos,\n    anzsn as number_serial_numbers,\n    spe_ewm_dtc as ewm_del_tol_chk,\n    exlin as item_number_length,\n    exsnr as external_sorting,\n    ehtyp as external_hierarchy_category_id,\n    retpc as retention_in_percent,\n    dptyp as down_payment_indicator,\n    dppct as down_payment_percentage,\n    dpamt as down_payment_amount_val,\n    \n    case\n        when dpdat::text ~ '^[0-9]{8}$'\n            and substring(dpdat::text, 5, 2)::int between 1 and 12\n            and substring(dpdat::text, 7, 2)::int between 1 and 31\n        then to_date(dpdat::text, 'YYYYMMDD')\n        else null\n    end\n as due_down_payment_date,\n    fls_rsto as enh_store_return,\n    ext_rfx_number as document_no_external_doc,\n    ext_rfx_item as item_number_external_document,\n    ext_rfx_system as logical_system_id,\n    srm_contract_id as central_contract,\n    srm_contract_itm as central_contract_item_number,\n    blk_reason_id as blocking_reason_id,\n    blk_reason_txt as blocking_reason_text,\n    itcons as real_time_cons_post,\n    fixmg as delivery_date_and_quantity_fixed,\n    wabwe as gi_based_goods_rcpt,\n    cmpl_dlv_itm as complete_delivery,\n    inco2_l as incoterms_location_1,\n    inco3_l as incoterms_location_2,\n    tc_aut_det as tax_code_automatically_determined_id,\n    manual_tc_reason as manual_tax_code_reason_id,\n    fiscal_incentive as tax_incentive_type_id,\n    tax_subject_st as tax_subject_to_substituicao_tributaria,\n    fiscal_incentive_id as incentive_id,\n    sf_txjcd as origin_jurisd_code_id,\n    _bev1_negen_item as bev1_indicator_item_is_generated,\n    _bev1_nedepfree as bev1_dependent_items_free,\n    _bev1_nestruccat as bev1_structure_category,\n    advcode as advice_code_id,\n    budget_pd as budget_period_id,\n    excpe as acceptance_period,\n    fmfgus_key as us_government_fields,\n    iuid_relevant as iuid_relevant,\n    mrpind as max_retail_price_relevant,\n    oipipeval as val_ind_pipeline,\n    oic_lifnr as oic_lifnr,\n    oic_dcityc as destination_city_code_id,\n    oic_dcounc as destination_county_code_id,\n    oic_dregio as destination_region_id,\n    oic_dland1 as destination_country_id,\n    oic_ocityc as origin_city_code_id,\n    oic_ocounc as origin_county_code_id,\n    oic_oregio as origin_region_id,\n    oic_oland1 as origin_country_id,\n    oic_porgin as tax_origin,\n    oic_pdestn as tax_destination,\n    oic_ptrip as pipeline_trip_number_external,\n    oic_pbatch as pipe_ex_batch_no,\n    oic_mot as mode_transport_id,\n    oic_aorgin as alternate_origin,\n    oic_adestn as alternate_destination,\n    oic_truckn as truck_number,\n    oia_baselo as base_location,\n    oitaxfrom as tax_key_from_id,\n    oihantyp as handling_type_id,\n    oipricie as ed_pricing_external,\n    oitaxto as tax_key_to_id,\n    oitaxcon as excise_duty_tax_val,\n    oitaxgrp as excise_duty_group_id,\n    oioilcon as oil_content_perc,\n    oiinex as ed_pricing_key_id,\n    oiexgnum as exchange_agreement_number_id,\n    oiexgtyp as exchange_type_id,\n    oifeetot as fee_total_val,\n    \n    case\n        when oifeedt::text ~ '^[0-9]{8}$'\n            and substring(oifeedt::text, 5, 2)::int between 1 and 12\n            and substring(oifeedt::text, 7, 2)::int between 1 and 31\n        then to_date(oifeedt::text, 'YYYYMMDD')\n        else null\n    end\n as fee_pricing_condition_date,\n    oinetcyc as netting_cycle_id,\n    oiferp as fee_repricing_indicator,\n    oifeech as fee_edit_control,\n    oia_ipmvat as vat_on_int_mat,\n    oia_spltiv as split_invoice_verif,\n    oivath as loccur_amount,\n    oivatf as amount_document_currency_val,\n    oisbrel as s_b_prod_relev_ind,\n    oibasprod as base_product_number_id,\n    oitrknr as tracking_number,\n    oitrkjr as tracking_number_year,\n    oiextnr as external_tracking_number,\n    oiitmnr as tracking_number_item_line,\n    oiftind as final_transfer_indicator,\n    oipriop as price_opt_gains,\n    oitrind as transfer_sign,\n    oighndl as gain_handling,\n    oiumbar as val_type_issuing_loc_id,\n    oitxcon1 as ed_tax_1_val,\n    oitxcon2 as ed_tax_2_val,\n    oitxcon3 as ed_tax_3_val,\n    oitxcon4 as ed_tax_4_val,\n    oitxcon5 as ed_tax_5_val,\n    oitxcon6 as ed_tax_6_val,\n    oid_extbol as external_bill_lading,\n    oid_miscdl as miscellaneous_delivery_number,\n    oimatcyc as material_inv_cycle_id,\n    oiedok as excise_duty_validation_indicator,\n    oiedbal as ed_balance_indicator,\n    oiedbalm as balance_method_ind,\n    oicertf1 as external_license_no,\n    \n    case\n        when oidatfm1::text ~ '^[0-9]{8}$'\n            and substring(oidatfm1::text, 5, 2)::int between 1 and 12\n            and substring(oidatfm1::text, 7, 2)::int between 1 and 31\n        then to_date(oidatfm1::text, 'YYYYMMDD')\n        else null\n    end\n as valid_from_date,\n    \n    case\n        when oidatto1::text ~ '^[0-9]{8}$'\n            and substring(oidatto1::text, 5, 2)::int between 1 and 12\n            and substring(oidatto1::text, 7, 2)::int between 1 and 31\n        then to_date(oidatto1::text, 'YYYYMMDD')\n        else null\n    end\n as valid_to_date,\n    oih_lictp as license_type_id,\n    oih_licin as internal_license_no_id,\n    oih_lcfol as follow_on_license_id,\n    oih_folqty as _2nd_license_qty,\n    oiedok_gi as ed_validation,\n    oiedbal_gi as excise_duty_balance,\n    oiedbalm_gi as balance_method,\n    oihantyp_gi as oihantyp_gi,\n    oiinex_gi as oiinex_gi,\n    oitaxgrp_gi as oitaxgrp_gi,\n    oicertf1_gi as ext_license_no_gi,\n    \n    case\n        when oidatfm1_gi::text ~ '^[0-9]{8}$'\n            and substring(oidatfm1_gi::text, 5, 2)::int between 1 and 12\n            and substring(oidatfm1_gi::text, 7, 2)::int between 1 and 31\n        then to_date(oidatfm1_gi::text, 'YYYYMMDD')\n        else null\n    end\n as oidatfm1_gi,\n    \n    case\n        when oidatto1_gi::text ~ '^[0-9]{8}$'\n            and substring(oidatto1_gi::text, 5, 2)::int between 1 and 12\n            and substring(oidatto1_gi::text, 7, 2)::int between 1 and 31\n        then to_date(oidatto1_gi::text, 'YYYYMMDD')\n        else null\n    end\n as oidatto1_gi,\n    oih_lictp_gi as license_type_to_material_sto_id,\n    oih_licin_gi as inter_license_no_to_id,\n    oih_lcfol_gi as oih_lcfol_gi,\n    oih_folqty_gi as oih_folqty_gi,\n    sgt_scat as stock_segment,\n    sgt_rcat as requirement_segment,\n    wrf_charstc1 as characteristic_value_1,\n    wrf_charstc2 as characteristic_value_2,\n    wrf_charstc3 as characteristic_value_3,\n    refsite as reference_site_purchasing,\n    _accgo_is_co_rel as accgo_call_off_applies,\n    serru as type_subcontracting,\n    sernp as serial_number_profile_id,\n    disub_sobkz as special_stock,\n    disub_pspnr as wbs_element_id,\n    disub_kunnr as disub_kunnr,\n    disub_vbeln as sales_document_id,\n    disub_posnr as sd_item_id,\n    disub_owner as owner_stock_id,\n    fsh_season_year as fsh_season_year,\n    fsh_season as season_id,\n    fsh_collection as fashion_collection,\n    fsh_theme as fashion_theme,\n    \n    case\n        when fsh_atp_date::text ~ '^[0-9]{8}$'\n            and substring(fsh_atp_date::text, 5, 2)::int between 1 and 12\n            and substring(fsh_atp_date::text, 7, 2)::int between 1 and 31\n        then to_date(fsh_atp_date::text, 'YYYYMMDD')\n        else null\n    end\n as starting_with_atp_date,\n    fsh_vas_rel as vas_relevant,\n    fsh_vas_prnt_id as fsh_vas_prnt_id,\n    fsh_transaction as transaction_number,\n    fsh_item_group as item_group,\n    fsh_item as item_number,\n    fsh_ss as order_scheduling_strategy,\n    fsh_grid_cond_rec as grid_condition_number,\n    fsh_psm_pfm_split as psm_and_pfm_split_id,\n    cnfm_qty as committed_quantity,\n    ref_item as reference_item_id,\n    source_id as origin_profile_id,\n    source_key as key_in_source_system,\n    put_back as put_back_indicator,\n    pol_id as order_list_item_number,\n    cons_order as purchase_order_consignment,\n    hvr_is_deleted as hvr_is_deleted,\n    hvr_change_time as hvr_change_time\nfrom \"postgres\".\"public_sap_dev\".\"stg_sap__ekpo\"\nwhere mandt in ('800')", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null, "primary_key": [], "time_spine": null}, "model.sap.int_sap__purchasing_document_overview": {"database": "postgres", "schema": "public_sap_dev", "name": "int_sap__purchasing_document_overview", "resource_type": "model", "package_name": "sap", "path": "sales_and_procurement/star_schema/intermediate/int_sap__purchasing_document_overview.sql", "original_file_path": "models/sales_and_procurement/star_schema/intermediate/int_sap__purchasing_document_overview.sql", "unique_id": "model.sap.int_sap__purchasing_document_overview", "fqn": ["sap", "sales_and_procurement", "star_schema", "intermediate", "int_sap__purchasing_document_overview"], "alias": "int_sap__purchasing_document_overview", "checksum": {"name": "sha256", "checksum": "9330c8af0df5a5e704010fc267be440784a5a48bb433169d2d5afaf1fb4c1102"}, "config": {"enabled": true, "alias": null, "schema": "sap_dev", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "ephemeral", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "freshness": null}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "unrendered_config": {"materialized": "ephemeral", "schema": "sap_{{ var('directed_schema','dev') }}", "enabled": true}, "created_at": 1756850326.7337575, "relation_name": null, "raw_code": "{{ config(enabled=var('sap_using_ekbe', True)) }}\n\nselect\n    purchasing_document_id,\n    purchasing_document_item_id,\n    max(delivery_completed) delivery_completed,\n    max(case when trans_event_type_id = '1' then posting_in_the_document_date else null end) as latest_goods_receive_date,\n    max(case when trans_event_type_id = '2' then posting_in_the_document_date else null end) as latest_invoice_receive_date,\n    sum(case when trans_event_type_id = '1' then case when debitcredit_indicator = 'h' then -1*qty else qty end else null end) as received_quantity,\n    sum(case when trans_event_type_id = '1' then case when debitcredit_indicator = 'h' then -1*loccur_amount else loccur_amount end else null end) as received_value_in_local_curr,\n    sum(case when trans_event_type_id = '1' then case when debitcredit_indicator = 'h' then -1*amount_document_currency_val else amount_document_currency_val end else null end) as received_value_in_doc_curr,\n    sum(case when trans_event_type_id = '2' then case when debitcredit_indicator = 'h' then -1*qty else qty end else null end) as invoice_quantity, \n    sum(case when trans_event_type_id = '2' then case when debitcredit_indicator = 'h' then -1*voice_val else voice_val end else null end) as invoice_value_local_curr,\n    sum(case when trans_event_type_id = '2' then case when debitcredit_indicator = 'h' then -1*voice_fc_val else voice_fc_val end else null end) as invoice_value_foreign_curr,\n    max(hvr_change_time) hvr_change_time,\n    max(hvr_is_deleted) hvr_is_deleted \nfrom {{ ref('int_sap__purchasing_document_history') }}\ngroup by 1,2", "doc_blocks": [], "language": "sql", "refs": [{"name": "int_sap__purchasing_document_history", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": [], "nodes": ["model.sap.int_sap__purchasing_document_history"]}, "compiled_path": "target/compiled/sap/models/sales_and_procurement/star_schema/intermediate/int_sap__purchasing_document_overview.sql", "compiled": true, "compiled_code": "\n\nwith __dbt__cte__int_sap__purchasing_document_history as (\n\n\nselect\n    mandt as client_id,\n    ebeln as purchasing_document_id,\n    ebelp as purchasing_document_item_id,\n    zekkn as seq_no_account_assgt_id,\n    vgabe as trans_event_type_id,\n    gjahr as material_document_year_id,\n    belnr as material_document_id,\n    buzei as item_in_material_document_id,\n    bewtp as purchase_order_history_category_id,\n    bwart as movement_type_id,\n    \n    case\n        when budat::text ~ '^[0-9]{8}$'\n            and substring(budat::text, 5, 2)::int between 1 and 12\n            and substring(budat::text, 7, 2)::int between 1 and 31\n        then to_date(budat::text, 'YYYYMMDD')\n        else null\n    end\n as posting_in_the_document_date,\n    menge as qty,\n    bpmng as quantity_in_opun,\n    dmbtr as loccur_amount,\n    wrbtr as amount_document_currency_val,\n    waers as currency_id,\n    arewr as gr_ir_clearg_local_currency_val,\n    wesbs as gr_blck_stock_in_oun,\n    bpwes as gr_blocked_stck_opun,\n    shkzg as debitcredit_indicator,\n    bwtar as valuation_type_id,\n    elikz as delivery_completed,\n    xblnr as reference_document_number,\n    lfgja as fisc_year_ref_doc,\n    lfbnr as reference_document,\n    lfpos as item_reference_document,\n    grund as reason_movement_id,\n    \n    case\n        when cpudt::text ~ '^[0-9]{8}$'\n            and substring(cpudt::text, 5, 2)::int between 1 and 12\n            and substring(cpudt::text, 7, 2)::int between 1 and 31\n        then to_date(cpudt::text, 'YYYYMMDD')\n        else null\n    end\n as entry_date,\n    cputm as entry_tim,\n    reewr as voice_val,\n    evere as compliance_with_shipping_instr_id,\n    refwr as voice_fc_val,\n    matnr as material_id,\n    werks as plant_id,\n    xwsbr as revgr_despite_ir,\n    etens as sequential_number,\n    knumv as document_condition_no,\n    mwskz as tax_code_id,\n    lsmng as del_note_quantity,\n    lsmeh as delivery_note_uom_id,\n    ematn as material_number_id,\n    areww as gr_ir_clearg_fc_val,\n    hswae as local_currency_key_id,\n    bamng as bamng,\n    charg as batch_id,\n    \n    case\n        when bldat::text ~ '^[0-9]{8}$'\n            and substring(bldat::text, 5, 2)::int between 1 and 12\n            and substring(bldat::text, 7, 2)::int between 1 and 31\n        then to_date(bldat::text, 'YYYYMMDD')\n        else null\n    end\n as document_in_document_date,\n    xwoff as calculation_val_open,\n    xunpl as unplanned_acct_assgmt_inv_verification,\n    ernam as created_by,\n    srvpos as service_number_id,\n    packno as package_number_service_id,\n    introw as line_number_service,\n    bekkn as number_po_account_assignment,\n    lemin as returns_indicator,\n    arewb as arewb,\n    rewrb as voice_amount_po_currency_val,\n    saprl as sap_release,\n    menge_pop as menge_pop,\n    bpmng_pop as bpmng_pop,\n    dmbtr_pop as dmbtr_pop,\n    wrbtr_pop as wrbtr_pop,\n    wesbb as val_gr_blocked_stock_in_oun,\n    bpweb as valuated_gr_blocked_stock_in_opun,\n    weora as acceptance_at_origin,\n    arewr_pop as arewr_pop,\n    kudif as exchange_rate_difference_amount_val,\n    retamt_fc as retention_document_currency_val,\n    retamt_lc as retention_company_code_currency_val,\n    retamtp_fc as posted_retention_document_currency_val,\n    retamtp_lc as posted_security_retention_cc_crcy_val,\n    xmacc as multiple_account_assignment,\n    wkurs as exchange_rate,\n    inv_item_origin as origin_an_invoice_item,\n    vbeln_st as delivery_id,\n    vbelp_st as delivery_item_id,\n    sgt_scat as stock_segment,\n    et_upd as slqupd,\n    j_sc_die_comp_f as depreciation_completion_flag,\n    fsh_season_year as season_year,\n    fsh_season as season_id,\n    fsh_collection as fashion_collection,\n    fsh_theme as fashion_theme,\n    wrf_charstc1 as characteristic_value_1,\n    wrf_charstc2 as characteristic_value_2,\n    wrf_charstc3 as characteristic_value_3,\n    hvr_is_deleted as hvr_is_deleted,\n    hvr_change_time as hvr_change_time\nfrom \"postgres\".\"public_sap_dev\".\"stg_sap__ekbe\"\nwhere mandt in ('800')\n) select\n    purchasing_document_id,\n    purchasing_document_item_id,\n    max(delivery_completed) delivery_completed,\n    max(case when trans_event_type_id = '1' then posting_in_the_document_date else null end) as latest_goods_receive_date,\n    max(case when trans_event_type_id = '2' then posting_in_the_document_date else null end) as latest_invoice_receive_date,\n    sum(case when trans_event_type_id = '1' then case when debitcredit_indicator = 'h' then -1*qty else qty end else null end) as received_quantity,\n    sum(case when trans_event_type_id = '1' then case when debitcredit_indicator = 'h' then -1*loccur_amount else loccur_amount end else null end) as received_value_in_local_curr,\n    sum(case when trans_event_type_id = '1' then case when debitcredit_indicator = 'h' then -1*amount_document_currency_val else amount_document_currency_val end else null end) as received_value_in_doc_curr,\n    sum(case when trans_event_type_id = '2' then case when debitcredit_indicator = 'h' then -1*qty else qty end else null end) as invoice_quantity, \n    sum(case when trans_event_type_id = '2' then case when debitcredit_indicator = 'h' then -1*voice_val else voice_val end else null end) as invoice_value_local_curr,\n    sum(case when trans_event_type_id = '2' then case when debitcredit_indicator = 'h' then -1*voice_fc_val else voice_fc_val end else null end) as invoice_value_foreign_curr,\n    max(hvr_change_time) hvr_change_time,\n    max(hvr_is_deleted) hvr_is_deleted \nfrom __dbt__cte__int_sap__purchasing_document_history\ngroup by 1,2", "extra_ctes_injected": true, "extra_ctes": [{"id": "model.sap.int_sap__purchasing_document_history", "sql": " __dbt__cte__int_sap__purchasing_document_history as (\n\n\nselect\n    mandt as client_id,\n    ebeln as purchasing_document_id,\n    ebelp as purchasing_document_item_id,\n    zekkn as seq_no_account_assgt_id,\n    vgabe as trans_event_type_id,\n    gjahr as material_document_year_id,\n    belnr as material_document_id,\n    buzei as item_in_material_document_id,\n    bewtp as purchase_order_history_category_id,\n    bwart as movement_type_id,\n    \n    case\n        when budat::text ~ '^[0-9]{8}$'\n            and substring(budat::text, 5, 2)::int between 1 and 12\n            and substring(budat::text, 7, 2)::int between 1 and 31\n        then to_date(budat::text, 'YYYYMMDD')\n        else null\n    end\n as posting_in_the_document_date,\n    menge as qty,\n    bpmng as quantity_in_opun,\n    dmbtr as loccur_amount,\n    wrbtr as amount_document_currency_val,\n    waers as currency_id,\n    arewr as gr_ir_clearg_local_currency_val,\n    wesbs as gr_blck_stock_in_oun,\n    bpwes as gr_blocked_stck_opun,\n    shkzg as debitcredit_indicator,\n    bwtar as valuation_type_id,\n    elikz as delivery_completed,\n    xblnr as reference_document_number,\n    lfgja as fisc_year_ref_doc,\n    lfbnr as reference_document,\n    lfpos as item_reference_document,\n    grund as reason_movement_id,\n    \n    case\n        when cpudt::text ~ '^[0-9]{8}$'\n            and substring(cpudt::text, 5, 2)::int between 1 and 12\n            and substring(cpudt::text, 7, 2)::int between 1 and 31\n        then to_date(cpudt::text, 'YYYYMMDD')\n        else null\n    end\n as entry_date,\n    cputm as entry_tim,\n    reewr as voice_val,\n    evere as compliance_with_shipping_instr_id,\n    refwr as voice_fc_val,\n    matnr as material_id,\n    werks as plant_id,\n    xwsbr as revgr_despite_ir,\n    etens as sequential_number,\n    knumv as document_condition_no,\n    mwskz as tax_code_id,\n    lsmng as del_note_quantity,\n    lsmeh as delivery_note_uom_id,\n    ematn as material_number_id,\n    areww as gr_ir_clearg_fc_val,\n    hswae as local_currency_key_id,\n    bamng as bamng,\n    charg as batch_id,\n    \n    case\n        when bldat::text ~ '^[0-9]{8}$'\n            and substring(bldat::text, 5, 2)::int between 1 and 12\n            and substring(bldat::text, 7, 2)::int between 1 and 31\n        then to_date(bldat::text, 'YYYYMMDD')\n        else null\n    end\n as document_in_document_date,\n    xwoff as calculation_val_open,\n    xunpl as unplanned_acct_assgmt_inv_verification,\n    ernam as created_by,\n    srvpos as service_number_id,\n    packno as package_number_service_id,\n    introw as line_number_service,\n    bekkn as number_po_account_assignment,\n    lemin as returns_indicator,\n    arewb as arewb,\n    rewrb as voice_amount_po_currency_val,\n    saprl as sap_release,\n    menge_pop as menge_pop,\n    bpmng_pop as bpmng_pop,\n    dmbtr_pop as dmbtr_pop,\n    wrbtr_pop as wrbtr_pop,\n    wesbb as val_gr_blocked_stock_in_oun,\n    bpweb as valuated_gr_blocked_stock_in_opun,\n    weora as acceptance_at_origin,\n    arewr_pop as arewr_pop,\n    kudif as exchange_rate_difference_amount_val,\n    retamt_fc as retention_document_currency_val,\n    retamt_lc as retention_company_code_currency_val,\n    retamtp_fc as posted_retention_document_currency_val,\n    retamtp_lc as posted_security_retention_cc_crcy_val,\n    xmacc as multiple_account_assignment,\n    wkurs as exchange_rate,\n    inv_item_origin as origin_an_invoice_item,\n    vbeln_st as delivery_id,\n    vbelp_st as delivery_item_id,\n    sgt_scat as stock_segment,\n    et_upd as slqupd,\n    j_sc_die_comp_f as depreciation_completion_flag,\n    fsh_season_year as season_year,\n    fsh_season as season_id,\n    fsh_collection as fashion_collection,\n    fsh_theme as fashion_theme,\n    wrf_charstc1 as characteristic_value_1,\n    wrf_charstc2 as characteristic_value_2,\n    wrf_charstc3 as characteristic_value_3,\n    hvr_is_deleted as hvr_is_deleted,\n    hvr_change_time as hvr_change_time\nfrom \"postgres\".\"public_sap_dev\".\"stg_sap__ekbe\"\nwhere mandt in ('800')\n)"}], "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null, "primary_key": [], "time_spine": null}, "model.sap.int_sap__material_type": {"database": "postgres", "schema": "public_sap_dev", "name": "int_sap__material_type", "resource_type": "model", "package_name": "sap", "path": "sales_and_procurement/star_schema/intermediate/int_sap__material_type.sql", "original_file_path": "models/sales_and_procurement/star_schema/intermediate/int_sap__material_type.sql", "unique_id": "model.sap.int_sap__material_type", "fqn": ["sap", "sales_and_procurement", "star_schema", "intermediate", "int_sap__material_type"], "alias": "int_sap__material_type", "checksum": {"name": "sha256", "checksum": "4756b1035540bf18cc7a40ace344cec0e5471bac813742d26b197cdeb10e8093"}, "config": {"enabled": true, "alias": null, "schema": "sap_dev", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "ephemeral", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "freshness": null}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "unrendered_config": {"materialized": "ephemeral", "schema": "sap_{{ var('directed_schema','dev') }}", "enabled": true}, "created_at": 1756850326.7416651, "relation_name": null, "raw_code": "{{ config(enabled=var('sap_using_t134', True)) }}\n\nwith t134 as (\n    select *\n    from {{ ref('stg_sap__t134') }}\n\n{% set using_t134t = var('sap_using_t134t', True) %}\n{% if using_t134t %}\n), t134t as (\n    select *\n    from {{ ref('stg_sap__t134t') }}\n{% endif %}\n\n), final as (\n    select\n        t134.mandt as client_id,\n        t134.mtart as material_type_id,\n        t134.mtref as reference_material_type,\n        t134.mbref as sref_material_type,\n        t134.flref as field_reference_id,\n        t134.numki as number_range,\n        t134.numke as numke,\n        t134.envop as external_no_assignment_w_o_check,\n        t134.bsext as external_purchase_orders_allowed,\n        t134.bsint as internal_purchase_orders_allowed,\n        t134.pstat as maintenance_status,\n        t134.kkref as account_category_reference_id,\n        t134.vprsv as price_control,\n        t134.kzvpr as price_control_mandatory,\n        t134.vmtpo as item_category_group_id,\n        t134.ekalr as with_qty_structure,\n        t134.kzgrp as grouping_indicator,\n        t134.kzkfg as configurable_material,\n        t134.begru as authorization_group_id,\n        t134.kzprc as material_f_process,\n        t134.kzpip as pipeline_handling_mandatory,\n        t134.prdru as print_price,\n        t134.aranz as display_material,\n        t134.wmakg as wmakg,\n        t134.izust as initial_status_new_batch,\n        t134.ardel as time_till_deleted,\n        t134.kzmpn as manufacturer_part,\n        t134.mstae as cross_plant_material_status_id,\n        t134.cchis as history_reqmt,\n        t134.ctype as class_type_id,\n        t134.class as class_number,\n        t134.chneu as create_new_batch,\n        t134.vtype as version_category_id,\n        t134.vnumki as vnumki,\n        t134.vnumke as vnumke,\n        t134.kzrac as mand_rp_logistics,\n        t134.hvr_is_deleted as hvr_is_deleted,\n        t134.hvr_change_time as hvr_change_time,\n        {{ 't134t.mtbez ' if using_t134t else 'cast(null as ' ~ dbt.type_string() ~ ')' }} as description_material_type\n\n    from t134\n\n    {% if using_t134t %}\n    left join t134t\n        on t134.mandt = t134t.mandt\n        and t134.mtart = t134t.mtart\n        and t134t.spras = 'e'\n    {% endif %}\n\n    where t134.mandt in ('{{ var(\"sales_and_procurement_mandt_var\", [\"800\"]) | join(\"','\") }}')\n)\n\nselect *\nfrom final", "doc_blocks": [], "language": "sql", "refs": [{"name": "stg_sap__t134", "package": null, "version": null}, {"name": "stg_sap__t134t", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": [], "nodes": ["model.sap.stg_sap__t134", "model.sap.stg_sap__t134t"]}, "compiled_path": "target/compiled/sap/models/sales_and_procurement/star_schema/intermediate/int_sap__material_type.sql", "compiled": true, "compiled_code": "\n\nwith t134 as (\n    select *\n    from \"postgres\".\"public_sap_dev\".\"stg_sap__t134\"\n\n\n\n), t134t as (\n    select *\n    from \"postgres\".\"public_sap_dev\".\"stg_sap__t134t\"\n\n\n), final as (\n    select\n        t134.mandt as client_id,\n        t134.mtart as material_type_id,\n        t134.mtref as reference_material_type,\n        t134.mbref as sref_material_type,\n        t134.flref as field_reference_id,\n        t134.numki as number_range,\n        t134.numke as numke,\n        t134.envop as external_no_assignment_w_o_check,\n        t134.bsext as external_purchase_orders_allowed,\n        t134.bsint as internal_purchase_orders_allowed,\n        t134.pstat as maintenance_status,\n        t134.kkref as account_category_reference_id,\n        t134.vprsv as price_control,\n        t134.kzvpr as price_control_mandatory,\n        t134.vmtpo as item_category_group_id,\n        t134.ekalr as with_qty_structure,\n        t134.kzgrp as grouping_indicator,\n        t134.kzkfg as configurable_material,\n        t134.begru as authorization_group_id,\n        t134.kzprc as material_f_process,\n        t134.kzpip as pipeline_handling_mandatory,\n        t134.prdru as print_price,\n        t134.aranz as display_material,\n        t134.wmakg as wmakg,\n        t134.izust as initial_status_new_batch,\n        t134.ardel as time_till_deleted,\n        t134.kzmpn as manufacturer_part,\n        t134.mstae as cross_plant_material_status_id,\n        t134.cchis as history_reqmt,\n        t134.ctype as class_type_id,\n        t134.class as class_number,\n        t134.chneu as create_new_batch,\n        t134.vtype as version_category_id,\n        t134.vnumki as vnumki,\n        t134.vnumke as vnumke,\n        t134.kzrac as mand_rp_logistics,\n        t134.hvr_is_deleted as hvr_is_deleted,\n        t134.hvr_change_time as hvr_change_time,\n        t134t.mtbez  as description_material_type\n\n    from t134\n\n    \n    left join t134t\n        on t134.mandt = t134t.mandt\n        and t134.mtart = t134t.mtart\n        and t134t.spras = 'e'\n    \n\n    where t134.mandt in ('800')\n)\n\nselect *\nfrom final", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null, "primary_key": [], "time_spine": null}, "model.sap.int_sap__purchasing_document_history": {"database": "postgres", "schema": "public_sap_dev", "name": "int_sap__purchasing_document_history", "resource_type": "model", "package_name": "sap", "path": "sales_and_procurement/star_schema/intermediate/int_sap__purchasing_document_history.sql", "original_file_path": "models/sales_and_procurement/star_schema/intermediate/int_sap__purchasing_document_history.sql", "unique_id": "model.sap.int_sap__purchasing_document_history", "fqn": ["sap", "sales_and_procurement", "star_schema", "intermediate", "int_sap__purchasing_document_history"], "alias": "int_sap__purchasing_document_history", "checksum": {"name": "sha256", "checksum": "fe7b57d6ebb13eec966e7bb3ca8ebc75da32b9f394363d6513823ad237c29f6c"}, "config": {"enabled": true, "alias": null, "schema": "sap_dev", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "ephemeral", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "freshness": null}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "unrendered_config": {"materialized": "ephemeral", "schema": "sap_{{ var('directed_schema','dev') }}", "enabled": true}, "created_at": 1756850326.753172, "relation_name": null, "raw_code": "{{ config(enabled=var('sap_using_ekbe', True)) }}\n\nselect\n    mandt as client_id,\n    ebeln as purchasing_document_id,\n    ebelp as purchasing_document_item_id,\n    zekkn as seq_no_account_assgt_id,\n    vgabe as trans_event_type_id,\n    gjahr as material_document_year_id,\n    belnr as material_document_id,\n    buzei as item_in_material_document_id,\n    bewtp as purchase_order_history_category_id,\n    bwart as movement_type_id,\n    {{ char_yyyymmdd_to_date('budat') }} as posting_in_the_document_date,\n    menge as qty,\n    bpmng as quantity_in_opun,\n    dmbtr as loccur_amount,\n    wrbtr as amount_document_currency_val,\n    waers as currency_id,\n    arewr as gr_ir_clearg_local_currency_val,\n    wesbs as gr_blck_stock_in_oun,\n    bpwes as gr_blocked_stck_opun,\n    shkzg as debitcredit_indicator,\n    bwtar as valuation_type_id,\n    elikz as delivery_completed,\n    xblnr as reference_document_number,\n    lfgja as fisc_year_ref_doc,\n    lfbnr as reference_document,\n    lfpos as item_reference_document,\n    grund as reason_movement_id,\n    {{ char_yyyymmdd_to_date('cpudt') }} as entry_date,\n    cputm as entry_tim,\n    reewr as voice_val,\n    evere as compliance_with_shipping_instr_id,\n    refwr as voice_fc_val,\n    matnr as material_id,\n    werks as plant_id,\n    xwsbr as revgr_despite_ir,\n    etens as sequential_number,\n    knumv as document_condition_no,\n    mwskz as tax_code_id,\n    lsmng as del_note_quantity,\n    lsmeh as delivery_note_uom_id,\n    ematn as material_number_id,\n    areww as gr_ir_clearg_fc_val,\n    hswae as local_currency_key_id,\n    bamng as bamng,\n    charg as batch_id,\n    {{ char_yyyymmdd_to_date('bldat') }} as document_in_document_date,\n    xwoff as calculation_val_open,\n    xunpl as unplanned_acct_assgmt_inv_verification,\n    ernam as created_by,\n    srvpos as service_number_id,\n    packno as package_number_service_id,\n    introw as line_number_service,\n    bekkn as number_po_account_assignment,\n    lemin as returns_indicator,\n    arewb as arewb,\n    rewrb as voice_amount_po_currency_val,\n    saprl as sap_release,\n    menge_pop as menge_pop,\n    bpmng_pop as bpmng_pop,\n    dmbtr_pop as dmbtr_pop,\n    wrbtr_pop as wrbtr_pop,\n    wesbb as val_gr_blocked_stock_in_oun,\n    bpweb as valuated_gr_blocked_stock_in_opun,\n    weora as acceptance_at_origin,\n    arewr_pop as arewr_pop,\n    kudif as exchange_rate_difference_amount_val,\n    retamt_fc as retention_document_currency_val,\n    retamt_lc as retention_company_code_currency_val,\n    retamtp_fc as posted_retention_document_currency_val,\n    retamtp_lc as posted_security_retention_cc_crcy_val,\n    xmacc as multiple_account_assignment,\n    wkurs as exchange_rate,\n    inv_item_origin as origin_an_invoice_item,\n    vbeln_st as delivery_id,\n    vbelp_st as delivery_item_id,\n    sgt_scat as stock_segment,\n    et_upd as slqupd,\n    j_sc_die_comp_f as depreciation_completion_flag,\n    fsh_season_year as season_year,\n    fsh_season as season_id,\n    fsh_collection as fashion_collection,\n    fsh_theme as fashion_theme,\n    wrf_charstc1 as characteristic_value_1,\n    wrf_charstc2 as characteristic_value_2,\n    wrf_charstc3 as characteristic_value_3,\n    hvr_is_deleted as hvr_is_deleted,\n    hvr_change_time as hvr_change_time\nfrom {{ ref('stg_sap__ekbe') }}\nwhere mandt in ('{{ var(\"sales_and_procurement_mandt_var\", [\"800\"]) | join(\"','\") }}')", "doc_blocks": [], "language": "sql", "refs": [{"name": "stg_sap__ekbe", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.sap.char_yyyymmdd_to_date"], "nodes": ["model.sap.stg_sap__ekbe"]}, "compiled_path": "target/compiled/sap/models/sales_and_procurement/star_schema/intermediate/int_sap__purchasing_document_history.sql", "compiled": true, "compiled_code": "\n\nselect\n    mandt as client_id,\n    ebeln as purchasing_document_id,\n    ebelp as purchasing_document_item_id,\n    zekkn as seq_no_account_assgt_id,\n    vgabe as trans_event_type_id,\n    gjahr as material_document_year_id,\n    belnr as material_document_id,\n    buzei as item_in_material_document_id,\n    bewtp as purchase_order_history_category_id,\n    bwart as movement_type_id,\n    \n    case\n        when budat::text ~ '^[0-9]{8}$'\n            and substring(budat::text, 5, 2)::int between 1 and 12\n            and substring(budat::text, 7, 2)::int between 1 and 31\n        then to_date(budat::text, 'YYYYMMDD')\n        else null\n    end\n as posting_in_the_document_date,\n    menge as qty,\n    bpmng as quantity_in_opun,\n    dmbtr as loccur_amount,\n    wrbtr as amount_document_currency_val,\n    waers as currency_id,\n    arewr as gr_ir_clearg_local_currency_val,\n    wesbs as gr_blck_stock_in_oun,\n    bpwes as gr_blocked_stck_opun,\n    shkzg as debitcredit_indicator,\n    bwtar as valuation_type_id,\n    elikz as delivery_completed,\n    xblnr as reference_document_number,\n    lfgja as fisc_year_ref_doc,\n    lfbnr as reference_document,\n    lfpos as item_reference_document,\n    grund as reason_movement_id,\n    \n    case\n        when cpudt::text ~ '^[0-9]{8}$'\n            and substring(cpudt::text, 5, 2)::int between 1 and 12\n            and substring(cpudt::text, 7, 2)::int between 1 and 31\n        then to_date(cpudt::text, 'YYYYMMDD')\n        else null\n    end\n as entry_date,\n    cputm as entry_tim,\n    reewr as voice_val,\n    evere as compliance_with_shipping_instr_id,\n    refwr as voice_fc_val,\n    matnr as material_id,\n    werks as plant_id,\n    xwsbr as revgr_despite_ir,\n    etens as sequential_number,\n    knumv as document_condition_no,\n    mwskz as tax_code_id,\n    lsmng as del_note_quantity,\n    lsmeh as delivery_note_uom_id,\n    ematn as material_number_id,\n    areww as gr_ir_clearg_fc_val,\n    hswae as local_currency_key_id,\n    bamng as bamng,\n    charg as batch_id,\n    \n    case\n        when bldat::text ~ '^[0-9]{8}$'\n            and substring(bldat::text, 5, 2)::int between 1 and 12\n            and substring(bldat::text, 7, 2)::int between 1 and 31\n        then to_date(bldat::text, 'YYYYMMDD')\n        else null\n    end\n as document_in_document_date,\n    xwoff as calculation_val_open,\n    xunpl as unplanned_acct_assgmt_inv_verification,\n    ernam as created_by,\n    srvpos as service_number_id,\n    packno as package_number_service_id,\n    introw as line_number_service,\n    bekkn as number_po_account_assignment,\n    lemin as returns_indicator,\n    arewb as arewb,\n    rewrb as voice_amount_po_currency_val,\n    saprl as sap_release,\n    menge_pop as menge_pop,\n    bpmng_pop as bpmng_pop,\n    dmbtr_pop as dmbtr_pop,\n    wrbtr_pop as wrbtr_pop,\n    wesbb as val_gr_blocked_stock_in_oun,\n    bpweb as valuated_gr_blocked_stock_in_opun,\n    weora as acceptance_at_origin,\n    arewr_pop as arewr_pop,\n    kudif as exchange_rate_difference_amount_val,\n    retamt_fc as retention_document_currency_val,\n    retamt_lc as retention_company_code_currency_val,\n    retamtp_fc as posted_retention_document_currency_val,\n    retamtp_lc as posted_security_retention_cc_crcy_val,\n    xmacc as multiple_account_assignment,\n    wkurs as exchange_rate,\n    inv_item_origin as origin_an_invoice_item,\n    vbeln_st as delivery_id,\n    vbelp_st as delivery_item_id,\n    sgt_scat as stock_segment,\n    et_upd as slqupd,\n    j_sc_die_comp_f as depreciation_completion_flag,\n    fsh_season_year as season_year,\n    fsh_season as season_id,\n    fsh_collection as fashion_collection,\n    fsh_theme as fashion_theme,\n    wrf_charstc1 as characteristic_value_1,\n    wrf_charstc2 as characteristic_value_2,\n    wrf_charstc3 as characteristic_value_3,\n    hvr_is_deleted as hvr_is_deleted,\n    hvr_change_time as hvr_change_time\nfrom \"postgres\".\"public_sap_dev\".\"stg_sap__ekbe\"\nwhere mandt in ('800')", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null, "primary_key": [], "time_spine": null}, "model.sap.int_sap__sales_document_header_status": {"database": "postgres", "schema": "public_sap_dev", "name": "int_sap__sales_document_header_status", "resource_type": "model", "package_name": "sap", "path": "sales_and_procurement/star_schema/intermediate/int_sap__sales_document_header_status.sql", "original_file_path": "models/sales_and_procurement/star_schema/intermediate/int_sap__sales_document_header_status.sql", "unique_id": "model.sap.int_sap__sales_document_header_status", "fqn": ["sap", "sales_and_procurement", "star_schema", "intermediate", "int_sap__sales_document_header_status"], "alias": "int_sap__sales_document_header_status", "checksum": {"name": "sha256", "checksum": "6275d5c2f7cea105cd09c73d8b81fc59bbb83e7835c8be27876172de995dc242"}, "config": {"enabled": true, "alias": null, "schema": "sap_dev", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "ephemeral", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "freshness": null}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "unrendered_config": {"materialized": "ephemeral", "schema": "sap_{{ var('directed_schema','dev') }}", "enabled": true}, "created_at": 1756850326.7617571, "relation_name": null, "raw_code": "{{ config(enabled=var('sap_using_vbuk', True)) }}\n\nselect\n    mandt as client_id,\n    vbeln as sales_document_id,\n    rfstk as reference_document_header_status,\n    rfgsk as total_reference_stat,\n    bestk as confirmation_status,\n    lfstk as delivery_status,\n    lfgsk as overall_dlv_status,\n    wbstk as total_goods_movement_status,\n    fkstk as billing_status,\n    fksak as bill_stat_order_rel,\n    buchk as posting_status,\n    abstk as rejection_status,\n    gbstk as overall_status,\n    kostk as overall_picking_putaway_status,\n    lvstk as overall_wm_status,\n    uvals as item,\n    uvvls as item_delivery,\n    uvfas as item_billing,\n    uvall as header,\n    uvvlk as header_delivery,\n    uvfak as header_billing,\n    uvprs as pricing,\n    vbtyp as sd_document_category,\n    vbobj as sd_document_object,\n    {{ char_yyyymmdd_to_date('aedat') }} as changed_date,\n    fkivk as totals_status,\n    relik as inv_list_status,\n    uvk01 as header_reserves_1,\n    uvk02 as header_reserves_2,\n    uvk03 as header_reserves_3,\n    uvk04 as header_reserves_4,\n    uvk05 as header_reserves_5,\n    uvs01 as total_reserves_1,\n    uvs02 as total_reserves_2,\n    uvs03 as total_reserves_3,\n    uvs04 as total_reserves_4,\n    uvs05 as total_reserves_5,\n    pkstk as packing_status,\n    cmpsa as static_check,\n    cmpsb as dynamic_check,\n    cmpsc as maximum_value,\n    cmpsd as terms_payment,\n    cmpse as customer_review_date,\n    cmpsf as overdue_open_items,\n    cmpsg as oldest_open_items,\n    cmpsh as max_dunning_level,\n    cmpsi as financial_document,\n    cmpsj as expt_cred_insurance,\n    cmpsk as payment_card,\n    cmpsl as reserve,\n    cmps0 as cmps0,\n    cmps1 as cmps1,\n    cmps2 as cmps2,\n    cmgst as overall_status_credit_checks,\n    trsta as transportation_planning_status,\n    koquk as status_pick_confirmation,\n    costa as confirmation_status_ale,\n    saprl as sap_release,\n    uvpas as it_packaging,\n    uvpis as it_picking_putaway,\n    uvwas as item_goods_mvmt,\n    uvpak as head_packaging,\n    uvpik as head_picking_putaway,\n    uvwak as head_goods_mvmt,\n    uvgek as unused,\n    cmpsm as credit_check_is_obsolete,\n    dcstk as delay_status,\n    vestk as handling_unit_placed_in_stock,\n    vlstk as status_decent_whse,\n    rrsta as revenue_determination_status,\n    block as block,\n    fsstk as overall_billing_block_status,\n    lsstk as overall_delivery_block_status,\n    spstg as overall_blocked_status,\n    pdstk as pod_status_on_header_level,\n    fmstk as status_funds_management,\n    manek as manual_completion_contract,\n    spe_tmpid as temporary_inbound_delivery,\n    hdall as on_hold,\n    hdals as pos_hold,\n    cmps_cm as sap_credit_management,\n    cmps_te as credit_mgmt_te_status,\n    vbtyp_ext as doc_cat_extension,\n    fsh_ar_stat_hdr as arun_status_at_header,\n    hvr_is_deleted as hvr_is_deleted,\n    hvr_change_time as hvr_change_time\nfrom {{ ref('stg_sap__vbuk') }}\nwhere mandt in ('{{ var(\"sales_and_procurement_mandt_var\", [\"800\"]) | join(\"','\") }}')", "doc_blocks": [], "language": "sql", "refs": [{"name": "stg_sap__vbuk", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.sap.char_yyyymmdd_to_date"], "nodes": ["model.sap.stg_sap__vbuk"]}, "compiled_path": "target/compiled/sap/models/sales_and_procurement/star_schema/intermediate/int_sap__sales_document_header_status.sql", "compiled": true, "compiled_code": "\n\nselect\n    mandt as client_id,\n    vbeln as sales_document_id,\n    rfstk as reference_document_header_status,\n    rfgsk as total_reference_stat,\n    bestk as confirmation_status,\n    lfstk as delivery_status,\n    lfgsk as overall_dlv_status,\n    wbstk as total_goods_movement_status,\n    fkstk as billing_status,\n    fksak as bill_stat_order_rel,\n    buchk as posting_status,\n    abstk as rejection_status,\n    gbstk as overall_status,\n    kostk as overall_picking_putaway_status,\n    lvstk as overall_wm_status,\n    uvals as item,\n    uvvls as item_delivery,\n    uvfas as item_billing,\n    uvall as header,\n    uvvlk as header_delivery,\n    uvfak as header_billing,\n    uvprs as pricing,\n    vbtyp as sd_document_category,\n    vbobj as sd_document_object,\n    \n    case\n        when aedat::text ~ '^[0-9]{8}$'\n            and substring(aedat::text, 5, 2)::int between 1 and 12\n            and substring(aedat::text, 7, 2)::int between 1 and 31\n        then to_date(aedat::text, 'YYYYMMDD')\n        else null\n    end\n as changed_date,\n    fkivk as totals_status,\n    relik as inv_list_status,\n    uvk01 as header_reserves_1,\n    uvk02 as header_reserves_2,\n    uvk03 as header_reserves_3,\n    uvk04 as header_reserves_4,\n    uvk05 as header_reserves_5,\n    uvs01 as total_reserves_1,\n    uvs02 as total_reserves_2,\n    uvs03 as total_reserves_3,\n    uvs04 as total_reserves_4,\n    uvs05 as total_reserves_5,\n    pkstk as packing_status,\n    cmpsa as static_check,\n    cmpsb as dynamic_check,\n    cmpsc as maximum_value,\n    cmpsd as terms_payment,\n    cmpse as customer_review_date,\n    cmpsf as overdue_open_items,\n    cmpsg as oldest_open_items,\n    cmpsh as max_dunning_level,\n    cmpsi as financial_document,\n    cmpsj as expt_cred_insurance,\n    cmpsk as payment_card,\n    cmpsl as reserve,\n    cmps0 as cmps0,\n    cmps1 as cmps1,\n    cmps2 as cmps2,\n    cmgst as overall_status_credit_checks,\n    trsta as transportation_planning_status,\n    koquk as status_pick_confirmation,\n    costa as confirmation_status_ale,\n    saprl as sap_release,\n    uvpas as it_packaging,\n    uvpis as it_picking_putaway,\n    uvwas as item_goods_mvmt,\n    uvpak as head_packaging,\n    uvpik as head_picking_putaway,\n    uvwak as head_goods_mvmt,\n    uvgek as unused,\n    cmpsm as credit_check_is_obsolete,\n    dcstk as delay_status,\n    vestk as handling_unit_placed_in_stock,\n    vlstk as status_decent_whse,\n    rrsta as revenue_determination_status,\n    block as block,\n    fsstk as overall_billing_block_status,\n    lsstk as overall_delivery_block_status,\n    spstg as overall_blocked_status,\n    pdstk as pod_status_on_header_level,\n    fmstk as status_funds_management,\n    manek as manual_completion_contract,\n    spe_tmpid as temporary_inbound_delivery,\n    hdall as on_hold,\n    hdals as pos_hold,\n    cmps_cm as sap_credit_management,\n    cmps_te as credit_mgmt_te_status,\n    vbtyp_ext as doc_cat_extension,\n    fsh_ar_stat_hdr as arun_status_at_header,\n    hvr_is_deleted as hvr_is_deleted,\n    hvr_change_time as hvr_change_time\nfrom \"postgres\".\"public_sap_dev\".\"stg_sap__vbuk\"\nwhere mandt in ('800')", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null, "primary_key": [], "time_spine": null}, "model.sap.int_sap__customer": {"database": "postgres", "schema": "public_sap_dev", "name": "int_sap__customer", "resource_type": "model", "package_name": "sap", "path": "sales_and_procurement/star_schema/intermediate/int_sap__customer.sql", "original_file_path": "models/sales_and_procurement/star_schema/intermediate/int_sap__customer.sql", "unique_id": "model.sap.int_sap__customer", "fqn": ["sap", "sales_and_procurement", "star_schema", "intermediate", "int_sap__customer"], "alias": "int_sap__customer", "checksum": {"name": "sha256", "checksum": "020024d6a181100338e3b71e3e09745c022bfa7bd397e94592eb8121a7d15245"}, "config": {"enabled": true, "alias": null, "schema": "sap_dev", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "ephemeral", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "freshness": null}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "unrendered_config": {"materialized": "ephemeral", "schema": "sap_{{ var('directed_schema','dev') }}", "enabled": true}, "created_at": 1756850326.7699862, "relation_name": null, "raw_code": "{{ config(enabled=var('sap_using_kna1', True)) }}\n\nselect\n    kunnr as customer_id,\n    mandt as client_id,\n    pmt_office as payment_office_id,\n    brsch as industry_key_id,\n    katr9 as attribute_9_id,\n    uwaer as currency_sales_figure_id,\n    kdkg1 as customer_condition_group_1_id,\n    pson3 as name_3,\n    bran4 as industry_code_4_id,\n    ort02 as district,\n    _vso_r_matpal as _vso_r_matpal,\n    _vso_r_one_sort as _vso_r_one_sort,\n    fiskn as fiscal_address_id,\n    konzs as group_key,\n    etikg as lab_customer_group_id,\n    psoo2 as free_description,\n    sperz as payment_block,\n    katr4 as attribute_4_id,\n    telx1 as telex_number,\n    crtn as crt_number,\n    dtaws as instruction_key_id,\n    pstl2 as p_o_box_postal_code,\n    datlt as communication_line_no,\n    rne as foreign_national_registration,\n    name4 as name_4,\n    xzemp as alt_payer_in_doc,\n    kukla as customer_classification_id,\n    _xlso_customer as _xlso_customer,\n    name2 as name_2,\n    bahne as express_train_station,\n    psohs as house_number,\n    duns4 as duns_4,\n    kdkg2 as customer_condition_group_2_id,\n    oidrc as differ_refer_code_id,\n    bran5 as industry_code_5_id,\n    umsat as annual_sales_val,\n    stcd3 as tax_number_3,\n    uf as state,\n    txlw1 as icms_law_id,\n    psoo3 as psoo3,\n    rnedate as rne_issuing_date,\n    begru as authorization_group_id,\n    katr5 as attribute_5_id,\n    stcdt as tax_number_type_id,\n    duns as duns_number,\n    updat as confirmation_date,\n    katr10 as attribute_10_id,\n    dear1 as indicator_competitor,\n    inspatdebi as after_delivery,\n    periv as fiscal_year_variant_id,\n    _vso_r_pal_ul as _vso_r_pal_ul,\n    kdkg3 as customer_condition_group_3_id,\n    abrvw as usage_id,\n    rg as rg_number,\n    stcd4 as tax_number_4,\n    loevm as central_deletion_flag,\n    txlw2 as ipi_law_id,\n    lifnr as vendor_id,\n    psoo4 as psoo4,\n    _xlso_pref_pay as _xlso_pref_pay,\n    counc as county_code_id,\n    telfx as fax_number,\n    stcd2 as tax_number_2,\n    inspbydebi as by_customer,\n    dear2 as indicator_sales_partner,\n    stcd1 as tax_number_1,\n    ort01 as city,\n    oid_poreqd as purchase_order_req,\n    kdkg4 as customer_condition_group_4_id,\n    cvp_xblck as business_purpose_completed_flag,\n    faksd as central_billing_block_id,\n    ktokd as customer_account_group_id,\n    telbx as telebox_number,\n    legalnat as legal_nature_id,\n    stras as street_and_house_number,\n    ccc01 as biochemical_warfare,\n    dtams as dme_indicator,\n    psoo5 as psoo5,\n    j_1kftind as type_industry_id,\n    stkzn as natural_person,\n    exp as issued_by,\n    psotl as title,\n    _xlso_partner as _xlso_partner,\n    dear3 as indicator_sales_prospect,\n    xxipi as customer_is_ipi_exempt,\n    niels as nielsen_id,\n    umsa1 as umsa1,\n    bahns as train_station,\n    bubkz as check_digit,\n    kdkg5 as customer_condition_group_5_id,\n    _vso_r_one_mat as _vso_r_one_mat,\n    knurl as uniform_resource_locator,\n    xknza as accts_alt_payer,\n    dear6 as indicator_consumer,\n    pfort as po_box_city,\n    stcd5 as tax_number_5,\n    cityc as city_code_id,\n    ccc02 as nuclear_nonprolif,\n    ric as ric_number,\n    land1 as country_key_id,\n    umjah as year_which_sales_are_given,\n    fee_schedule as fee_schedule,\n    dear4 as indicator_customer_type_4,\n    _xlso_client as _xlso_client,\n    erdat as created_on_date,\n    _vso_r_dpoint as _vso_r_dpoint,\n    teltx as teletex_number,\n    ccc03 as national_security,\n    oipbl as business_location_id,\n    _xlso_sysid as _xlso_sysid,\n    rgdate as rg_issuing_date,\n    anred as anred,\n    ekont as initial_contact_id,\n    vbund as trading_partner_id,\n    psost as street,\n    knrza as alternative_payer_id,\n    dear5 as id_default_sold_to_party,\n    psofg as processor_group_id,\n    jmjah as year_no_given_for,\n    tdt as tax_declaration_type_id,\n    bbbnr as int_location_no_1,\n    regio as region_id,\n    alc as agency_location_code_id,\n    aufsd as central_order_block_customer_id,\n    ccc04 as missile_technology,\n    lifsd as central_delivery_block_id,\n    cassd as central_sales_block_customer,\n    werks as plant_id,\n    katr6 as attribute_6_id,\n    psois as slaprepr_proced,\n    _vso_r_load_pref as _vso_r_load_pref,\n    adrnr as address_id,\n    civve as id_mainly_non_military_use,\n    stkzu as liable_vat,\n    fityp as tax_type_id,\n    bran1 as industry_code_1_id,\n    psovn as first_name,\n    comsize as company_size_id,\n    j_1kfrepre as name_representative,\n    mcod1 as search_term_matchcode_search,\n    katr1 as attribute_1_id,\n    hzuor as assignment_to_hierarchy,\n    xicms as customer_is_icms_exempt,\n    indtyp as industry_main_type_id,\n    xcpdk as one_time_account,\n    lzone as transportation_zone_id,\n    sortl as sort_field,\n    katr7 as attribute_7_id,\n    gform as legal_status_id,\n    pson1 as name,\n    bran2 as industry_code_2_id,\n    stceg as vat_registration_no,\n    sperr as central_posting_block,\n    locco as city_coordinates,\n    uptim as last_change_confirmation_tim,\n    cnae as cnae_id,\n    mcod2 as mcod2,\n    ernam as created_by,\n    txjcd as tax_jurisdiction_id,\n    katr2 as attribute_2_id,\n    confs as confirmation_status,\n    telf1 as telephone_1,\n    _vso_r_palhgt as _vso_r_palhgt,\n    j_1kftbus as type_business_id,\n    spras as language_key_id,\n    _vso_r_uld_side as _vso_r_uld_side,\n    bbsnr as int_location_no_2,\n    xsubt as subtrib_group_id,\n    katr8 as attribute_8_id,\n    jmzah as yearly_number_employees,\n    nodel as central_del_block,\n    _vso_r_i_no_lyr as _vso_r_i_no_lyr,\n    decregpc as declaration_regimen_pis_cofins_id,\n    duefl as status_transfer_to_next_release,\n    pson2 as pson2,\n    cfopc as customers_cfop_category,\n    pfach as po_box,\n    icmstaxpay as icms_taxpayer_id,\n    bran3 as industry_code_3_id,\n    suframa as suframa_code,\n    exabl as unloading_points,\n    pstlz as postal_code,\n    stkza as sales_equalizatn_tax,\n    psoo1 as psoo1,\n    ktocd as reference_acct_group_id,\n    telf2 as second_telephone_number,\n    knazk as working_time_calendar_id,\n    milve as id_mainly_military_use,\n    katr3 as attribute_3_id,\n    mcod3 as mcod3,\n    rpmkr as regional_market,\n    _vso_r_pk_mat as _vso_r_pk_mat,\n    name3 as name3,\n    name1 as name1,\n    _fivetran_deleted as _fivetran_deleted,\n    _fivetran_synced as _fivetran_synced,\n    _fivetran_sap_archived as _fivetran_sap_archived\nfrom {{ ref('stg_sap__kna1') }}\nwhere mandt in ('{{ var(\"sales_and_procurement_mandt_var\", [\"800\"]) | join(\"','\") }}')", "doc_blocks": [], "language": "sql", "refs": [{"name": "stg_sap__kna1", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": [], "nodes": ["model.sap.stg_sap__kna1"]}, "compiled_path": "target/compiled/sap/models/sales_and_procurement/star_schema/intermediate/int_sap__customer.sql", "compiled": true, "compiled_code": "\n\nselect\n    kunnr as customer_id,\n    mandt as client_id,\n    pmt_office as payment_office_id,\n    brsch as industry_key_id,\n    katr9 as attribute_9_id,\n    uwaer as currency_sales_figure_id,\n    kdkg1 as customer_condition_group_1_id,\n    pson3 as name_3,\n    bran4 as industry_code_4_id,\n    ort02 as district,\n    _vso_r_matpal as _vso_r_matpal,\n    _vso_r_one_sort as _vso_r_one_sort,\n    fiskn as fiscal_address_id,\n    konzs as group_key,\n    etikg as lab_customer_group_id,\n    psoo2 as free_description,\n    sperz as payment_block,\n    katr4 as attribute_4_id,\n    telx1 as telex_number,\n    crtn as crt_number,\n    dtaws as instruction_key_id,\n    pstl2 as p_o_box_postal_code,\n    datlt as communication_line_no,\n    rne as foreign_national_registration,\n    name4 as name_4,\n    xzemp as alt_payer_in_doc,\n    kukla as customer_classification_id,\n    _xlso_customer as _xlso_customer,\n    name2 as name_2,\n    bahne as express_train_station,\n    psohs as house_number,\n    duns4 as duns_4,\n    kdkg2 as customer_condition_group_2_id,\n    oidrc as differ_refer_code_id,\n    bran5 as industry_code_5_id,\n    umsat as annual_sales_val,\n    stcd3 as tax_number_3,\n    uf as state,\n    txlw1 as icms_law_id,\n    psoo3 as psoo3,\n    rnedate as rne_issuing_date,\n    begru as authorization_group_id,\n    katr5 as attribute_5_id,\n    stcdt as tax_number_type_id,\n    duns as duns_number,\n    updat as confirmation_date,\n    katr10 as attribute_10_id,\n    dear1 as indicator_competitor,\n    inspatdebi as after_delivery,\n    periv as fiscal_year_variant_id,\n    _vso_r_pal_ul as _vso_r_pal_ul,\n    kdkg3 as customer_condition_group_3_id,\n    abrvw as usage_id,\n    rg as rg_number,\n    stcd4 as tax_number_4,\n    loevm as central_deletion_flag,\n    txlw2 as ipi_law_id,\n    lifnr as vendor_id,\n    psoo4 as psoo4,\n    _xlso_pref_pay as _xlso_pref_pay,\n    counc as county_code_id,\n    telfx as fax_number,\n    stcd2 as tax_number_2,\n    inspbydebi as by_customer,\n    dear2 as indicator_sales_partner,\n    stcd1 as tax_number_1,\n    ort01 as city,\n    oid_poreqd as purchase_order_req,\n    kdkg4 as customer_condition_group_4_id,\n    cvp_xblck as business_purpose_completed_flag,\n    faksd as central_billing_block_id,\n    ktokd as customer_account_group_id,\n    telbx as telebox_number,\n    legalnat as legal_nature_id,\n    stras as street_and_house_number,\n    ccc01 as biochemical_warfare,\n    dtams as dme_indicator,\n    psoo5 as psoo5,\n    j_1kftind as type_industry_id,\n    stkzn as natural_person,\n    exp as issued_by,\n    psotl as title,\n    _xlso_partner as _xlso_partner,\n    dear3 as indicator_sales_prospect,\n    xxipi as customer_is_ipi_exempt,\n    niels as nielsen_id,\n    umsa1 as umsa1,\n    bahns as train_station,\n    bubkz as check_digit,\n    kdkg5 as customer_condition_group_5_id,\n    _vso_r_one_mat as _vso_r_one_mat,\n    knurl as uniform_resource_locator,\n    xknza as accts_alt_payer,\n    dear6 as indicator_consumer,\n    pfort as po_box_city,\n    stcd5 as tax_number_5,\n    cityc as city_code_id,\n    ccc02 as nuclear_nonprolif,\n    ric as ric_number,\n    land1 as country_key_id,\n    umjah as year_which_sales_are_given,\n    fee_schedule as fee_schedule,\n    dear4 as indicator_customer_type_4,\n    _xlso_client as _xlso_client,\n    erdat as created_on_date,\n    _vso_r_dpoint as _vso_r_dpoint,\n    teltx as teletex_number,\n    ccc03 as national_security,\n    oipbl as business_location_id,\n    _xlso_sysid as _xlso_sysid,\n    rgdate as rg_issuing_date,\n    anred as anred,\n    ekont as initial_contact_id,\n    vbund as trading_partner_id,\n    psost as street,\n    knrza as alternative_payer_id,\n    dear5 as id_default_sold_to_party,\n    psofg as processor_group_id,\n    jmjah as year_no_given_for,\n    tdt as tax_declaration_type_id,\n    bbbnr as int_location_no_1,\n    regio as region_id,\n    alc as agency_location_code_id,\n    aufsd as central_order_block_customer_id,\n    ccc04 as missile_technology,\n    lifsd as central_delivery_block_id,\n    cassd as central_sales_block_customer,\n    werks as plant_id,\n    katr6 as attribute_6_id,\n    psois as slaprepr_proced,\n    _vso_r_load_pref as _vso_r_load_pref,\n    adrnr as address_id,\n    civve as id_mainly_non_military_use,\n    stkzu as liable_vat,\n    fityp as tax_type_id,\n    bran1 as industry_code_1_id,\n    psovn as first_name,\n    comsize as company_size_id,\n    j_1kfrepre as name_representative,\n    mcod1 as search_term_matchcode_search,\n    katr1 as attribute_1_id,\n    hzuor as assignment_to_hierarchy,\n    xicms as customer_is_icms_exempt,\n    indtyp as industry_main_type_id,\n    xcpdk as one_time_account,\n    lzone as transportation_zone_id,\n    sortl as sort_field,\n    katr7 as attribute_7_id,\n    gform as legal_status_id,\n    pson1 as name,\n    bran2 as industry_code_2_id,\n    stceg as vat_registration_no,\n    sperr as central_posting_block,\n    locco as city_coordinates,\n    uptim as last_change_confirmation_tim,\n    cnae as cnae_id,\n    mcod2 as mcod2,\n    ernam as created_by,\n    txjcd as tax_jurisdiction_id,\n    katr2 as attribute_2_id,\n    confs as confirmation_status,\n    telf1 as telephone_1,\n    _vso_r_palhgt as _vso_r_palhgt,\n    j_1kftbus as type_business_id,\n    spras as language_key_id,\n    _vso_r_uld_side as _vso_r_uld_side,\n    bbsnr as int_location_no_2,\n    xsubt as subtrib_group_id,\n    katr8 as attribute_8_id,\n    jmzah as yearly_number_employees,\n    nodel as central_del_block,\n    _vso_r_i_no_lyr as _vso_r_i_no_lyr,\n    decregpc as declaration_regimen_pis_cofins_id,\n    duefl as status_transfer_to_next_release,\n    pson2 as pson2,\n    cfopc as customers_cfop_category,\n    pfach as po_box,\n    icmstaxpay as icms_taxpayer_id,\n    bran3 as industry_code_3_id,\n    suframa as suframa_code,\n    exabl as unloading_points,\n    pstlz as postal_code,\n    stkza as sales_equalizatn_tax,\n    psoo1 as psoo1,\n    ktocd as reference_acct_group_id,\n    telf2 as second_telephone_number,\n    knazk as working_time_calendar_id,\n    milve as id_mainly_military_use,\n    katr3 as attribute_3_id,\n    mcod3 as mcod3,\n    rpmkr as regional_market,\n    _vso_r_pk_mat as _vso_r_pk_mat,\n    name3 as name3,\n    name1 as name1,\n    _fivetran_deleted as _fivetran_deleted,\n    _fivetran_synced as _fivetran_synced,\n    _fivetran_sap_archived as _fivetran_sap_archived\nfrom \"postgres\".\"public_sap_dev\".\"stg_sap__kna1\"\nwhere mandt in ('800')", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null, "primary_key": [], "time_spine": null}, "model.sap.int_sap__plant": {"database": "postgres", "schema": "public_sap_dev", "name": "int_sap__plant", "resource_type": "model", "package_name": "sap", "path": "sales_and_procurement/star_schema/intermediate/int_sap__plant.sql", "original_file_path": "models/sales_and_procurement/star_schema/intermediate/int_sap__plant.sql", "unique_id": "model.sap.int_sap__plant", "fqn": ["sap", "sales_and_procurement", "star_schema", "intermediate", "int_sap__plant"], "alias": "int_sap__plant", "checksum": {"name": "sha256", "checksum": "e01dfd61aab0b76f023bf30ad5f27bcfe3a158381d83aaf4e784d32e39b9612d"}, "config": {"enabled": true, "alias": null, "schema": "sap_dev", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "ephemeral", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "freshness": null}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "unrendered_config": {"materialized": "ephemeral", "schema": "sap_{{ var('directed_schema','dev') }}", "enabled": true}, "created_at": 1756850326.7782857, "relation_name": null, "raw_code": "{{ config(enabled=var('sap_using_t001w', True)) }}\n\nselect\n    mandt as client_id,\n    werks as plant_id,\n    fsh_mg_arun_req as order_allocation_run,\n    taxiw as tax_indicator_plant_id,\n    cityc as city_code_id,\n    regio as region_id,\n    fabkl as factory_calendar_id,\n    mgvlaupd as actual_activities_updated,\n    misch as mixed_costing,\n    oihvtype as vendor_type,\n    ekorg as purchasing_organization_id,\n    nodetype as node_type_supply_chain_network_id,\n    storetype as store_cat,\n    vtweg as distrib_channel_id,\n    txnam_ma1 as text_1st_dunning,\n    oihcredipi as ipi_credit_allowed,\n    kunnr as customer_number_plant_id,\n    name1 as name,\n    fsh_seaim as season_active_in_inventory_management,\n    adrnr as address_id,\n    bzirk as sales_district_id,\n    spras as language_key_id,\n    stras as street_and_house_number,\n    zone1 as supply_region_region_supplied_id,\n    vkorg as sales_organization_id,\n    nschema as structure_name_formation_id,\n    dep_store as superior_department_store_id,\n    bedpl as activating_requirements_planning,\n    lifnr as vendor_number_plant_id,\n    pfach as po_box,\n    spart as int_co_billing_div_id,\n    let03 as _3rd_reminder_exped,\n    oilival as exchange_valuation_indicator,\n    sourcing as af_srce_det_via_atp,\n    wksop as sop_plant,\n    kordb as source_list,\n    counc as county_code_id,\n    vstel as shipping_point_id,\n    txnam_ma3 as text_3rd_dunning,\n    let02 as _2nd_reminder_exped,\n    dvsart as batch_type_dms_used,\n    pstlz as postal_code,\n    bzqhl as take_regular_vendor_into_account,\n    mgvupd as actual_costing,\n    pkosa as cost_obj_controlling,\n    chazv as batch_status_mgmt,\n    txjcd as tax_jurisdiction_id,\n    awsls as variance_key_id,\n    chazv_old as chazv_old,\n    mgvlareval as control_credit_cost_centers,\n    bwkey as valuation_area_id,\n    vlfkz as plant_category,\n    let01 as _1st_reminder_exped,\n    txnam_ma2 as text_2nd_dunning,\n    fsh_bom_maintenance as control_bom,\n    kkowk as conds_at_plant_level,\n    j_1bbranch as business_place_id,\n    betol as po_tolerance,\n    vtbfi as sales_area_detrm,\n    name2 as name_2,\n    land1 as country_key_id,\n    achvm as archiving_marker,\n    fprfw as distrib_profile_plant_id,\n    ort01 as city,\n    iwerk as maintenance_planning_plant_id,\n    _fivetran_deleted as _fivetran_deleted,\n    _fivetran_synced as _fivetran_synced,\n    _fivetran_sap_archived as _fivetran_sap_archived\nfrom {{ ref('stg_sap__t001w') }}\nwhere mandt in ('{{ var(\"sales_and_procurement_mandt_var\", [\"800\"]) | join(\"','\") }}')", "doc_blocks": [], "language": "sql", "refs": [{"name": "stg_sap__t001w", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": [], "nodes": ["model.sap.stg_sap__t001w"]}, "compiled_path": "target/compiled/sap/models/sales_and_procurement/star_schema/intermediate/int_sap__plant.sql", "compiled": true, "compiled_code": "\n\nselect\n    mandt as client_id,\n    werks as plant_id,\n    fsh_mg_arun_req as order_allocation_run,\n    taxiw as tax_indicator_plant_id,\n    cityc as city_code_id,\n    regio as region_id,\n    fabkl as factory_calendar_id,\n    mgvlaupd as actual_activities_updated,\n    misch as mixed_costing,\n    oihvtype as vendor_type,\n    ekorg as purchasing_organization_id,\n    nodetype as node_type_supply_chain_network_id,\n    storetype as store_cat,\n    vtweg as distrib_channel_id,\n    txnam_ma1 as text_1st_dunning,\n    oihcredipi as ipi_credit_allowed,\n    kunnr as customer_number_plant_id,\n    name1 as name,\n    fsh_seaim as season_active_in_inventory_management,\n    adrnr as address_id,\n    bzirk as sales_district_id,\n    spras as language_key_id,\n    stras as street_and_house_number,\n    zone1 as supply_region_region_supplied_id,\n    vkorg as sales_organization_id,\n    nschema as structure_name_formation_id,\n    dep_store as superior_department_store_id,\n    bedpl as activating_requirements_planning,\n    lifnr as vendor_number_plant_id,\n    pfach as po_box,\n    spart as int_co_billing_div_id,\n    let03 as _3rd_reminder_exped,\n    oilival as exchange_valuation_indicator,\n    sourcing as af_srce_det_via_atp,\n    wksop as sop_plant,\n    kordb as source_list,\n    counc as county_code_id,\n    vstel as shipping_point_id,\n    txnam_ma3 as text_3rd_dunning,\n    let02 as _2nd_reminder_exped,\n    dvsart as batch_type_dms_used,\n    pstlz as postal_code,\n    bzqhl as take_regular_vendor_into_account,\n    mgvupd as actual_costing,\n    pkosa as cost_obj_controlling,\n    chazv as batch_status_mgmt,\n    txjcd as tax_jurisdiction_id,\n    awsls as variance_key_id,\n    chazv_old as chazv_old,\n    mgvlareval as control_credit_cost_centers,\n    bwkey as valuation_area_id,\n    vlfkz as plant_category,\n    let01 as _1st_reminder_exped,\n    txnam_ma2 as text_2nd_dunning,\n    fsh_bom_maintenance as control_bom,\n    kkowk as conds_at_plant_level,\n    j_1bbranch as business_place_id,\n    betol as po_tolerance,\n    vtbfi as sales_area_detrm,\n    name2 as name_2,\n    land1 as country_key_id,\n    achvm as archiving_marker,\n    fprfw as distrib_profile_plant_id,\n    ort01 as city,\n    iwerk as maintenance_planning_plant_id,\n    _fivetran_deleted as _fivetran_deleted,\n    _fivetran_synced as _fivetran_synced,\n    _fivetran_sap_archived as _fivetran_sap_archived\nfrom \"postgres\".\"public_sap_dev\".\"stg_sap__t001w\"\nwhere mandt in ('800')", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null, "primary_key": [], "time_spine": null}, "model.sap.int_sap__sales_document_rejection_reason": {"database": "postgres", "schema": "public_sap_dev", "name": "int_sap__sales_document_rejection_reason", "resource_type": "model", "package_name": "sap", "path": "sales_and_procurement/star_schema/intermediate/int_sap__sales_document_rejection_reason.sql", "original_file_path": "models/sales_and_procurement/star_schema/intermediate/int_sap__sales_document_rejection_reason.sql", "unique_id": "model.sap.int_sap__sales_document_rejection_reason", "fqn": ["sap", "sales_and_procurement", "star_schema", "intermediate", "int_sap__sales_document_rejection_reason"], "alias": "int_sap__sales_document_rejection_reason", "checksum": {"name": "sha256", "checksum": "73a67d71d606ae4de7b7ad5e03496911961a950a2f59522399b98168d4ca6a80"}, "config": {"enabled": true, "alias": null, "schema": "sap_dev", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "ephemeral", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "freshness": null}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "unrendered_config": {"materialized": "ephemeral", "schema": "sap_{{ var('directed_schema','dev') }}", "enabled": true}, "created_at": 1756850326.785993, "relation_name": null, "raw_code": "{{ config(enabled=var('sap_using_tvag', True)) }}\n\nwith tvag as (\n    select *\n    from {{ ref('stg_sap__tvag') }}\n\n{% set using_tvagt = var('sap_using_tvagt', True) %}\n{% if using_tvagt %}\n), tvagt as (\n    select *\n    from {{ ref('stg_sap__tvagt') }}\n{% endif %}\n\n), final as (\n    select\n        -- From tvag (required)\n        tvag.mandt as client_id,\n        tvag.abgru as reason_rejection_id,\n        tvag.dragr as not_relevant_printing,\n        tvag.ep_off as resource_item_open_again,\n        tvag.fk_erl as not_relevant_billing,\n        tvag.kowrr as statistical_values,\n        tvag.fsh_pqr_spec as relevant_partial_quantity_rejection,\n        tvag.hvr_is_deleted as hvr_is_deleted,\n        tvag.hvr_change_time as hvr_change_time,\n        {{ 'tvagt.bezei' if using_tvagt else 'cast(null as ' ~ dbt.type_string() ~ ')' }} as description\n    from tvag\n\n    {% if using_tvagt %}\n    left join tvagt\n        on tvag.mandt = tvagt.mandt\n        and tvag.abgru = tvagt.abgru\n        and tvagt.spras = 'e'\n    {% endif %}\n\n    where tvag.mandt in ('{{ var(\"sales_and_procurement_mandt_var\", [\"800\"]) | join(\"','\") }}')\n)\n\nselect *\nfrom final", "doc_blocks": [], "language": "sql", "refs": [{"name": "stg_sap__tvag", "package": null, "version": null}, {"name": "stg_sap__tvagt", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": [], "nodes": ["model.sap.stg_sap__tvag", "model.sap.stg_sap__tvagt"]}, "compiled_path": "target/compiled/sap/models/sales_and_procurement/star_schema/intermediate/int_sap__sales_document_rejection_reason.sql", "compiled": true, "compiled_code": "\n\nwith tvag as (\n    select *\n    from \"postgres\".\"public_sap_dev\".\"stg_sap__tvag\"\n\n\n\n), tvagt as (\n    select *\n    from \"postgres\".\"public_sap_dev\".\"stg_sap__tvagt\"\n\n\n), final as (\n    select\n        -- From tvag (required)\n        tvag.mandt as client_id,\n        tvag.abgru as reason_rejection_id,\n        tvag.dragr as not_relevant_printing,\n        tvag.ep_off as resource_item_open_again,\n        tvag.fk_erl as not_relevant_billing,\n        tvag.kowrr as statistical_values,\n        tvag.fsh_pqr_spec as relevant_partial_quantity_rejection,\n        tvag.hvr_is_deleted as hvr_is_deleted,\n        tvag.hvr_change_time as hvr_change_time,\n        tvagt.bezei as description\n    from tvag\n\n    \n    left join tvagt\n        on tvag.mandt = tvagt.mandt\n        and tvag.abgru = tvagt.abgru\n        and tvagt.spras = 'e'\n    \n\n    where tvag.mandt in ('800')\n)\n\nselect *\nfrom final", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null, "primary_key": [], "time_spine": null}, "model.sap.stg_sap__pa0000": {"database": "postgres", "schema": "public_sap_dev", "name": "stg_sap__pa0000", "resource_type": "model", "package_name": "sap", "path": "staging/stg_sap__pa0000.sql", "original_file_path": "models/staging/stg_sap__pa0000.sql", "unique_id": "model.sap.stg_sap__pa0000", "fqn": ["sap", "staging", "stg_sap__pa0000"], "alias": "stg_sap__pa0000", "checksum": {"name": "sha256", "checksum": "f804a47bc2f620fd8dcd906248495515b03caa106dcbb011c6998bc74307919d"}, "config": {"enabled": true, "alias": null, "schema": "sap_dev", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "view", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "freshness": null}, "tags": [], "description": "HR master record--infotype 0000 (Actions)", "columns": {"aedtm": {"name": "aedtm", "description": "Last changed on", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "begda": {"name": "begda", "description": "Start date", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "endda": {"name": "endda", "description": "End date", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "flag1": {"name": "flag1", "description": "Reserved field/Unused field", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "flag2": {"name": "flag2", "description": "Reserved field/Unused field", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "flag3": {"name": "flag3", "description": "Reserved field/Unused field", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "flag4": {"name": "flag4", "description": "Reserved field/Unused field", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "grpvl": {"name": "grpvl", "description": "Grouping value for personnel assignments", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "histo": {"name": "histo", "description": "Historical record flag", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "itbld": {"name": "itbld", "description": "Infotype screen control", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "itxex": {"name": "itxex", "description": "Text exists for infotype", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "mandt": {"name": "mandt", "description": "Client", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "massg": {"name": "massg", "description": "Reason for action", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "massn": {"name": "massn", "description": "Action type", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "objps": {"name": "objps", "description": "Object identification", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "ordex": {"name": "ordex", "description": "Confirmation fields exist", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "pernr": {"name": "pernr", "description": "Personnel number", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "preas": {"name": "preas", "description": "Reason for changing master data", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "refex": {"name": "refex", "description": "Reference fields exist (primary/secondary costs)", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "rese1": {"name": "rese1", "description": "Reserved field/unused field of length 2", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "rese2": {"name": "rese2", "description": "Reserved field/unused field of length 2", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "seqnr": {"name": "seqnr", "description": "Number of infotype record with same key", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "sprps": {"name": "sprps", "description": "Lock indicator for HR master data record", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "stat1": {"name": "stat1", "description": "Customer-specific status", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "stat2": {"name": "stat2", "description": "Employment status", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "stat3": {"name": "stat3", "description": "Special payment status", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "subty": {"name": "subty", "description": "Subtype", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "uname": {"name": "uname", "description": "Name of person who changed object", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": "sap://models/staging/stg_sap.yml", "build_path": null, "unrendered_config": {"materialized": "view", "schema": "sap_{{ var('directed_schema','dev') }}", "enabled": true}, "created_at": 1756850331.005549, "relation_name": "\"postgres\".\"public_sap_dev\".\"stg_sap__pa0000\"", "raw_code": "{{ config(enabled=var('sap_using_pa0000', True)) }}\n\n{% set source_columns = adapter.get_columns_in_relation(ref('stg_sap__pa0000_tmp')) %}\n\nwith base as (\n\n    select {{ remove_slashes_from_col_names(source_columns) }}\n    from {{ ref('stg_sap__pa0000_tmp') }}\n),\n\nfields as (\n\n    select\n        {{\n            fivetran_utils.fill_staging_columns(\n                source_columns=source_columns,\n                staging_columns=get_pa0000_columns()\n            )\n        }}\n    from base\n),\n\nfinal as (\n    \n    select\n        cast(mandt as {{ dbt.type_string() }}) as mandt,\n        pernr,\n        subty,\n        objps,\n        sprps,\n        endda,\n        begda,\n        seqnr,\n        aedtm,\n        flag1,\n        flag2,\n        flag3,\n        flag4,\n        grpvl,\n        histo,\n        itbld,\n        itxex,\n        massg,\n        massn,\n        ordex,\n        preas,\n        refex,\n        rese1,\n        rese2,\n        stat1,\n        stat2,\n        stat3,\n        uname\n    from fields\n)\n\nselect *\nfrom final", "doc_blocks": [], "language": "sql", "refs": [{"name": "stg_sap__pa0000_tmp", "package": null, "version": null}, {"name": "stg_sap__pa0000_tmp", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.sap.remove_slashes_from_col_names", "macro.sap.get_pa0000_columns", "macro.fivetran_utils.fill_staging_columns", "macro.dbt.type_string"], "nodes": ["model.sap.stg_sap__pa0000_tmp"]}, "compiled_path": "target/compiled/sap/models/staging/stg_sap__pa0000.sql", "compiled": true, "compiled_code": "\n\n\n\nwith base as (\n\n    select \n        \"begda\" as begda,\n        \"endda\" as endda,\n        \"mandt\" as mandt,\n        \"objps\" as objps,\n        \"pernr\" as pernr,\n        \"seqnr\" as seqnr,\n        \"sprps\" as sprps,\n        \"subty\" as subty,\n        \"aedtm\" as aedtm,\n        \"uname\" as uname,\n        \"histo\" as histo,\n        \"itxex\" as itxex,\n        \"refex\" as refex,\n        \"ordex\" as ordex,\n        \"itbld\" as itbld,\n        \"preas\" as preas,\n        \"flag1\" as flag1,\n        \"flag2\" as flag2,\n        \"flag3\" as flag3,\n        \"flag4\" as flag4,\n        \"rese1\" as rese1,\n        \"rese2\" as rese2,\n        \"grpvl\" as grpvl,\n        \"massn\" as massn,\n        \"massg\" as massg,\n        \"stat1\" as stat1,\n        \"stat2\" as stat2,\n        \"stat3\" as stat3,\n        \"_fivetran_rowid\" as _fivetran_rowid,\n        \"_fivetran_deleted\" as _fivetran_deleted,\n        \"_fivetran_synced\" as _fivetran_synced\n    from \"postgres\".\"public_sap_dev\".\"stg_sap__pa0000_tmp\"\n),\n\nfields as (\n\n    select\n        \n    \n    \n    _fivetran_deleted\n    \n as \n    \n    _fivetran_deleted\n    \n, \n    \n    \n    _fivetran_rowid\n    \n as \n    \n    _fivetran_rowid\n    \n, \n    \n    \n    _fivetran_synced\n    \n as \n    \n    _fivetran_synced\n    \n, \n    \n    \n    aedtm\n    \n as \n    \n    aedtm\n    \n, \n    \n    \n    begda\n    \n as \n    \n    begda\n    \n, \n    \n    \n    endda\n    \n as \n    \n    endda\n    \n, \n    \n    \n    flag1\n    \n as \n    \n    flag1\n    \n, \n    \n    \n    flag2\n    \n as \n    \n    flag2\n    \n, \n    \n    \n    flag3\n    \n as \n    \n    flag3\n    \n, \n    \n    \n    flag4\n    \n as \n    \n    flag4\n    \n, \n    \n    \n    grpvl\n    \n as \n    \n    grpvl\n    \n, \n    \n    \n    histo\n    \n as \n    \n    histo\n    \n, \n    \n    \n    itbld\n    \n as \n    \n    itbld\n    \n, \n    \n    \n    itxex\n    \n as \n    \n    itxex\n    \n, \n    \n    \n    mandt\n    \n as \n    \n    mandt\n    \n, \n    \n    \n    massg\n    \n as \n    \n    massg\n    \n, \n    \n    \n    massn\n    \n as \n    \n    massn\n    \n, \n    \n    \n    objps\n    \n as \n    \n    objps\n    \n, \n    \n    \n    ordex\n    \n as \n    \n    ordex\n    \n, \n    \n    \n    pernr\n    \n as \n    \n    pernr\n    \n, \n    \n    \n    preas\n    \n as \n    \n    preas\n    \n, \n    \n    \n    refex\n    \n as \n    \n    refex\n    \n, \n    \n    \n    rese1\n    \n as \n    \n    rese1\n    \n, \n    \n    \n    rese2\n    \n as \n    \n    rese2\n    \n, \n    \n    \n    seqnr\n    \n as \n    \n    seqnr\n    \n, \n    \n    \n    sprps\n    \n as \n    \n    sprps\n    \n, \n    \n    \n    stat1\n    \n as \n    \n    stat1\n    \n, \n    \n    \n    stat2\n    \n as \n    \n    stat2\n    \n, \n    \n    \n    stat3\n    \n as \n    \n    stat3\n    \n, \n    \n    \n    subty\n    \n as \n    \n    subty\n    \n, \n    \n    \n    uname\n    \n as \n    \n    uname\n    \n\n\n\n    from base\n),\n\nfinal as (\n    \n    select\n        cast(mandt as TEXT) as mandt,\n        pernr,\n        subty,\n        objps,\n        sprps,\n        endda,\n        begda,\n        seqnr,\n        aedtm,\n        flag1,\n        flag2,\n        flag3,\n        flag4,\n        grpvl,\n        histo,\n        itbld,\n        itxex,\n        massg,\n        massn,\n        ordex,\n        preas,\n        refex,\n        rese1,\n        rese2,\n        stat1,\n        stat2,\n        stat3,\n        uname\n    from fields\n)\n\nselect *\nfrom final", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null, "primary_key": [], "time_spine": null}, "model.sap.stg_sap__tvagt": {"database": "postgres", "schema": "public_sap_dev", "name": "stg_sap__tvagt", "resource_type": "model", "package_name": "sap", "path": "staging/stg_sap__tvagt.sql", "original_file_path": "models/staging/stg_sap__tvagt.sql", "unique_id": "model.sap.stg_sap__tvagt", "fqn": ["sap", "staging", "stg_sap__tvagt"], "alias": "stg_sap__tvagt", "checksum": {"name": "sha256", "checksum": "154ad575fc7c16b4e4ea1c7cb84248a49827e96dee0ca9c0cc9d1b8bb3d6138c"}, "config": {"enabled": true, "alias": null, "schema": "sap_dev", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "view", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "freshness": null}, "tags": [], "description": "Sales document rejection reason text", "columns": {"_fivetran_rowid": {"name": "_fivetran_rowid", "description": "Fivetran unique row ID", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "_fivetran_deleted": {"name": "_fivetran_deleted", "description": "Fivetran deletion marker", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "_fivetran_synced": {"name": "_fivetran_synced", "description": "Fivetran sync timestamp", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "abgru": {"name": "abgru", "description": "Reason code", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "bezei": {"name": "bezei", "description": "Description", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "mandt": {"name": "mandt", "description": "Client", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "spras": {"name": "spras", "description": "Language key", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": "sap://models/staging/stg_sap.yml", "build_path": null, "unrendered_config": {"materialized": "view", "schema": "sap_{{ var('directed_schema','dev') }}", "enabled": true}, "created_at": 1756850331.3103194, "relation_name": "\"postgres\".\"public_sap_dev\".\"stg_sap__tvagt\"", "raw_code": "{{ config(enabled=var('sap_using_tvagt', True)) }}\n\n{% set source_columns = adapter.get_columns_in_relation(ref('stg_sap__tvagt_tmp')) %}\n\nwith base as (\n    select {{ remove_slashes_from_col_names(source_columns) }}\n    from {{ ref('stg_sap__tvagt_tmp') }}\n),\n\nfields as (\n    select\n        {{\n            fivetran_utils.fill_staging_columns(\n                source_columns=source_columns,\n                staging_columns=get_tvagt_columns()\n            )\n        }}\n    from base\n),\n\nfinal as (\n    select\n        _fivetran_deleted,\n        _fivetran_rowid,\n        _fivetran_synced,\n        abgru,\n        bezei,\n        cast(mandt as {{ dbt.type_string() }}) as mandt,\n        spras\n    from fields\n)\n\nselect *\nfrom final", "doc_blocks": [], "language": "sql", "refs": [{"name": "stg_sap__tvagt_tmp", "package": null, "version": null}, {"name": "stg_sap__tvagt_tmp", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.sap.remove_slashes_from_col_names", "macro.sap.get_tvagt_columns", "macro.fivetran_utils.fill_staging_columns", "macro.dbt.type_string"], "nodes": ["model.sap.stg_sap__tvagt_tmp"]}, "compiled_path": "target/compiled/sap/models/staging/stg_sap__tvagt.sql", "compiled": true, "compiled_code": "\n\n\n\nwith base as (\n    select \n        \"_fivetran_deleted\" as _fivetran_deleted,\n        \"_fivetran_rowid\" as _fivetran_rowid,\n        \"_fivetran_synced\" as _fivetran_synced,\n        \"abgru\" as abgru,\n        \"bezei\" as bezei,\n        \"mandt\" as mandt,\n        \"spras\" as spras\n    from \"postgres\".\"public_sap_dev\".\"stg_sap__tvagt_tmp\"\n),\n\nfields as (\n    select\n        \n    \n    \n    _fivetran_deleted\n    \n as \n    \n    _fivetran_deleted\n    \n, \n    \n    \n    _fivetran_rowid\n    \n as \n    \n    _fivetran_rowid\n    \n, \n    \n    \n    _fivetran_synced\n    \n as \n    \n    _fivetran_synced\n    \n, \n    \n    \n    abgru\n    \n as \n    \n    abgru\n    \n, \n    \n    \n    bezei\n    \n as \n    \n    bezei\n    \n, \n    \n    \n    mandt\n    \n as \n    \n    mandt\n    \n, \n    \n    \n    spras\n    \n as \n    \n    spras\n    \n\n\n\n    from base\n),\n\nfinal as (\n    select\n        _fivetran_deleted,\n        _fivetran_rowid,\n        _fivetran_synced,\n        abgru,\n        bezei,\n        cast(mandt as TEXT) as mandt,\n        spras\n    from fields\n)\n\nselect *\nfrom final", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null, "primary_key": [], "time_spine": null}, "model.sap.stg_sap__mara": {"database": "postgres", "schema": "public_sap_dev", "name": "stg_sap__mara", "resource_type": "model", "package_name": "sap", "path": "staging/stg_sap__mara.sql", "original_file_path": "models/staging/stg_sap__mara.sql", "unique_id": "model.sap.stg_sap__mara", "fqn": ["sap", "staging", "stg_sap__mara"], "alias": "stg_sap__mara", "checksum": {"name": "sha256", "checksum": "4c03b8eabc2d52adae645571ad5553448e068cc52cc61199e1369d8534f627e8"}, "config": {"enabled": true, "alias": null, "schema": "sap_dev", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "view", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "freshness": null}, "tags": [], "description": "General material data", "columns": {"aeklk": {"name": "aeklk", "description": "Stock transfer net change costing", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "aenam": {"name": "aenam", "description": "Name of person who changed object", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "aeszn": {"name": "aeszn", "description": "Document change number (without document management system)", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "attyp": {"name": "attyp", "description": "Material category", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "begru": {"name": "begru", "description": "Authorization group", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "behvo": {"name": "behvo", "description": "Container requirements", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "bflme": {"name": "bflme", "description": "Generic material with logistical variants", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "bismt": {"name": "bismt", "description": "Old material number", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "blanz": {"name": "blanz", "description": "Number of sheets (without document management system)", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "blatt": {"name": "blatt", "description": "Page number of document (without document management system)", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "bmatn": {"name": "bmatn", "description": "Number of firm's own (internal) inventory-managed material", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "breit": {"name": "breit", "description": "Width", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "brgew": {"name": "brgew", "description": "Gross weight", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "bstme": {"name": "bstme", "description": "Order unit", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "bwscl": {"name": "bwscl", "description": "Source of supply", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "bwvor": {"name": "bwvor", "description": "Procurement rule", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "cadkz": {"name": "cadkz", "description": "CAD indicator", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "cmeth": {"name": "cmeth", "description": "Quantity conversion method", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "compl": {"name": "compl", "description": "Material completion level", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "cuobf": {"name": "cuobf", "description": "Internal object number", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "datab": {"name": "datab", "description": "Valid-from date", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "disst": {"name": "disst", "description": "Low-level code", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "ean11": {"name": "ean11", "description": "International Article Number (EAN/UPC)", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "eannr": {"name": "eannr", "description": "European Article Number (EAN)", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "ekwsl": {"name": "ekwsl", "description": "Purchasing value key", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "entar": {"name": "entar", "description": "Disposal type", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "ergei": {"name": "ergei", "description": "Unit of weight (allowed packaging weight)", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "ergew": {"name": "ergew", "description": "Allowed packaging weight", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "ernam": {"name": "ernam", "description": "Name of person who created the object", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "ersda": {"name": "ersda", "description": "Created on", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "ervoe": {"name": "ervoe", "description": "Volume unit (allowed packaging volume)", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "ervol": {"name": "ervol", "description": "Allowed packaging volume", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "etiag": {"name": "etiag", "description": "IS-R labeling (material grouping)", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "etiar": {"name": "etiar", "description": "Label type", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "etifo": {"name": "etifo", "description": "Label form", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "extwg": {"name": "extwg", "description": "External material group", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "ferth": {"name": "ferth", "description": "Production/inspection memo", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "formt": {"name": "formt", "description": "Page format of production memo", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "fuelg": {"name": "fuelg", "description": "Maximum level (by volume)", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "gewei": {"name": "gewei", "description": "Weight unit", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "gewto": {"name": "gewto", "description": "Excess weight tolerance for handling unit", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "groes": {"name": "groes", "description": "Size/dimensions", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "hoehe": {"name": "hoehe", "description": "Height", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "ihivi": {"name": "ihivi", "description": "Indicator (highly viscous)", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "iloos": {"name": "iloos", "description": "Indicator (in bulk/liquid)", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "inhal": {"name": "inhal", "description": "Net contents", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "inhbr": {"name": "inhbr", "description": "Gross contents", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "inhme": {"name": "inhme", "description": "Content unit", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "iprkz": {"name": "iprkz", "description": "Period indicator for shelf life expiration date", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "kosch": {"name": "kosch", "description": "Product allocation determination procedure", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "kunnr": {"name": "kunnr", "description": "Competitor", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "kzeff": {"name": "kzeff", "description": "Assign effectivity parameter values / override change numbers", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "kzgvh": {"name": "kzgvh", "description": "Packaging material is closed packaging", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "kzkfg": {"name": "kzkfg", "description": "Configurable material", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "kzkup": {"name": "kzkup", "description": "Indicator (Material can be co-product)", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "kznfm": {"name": "kznfm", "description": "Indicator (The amterial has a follow-up material)", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "kzrev": {"name": "kzrev", "description": "Revision level has been assigned to the material", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "kzumw": {"name": "kzumw", "description": "Environmentally relevant", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "kzwsm": {"name": "kzwsm", "description": "Units of measure usage", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "labor": {"name": "labor", "description": "Laboratory/design office", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "laeda": {"name": "laeda", "description": "Date of last change", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "laeng": {"name": "laeng", "description": "Length", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "liqdt": {"name": "liqdt", "description": "Deletion date", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "lvorm": {"name": "lvorm", "description": "Flag material for deletion at client level", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "magrv": {"name": "magrv", "description": "Material group (Packaging materials)", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "mandt": {"name": "mandt", "description": "Client", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "matkl": {"name": "matkl", "description": "Material group", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "matnr": {"name": "matnr", "description": "Material number", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "mbrsh": {"name": "mbrsh", "description": "Industry sector", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "meabm": {"name": "meabm", "description": "Unit of dimension for length/width/height", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "meins": {"name": "meins", "description": "Base unit of measure", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "mfrnr": {"name": "mfrnr", "description": "Manufacturer number", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "mfrpn": {"name": "mfrpn", "description": "Manufacturer part number", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "mhdhb": {"name": "mhdhb", "description": "Total shelf life", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "mhdlp": {"name": "mhdlp", "description": "Storage percentage", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "mhdrz": {"name": "mhdrz", "description": "Minimum remaining shelf life", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "mlgut": {"name": "mlgut", "description": "Empties bill of material", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "mprof": {"name": "mprof", "description": "Mfr part profile", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "mstae": {"name": "mstae", "description": "Cross-plant material status", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "mstav": {"name": "mstav", "description": "Cross-distribution-chain material status", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "mstde": {"name": "mstde", "description": "Date from which the cross-plan material status is valid", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "mstdv": {"name": "mstdv", "description": "Date from which the X-distr.-chain material status is valid", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "mtart": {"name": "mtart", "description": "Material type", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "mtpos_mara": {"name": "mtpos_mara", "description": "General item category group", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "normt": {"name": "normt", "description": "Industry Standard Description (such as ANSI or ISO)", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "nrfhg": {"name": "nrfhg", "description": "Material qualifies for discount in kind", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "nsnid": {"name": "nsnid", "description": "NATO item identification number", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "ntgew": {"name": "ntgew", "description": "Net weight", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "numtp": {"name": "numtp", "description": "Category of International Article Number (EAN)", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "plgtp": {"name": "plgtp", "description": "Price band category", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "pmata": {"name": "pmata", "description": "Pricing reference material", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "prdha": {"name": "prdha", "description": "Product hierarchy", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "profl": {"name": "profl", "description": "Dangerous goods indicator profile", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "przus": {"name": "przus", "description": "Indicator (Product composition printed on packaging)", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "pstat": {"name": "pstat", "description": "Maintenance status", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "qmpur": {"name": "qmpur", "description": "QM in procurement is active", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "raube": {"name": "raube", "description": "Storage conditions", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "rbnrm": {"name": "rbnrm", "description": "Catalog profile", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "rdmhd": {"name": "rdmhd", "description": "Rounding rule for calculation of SLED", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "saisj": {"name": "saisj", "description": "Season year", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "saiso": {"name": "saiso", "description": "Season category", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "saity": {"name": "saity", "description": "Rollout in a season", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "satnr": {"name": "satnr", "description": "Cross-plant configurable material", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "serlv": {"name": "serlv", "description": "Level of explicitness for serial numbers", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "spart": {"name": "spart", "description": "Divsion", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "sprof": {"name": "sprof", "description": "Pricing profile for variants", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "stfak": {"name": "stfak", "description": "Stacking factor", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "stoff": {"name": "stoff", "description": "Hazardous material number", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "taklv": {"name": "taklv", "description": "Tax classification of the material", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "tempb": {"name": "tempb", "description": "Temperature conditions indicator", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "tragr": {"name": "tragr", "description": "Transportation group", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "vabme": {"name": "vabme", "description": "Variable purchase order unit active", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "vhart": {"name": "vhart", "description": "Packaging material type", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "voleh": {"name": "voleh", "description": "Volume unit", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "volto": {"name": "volto", "description": "Excess volume tolerance of the handling unit", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "volum": {"name": "volum", "description": "Volume", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "vpreh": {"name": "vpreh", "description": "Comparison price unit", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "vpsta": {"name": "vpsta", "description": "Maintenance status of complete material", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "wesch": {"name": "wesch", "description": "Quantity, or number of GR/GI slips to be printed", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "wrkst": {"name": "wrkst", "description": "Basic material", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "xchpf": {"name": "xchpf", "description": "Batch management requirement indicator", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "xgchp": {"name": "xgchp", "description": "Indicator (Approved batch record required)", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "zeiar": {"name": "zeiar", "description": "Document type (without document management system)", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "zeifo": {"name": "zeifo", "description": "Page form of document (without document management system)", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "zeinr": {"name": "zeinr", "description": "Document number (without document management system)", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "zeivr": {"name": "zeivr", "description": "Document version (without document management system)", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "_accgo_assgd_uom": {"name": "_accgo_assgd_uom", "description": "Assigned unit of measure (Accruals)", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "_bev1_luldegrp": {"name": "_bev1_luldegrp", "description": "Beverage logistics unloading group", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "_bev1_luleinh": {"name": "_bev1_luleinh", "description": "Unloading unit of measure", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "_bev1_nestruccat": {"name": "_bev1_nestruccat", "description": "Beverage structure category", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "_dsd_sl_toltyp": {"name": "_dsd_sl_toltyp", "description": "Tolerance type for settlement", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "_dsd_sv_cnt_grp": {"name": "_dsd_sv_cnt_grp", "description": "Service count group", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "_dsd_vc_group": {"name": "_dsd_vc_group", "description": "Visit control group", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "_fivetran_deleted": {"name": "_fivetran_deleted", "description": "Fivetran deletion marker", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "_fivetran_rowid": {"name": "_fivetran_rowid", "description": "Fivetran unique row ID", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "_fivetran_sap_archived": {"name": "_fivetran_sap_archived", "description": "Fivetran SAP archive marker", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "_fivetran_synced": {"name": "_fivetran_synced", "description": "Fivetran sync timestamp", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "_sttpec_country_ref": {"name": "_sttpec_country_ref", "description": "Country of reference (Product environmental compliance)", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "_sttpec_prdcat": {"name": "_sttpec_prdcat", "description": "Product category (STTPEC)", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "_sttpec_sertype": {"name": "_sttpec_sertype", "description": "Certificate type (STTPEC)", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "_sttpec_syncact": {"name": "_sttpec_syncact", "description": "Synchronization action (STTPEC)", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "_sttpec_syncchg": {"name": "_sttpec_syncchg", "description": "Change type in sync (STTPEC)", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "_sttpec_synctime": {"name": "_sttpec_synctime", "description": "Last sync time (STTPEC)", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "_vso_r_bot_ind": {"name": "_vso_r_bot_ind", "description": "Bottom layer indicator (Retail VSO)", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "_vso_r_kzgvh_ind": {"name": "_vso_r_kzgvh_ind", "description": "Closed packaging indicator (Retail VSO)", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "_vso_r_no_p_gvh": {"name": "_vso_r_no_p_gvh", "description": "No packaging material group (Retail VSO)", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "_vso_r_pal_b_ht": {"name": "_vso_r_pal_b_ht", "description": "Pallet base height (Retail VSO)", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "_vso_r_pal_ind": {"name": "_vso_r_pal_ind", "description": "Pallet indicator (Retail VSO)", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "_vso_r_pal_min_h": {"name": "_vso_r_pal_min_h", "description": "Minimum pallet height (Retail VSO)", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "_vso_r_pal_ovr_d": {"name": "_vso_r_pal_ovr_d", "description": "Pallet overhang depth (Retail VSO)", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "_vso_r_pal_ovr_w": {"name": "_vso_r_pal_ovr_w", "description": "Pallet overhang width (Retail VSO)", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "_vso_r_quan_unit": {"name": "_vso_r_quan_unit", "description": "Quantity unit (Retail VSO)", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "_vso_r_stack_ind": {"name": "_vso_r_stack_ind", "description": "Stackable indicator (Retail VSO)", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "_vso_r_stack_no": {"name": "_vso_r_stack_no", "description": "Maximum stacking number (Retail VSO)", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "_vso_r_tilt_ind": {"name": "_vso_r_tilt_ind", "description": "Tilt indicator (Retail VSO)", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "_vso_r_tol_b_ht": {"name": "_vso_r_tol_b_ht", "description": "Tolerance for base height (Retail VSO)", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "_vso_r_top_ind": {"name": "_vso_r_top_ind", "description": "Top layer indicator (Retail VSO)", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "adprof": {"name": "adprof", "description": "Profile for advertising materials", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "adspc_spc": {"name": "adspc_spc", "description": "Ad space specification", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "allow_pmat_igno": {"name": "allow_pmat_igno", "description": "Allow packaging material ignore flag", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "animal_origin": {"name": "animal_origin", "description": "Indicator (Material of animal origin)", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "anp": {"name": "anp", "description": "Assembly item indicator", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "bbtyp": {"name": "bbtyp", "description": "Base unit type", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "brand_id": {"name": "brand_id", "description": "Brand identification number", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "bstat": {"name": "bstat", "description": "Material status at plant level", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "care_code": {"name": "care_code", "description": "Classification code used to identify special handling or care instructions for a material, such as temperature control, fragility, or hazard levels.", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "cmrel": {"name": "cmrel", "description": "Commodity relevant", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "cobjid": {"name": "cobjid", "description": "Object ID (Product Compliance)", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "color": {"name": "color", "description": "Color description", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "color_atinn": {"name": "color_atinn", "description": "Internal characteristic number for color", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "commodity": {"name": "commodity", "description": "Commodity code", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "cotype": {"name": "cotype", "description": "Configuration type", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "cwqproc": {"name": "cwqproc", "description": "Catch weight processing procedure", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "cwqrel": {"name": "cwqrel", "description": "Catch weight relevance", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "cwqtolgr": {"name": "cwqtolgr", "description": "Catch weight tolerance group", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "dg_pack_status": {"name": "dg_pack_status", "description": "Dangerous goods packaging status", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "fashgrd": {"name": "fashgrd", "description": "Fashion grade", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "fiber_code1": {"name": "fiber_code1", "description": "Fiber code 1", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "fiber_code2": {"name": "fiber_code2", "description": "Fiber code 2", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "fiber_code3": {"name": "fiber_code3", "description": "Fiber code 3", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "fiber_code4": {"name": "fiber_code4", "description": "Fiber code 4", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "fiber_code5": {"name": "fiber_code5", "description": "Fiber code 5", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "fiber_part1": {"name": "fiber_part1", "description": "Fiber content part 1", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "fiber_part2": {"name": "fiber_part2", "description": "Fiber content part 2", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "fiber_part3": {"name": "fiber_part3", "description": "Fiber content part 3", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "fiber_part4": {"name": "fiber_part4", "description": "Fiber content part 4", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "fiber_part5": {"name": "fiber_part5", "description": "Fiber content part 5", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "free_char": {"name": "free_char", "description": "Free characteristics", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "fsh_mg_at1": {"name": "fsh_mg_at1", "description": "Fashion material group attribute 1", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "fsh_mg_at2": {"name": "fsh_mg_at2", "description": "Fashion material group attribute 2", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "fsh_mg_at3": {"name": "fsh_mg_at3", "description": "Fashion material group attribute 3", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "fsh_sc_mid": {"name": "fsh_sc_mid", "description": "Fashion supply chain merchandise category", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "fsh_seaim": {"name": "fsh_seaim", "description": "Fashion season indicator", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "fsh_sealv": {"name": "fsh_sealv", "description": "Fashion season level", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "gds_relevant": {"name": "gds_relevant", "description": "GDS relevant indicator", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "gennr": {"name": "gennr", "description": "Generic material number", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "gtin_variant": {"name": "gtin_variant", "description": "GTIN variant ID", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "hazmat": {"name": "hazmat", "description": "Hazardous material indicator", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "herkl": {"name": "herkl", "description": "Country of origin", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "hndlcode": {"name": "hndlcode", "description": "Handling code", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "hutyp": {"name": "hutyp", "description": "Handling unit type", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "hutyp_dflt": {"name": "hutyp_dflt", "description": "Default HU type", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "imatn": {"name": "imatn", "description": "Material number used by vendor", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "ipmipproduct": {"name": "ipmipproduct", "description": "Intellectual Property-managed product", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "loglev_reto": {"name": "loglev_reto", "description": "Logistics level for returns", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "logunit": {"name": "logunit", "description": "Logical unit", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "matfi": {"name": "matfi", "description": "Material status for FI", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "maxb": {"name": "maxb", "description": "Maximum length", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "maxc": {"name": "maxc", "description": "Maximum width", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "maxc_tol": {"name": "maxc_tol", "description": "Tolerance for width", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "maxdim_uom": {"name": "maxdim_uom", "description": "Unit of measure for max dimensions", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "maxh": {"name": "maxh", "description": "Maximum height", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "maxl": {"name": "maxl", "description": "Maximum pallet layer", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "mcond": {"name": "mcond", "description": "Material condition group used for pricing determination.", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "medium": {"name": "medium", "description": "Medium type", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "mfrgr": {"name": "mfrgr", "description": "Material freight group", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "oigroupnam": {"name": "oigroupnam", "description": "OIL group name", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "oihmtxgr": {"name": "oihmtxgr", "description": "OIL material text group", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "oitrind": {"name": "oitrind", "description": "OIL transport indicator", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "packcode": {"name": "packcode", "description": "Packaging code", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "picnum": {"name": "picnum", "description": "Picture number", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "pilferable": {"name": "pilferable", "description": "Pilferable indicator", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "ps_smartform": {"name": "ps_smartform", "description": "Smartform for product safety", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "psm_code": {"name": "psm_code", "description": "Product stewardship code", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "qgrp": {"name": "qgrp", "description": "QM control key", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "qqtime": {"name": "qqtime", "description": "Quarantine time", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "qqtimeuom": {"name": "qqtimeuom", "description": "Quarantine time unit of measure", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "retdelc": {"name": "retdelc", "description": "Returns deletion flag", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "rmatp": {"name": "rmatp", "description": "Relevant for material availability check", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "serial": {"name": "serial", "description": "Serial number profile", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "sgt_covsa": {"name": "sgt_covsa", "description": "Segmentation coverage scenario", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "sgt_csgr": {"name": "sgt_csgr", "description": "Segmentation strategy", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "sgt_rel": {"name": "sgt_rel", "description": "Segmentation relevance", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "sgt_scope": {"name": "sgt_scope", "description": "Segmentation scope", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "sgt_stat": {"name": "sgt_stat", "description": "Segmentation status", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "size1": {"name": "size1", "description": "Size 1 (numeric or text)", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "size1_atinn": {"name": "size1_atinn", "description": "Internal characteristic number for size1", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "size2": {"name": "size2", "description": "Size 2 (numeric or text)", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "size2_atinn": {"name": "size2_atinn", "description": "Internal characteristic number for size2", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "sled_bbd": {"name": "sled_bbd", "description": "Shelf life expiration or best-before date", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "tare_var": {"name": "tare_var", "description": "Variable tare weight indicator", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "textile_comp_ind": {"name": "textile_comp_ind", "description": "Textile composition indicator", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "weora": {"name": "weora", "description": "Time of goods receipt", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "whmatgr": {"name": "whmatgr", "description": "Material group for warehouse mgmt", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "whstc": {"name": "whstc", "description": "Warehouse storage condition", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": "sap://models/staging/stg_sap.yml", "build_path": null, "unrendered_config": {"materialized": "view", "schema": "sap_{{ var('directed_schema','dev') }}", "enabled": true}, "created_at": 1756850330.9955723, "relation_name": "\"postgres\".\"public_sap_dev\".\"stg_sap__mara\"", "raw_code": "{{ config(enabled=var('sap_using_mara', True)) }}\n\n{% set source_columns = adapter.get_columns_in_relation(ref('stg_sap__mara_tmp')) %}\n\nwith base as (\n\n    select {{ remove_slashes_from_col_names(source_columns) }}\n    from {{ ref('stg_sap__mara_tmp') }}\n),\n\nfields as (\n\n    select\n        {{\n            fivetran_utils.fill_staging_columns(\n                source_columns=source_columns,\n                staging_columns=get_mara_columns()\n            )\n        }}\n    from base\n),\n\nfinal as (\n\n    select\n        _accgo_assgd_uom,\n        _bev1_luldegrp,\n        _bev1_luleinh,\n        _bev1_nestruccat,\n        _dsd_sl_toltyp,\n        _dsd_sv_cnt_grp,\n        _dsd_vc_group,\n        _fivetran_deleted,\n        _fivetran_rowid,\n        _fivetran_sap_archived,\n        _fivetran_synced,\n        _sttpec_country_ref,\n        _sttpec_prdcat,\n        _sttpec_sertype,\n        _sttpec_syncact,\n        _sttpec_syncchg,\n        _sttpec_synctime,\n        _vso_r_bot_ind,\n        _vso_r_kzgvh_ind,\n        _vso_r_no_p_gvh,\n        _vso_r_pal_b_ht,\n        _vso_r_pal_ind,\n        _vso_r_pal_min_h,\n        _vso_r_pal_ovr_d,\n        _vso_r_pal_ovr_w,\n        _vso_r_quan_unit,\n        _vso_r_stack_ind,\n        _vso_r_stack_no,\n        _vso_r_tilt_ind,\n        _vso_r_tol_b_ht,\n        _vso_r_top_ind,\n        adprof,\n        adspc_spc,\n        aeklk,\n        aenam,\n        aeszn,\n        allow_pmat_igno,\n        animal_origin,\n        anp,\n        attyp,\n        bbtyp,\n        begru,\n        behvo,\n        bflme,\n        bismt,\n        blanz,\n        blatt,\n        bmatn,\n        brand_id,\n        breit,\n        brgew,\n        bstat,\n        bstme,\n        bwscl,\n        bwvor,\n        cadkz,\n        care_code,\n        cmeth,\n        cmrel,\n        cobjid,\n        color_atinn,\n        color,\n        commodity,\n        compl,\n        cotype,\n        cuobf,\n        cwqproc,\n        cwqrel,\n        cwqtolgr,\n        datab,\n        dg_pack_status,\n        disst,\n        ean11,\n        eannr,\n        ekwsl,\n        entar,\n        ergei,\n        ergew,\n        ernam,\n        ersda,\n        ervoe,\n        ervol,\n        etiag,\n        etiar,\n        etifo,\n        extwg,\n        fashgrd,\n        ferth,\n        fiber_code1,\n        fiber_code2,\n        fiber_code3,\n        fiber_code4,\n        fiber_code5,\n        fiber_part1,\n        fiber_part2,\n        fiber_part3,\n        fiber_part4,\n        fiber_part5,\n        formt,\n        free_char,\n        fsh_mg_at1,\n        fsh_mg_at2,\n        fsh_mg_at3,\n        fsh_sc_mid,\n        fsh_seaim,\n        fsh_sealv,\n        fuelg,\n        gds_relevant,\n        gennr,\n        gewei,\n        gewto,\n        groes,\n        gtin_variant,\n        hazmat,\n        herkl,\n        hndlcode,\n        hoehe,\n        hutyp_dflt,\n        hutyp,\n        ihivi,\n        iloos,\n        imatn,\n        inhal,\n        inhbr,\n        inhme,\n        ipmipproduct,\n        iprkz,\n        kosch,\n        cast(kunnr as {{ dbt.type_string() }}) as kunnr,\n        kzeff,\n        kzgvh,\n        kzkfg,\n        kzkup,\n        kznfm,\n        kzrev,\n        kzumw,\n        kzwsm,\n        labor,\n        laeda,\n        laeng,\n        liqdt,\n        loglev_reto,\n        logunit,\n        lvorm,\n        magrv,\n        cast(mandt as {{ dbt.type_string() }}) as mandt,\n        matfi,\n        matkl,\n        cast(matnr as {{ dbt.type_string() }}) as matnr,\n        maxb,\n        maxc_tol,\n        maxc,\n        maxdim_uom,\n        maxh,\n        maxl,\n        mbrsh,\n        mcond,\n        meabm,\n        medium,\n        meins,\n        mfrgr,\n        mfrnr,\n        mfrpn,\n        mhdhb,\n        mhdlp,\n        mhdrz,\n        mlgut,\n        mprof,\n        mstae,\n        mstav,\n        mstde,\n        mstdv,\n        mtart,\n        mtpos_mara,\n        normt,\n        nrfhg,\n        nsnid,\n        ntgew,\n        numtp,\n        oigroupnam,\n        oihmtxgr,\n        oitrind,\n        packcode,\n        picnum,\n        pilferable,\n        plgtp,\n        pmata,\n        prdha,\n        profl,\n        przus,\n        ps_smartform,\n        psm_code,\n        pstat,\n        qgrp,\n        qmpur,\n        qqtime,\n        qqtimeuom,\n        raube,\n        rbnrm,\n        rdmhd,\n        retdelc,\n        rmatp,\n        saisj,\n        saiso,\n        saity,\n        satnr,\n        serial,\n        serlv,\n        sgt_covsa,\n        sgt_csgr,\n        sgt_rel,\n        sgt_scope,\n        sgt_stat,\n        size1_atinn,\n        size1,\n        size2_atinn,\n        size2,\n        sled_bbd,\n        spart,\n        sprof,\n        stfak,\n        stoff,\n        taklv,\n        tare_var,\n        tempb,\n        textile_comp_ind,\n        tragr,\n        vabme,\n        vhart,\n        voleh,\n        volto,\n        volum,\n        vpreh,\n        vpsta,\n        weora,\n        wesch,\n        whmatgr,\n        whstc,\n        wrkst,\n        xchpf,\n        xgchp,\n        zeiar,\n        zeifo,\n        zeinr,\n        zeivr\n    from fields\n)\n\nselect *\nfrom final", "doc_blocks": [], "language": "sql", "refs": [{"name": "stg_sap__mara_tmp", "package": null, "version": null}, {"name": "stg_sap__mara_tmp", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.sap.remove_slashes_from_col_names", "macro.sap.get_mara_columns", "macro.fivetran_utils.fill_staging_columns", "macro.dbt.type_string"], "nodes": ["model.sap.stg_sap__mara_tmp"]}, "compiled_path": "target/compiled/sap/models/staging/stg_sap__mara.sql", "compiled": true, "compiled_code": "\n\n\n\nwith base as (\n\n    select \n        \"_fivetran_deleted\" as _fivetran_deleted,\n        \"_fivetran_rowid\" as _fivetran_rowid,\n        \"_fivetran_synced\" as _fivetran_synced,\n        \"_fivetran_sap_archived\" as _fivetran_sap_archived,\n        \"_accgo_assgd_uom\" as _accgo_assgd_uom,\n        \"_bev1_luldegrp\" as _bev1_luldegrp,\n        \"_bev1_luleinh\" as _bev1_luleinh,\n        \"_bev1_nestruccat\" as _bev1_nestruccat,\n        \"_dsd_sl_toltyp\" as _dsd_sl_toltyp,\n        \"_dsd_sv_cnt_grp\" as _dsd_sv_cnt_grp,\n        \"_dsd_vc_group\" as _dsd_vc_group,\n        \"_sttpec_country_ref\" as _sttpec_country_ref,\n        \"_sttpec_prdcat\" as _sttpec_prdcat,\n        \"_sttpec_sertype\" as _sttpec_sertype,\n        \"_sttpec_syncact\" as _sttpec_syncact,\n        \"_sttpec_syncchg\" as _sttpec_syncchg,\n        \"_sttpec_synctime\" as _sttpec_synctime,\n        \"_vso_r_bot_ind\" as _vso_r_bot_ind,\n        \"_vso_r_kzgvh_ind\" as _vso_r_kzgvh_ind,\n        \"_vso_r_no_p_gvh\" as _vso_r_no_p_gvh,\n        \"_vso_r_pal_b_ht\" as _vso_r_pal_b_ht,\n        \"_vso_r_pal_ind\" as _vso_r_pal_ind,\n        \"_vso_r_pal_min_h\" as _vso_r_pal_min_h,\n        \"_vso_r_pal_ovr_d\" as _vso_r_pal_ovr_d,\n        \"_vso_r_pal_ovr_w\" as _vso_r_pal_ovr_w,\n        \"_vso_r_quan_unit\" as _vso_r_quan_unit,\n        \"_vso_r_stack_ind\" as _vso_r_stack_ind,\n        \"_vso_r_stack_no\" as _vso_r_stack_no,\n        \"_vso_r_tilt_ind\" as _vso_r_tilt_ind,\n        \"_vso_r_tol_b_ht\" as _vso_r_tol_b_ht,\n        \"_vso_r_top_ind\" as _vso_r_top_ind,\n        \"adprof\" as adprof,\n        \"adspc_spc\" as adspc_spc,\n        \"aeklk\" as aeklk,\n        \"aenam\" as aenam,\n        \"aeszn\" as aeszn,\n        \"allow_pmat_igno\" as allow_pmat_igno,\n        \"animal_origin\" as animal_origin,\n        \"anp\" as anp,\n        \"attyp\" as attyp,\n        \"bbtyp\" as bbtyp,\n        \"begru\" as begru,\n        \"behvo\" as behvo,\n        \"bflme\" as bflme,\n        \"bismt\" as bismt,\n        \"blanz\" as blanz,\n        \"blatt\" as blatt,\n        \"bmatn\" as bmatn,\n        \"brand_id\" as brand_id,\n        \"breit\" as breit,\n        \"brgew\" as brgew,\n        \"bstat\" as bstat,\n        \"bstme\" as bstme,\n        \"bwscl\" as bwscl,\n        \"bwvor\" as bwvor,\n        \"cadkz\" as cadkz,\n        \"care_code\" as care_code,\n        \"cmeth\" as cmeth,\n        \"cmrel\" as cmrel,\n        \"cobjid\" as cobjid,\n        \"color\" as color,\n        \"color_atinn\" as color_atinn,\n        \"commodity\" as commodity,\n        \"compl\" as compl,\n        \"cotype\" as cotype,\n        \"cuobf\" as cuobf,\n        \"cwqproc\" as cwqproc,\n        \"cwqrel\" as cwqrel,\n        \"cwqtolgr\" as cwqtolgr,\n        \"datab\" as datab,\n        \"dg_pack_status\" as dg_pack_status,\n        \"disst\" as disst,\n        \"ean11\" as ean11,\n        \"eannr\" as eannr,\n        \"ekwsl\" as ekwsl,\n        \"entar\" as entar,\n        \"ergei\" as ergei,\n        \"ergew\" as ergew,\n        \"ernam\" as ernam,\n        \"ersda\" as ersda,\n        \"ervoe\" as ervoe,\n        \"ervol\" as ervol,\n        \"etiag\" as etiag,\n        \"etiar\" as etiar,\n        \"etifo\" as etifo,\n        \"extwg\" as extwg,\n        \"fashgrd\" as fashgrd,\n        \"ferth\" as ferth,\n        \"fiber_code1\" as fiber_code1,\n        \"fiber_code2\" as fiber_code2,\n        \"fiber_code3\" as fiber_code3,\n        \"fiber_code4\" as fiber_code4,\n        \"fiber_code5\" as fiber_code5,\n        \"fiber_part1\" as fiber_part1,\n        \"fiber_part2\" as fiber_part2,\n        \"fiber_part3\" as fiber_part3,\n        \"fiber_part4\" as fiber_part4,\n        \"fiber_part5\" as fiber_part5,\n        \"formt\" as formt,\n        \"free_char\" as free_char,\n        \"fsh_mg_at1\" as fsh_mg_at1,\n        \"fsh_mg_at2\" as fsh_mg_at2,\n        \"fsh_mg_at3\" as fsh_mg_at3,\n        \"fsh_sc_mid\" as fsh_sc_mid,\n        \"fsh_seaim\" as fsh_seaim,\n        \"fsh_sealv\" as fsh_sealv,\n        \"fuelg\" as fuelg,\n        \"gds_relevant\" as gds_relevant,\n        \"gennr\" as gennr,\n        \"gewei\" as gewei,\n        \"gewto\" as gewto,\n        \"groes\" as groes,\n        \"gtin_variant\" as gtin_variant,\n        \"hazmat\" as hazmat,\n        \"herkl\" as herkl,\n        \"hndlcode\" as hndlcode,\n        \"hoehe\" as hoehe,\n        \"hutyp\" as hutyp,\n        \"hutyp_dflt\" as hutyp_dflt,\n        \"ihivi\" as ihivi,\n        \"iloos\" as iloos,\n        \"imatn\" as imatn,\n        \"inhal\" as inhal,\n        \"inhbr\" as inhbr,\n        \"inhme\" as inhme,\n        \"ipmipproduct\" as ipmipproduct,\n        \"iprkz\" as iprkz,\n        \"kosch\" as kosch,\n        \"kunnr\" as kunnr,\n        \"kzeff\" as kzeff,\n        \"kzgvh\" as kzgvh,\n        \"kzkfg\" as kzkfg,\n        \"kzkup\" as kzkup,\n        \"kznfm\" as kznfm,\n        \"kzrev\" as kzrev,\n        \"kzumw\" as kzumw,\n        \"kzwsm\" as kzwsm,\n        \"labor\" as labor,\n        \"laeda\" as laeda,\n        \"laeng\" as laeng,\n        \"liqdt\" as liqdt,\n        \"loglev_reto\" as loglev_reto,\n        \"logunit\" as logunit,\n        \"lvorm\" as lvorm,\n        \"magrv\" as magrv,\n        \"mandt\" as mandt,\n        \"matfi\" as matfi,\n        \"matkl\" as matkl,\n        \"matnr\" as matnr,\n        \"maxb\" as maxb,\n        \"maxc\" as maxc,\n        \"maxc_tol\" as maxc_tol,\n        \"maxdim_uom\" as maxdim_uom,\n        \"maxh\" as maxh,\n        \"maxl\" as maxl,\n        \"mbrsh\" as mbrsh,\n        \"mcond\" as mcond,\n        \"meabm\" as meabm,\n        \"medium\" as medium,\n        \"meins\" as meins,\n        \"mfrgr\" as mfrgr,\n        \"mfrnr\" as mfrnr,\n        \"mfrpn\" as mfrpn,\n        \"mhdhb\" as mhdhb,\n        \"mhdlp\" as mhdlp,\n        \"mhdrz\" as mhdrz,\n        \"mlgut\" as mlgut,\n        \"mprof\" as mprof,\n        \"mstae\" as mstae,\n        \"mstav\" as mstav,\n        \"mstde\" as mstde,\n        \"mstdv\" as mstdv,\n        \"mtart\" as mtart,\n        \"mtpos_mara\" as mtpos_mara,\n        \"normt\" as normt,\n        \"nrfhg\" as nrfhg,\n        \"nsnid\" as nsnid,\n        \"ntgew\" as ntgew,\n        \"numtp\" as numtp,\n        \"oigroupnam\" as oigroupnam,\n        \"oihmtxgr\" as oihmtxgr,\n        \"oitrind\" as oitrind,\n        \"packcode\" as packcode,\n        \"picnum\" as picnum,\n        \"pilferable\" as pilferable,\n        \"plgtp\" as plgtp,\n        \"pmata\" as pmata,\n        \"prdha\" as prdha,\n        \"profl\" as profl,\n        \"przus\" as przus,\n        \"ps_smartform\" as ps_smartform,\n        \"psm_code\" as psm_code,\n        \"pstat\" as pstat,\n        \"qgrp\" as qgrp,\n        \"qmpur\" as qmpur,\n        \"qqtime\" as qqtime,\n        \"qqtimeuom\" as qqtimeuom,\n        \"raube\" as raube,\n        \"rbnrm\" as rbnrm,\n        \"rdmhd\" as rdmhd,\n        \"retdelc\" as retdelc,\n        \"rmatp\" as rmatp,\n        \"saisj\" as saisj,\n        \"saiso\" as saiso,\n        \"saity\" as saity,\n        \"satnr\" as satnr,\n        \"serial\" as serial,\n        \"serlv\" as serlv,\n        \"sgt_covsa\" as sgt_covsa,\n        \"sgt_csgr\" as sgt_csgr,\n        \"sgt_rel\" as sgt_rel,\n        \"sgt_scope\" as sgt_scope,\n        \"sgt_stat\" as sgt_stat,\n        \"size1\" as size1,\n        \"size1_atinn\" as size1_atinn,\n        \"size2\" as size2,\n        \"size2_atinn\" as size2_atinn,\n        \"sled_bbd\" as sled_bbd,\n        \"spart\" as spart,\n        \"sprof\" as sprof,\n        \"stfak\" as stfak,\n        \"stoff\" as stoff,\n        \"taklv\" as taklv,\n        \"tare_var\" as tare_var,\n        \"tempb\" as tempb,\n        \"textile_comp_ind\" as textile_comp_ind,\n        \"tragr\" as tragr,\n        \"vabme\" as vabme,\n        \"vhart\" as vhart,\n        \"voleh\" as voleh,\n        \"volto\" as volto,\n        \"volum\" as volum,\n        \"vpreh\" as vpreh,\n        \"vpsta\" as vpsta,\n        \"weora\" as weora,\n        \"wesch\" as wesch,\n        \"whmatgr\" as whmatgr,\n        \"whstc\" as whstc,\n        \"wrkst\" as wrkst,\n        \"xchpf\" as xchpf,\n        \"xgchp\" as xgchp,\n        \"zeiar\" as zeiar,\n        \"zeifo\" as zeifo,\n        \"zeinr\" as zeinr,\n        \"zeivr\" as zeivr\n    from \"postgres\".\"public_sap_dev\".\"stg_sap__mara_tmp\"\n),\n\nfields as (\n\n    select\n        \n    \n    \n        \n            \n            \"_accgo_assgd_uom\"\n            \n        \n    \n as _accgo_assgd_uom , \n    \n    \n        \n            \n            \"_bev1_luldegrp\"\n            \n        \n    \n as _bev1_luldegrp , \n    \n    \n        \n            \n            \"_bev1_luleinh\"\n            \n        \n    \n as _bev1_luleinh , \n    \n    \n        \n            \n            \"_bev1_nestruccat\"\n            \n        \n    \n as _bev1_nestruccat , \n    \n    \n        \n            \n            \"_dsd_sl_toltyp\"\n            \n        \n    \n as _dsd_sl_toltyp , \n    \n    \n        \n            \n            \"_dsd_sv_cnt_grp\"\n            \n        \n    \n as _dsd_sv_cnt_grp , \n    \n    \n        \n            \n            \"_dsd_vc_group\"\n            \n        \n    \n as _dsd_vc_group , \n    \n    \n    _fivetran_deleted\n    \n as \n    \n    _fivetran_deleted\n    \n, \n    \n    \n    _fivetran_rowid\n    \n as \n    \n    _fivetran_rowid\n    \n, \n    \n    \n    _fivetran_sap_archived\n    \n as \n    \n    _fivetran_sap_archived\n    \n, \n    \n    \n    _fivetran_synced\n    \n as \n    \n    _fivetran_synced\n    \n, \n    \n    \n        \n            \n            \"_sttpec_country_ref\"\n            \n        \n    \n as _sttpec_country_ref , \n    \n    \n        \n            \n            \"_sttpec_prdcat\"\n            \n        \n    \n as _sttpec_prdcat , \n    \n    \n        \n            \n            \"_sttpec_sertype\"\n            \n        \n    \n as _sttpec_sertype , \n    \n    \n        \n            \n            \"_sttpec_syncact\"\n            \n        \n    \n as _sttpec_syncact , \n    \n    \n        \n            \n            \"_sttpec_syncchg\"\n            \n        \n    \n as _sttpec_syncchg , \n    \n    \n        \n            \n            \"_sttpec_synctime\"\n            \n        \n    \n as _sttpec_synctime , \n    \n    \n        \n            \n            \"_vso_r_bot_ind\"\n            \n        \n    \n as _vso_r_bot_ind , \n    \n    \n        \n            \n            \"_vso_r_kzgvh_ind\"\n            \n        \n    \n as _vso_r_kzgvh_ind , \n    \n    \n        \n            \n            \"_vso_r_no_p_gvh\"\n            \n        \n    \n as _vso_r_no_p_gvh , \n    \n    \n        \n            \n            \"_vso_r_pal_b_ht\"\n            \n        \n    \n as _vso_r_pal_b_ht , \n    \n    \n        \n            \n            \"_vso_r_pal_ind\"\n            \n        \n    \n as _vso_r_pal_ind , \n    \n    \n        \n            \n            \"_vso_r_pal_min_h\"\n            \n        \n    \n as _vso_r_pal_min_h , \n    \n    \n        \n            \n            \"_vso_r_pal_ovr_d\"\n            \n        \n    \n as _vso_r_pal_ovr_d , \n    \n    \n        \n            \n            \"_vso_r_pal_ovr_w\"\n            \n        \n    \n as _vso_r_pal_ovr_w , \n    \n    \n        \n            \n            \"_vso_r_quan_unit\"\n            \n        \n    \n as _vso_r_quan_unit , \n    \n    \n        \n            \n            \"_vso_r_stack_ind\"\n            \n        \n    \n as _vso_r_stack_ind , \n    \n    \n        \n            \n            \"_vso_r_stack_no\"\n            \n        \n    \n as _vso_r_stack_no , \n    \n    \n        \n            \n            \"_vso_r_tilt_ind\"\n            \n        \n    \n as _vso_r_tilt_ind , \n    \n    \n        \n            \n            \"_vso_r_tol_b_ht\"\n            \n        \n    \n as _vso_r_tol_b_ht , \n    \n    \n        \n            \n            \"_vso_r_top_ind\"\n            \n        \n    \n as _vso_r_top_ind , \n    \n    \n    adprof\n    \n as \n    \n    adprof\n    \n, \n    \n    \n    adspc_spc\n    \n as \n    \n    adspc_spc\n    \n, \n    \n    \n    aeklk\n    \n as \n    \n    aeklk\n    \n, \n    \n    \n    aenam\n    \n as \n    \n    aenam\n    \n, \n    \n    \n    aeszn\n    \n as \n    \n    aeszn\n    \n, \n    \n    \n    allow_pmat_igno\n    \n as \n    \n    allow_pmat_igno\n    \n, \n    \n    \n    animal_origin\n    \n as \n    \n    animal_origin\n    \n, \n    \n    \n    anp\n    \n as \n    \n    anp\n    \n, \n    \n    \n    attyp\n    \n as \n    \n    attyp\n    \n, \n    \n    \n    bbtyp\n    \n as \n    \n    bbtyp\n    \n, \n    \n    \n    begru\n    \n as \n    \n    begru\n    \n, \n    \n    \n    behvo\n    \n as \n    \n    behvo\n    \n, \n    \n    \n    bflme\n    \n as \n    \n    bflme\n    \n, \n    \n    \n    bismt\n    \n as \n    \n    bismt\n    \n, \n    \n    \n    blanz\n    \n as \n    \n    blanz\n    \n, \n    \n    \n    blatt\n    \n as \n    \n    blatt\n    \n, \n    \n    \n    bmatn\n    \n as \n    \n    bmatn\n    \n, \n    \n    \n    brand_id\n    \n as \n    \n    brand_id\n    \n, \n    \n    \n    breit\n    \n as \n    \n    breit\n    \n, \n    \n    \n    brgew\n    \n as \n    \n    brgew\n    \n, \n    \n    \n    bstat\n    \n as \n    \n    bstat\n    \n, \n    \n    \n    bstme\n    \n as \n    \n    bstme\n    \n, \n    \n    \n    bwscl\n    \n as \n    \n    bwscl\n    \n, \n    \n    \n    bwvor\n    \n as \n    \n    bwvor\n    \n, \n    \n    \n    cadkz\n    \n as \n    \n    cadkz\n    \n, \n    \n    \n    care_code\n    \n as \n    \n    care_code\n    \n, \n    \n    \n    cmeth\n    \n as \n    \n    cmeth\n    \n, \n    \n    \n    cmrel\n    \n as \n    \n    cmrel\n    \n, \n    \n    \n    cobjid\n    \n as \n    \n    cobjid\n    \n, \n    \n    \n    color_atinn\n    \n as \n    \n    color_atinn\n    \n, \n    \n    \n    color\n    \n as \n    \n    color\n    \n, \n    \n    \n    commodity\n    \n as \n    \n    commodity\n    \n, \n    \n    \n    compl\n    \n as \n    \n    compl\n    \n, \n    \n    \n    cotype\n    \n as \n    \n    cotype\n    \n, \n    \n    \n    cuobf\n    \n as \n    \n    cuobf\n    \n, \n    \n    \n    cwqproc\n    \n as \n    \n    cwqproc\n    \n, \n    \n    \n    cwqrel\n    \n as \n    \n    cwqrel\n    \n, \n    \n    \n    cwqtolgr\n    \n as \n    \n    cwqtolgr\n    \n, \n    \n    \n    datab\n    \n as \n    \n    datab\n    \n, \n    \n    \n    dg_pack_status\n    \n as \n    \n    dg_pack_status\n    \n, \n    \n    \n    disst\n    \n as \n    \n    disst\n    \n, \n    \n    \n    ean11\n    \n as \n    \n    ean11\n    \n, \n    \n    \n    eannr\n    \n as \n    \n    eannr\n    \n, \n    \n    \n    ekwsl\n    \n as \n    \n    ekwsl\n    \n, \n    \n    \n    entar\n    \n as \n    \n    entar\n    \n, \n    \n    \n    ergei\n    \n as \n    \n    ergei\n    \n, \n    \n    \n    ergew\n    \n as \n    \n    ergew\n    \n, \n    \n    \n    ernam\n    \n as \n    \n    ernam\n    \n, \n    \n    \n    ersda\n    \n as \n    \n    ersda\n    \n, \n    \n    \n    ervoe\n    \n as \n    \n    ervoe\n    \n, \n    \n    \n    ervol\n    \n as \n    \n    ervol\n    \n, \n    \n    \n    etiag\n    \n as \n    \n    etiag\n    \n, \n    \n    \n    etiar\n    \n as \n    \n    etiar\n    \n, \n    \n    \n    etifo\n    \n as \n    \n    etifo\n    \n, \n    \n    \n    extwg\n    \n as \n    \n    extwg\n    \n, \n    \n    \n    fashgrd\n    \n as \n    \n    fashgrd\n    \n, \n    \n    \n    ferth\n    \n as \n    \n    ferth\n    \n, \n    \n    \n    fiber_code1\n    \n as \n    \n    fiber_code1\n    \n, \n    \n    \n    fiber_code2\n    \n as \n    \n    fiber_code2\n    \n, \n    \n    \n    fiber_code3\n    \n as \n    \n    fiber_code3\n    \n, \n    \n    \n    fiber_code4\n    \n as \n    \n    fiber_code4\n    \n, \n    \n    \n    fiber_code5\n    \n as \n    \n    fiber_code5\n    \n, \n    \n    \n    fiber_part1\n    \n as \n    \n    fiber_part1\n    \n, \n    \n    \n    fiber_part2\n    \n as \n    \n    fiber_part2\n    \n, \n    \n    \n    fiber_part3\n    \n as \n    \n    fiber_part3\n    \n, \n    \n    \n    fiber_part4\n    \n as \n    \n    fiber_part4\n    \n, \n    \n    \n    fiber_part5\n    \n as \n    \n    fiber_part5\n    \n, \n    \n    \n    formt\n    \n as \n    \n    formt\n    \n, \n    \n    \n    free_char\n    \n as \n    \n    free_char\n    \n, \n    \n    \n    fsh_mg_at1\n    \n as \n    \n    fsh_mg_at1\n    \n, \n    \n    \n    fsh_mg_at2\n    \n as \n    \n    fsh_mg_at2\n    \n, \n    \n    \n    fsh_mg_at3\n    \n as \n    \n    fsh_mg_at3\n    \n, \n    \n    \n    fsh_sc_mid\n    \n as \n    \n    fsh_sc_mid\n    \n, \n    \n    \n    fsh_seaim\n    \n as \n    \n    fsh_seaim\n    \n, \n    \n    \n    fsh_sealv\n    \n as \n    \n    fsh_sealv\n    \n, \n    \n    \n    fuelg\n    \n as \n    \n    fuelg\n    \n, \n    \n    \n    gds_relevant\n    \n as \n    \n    gds_relevant\n    \n, \n    \n    \n    gennr\n    \n as \n    \n    gennr\n    \n, \n    \n    \n    gewei\n    \n as \n    \n    gewei\n    \n, \n    \n    \n    gewto\n    \n as \n    \n    gewto\n    \n, \n    \n    \n    groes\n    \n as \n    \n    groes\n    \n, \n    \n    \n    gtin_variant\n    \n as \n    \n    gtin_variant\n    \n, \n    \n    \n    hazmat\n    \n as \n    \n    hazmat\n    \n, \n    \n    \n    herkl\n    \n as \n    \n    herkl\n    \n, \n    \n    \n    hndlcode\n    \n as \n    \n    hndlcode\n    \n, \n    \n    \n    hoehe\n    \n as \n    \n    hoehe\n    \n, \n    \n    \n    hutyp_dflt\n    \n as \n    \n    hutyp_dflt\n    \n, \n    \n    \n    hutyp\n    \n as \n    \n    hutyp\n    \n, \n    \n    \n    ihivi\n    \n as \n    \n    ihivi\n    \n, \n    \n    \n    iloos\n    \n as \n    \n    iloos\n    \n, \n    \n    \n    imatn\n    \n as \n    \n    imatn\n    \n, \n    \n    \n    inhal\n    \n as \n    \n    inhal\n    \n, \n    \n    \n    inhbr\n    \n as \n    \n    inhbr\n    \n, \n    \n    \n    inhme\n    \n as \n    \n    inhme\n    \n, \n    \n    \n    ipmipproduct\n    \n as \n    \n    ipmipproduct\n    \n, \n    \n    \n    iprkz\n    \n as \n    \n    iprkz\n    \n, \n    \n    \n    kosch\n    \n as \n    \n    kosch\n    \n, \n    \n    \n    kunnr\n    \n as \n    \n    kunnr\n    \n, \n    \n    \n    kzeff\n    \n as \n    \n    kzeff\n    \n, \n    \n    \n    kzgvh\n    \n as \n    \n    kzgvh\n    \n, \n    \n    \n    kzkfg\n    \n as \n    \n    kzkfg\n    \n, \n    \n    \n    kzkup\n    \n as \n    \n    kzkup\n    \n, \n    \n    \n    kznfm\n    \n as \n    \n    kznfm\n    \n, \n    \n    \n    kzrev\n    \n as \n    \n    kzrev\n    \n, \n    \n    \n    kzumw\n    \n as \n    \n    kzumw\n    \n, \n    \n    \n    kzwsm\n    \n as \n    \n    kzwsm\n    \n, \n    \n    \n    labor\n    \n as \n    \n    labor\n    \n, \n    \n    \n    laeda\n    \n as \n    \n    laeda\n    \n, \n    \n    \n    laeng\n    \n as \n    \n    laeng\n    \n, \n    \n    \n    liqdt\n    \n as \n    \n    liqdt\n    \n, \n    \n    \n    loglev_reto\n    \n as \n    \n    loglev_reto\n    \n, \n    \n    \n    logunit\n    \n as \n    \n    logunit\n    \n, \n    \n    \n    lvorm\n    \n as \n    \n    lvorm\n    \n, \n    \n    \n    magrv\n    \n as \n    \n    magrv\n    \n, \n    \n    \n    mandt\n    \n as \n    \n    mandt\n    \n, \n    \n    \n    matfi\n    \n as \n    \n    matfi\n    \n, \n    \n    \n    matkl\n    \n as \n    \n    matkl\n    \n, \n    \n    \n    matnr\n    \n as \n    \n    matnr\n    \n, \n    \n    \n    maxb\n    \n as \n    \n    maxb\n    \n, \n    \n    \n    maxc_tol\n    \n as \n    \n    maxc_tol\n    \n, \n    \n    \n    maxc\n    \n as \n    \n    maxc\n    \n, \n    \n    \n    maxdim_uom\n    \n as \n    \n    maxdim_uom\n    \n, \n    \n    \n    maxh\n    \n as \n    \n    maxh\n    \n, \n    \n    \n    maxl\n    \n as \n    \n    maxl\n    \n, \n    \n    \n    mbrsh\n    \n as \n    \n    mbrsh\n    \n, \n    \n    \n    mcond\n    \n as \n    \n    mcond\n    \n, \n    \n    \n    meabm\n    \n as \n    \n    meabm\n    \n, \n    \n    \n    medium\n    \n as \n    \n    medium\n    \n, \n    \n    \n    meins\n    \n as \n    \n    meins\n    \n, \n    \n    \n    mfrgr\n    \n as \n    \n    mfrgr\n    \n, \n    \n    \n    mfrnr\n    \n as \n    \n    mfrnr\n    \n, \n    \n    \n    mfrpn\n    \n as \n    \n    mfrpn\n    \n, \n    \n    \n    mhdhb\n    \n as \n    \n    mhdhb\n    \n, \n    \n    \n    mhdlp\n    \n as \n    \n    mhdlp\n    \n, \n    \n    \n    mhdrz\n    \n as \n    \n    mhdrz\n    \n, \n    \n    \n    mlgut\n    \n as \n    \n    mlgut\n    \n, \n    \n    \n    mprof\n    \n as \n    \n    mprof\n    \n, \n    \n    \n    mstae\n    \n as \n    \n    mstae\n    \n, \n    \n    \n    mstav\n    \n as \n    \n    mstav\n    \n, \n    \n    \n    mstde\n    \n as \n    \n    mstde\n    \n, \n    \n    \n    mstdv\n    \n as \n    \n    mstdv\n    \n, \n    \n    \n    mtart\n    \n as \n    \n    mtart\n    \n, \n    \n    \n    mtpos_mara\n    \n as \n    \n    mtpos_mara\n    \n, \n    \n    \n    normt\n    \n as \n    \n    normt\n    \n, \n    \n    \n    nrfhg\n    \n as \n    \n    nrfhg\n    \n, \n    \n    \n    nsnid\n    \n as \n    \n    nsnid\n    \n, \n    \n    \n    ntgew\n    \n as \n    \n    ntgew\n    \n, \n    \n    \n    numtp\n    \n as \n    \n    numtp\n    \n, \n    \n    \n    oigroupnam\n    \n as \n    \n    oigroupnam\n    \n, \n    \n    \n    oihmtxgr\n    \n as \n    \n    oihmtxgr\n    \n, \n    \n    \n    oitrind\n    \n as \n    \n    oitrind\n    \n, \n    \n    \n    packcode\n    \n as \n    \n    packcode\n    \n, \n    \n    \n    picnum\n    \n as \n    \n    picnum\n    \n, \n    \n    \n    pilferable\n    \n as \n    \n    pilferable\n    \n, \n    \n    \n    plgtp\n    \n as \n    \n    plgtp\n    \n, \n    \n    \n    pmata\n    \n as \n    \n    pmata\n    \n, \n    \n    \n    prdha\n    \n as \n    \n    prdha\n    \n, \n    \n    \n    profl\n    \n as \n    \n    profl\n    \n, \n    \n    \n    przus\n    \n as \n    \n    przus\n    \n, \n    \n    \n    ps_smartform\n    \n as \n    \n    ps_smartform\n    \n, \n    \n    \n    psm_code\n    \n as \n    \n    psm_code\n    \n, \n    \n    \n    pstat\n    \n as \n    \n    pstat\n    \n, \n    \n    \n    qgrp\n    \n as \n    \n    qgrp\n    \n, \n    \n    \n    qmpur\n    \n as \n    \n    qmpur\n    \n, \n    \n    \n    qqtime\n    \n as \n    \n    qqtime\n    \n, \n    \n    \n    qqtimeuom\n    \n as \n    \n    qqtimeuom\n    \n, \n    \n    \n    raube\n    \n as \n    \n    raube\n    \n, \n    \n    \n    rbnrm\n    \n as \n    \n    rbnrm\n    \n, \n    \n    \n    rdmhd\n    \n as \n    \n    rdmhd\n    \n, \n    \n    \n    retdelc\n    \n as \n    \n    retdelc\n    \n, \n    \n    \n    rmatp\n    \n as \n    \n    rmatp\n    \n, \n    \n    \n    saisj\n    \n as \n    \n    saisj\n    \n, \n    \n    \n    saiso\n    \n as \n    \n    saiso\n    \n, \n    \n    \n    saity\n    \n as \n    \n    saity\n    \n, \n    \n    \n    satnr\n    \n as \n    \n    satnr\n    \n, \n    \n    \n    serial\n    \n as \n    \n    serial\n    \n, \n    \n    \n    serlv\n    \n as \n    \n    serlv\n    \n, \n    \n    \n    sgt_covsa\n    \n as \n    \n    sgt_covsa\n    \n, \n    \n    \n    sgt_csgr\n    \n as \n    \n    sgt_csgr\n    \n, \n    \n    \n    sgt_rel\n    \n as \n    \n    sgt_rel\n    \n, \n    \n    \n    sgt_scope\n    \n as \n    \n    sgt_scope\n    \n, \n    \n    \n    sgt_stat\n    \n as \n    \n    sgt_stat\n    \n, \n    \n    \n    size1_atinn\n    \n as \n    \n    size1_atinn\n    \n, \n    \n    \n    size1\n    \n as \n    \n    size1\n    \n, \n    \n    \n    size2_atinn\n    \n as \n    \n    size2_atinn\n    \n, \n    \n    \n    size2\n    \n as \n    \n    size2\n    \n, \n    \n    \n    sled_bbd\n    \n as \n    \n    sled_bbd\n    \n, \n    \n    \n    spart\n    \n as \n    \n    spart\n    \n, \n    \n    \n    sprof\n    \n as \n    \n    sprof\n    \n, \n    \n    \n    stfak\n    \n as \n    \n    stfak\n    \n, \n    \n    \n    stoff\n    \n as \n    \n    stoff\n    \n, \n    \n    \n    taklv\n    \n as \n    \n    taklv\n    \n, \n    \n    \n    tare_var\n    \n as \n    \n    tare_var\n    \n, \n    \n    \n    tempb\n    \n as \n    \n    tempb\n    \n, \n    \n    \n    textile_comp_ind\n    \n as \n    \n    textile_comp_ind\n    \n, \n    \n    \n    tragr\n    \n as \n    \n    tragr\n    \n, \n    \n    \n    vabme\n    \n as \n    \n    vabme\n    \n, \n    \n    \n    vhart\n    \n as \n    \n    vhart\n    \n, \n    \n    \n    voleh\n    \n as \n    \n    voleh\n    \n, \n    \n    \n    volto\n    \n as \n    \n    volto\n    \n, \n    \n    \n    volum\n    \n as \n    \n    volum\n    \n, \n    \n    \n    vpreh\n    \n as \n    \n    vpreh\n    \n, \n    \n    \n    vpsta\n    \n as \n    \n    vpsta\n    \n, \n    \n    \n    weora\n    \n as \n    \n    weora\n    \n, \n    \n    \n    wesch\n    \n as \n    \n    wesch\n    \n, \n    \n    \n    whmatgr\n    \n as \n    \n    whmatgr\n    \n, \n    \n    \n    whstc\n    \n as \n    \n    whstc\n    \n, \n    \n    \n    wrkst\n    \n as \n    \n    wrkst\n    \n, \n    \n    \n    xchpf\n    \n as \n    \n    xchpf\n    \n, \n    \n    \n    xgchp\n    \n as \n    \n    xgchp\n    \n, \n    \n    \n    zeiar\n    \n as \n    \n    zeiar\n    \n, \n    \n    \n    zeifo\n    \n as \n    \n    zeifo\n    \n, \n    \n    \n    zeinr\n    \n as \n    \n    zeinr\n    \n, \n    \n    \n    zeivr\n    \n as \n    \n    zeivr\n    \n\n\n\n    from base\n),\n\nfinal as (\n\n    select\n        _accgo_assgd_uom,\n        _bev1_luldegrp,\n        _bev1_luleinh,\n        _bev1_nestruccat,\n        _dsd_sl_toltyp,\n        _dsd_sv_cnt_grp,\n        _dsd_vc_group,\n        _fivetran_deleted,\n        _fivetran_rowid,\n        _fivetran_sap_archived,\n        _fivetran_synced,\n        _sttpec_country_ref,\n        _sttpec_prdcat,\n        _sttpec_sertype,\n        _sttpec_syncact,\n        _sttpec_syncchg,\n        _sttpec_synctime,\n        _vso_r_bot_ind,\n        _vso_r_kzgvh_ind,\n        _vso_r_no_p_gvh,\n        _vso_r_pal_b_ht,\n        _vso_r_pal_ind,\n        _vso_r_pal_min_h,\n        _vso_r_pal_ovr_d,\n        _vso_r_pal_ovr_w,\n        _vso_r_quan_unit,\n        _vso_r_stack_ind,\n        _vso_r_stack_no,\n        _vso_r_tilt_ind,\n        _vso_r_tol_b_ht,\n        _vso_r_top_ind,\n        adprof,\n        adspc_spc,\n        aeklk,\n        aenam,\n        aeszn,\n        allow_pmat_igno,\n        animal_origin,\n        anp,\n        attyp,\n        bbtyp,\n        begru,\n        behvo,\n        bflme,\n        bismt,\n        blanz,\n        blatt,\n        bmatn,\n        brand_id,\n        breit,\n        brgew,\n        bstat,\n        bstme,\n        bwscl,\n        bwvor,\n        cadkz,\n        care_code,\n        cmeth,\n        cmrel,\n        cobjid,\n        color_atinn,\n        color,\n        commodity,\n        compl,\n        cotype,\n        cuobf,\n        cwqproc,\n        cwqrel,\n        cwqtolgr,\n        datab,\n        dg_pack_status,\n        disst,\n        ean11,\n        eannr,\n        ekwsl,\n        entar,\n        ergei,\n        ergew,\n        ernam,\n        ersda,\n        ervoe,\n        ervol,\n        etiag,\n        etiar,\n        etifo,\n        extwg,\n        fashgrd,\n        ferth,\n        fiber_code1,\n        fiber_code2,\n        fiber_code3,\n        fiber_code4,\n        fiber_code5,\n        fiber_part1,\n        fiber_part2,\n        fiber_part3,\n        fiber_part4,\n        fiber_part5,\n        formt,\n        free_char,\n        fsh_mg_at1,\n        fsh_mg_at2,\n        fsh_mg_at3,\n        fsh_sc_mid,\n        fsh_seaim,\n        fsh_sealv,\n        fuelg,\n        gds_relevant,\n        gennr,\n        gewei,\n        gewto,\n        groes,\n        gtin_variant,\n        hazmat,\n        herkl,\n        hndlcode,\n        hoehe,\n        hutyp_dflt,\n        hutyp,\n        ihivi,\n        iloos,\n        imatn,\n        inhal,\n        inhbr,\n        inhme,\n        ipmipproduct,\n        iprkz,\n        kosch,\n        cast(kunnr as TEXT) as kunnr,\n        kzeff,\n        kzgvh,\n        kzkfg,\n        kzkup,\n        kznfm,\n        kzrev,\n        kzumw,\n        kzwsm,\n        labor,\n        laeda,\n        laeng,\n        liqdt,\n        loglev_reto,\n        logunit,\n        lvorm,\n        magrv,\n        cast(mandt as TEXT) as mandt,\n        matfi,\n        matkl,\n        cast(matnr as TEXT) as matnr,\n        maxb,\n        maxc_tol,\n        maxc,\n        maxdim_uom,\n        maxh,\n        maxl,\n        mbrsh,\n        mcond,\n        meabm,\n        medium,\n        meins,\n        mfrgr,\n        mfrnr,\n        mfrpn,\n        mhdhb,\n        mhdlp,\n        mhdrz,\n        mlgut,\n        mprof,\n        mstae,\n        mstav,\n        mstde,\n        mstdv,\n        mtart,\n        mtpos_mara,\n        normt,\n        nrfhg,\n        nsnid,\n        ntgew,\n        numtp,\n        oigroupnam,\n        oihmtxgr,\n        oitrind,\n        packcode,\n        picnum,\n        pilferable,\n        plgtp,\n        pmata,\n        prdha,\n        profl,\n        przus,\n        ps_smartform,\n        psm_code,\n        pstat,\n        qgrp,\n        qmpur,\n        qqtime,\n        qqtimeuom,\n        raube,\n        rbnrm,\n        rdmhd,\n        retdelc,\n        rmatp,\n        saisj,\n        saiso,\n        saity,\n        satnr,\n        serial,\n        serlv,\n        sgt_covsa,\n        sgt_csgr,\n        sgt_rel,\n        sgt_scope,\n        sgt_stat,\n        size1_atinn,\n        size1,\n        size2_atinn,\n        size2,\n        sled_bbd,\n        spart,\n        sprof,\n        stfak,\n        stoff,\n        taklv,\n        tare_var,\n        tempb,\n        textile_comp_ind,\n        tragr,\n        vabme,\n        vhart,\n        voleh,\n        volto,\n        volum,\n        vpreh,\n        vpsta,\n        weora,\n        wesch,\n        whmatgr,\n        whstc,\n        wrkst,\n        xchpf,\n        xgchp,\n        zeiar,\n        zeifo,\n        zeinr,\n        zeivr\n    from fields\n)\n\nselect *\nfrom final", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null, "primary_key": [], "time_spine": null}, "model.sap.stg_sap__t024e": {"database": "postgres", "schema": "public_sap_dev", "name": "stg_sap__t024e", "resource_type": "model", "package_name": "sap", "path": "staging/stg_sap__t024e.sql", "original_file_path": "models/staging/stg_sap__t024e.sql", "unique_id": "model.sap.stg_sap__t024e", "fqn": ["sap", "staging", "stg_sap__t024e"], "alias": "stg_sap__t024e", "checksum": {"name": "sha256", "checksum": "82e657c2450d3e4973052dacf1e498d54bbce1e986769ef127a4f40c08902e2e"}, "config": {"enabled": true, "alias": null, "schema": "sap_dev", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "view", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "freshness": null}, "tags": [], "description": "Purchasing organization text", "columns": {"_fivetran_deleted": {"name": "_fivetran_deleted", "description": "Fivetran deletion marker", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "_fivetran_sap_archived": {"name": "_fivetran_sap_archived", "description": "Fivetran SAP archive marker", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "_fivetran_synced": {"name": "_fivetran_synced", "description": "Fivetran sync timestamp", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "bpeff": {"name": "bpeff", "description": "Effective date of text", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "bukrs": {"name": "bukrs", "description": "Company code", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "bukrs_ntr": {"name": "bukrs_ntr", "description": "Company code description (non-translation ready)", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "ekorg": {"name": "ekorg", "description": "Purchasing organization", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "ekotx": {"name": "ekotx", "description": "Description of the purchasing organization", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "kalse": {"name": "kalse", "description": "Access sequence number", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "mandt": {"name": "mandt", "description": "Client", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "mkals": {"name": "mkals", "description": "Sequence for access", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "txadr": {"name": "txadr", "description": "Text address number", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "txfus": {"name": "txfus", "description": "Function for text determination", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "txgru": {"name": "txgru", "description": "Text group", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "txkop": {"name": "txkop", "description": "Copying rule for text", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": "sap://models/staging/stg_sap.yml", "build_path": null, "unrendered_config": {"materialized": "view", "schema": "sap_{{ var('directed_schema','dev') }}", "enabled": true}, "created_at": 1756850331.2640195, "relation_name": "\"postgres\".\"public_sap_dev\".\"stg_sap__t024e\"", "raw_code": "{{ config(enabled=var('sap_using_t024e', True)) }}\n\n{% set source_columns = adapter.get_columns_in_relation(ref('stg_sap__t024e_tmp')) %}\n\nwith base as (\n    select {{ remove_slashes_from_col_names(source_columns) }}\n    from {{ ref('stg_sap__t024e_tmp') }}\n),\n\nfields as (\n    select\n        {{\n            fivetran_utils.fill_staging_columns(\n                source_columns=source_columns,\n                staging_columns=get_t024e_columns()\n            )\n        }}\n    from base\n),\n\nfinal as (\n    select\n        ekorg,\n        cast(mandt as {{ dbt.type_string() }}) as mandt,\n        ekotx,\n        txfus,\n        txgru,\n        bpeff,\n        txkop,\n        kalse,\n        txadr,\n        mkals,\n        bukrs,\n        bukrs_ntr,\n        _fivetran_deleted,\n        _fivetran_synced,\n        _fivetran_sap_archived\n    from fields\n)\n\nselect *\nfrom final", "doc_blocks": [], "language": "sql", "refs": [{"name": "stg_sap__t024e_tmp", "package": null, "version": null}, {"name": "stg_sap__t024e_tmp", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.sap.remove_slashes_from_col_names", "macro.sap.get_t024e_columns", "macro.fivetran_utils.fill_staging_columns", "macro.dbt.type_string"], "nodes": ["model.sap.stg_sap__t024e_tmp"]}, "compiled_path": "target/compiled/sap/models/staging/stg_sap__t024e.sql", "compiled": true, "compiled_code": "\n\n\n\nwith base as (\n    select \n        \"ekorg\" as ekorg,\n        \"mandt\" as mandt,\n        \"ekotx\" as ekotx,\n        \"txfus\" as txfus,\n        \"txgru\" as txgru,\n        \"bpeff\" as bpeff,\n        \"txkop\" as txkop,\n        \"kalse\" as kalse,\n        \"txadr\" as txadr,\n        \"mkals\" as mkals,\n        \"bukrs\" as bukrs,\n        \"bukrs_ntr\" as bukrs_ntr,\n        \"_fivetran_deleted\" as _fivetran_deleted,\n        \"_fivetran_synced\" as _fivetran_synced,\n        \"_fivetran_sap_archived\" as _fivetran_sap_archived\n    from \"postgres\".\"public_sap_dev\".\"stg_sap__t024e_tmp\"\n),\n\nfields as (\n    select\n        \n    \n    \n    ekorg\n    \n as \n    \n    ekorg\n    \n, \n    \n    \n    mandt\n    \n as \n    \n    mandt\n    \n, \n    \n    \n    ekotx\n    \n as \n    \n    ekotx\n    \n, \n    \n    \n    txfus\n    \n as \n    \n    txfus\n    \n, \n    \n    \n    txgru\n    \n as \n    \n    txgru\n    \n, \n    \n    \n    bpeff\n    \n as \n    \n    bpeff\n    \n, \n    \n    \n    txkop\n    \n as \n    \n    txkop\n    \n, \n    \n    \n    kalse\n    \n as \n    \n    kalse\n    \n, \n    \n    \n    txadr\n    \n as \n    \n    txadr\n    \n, \n    \n    \n    mkals\n    \n as \n    \n    mkals\n    \n, \n    \n    \n    bukrs\n    \n as \n    \n    bukrs\n    \n, \n    \n    \n    bukrs_ntr\n    \n as \n    \n    bukrs_ntr\n    \n, \n    \n    \n    _fivetran_deleted\n    \n as \n    \n    _fivetran_deleted\n    \n, \n    \n    \n    _fivetran_synced\n    \n as \n    \n    _fivetran_synced\n    \n, \n    \n    \n    _fivetran_sap_archived\n    \n as \n    \n    _fivetran_sap_archived\n    \n\n\n\n    from base\n),\n\nfinal as (\n    select\n        ekorg,\n        cast(mandt as TEXT) as mandt,\n        ekotx,\n        txfus,\n        txgru,\n        bpeff,\n        txkop,\n        kalse,\n        txadr,\n        mkals,\n        bukrs,\n        bukrs_ntr,\n        _fivetran_deleted,\n        _fivetran_synced,\n        _fivetran_sap_archived\n    from fields\n)\n\nselect *\nfrom final", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null, "primary_key": [], "time_spine": null}, "model.sap.stg_sap__t001w": {"database": "postgres", "schema": "public_sap_dev", "name": "stg_sap__t001w", "resource_type": "model", "package_name": "sap", "path": "staging/stg_sap__t001w.sql", "original_file_path": "models/staging/stg_sap__t001w.sql", "unique_id": "model.sap.stg_sap__t001w", "fqn": ["sap", "staging", "stg_sap__t001w"], "alias": "stg_sap__t001w", "checksum": {"name": "sha256", "checksum": "aac0c16fba33839bf1553055031e1daa69d60672571bf0e12278e41a07d3adb1"}, "config": {"enabled": true, "alias": null, "schema": "sap_dev", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "view", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "freshness": null}, "tags": [], "description": "Plants/Branches", "columns": {"mandt": {"name": "mandt", "description": "Client", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "werks": {"name": "werks", "description": "Plant", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "_fivetran_rowid": {"name": "_fivetran_rowid", "description": "Fivetran unique row ID", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "_fivetran_deleted": {"name": "_fivetran_deleted", "description": "Fivetran deletion marker", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "_fivetran_synced": {"name": "_fivetran_synced", "description": "Fivetran sync timestamp", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "_fivetran_sap_archived": {"name": "_fivetran_sap_archived", "description": "Fivetran SAP archive marker", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "achvm": {"name": "achvm", "description": "Material status in plant", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "adrnr": {"name": "adrnr", "description": "Address number", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "awsls": {"name": "awsls", "description": "Sales organization distribution channel", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "bapovar": {"name": "bapovar", "description": "BAPI variant for plant", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "bedpl": {"name": "bedpl", "description": "MRP area", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "betol": {"name": "betol", "description": "Tolerance group", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "bukrs": {"name": "bukrs", "description": "Company code", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "bukrs_glob": {"name": "bukrs_glob", "description": "Global company code", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "butxt": {"name": "butxt", "description": "Company name", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "buvar": {"name": "buvar", "description": "Posting period variant", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "bwkey": {"name": "bwkey", "description": "Valuation area", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "bzirk": {"name": "bzirk", "description": "Sales district", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "bzqhl": {"name": "bzqhl", "description": "Plant-specific rounding profile", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "chazv": {"name": "chazv", "description": "Batch status for plant", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "chazv_old": {"name": "chazv_old", "description": "Old batch status", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "cityc": {"name": "cityc", "description": "City code", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "counc": {"name": "counc", "description": "County code", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "dep_store": {"name": "dep_store", "description": "Store department indicator", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "dkweg": {"name": "dkweg", "description": "Payment method allowed", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "dtamtc": {"name": "dtamtc", "description": "Automatic tax determination", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "dtaxr": {"name": "dtaxr", "description": "Tax region", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "dtprov": {"name": "dtprov", "description": "Withholding tax provider", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "dttaxc": {"name": "dttaxc", "description": "Withholding tax code", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "dttdsp": {"name": "dttdsp", "description": "Display withholding tax data", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "dvsart": {"name": "dvsart", "description": "Document category", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "ebukr": {"name": "ebukr", "description": "Central company code", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "ekorg": {"name": "ekorg", "description": "Purchasing organization", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "fabkl": {"name": "fabkl", "description": "Factory calendar", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "fdbuk": {"name": "fdbuk", "description": "Head office company code", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "fikrs": {"name": "fikrs", "description": "Financial management area", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "fm_derive_acc": {"name": "fm_derive_acc", "description": "FM derive account assignment", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "fmhrdate": {"name": "fmhrdate", "description": "Budget check date", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "fprfw": {"name": "fprfw", "description": "Pricing profile for warehouse", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "fsh_bom_maintenance": {"name": "fsh_bom_maintenance", "description": "Fashion BOM maintenance", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "fsh_mg_arun_req": {"name": "fsh_mg_arun_req", "description": "ARUN requirement for fashion allocation", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "fsh_seaim": {"name": "fsh_seaim", "description": "Fashion season indicator", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "fstva": {"name": "fstva", "description": "Financial statement version", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "fstvare": {"name": "fstvare", "description": "Financial statement version for reporting", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "hvr_change_time": {"name": "hvr_change_time", "description": "HVR change timestamp", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "hvr_is_deleted": {"name": "hvr_is_deleted", "description": "HVR deletion flag", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "impda": {"name": "impda", "description": "Import date", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "infmt": {"name": "infmt", "description": "Invoice format", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "iwerk": {"name": "iwerk", "description": "Maintenance planning plant", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "j_1bbranch": {"name": "j_1bbranch", "description": "Branch for Brazil localization", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "kkber": {"name": "kkber", "description": "Credit control area", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "kkowk": {"name": "kkowk", "description": "Order type", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "kokfi": {"name": "kokfi", "description": "FI indicator", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "kopim": {"name": "kopim", "description": "Payment methods copied", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "kordb": {"name": "kordb", "description": "Order backlog", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "ktop2": {"name": "ktop2", "description": "Alternative chart of accounts", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "ktopl": {"name": "ktopl", "description": "Chart of accounts", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "kunnr": {"name": "kunnr", "description": "Customer number", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "land1": {"name": "land1", "description": "Country key", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "let01": {"name": "let01", "description": "Indicator for letter 1", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "let02": {"name": "let02", "description": "Indicator for letter 2", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "let03": {"name": "let03", "description": "Indicator for letter 3", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "lifnr": {"name": "lifnr", "description": "Vendor number", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "mgvlareval": {"name": "mgvlareval", "description": "Legal valuation update indicator", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "mgvlaupd": {"name": "mgvlaupd", "description": "Material group valuation update", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "mgvupd": {"name": "mgvupd", "description": "Material valuation update indicator", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "misch": {"name": "misch", "description": "Mixed storage indicator", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "mregl": {"name": "mregl", "description": "EU tax reporting country", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "mwska": {"name": "mwska", "description": "Default sales tax code", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "mwskv": {"name": "mwskv", "description": "Default purchase tax code", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "name1": {"name": "name1", "description": "Plant name 1", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "name2": {"name": "name2", "description": "Plant name 2", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "nodetype": {"name": "nodetype", "description": "Node type", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "nschema": {"name": "nschema", "description": "Pricing procedure schema", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "offsacct": {"name": "offsacct", "description": "Offset account", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "oihcredipi": {"name": "oihcredipi", "description": "Credit indicator for OIL", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "oihvtype": {"name": "oihvtype", "description": "Handling unit type (OIL)", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "oilival": {"name": "oilival", "description": "OIL inbound valuation indicator", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "opvar": {"name": "opvar", "description": "Open item management variant", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "ort01": {"name": "ort01", "description": "City", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "periv": {"name": "periv", "description": "Fiscal year variant", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "pfach": {"name": "pfach", "description": "PO Box", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "pkosa": {"name": "pkosa", "description": "Planning strategy group", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "pp_pdate": {"name": "pp_pdate", "description": "Planned posting date", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "pst_per_var": {"name": "pst_per_var", "description": "Posting period variant", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "pstlz": {"name": "pstlz", "description": "Postal code", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "rcomp": {"name": "rcomp", "description": "Company", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "regio": {"name": "regio", "description": "Region (state/province)", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "sourcing": {"name": "sourcing", "description": "Sourcing indicator", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "spart": {"name": "spart", "description": "Division", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "spras": {"name": "spras", "description": "Language key", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "stceg": {"name": "stceg", "description": "VAT registration number", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "storetype": {"name": "storetype", "description": "Store type", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "stras": {"name": "stras", "description": "Street and house number", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "surccm": {"name": "surccm", "description": "Surrogate company code mapping", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "taxiw": {"name": "taxiw", "description": "Tax indicator for plant", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "txjcd": {"name": "txjcd", "description": "Tax jurisdiction code", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "txkrs": {"name": "txkrs", "description": "Currency translation key", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "txnam_ma1": {"name": "txnam_ma1", "description": "Tax name master 1", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "txnam_ma2": {"name": "txnam_ma2", "description": "Tax name master 2", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "txnam_ma3": {"name": "txnam_ma3", "description": "Tax name master 3", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "umkrs": {"name": "umkrs", "description": "Intercompany clearing indicator", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "vkorg": {"name": "vkorg", "description": "Sales organization", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "vlfkz": {"name": "vlfkz", "description": "Delivery split indicator", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "vstel": {"name": "vstel", "description": "Shipping point", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "vtbfi": {"name": "vtbfi", "description": "Treasury company indicator", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "vtweg": {"name": "vtweg", "description": "Distribution channel", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "waabw": {"name": "waabw", "description": "Default exchange rate type", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "waers": {"name": "waers", "description": "Currency key", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "wfvar": {"name": "wfvar", "description": "Workflow variant", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "wksop": {"name": "wksop", "description": "Store opening planning profile", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "wt_newwt": {"name": "wt_newwt", "description": "New withholding tax indicator", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "xbbba": {"name": "xbbba", "description": "Business area is mandatory", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "xbbbe": {"name": "xbbbe", "description": "Business area from plant", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "xbbbf": {"name": "xbbbf", "description": "Business area from profit center", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "xbbko": {"name": "xbbko", "description": "Business area from cost object", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "xbbsc": {"name": "xbbsc", "description": "Business area from sales order", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "xcession": {"name": "xcession", "description": "Tax exemption indicator", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "xcos": {"name": "xcos", "description": "Cost of sales accounting active", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "xcovr": {"name": "xcovr", "description": "Commitment item required", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "xeink": {"name": "xeink", "description": "Purchasing active", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "xextb": {"name": "xextb", "description": "External business partner required", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "xfdis": {"name": "xfdis", "description": "Fixed discount allowed", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "xfdmm": {"name": "xfdmm", "description": "Materials management active", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "xfdsd": {"name": "xfdsd", "description": "Sales and distribution active", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "xfmca": {"name": "xfmca", "description": "Funds management (cash-based)", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "xfmcb": {"name": "xfmcb", "description": "Funds management (budget-based)", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "xfmco": {"name": "xfmco", "description": "Funds management (commitment-based)", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "xgjrv": {"name": "xgjrv", "description": "Journal voucher active", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "xgsbe": {"name": "xgsbe", "description": "Business area financials active", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "xjvaa": {"name": "xjvaa", "description": "Joint venture accounting active", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "xkdft": {"name": "xkdft", "description": "Default tax indicator", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "xkkbi": {"name": "xkkbi", "description": "Credit management active", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "xmwsn": {"name": "xmwsn", "description": "New tax procedure active", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "xnegp": {"name": "xnegp", "description": "Negative postings allowed", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "xprod": {"name": "xprod", "description": "Product costing active", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "xskfn": {"name": "xskfn", "description": "Reconciliation account required", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "xslta": {"name": "xslta", "description": "SLA transfer active", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "xsplt": {"name": "xsplt", "description": "Document splitting active", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "xstdt": {"name": "xstdt", "description": "Use statistics date", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "xvalv": {"name": "xvalv", "description": "Use valuation view", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "xvatdate": {"name": "xvatdate", "description": "VAT date active", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "xvvwa": {"name": "xvvwa", "description": "Vendor withholding tax active", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "zone1": {"name": "zone1", "description": "Zone key", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": "sap://models/staging/stg_sap.yml", "build_path": null, "unrendered_config": {"materialized": "view", "schema": "sap_{{ var('directed_schema','dev') }}", "enabled": true}, "created_at": 1756850331.2559965, "relation_name": "\"postgres\".\"public_sap_dev\".\"stg_sap__t001w\"", "raw_code": "{{ config(enabled=var('sap_using_t001w', True)) }}\n\n{% set source_columns = adapter.get_columns_in_relation(ref('stg_sap__t001w_tmp')) %}\n\nwith base as (\n    select {{ remove_slashes_from_col_names(source_columns) }}\n    from {{ ref('stg_sap__t001w_tmp') }}\n),\n\nfields as (\n    select\n        {{\n            fivetran_utils.fill_staging_columns(\n                source_columns=source_columns,\n                staging_columns=get_t001w_columns()\n            )\n        }}\n    from base\n),\n\nfinal as (\n    select\n        _fivetran_deleted,\n        _fivetran_rowid,\n        _fivetran_synced,\n        _fivetran_sap_archived,\n        achvm,\n        adrnr,\n        awsls,\n        bapovar,\n        bedpl,\n        betol,\n        cast(bukrs as {{ dbt.type_string() }}) as bukrs,\n        bukrs_glob,\n        butxt,\n        buvar,\n        bwkey,\n        bzirk,\n        bzqhl,\n        chazv,\n        chazv_old,\n        cityc,\n        counc,\n        dep_store,\n        dkweg,\n        dtamtc,\n        dtaxr,\n        dtprov,\n        dttaxc,\n        dttdsp,\n        dvsart,\n        ebukr,\n        ekorg,\n        fabkl,\n        fdbuk,\n        fikrs,\n        fm_derive_acc,\n        fmhrdate,\n        fprfw,\n        fsh_bom_maintenance,\n        fsh_mg_arun_req,\n        fsh_seaim,\n        fstva,\n        fstvare,\n        hvr_change_time,\n        hvr_is_deleted,\n        impda,\n        infmt,\n        iwerk,\n        j_1bbranch,\n        kkber,\n        kkowk,\n        kokfi,\n        kopim,\n        kordb,\n        ktop2,\n        ktopl,\n        cast(kunnr as {{ dbt.type_string() }}) as kunnr,\n        land1,\n        let01,\n        let02,\n        let03,\n        lifnr,\n        cast(mandt as {{ dbt.type_string() }}) as mandt,\n        mgvlareval,\n        mgvlaupd,\n        mgvupd,\n        misch,\n        mregl,\n        mwska,\n        mwskv,\n        name1,\n        name2,\n        nodetype,\n        nschema,\n        offsacct,\n        oihcredipi,\n        oihvtype,\n        oilival,\n        opvar,\n        ort01,\n        periv,\n        pfach,\n        pkosa,\n        pp_pdate,\n        pst_per_var,\n        pstlz,\n        rcomp,\n        regio,\n        sourcing,\n        spart,\n        spras,\n        stceg,\n        storetype,\n        stras,\n        surccm,\n        taxiw,\n        txjcd,\n        txkrs,\n        txnam_ma1,\n        txnam_ma2,\n        txnam_ma3,\n        umkrs,\n        vkorg,\n        vlfkz,\n        vstel,\n        vtbfi,\n        vtweg,\n        waabw,\n        waers,\n        werks,\n        wfvar,\n        wksop,\n        wt_newwt,\n        xbbba,\n        xbbbe,\n        xbbbf,\n        xbbko,\n        xbbsc,\n        xcession,\n        xcos,\n        xcovr,\n        xeink,\n        xextb,\n        xfdis,\n        xfdmm,\n        xfdsd,\n        xfmca,\n        xfmcb,\n        xfmco,\n        xgjrv,\n        xgsbe,\n        xjvaa,\n        xkdft,\n        xkkbi,\n        xmwsn,\n        xnegp,\n        xprod,\n        xskfn,\n        xslta,\n        xsplt,\n        xstdt,\n        xvalv,\n        xvatdate,\n        xvvwa,\n        zone1\n    from fields\n)\n\nselect *\nfrom final", "doc_blocks": [], "language": "sql", "refs": [{"name": "stg_sap__t001w_tmp", "package": null, "version": null}, {"name": "stg_sap__t001w_tmp", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.sap.remove_slashes_from_col_names", "macro.sap.get_t001w_columns", "macro.fivetran_utils.fill_staging_columns", "macro.dbt.type_string"], "nodes": ["model.sap.stg_sap__t001w_tmp"]}, "compiled_path": "target/compiled/sap/models/staging/stg_sap__t001w.sql", "compiled": true, "compiled_code": "\n\n\n\nwith base as (\n    select \n        \"_fivetran_deleted\" as _fivetran_deleted,\n        \"_fivetran_rowid\" as _fivetran_rowid,\n        \"_fivetran_synced\" as _fivetran_synced,\n        \"_fivetran_sap_archived\" as _fivetran_sap_archived,\n        \"achvm\" as achvm,\n        \"adrnr\" as adrnr,\n        \"awsls\" as awsls,\n        \"bapovar\" as bapovar,\n        \"bedpl\" as bedpl,\n        \"betol\" as betol,\n        \"bukrs\" as bukrs,\n        \"bukrs_glob\" as bukrs_glob,\n        \"butxt\" as butxt,\n        \"buvar\" as buvar,\n        \"bwkey\" as bwkey,\n        \"bzirk\" as bzirk,\n        \"bzqhl\" as bzqhl,\n        \"chazv\" as chazv,\n        \"chazv_old\" as chazv_old,\n        \"cityc\" as cityc,\n        \"counc\" as counc,\n        \"dep_store\" as dep_store,\n        \"dkweg\" as dkweg,\n        \"dtamtc\" as dtamtc,\n        \"dtaxr\" as dtaxr,\n        \"dtprov\" as dtprov,\n        \"dttaxc\" as dttaxc,\n        \"dttdsp\" as dttdsp,\n        \"dvsart\" as dvsart,\n        \"ebukr\" as ebukr,\n        \"ekorg\" as ekorg,\n        \"fabkl\" as fabkl,\n        \"fdbuk\" as fdbuk,\n        \"fikrs\" as fikrs,\n        \"fm_derive_acc\" as fm_derive_acc,\n        \"fmhrdate\" as fmhrdate,\n        \"fprfw\" as fprfw,\n        \"fsh_bom_maintenance\" as fsh_bom_maintenance,\n        \"fsh_mg_arun_req\" as fsh_mg_arun_req,\n        \"fsh_seaim\" as fsh_seaim,\n        \"fstva\" as fstva,\n        \"fstvare\" as fstvare,\n        \"hvr_change_time\" as hvr_change_time,\n        \"hvr_is_deleted\" as hvr_is_deleted,\n        \"impda\" as impda,\n        \"infmt\" as infmt,\n        \"iwerk\" as iwerk,\n        \"j_1bbranch\" as j_1bbranch,\n        \"kkber\" as kkber,\n        \"kkowk\" as kkowk,\n        \"kokfi\" as kokfi,\n        \"kopim\" as kopim,\n        \"kordb\" as kordb,\n        \"ktop2\" as ktop2,\n        \"ktopl\" as ktopl,\n        \"kunnr\" as kunnr,\n        \"land1\" as land1,\n        \"let01\" as let01,\n        \"let02\" as let02,\n        \"let03\" as let03,\n        \"lifnr\" as lifnr,\n        \"mandt\" as mandt,\n        \"mgvlareval\" as mgvlareval,\n        \"mgvlaupd\" as mgvlaupd,\n        \"mgvupd\" as mgvupd,\n        \"misch\" as misch,\n        \"mregl\" as mregl,\n        \"mwska\" as mwska,\n        \"mwskv\" as mwskv,\n        \"name1\" as name1,\n        \"name2\" as name2,\n        \"nodetype\" as nodetype,\n        \"nschema\" as nschema,\n        \"offsacct\" as offsacct,\n        \"oihcredipi\" as oihcredipi,\n        \"oihvtype\" as oihvtype,\n        \"oilival\" as oilival,\n        \"opvar\" as opvar,\n        \"ort01\" as ort01,\n        \"periv\" as periv,\n        \"pfach\" as pfach,\n        \"pkosa\" as pkosa,\n        \"pp_pdate\" as pp_pdate,\n        \"pst_per_var\" as pst_per_var,\n        \"pstlz\" as pstlz,\n        \"rcomp\" as rcomp,\n        \"regio\" as regio,\n        \"sourcing\" as sourcing,\n        \"spart\" as spart,\n        \"spras\" as spras,\n        \"stceg\" as stceg,\n        \"storetype\" as storetype,\n        \"stras\" as stras,\n        \"surccm\" as surccm,\n        \"taxiw\" as taxiw,\n        \"txjcd\" as txjcd,\n        \"txkrs\" as txkrs,\n        \"txnam_ma1\" as txnam_ma1,\n        \"txnam_ma2\" as txnam_ma2,\n        \"txnam_ma3\" as txnam_ma3,\n        \"umkrs\" as umkrs,\n        \"vkorg\" as vkorg,\n        \"vlfkz\" as vlfkz,\n        \"vstel\" as vstel,\n        \"vtbfi\" as vtbfi,\n        \"vtweg\" as vtweg,\n        \"waabw\" as waabw,\n        \"waers\" as waers,\n        \"werks\" as werks,\n        \"wfvar\" as wfvar,\n        \"wksop\" as wksop,\n        \"wt_newwt\" as wt_newwt,\n        \"xbbba\" as xbbba,\n        \"xbbbe\" as xbbbe,\n        \"xbbbf\" as xbbbf,\n        \"xbbko\" as xbbko,\n        \"xbbsc\" as xbbsc,\n        \"xcession\" as xcession,\n        \"xcos\" as xcos,\n        \"xcovr\" as xcovr,\n        \"xeink\" as xeink,\n        \"xextb\" as xextb,\n        \"xfdis\" as xfdis,\n        \"xfdmm\" as xfdmm,\n        \"xfdsd\" as xfdsd,\n        \"xfmca\" as xfmca,\n        \"xfmcb\" as xfmcb,\n        \"xfmco\" as xfmco,\n        \"xgjrv\" as xgjrv,\n        \"xgsbe\" as xgsbe,\n        \"xjvaa\" as xjvaa,\n        \"xkdft\" as xkdft,\n        \"xkkbi\" as xkkbi,\n        \"xmwsn\" as xmwsn,\n        \"xnegp\" as xnegp,\n        \"xprod\" as xprod,\n        \"xskfn\" as xskfn,\n        \"xslta\" as xslta,\n        \"xsplt\" as xsplt,\n        \"xstdt\" as xstdt,\n        \"xvalv\" as xvalv,\n        \"xvatdate\" as xvatdate,\n        \"xvvwa\" as xvvwa,\n        \"zone1\" as zone1\n    from \"postgres\".\"public_sap_dev\".\"stg_sap__t001w_tmp\"\n),\n\nfields as (\n    select\n        \n    \n    \n    _fivetran_deleted\n    \n as \n    \n    _fivetran_deleted\n    \n, \n    \n    \n    _fivetran_rowid\n    \n as \n    \n    _fivetran_rowid\n    \n, \n    \n    \n    _fivetran_synced\n    \n as \n    \n    _fivetran_synced\n    \n, \n    \n    \n    _fivetran_sap_archived\n    \n as \n    \n    _fivetran_sap_archived\n    \n, \n    \n    \n    achvm\n    \n as \n    \n    achvm\n    \n, \n    \n    \n    adrnr\n    \n as \n    \n    adrnr\n    \n, \n    \n    \n    awsls\n    \n as \n    \n    awsls\n    \n, \n    \n    \n    bapovar\n    \n as \n    \n    bapovar\n    \n, \n    \n    \n    bedpl\n    \n as \n    \n    bedpl\n    \n, \n    \n    \n    betol\n    \n as \n    \n    betol\n    \n, \n    \n    \n    bukrs\n    \n as \n    \n    bukrs\n    \n, \n    \n    \n    bukrs_glob\n    \n as \n    \n    bukrs_glob\n    \n, \n    \n    \n    butxt\n    \n as \n    \n    butxt\n    \n, \n    \n    \n    buvar\n    \n as \n    \n    buvar\n    \n, \n    \n    \n    bwkey\n    \n as \n    \n    bwkey\n    \n, \n    \n    \n    bzirk\n    \n as \n    \n    bzirk\n    \n, \n    \n    \n    bzqhl\n    \n as \n    \n    bzqhl\n    \n, \n    \n    \n    chazv\n    \n as \n    \n    chazv\n    \n, \n    \n    \n    chazv_old\n    \n as \n    \n    chazv_old\n    \n, \n    \n    \n    cityc\n    \n as \n    \n    cityc\n    \n, \n    \n    \n    counc\n    \n as \n    \n    counc\n    \n, \n    \n    \n    dep_store\n    \n as \n    \n    dep_store\n    \n, \n    \n    \n    dkweg\n    \n as \n    \n    dkweg\n    \n, \n    \n    \n    dtamtc\n    \n as \n    \n    dtamtc\n    \n, \n    \n    \n    dtaxr\n    \n as \n    \n    dtaxr\n    \n, \n    \n    \n    dtprov\n    \n as \n    \n    dtprov\n    \n, \n    \n    \n    dttaxc\n    \n as \n    \n    dttaxc\n    \n, \n    \n    \n    dttdsp\n    \n as \n    \n    dttdsp\n    \n, \n    \n    \n    dvsart\n    \n as \n    \n    dvsart\n    \n, \n    \n    \n    ebukr\n    \n as \n    \n    ebukr\n    \n, \n    \n    \n    ekorg\n    \n as \n    \n    ekorg\n    \n, \n    \n    \n    fabkl\n    \n as \n    \n    fabkl\n    \n, \n    \n    \n    fdbuk\n    \n as \n    \n    fdbuk\n    \n, \n    \n    \n    fikrs\n    \n as \n    \n    fikrs\n    \n, \n    \n    \n    fm_derive_acc\n    \n as \n    \n    fm_derive_acc\n    \n, \n    \n    \n    fmhrdate\n    \n as \n    \n    fmhrdate\n    \n, \n    \n    \n    fprfw\n    \n as \n    \n    fprfw\n    \n, \n    \n    \n    fsh_bom_maintenance\n    \n as \n    \n    fsh_bom_maintenance\n    \n, \n    \n    \n    fsh_mg_arun_req\n    \n as \n    \n    fsh_mg_arun_req\n    \n, \n    \n    \n    fsh_seaim\n    \n as \n    \n    fsh_seaim\n    \n, \n    \n    \n    fstva\n    \n as \n    \n    fstva\n    \n, \n    \n    \n    fstvare\n    \n as \n    \n    fstvare\n    \n, \n    \n    \n    hvr_change_time\n    \n as \n    \n    hvr_change_time\n    \n, \n    \n    \n    hvr_is_deleted\n    \n as \n    \n    hvr_is_deleted\n    \n, \n    \n    \n    impda\n    \n as \n    \n    impda\n    \n, \n    \n    \n    infmt\n    \n as \n    \n    infmt\n    \n, \n    \n    \n    iwerk\n    \n as \n    \n    iwerk\n    \n, \n    \n    \n    j_1bbranch\n    \n as \n    \n    j_1bbranch\n    \n, \n    \n    \n    kkber\n    \n as \n    \n    kkber\n    \n, \n    \n    \n    kkowk\n    \n as \n    \n    kkowk\n    \n, \n    \n    \n    kokfi\n    \n as \n    \n    kokfi\n    \n, \n    \n    \n    kopim\n    \n as \n    \n    kopim\n    \n, \n    \n    \n    kordb\n    \n as \n    \n    kordb\n    \n, \n    \n    \n    ktop2\n    \n as \n    \n    ktop2\n    \n, \n    \n    \n    ktopl\n    \n as \n    \n    ktopl\n    \n, \n    \n    \n    kunnr\n    \n as \n    \n    kunnr\n    \n, \n    \n    \n    land1\n    \n as \n    \n    land1\n    \n, \n    \n    \n    let01\n    \n as \n    \n    let01\n    \n, \n    \n    \n    let02\n    \n as \n    \n    let02\n    \n, \n    \n    \n    let03\n    \n as \n    \n    let03\n    \n, \n    \n    \n    lifnr\n    \n as \n    \n    lifnr\n    \n, \n    \n    \n    mandt\n    \n as \n    \n    mandt\n    \n, \n    \n    \n    mgvlareval\n    \n as \n    \n    mgvlareval\n    \n, \n    \n    \n    mgvlaupd\n    \n as \n    \n    mgvlaupd\n    \n, \n    \n    \n    mgvupd\n    \n as \n    \n    mgvupd\n    \n, \n    \n    \n    misch\n    \n as \n    \n    misch\n    \n, \n    \n    \n    mregl\n    \n as \n    \n    mregl\n    \n, \n    \n    \n    mwska\n    \n as \n    \n    mwska\n    \n, \n    \n    \n    mwskv\n    \n as \n    \n    mwskv\n    \n, \n    \n    \n    name1\n    \n as \n    \n    name1\n    \n, \n    \n    \n    name2\n    \n as \n    \n    name2\n    \n, \n    \n    \n    nodetype\n    \n as \n    \n    nodetype\n    \n, \n    \n    \n    nschema\n    \n as \n    \n    nschema\n    \n, \n    \n    \n    offsacct\n    \n as \n    \n    offsacct\n    \n, \n    \n    \n    oihcredipi\n    \n as \n    \n    oihcredipi\n    \n, \n    \n    \n    oihvtype\n    \n as \n    \n    oihvtype\n    \n, \n    \n    \n    oilival\n    \n as \n    \n    oilival\n    \n, \n    \n    \n    opvar\n    \n as \n    \n    opvar\n    \n, \n    \n    \n    ort01\n    \n as \n    \n    ort01\n    \n, \n    \n    \n    periv\n    \n as \n    \n    periv\n    \n, \n    \n    \n    pfach\n    \n as \n    \n    pfach\n    \n, \n    \n    \n    pkosa\n    \n as \n    \n    pkosa\n    \n, \n    \n    \n    pp_pdate\n    \n as \n    \n    pp_pdate\n    \n, \n    \n    \n    pst_per_var\n    \n as \n    \n    pst_per_var\n    \n, \n    \n    \n    pstlz\n    \n as \n    \n    pstlz\n    \n, \n    \n    \n    rcomp\n    \n as \n    \n    rcomp\n    \n, \n    \n    \n    regio\n    \n as \n    \n    regio\n    \n, \n    \n    \n    sourcing\n    \n as \n    \n    sourcing\n    \n, \n    \n    \n    spart\n    \n as \n    \n    spart\n    \n, \n    \n    \n    spras\n    \n as \n    \n    spras\n    \n, \n    \n    \n    stceg\n    \n as \n    \n    stceg\n    \n, \n    \n    \n    storetype\n    \n as \n    \n    storetype\n    \n, \n    \n    \n    stras\n    \n as \n    \n    stras\n    \n, \n    \n    \n    surccm\n    \n as \n    \n    surccm\n    \n, \n    \n    \n    taxiw\n    \n as \n    \n    taxiw\n    \n, \n    \n    \n    txjcd\n    \n as \n    \n    txjcd\n    \n, \n    \n    \n    txkrs\n    \n as \n    \n    txkrs\n    \n, \n    \n    \n    txnam_ma1\n    \n as \n    \n    txnam_ma1\n    \n, \n    \n    \n    txnam_ma2\n    \n as \n    \n    txnam_ma2\n    \n, \n    \n    \n    txnam_ma3\n    \n as \n    \n    txnam_ma3\n    \n, \n    \n    \n    umkrs\n    \n as \n    \n    umkrs\n    \n, \n    \n    \n    vkorg\n    \n as \n    \n    vkorg\n    \n, \n    \n    \n    vlfkz\n    \n as \n    \n    vlfkz\n    \n, \n    \n    \n    vstel\n    \n as \n    \n    vstel\n    \n, \n    \n    \n    vtbfi\n    \n as \n    \n    vtbfi\n    \n, \n    \n    \n    vtweg\n    \n as \n    \n    vtweg\n    \n, \n    \n    \n    waabw\n    \n as \n    \n    waabw\n    \n, \n    \n    \n    waers\n    \n as \n    \n    waers\n    \n, \n    \n    \n    werks\n    \n as \n    \n    werks\n    \n, \n    \n    \n    wfvar\n    \n as \n    \n    wfvar\n    \n, \n    \n    \n    wksop\n    \n as \n    \n    wksop\n    \n, \n    \n    \n    wt_newwt\n    \n as \n    \n    wt_newwt\n    \n, \n    \n    \n    xbbba\n    \n as \n    \n    xbbba\n    \n, \n    \n    \n    xbbbe\n    \n as \n    \n    xbbbe\n    \n, \n    \n    \n    xbbbf\n    \n as \n    \n    xbbbf\n    \n, \n    \n    \n    xbbko\n    \n as \n    \n    xbbko\n    \n, \n    \n    \n    xbbsc\n    \n as \n    \n    xbbsc\n    \n, \n    \n    \n    xcession\n    \n as \n    \n    xcession\n    \n, \n    \n    \n    xcos\n    \n as \n    \n    xcos\n    \n, \n    \n    \n    xcovr\n    \n as \n    \n    xcovr\n    \n, \n    \n    \n    xeink\n    \n as \n    \n    xeink\n    \n, \n    \n    \n    xextb\n    \n as \n    \n    xextb\n    \n, \n    \n    \n    xfdis\n    \n as \n    \n    xfdis\n    \n, \n    \n    \n    xfdmm\n    \n as \n    \n    xfdmm\n    \n, \n    \n    \n    xfdsd\n    \n as \n    \n    xfdsd\n    \n, \n    \n    \n    xfmca\n    \n as \n    \n    xfmca\n    \n, \n    \n    \n    xfmcb\n    \n as \n    \n    xfmcb\n    \n, \n    \n    \n    xfmco\n    \n as \n    \n    xfmco\n    \n, \n    \n    \n    xgjrv\n    \n as \n    \n    xgjrv\n    \n, \n    \n    \n    xgsbe\n    \n as \n    \n    xgsbe\n    \n, \n    \n    \n    xjvaa\n    \n as \n    \n    xjvaa\n    \n, \n    \n    \n    xkdft\n    \n as \n    \n    xkdft\n    \n, \n    \n    \n    xkkbi\n    \n as \n    \n    xkkbi\n    \n, \n    \n    \n    xmwsn\n    \n as \n    \n    xmwsn\n    \n, \n    \n    \n    xnegp\n    \n as \n    \n    xnegp\n    \n, \n    \n    \n    xprod\n    \n as \n    \n    xprod\n    \n, \n    \n    \n    xskfn\n    \n as \n    \n    xskfn\n    \n, \n    \n    \n    xslta\n    \n as \n    \n    xslta\n    \n, \n    \n    \n    xsplt\n    \n as \n    \n    xsplt\n    \n, \n    \n    \n    xstdt\n    \n as \n    \n    xstdt\n    \n, \n    \n    \n    xvalv\n    \n as \n    \n    xvalv\n    \n, \n    \n    \n    xvatdate\n    \n as \n    \n    xvatdate\n    \n, \n    \n    \n    xvvwa\n    \n as \n    \n    xvvwa\n    \n, \n    \n    \n    zone1\n    \n as \n    \n    zone1\n    \n\n\n\n    from base\n),\n\nfinal as (\n    select\n        _fivetran_deleted,\n        _fivetran_rowid,\n        _fivetran_synced,\n        _fivetran_sap_archived,\n        achvm,\n        adrnr,\n        awsls,\n        bapovar,\n        bedpl,\n        betol,\n        cast(bukrs as TEXT) as bukrs,\n        bukrs_glob,\n        butxt,\n        buvar,\n        bwkey,\n        bzirk,\n        bzqhl,\n        chazv,\n        chazv_old,\n        cityc,\n        counc,\n        dep_store,\n        dkweg,\n        dtamtc,\n        dtaxr,\n        dtprov,\n        dttaxc,\n        dttdsp,\n        dvsart,\n        ebukr,\n        ekorg,\n        fabkl,\n        fdbuk,\n        fikrs,\n        fm_derive_acc,\n        fmhrdate,\n        fprfw,\n        fsh_bom_maintenance,\n        fsh_mg_arun_req,\n        fsh_seaim,\n        fstva,\n        fstvare,\n        hvr_change_time,\n        hvr_is_deleted,\n        impda,\n        infmt,\n        iwerk,\n        j_1bbranch,\n        kkber,\n        kkowk,\n        kokfi,\n        kopim,\n        kordb,\n        ktop2,\n        ktopl,\n        cast(kunnr as TEXT) as kunnr,\n        land1,\n        let01,\n        let02,\n        let03,\n        lifnr,\n        cast(mandt as TEXT) as mandt,\n        mgvlareval,\n        mgvlaupd,\n        mgvupd,\n        misch,\n        mregl,\n        mwska,\n        mwskv,\n        name1,\n        name2,\n        nodetype,\n        nschema,\n        offsacct,\n        oihcredipi,\n        oihvtype,\n        oilival,\n        opvar,\n        ort01,\n        periv,\n        pfach,\n        pkosa,\n        pp_pdate,\n        pst_per_var,\n        pstlz,\n        rcomp,\n        regio,\n        sourcing,\n        spart,\n        spras,\n        stceg,\n        storetype,\n        stras,\n        surccm,\n        taxiw,\n        txjcd,\n        txkrs,\n        txnam_ma1,\n        txnam_ma2,\n        txnam_ma3,\n        umkrs,\n        vkorg,\n        vlfkz,\n        vstel,\n        vtbfi,\n        vtweg,\n        waabw,\n        waers,\n        werks,\n        wfvar,\n        wksop,\n        wt_newwt,\n        xbbba,\n        xbbbe,\n        xbbbf,\n        xbbko,\n        xbbsc,\n        xcession,\n        xcos,\n        xcovr,\n        xeink,\n        xextb,\n        xfdis,\n        xfdmm,\n        xfdsd,\n        xfmca,\n        xfmcb,\n        xfmco,\n        xgjrv,\n        xgsbe,\n        xjvaa,\n        xkdft,\n        xkkbi,\n        xmwsn,\n        xnegp,\n        xprod,\n        xskfn,\n        xslta,\n        xsplt,\n        xstdt,\n        xvalv,\n        xvatdate,\n        xvvwa,\n        zone1\n    from fields\n)\n\nselect *\nfrom final", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null, "primary_key": [], "time_spine": null}, "model.sap.stg_sap__ekko": {"database": "postgres", "schema": "public_sap_dev", "name": "stg_sap__ekko", "resource_type": "model", "package_name": "sap", "path": "staging/stg_sap__ekko.sql", "original_file_path": "models/staging/stg_sap__ekko.sql", "unique_id": "model.sap.stg_sap__ekko", "fqn": ["sap", "staging", "stg_sap__ekko"], "alias": "stg_sap__ekko", "checksum": {"name": "sha256", "checksum": "0aca2b4f81fb9576e97b96860cf854b5efc0d5c7a119ef8fdf5cae77b1d03299"}, "config": {"enabled": true, "alias": null, "schema": "sap_dev", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "view", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "freshness": null}, "tags": [], "description": "Purchasing document header", "columns": {"_fivetran_deleted": {"name": "_fivetran_deleted", "description": "Fivetran deletion marker", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "_fivetran_sap_archived": {"name": "_fivetran_sap_archived", "description": "Fivetran SAP archive marker", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "_fivetran_synced": {"name": "_fivetran_synced", "description": "Fivetran sync timestamp", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "ebeln": {"name": "ebeln", "description": "Purchasing document number", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "mandt": {"name": "mandt", "description": "Client", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "abgru": {"name": "abgru", "description": "Reason for rejection", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "absgr": {"name": "absgr", "description": "Reason code", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "addnr": {"name": "addnr", "description": "Address number", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "adrnr": {"name": "adrnr", "description": "Vendor address number", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "aedat": {"name": "aedat", "description": "Document change date", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "angdt": {"name": "angdt", "description": "Quotation date", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "angnr": {"name": "angnr", "description": "Quotation number", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "aurel_allow": {"name": "aurel_allow", "description": "Allow automatic release", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "ausnr": {"name": "ausnr", "description": "Authorization number", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "autlf": {"name": "autlf", "description": "Complete delivery indicator", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "bedat": {"name": "bedat", "description": "Purchasing document date", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "bnddt": {"name": "bnddt", "description": "Deadline for submission", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "bsakz": {"name": "bsakz", "description": "Collective number indicator", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "bsart": {"name": "bsart", "description": "Purchasing document type", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "bstyp": {"name": "bstyp", "description": "Purchasing document category", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "budg_type": {"name": "budg_type", "description": "Budget type", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "bukrs": {"name": "bukrs", "description": "Company code", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "bwbdt": {"name": "bwbdt", "description": "Start of validity", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "check_type": {"name": "check_type", "description": "Type of check", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "con_distr_lev": {"name": "con_distr_lev", "description": "Contract distribution level", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "con_otb_req": {"name": "con_otb_req", "description": "OTB check required", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "con_prebook_lev": {"name": "con_prebook_lev", "description": "Prebook level for contract", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "contract_allow": {"name": "contract_allow", "description": "Contract type allowed", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "delper_allow": {"name": "delper_allow", "description": "Partial delivery allowed", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "description": {"name": "description", "description": "Header description", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "dpamt": {"name": "dpamt", "description": "Down payment amount", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "dpdat": {"name": "dpdat", "description": "Down payment date", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "dppct": {"name": "dppct", "description": "Down payment percentage", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "dptyp": {"name": "dptyp", "description": "Down payment category", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "eindt": {"name": "eindt", "description": "Delivery date", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "eindt_allow": {"name": "eindt_allow", "description": "Allow delivery date changes", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "ekgrp": {"name": "ekgrp", "description": "Purchasing group", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "ekgrp_allow": {"name": "ekgrp_allow", "description": "Purchasing group allowed", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "ekorg": {"name": "ekorg", "description": "Purchasing organization", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "eq_eindt": {"name": "eq_eindt", "description": "Equal delivery date", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "eq_werks": {"name": "eq_werks", "description": "Equal plant", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "ernam": {"name": "ernam", "description": "Created by", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "exnum": {"name": "exnum", "description": "Export/import number", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "fixpo": {"name": "fixpo", "description": "Fixed vendor indicator", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "fixpo_allow": {"name": "fixpo_allow", "description": "Fixed vendor allowed", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "force_cnt": {"name": "force_cnt", "description": "Forced confirmation count", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "force_id": {"name": "force_id", "description": "Forced confirmation ID", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "frggr": {"name": "frggr", "description": "Release group", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "frgke": {"name": "frgke", "description": "Release code", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "frgrl": {"name": "frgrl", "description": "Release strategy", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "frgsx": {"name": "frgsx", "description": "Release status", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "frgzu": {"name": "frgzu", "description": "Release indicator", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "fsh_item_group": {"name": "fsh_item_group", "description": "Item group (fashion)", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "fsh_os_stg_change": {"name": "fsh_os_stg_change", "description": "One-step stage change", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "fsh_snst_status": {"name": "fsh_snst_status", "description": "Seasonal status", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "fsh_transaction": {"name": "fsh_transaction", "description": "Fashion transaction type", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "fsh_vas_last_item": {"name": "fsh_vas_last_item", "description": "Last VAS item", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "gwldt": {"name": "gwldt", "description": "Valid-to date", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "handoverloc": {"name": "handoverloc", "description": "Handover location", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "hierarchy_exists": {"name": "hierarchy_exists", "description": "Document hierarchy exists", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "hvr_change_time": {"name": "hvr_change_time", "description": "HVR change timestamp", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "hvr_is_deleted": {"name": "hvr_is_deleted", "description": "HVR deletion flag", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "ihran": {"name": "ihran", "description": "Vendor internal reference", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "ihrez": {"name": "ihrez", "description": "Vendor quotation number", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "inco1": {"name": "inco1", "description": "Incoterms (part 1)", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "inco2": {"name": "inco2", "description": "Incoterms (part 2)", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "inco2_l": {"name": "inco2_l", "description": "Incoterms long text 2", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "inco3_l": {"name": "inco3_l", "description": "Incoterms long text 3", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "incov": {"name": "incov", "description": "Incoterms version", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "kalsm": {"name": "kalsm", "description": "Calculation schema", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "kdatb": {"name": "kdatb", "description": "Valid-from date", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "kdate": {"name": "kdate", "description": "Pricing date", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "key_id": {"name": "key_id", "description": "Key ID", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "key_id_allow": {"name": "key_id_allow", "description": "Allow changes to key ID", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "knumv": {"name": "knumv", "description": "Document condition number", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "konnr": {"name": "konnr", "description": "Contract number", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "kornr": {"name": "kornr", "description": "Outline agreement item", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "ktwrt": {"name": "ktwrt", "description": "Total value of items", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "kufix": {"name": "kufix", "description": "Exchange rate fixed", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "kunnr": {"name": "kunnr", "description": "Customer number", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "lands": {"name": "lands", "description": "Country key", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "lblif": {"name": "lblif", "description": "Vendor delivery completed", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "legal_contract": {"name": "legal_contract", "description": "Legal contract ID", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "lifnr": {"name": "lifnr", "description": "Vendor account number", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "lifre": {"name": "lifre", "description": "Subcontractor number", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "llief": {"name": "llief", "description": "Main vendor", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "loekz": {"name": "loekz", "description": "Deletion indicator in purchasing document", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "logsy": {"name": "logsy", "description": "Logical system", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "lphis": {"name": "lphis", "description": "Change history", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "lponr": {"name": "lponr", "description": "Last PO number", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "ltsnr_allow": {"name": "ltsnr_allow", "description": "Allowed supplier route", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "memory": {"name": "memory", "description": "Buffer memory setting", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "memorytype": {"name": "memorytype", "description": "Buffer memory type", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "msr_id": {"name": "msr_id", "description": "Material substitution rule", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "otb_cond_type": {"name": "otb_cond_type", "description": "OTB condition type", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "otb_curr": {"name": "otb_curr", "description": "OTB currency", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "otb_level": {"name": "otb_level", "description": "OTB level", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "otb_reason": {"name": "otb_reason", "description": "Reason for OTB block", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "otb_res_value": {"name": "otb_res_value", "description": "Released value OTB", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "otb_spec_value": {"name": "otb_spec_value", "description": "Special release value OTB", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "otb_status": {"name": "otb_status", "description": "OTB check status", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "otb_value": {"name": "otb_value", "description": "OTB value", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "pincr": {"name": "pincr", "description": "Price increase percentage", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "pohf_type": {"name": "pohf_type", "description": "Purchase order history flag type", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "procstat": {"name": "procstat", "description": "Processing status", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "pstyp_allow": {"name": "pstyp_allow", "description": "Item category allowed", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "reason_code": {"name": "reason_code", "description": "Rejection reason", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "release_date": {"name": "release_date", "description": "Release date", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "reloc_id": {"name": "reloc_id", "description": "Relocation ID", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "reloc_seq_id": {"name": "reloc_seq_id", "description": "Relocation sequence ID", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "reswk": {"name": "reswk", "description": "Supplying plant", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "retpc": {"name": "retpc", "description": "Return percentage", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "rettp": {"name": "rettp", "description": "Return type", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "revno": {"name": "revno", "description": "Revision number", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "rlwrt": {"name": "rlwrt", "description": "Release value", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "scmproc": {"name": "scmproc", "description": "SCM process type", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "shipcond": {"name": "shipcond", "description": "Shipping conditions", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "source_logsys": {"name": "source_logsys", "description": "Source logical system", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "spr_rsn_profile": {"name": "spr_rsn_profile", "description": "Delivery date reason profile", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "spras": {"name": "spras", "description": "Language key", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "stafo": {"name": "stafo", "description": "Item status", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "stako": {"name": "stako", "description": "Header status", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "statu": {"name": "statu", "description": "Processing status", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "stceg": {"name": "stceg", "description": "VAT registration number", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "stceg_l": {"name": "stceg_l", "description": "VAT registration number (long)", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "submi": {"name": "submi", "description": "Subcontracting indicator", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "telf1": {"name": "telf1", "description": "Telephone number", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "threshold_exists": {"name": "threshold_exists", "description": "Threshold value exists", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "unsez": {"name": "unsez", "description": "Non-deductible input tax indicator", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "upinc": {"name": "upinc", "description": "Price update indicator", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "verkf": {"name": "verkf", "description": "Salesperson at vendor", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "vsart": {"name": "vsart", "description": "Shipping type", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "vzskz": {"name": "vzskz", "description": "Payment card plan", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "waers": {"name": "waers", "description": "Currency key", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "weakt": {"name": "weakt", "description": "Goods receipt indicator", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "werks_allow": {"name": "werks_allow", "description": "Plant allowed", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "wkurs": {"name": "wkurs", "description": "Exchange rate", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "zbd1p": {"name": "zbd1p", "description": "Cash discount percentage 1", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "zbd1t": {"name": "zbd1t", "description": "Cash discount days 1", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "zbd2p": {"name": "zbd2p", "description": "Cash discount percentage 2", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "zbd2t": {"name": "zbd2t", "description": "Cash discount days 2", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "zbd3t": {"name": "zbd3t", "description": "Net payment terms period", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "zterm": {"name": "zterm", "description": "Terms of payment key", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": "sap://models/staging/stg_sap.yml", "build_path": null, "unrendered_config": {"materialized": "view", "schema": "sap_{{ var('directed_schema','dev') }}", "enabled": true}, "created_at": 1756850330.725261, "relation_name": "\"postgres\".\"public_sap_dev\".\"stg_sap__ekko\"", "raw_code": "{{ config(enabled=var('sap_using_ekko', True)) }}\n\n{% set source_columns = adapter.get_columns_in_relation(ref('stg_sap__ekko_tmp')) %}\n\nwith base as (\n    select {{ remove_slashes_from_col_names(source_columns) }}\n    from {{ ref('stg_sap__ekko_tmp') }}\n),\n\nfields as (\n    select\n        {{\n            fivetran_utils.fill_staging_columns(\n                source_columns=source_columns,\n                staging_columns=get_ekko_columns()\n            )\n        }}\n    from base\n),\n\nfinal as (\n    select\n        abgru,\n        absgr,\n        addnr,\n        adrnr,\n        aedat,\n        angdt,\n        angnr,\n        aurel_allow,\n        ausnr,\n        autlf,\n        bedat,\n        bnddt,\n        bsakz,\n        bsart,\n        bstyp,\n        bwbdt,\n        budg_type,\n        cast(bukrs as {{ dbt.type_string() }}) as bukrs,\n        check_type,\n        con_distr_lev,\n        con_otb_req,\n        con_prebook_lev,\n        contract_allow,\n        delper_allow,\n        description,\n        dpamt,\n        dpdat,\n        dppct,\n        dptyp,\n        cast(ebeln as {{ dbt.type_string() }}) as ebeln,\n        eindt,\n        eindt_allow,\n        ekgrp,\n        ekgrp_allow,\n        ekorg,\n        eq_eindt,\n        eq_werks,\n        ernam,\n        exnum,\n        fixpo,\n        fixpo_allow,\n        force_cnt,\n        force_id,\n        frggr,\n        frgke,\n        frgrl,\n        frgsx,\n        frgzu,\n        fsh_item_group,\n        fsh_os_stg_change,\n        fsh_snst_status,\n        fsh_transaction,\n        fsh_vas_last_item,\n        gwldt,\n        handoverloc,\n        hierarchy_exists,\n        hvr_change_time,\n        hvr_is_deleted,\n        ihran,\n        ihrez,\n        inco1,\n        inco2,\n        inco2_l,\n        inco3_l,\n        incov,\n        kalsm,\n        kdatb,\n        kdate,\n        key_id,\n        key_id_allow,\n        knumv,\n        konnr,\n        kornr,\n        ktwrt,\n        kufix,\n        cast(kunnr as {{ dbt.type_string() }}) as kunnr,\n        lands,\n        lblif,\n        legal_contract,\n        lifnr,\n        lifre,\n        llief,\n        loekz,\n        logsy,\n        lphis,\n        lponr,\n        ltsnr_allow,\n        cast(mandt as {{ dbt.type_string() }}) as mandt,\n        memory,\n        memorytype,\n        msr_id,\n        otb_cond_type,\n        otb_curr,\n        otb_level,\n        otb_reason,\n        otb_res_value,\n        otb_spec_value,\n        otb_status,\n        otb_value,\n        pincr,\n        pohf_type,\n        procstat,\n        pstyp_allow,\n        release_date,\n        reason_code,\n        reloc_id,\n        reloc_seq_id,\n        reswk,\n        retpc,\n        rettp,\n        revno,\n        rlwrt,\n        scmproc,\n        shipcond,\n        source_logsys,\n        spr_rsn_profile,\n        spras,\n        stafo,\n        stako,\n        statu,\n        stceg,\n        stceg_l,\n        submi,\n        telf1,\n        threshold_exists,\n        unsez,\n        upinc,\n        verkf,\n        vsart,\n        vzskz,\n        waers,\n        weakt,\n        werks_allow,\n        wkurs,\n        zbd1p,\n        zbd1t,\n        zbd2p,\n        zbd2t,\n        zbd3t,\n        zterm,\n        _fivetran_sap_archived,\n        _fivetran_deleted,\n        _fivetran_synced\n    from fields\n)\n\nselect *\nfrom final", "doc_blocks": [], "language": "sql", "refs": [{"name": "stg_sap__ekko_tmp", "package": null, "version": null}, {"name": "stg_sap__ekko_tmp", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.sap.remove_slashes_from_col_names", "macro.sap.get_ekko_columns", "macro.fivetran_utils.fill_staging_columns", "macro.dbt.type_string"], "nodes": ["model.sap.stg_sap__ekko_tmp"]}, "compiled_path": "target/compiled/sap/models/staging/stg_sap__ekko.sql", "compiled": true, "compiled_code": "\n\n\n\nwith base as (\n    select \n        \"abgru\" as abgru,\n        \"absgr\" as absgr,\n        \"addnr\" as addnr,\n        \"adrnr\" as adrnr,\n        \"aedat\" as aedat,\n        \"angdt\" as angdt,\n        \"angnr\" as angnr,\n        \"aurel_allow\" as aurel_allow,\n        \"ausnr\" as ausnr,\n        \"autlf\" as autlf,\n        \"bedat\" as bedat,\n        \"bnddt\" as bnddt,\n        \"bsakz\" as bsakz,\n        \"bsart\" as bsart,\n        \"bstyp\" as bstyp,\n        \"bwbdt\" as bwbdt,\n        \"budg_type\" as budg_type,\n        \"bukrs\" as bukrs,\n        \"check_type\" as check_type,\n        \"con_distr_lev\" as con_distr_lev,\n        \"con_otb_req\" as con_otb_req,\n        \"con_prebook_lev\" as con_prebook_lev,\n        \"contract_allow\" as contract_allow,\n        \"delper_allow\" as delper_allow,\n        \"description\" as description,\n        \"dpamt\" as dpamt,\n        \"dpdat\" as dpdat,\n        \"dppct\" as dppct,\n        \"dptyp\" as dptyp,\n        \"ebeln\" as ebeln,\n        \"eindt\" as eindt,\n        \"eindt_allow\" as eindt_allow,\n        \"ekgrp\" as ekgrp,\n        \"ekgrp_allow\" as ekgrp_allow,\n        \"ekorg\" as ekorg,\n        \"eq_eindt\" as eq_eindt,\n        \"eq_werks\" as eq_werks,\n        \"ernam\" as ernam,\n        \"exnum\" as exnum,\n        \"fixpo\" as fixpo,\n        \"fixpo_allow\" as fixpo_allow,\n        \"force_cnt\" as force_cnt,\n        \"force_id\" as force_id,\n        \"frggr\" as frggr,\n        \"frgke\" as frgke,\n        \"frgrl\" as frgrl,\n        \"frgsx\" as frgsx,\n        \"frgzu\" as frgzu,\n        \"fsh_item_group\" as fsh_item_group,\n        \"fsh_os_stg_change\" as fsh_os_stg_change,\n        \"fsh_snst_status\" as fsh_snst_status,\n        \"fsh_transaction\" as fsh_transaction,\n        \"fsh_vas_last_item\" as fsh_vas_last_item,\n        \"gwldt\" as gwldt,\n        \"handoverloc\" as handoverloc,\n        \"hierarchy_exists\" as hierarchy_exists,\n        \"hvr_change_time\" as hvr_change_time,\n        \"hvr_is_deleted\" as hvr_is_deleted,\n        \"ihran\" as ihran,\n        \"ihrez\" as ihrez,\n        \"inco1\" as inco1,\n        \"inco2\" as inco2,\n        \"inco2_l\" as inco2_l,\n        \"inco3_l\" as inco3_l,\n        \"incov\" as incov,\n        \"kalsm\" as kalsm,\n        \"kdatb\" as kdatb,\n        \"kdate\" as kdate,\n        \"key_id\" as key_id,\n        \"key_id_allow\" as key_id_allow,\n        \"knumv\" as knumv,\n        \"konnr\" as konnr,\n        \"kornr\" as kornr,\n        \"ktwrt\" as ktwrt,\n        \"kufix\" as kufix,\n        \"kunnr\" as kunnr,\n        \"lands\" as lands,\n        \"lblif\" as lblif,\n        \"legal_contract\" as legal_contract,\n        \"lifnr\" as lifnr,\n        \"lifre\" as lifre,\n        \"llief\" as llief,\n        \"loekz\" as loekz,\n        \"logsy\" as logsy,\n        \"lphis\" as lphis,\n        \"lponr\" as lponr,\n        \"ltsnr_allow\" as ltsnr_allow,\n        \"mandt\" as mandt,\n        \"memory\" as memory,\n        \"memorytype\" as memorytype,\n        \"msr_id\" as msr_id,\n        \"otb_cond_type\" as otb_cond_type,\n        \"otb_curr\" as otb_curr,\n        \"otb_level\" as otb_level,\n        \"otb_reason\" as otb_reason,\n        \"otb_res_value\" as otb_res_value,\n        \"otb_spec_value\" as otb_spec_value,\n        \"otb_status\" as otb_status,\n        \"otb_value\" as otb_value,\n        \"pincr\" as pincr,\n        \"pohf_type\" as pohf_type,\n        \"procstat\" as procstat,\n        \"pstyp_allow\" as pstyp_allow,\n        \"release_date\" as release_date,\n        \"reason_code\" as reason_code,\n        \"reloc_id\" as reloc_id,\n        \"reloc_seq_id\" as reloc_seq_id,\n        \"reswk\" as reswk,\n        \"retpc\" as retpc,\n        \"rettp\" as rettp,\n        \"revno\" as revno,\n        \"rlwrt\" as rlwrt,\n        \"scmproc\" as scmproc,\n        \"shipcond\" as shipcond,\n        \"source_logsys\" as source_logsys,\n        \"spr_rsn_profile\" as spr_rsn_profile,\n        \"spras\" as spras,\n        \"stafo\" as stafo,\n        \"stako\" as stako,\n        \"statu\" as statu,\n        \"stceg\" as stceg,\n        \"stceg_l\" as stceg_l,\n        \"submi\" as submi,\n        \"telf1\" as telf1,\n        \"threshold_exists\" as threshold_exists,\n        \"unsez\" as unsez,\n        \"upinc\" as upinc,\n        \"verkf\" as verkf,\n        \"vsart\" as vsart,\n        \"vzskz\" as vzskz,\n        \"waers\" as waers,\n        \"weakt\" as weakt,\n        \"werks_allow\" as werks_allow,\n        \"wkurs\" as wkurs,\n        \"zbd1p\" as zbd1p,\n        \"zbd1t\" as zbd1t,\n        \"zbd2p\" as zbd2p,\n        \"zbd2t\" as zbd2t,\n        \"zbd3t\" as zbd3t,\n        \"zterm\" as zterm\n    from \"postgres\".\"public_sap_dev\".\"stg_sap__ekko_tmp\"\n),\n\nfields as (\n    select\n        \n    \n    \n    abgru\n    \n as \n    \n    abgru\n    \n, \n    \n    \n    absgr\n    \n as \n    \n    absgr\n    \n, \n    \n    \n    addnr\n    \n as \n    \n    addnr\n    \n, \n    \n    \n    adrnr\n    \n as \n    \n    adrnr\n    \n, \n    \n    \n    aedat\n    \n as \n    \n    aedat\n    \n, \n    \n    \n    angdt\n    \n as \n    \n    angdt\n    \n, \n    \n    \n    angnr\n    \n as \n    \n    angnr\n    \n, \n    \n    \n    aurel_allow\n    \n as \n    \n    aurel_allow\n    \n, \n    \n    \n    ausnr\n    \n as \n    \n    ausnr\n    \n, \n    \n    \n    autlf\n    \n as \n    \n    autlf\n    \n, \n    \n    \n    bedat\n    \n as \n    \n    bedat\n    \n, \n    \n    \n    bnddt\n    \n as \n    \n    bnddt\n    \n, \n    \n    \n    bsakz\n    \n as \n    \n    bsakz\n    \n, \n    \n    \n    bsart\n    \n as \n    \n    bsart\n    \n, \n    \n    \n    bstyp\n    \n as \n    \n    bstyp\n    \n, \n    \n    \n    bwbdt\n    \n as \n    \n    bwbdt\n    \n, \n    \n    \n    budg_type\n    \n as \n    \n    budg_type\n    \n, \n    \n    \n    bukrs\n    \n as \n    \n    bukrs\n    \n, \n    \n    \n    check_type\n    \n as \n    \n    check_type\n    \n, \n    \n    \n    con_distr_lev\n    \n as \n    \n    con_distr_lev\n    \n, \n    \n    \n    con_otb_req\n    \n as \n    \n    con_otb_req\n    \n, \n    \n    \n    con_prebook_lev\n    \n as \n    \n    con_prebook_lev\n    \n, \n    \n    \n    contract_allow\n    \n as \n    \n    contract_allow\n    \n, \n    \n    \n    delper_allow\n    \n as \n    \n    delper_allow\n    \n, \n    \n    \n    description\n    \n as \n    \n    description\n    \n, \n    \n    \n    dpamt\n    \n as \n    \n    dpamt\n    \n, \n    \n    \n    dpdat\n    \n as \n    \n    dpdat\n    \n, \n    \n    \n    dppct\n    \n as \n    \n    dppct\n    \n, \n    \n    \n    dptyp\n    \n as \n    \n    dptyp\n    \n, \n    \n    \n    ebeln\n    \n as \n    \n    ebeln\n    \n, \n    \n    \n    eindt\n    \n as \n    \n    eindt\n    \n, \n    \n    \n    eindt_allow\n    \n as \n    \n    eindt_allow\n    \n, \n    \n    \n    ekgrp\n    \n as \n    \n    ekgrp\n    \n, \n    \n    \n    ekgrp_allow\n    \n as \n    \n    ekgrp_allow\n    \n, \n    \n    \n    ekorg\n    \n as \n    \n    ekorg\n    \n, \n    \n    \n    eq_eindt\n    \n as \n    \n    eq_eindt\n    \n, \n    \n    \n    eq_werks\n    \n as \n    \n    eq_werks\n    \n, \n    \n    \n    ernam\n    \n as \n    \n    ernam\n    \n, \n    \n    \n    exnum\n    \n as \n    \n    exnum\n    \n, \n    \n    \n    fixpo\n    \n as \n    \n    fixpo\n    \n, \n    \n    \n    fixpo_allow\n    \n as \n    \n    fixpo_allow\n    \n, \n    \n    \n    force_cnt\n    \n as \n    \n    force_cnt\n    \n, \n    \n    \n    force_id\n    \n as \n    \n    force_id\n    \n, \n    \n    \n    frggr\n    \n as \n    \n    frggr\n    \n, \n    \n    \n    frgke\n    \n as \n    \n    frgke\n    \n, \n    \n    \n    frgrl\n    \n as \n    \n    frgrl\n    \n, \n    \n    \n    frgsx\n    \n as \n    \n    frgsx\n    \n, \n    \n    \n    frgzu\n    \n as \n    \n    frgzu\n    \n, \n    \n    \n    fsh_item_group\n    \n as \n    \n    fsh_item_group\n    \n, \n    \n    \n    fsh_os_stg_change\n    \n as \n    \n    fsh_os_stg_change\n    \n, \n    \n    \n    fsh_snst_status\n    \n as \n    \n    fsh_snst_status\n    \n, \n    \n    \n    fsh_transaction\n    \n as \n    \n    fsh_transaction\n    \n, \n    \n    \n    fsh_vas_last_item\n    \n as \n    \n    fsh_vas_last_item\n    \n, \n    \n    \n    gwldt\n    \n as \n    \n    gwldt\n    \n, \n    \n    \n    handoverloc\n    \n as \n    \n    handoverloc\n    \n, \n    \n    \n    hierarchy_exists\n    \n as \n    \n    hierarchy_exists\n    \n, \n    \n    \n    hvr_change_time\n    \n as \n    \n    hvr_change_time\n    \n, \n    \n    \n    hvr_is_deleted\n    \n as \n    \n    hvr_is_deleted\n    \n, \n    \n    \n    ihran\n    \n as \n    \n    ihran\n    \n, \n    \n    \n    ihrez\n    \n as \n    \n    ihrez\n    \n, \n    \n    \n    inco1\n    \n as \n    \n    inco1\n    \n, \n    \n    \n    inco2\n    \n as \n    \n    inco2\n    \n, \n    \n    \n    inco2_l\n    \n as \n    \n    inco2_l\n    \n, \n    \n    \n    inco3_l\n    \n as \n    \n    inco3_l\n    \n, \n    \n    \n    incov\n    \n as \n    \n    incov\n    \n, \n    \n    \n    kalsm\n    \n as \n    \n    kalsm\n    \n, \n    \n    \n    kdatb\n    \n as \n    \n    kdatb\n    \n, \n    \n    \n    kdate\n    \n as \n    \n    kdate\n    \n, \n    \n    \n    key_id\n    \n as \n    \n    key_id\n    \n, \n    \n    \n    key_id_allow\n    \n as \n    \n    key_id_allow\n    \n, \n    \n    \n    knumv\n    \n as \n    \n    knumv\n    \n, \n    \n    \n    konnr\n    \n as \n    \n    konnr\n    \n, \n    \n    \n    kornr\n    \n as \n    \n    kornr\n    \n, \n    \n    \n    ktwrt\n    \n as \n    \n    ktwrt\n    \n, \n    \n    \n    kufix\n    \n as \n    \n    kufix\n    \n, \n    \n    \n    kunnr\n    \n as \n    \n    kunnr\n    \n, \n    \n    \n    lands\n    \n as \n    \n    lands\n    \n, \n    \n    \n    lblif\n    \n as \n    \n    lblif\n    \n, \n    \n    \n    legal_contract\n    \n as \n    \n    legal_contract\n    \n, \n    \n    \n    lifnr\n    \n as \n    \n    lifnr\n    \n, \n    \n    \n    lifre\n    \n as \n    \n    lifre\n    \n, \n    \n    \n    llief\n    \n as \n    \n    llief\n    \n, \n    \n    \n    loekz\n    \n as \n    \n    loekz\n    \n, \n    \n    \n    logsy\n    \n as \n    \n    logsy\n    \n, \n    \n    \n    lphis\n    \n as \n    \n    lphis\n    \n, \n    \n    \n    lponr\n    \n as \n    \n    lponr\n    \n, \n    \n    \n    ltsnr_allow\n    \n as \n    \n    ltsnr_allow\n    \n, \n    \n    \n    mandt\n    \n as \n    \n    mandt\n    \n, \n    \n    \n    memory\n    \n as \n    \n    memory\n    \n, \n    \n    \n    memorytype\n    \n as \n    \n    memorytype\n    \n, \n    \n    \n    msr_id\n    \n as \n    \n    msr_id\n    \n, \n    \n    \n    otb_cond_type\n    \n as \n    \n    otb_cond_type\n    \n, \n    \n    \n    otb_curr\n    \n as \n    \n    otb_curr\n    \n, \n    \n    \n    otb_level\n    \n as \n    \n    otb_level\n    \n, \n    \n    \n    otb_reason\n    \n as \n    \n    otb_reason\n    \n, \n    \n    \n    otb_res_value\n    \n as \n    \n    otb_res_value\n    \n, \n    \n    \n    otb_spec_value\n    \n as \n    \n    otb_spec_value\n    \n, \n    \n    \n    otb_status\n    \n as \n    \n    otb_status\n    \n, \n    \n    \n    otb_value\n    \n as \n    \n    otb_value\n    \n, \n    \n    \n    pincr\n    \n as \n    \n    pincr\n    \n, \n    \n    \n    pohf_type\n    \n as \n    \n    pohf_type\n    \n, \n    \n    \n    procstat\n    \n as \n    \n    procstat\n    \n, \n    \n    \n    pstyp_allow\n    \n as \n    \n    pstyp_allow\n    \n, \n    \n    \n    release_date\n    \n as \n    \n    release_date\n    \n, \n    \n    \n    reason_code\n    \n as \n    \n    reason_code\n    \n, \n    \n    \n    reloc_id\n    \n as \n    \n    reloc_id\n    \n, \n    \n    \n    reloc_seq_id\n    \n as \n    \n    reloc_seq_id\n    \n, \n    \n    \n    reswk\n    \n as \n    \n    reswk\n    \n, \n    \n    \n    retpc\n    \n as \n    \n    retpc\n    \n, \n    \n    \n    rettp\n    \n as \n    \n    rettp\n    \n, \n    \n    \n    revno\n    \n as \n    \n    revno\n    \n, \n    \n    \n    rlwrt\n    \n as \n    \n    rlwrt\n    \n, \n    \n    \n    scmproc\n    \n as \n    \n    scmproc\n    \n, \n    \n    \n    shipcond\n    \n as \n    \n    shipcond\n    \n, \n    \n    \n    source_logsys\n    \n as \n    \n    source_logsys\n    \n, \n    \n    \n    spr_rsn_profile\n    \n as \n    \n    spr_rsn_profile\n    \n, \n    \n    \n    spras\n    \n as \n    \n    spras\n    \n, \n    \n    \n    stafo\n    \n as \n    \n    stafo\n    \n, \n    \n    \n    stako\n    \n as \n    \n    stako\n    \n, \n    \n    \n    statu\n    \n as \n    \n    statu\n    \n, \n    \n    \n    stceg\n    \n as \n    \n    stceg\n    \n, \n    \n    \n    stceg_l\n    \n as \n    \n    stceg_l\n    \n, \n    \n    \n    submi\n    \n as \n    \n    submi\n    \n, \n    \n    \n    telf1\n    \n as \n    \n    telf1\n    \n, \n    \n    \n    threshold_exists\n    \n as \n    \n    threshold_exists\n    \n, \n    \n    \n    unsez\n    \n as \n    \n    unsez\n    \n, \n    \n    \n    upinc\n    \n as \n    \n    upinc\n    \n, \n    \n    \n    verkf\n    \n as \n    \n    verkf\n    \n, \n    \n    \n    vsart\n    \n as \n    \n    vsart\n    \n, \n    \n    \n    vzskz\n    \n as \n    \n    vzskz\n    \n, \n    \n    \n    waers\n    \n as \n    \n    waers\n    \n, \n    \n    \n    weakt\n    \n as \n    \n    weakt\n    \n, \n    \n    \n    werks_allow\n    \n as \n    \n    werks_allow\n    \n, \n    \n    \n    wkurs\n    \n as \n    \n    wkurs\n    \n, \n    \n    \n    zbd1p\n    \n as \n    \n    zbd1p\n    \n, \n    \n    \n    zbd1t\n    \n as \n    \n    zbd1t\n    \n, \n    \n    \n    zbd2p\n    \n as \n    \n    zbd2p\n    \n, \n    \n    \n    zbd2t\n    \n as \n    \n    zbd2t\n    \n, \n    \n    \n    zbd3t\n    \n as \n    \n    zbd3t\n    \n, \n    \n    \n    zterm\n    \n as \n    \n    zterm\n    \n, \n    cast(null as boolean) as \n    \n    _fivetran_deleted\n    \n , \n    cast(null as timestamp) as \n    \n    _fivetran_synced\n    \n , \n    cast(null as TEXT) as \n    \n    _fivetran_sap_archived\n    \n \n\n\n    from base\n),\n\nfinal as (\n    select\n        abgru,\n        absgr,\n        addnr,\n        adrnr,\n        aedat,\n        angdt,\n        angnr,\n        aurel_allow,\n        ausnr,\n        autlf,\n        bedat,\n        bnddt,\n        bsakz,\n        bsart,\n        bstyp,\n        bwbdt,\n        budg_type,\n        cast(bukrs as TEXT) as bukrs,\n        check_type,\n        con_distr_lev,\n        con_otb_req,\n        con_prebook_lev,\n        contract_allow,\n        delper_allow,\n        description,\n        dpamt,\n        dpdat,\n        dppct,\n        dptyp,\n        cast(ebeln as TEXT) as ebeln,\n        eindt,\n        eindt_allow,\n        ekgrp,\n        ekgrp_allow,\n        ekorg,\n        eq_eindt,\n        eq_werks,\n        ernam,\n        exnum,\n        fixpo,\n        fixpo_allow,\n        force_cnt,\n        force_id,\n        frggr,\n        frgke,\n        frgrl,\n        frgsx,\n        frgzu,\n        fsh_item_group,\n        fsh_os_stg_change,\n        fsh_snst_status,\n        fsh_transaction,\n        fsh_vas_last_item,\n        gwldt,\n        handoverloc,\n        hierarchy_exists,\n        hvr_change_time,\n        hvr_is_deleted,\n        ihran,\n        ihrez,\n        inco1,\n        inco2,\n        inco2_l,\n        inco3_l,\n        incov,\n        kalsm,\n        kdatb,\n        kdate,\n        key_id,\n        key_id_allow,\n        knumv,\n        konnr,\n        kornr,\n        ktwrt,\n        kufix,\n        cast(kunnr as TEXT) as kunnr,\n        lands,\n        lblif,\n        legal_contract,\n        lifnr,\n        lifre,\n        llief,\n        loekz,\n        logsy,\n        lphis,\n        lponr,\n        ltsnr_allow,\n        cast(mandt as TEXT) as mandt,\n        memory,\n        memorytype,\n        msr_id,\n        otb_cond_type,\n        otb_curr,\n        otb_level,\n        otb_reason,\n        otb_res_value,\n        otb_spec_value,\n        otb_status,\n        otb_value,\n        pincr,\n        pohf_type,\n        procstat,\n        pstyp_allow,\n        release_date,\n        reason_code,\n        reloc_id,\n        reloc_seq_id,\n        reswk,\n        retpc,\n        rettp,\n        revno,\n        rlwrt,\n        scmproc,\n        shipcond,\n        source_logsys,\n        spr_rsn_profile,\n        spras,\n        stafo,\n        stako,\n        statu,\n        stceg,\n        stceg_l,\n        submi,\n        telf1,\n        threshold_exists,\n        unsez,\n        upinc,\n        verkf,\n        vsart,\n        vzskz,\n        waers,\n        weakt,\n        werks_allow,\n        wkurs,\n        zbd1p,\n        zbd1t,\n        zbd2p,\n        zbd2t,\n        zbd3t,\n        zterm,\n        _fivetran_sap_archived,\n        _fivetran_deleted,\n        _fivetran_synced\n    from fields\n)\n\nselect *\nfrom final", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null, "primary_key": [], "time_spine": null}, "model.sap.stg_sap__t503": {"database": "postgres", "schema": "public_sap_dev", "name": "stg_sap__t503", "resource_type": "model", "package_name": "sap", "path": "staging/stg_sap__t503.sql", "original_file_path": "models/staging/stg_sap__t503.sql", "unique_id": "model.sap.stg_sap__t503", "fqn": ["sap", "staging", "stg_sap__t503"], "alias": "stg_sap__t503", "checksum": {"name": "sha256", "checksum": "60e3af594e56a8b1f74dc9c06d66fcfa59565211666b41f386f0115471bd299a"}, "config": {"enabled": true, "alias": null, "schema": "sap_dev", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "view", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "freshness": null}, "tags": [], "description": "Employee group/subgroup", "columns": {"_fivetran_rowid": {"name": "_fivetran_rowid", "description": "Fivetran unique row ID", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "_fivetran_deleted": {"name": "_fivetran_deleted", "description": "Fivetran deletion marker", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "_fivetran_synced": {"name": "_fivetran_synced", "description": "Fivetran sync timestamp", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "abart": {"name": "abart", "description": "Employee subgroup grouping for personnel calculation rule", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "abtyp": {"name": "abtyp", "description": "Employee subgroup grouping for primary wage tpyes", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "aksta": {"name": "aksta", "description": "Activity status", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "ansta": {"name": "ansta", "description": "Employment status", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "antyp": {"name": "antyp", "description": "Employee category", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "austa": {"name": "austa", "description": "Training status", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "burkz": {"name": "burkz", "description": "Employee subgroup grouping for appraisal", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "inwid": {"name": "inwid", "description": "Participation in incentive wages", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "konty": {"name": "konty", "description": "Employee subgroup grouping for time quota types", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "mandt": {"name": "mandt", "description": "Client", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "molga": {"name": "molga", "description": "Reserved field/unused field of length 2", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "persg": {"name": "persg", "description": "Employee group", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "persk": {"name": "persk", "description": "Employee subgroup", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "trfkz": {"name": "trfkz", "description": "ES grouping for collective agreement provision", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "typsz": {"name": "typsz", "description": "Single-character indicator", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "zeity": {"name": "zeity", "description": "Employee subgroup grouping for work schedules", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": "sap://models/staging/stg_sap.yml", "build_path": null, "unrendered_config": {"materialized": "view", "schema": "sap_{{ var('directed_schema','dev') }}", "enabled": true}, "created_at": 1756850331.2994258, "relation_name": "\"postgres\".\"public_sap_dev\".\"stg_sap__t503\"", "raw_code": "{{ config(enabled=var('sap_using_t503', True)) }}\n\n{% set source_columns = adapter.get_columns_in_relation(ref('stg_sap__t503_tmp')) %}\n\nwith base as (\n\n    select {{ remove_slashes_from_col_names(source_columns) }}\n    from {{ ref('stg_sap__t503_tmp') }}\n),\n\nfields as (\n\n    select\n        {{\n            fivetran_utils.fill_staging_columns(\n                source_columns=source_columns,\n                staging_columns=get_t503_columns()\n            )\n        }}\n    from base\n),\n\nfinal as (\n\n    select    \n        cast(mandt as {{ dbt.type_string() }}) as mandt,\n        persg,\n        persk,\n        abart,\n        abtyp,\n        aksta,\n        ansta,\n        antyp,\n        austa,\n        burkz,\n        inwid,\n        konty,\n        molga,\n        trfkz,\n        typsz,\n        zeity,\n        _fivetran_deleted,\n        _fivetran_synced,\n        _fivetran_rowid\n    from fields\n)\n\nselect * \nfrom final", "doc_blocks": [], "language": "sql", "refs": [{"name": "stg_sap__t503_tmp", "package": null, "version": null}, {"name": "stg_sap__t503_tmp", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.sap.remove_slashes_from_col_names", "macro.sap.get_t503_columns", "macro.fivetran_utils.fill_staging_columns", "macro.dbt.type_string"], "nodes": ["model.sap.stg_sap__t503_tmp"]}, "compiled_path": "target/compiled/sap/models/staging/stg_sap__t503.sql", "compiled": true, "compiled_code": "\n\n\n\nwith base as (\n\n    select \n        \"mandt\" as mandt,\n        \"persg\" as persg,\n        \"persk\" as persk,\n        \"abart\" as abart,\n        \"abtyp\" as abtyp,\n        \"antyp\" as antyp,\n        \"trfkz\" as trfkz,\n        \"zeity\" as zeity,\n        \"aksta\" as aksta,\n        \"ansta\" as ansta,\n        \"austa\" as austa,\n        \"konty\" as konty,\n        \"burkz\" as burkz,\n        \"molga\" as molga,\n        \"typsz\" as typsz,\n        \"inwid\" as inwid,\n        \"_fivetran_rowid\" as _fivetran_rowid,\n        \"_fivetran_deleted\" as _fivetran_deleted,\n        \"_fivetran_synced\" as _fivetran_synced\n    from \"postgres\".\"public_sap_dev\".\"stg_sap__t503_tmp\"\n),\n\nfields as (\n\n    select\n        \n    \n    \n    _fivetran_deleted\n    \n as \n    \n    _fivetran_deleted\n    \n, \n    \n    \n    _fivetran_rowid\n    \n as \n    \n    _fivetran_rowid\n    \n, \n    \n    \n    _fivetran_synced\n    \n as \n    \n    _fivetran_synced\n    \n, \n    \n    \n    abart\n    \n as \n    \n    abart\n    \n, \n    \n    \n    abtyp\n    \n as \n    \n    abtyp\n    \n, \n    \n    \n    aksta\n    \n as \n    \n    aksta\n    \n, \n    \n    \n    ansta\n    \n as \n    \n    ansta\n    \n, \n    \n    \n    antyp\n    \n as \n    \n    antyp\n    \n, \n    \n    \n    austa\n    \n as \n    \n    austa\n    \n, \n    \n    \n    burkz\n    \n as \n    \n    burkz\n    \n, \n    \n    \n    inwid\n    \n as \n    \n    inwid\n    \n, \n    \n    \n    konty\n    \n as \n    \n    konty\n    \n, \n    \n    \n    mandt\n    \n as \n    \n    mandt\n    \n, \n    \n    \n    molga\n    \n as \n    \n    molga\n    \n, \n    \n    \n    persg\n    \n as \n    \n    persg\n    \n, \n    \n    \n    persk\n    \n as \n    \n    persk\n    \n, \n    \n    \n    trfkz\n    \n as \n    \n    trfkz\n    \n, \n    \n    \n    typsz\n    \n as \n    \n    typsz\n    \n, \n    \n    \n    zeity\n    \n as \n    \n    zeity\n    \n\n\n\n    from base\n),\n\nfinal as (\n\n    select    \n        cast(mandt as TEXT) as mandt,\n        persg,\n        persk,\n        abart,\n        abtyp,\n        aksta,\n        ansta,\n        antyp,\n        austa,\n        burkz,\n        inwid,\n        konty,\n        molga,\n        trfkz,\n        typsz,\n        zeity,\n        _fivetran_deleted,\n        _fivetran_synced,\n        _fivetran_rowid\n    from fields\n)\n\nselect * \nfrom final", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null, "primary_key": [], "time_spine": null}, "model.sap.stg_sap__t161t": {"database": "postgres", "schema": "public_sap_dev", "name": "stg_sap__t161t", "resource_type": "model", "package_name": "sap", "path": "staging/stg_sap__t161t.sql", "original_file_path": "models/staging/stg_sap__t161t.sql", "unique_id": "model.sap.stg_sap__t161t", "fqn": ["sap", "staging", "stg_sap__t161t"], "alias": "stg_sap__t161t", "checksum": {"name": "sha256", "checksum": "89ccf38d7708de586f98c927183ccf425e1729c3daff811312019b7db1ec1cfb"}, "config": {"enabled": true, "alias": null, "schema": "sap_dev", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "view", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "freshness": null}, "tags": [], "description": "Purchasing doc type texts", "columns": {"_fivetran_rowid": {"name": "_fivetran_rowid", "description": "Fivetran unique row ID", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "_fivetran_deleted": {"name": "_fivetran_deleted", "description": "Fivetran deletion marker", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "_fivetran_synced": {"name": "_fivetran_synced", "description": "Fivetran sync timestamp", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "batxt": {"name": "batxt", "description": "Description", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "bsart": {"name": "bsart", "description": "Document type", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "bstyp": {"name": "bstyp", "description": "Document category", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "mandt": {"name": "mandt", "description": "Client", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "spras": {"name": "spras", "description": "Language key", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": "sap://models/staging/stg_sap.yml", "build_path": null, "unrendered_config": {"materialized": "view", "schema": "sap_{{ var('directed_schema','dev') }}", "enabled": true}, "created_at": 1756850331.2946334, "relation_name": "\"postgres\".\"public_sap_dev\".\"stg_sap__t161t\"", "raw_code": "{{ config(enabled=var('sap_using_t161t', True)) }}\n\n{% set source_columns = adapter.get_columns_in_relation(ref('stg_sap__t161t_tmp')) %}\n\nwith base as (\n    select {{ remove_slashes_from_col_names(source_columns) }}\n    from {{ ref('stg_sap__t161t_tmp') }}\n),\n\nfields as (\n    select\n        {{\n            fivetran_utils.fill_staging_columns(\n                source_columns=source_columns,\n                staging_columns=get_t161t_columns()\n            )\n        }}\n    from base\n),\n\nfinal as (\n    select\n        batxt,\n        bsart,\n        bstyp,\n        cast(mandt as {{ dbt.type_string() }}) as mandt,\n        spras,\n        _fivetran_deleted,\n        _fivetran_synced,\n        _fivetran_rowid\n    from fields\n)\n\nselect *\nfrom final", "doc_blocks": [], "language": "sql", "refs": [{"name": "stg_sap__t161t_tmp", "package": null, "version": null}, {"name": "stg_sap__t161t_tmp", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.sap.remove_slashes_from_col_names", "macro.sap.get_t161t_columns", "macro.fivetran_utils.fill_staging_columns", "macro.dbt.type_string"], "nodes": ["model.sap.stg_sap__t161t_tmp"]}, "compiled_path": "target/compiled/sap/models/staging/stg_sap__t161t.sql", "compiled": true, "compiled_code": "\n\n\n\nwith base as (\n    select \n        \"_fivetran_deleted\" as _fivetran_deleted,\n        \"_fivetran_rowid\" as _fivetran_rowid,\n        \"_fivetran_synced\" as _fivetran_synced,\n        \"batxt\" as batxt,\n        \"bsart\" as bsart,\n        \"bstyp\" as bstyp,\n        \"mandt\" as mandt,\n        \"spras\" as spras\n    from \"postgres\".\"public_sap_dev\".\"stg_sap__t161t_tmp\"\n),\n\nfields as (\n    select\n        \n    \n    \n    _fivetran_deleted\n    \n as \n    \n    _fivetran_deleted\n    \n, \n    \n    \n    _fivetran_rowid\n    \n as \n    \n    _fivetran_rowid\n    \n, \n    \n    \n    _fivetran_synced\n    \n as \n    \n    _fivetran_synced\n    \n, \n    \n    \n    batxt\n    \n as \n    \n    batxt\n    \n, \n    \n    \n    bsart\n    \n as \n    \n    bsart\n    \n, \n    \n    \n    bstyp\n    \n as \n    \n    bstyp\n    \n, \n    \n    \n    mandt\n    \n as \n    \n    mandt\n    \n, \n    \n    \n    spras\n    \n as \n    \n    spras\n    \n\n\n\n    from base\n),\n\nfinal as (\n    select\n        batxt,\n        bsart,\n        bstyp,\n        cast(mandt as TEXT) as mandt,\n        spras,\n        _fivetran_deleted,\n        _fivetran_synced,\n        _fivetran_rowid\n    from fields\n)\n\nselect *\nfrom final", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null, "primary_key": [], "time_spine": null}, "model.sap.stg_sap__faglflext": {"database": "postgres", "schema": "public_sap_dev", "name": "stg_sap__faglflext", "resource_type": "model", "package_name": "sap", "path": "staging/stg_sap__faglflext.sql", "original_file_path": "models/staging/stg_sap__faglflext.sql", "unique_id": "model.sap.stg_sap__faglflext", "fqn": ["sap", "staging", "stg_sap__faglflext"], "alias": "stg_sap__faglflext", "checksum": {"name": "sha256", "checksum": "a8b4911c46aaf954ff31d55e35d18ed5ddd142c3bda76886b5d15f6cca8f646f"}, "config": {"enabled": true, "alias": null, "schema": "sap_dev", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "view", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "freshness": null}, "tags": [], "description": "General ledger (Totals)", "columns": {"activ": {"name": "activ", "description": "FI-SL business transaction", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "awtyp": {"name": "awtyp", "description": "Reference transaction", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "cost_elem": {"name": "cost_elem", "description": "Cost element", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "drcrk": {"name": "drcrk", "description": "Debit/credit indicator", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "faglflext_timestamp": {"name": "faglflext_timestamp", "description": "UTC timestamp in short form (YYYYMMDDhhmmss)", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "hsl01": {"name": "hsl01", "description": "Total of transactions of the period in local currency", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "hsl02": {"name": "hsl02", "description": "Total of transactions of the period in local currency", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "hsl03": {"name": "hsl03", "description": "Total of transactions of the period in local currency", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "hsl04": {"name": "hsl04", "description": "Total of transactions of the period in local currency", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "hsl05": {"name": "hsl05", "description": "Total of transactions of the period in local currency", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "hsl06": {"name": "hsl06", "description": "Total of transactions of the period in local currency", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "hsl07": {"name": "hsl07", "description": "Total of transactions of the period in local currency", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "hsl08": {"name": "hsl08", "description": "Total of transactions of the period in local currency", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "hsl09": {"name": "hsl09", "description": "Total of transactions of the period in local currency", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "hsl10": {"name": "hsl10", "description": "Total of transactions of the period in local currency", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "hsl11": {"name": "hsl11", "description": "Total of transactions of the period in local currency", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "hsl12": {"name": "hsl12", "description": "Total of transactions of the period in local currency", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "hsl13": {"name": "hsl13", "description": "Total of transactions of the period in local currency", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "hsl14": {"name": "hsl14", "description": "Total of transactions of the period in local currency", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "hsl15": {"name": "hsl15", "description": "Total of transactions of the period in local currency", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "hsl16": {"name": "hsl16", "description": "Total of transactions of the period in local currency", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "hslvt": {"name": "hslvt", "description": "Balance carried forward in local currency", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "kokrs": {"name": "kokrs", "description": "Controlling area", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "ksl01": {"name": "ksl01", "description": "Total of transactions of the period in group currency", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "ksl02": {"name": "ksl02", "description": "Total of transactions of the period in group currency", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "ksl03": {"name": "ksl03", "description": "Total of transactions of the period in group currency", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "ksl04": {"name": "ksl04", "description": "Total of transactions of the period in group currency", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "ksl05": {"name": "ksl05", "description": "Total of transactions of the period in group currency", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "ksl06": {"name": "ksl06", "description": "Total of transactions of the period in group currency", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "ksl07": {"name": "ksl07", "description": "Total of transactions of the period in group currency", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "ksl08": {"name": "ksl08", "description": "Total of transactions of the period in group currency", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "ksl09": {"name": "ksl09", "description": "Total of transactions of the period in group currency", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "ksl10": {"name": "ksl10", "description": "Total of transactions of the period in group currency", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "ksl11": {"name": "ksl11", "description": "Total of transactions of the period in group currency", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "ksl12": {"name": "ksl12", "description": "Total of transactions of the period in group currency", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "ksl13": {"name": "ksl13", "description": "Total of transactions of the period in group currency", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "ksl14": {"name": "ksl14", "description": "Total of transactions of the period in group currency", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "ksl15": {"name": "ksl15", "description": "Total of transactions of the period in group currency", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "ksl16": {"name": "ksl16", "description": "Total of transactions of the period in group currency", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "kslvt": {"name": "kslvt", "description": "Balance carried forward in group currency", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "logsys": {"name": "logsys", "description": "Logical system", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "objnr00": {"name": "objnr00", "description": "Object number for table group", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "objnr01": {"name": "objnr01", "description": "Object number for table group", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "objnr02": {"name": "objnr02", "description": "Object number for table group", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "objnr03": {"name": "objnr03", "description": "Object number for table group", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "objnr04": {"name": "objnr04", "description": "Object number for table group", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "objnr05": {"name": "objnr05", "description": "Object number for table group", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "objnr06": {"name": "objnr06", "description": "Object number for table group", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "objnr07": {"name": "objnr07", "description": "Object number for table group", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "objnr08": {"name": "objnr08", "description": "Object number for table group", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "osl01": {"name": "osl01", "description": "Total transactions for the period in the fourth currency", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "osl02": {"name": "osl02", "description": "Total transactions for the period in the fourth currency", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "osl03": {"name": "osl03", "description": "Total transactions for the period in the fourth currency", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "osl04": {"name": "osl04", "description": "Total transactions for the period in the fourth currency", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "osl05": {"name": "osl05", "description": "Total transactions for the period in the fourth currency", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "osl06": {"name": "osl06", "description": "Total transactions for the period in the fourth currency", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "osl07": {"name": "osl07", "description": "Total transactions for the period in the fourth currency", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "osl08": {"name": "osl08", "description": "Total transactions for the period in the fourth currency", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "osl09": {"name": "osl09", "description": "Total transactions for the period in the fourth currency", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "osl10": {"name": "osl10", "description": "Total transactions for the period in the fourth currency", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "osl11": {"name": "osl11", "description": "Total transactions for the period in the fourth currency", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "osl12": {"name": "osl12", "description": "Total transactions for the period in the fourth currency", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "osl13": {"name": "osl13", "description": "Total transactions for the period in the fourth currency", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "osl14": {"name": "osl14", "description": "Total transactions for the period in the fourth currency", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "osl15": {"name": "osl15", "description": "Total transactions for the period in the fourth currency", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "osl16": {"name": "osl16", "description": "Total transactions for the period in the fourth currency", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "oslvt": {"name": "oslvt", "description": "Balance carried forward in fourth currency", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "pprctr": {"name": "pprctr", "description": "Partner profit center", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "prctr": {"name": "prctr", "description": "Profit center", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "psegment": {"name": "psegment", "description": "Partner segment for segmental reporting", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "racct": {"name": "racct", "description": "Account number", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "rassc": {"name": "rassc", "description": "Company id of trading partner", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "rbukrs": {"name": "rbukrs", "description": "Company code", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "rbusa": {"name": "rbusa", "description": "Business area", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "rclnt": {"name": "rclnt", "description": "Client", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "rcntr": {"name": "rcntr", "description": "Cost center", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "rfarea": {"name": "rfarea", "description": "Functional area", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "rldnr": {"name": "rldnr", "description": "Ledger in general ledger accounting", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "rmvct": {"name": "rmvct", "description": "Transaction type", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "rpmax": {"name": "rpmax", "description": "Period", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "rrcty": {"name": "rrcty", "description": "Record type", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "rtcur": {"name": "rtcur", "description": "Currency key", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "runit": {"name": "runit", "description": "Base unit of measure", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "rvers": {"name": "rvers", "description": "Version", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "ryear": {"name": "ryear", "description": "Fiscal year", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "sbusa": {"name": "sbusa", "description": "Trading partner's business area", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "scntr": {"name": "scntr", "description": "Sender cost center", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "segment": {"name": "segment", "description": "Segment for segmental reporting", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "sfarea": {"name": "sfarea", "description": "Partner functional area", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "tsl01": {"name": "tsl01", "description": "Total of transactions of the period in transaction currency", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "tsl02": {"name": "tsl02", "description": "Total of transactions of the period in transaction currency", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "tsl03": {"name": "tsl03", "description": "Total of transactions of the period in transaction currency", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "tsl04": {"name": "tsl04", "description": "Total of transactions of the period in transaction currency", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "tsl05": {"name": "tsl05", "description": "Total of transactions of the period in transaction currency", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "tsl06": {"name": "tsl06", "description": "Total of transactions of the period in transaction currency", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "tsl07": {"name": "tsl07", "description": "Total of transactions of the period in transaction currency", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "tsl08": {"name": "tsl08", "description": "Total of transactions of the period in transaction currency", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "tsl09": {"name": "tsl09", "description": "Total of transactions of the period in transaction currency", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "tsl10": {"name": "tsl10", "description": "Total of transactions of the period in transaction currency", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "tsl11": {"name": "tsl11", "description": "Total of transactions of the period in transaction currency", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "tsl12": {"name": "tsl12", "description": "Total of transactions of the period in transaction currency", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "tsl13": {"name": "tsl13", "description": "Total of transactions of the period in transaction currency", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "tsl14": {"name": "tsl14", "description": "Total of transactions of the period in transaction currency", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "tsl15": {"name": "tsl15", "description": "Total of transactions of the period in transaction currency", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "tsl16": {"name": "tsl16", "description": "Total of transactions of the period in transaction currency", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "tslvt": {"name": "tslvt", "description": "Balance carried forward in transaction currency", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "zzspreg": {"name": "zzspreg", "description": "Special region", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "_fivetran_deleted": {"name": "_fivetran_deleted", "description": "Fivetran deletion marker", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "_fivetran_rowid": {"name": "_fivetran_rowid", "description": "Fivetran unique row ID", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "_fivetran_synced": {"name": "_fivetran_synced", "description": "Fivetran sync timestamp", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": "sap://models/staging/stg_sap.yml", "build_path": null, "unrendered_config": {"materialized": "view", "schema": "sap_{{ var('directed_schema','dev') }}", "enabled": true}, "created_at": 1756850330.8730454, "relation_name": "\"postgres\".\"public_sap_dev\".\"stg_sap__faglflext\"", "raw_code": "{{ config(enabled=var('sap_using_faglflext', True)) }}\n\n{% set source_columns = adapter.get_columns_in_relation(ref('stg_sap__faglflext_tmp')) %}\n\nwith base as (\n\n    select {{ remove_slashes_from_col_names(source_columns) }}\n    from {{ ref('stg_sap__faglflext_tmp') }}\n),\n\nfields as (\n\n    select\n        {{\n            fivetran_utils.fill_staging_columns(\n                source_columns=source_columns,\n                staging_columns=get_faglflext_columns()\n            )\n        }}\n    from base\n),\n\nfinal as (\n\n    select\n        cast(rclnt as {{ dbt.type_string() }}) as rclnt,\n        ryear,\n        objnr00,\n        objnr01,\n        objnr02,\n        objnr03,\n        objnr04,\n        objnr05,\n        objnr06,\n        objnr07,\n        objnr08,\n        drcrk,\n        rpmax,\n        activ,\n        rmvct,\n        rtcur,\n        runit,\n        awtyp,\n        cast(rldnr as {{ dbt.type_string() }}) as rldnr,\n        rrcty,\n        rvers,\n        logsys,\n        racct,\n        cost_elem, \n        cast(rbukrs as {{ dbt.type_string() }}) as rbukrs,\n        rcntr,\n        prctr,\n        rfarea,\n        rbusa,\n        kokrs,\n        segment,\n        zzspreg,\n        scntr,\n        pprctr,\n        sfarea,\n        sbusa,\n        rassc,\n        psegment,\n        hslvt,\n        hsl01,\n        hsl02,\n        hsl03,\n        hsl04,\n        hsl05,\n        hsl06,\n        hsl07,\n        hsl08,\n        hsl09,\n        hsl10,\n        hsl11,\n        hsl12,\n        hsl13,\n        hsl14,\n        hsl15,\n        hsl16,\n        tslvt,\n        tsl01,\n        tsl02,\n        tsl03,\n        tsl04,\n        tsl05,\n        tsl06,\n        tsl07,\n        tsl08,\n        tsl09,\n        tsl10,\n        tsl11,\n        tsl12,\n        tsl13,\n        tsl14,\n        tsl15,\n        tsl16,\n        kslvt,\n        ksl01,\n        ksl02,\n        ksl03,\n        ksl04,\n        ksl05,\n        ksl06,\n        ksl07,\n        ksl08,\n        ksl09,\n        ksl10,\n        ksl11,\n        ksl12,\n        ksl13,\n        ksl14,\n        ksl15,\n        ksl16,\n        oslvt,\n        osl01,\n        osl02,\n        osl03,\n        osl04,\n        osl05,\n        osl06,\n        osl07,\n        osl08,\n        osl09,\n        osl10,\n        osl11,\n        osl12,\n        osl13,\n        osl14,\n        osl15,\n        osl16,\n        faglflext_timestamp,\n        _fivetran_rowid,\n        _fivetran_deleted,\n        _fivetran_synced\n    from fields\n)\n\nselect * \nfrom final", "doc_blocks": [], "language": "sql", "refs": [{"name": "stg_sap__faglflext_tmp", "package": null, "version": null}, {"name": "stg_sap__faglflext_tmp", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.sap.remove_slashes_from_col_names", "macro.sap.get_faglflext_columns", "macro.fivetran_utils.fill_staging_columns", "macro.dbt.type_string"], "nodes": ["model.sap.stg_sap__faglflext_tmp"]}, "compiled_path": "target/compiled/sap/models/staging/stg_sap__faglflext.sql", "compiled": true, "compiled_code": "\n\n\n\nwith base as (\n\n    select \n        \"drcrk\" as drcrk,\n        \"objnr00\" as objnr00,\n        \"objnr01\" as objnr01,\n        \"objnr02\" as objnr02,\n        \"objnr03\" as objnr03,\n        \"objnr04\" as objnr04,\n        \"objnr05\" as objnr05,\n        \"objnr06\" as objnr06,\n        \"objnr07\" as objnr07,\n        \"objnr08\" as objnr08,\n        \"rclnt\" as rclnt,\n        \"rpmax\" as rpmax,\n        \"ryear\" as ryear,\n        \"activ\" as activ,\n        \"rmvct\" as rmvct,\n        \"rtcur\" as rtcur,\n        \"runit\" as runit,\n        \"awtyp\" as awtyp,\n        \"rldnr\" as rldnr,\n        \"rrcty\" as rrcty,\n        \"rvers\" as rvers,\n        \"logsys\" as logsys,\n        \"racct\" as racct,\n        \"cost_elem\" as cost_elem,\n        \"rbukrs\" as rbukrs,\n        \"rcntr\" as rcntr,\n        \"prctr\" as prctr,\n        \"rfarea\" as rfarea,\n        \"rbusa\" as rbusa,\n        \"kokrs\" as kokrs,\n        \"segment\" as segment,\n        \"zzspreg\" as zzspreg,\n        \"scntr\" as scntr,\n        \"pprctr\" as pprctr,\n        \"sfarea\" as sfarea,\n        \"sbusa\" as sbusa,\n        \"rassc\" as rassc,\n        \"psegment\" as psegment,\n        \"tslvt\" as tslvt,\n        \"tsl01\" as tsl01,\n        \"tsl02\" as tsl02,\n        \"tsl03\" as tsl03,\n        \"tsl04\" as tsl04,\n        \"tsl05\" as tsl05,\n        \"tsl06\" as tsl06,\n        \"tsl07\" as tsl07,\n        \"tsl08\" as tsl08,\n        \"tsl09\" as tsl09,\n        \"tsl10\" as tsl10,\n        \"tsl11\" as tsl11,\n        \"tsl12\" as tsl12,\n        \"tsl13\" as tsl13,\n        \"tsl14\" as tsl14,\n        \"tsl15\" as tsl15,\n        \"tsl16\" as tsl16,\n        \"hslvt\" as hslvt,\n        \"hsl01\" as hsl01,\n        \"hsl02\" as hsl02,\n        \"hsl03\" as hsl03,\n        \"hsl04\" as hsl04,\n        \"hsl05\" as hsl05,\n        \"hsl06\" as hsl06,\n        \"hsl07\" as hsl07,\n        \"hsl08\" as hsl08,\n        \"hsl09\" as hsl09,\n        \"hsl10\" as hsl10,\n        \"hsl11\" as hsl11,\n        \"hsl12\" as hsl12,\n        \"hsl13\" as hsl13,\n        \"hsl14\" as hsl14,\n        \"hsl15\" as hsl15,\n        \"hsl16\" as hsl16,\n        \"kslvt\" as kslvt,\n        \"ksl01\" as ksl01,\n        \"ksl02\" as ksl02,\n        \"ksl03\" as ksl03,\n        \"ksl04\" as ksl04,\n        \"ksl05\" as ksl05,\n        \"ksl06\" as ksl06,\n        \"ksl07\" as ksl07,\n        \"ksl08\" as ksl08,\n        \"ksl09\" as ksl09,\n        \"ksl10\" as ksl10,\n        \"ksl11\" as ksl11,\n        \"ksl12\" as ksl12,\n        \"ksl13\" as ksl13,\n        \"ksl14\" as ksl14,\n        \"ksl15\" as ksl15,\n        \"ksl16\" as ksl16,\n        \"oslvt\" as oslvt,\n        \"osl01\" as osl01,\n        \"osl02\" as osl02,\n        \"osl03\" as osl03,\n        \"osl04\" as osl04,\n        \"osl05\" as osl05,\n        \"osl06\" as osl06,\n        \"osl07\" as osl07,\n        \"osl08\" as osl08,\n        \"osl09\" as osl09,\n        \"osl10\" as osl10,\n        \"osl11\" as osl11,\n        \"osl12\" as osl12,\n        \"osl13\" as osl13,\n        \"osl14\" as osl14,\n        \"osl15\" as osl15,\n        \"osl16\" as osl16,\n        \"mslvt\" as mslvt,\n        \"msl01\" as msl01,\n        \"msl02\" as msl02,\n        \"msl03\" as msl03,\n        \"msl04\" as msl04,\n        \"msl05\" as msl05,\n        \"msl06\" as msl06,\n        \"msl07\" as msl07,\n        \"msl08\" as msl08,\n        \"msl09\" as msl09,\n        \"msl10\" as msl10,\n        \"msl11\" as msl11,\n        \"msl12\" as msl12,\n        \"msl13\" as msl13,\n        \"msl14\" as msl14,\n        \"msl15\" as msl15,\n        \"msl16\" as msl16,\n        \"timestamp\" as timestamp,\n        \"_fivetran_rowid\" as _fivetran_rowid,\n        \"_fivetran_deleted\" as _fivetran_deleted,\n        \"_fivetran_synced\" as _fivetran_synced\n    from \"postgres\".\"public_sap_dev\".\"stg_sap__faglflext_tmp\"\n),\n\nfields as (\n\n    select\n        \n    \n    \n    _fivetran_deleted\n    \n as \n    \n    _fivetran_deleted\n    \n, \n    \n    \n    _fivetran_rowid\n    \n as \n    \n    _fivetran_rowid\n    \n, \n    \n    \n    _fivetran_synced\n    \n as \n    \n    _fivetran_synced\n    \n, \n    \n    \n    activ\n    \n as \n    \n    activ\n    \n, \n    \n    \n    awtyp\n    \n as \n    \n    awtyp\n    \n, \n    \n    \n    cost_elem\n    \n as \n    \n    cost_elem\n    \n, \n    \n    \n    drcrk\n    \n as \n    \n    drcrk\n    \n, \n    \n    \n    hsl01\n    \n as \n    \n    hsl01\n    \n, \n    \n    \n    hsl02\n    \n as \n    \n    hsl02\n    \n, \n    \n    \n    hsl03\n    \n as \n    \n    hsl03\n    \n, \n    \n    \n    hsl04\n    \n as \n    \n    hsl04\n    \n, \n    \n    \n    hsl05\n    \n as \n    \n    hsl05\n    \n, \n    \n    \n    hsl06\n    \n as \n    \n    hsl06\n    \n, \n    \n    \n    hsl07\n    \n as \n    \n    hsl07\n    \n, \n    \n    \n    hsl08\n    \n as \n    \n    hsl08\n    \n, \n    \n    \n    hsl09\n    \n as \n    \n    hsl09\n    \n, \n    \n    \n    hsl10\n    \n as \n    \n    hsl10\n    \n, \n    \n    \n    hsl11\n    \n as \n    \n    hsl11\n    \n, \n    \n    \n    hsl12\n    \n as \n    \n    hsl12\n    \n, \n    \n    \n    hsl13\n    \n as \n    \n    hsl13\n    \n, \n    \n    \n    hsl14\n    \n as \n    \n    hsl14\n    \n, \n    \n    \n    hsl15\n    \n as \n    \n    hsl15\n    \n, \n    \n    \n    hsl16\n    \n as \n    \n    hsl16\n    \n, \n    \n    \n    hslvt\n    \n as \n    \n    hslvt\n    \n, \n    \n    \n    kokrs\n    \n as \n    \n    kokrs\n    \n, \n    \n    \n    ksl01\n    \n as \n    \n    ksl01\n    \n, \n    \n    \n    ksl02\n    \n as \n    \n    ksl02\n    \n, \n    \n    \n    ksl03\n    \n as \n    \n    ksl03\n    \n, \n    \n    \n    ksl04\n    \n as \n    \n    ksl04\n    \n, \n    \n    \n    ksl05\n    \n as \n    \n    ksl05\n    \n, \n    \n    \n    ksl06\n    \n as \n    \n    ksl06\n    \n, \n    \n    \n    ksl07\n    \n as \n    \n    ksl07\n    \n, \n    \n    \n    ksl08\n    \n as \n    \n    ksl08\n    \n, \n    \n    \n    ksl09\n    \n as \n    \n    ksl09\n    \n, \n    \n    \n    ksl10\n    \n as \n    \n    ksl10\n    \n, \n    \n    \n    ksl11\n    \n as \n    \n    ksl11\n    \n, \n    \n    \n    ksl12\n    \n as \n    \n    ksl12\n    \n, \n    \n    \n    ksl13\n    \n as \n    \n    ksl13\n    \n, \n    \n    \n    ksl14\n    \n as \n    \n    ksl14\n    \n, \n    \n    \n    ksl15\n    \n as \n    \n    ksl15\n    \n, \n    \n    \n    ksl16\n    \n as \n    \n    ksl16\n    \n, \n    \n    \n    kslvt\n    \n as \n    \n    kslvt\n    \n, \n    \n    \n    logsys\n    \n as \n    \n    logsys\n    \n, \n    \n    \n    msl01\n    \n as \n    \n    msl01\n    \n, \n    \n    \n    msl02\n    \n as \n    \n    msl02\n    \n, \n    \n    \n    msl03\n    \n as \n    \n    msl03\n    \n, \n    \n    \n    msl04\n    \n as \n    \n    msl04\n    \n, \n    \n    \n    msl05\n    \n as \n    \n    msl05\n    \n, \n    \n    \n    msl06\n    \n as \n    \n    msl06\n    \n, \n    \n    \n    msl07\n    \n as \n    \n    msl07\n    \n, \n    \n    \n    msl08\n    \n as \n    \n    msl08\n    \n, \n    \n    \n    msl09\n    \n as \n    \n    msl09\n    \n, \n    \n    \n    msl10\n    \n as \n    \n    msl10\n    \n, \n    \n    \n    msl11\n    \n as \n    \n    msl11\n    \n, \n    \n    \n    msl12\n    \n as \n    \n    msl12\n    \n, \n    \n    \n    msl13\n    \n as \n    \n    msl13\n    \n, \n    \n    \n    msl14\n    \n as \n    \n    msl14\n    \n, \n    \n    \n    msl15\n    \n as \n    \n    msl15\n    \n, \n    \n    \n    msl16\n    \n as \n    \n    msl16\n    \n, \n    \n    \n    mslvt\n    \n as \n    \n    mslvt\n    \n, \n    \n    \n    objnr00\n    \n as \n    \n    objnr00\n    \n, \n    \n    \n    objnr01\n    \n as \n    \n    objnr01\n    \n, \n    \n    \n    objnr02\n    \n as \n    \n    objnr02\n    \n, \n    \n    \n    objnr03\n    \n as \n    \n    objnr03\n    \n, \n    \n    \n    objnr04\n    \n as \n    \n    objnr04\n    \n, \n    \n    \n    objnr05\n    \n as \n    \n    objnr05\n    \n, \n    \n    \n    objnr06\n    \n as \n    \n    objnr06\n    \n, \n    \n    \n    objnr07\n    \n as \n    \n    objnr07\n    \n, \n    \n    \n    objnr08\n    \n as \n    \n    objnr08\n    \n, \n    \n    \n    osl01\n    \n as \n    \n    osl01\n    \n, \n    \n    \n    osl02\n    \n as \n    \n    osl02\n    \n, \n    \n    \n    osl03\n    \n as \n    \n    osl03\n    \n, \n    \n    \n    osl04\n    \n as \n    \n    osl04\n    \n, \n    \n    \n    osl05\n    \n as \n    \n    osl05\n    \n, \n    \n    \n    osl06\n    \n as \n    \n    osl06\n    \n, \n    \n    \n    osl07\n    \n as \n    \n    osl07\n    \n, \n    \n    \n    osl08\n    \n as \n    \n    osl08\n    \n, \n    \n    \n    osl09\n    \n as \n    \n    osl09\n    \n, \n    \n    \n    osl10\n    \n as \n    \n    osl10\n    \n, \n    \n    \n    osl11\n    \n as \n    \n    osl11\n    \n, \n    \n    \n    osl12\n    \n as \n    \n    osl12\n    \n, \n    \n    \n    osl13\n    \n as \n    \n    osl13\n    \n, \n    \n    \n    osl14\n    \n as \n    \n    osl14\n    \n, \n    \n    \n    osl15\n    \n as \n    \n    osl15\n    \n, \n    \n    \n    osl16\n    \n as \n    \n    osl16\n    \n, \n    \n    \n    oslvt\n    \n as \n    \n    oslvt\n    \n, \n    \n    \n    pprctr\n    \n as \n    \n    pprctr\n    \n, \n    \n    \n    prctr\n    \n as \n    \n    prctr\n    \n, \n    \n    \n    psegment\n    \n as \n    \n    psegment\n    \n, \n    \n    \n    racct\n    \n as \n    \n    racct\n    \n, \n    \n    \n    rassc\n    \n as \n    \n    rassc\n    \n, \n    \n    \n    rbukrs\n    \n as \n    \n    rbukrs\n    \n, \n    \n    \n    rbusa\n    \n as \n    \n    rbusa\n    \n, \n    \n    \n    rclnt\n    \n as \n    \n    rclnt\n    \n, \n    \n    \n    rcntr\n    \n as \n    \n    rcntr\n    \n, \n    \n    \n    rfarea\n    \n as \n    \n    rfarea\n    \n, \n    \n    \n    rldnr\n    \n as \n    \n    rldnr\n    \n, \n    \n    \n    rmvct\n    \n as \n    \n    rmvct\n    \n, \n    \n    \n    rpmax\n    \n as \n    \n    rpmax\n    \n, \n    \n    \n    rrcty\n    \n as \n    \n    rrcty\n    \n, \n    \n    \n    rtcur\n    \n as \n    \n    rtcur\n    \n, \n    \n    \n    runit\n    \n as \n    \n    runit\n    \n, \n    \n    \n    rvers\n    \n as \n    \n    rvers\n    \n, \n    \n    \n    ryear\n    \n as \n    \n    ryear\n    \n, \n    \n    \n    sbusa\n    \n as \n    \n    sbusa\n    \n, \n    \n    \n    scntr\n    \n as \n    \n    scntr\n    \n, \n    \n    \n    segment\n    \n as \n    \n    segment\n    \n, \n    \n    \n    sfarea\n    \n as \n    \n    sfarea\n    \n, \n    \n    \n    timestamp\n    \n as faglflext_timestamp , \n    \n    \n    tsl01\n    \n as \n    \n    tsl01\n    \n, \n    \n    \n    tsl02\n    \n as \n    \n    tsl02\n    \n, \n    \n    \n    tsl03\n    \n as \n    \n    tsl03\n    \n, \n    \n    \n    tsl04\n    \n as \n    \n    tsl04\n    \n, \n    \n    \n    tsl05\n    \n as \n    \n    tsl05\n    \n, \n    \n    \n    tsl06\n    \n as \n    \n    tsl06\n    \n, \n    \n    \n    tsl07\n    \n as \n    \n    tsl07\n    \n, \n    \n    \n    tsl08\n    \n as \n    \n    tsl08\n    \n, \n    \n    \n    tsl09\n    \n as \n    \n    tsl09\n    \n, \n    \n    \n    tsl10\n    \n as \n    \n    tsl10\n    \n, \n    \n    \n    tsl11\n    \n as \n    \n    tsl11\n    \n, \n    \n    \n    tsl12\n    \n as \n    \n    tsl12\n    \n, \n    \n    \n    tsl13\n    \n as \n    \n    tsl13\n    \n, \n    \n    \n    tsl14\n    \n as \n    \n    tsl14\n    \n, \n    \n    \n    tsl15\n    \n as \n    \n    tsl15\n    \n, \n    \n    \n    tsl16\n    \n as \n    \n    tsl16\n    \n, \n    \n    \n    tslvt\n    \n as \n    \n    tslvt\n    \n, \n    \n    \n    zzspreg\n    \n as \n    \n    zzspreg\n    \n\n\n\n    from base\n),\n\nfinal as (\n\n    select\n        cast(rclnt as TEXT) as rclnt,\n        ryear,\n        objnr00,\n        objnr01,\n        objnr02,\n        objnr03,\n        objnr04,\n        objnr05,\n        objnr06,\n        objnr07,\n        objnr08,\n        drcrk,\n        rpmax,\n        activ,\n        rmvct,\n        rtcur,\n        runit,\n        awtyp,\n        cast(rldnr as TEXT) as rldnr,\n        rrcty,\n        rvers,\n        logsys,\n        racct,\n        cost_elem, \n        cast(rbukrs as TEXT) as rbukrs,\n        rcntr,\n        prctr,\n        rfarea,\n        rbusa,\n        kokrs,\n        segment,\n        zzspreg,\n        scntr,\n        pprctr,\n        sfarea,\n        sbusa,\n        rassc,\n        psegment,\n        hslvt,\n        hsl01,\n        hsl02,\n        hsl03,\n        hsl04,\n        hsl05,\n        hsl06,\n        hsl07,\n        hsl08,\n        hsl09,\n        hsl10,\n        hsl11,\n        hsl12,\n        hsl13,\n        hsl14,\n        hsl15,\n        hsl16,\n        tslvt,\n        tsl01,\n        tsl02,\n        tsl03,\n        tsl04,\n        tsl05,\n        tsl06,\n        tsl07,\n        tsl08,\n        tsl09,\n        tsl10,\n        tsl11,\n        tsl12,\n        tsl13,\n        tsl14,\n        tsl15,\n        tsl16,\n        kslvt,\n        ksl01,\n        ksl02,\n        ksl03,\n        ksl04,\n        ksl05,\n        ksl06,\n        ksl07,\n        ksl08,\n        ksl09,\n        ksl10,\n        ksl11,\n        ksl12,\n        ksl13,\n        ksl14,\n        ksl15,\n        ksl16,\n        oslvt,\n        osl01,\n        osl02,\n        osl03,\n        osl04,\n        osl05,\n        osl06,\n        osl07,\n        osl08,\n        osl09,\n        osl10,\n        osl11,\n        osl12,\n        osl13,\n        osl14,\n        osl15,\n        osl16,\n        faglflext_timestamp,\n        _fivetran_rowid,\n        _fivetran_deleted,\n        _fivetran_synced\n    from fields\n)\n\nselect * \nfrom final", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null, "primary_key": [], "time_spine": null}, "model.sap.stg_sap__ska1": {"database": "postgres", "schema": "public_sap_dev", "name": "stg_sap__ska1", "resource_type": "model", "package_name": "sap", "path": "staging/stg_sap__ska1.sql", "original_file_path": "models/staging/stg_sap__ska1.sql", "unique_id": "model.sap.stg_sap__ska1", "fqn": ["sap", "staging", "stg_sap__ska1"], "alias": "stg_sap__ska1", "checksum": {"name": "sha256", "checksum": "0ae6a9b62c6c3158e378b9613ae0002c0c195a2d7b0b0cfcbcc9ae11faac6ad7"}, "config": {"enabled": true, "alias": null, "schema": "sap_dev", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "view", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "freshness": null}, "tags": [], "description": "G/L Account Master (Chart of Accounts)", "columns": {"bilkt": {"name": "bilkt", "description": "Group account number", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "erdat": {"name": "erdat", "description": "Date on which the record was created", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "ernam": {"name": "ernam", "description": "Name of person who created the object", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "func_area": {"name": "func_area", "description": "Functional area", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "gvtyp": {"name": "gvtyp", "description": "P&L statement account type", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "ktoks": {"name": "ktoks", "description": "G/L account group", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "ktopl": {"name": "ktopl", "description": "Chart of accounts", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "mandt": {"name": "mandt", "description": "Client", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "mustr": {"name": "mustr", "description": "Number of the sample account", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "sakan": {"name": "sakan", "description": "G/L account number, significant length", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "saknr": {"name": "saknr", "description": "G/L account number", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "vbund": {"name": "vbund", "description": "Company id of tradiing partner", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "xbilk": {"name": "xbilk", "description": "Indicator (account is a balance sheet account?)", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "xloev": {"name": "xloev", "description": "Indicator (account marked for deletion?)", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "xspea": {"name": "xspea", "description": "Indicator (account is blocked for creation?)", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "xspeb": {"name": "xspeb", "description": "Indicator (Is account blocked for posting?)", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "xspep": {"name": "xspep", "description": "Indicator (Account blocked for planning?)", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "_fivetran_deleted": {"name": "_fivetran_deleted", "description": "Fivetran deletion marker", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "_fivetran_rowid": {"name": "_fivetran_rowid", "description": "Fivetran unique row ID", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "_fivetran_synced": {"name": "_fivetran_synced", "description": "Fivetran sync timestamp", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": "sap://models/staging/stg_sap.yml", "build_path": null, "unrendered_config": {"materialized": "view", "schema": "sap_{{ var('directed_schema','dev') }}", "enabled": true}, "created_at": 1756850331.1234663, "relation_name": "\"postgres\".\"public_sap_dev\".\"stg_sap__ska1\"", "raw_code": "{{ config(enabled=var('sap_using_ska1', True)) }}\n\n{% set source_columns = adapter.get_columns_in_relation(ref('stg_sap__ska1_tmp')) %}\n\nwith base as (\n\n    select {{ remove_slashes_from_col_names(source_columns) }}\n    from {{ ref('stg_sap__ska1_tmp') }}\n),\n\nfields as (\n\n    select\n        {{\n            fivetran_utils.fill_staging_columns(\n                source_columns=source_columns,\n                staging_columns=get_ska1_columns()\n            )\n        }}\n    from base\n),\n\nfinal as (\n    \n    select \n        cast(mandt as {{ dbt.type_string() }}) as mandt,\n        ktopl,\n        saknr,\n        bilkt,\n        gvtyp,\n        vbund,\n        xbilk,\n        sakan,\n        erdat,\n        ernam,\n        ktoks,\n        xloev,\n        xspea,\n        xspeb,\n        xspep,\n        func_area,\n        mustr,\t\n        _fivetran_rowid,\n        _fivetran_deleted,\n        _fivetran_synced\n    from fields\n)\n\nselect *\nfrom final", "doc_blocks": [], "language": "sql", "refs": [{"name": "stg_sap__ska1_tmp", "package": null, "version": null}, {"name": "stg_sap__ska1_tmp", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.sap.remove_slashes_from_col_names", "macro.sap.get_ska1_columns", "macro.fivetran_utils.fill_staging_columns", "macro.dbt.type_string"], "nodes": ["model.sap.stg_sap__ska1_tmp"]}, "compiled_path": "target/compiled/sap/models/staging/stg_sap__ska1.sql", "compiled": true, "compiled_code": "\n\n\n\nwith base as (\n\n    select \n        \"mandt\" as mandt,\n        \"ktopl\" as ktopl,\n        \"saknr\" as saknr,\n        \"bilkt\" as bilkt,\n        \"gvtyp\" as gvtyp,\n        \"vbund\" as vbund,\n        \"xbilk\" as xbilk,\n        \"sakan\" as sakan,\n        \"erdat\" as erdat,\n        \"ernam\" as ernam,\n        \"ktoks\" as ktoks,\n        \"xloev\" as xloev,\n        \"xspea\" as xspea,\n        \"xspeb\" as xspeb,\n        \"xspep\" as xspep,\n        \"func_area\" as func_area,\n        \"mustr\" as mustr,\n        \"_fivetran_rowid\" as _fivetran_rowid,\n        \"_fivetran_deleted\" as _fivetran_deleted,\n        \"_fivetran_synced\" as _fivetran_synced\n    from \"postgres\".\"public_sap_dev\".\"stg_sap__ska1_tmp\"\n),\n\nfields as (\n\n    select\n        \n    \n    \n    _fivetran_deleted\n    \n as \n    \n    _fivetran_deleted\n    \n, \n    \n    \n    _fivetran_rowid\n    \n as \n    \n    _fivetran_rowid\n    \n, \n    \n    \n    _fivetran_synced\n    \n as \n    \n    _fivetran_synced\n    \n, \n    \n    \n    bilkt\n    \n as \n    \n    bilkt\n    \n, \n    \n    \n    erdat\n    \n as \n    \n    erdat\n    \n, \n    \n    \n    ernam\n    \n as \n    \n    ernam\n    \n, \n    \n    \n    func_area\n    \n as \n    \n    func_area\n    \n, \n    \n    \n    gvtyp\n    \n as \n    \n    gvtyp\n    \n, \n    \n    \n    ktoks\n    \n as \n    \n    ktoks\n    \n, \n    \n    \n    ktopl\n    \n as \n    \n    ktopl\n    \n, \n    \n    \n    mandt\n    \n as \n    \n    mandt\n    \n, \n    cast(null as TEXT) as \n    \n    mcod1\n    \n , \n    \n    \n    mustr\n    \n as \n    \n    mustr\n    \n, \n    \n    \n    sakan\n    \n as \n    \n    sakan\n    \n, \n    \n    \n    saknr\n    \n as \n    \n    saknr\n    \n, \n    \n    \n    vbund\n    \n as \n    \n    vbund\n    \n, \n    \n    \n    xbilk\n    \n as \n    \n    xbilk\n    \n, \n    \n    \n    xloev\n    \n as \n    \n    xloev\n    \n, \n    \n    \n    xspea\n    \n as \n    \n    xspea\n    \n, \n    \n    \n    xspeb\n    \n as \n    \n    xspeb\n    \n, \n    \n    \n    xspep\n    \n as \n    \n    xspep\n    \n\n\n\n    from base\n),\n\nfinal as (\n    \n    select \n        cast(mandt as TEXT) as mandt,\n        ktopl,\n        saknr,\n        bilkt,\n        gvtyp,\n        vbund,\n        xbilk,\n        sakan,\n        erdat,\n        ernam,\n        ktoks,\n        xloev,\n        xspea,\n        xspeb,\n        xspep,\n        func_area,\n        mustr,\t\n        _fivetran_rowid,\n        _fivetran_deleted,\n        _fivetran_synced\n    from fields\n)\n\nselect *\nfrom final", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null, "primary_key": [], "time_spine": null}, "model.sap.stg_sap__bseg": {"database": "postgres", "schema": "public_sap_dev", "name": "stg_sap__bseg", "resource_type": "model", "package_name": "sap", "path": "staging/stg_sap__bseg.sql", "original_file_path": "models/staging/stg_sap__bseg.sql", "unique_id": "model.sap.stg_sap__bseg", "fqn": ["sap", "staging", "stg_sap__bseg"], "alias": "stg_sap__bseg", "checksum": {"name": "sha256", "checksum": "f6e480163d859cf0fddf3e10a8819de20721e364041dc0b82f362109e755b8cd"}, "config": {"enabled": true, "alias": null, "schema": "sap_dev", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "view", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "freshness": null}, "tags": [], "description": "Accounting document segment", "columns": {"absbt": {"name": "absbt", "description": "Credit management (Hedged amount)", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "agzei": {"name": "agzei", "description": "Clearing item", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "anln1": {"name": "anln1", "description": "Main asset number", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "anln2": {"name": "anln2", "description": "Asset subnumber", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "aufnr": {"name": "aufnr", "description": "Order number", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "augbl": {"name": "augbl", "description": "Document number of the clearing document", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "augdt": {"name": "augdt", "description": "Clearing date", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "auggj": {"name": "auggj", "description": "Fiscal year of clearing document", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "bdif2": {"name": "bdif2", "description": "Valuation difference for the second local currency", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "bdif3": {"name": "bdif3", "description": "Valuation difference for the third local currency", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "bdiff": {"name": "bdiff", "description": "Valuation difference", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "belnr": {"name": "belnr", "description": "Accounting document number", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "bewar": {"name": "bewar", "description": "Transaction type", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "bukrs": {"name": "bukrs", "description": "Company code", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "bupla": {"name": "bupla", "description": "Business place", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "buzei": {"name": "buzei", "description": "Number of line item within accounting document", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "buzid": {"name": "buzid", "description": "Identification of the line item", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "ccbtc": {"name": "ccbtc", "description": "Payment cards (Settlement run)", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "cession_kz": {"name": "cession_kz", "description": "Accounts receivable pledging indicator", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "dabrz": {"name": "dabrz", "description": "Reference date for settlement", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "dmbtr": {"name": "dmbtr", "description": "Amount in local currency", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "dtws1": {"name": "dtws1", "description": "Instruction key 1", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "dtws2": {"name": "dtws2", "description": "Instruction key 2", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "dtws3": {"name": "dtws3", "description": "Instruction key 3", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "dtws4": {"name": "dtws4", "description": "Instruction key 4", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "ebeln": {"name": "ebeln", "description": "Purchasing document number", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "ebelp": {"name": "ebelp", "description": "Item number of purchasing document", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "eten2": {"name": "eten2", "description": "Delivery schedule line number", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "filkd": {"name": "filkd", "description": "Account number of the branch", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "fkber": {"name": "fkber", "description": "Functional area", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "fkber_long": {"name": "fkber_long", "description": "Functional area", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "gjahr": {"name": "gjahr", "description": "Fiscal year", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "gsber": {"name": "gsber", "description": "Business area", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "hkont": {"name": "hkont", "description": "General ledger account", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "imkey": {"name": "imkey", "description": "Internal key for real estate object", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "kidno": {"name": "kidno", "description": "Payment reference", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "kkber": {"name": "kkber", "description": "Credit control area", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "koart": {"name": "koart", "description": "Account type", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "kostl": {"name": "kostl", "description": "Cost center", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "kstar": {"name": "kstar", "description": "Cost element", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "kunnr": {"name": "kunnr", "description": "Customer numbers", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "lifnr": {"name": "lifnr", "description": "Account number of vendor or creditor", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "maber": {"name": "maber", "description": "Dunning Area", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "madat": {"name": "madat", "description": "Last dunned on", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "mandt": {"name": "mandt", "description": "Client", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "mansp": {"name": "mansp", "description": "Dunning block", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "manst": {"name": "manst", "description": "Dunning level", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "meins": {"name": "meins", "description": "Base unit of measure", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "menge": {"name": "menge", "description": "Quantity", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "mschl": {"name": "mschl", "description": "Dunning key", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "mwskz": {"name": "mwskz", "description": "Tax on sales/purchases code", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "pargb": {"name": "pargb", "description": "Trading partner's business area", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "pfkber": {"name": "pfkber", "description": "Partner functional area", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "posn2": {"name": "posn2", "description": "Sales document item", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "pprct": {"name": "pprct", "description": "Partner profit center", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "projk": {"name": "projk", "description": "Work Breakdown Structure Element (WBS Element)", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "pswbt": {"name": "pswbt", "description": "Amount for updating in general ledger", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "pswsl": {"name": "pswsl", "description": "Update currency for general ledger transaction figures", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "pyamt": {"name": "pyamt", "description": "Amount in payment currency", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "pycur": {"name": "pycur", "description": "Currency for automatic payment", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "qbshb": {"name": "qbshb", "description": "Withholding tax amount (in document currency)", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "qsfbt": {"name": "qsfbt", "description": "Withholding tax-exempt amount (in document currency)", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "qsshb": {"name": "qsshb", "description": "Withholding tax base amount", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "rebzg": {"name": "rebzg", "description": "Number of the invoice the transaction belongs to", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "rebzt": {"name": "rebzt", "description": "Follow-on document type", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "rfzei": {"name": "rfzei", "description": "Payment card item", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "rstgr": {"name": "rstgr", "description": "Reason code for payments", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "saknr": {"name": "saknr", "description": "G/L account number", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "samnr": {"name": "samnr", "description": "Invoice list number", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "secco": {"name": "secco", "description": "Section code", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "sgtxt": {"name": "sgtxt", "description": "Item text", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "shkzg": {"name": "shkzg", "description": "Debit/credit indicator", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "skfbt": {"name": "skfbt", "description": "Amount eligible for cash discount in document currency", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "sknto": {"name": "sknto", "description": "Cash discount amount in local currency", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "umsks": {"name": "umsks", "description": "Special G/L transaction type", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "umskz": {"name": "umskz", "description": "Special G/L indicator", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "uzawe": {"name": "uzawe", "description": "Payment method supplement", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "valut": {"name": "valut", "description": "Value date", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "vbel2": {"name": "vbel2", "description": "Sales document", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "vbeln": {"name": "vbeln", "description": "Billing document", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "vbewa": {"name": "vbewa", "description": "Flow type", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "vbund": {"name": "vbund", "description": "Company id of trading partner", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "vertn": {"name": "vertn", "description": "Contract number", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "vertt": {"name": "vertt", "description": "Contract type", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "werks": {"name": "werks", "description": "Plant", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "wrbtr": {"name": "wrbtr", "description": "Amount in document currency", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "wskto": {"name": "wskto", "description": "Cash discount amount in document currency", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "wverw": {"name": "wverw", "description": "Bill of exchange usage type", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "xlgclr": {"name": "xlgclr", "description": "Clearing specific to ledger groups", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "xnegp": {"name": "xnegp", "description": "Indicator (Negative posting)", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "xopvw": {"name": "xopvw", "description": "Indicator (Open item management?)", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "xpypr": {"name": "xpypr", "description": "Indicator (Items from payment program blocked)", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "xragl": {"name": "xragl", "description": "Indicator (Clearing was reversed)", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "xref1": {"name": "xref1", "description": "Business partner reference key", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "xref2": {"name": "xref2", "description": "Business partner reference key", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "xref3": {"name": "xref3", "description": "Reference key for line item", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "xzahl": {"name": "xzahl", "description": "Indicator (Is the posting key used in a payment transaction?)", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "zbd1p": {"name": "zbd1p", "description": "Cash discount percentage 1", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "zbd1t": {"name": "zbd1t", "description": "Cash discount days 1", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "zbd2p": {"name": "zbd2p", "description": "Cash discount percentage 2", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "zbd2t": {"name": "zbd2t", "description": "Cash discount days 2", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "zbd3t": {"name": "zbd3t", "description": "Net payment terms period", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "zbfix": {"name": "zbfix", "description": "Fixed payment terms", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "zfbdt": {"name": "zfbdt", "description": "Baseline date for due date calculation", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "zlsch": {"name": "zlsch", "description": "Payment method", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "zlspr": {"name": "zlspr", "description": "Payment block key", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "zterm": {"name": "zterm", "description": "Terms of payment key", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "zuonr": {"name": "zuonr", "description": "Assignment number", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "zzbuspartn": {"name": "zzbuspartn", "description": "Business partner", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "zzchan": {"name": "zzchan", "description": "Distribution channel", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "zzlob": {"name": "zzlob", "description": "Business line", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "zzloca": {"name": "zzloca", "description": "City", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "zzproduct": {"name": "zzproduct", "description": "Product group", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "zzregion": {"name": "zzregion", "description": "User defined regions", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "zzspreg": {"name": "zzspreg", "description": "Special region", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "zzstate": {"name": "zzstate", "description": "State/province code", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "zzuserfld1": {"name": "zzuserfld1", "description": "Territory", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "zzuserfld2": {"name": "zzuserfld2", "description": "Owner/Cont.", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "zzuserfld3": {"name": "zzuserfld3", "description": "Vein", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": "sap://models/staging/stg_sap.yml", "build_path": null, "unrendered_config": {"materialized": "view", "schema": "sap_{{ var('directed_schema','dev') }}", "enabled": true}, "created_at": 1756850330.6287377, "relation_name": "\"postgres\".\"public_sap_dev\".\"stg_sap__bseg\"", "raw_code": "{{ config(enabled=var('sap_using_bseg', True)) }}\n\n{% set source_columns = adapter.get_columns_in_relation(ref('stg_sap__bseg_tmp')) %}\n\nwith base as (\n\n    select {{ remove_slashes_from_col_names(source_columns) }}\n    from {{ ref('stg_sap__bseg_tmp') }}\n),\n\nfields as (\n\n    select\n        {{\n            fivetran_utils.fill_staging_columns(\n                source_columns=source_columns,\n                staging_columns=get_bseg_columns()\n            )\n        }}\n    from base\n),\n\nfinal as (\n\n    select\n        cast(mandt as {{ dbt.type_string() }}) as mandt,\n        cast(bukrs as {{ dbt.type_string() }}) as bukrs,\n        cast(belnr as {{ dbt.type_string() }}) as belnr,\n        cast(gjahr as {{ dbt.type_string() }}) as gjahr,\n        cast(buzei as {{ dbt.type_string() }}) as buzei,\n        anln1,\n        anln2,\n        aufnr,\n        augbl,\n        augdt,\n        cast(ebeln as {{ dbt.type_string() }}) as ebeln,\n        cast(ebelp as {{ dbt.type_string() }}) as ebelp,\n        eten2, \n        filkd,\n        gsber, \n        koart, \n        kostl,\n        maber,\n        madat,\n\n        mansp,\n        manst,\n        mschl,\n        mwskz,\n        posn2,\n        qbshb,\n        qsfbt,\n        qsshb,\n        rebzg,\n        samnr,\n        sgtxt,\n        cast(shkzg as {{ dbt.type_string() }}) as shkzg,\n        skfbt,\n        wskto,\n        sknto, \n        umsks,\n        umskz,\n        uzawe,\n        valut,\n        vbel2,\n        cast(vbeln as {{ dbt.type_string() }}) as vbeln,\n        vbewa,\n        vbund,\n        vertn,\n        vertt, \n        werks, \n        wverw, \n        xzahl, \n        zbd1p,\n        zbd1t,\n        zbd2p,\n        zbd2t,\n        zbd3t,\n        zfbdt, \n        zlsch,\n        zlspr,\n        zterm,\n        zuonr,\n        xref1,\n        xref2, \n        rstgr,  \n        rebzt,\n        pswsl,\n        pswbt,\n        hkont,\n        xnegp,\n        zbfix,\n        rfzei,\n        ccbtc,\n        kkber,\n        xref3,\n        dtws1,\n        dtws2,\n        dtws3,\n        dtws4,\n        absbt, \n        projk,\n        xpypr,\n        kidno, \n        bupla,\n        secco, \n        pycur,\n        pyamt, \n        xragl,\n        cession_kz,\n        buzid,\n        auggj,\n        agzei, \n        bdiff,\n        bdif2,\n        bdif3,\n        bewar,\n        dabrz,\n        dmbtr,\n        fkber,\n        fkber_long,\n        imkey,\n        kstar,\n        cast(kunnr as {{ dbt.type_string() }}) as kunnr,\n        lifnr,\n        meins,\n        cast(menge as {{ dbt.type_numeric() }}) as menge,\n        pargb, \n        pfkber, \n        pprct, \n        saknr,\n        wrbtr,\n        xopvw,\n        xlgclr,\n        zzspreg,\n        zzbuspartn,\n        zzproduct,\n        zzloca,\n        zzchan,\n        zzlob, \n        zzuserfld1,\n        zzuserfld2,\n        zzuserfld3,\n        zzregion,\n        zzstate\n    from fields\n)\n\nselect *\nfrom final", "doc_blocks": [], "language": "sql", "refs": [{"name": "stg_sap__bseg_tmp", "package": null, "version": null}, {"name": "stg_sap__bseg_tmp", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.sap.remove_slashes_from_col_names", "macro.sap.get_bseg_columns", "macro.fivetran_utils.fill_staging_columns", "macro.dbt.type_string", "macro.dbt.type_numeric"], "nodes": ["model.sap.stg_sap__bseg_tmp"]}, "compiled_path": "target/compiled/sap/models/staging/stg_sap__bseg.sql", "compiled": true, "compiled_code": "\n\n\n\nwith base as (\n\n    select \n        \"belnr\" as belnr,\n        \"bukrs\" as bukrs,\n        \"buzei\" as buzei,\n        \"gjahr\" as gjahr,\n        \"mandt\" as mandt,\n        \"buzid\" as buzid,\n        \"augdt\" as augdt,\n        \"augcp\" as augcp,\n        \"augbl\" as augbl,\n        \"bschl\" as bschl,\n        \"koart\" as koart,\n        \"umskz\" as umskz,\n        \"umsks\" as umsks,\n        \"zumsk\" as zumsk,\n        \"shkzg\" as shkzg,\n        \"gsber\" as gsber,\n        \"pargb\" as pargb,\n        \"mwskz\" as mwskz,\n        \"qsskz\" as qsskz,\n        \"dmbtr\" as dmbtr,\n        \"wrbtr\" as wrbtr,\n        \"kzbtr\" as kzbtr,\n        \"pswbt\" as pswbt,\n        \"pswsl\" as pswsl,\n        \"txbhw\" as txbhw,\n        \"txbfw\" as txbfw,\n        \"mwsts\" as mwsts,\n        \"wmwst\" as wmwst,\n        \"hwbas\" as hwbas,\n        \"fwbas\" as fwbas,\n        \"hwzuz\" as hwzuz,\n        \"fwzuz\" as fwzuz,\n        \"shzuz\" as shzuz,\n        \"stekz\" as stekz,\n        \"mwart\" as mwart,\n        \"txgrp\" as txgrp,\n        \"ktosl\" as ktosl,\n        \"qsshb\" as qsshb,\n        \"kursr\" as kursr,\n        \"gbetr\" as gbetr,\n        \"bdiff\" as bdiff,\n        \"bdif2\" as bdif2,\n        \"valut\" as valut,\n        \"zuonr\" as zuonr,\n        \"sgtxt\" as sgtxt,\n        \"zinkz\" as zinkz,\n        \"vbund\" as vbund,\n        \"bewar\" as bewar,\n        \"altkt\" as altkt,\n        \"vorgn\" as vorgn,\n        \"fdlev\" as fdlev,\n        \"fdgrp\" as fdgrp,\n        \"fdwbt\" as fdwbt,\n        \"fdtag\" as fdtag,\n        \"fkont\" as fkont,\n        \"kokrs\" as kokrs,\n        \"kostl\" as kostl,\n        \"projn\" as projn,\n        \"aufnr\" as aufnr,\n        \"vbeln\" as vbeln,\n        \"vbel2\" as vbel2,\n        \"posn2\" as posn2,\n        \"eten2\" as eten2,\n        \"anln1\" as anln1,\n        \"anln2\" as anln2,\n        \"anbwa\" as anbwa,\n        \"bzdat\" as bzdat,\n        \"pernr\" as pernr,\n        \"xumsw\" as xumsw,\n        \"xhres\" as xhres,\n        \"xkres\" as xkres,\n        \"xopvw\" as xopvw,\n        \"xcpdd\" as xcpdd,\n        \"xskst\" as xskst,\n        \"xsauf\" as xsauf,\n        \"xspro\" as xspro,\n        \"xserg\" as xserg,\n        \"xfakt\" as xfakt,\n        \"xuman\" as xuman,\n        \"xanet\" as xanet,\n        \"xskrl\" as xskrl,\n        \"xinve\" as xinve,\n        \"xpanz\" as xpanz,\n        \"xauto\" as xauto,\n        \"xncop\" as xncop,\n        \"xzahl\" as xzahl,\n        \"saknr\" as saknr,\n        \"hkont\" as hkont,\n        \"kunnr\" as kunnr,\n        \"lifnr\" as lifnr,\n        \"filkd\" as filkd,\n        \"xbilk\" as xbilk,\n        \"gvtyp\" as gvtyp,\n        \"hzuon\" as hzuon,\n        \"zfbdt\" as zfbdt,\n        \"zterm\" as zterm,\n        \"zbd1t\" as zbd1t,\n        \"zbd2t\" as zbd2t,\n        \"zbd3t\" as zbd3t,\n        \"zbd1p\" as zbd1p,\n        \"zbd2p\" as zbd2p,\n        \"skfbt\" as skfbt,\n        \"sknto\" as sknto,\n        \"wskto\" as wskto,\n        \"zlsch\" as zlsch,\n        \"zlspr\" as zlspr,\n        \"zbfix\" as zbfix,\n        \"hbkid\" as hbkid,\n        \"bvtyp\" as bvtyp,\n        \"nebtr\" as nebtr,\n        \"mwsk1\" as mwsk1,\n        \"dmbt1\" as dmbt1,\n        \"wrbt1\" as wrbt1,\n        \"mwsk2\" as mwsk2,\n        \"dmbt2\" as dmbt2,\n        \"wrbt2\" as wrbt2,\n        \"mwsk3\" as mwsk3,\n        \"dmbt3\" as dmbt3,\n        \"wrbt3\" as wrbt3,\n        \"rebzg\" as rebzg,\n        \"rebzj\" as rebzj,\n        \"rebzz\" as rebzz,\n        \"rebzt\" as rebzt,\n        \"zollt\" as zollt,\n        \"zolld\" as zolld,\n        \"lzbkz\" as lzbkz,\n        \"landl\" as landl,\n        \"diekz\" as diekz,\n        \"samnr\" as samnr,\n        \"abper\" as abper,\n        \"vrskz\" as vrskz,\n        \"vrsdt\" as vrsdt,\n        \"disbn\" as disbn,\n        \"disbj\" as disbj,\n        \"disbz\" as disbz,\n        \"wverw\" as wverw,\n        \"anfbn\" as anfbn,\n        \"anfbj\" as anfbj,\n        \"anfbu\" as anfbu,\n        \"anfae\" as anfae,\n        \"blnbt\" as blnbt,\n        \"blnkz\" as blnkz,\n        \"blnpz\" as blnpz,\n        \"mschl\" as mschl,\n        \"mansp\" as mansp,\n        \"madat\" as madat,\n        \"manst\" as manst,\n        \"maber\" as maber,\n        \"esrnr\" as esrnr,\n        \"esrre\" as esrre,\n        \"esrpz\" as esrpz,\n        \"klibt\" as klibt,\n        \"qsznr\" as qsznr,\n        \"qbshb\" as qbshb,\n        \"qsfbt\" as qsfbt,\n        \"navhw\" as navhw,\n        \"navfw\" as navfw,\n        \"matnr\" as matnr,\n        \"werks\" as werks,\n        \"menge\" as menge,\n        \"meins\" as meins,\n        \"erfmg\" as erfmg,\n        \"erfme\" as erfme,\n        \"bpmng\" as bpmng,\n        \"bprme\" as bprme,\n        \"ebeln\" as ebeln,\n        \"ebelp\" as ebelp,\n        \"zekkn\" as zekkn,\n        \"elikz\" as elikz,\n        \"vprsv\" as vprsv,\n        \"peinh\" as peinh,\n        \"bwkey\" as bwkey,\n        \"bwtar\" as bwtar,\n        \"bustw\" as bustw,\n        \"rewrt\" as rewrt,\n        \"rewwr\" as rewwr,\n        \"bonfb\" as bonfb,\n        \"bualt\" as bualt,\n        \"psalt\" as psalt,\n        \"nprei\" as nprei,\n        \"tbtkz\" as tbtkz,\n        \"spgrp\" as spgrp,\n        \"spgrm\" as spgrm,\n        \"spgrt\" as spgrt,\n        \"spgrg\" as spgrg,\n        \"spgrv\" as spgrv,\n        \"spgrq\" as spgrq,\n        \"stceg\" as stceg,\n        \"egbld\" as egbld,\n        \"eglld\" as eglld,\n        \"rstgr\" as rstgr,\n        \"ryacq\" as ryacq,\n        \"rpacq\" as rpacq,\n        \"rdiff\" as rdiff,\n        \"rdif2\" as rdif2,\n        \"prctr\" as prctr,\n        \"xhkom\" as xhkom,\n        \"vname\" as vname,\n        \"recid\" as recid,\n        \"egrup\" as egrup,\n        \"vptnr\" as vptnr,\n        \"vertt\" as vertt,\n        \"vertn\" as vertn,\n        \"vbewa\" as vbewa,\n        \"depot\" as depot,\n        \"txjcd\" as txjcd,\n        \"imkey\" as imkey,\n        \"dabrz\" as dabrz,\n        \"popts\" as popts,\n        \"fipos\" as fipos,\n        \"kstrg\" as kstrg,\n        \"nplnr\" as nplnr,\n        \"aufpl\" as aufpl,\n        \"aplzl\" as aplzl,\n        \"projk\" as projk,\n        \"paobjnr\" as paobjnr,\n        \"pasubnr\" as pasubnr,\n        \"spgrs\" as spgrs,\n        \"spgrc\" as spgrc,\n        \"btype\" as btype,\n        \"etype\" as etype,\n        \"xegdr\" as xegdr,\n        \"lnran\" as lnran,\n        \"hrkft\" as hrkft,\n        \"dmbe2\" as dmbe2,\n        \"dmbe3\" as dmbe3,\n        \"dmb21\" as dmb21,\n        \"dmb22\" as dmb22,\n        \"dmb23\" as dmb23,\n        \"dmb31\" as dmb31,\n        \"dmb32\" as dmb32,\n        \"dmb33\" as dmb33,\n        \"mwst2\" as mwst2,\n        \"mwst3\" as mwst3,\n        \"navh2\" as navh2,\n        \"navh3\" as navh3,\n        \"sknt2\" as sknt2,\n        \"sknt3\" as sknt3,\n        \"bdif3\" as bdif3,\n        \"rdif3\" as rdif3,\n        \"hwmet\" as hwmet,\n        \"glupm\" as glupm,\n        \"xragl\" as xragl,\n        \"uzawe\" as uzawe,\n        \"lokkt\" as lokkt,\n        \"fistl\" as fistl,\n        \"geber\" as geber,\n        \"stbuk\" as stbuk,\n        \"txbh2\" as txbh2,\n        \"txbh3\" as txbh3,\n        \"pprct\" as pprct,\n        \"xref1\" as xref1,\n        \"xref2\" as xref2,\n        \"kblnr\" as kblnr,\n        \"kblpos\" as kblpos,\n        \"sttax\" as sttax,\n        \"fkber\" as fkber,\n        \"obzei\" as obzei,\n        \"xnegp\" as xnegp,\n        \"rfzei\" as rfzei,\n        \"ccbtc\" as ccbtc,\n        \"kkber\" as kkber,\n        \"empfb\" as empfb,\n        \"xref3\" as xref3,\n        \"dtws1\" as dtws1,\n        \"dtws2\" as dtws2,\n        \"dtws3\" as dtws3,\n        \"dtws4\" as dtws4,\n        \"gricd\" as gricd,\n        \"grirg\" as grirg,\n        \"gityp\" as gityp,\n        \"xpypr\" as xpypr,\n        \"kidno\" as kidno,\n        \"absbt\" as absbt,\n        \"idxsp\" as idxsp,\n        \"linfv\" as linfv,\n        \"kontt\" as kontt,\n        \"kontl\" as kontl,\n        \"txdat\" as txdat,\n        \"agzei\" as agzei,\n        \"pycur\" as pycur,\n        \"pyamt\" as pyamt,\n        \"bupla\" as bupla,\n        \"secco\" as secco,\n        \"lstar\" as lstar,\n        \"cession_kz\" as cession_kz,\n        \"prznr\" as prznr,\n        \"ppdiff\" as ppdiff,\n        \"ppdif2\" as ppdif2,\n        \"ppdif3\" as ppdif3,\n        \"penlc1\" as penlc1,\n        \"penlc2\" as penlc2,\n        \"penlc3\" as penlc3,\n        \"penfc\" as penfc,\n        \"pendays\" as pendays,\n        \"penrc\" as penrc,\n        \"grant_nbr\" as grant_nbr,\n        \"sctax\" as sctax,\n        \"fkber_long\" as fkber_long,\n        \"gmvkz\" as gmvkz,\n        \"srtype\" as srtype,\n        \"intreno\" as intreno,\n        \"measure\" as measure,\n        \"auggj\" as auggj,\n        \"ppa_ex_ind\" as ppa_ex_ind,\n        \"docln\" as docln,\n        \"segment\" as segment,\n        \"psegment\" as psegment,\n        \"pfkber\" as pfkber,\n        \"hktid\" as hktid,\n        \"kstar\" as kstar,\n        \"xlgclr\" as xlgclr,\n        \"taxps\" as taxps,\n        \"pays_prov\" as pays_prov,\n        \"pays_tran\" as pays_tran,\n        \"mndid\" as mndid,\n        \"xfrge_bseg\" as xfrge_bseg,\n        \"squan\" as squan,\n        \"zzspreg\" as zzspreg,\n        \"zzbuspartn\" as zzbuspartn,\n        \"zzchan\" as zzchan,\n        \"zzproduct\" as zzproduct,\n        \"zzloca\" as zzloca,\n        \"zzlob\" as zzlob,\n        \"zzuserfld1\" as zzuserfld1,\n        \"zzuserfld2\" as zzuserfld2,\n        \"zzuserfld3\" as zzuserfld3,\n        \"zzstate\" as zzstate,\n        \"zzregion\" as zzregion,\n        \"re_bukrs\" as re_bukrs,\n        \"re_account\" as re_account,\n        \"pgeber\" as pgeber,\n        \"pgrant_nbr\" as pgrant_nbr,\n        \"budget_pd\" as budget_pd,\n        \"pbudget_pd\" as pbudget_pd,\n        \"j_1tpbupl\" as j_1tpbupl,\n        \"perop_beg\" as perop_beg,\n        \"perop_end\" as perop_end,\n        \"fastpay\" as fastpay,\n        \"ignr_ivref\" as ignr_ivref,\n        \"fmfgus_key\" as fmfgus_key,\n        \"fmxdocnr\" as fmxdocnr,\n        \"fmxyear\" as fmxyear,\n        \"fmxdocln\" as fmxdocln,\n        \"fmxzekkn\" as fmxzekkn,\n        \"prodper\" as prodper,\n        \"recrf\" as recrf,\n        \"_fivetran_rowid\" as _fivetran_rowid,\n        \"_fivetran_deleted\" as _fivetran_deleted,\n        \"_fivetran_synced\" as _fivetran_synced\n    from \"postgres\".\"public_sap_dev\".\"stg_sap__bseg_tmp\"\n),\n\nfields as (\n\n    select\n        \n    \n    \n    _fivetran_deleted\n    \n as \n    \n    _fivetran_deleted\n    \n, \n    \n    \n    _fivetran_rowid\n    \n as \n    \n    _fivetran_rowid\n    \n, \n    \n    \n    _fivetran_synced\n    \n as \n    \n    _fivetran_synced\n    \n, \n    \n    \n    abper\n    \n as \n    \n    abper\n    \n, \n    \n    \n    absbt\n    \n as \n    \n    absbt\n    \n, \n    \n    \n    agzei\n    \n as \n    \n    agzei\n    \n, \n    \n    \n    altkt\n    \n as \n    \n    altkt\n    \n, \n    \n    \n    anbwa\n    \n as \n    \n    anbwa\n    \n, \n    \n    \n    anfae\n    \n as \n    \n    anfae\n    \n, \n    \n    \n    anfbj\n    \n as \n    \n    anfbj\n    \n, \n    \n    \n    anfbn\n    \n as \n    \n    anfbn\n    \n, \n    \n    \n    anfbu\n    \n as \n    \n    anfbu\n    \n, \n    \n    \n    anln1\n    \n as \n    \n    anln1\n    \n, \n    \n    \n    anln2\n    \n as \n    \n    anln2\n    \n, \n    \n    \n    aplzl\n    \n as \n    \n    aplzl\n    \n, \n    \n    \n    aufnr\n    \n as \n    \n    aufnr\n    \n, \n    \n    \n    aufpl\n    \n as \n    \n    aufpl\n    \n, \n    \n    \n    augbl\n    \n as \n    \n    augbl\n    \n, \n    \n    \n    augcp\n    \n as \n    \n    augcp\n    \n, \n    \n    \n    augdt\n    \n as \n    \n    augdt\n    \n, \n    \n    \n    auggj\n    \n as \n    \n    auggj\n    \n, \n    \n    \n    bdif2\n    \n as \n    \n    bdif2\n    \n, \n    \n    \n    bdif3\n    \n as \n    \n    bdif3\n    \n, \n    \n    \n    bdiff\n    \n as \n    \n    bdiff\n    \n, \n    \n    \n    belnr\n    \n as \n    \n    belnr\n    \n, \n    \n    \n    bewar\n    \n as \n    \n    bewar\n    \n, \n    \n    \n    blnbt\n    \n as \n    \n    blnbt\n    \n, \n    \n    \n    blnkz\n    \n as \n    \n    blnkz\n    \n, \n    \n    \n    blnpz\n    \n as \n    \n    blnpz\n    \n, \n    \n    \n    bonfb\n    \n as \n    \n    bonfb\n    \n, \n    \n    \n    bpmng\n    \n as \n    \n    bpmng\n    \n, \n    \n    \n    bprme\n    \n as \n    \n    bprme\n    \n, \n    \n    \n    bschl\n    \n as \n    \n    bschl\n    \n, \n    \n    \n    btype\n    \n as \n    \n    btype\n    \n, \n    \n    \n    bualt\n    \n as \n    \n    bualt\n    \n, \n    \n    \n    budget_pd\n    \n as \n    \n    budget_pd\n    \n, \n    \n    \n    bukrs\n    \n as \n    \n    bukrs\n    \n, \n    \n    \n    bupla\n    \n as \n    \n    bupla\n    \n, \n    \n    \n    bustw\n    \n as \n    \n    bustw\n    \n, \n    \n    \n    buzei\n    \n as \n    \n    buzei\n    \n, \n    \n    \n    buzid\n    \n as \n    \n    buzid\n    \n, \n    \n    \n    bvtyp\n    \n as \n    \n    bvtyp\n    \n, \n    \n    \n    bwkey\n    \n as \n    \n    bwkey\n    \n, \n    \n    \n    bwtar\n    \n as \n    \n    bwtar\n    \n, \n    \n    \n    bzdat\n    \n as \n    \n    bzdat\n    \n, \n    \n    \n    ccbtc\n    \n as \n    \n    ccbtc\n    \n, \n    \n    \n    cession_kz\n    \n as \n    \n    cession_kz\n    \n, \n    \n    \n    dabrz\n    \n as \n    \n    dabrz\n    \n, \n    \n    \n    depot\n    \n as \n    \n    depot\n    \n, \n    \n    \n    diekz\n    \n as \n    \n    diekz\n    \n, \n    \n    \n    disbj\n    \n as \n    \n    disbj\n    \n, \n    \n    \n    disbn\n    \n as \n    \n    disbn\n    \n, \n    \n    \n    disbz\n    \n as \n    \n    disbz\n    \n, \n    \n    \n    dmb21\n    \n as \n    \n    dmb21\n    \n, \n    \n    \n    dmb22\n    \n as \n    \n    dmb22\n    \n, \n    \n    \n    dmb23\n    \n as \n    \n    dmb23\n    \n, \n    \n    \n    dmb31\n    \n as \n    \n    dmb31\n    \n, \n    \n    \n    dmb32\n    \n as \n    \n    dmb32\n    \n, \n    \n    \n    dmb33\n    \n as \n    \n    dmb33\n    \n, \n    \n    \n    dmbe2\n    \n as \n    \n    dmbe2\n    \n, \n    \n    \n    dmbe3\n    \n as \n    \n    dmbe3\n    \n, \n    \n    \n    dmbt1\n    \n as \n    \n    dmbt1\n    \n, \n    \n    \n    dmbt2\n    \n as \n    \n    dmbt2\n    \n, \n    \n    \n    dmbt3\n    \n as \n    \n    dmbt3\n    \n, \n    \n    \n    dmbtr\n    \n as \n    \n    dmbtr\n    \n, \n    \n    \n    docln\n    \n as \n    \n    docln\n    \n, \n    \n    \n    dtws1\n    \n as \n    \n    dtws1\n    \n, \n    \n    \n    dtws2\n    \n as \n    \n    dtws2\n    \n, \n    \n    \n    dtws3\n    \n as \n    \n    dtws3\n    \n, \n    \n    \n    dtws4\n    \n as \n    \n    dtws4\n    \n, \n    \n    \n    ebeln\n    \n as \n    \n    ebeln\n    \n, \n    \n    \n    ebelp\n    \n as \n    \n    ebelp\n    \n, \n    \n    \n    egbld\n    \n as \n    \n    egbld\n    \n, \n    \n    \n    eglld\n    \n as \n    \n    eglld\n    \n, \n    \n    \n    egrup\n    \n as \n    \n    egrup\n    \n, \n    \n    \n    elikz\n    \n as \n    \n    elikz\n    \n, \n    \n    \n    empfb\n    \n as \n    \n    empfb\n    \n, \n    \n    \n    erfme\n    \n as \n    \n    erfme\n    \n, \n    \n    \n    erfmg\n    \n as \n    \n    erfmg\n    \n, \n    \n    \n    esrnr\n    \n as \n    \n    esrnr\n    \n, \n    \n    \n    esrpz\n    \n as \n    \n    esrpz\n    \n, \n    \n    \n    esrre\n    \n as \n    \n    esrre\n    \n, \n    \n    \n    eten2\n    \n as \n    \n    eten2\n    \n, \n    \n    \n    etype\n    \n as \n    \n    etype\n    \n, \n    \n    \n    fastpay\n    \n as \n    \n    fastpay\n    \n, \n    \n    \n    fdgrp\n    \n as \n    \n    fdgrp\n    \n, \n    \n    \n    fdlev\n    \n as \n    \n    fdlev\n    \n, \n    \n    \n    fdtag\n    \n as \n    \n    fdtag\n    \n, \n    \n    \n    fdwbt\n    \n as \n    \n    fdwbt\n    \n, \n    \n    \n    filkd\n    \n as \n    \n    filkd\n    \n, \n    \n    \n    fipos\n    \n as \n    \n    fipos\n    \n, \n    \n    \n    fistl\n    \n as \n    \n    fistl\n    \n, \n    \n    \n    fkber\n    \n as \n    \n    fkber\n    \n, \n    \n    \n    fkber_long\n    \n as \n    \n    fkber_long\n    \n, \n    \n    \n    fkont\n    \n as \n    \n    fkont\n    \n, \n    \n    \n    fmfgus_key\n    \n as \n    \n    fmfgus_key\n    \n, \n    \n    \n    fmxdocln\n    \n as \n    \n    fmxdocln\n    \n, \n    \n    \n    fmxdocnr\n    \n as \n    \n    fmxdocnr\n    \n, \n    \n    \n    fmxyear\n    \n as \n    \n    fmxyear\n    \n, \n    \n    \n    fmxzekkn\n    \n as \n    \n    fmxzekkn\n    \n, \n    \n    \n    fwbas\n    \n as \n    \n    fwbas\n    \n, \n    \n    \n    fwzuz\n    \n as \n    \n    fwzuz\n    \n, \n    \n    \n    gbetr\n    \n as \n    \n    gbetr\n    \n, \n    \n    \n    geber\n    \n as \n    \n    geber\n    \n, \n    \n    \n    gityp\n    \n as \n    \n    gityp\n    \n, \n    \n    \n    gjahr\n    \n as \n    \n    gjahr\n    \n, \n    \n    \n    glupm\n    \n as \n    \n    glupm\n    \n, \n    \n    \n    gmvkz\n    \n as \n    \n    gmvkz\n    \n, \n    \n    \n    grant_nbr\n    \n as \n    \n    grant_nbr\n    \n, \n    \n    \n    gricd\n    \n as \n    \n    gricd\n    \n, \n    \n    \n    grirg\n    \n as \n    \n    grirg\n    \n, \n    \n    \n    gsber\n    \n as \n    \n    gsber\n    \n, \n    \n    \n    gvtyp\n    \n as \n    \n    gvtyp\n    \n, \n    \n    \n    hbkid\n    \n as \n    \n    hbkid\n    \n, \n    \n    \n    hkont\n    \n as \n    \n    hkont\n    \n, \n    \n    \n    hktid\n    \n as \n    \n    hktid\n    \n, \n    \n    \n    hrkft\n    \n as \n    \n    hrkft\n    \n, \n    \n    \n    hwbas\n    \n as \n    \n    hwbas\n    \n, \n    \n    \n    hwmet\n    \n as \n    \n    hwmet\n    \n, \n    \n    \n    hwzuz\n    \n as \n    \n    hwzuz\n    \n, \n    \n    \n    hzuon\n    \n as \n    \n    hzuon\n    \n, \n    \n    \n    idxsp\n    \n as \n    \n    idxsp\n    \n, \n    \n    \n    ignr_ivref\n    \n as \n    \n    ignr_ivref\n    \n, \n    \n    \n    imkey\n    \n as \n    \n    imkey\n    \n, \n    \n    \n    intreno\n    \n as \n    \n    intreno\n    \n, \n    \n    \n    j_1tpbupl\n    \n as \n    \n    j_1tpbupl\n    \n, \n    \n    \n    kblnr\n    \n as \n    \n    kblnr\n    \n, \n    \n    \n    kblpos\n    \n as \n    \n    kblpos\n    \n, \n    \n    \n    kidno\n    \n as \n    \n    kidno\n    \n, \n    \n    \n    kkber\n    \n as \n    \n    kkber\n    \n, \n    \n    \n    klibt\n    \n as \n    \n    klibt\n    \n, \n    \n    \n    koart\n    \n as \n    \n    koart\n    \n, \n    \n    \n    kokrs\n    \n as \n    \n    kokrs\n    \n, \n    \n    \n    kontl\n    \n as \n    \n    kontl\n    \n, \n    \n    \n    kontt\n    \n as \n    \n    kontt\n    \n, \n    \n    \n    kostl\n    \n as \n    \n    kostl\n    \n, \n    \n    \n    kstar\n    \n as \n    \n    kstar\n    \n, \n    \n    \n    kstrg\n    \n as \n    \n    kstrg\n    \n, \n    \n    \n    ktosl\n    \n as \n    \n    ktosl\n    \n, \n    \n    \n    kunnr\n    \n as \n    \n    kunnr\n    \n, \n    \n    \n    kursr\n    \n as \n    \n    kursr\n    \n, \n    \n    \n    kzbtr\n    \n as \n    \n    kzbtr\n    \n, \n    \n    \n    landl\n    \n as \n    \n    landl\n    \n, \n    \n    \n    lifnr\n    \n as \n    \n    lifnr\n    \n, \n    \n    \n    linfv\n    \n as \n    \n    linfv\n    \n, \n    \n    \n    lnran\n    \n as \n    \n    lnran\n    \n, \n    \n    \n    lokkt\n    \n as \n    \n    lokkt\n    \n, \n    \n    \n    lstar\n    \n as \n    \n    lstar\n    \n, \n    \n    \n    lzbkz\n    \n as \n    \n    lzbkz\n    \n, \n    \n    \n    maber\n    \n as \n    \n    maber\n    \n, \n    \n    \n    madat\n    \n as \n    \n    madat\n    \n, \n    \n    \n    mandt\n    \n as \n    \n    mandt\n    \n, \n    \n    \n    mansp\n    \n as \n    \n    mansp\n    \n, \n    \n    \n    manst\n    \n as \n    \n    manst\n    \n, \n    \n    \n    matnr\n    \n as \n    \n    matnr\n    \n, \n    \n    \n    measure\n    \n as \n    \n    measure\n    \n, \n    \n    \n    meins\n    \n as \n    \n    meins\n    \n, \n    \n    \n    menge\n    \n as \n    \n    menge\n    \n, \n    \n    \n    mndid\n    \n as \n    \n    mndid\n    \n, \n    \n    \n    mschl\n    \n as \n    \n    mschl\n    \n, \n    \n    \n    mwart\n    \n as \n    \n    mwart\n    \n, \n    \n    \n    mwsk1\n    \n as \n    \n    mwsk1\n    \n, \n    \n    \n    mwsk2\n    \n as \n    \n    mwsk2\n    \n, \n    \n    \n    mwsk3\n    \n as \n    \n    mwsk3\n    \n, \n    \n    \n    mwskz\n    \n as \n    \n    mwskz\n    \n, \n    \n    \n    mwst2\n    \n as \n    \n    mwst2\n    \n, \n    \n    \n    mwst3\n    \n as \n    \n    mwst3\n    \n, \n    \n    \n    mwsts\n    \n as \n    \n    mwsts\n    \n, \n    \n    \n    navfw\n    \n as \n    \n    navfw\n    \n, \n    \n    \n    navh2\n    \n as \n    \n    navh2\n    \n, \n    \n    \n    navh3\n    \n as \n    \n    navh3\n    \n, \n    \n    \n    navhw\n    \n as \n    \n    navhw\n    \n, \n    \n    \n    nebtr\n    \n as \n    \n    nebtr\n    \n, \n    \n    \n    nplnr\n    \n as \n    \n    nplnr\n    \n, \n    \n    \n    nprei\n    \n as \n    \n    nprei\n    \n, \n    \n    \n    obzei\n    \n as \n    \n    obzei\n    \n, \n    \n    \n    paobjnr\n    \n as \n    \n    paobjnr\n    \n, \n    \n    \n    pargb\n    \n as \n    \n    pargb\n    \n, \n    \n    \n    pasubnr\n    \n as \n    \n    pasubnr\n    \n, \n    \n    \n    pays_prov\n    \n as \n    \n    pays_prov\n    \n, \n    \n    \n    pays_tran\n    \n as \n    \n    pays_tran\n    \n, \n    \n    \n    pbudget_pd\n    \n as \n    \n    pbudget_pd\n    \n, \n    \n    \n    peinh\n    \n as \n    \n    peinh\n    \n, \n    \n    \n    pendays\n    \n as \n    \n    pendays\n    \n, \n    \n    \n    penfc\n    \n as \n    \n    penfc\n    \n, \n    \n    \n    penlc1\n    \n as \n    \n    penlc1\n    \n, \n    \n    \n    penlc2\n    \n as \n    \n    penlc2\n    \n, \n    \n    \n    penlc3\n    \n as \n    \n    penlc3\n    \n, \n    \n    \n    penrc\n    \n as \n    \n    penrc\n    \n, \n    \n    \n    pernr\n    \n as \n    \n    pernr\n    \n, \n    \n    \n    perop_beg\n    \n as \n    \n    perop_beg\n    \n, \n    \n    \n    perop_end\n    \n as \n    \n    perop_end\n    \n, \n    \n    \n    pfkber\n    \n as \n    \n    pfkber\n    \n, \n    \n    \n    pgeber\n    \n as \n    \n    pgeber\n    \n, \n    \n    \n    pgrant_nbr\n    \n as \n    \n    pgrant_nbr\n    \n, \n    \n    \n    popts\n    \n as \n    \n    popts\n    \n, \n    \n    \n    posn2\n    \n as \n    \n    posn2\n    \n, \n    \n    \n    ppa_ex_ind\n    \n as \n    \n    ppa_ex_ind\n    \n, \n    \n    \n    ppdif2\n    \n as \n    \n    ppdif2\n    \n, \n    \n    \n    ppdif3\n    \n as \n    \n    ppdif3\n    \n, \n    \n    \n    ppdiff\n    \n as \n    \n    ppdiff\n    \n, \n    \n    \n    pprct\n    \n as \n    \n    pprct\n    \n, \n    \n    \n    prctr\n    \n as \n    \n    prctr\n    \n, \n    \n    \n    prodper\n    \n as \n    \n    prodper\n    \n, \n    \n    \n    projk\n    \n as \n    \n    projk\n    \n, \n    \n    \n    projn\n    \n as \n    \n    projn\n    \n, \n    \n    \n    prznr\n    \n as \n    \n    prznr\n    \n, \n    \n    \n    psalt\n    \n as \n    \n    psalt\n    \n, \n    \n    \n    psegment\n    \n as \n    \n    psegment\n    \n, \n    \n    \n    pswbt\n    \n as \n    \n    pswbt\n    \n, \n    \n    \n    pswsl\n    \n as \n    \n    pswsl\n    \n, \n    \n    \n    pyamt\n    \n as \n    \n    pyamt\n    \n, \n    \n    \n    pycur\n    \n as \n    \n    pycur\n    \n, \n    \n    \n    qbshb\n    \n as \n    \n    qbshb\n    \n, \n    \n    \n    qsfbt\n    \n as \n    \n    qsfbt\n    \n, \n    \n    \n    qsshb\n    \n as \n    \n    qsshb\n    \n, \n    \n    \n    qsskz\n    \n as \n    \n    qsskz\n    \n, \n    \n    \n    qsznr\n    \n as \n    \n    qsznr\n    \n, \n    \n    \n    rdif2\n    \n as \n    \n    rdif2\n    \n, \n    \n    \n    rdif3\n    \n as \n    \n    rdif3\n    \n, \n    \n    \n    rdiff\n    \n as \n    \n    rdiff\n    \n, \n    \n    \n    re_account\n    \n as \n    \n    re_account\n    \n, \n    \n    \n    re_bukrs\n    \n as \n    \n    re_bukrs\n    \n, \n    \n    \n    rebzg\n    \n as \n    \n    rebzg\n    \n, \n    \n    \n    rebzj\n    \n as \n    \n    rebzj\n    \n, \n    \n    \n    rebzt\n    \n as \n    \n    rebzt\n    \n, \n    \n    \n    rebzz\n    \n as \n    \n    rebzz\n    \n, \n    \n    \n    recid\n    \n as \n    \n    recid\n    \n, \n    \n    \n    recrf\n    \n as \n    \n    recrf\n    \n, \n    \n    \n    rewrt\n    \n as \n    \n    rewrt\n    \n, \n    \n    \n    rewwr\n    \n as \n    \n    rewwr\n    \n, \n    \n    \n    rfzei\n    \n as \n    \n    rfzei\n    \n, \n    \n    \n    rpacq\n    \n as \n    \n    rpacq\n    \n, \n    \n    \n    rstgr\n    \n as \n    \n    rstgr\n    \n, \n    \n    \n    ryacq\n    \n as \n    \n    ryacq\n    \n, \n    \n    \n    saknr\n    \n as \n    \n    saknr\n    \n, \n    \n    \n    samnr\n    \n as \n    \n    samnr\n    \n, \n    \n    \n    sctax\n    \n as \n    \n    sctax\n    \n, \n    \n    \n    secco\n    \n as \n    \n    secco\n    \n, \n    \n    \n    segment\n    \n as \n    \n    segment\n    \n, \n    \n    \n    sgtxt\n    \n as \n    \n    sgtxt\n    \n, \n    \n    \n    shkzg\n    \n as \n    \n    shkzg\n    \n, \n    \n    \n    shzuz\n    \n as \n    \n    shzuz\n    \n, \n    \n    \n    skfbt\n    \n as \n    \n    skfbt\n    \n, \n    \n    \n    sknt2\n    \n as \n    \n    sknt2\n    \n, \n    \n    \n    sknt3\n    \n as \n    \n    sknt3\n    \n, \n    \n    \n    sknto\n    \n as \n    \n    sknto\n    \n, \n    \n    \n    spgrc\n    \n as \n    \n    spgrc\n    \n, \n    \n    \n    spgrg\n    \n as \n    \n    spgrg\n    \n, \n    \n    \n    spgrm\n    \n as \n    \n    spgrm\n    \n, \n    \n    \n    spgrp\n    \n as \n    \n    spgrp\n    \n, \n    \n    \n    spgrq\n    \n as \n    \n    spgrq\n    \n, \n    \n    \n    spgrs\n    \n as \n    \n    spgrs\n    \n, \n    \n    \n    spgrt\n    \n as \n    \n    spgrt\n    \n, \n    \n    \n    spgrv\n    \n as \n    \n    spgrv\n    \n, \n    \n    \n    squan\n    \n as \n    \n    squan\n    \n, \n    \n    \n    srtype\n    \n as \n    \n    srtype\n    \n, \n    \n    \n    stbuk\n    \n as \n    \n    stbuk\n    \n, \n    \n    \n    stceg\n    \n as \n    \n    stceg\n    \n, \n    \n    \n    stekz\n    \n as \n    \n    stekz\n    \n, \n    \n    \n    sttax\n    \n as \n    \n    sttax\n    \n, \n    \n    \n    taxps\n    \n as \n    \n    taxps\n    \n, \n    \n    \n    tbtkz\n    \n as \n    \n    tbtkz\n    \n, \n    \n    \n    txbfw\n    \n as \n    \n    txbfw\n    \n, \n    \n    \n    txbh2\n    \n as \n    \n    txbh2\n    \n, \n    \n    \n    txbh3\n    \n as \n    \n    txbh3\n    \n, \n    \n    \n    txbhw\n    \n as \n    \n    txbhw\n    \n, \n    \n    \n    txdat\n    \n as \n    \n    txdat\n    \n, \n    \n    \n    txgrp\n    \n as \n    \n    txgrp\n    \n, \n    \n    \n    txjcd\n    \n as \n    \n    txjcd\n    \n, \n    \n    \n    umsks\n    \n as \n    \n    umsks\n    \n, \n    \n    \n    umskz\n    \n as \n    \n    umskz\n    \n, \n    \n    \n    uzawe\n    \n as \n    \n    uzawe\n    \n, \n    \n    \n    valut\n    \n as \n    \n    valut\n    \n, \n    \n    \n    vbel2\n    \n as \n    \n    vbel2\n    \n, \n    \n    \n    vbeln\n    \n as \n    \n    vbeln\n    \n, \n    \n    \n    vbewa\n    \n as \n    \n    vbewa\n    \n, \n    \n    \n    vbund\n    \n as \n    \n    vbund\n    \n, \n    \n    \n    vertn\n    \n as \n    \n    vertn\n    \n, \n    \n    \n    vertt\n    \n as \n    \n    vertt\n    \n, \n    \n    \n    vname\n    \n as \n    \n    vname\n    \n, \n    \n    \n    vorgn\n    \n as \n    \n    vorgn\n    \n, \n    \n    \n    vprsv\n    \n as \n    \n    vprsv\n    \n, \n    \n    \n    vptnr\n    \n as \n    \n    vptnr\n    \n, \n    \n    \n    vrsdt\n    \n as \n    \n    vrsdt\n    \n, \n    \n    \n    vrskz\n    \n as \n    \n    vrskz\n    \n, \n    \n    \n    werks\n    \n as \n    \n    werks\n    \n, \n    \n    \n    wmwst\n    \n as \n    \n    wmwst\n    \n, \n    \n    \n    wrbt1\n    \n as \n    \n    wrbt1\n    \n, \n    \n    \n    wrbt2\n    \n as \n    \n    wrbt2\n    \n, \n    \n    \n    wrbt3\n    \n as \n    \n    wrbt3\n    \n, \n    \n    \n    wrbtr\n    \n as \n    \n    wrbtr\n    \n, \n    \n    \n    wskto\n    \n as \n    \n    wskto\n    \n, \n    \n    \n    wverw\n    \n as \n    \n    wverw\n    \n, \n    \n    \n    xanet\n    \n as \n    \n    xanet\n    \n, \n    \n    \n    xauto\n    \n as \n    \n    xauto\n    \n, \n    \n    \n    xbilk\n    \n as \n    \n    xbilk\n    \n, \n    \n    \n    xcpdd\n    \n as \n    \n    xcpdd\n    \n, \n    \n    \n    xegdr\n    \n as \n    \n    xegdr\n    \n, \n    \n    \n    xfakt\n    \n as \n    \n    xfakt\n    \n, \n    \n    \n    xfrge_bseg\n    \n as \n    \n    xfrge_bseg\n    \n, \n    \n    \n    xhkom\n    \n as \n    \n    xhkom\n    \n, \n    \n    \n    xhres\n    \n as \n    \n    xhres\n    \n, \n    \n    \n    xinve\n    \n as \n    \n    xinve\n    \n, \n    \n    \n    xkres\n    \n as \n    \n    xkres\n    \n, \n    \n    \n    xlgclr\n    \n as \n    \n    xlgclr\n    \n, \n    \n    \n    xncop\n    \n as \n    \n    xncop\n    \n, \n    \n    \n    xnegp\n    \n as \n    \n    xnegp\n    \n, \n    \n    \n    xopvw\n    \n as \n    \n    xopvw\n    \n, \n    \n    \n    xpanz\n    \n as \n    \n    xpanz\n    \n, \n    \n    \n    xpypr\n    \n as \n    \n    xpypr\n    \n, \n    \n    \n    xragl\n    \n as \n    \n    xragl\n    \n, \n    \n    \n    xref1\n    \n as \n    \n    xref1\n    \n, \n    \n    \n    xref2\n    \n as \n    \n    xref2\n    \n, \n    \n    \n    xref3\n    \n as \n    \n    xref3\n    \n, \n    \n    \n    xsauf\n    \n as \n    \n    xsauf\n    \n, \n    \n    \n    xserg\n    \n as \n    \n    xserg\n    \n, \n    \n    \n    xskrl\n    \n as \n    \n    xskrl\n    \n, \n    \n    \n    xskst\n    \n as \n    \n    xskst\n    \n, \n    \n    \n    xspro\n    \n as \n    \n    xspro\n    \n, \n    \n    \n    xuman\n    \n as \n    \n    xuman\n    \n, \n    \n    \n    xumsw\n    \n as \n    \n    xumsw\n    \n, \n    \n    \n    xzahl\n    \n as \n    \n    xzahl\n    \n, \n    \n    \n    zbd1p\n    \n as \n    \n    zbd1p\n    \n, \n    \n    \n    zbd1t\n    \n as \n    \n    zbd1t\n    \n, \n    \n    \n    zbd2p\n    \n as \n    \n    zbd2p\n    \n, \n    \n    \n    zbd2t\n    \n as \n    \n    zbd2t\n    \n, \n    \n    \n    zbd3t\n    \n as \n    \n    zbd3t\n    \n, \n    \n    \n    zbfix\n    \n as \n    \n    zbfix\n    \n, \n    \n    \n    zekkn\n    \n as \n    \n    zekkn\n    \n, \n    \n    \n    zfbdt\n    \n as \n    \n    zfbdt\n    \n, \n    \n    \n    zinkz\n    \n as \n    \n    zinkz\n    \n, \n    \n    \n    zlsch\n    \n as \n    \n    zlsch\n    \n, \n    \n    \n    zlspr\n    \n as \n    \n    zlspr\n    \n, \n    \n    \n    zolld\n    \n as \n    \n    zolld\n    \n, \n    \n    \n    zollt\n    \n as \n    \n    zollt\n    \n, \n    \n    \n    zterm\n    \n as \n    \n    zterm\n    \n, \n    \n    \n    zumsk\n    \n as \n    \n    zumsk\n    \n, \n    \n    \n    zuonr\n    \n as \n    \n    zuonr\n    \n, \n    \n    \n    zzbuspartn\n    \n as \n    \n    zzbuspartn\n    \n, \n    \n    \n    zzchan\n    \n as \n    \n    zzchan\n    \n, \n    \n    \n    zzlob\n    \n as \n    \n    zzlob\n    \n, \n    \n    \n    zzloca\n    \n as \n    \n    zzloca\n    \n, \n    \n    \n    zzproduct\n    \n as \n    \n    zzproduct\n    \n, \n    \n    \n    zzregion\n    \n as \n    \n    zzregion\n    \n, \n    \n    \n    zzspreg\n    \n as \n    \n    zzspreg\n    \n, \n    \n    \n    zzstate\n    \n as \n    \n    zzstate\n    \n, \n    \n    \n    zzuserfld1\n    \n as \n    \n    zzuserfld1\n    \n, \n    \n    \n    zzuserfld2\n    \n as \n    \n    zzuserfld2\n    \n, \n    \n    \n    zzuserfld3\n    \n as \n    \n    zzuserfld3\n    \n\n\n\n    from base\n),\n\nfinal as (\n\n    select\n        cast(mandt as TEXT) as mandt,\n        cast(bukrs as TEXT) as bukrs,\n        cast(belnr as TEXT) as belnr,\n        cast(gjahr as TEXT) as gjahr,\n        cast(buzei as TEXT) as buzei,\n        anln1,\n        anln2,\n        aufnr,\n        augbl,\n        augdt,\n        cast(ebeln as TEXT) as ebeln,\n        cast(ebelp as TEXT) as ebelp,\n        eten2, \n        filkd,\n        gsber, \n        koart, \n        kostl,\n        maber,\n        madat,\n\n        mansp,\n        manst,\n        mschl,\n        mwskz,\n        posn2,\n        qbshb,\n        qsfbt,\n        qsshb,\n        rebzg,\n        samnr,\n        sgtxt,\n        cast(shkzg as TEXT) as shkzg,\n        skfbt,\n        wskto,\n        sknto, \n        umsks,\n        umskz,\n        uzawe,\n        valut,\n        vbel2,\n        cast(vbeln as TEXT) as vbeln,\n        vbewa,\n        vbund,\n        vertn,\n        vertt, \n        werks, \n        wverw, \n        xzahl, \n        zbd1p,\n        zbd1t,\n        zbd2p,\n        zbd2t,\n        zbd3t,\n        zfbdt, \n        zlsch,\n        zlspr,\n        zterm,\n        zuonr,\n        xref1,\n        xref2, \n        rstgr,  \n        rebzt,\n        pswsl,\n        pswbt,\n        hkont,\n        xnegp,\n        zbfix,\n        rfzei,\n        ccbtc,\n        kkber,\n        xref3,\n        dtws1,\n        dtws2,\n        dtws3,\n        dtws4,\n        absbt, \n        projk,\n        xpypr,\n        kidno, \n        bupla,\n        secco, \n        pycur,\n        pyamt, \n        xragl,\n        cession_kz,\n        buzid,\n        auggj,\n        agzei, \n        bdiff,\n        bdif2,\n        bdif3,\n        bewar,\n        dabrz,\n        dmbtr,\n        fkber,\n        fkber_long,\n        imkey,\n        kstar,\n        cast(kunnr as TEXT) as kunnr,\n        lifnr,\n        meins,\n        cast(menge as numeric(28,6)) as menge,\n        pargb, \n        pfkber, \n        pprct, \n        saknr,\n        wrbtr,\n        xopvw,\n        xlgclr,\n        zzspreg,\n        zzbuspartn,\n        zzproduct,\n        zzloca,\n        zzchan,\n        zzlob, \n        zzuserfld1,\n        zzuserfld2,\n        zzuserfld3,\n        zzregion,\n        zzstate\n    from fields\n)\n\nselect *\nfrom final", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null, "primary_key": [], "time_spine": null}, "model.sap.stg_sap__t134t": {"database": "postgres", "schema": "public_sap_dev", "name": "stg_sap__t134t", "resource_type": "model", "package_name": "sap", "path": "staging/stg_sap__t134t.sql", "original_file_path": "models/staging/stg_sap__t134t.sql", "unique_id": "model.sap.stg_sap__t134t", "fqn": ["sap", "staging", "stg_sap__t134t"], "alias": "stg_sap__t134t", "checksum": {"name": "sha256", "checksum": "08bb84732b50a69eec826495e8492474ea838d48dd2357f84bdd8456a5b5e084"}, "config": {"enabled": true, "alias": null, "schema": "sap_dev", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "view", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "freshness": null}, "tags": [], "description": "Material type descriptions", "columns": {"_fivetran_deleted": {"name": "_fivetran_deleted", "description": "Fivetran deletion marker", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "_fivetran_rowid": {"name": "_fivetran_rowid", "description": "Fivetran unique row ID", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "_fivetran_synced": {"name": "_fivetran_synced", "description": "Fivetran sync timestamp", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "mtart": {"name": "mtart", "description": "Material type", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "mandt": {"name": "mandt", "description": "Client", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "mtbez": {"name": "mtbez", "description": "Description of material type", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "spras": {"name": "spras", "description": "Language key", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": "sap://models/staging/stg_sap.yml", "build_path": null, "unrendered_config": {"materialized": "view", "schema": "sap_{{ var('directed_schema','dev') }}", "enabled": true}, "created_at": 1756850331.277207, "relation_name": "\"postgres\".\"public_sap_dev\".\"stg_sap__t134t\"", "raw_code": "{{ config(enabled=var('sap_using_t134t', True)) }}\n\n{% set source_columns = adapter.get_columns_in_relation(ref('stg_sap__t134t_tmp')) %}\n\nwith base as (\n    select {{ remove_slashes_from_col_names(source_columns) }}\n    from {{ ref('stg_sap__t134t_tmp') }}\n),\n\nfields as (\n    select\n        {{\n            fivetran_utils.fill_staging_columns(\n                source_columns=source_columns,\n                staging_columns=get_t134t_columns()\n            )\n        }}\n    from base\n),\n\nfinal as (\n    select\n        cast(mandt as {{ dbt.type_string() }}) as mandt,\n        mtart,\n        mtbez,\n        spras,\n        _fivetran_deleted,\n        _fivetran_synced,\n        _fivetran_rowid\n    from fields\n)\n\nselect *\nfrom final", "doc_blocks": [], "language": "sql", "refs": [{"name": "stg_sap__t134t_tmp", "package": null, "version": null}, {"name": "stg_sap__t134t_tmp", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.sap.remove_slashes_from_col_names", "macro.sap.get_t134t_columns", "macro.fivetran_utils.fill_staging_columns", "macro.dbt.type_string"], "nodes": ["model.sap.stg_sap__t134t_tmp"]}, "compiled_path": "target/compiled/sap/models/staging/stg_sap__t134t.sql", "compiled": true, "compiled_code": "\n\n\n\nwith base as (\n    select \n        \"_fivetran_deleted\" as _fivetran_deleted,\n        \"_fivetran_rowid\" as _fivetran_rowid,\n        \"_fivetran_synced\" as _fivetran_synced,\n        \"mandt\" as mandt,\n        \"mtart\" as mtart,\n        \"mtbez\" as mtbez,\n        \"spras\" as spras\n    from \"postgres\".\"public_sap_dev\".\"stg_sap__t134t_tmp\"\n),\n\nfields as (\n    select\n        \n    \n    \n    _fivetran_deleted\n    \n as \n    \n    _fivetran_deleted\n    \n, \n    \n    \n    _fivetran_rowid\n    \n as \n    \n    _fivetran_rowid\n    \n, \n    \n    \n    _fivetran_synced\n    \n as \n    \n    _fivetran_synced\n    \n, \n    \n    \n    mandt\n    \n as \n    \n    mandt\n    \n, \n    \n    \n    mtart\n    \n as \n    \n    mtart\n    \n, \n    \n    \n    mtbez\n    \n as \n    \n    mtbez\n    \n, \n    \n    \n    spras\n    \n as \n    \n    spras\n    \n\n\n\n    from base\n),\n\nfinal as (\n    select\n        cast(mandt as TEXT) as mandt,\n        mtart,\n        mtbez,\n        spras,\n        _fivetran_deleted,\n        _fivetran_synced,\n        _fivetran_rowid\n    from fields\n)\n\nselect *\nfrom final", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null, "primary_key": [], "time_spine": null}, "model.sap.stg_sap__kna1": {"database": "postgres", "schema": "public_sap_dev", "name": "stg_sap__kna1", "resource_type": "model", "package_name": "sap", "path": "staging/stg_sap__kna1.sql", "original_file_path": "models/staging/stg_sap__kna1.sql", "unique_id": "model.sap.stg_sap__kna1", "fqn": ["sap", "staging", "stg_sap__kna1"], "alias": "stg_sap__kna1", "checksum": {"name": "sha256", "checksum": "5b8c3b2a14c85079c02bb86d63147b7d154d5afb160748e6e478b7fdbd786ffa"}, "config": {"enabled": true, "alias": null, "schema": "sap_dev", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "view", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "freshness": null}, "tags": [], "description": "General Data in Customer Master", "columns": {"abrvw": {"name": "abrvw", "description": "Usage indicator", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "bran1": {"name": "bran1", "description": "Industry code 1", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "bran2": {"name": "bran2", "description": "Industry code 2", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "bran3": {"name": "bran3", "description": "Industry code 3", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "bran4": {"name": "bran4", "description": "Industry code 4", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "bran5": {"name": "bran5", "description": "Industry code 5", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "brsch": {"name": "brsch", "description": "Industry key", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "counc": {"name": "counc", "description": "County code", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "dear6": {"name": "dear6", "description": "Indicator (Consumer)", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "ktokd": {"name": "ktokd", "description": "Customer account group", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "kukla": {"name": "kukla", "description": "Customer classification", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "kunnr": {"name": "kunnr", "description": "Customer number", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "land1": {"name": "land1", "description": "Country key", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "lifnr": {"name": "lifnr", "description": "Account number of vendor or creditor", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "loevm": {"name": "loevm", "description": "Central deletion flag for master record", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "mandt": {"name": "mandt", "description": "Client", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "name1": {"name": "name1", "description": "Name 1", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "name2": {"name": "name2", "description": "Name 2", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "name3": {"name": "name3", "description": "Name 3", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "niels": {"name": "niels", "description": "Nielsen ID", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "ort01": {"name": "ort01", "description": "City", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "ort02": {"name": "ort02", "description": "District", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "periv": {"name": "periv", "description": "Fiscal year variant", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "pfach": {"name": "pfach", "description": "PO Box", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "pfort": {"name": "pfort", "description": "PO Box city", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "pstl2": {"name": "pstl2", "description": "PO Box postal code", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "pstlz": {"name": "pstlz", "description": "Postal code", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "regio": {"name": "regio", "description": "Regional market", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "sortl": {"name": "sortl", "description": "Sort field", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "spras": {"name": "spras", "description": "Language key", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "stcd1": {"name": "stcd1", "description": "Tax number 1", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "stcd2": {"name": "stcd2", "description": "Tax number 2", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "stcd3": {"name": "stcd3", "description": "Tax number 3", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "stras": {"name": "stras", "description": "House number and street", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "telf1": {"name": "telf1", "description": "First telephone number", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "telfx": {"name": "telfx", "description": "Fax number", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "vbund": {"name": "vbund", "description": "Company id of trading partner", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "werks": {"name": "werks", "description": "Plant", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "xcpdk": {"name": "xcpdk", "description": "Indictoar (Is the account a one-time account?)", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "_fivetran_deleted": {"name": "_fivetran_deleted", "description": "Fivetran deletion marker", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "_fivetran_sap_archived": {"name": "_fivetran_sap_archived", "description": "Fivetran SAP archive marker", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "_fivetran_synced": {"name": "_fivetran_synced", "description": "Fivetran sync timestamp", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "_vso_r_dpoint": {"name": "_vso_r_dpoint", "description": "Rounding point", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "_vso_r_i_no_lyr": {"name": "_vso_r_i_no_lyr", "description": "Layer item number", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "_vso_r_load_pref": {"name": "_vso_r_load_pref", "description": "Loading preference", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "_vso_r_matpal": {"name": "_vso_r_matpal", "description": "Material pallet type", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "_vso_r_one_mat": {"name": "_vso_r_one_mat", "description": "Single material load", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "_vso_r_one_sort": {"name": "_vso_r_one_sort", "description": "Single sort load", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "_vso_r_pal_ul": {"name": "_vso_r_pal_ul", "description": "Pallet unit load", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "_vso_r_palhgt": {"name": "_vso_r_palhgt", "description": "Pallet height", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "_vso_r_pk_mat": {"name": "_vso_r_pk_mat", "description": "Package material", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "_vso_r_uld_side": {"name": "_vso_r_uld_side", "description": "Loading side", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "_xlso_client": {"name": "_xlso_client", "description": "XL system client", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "_xlso_customer": {"name": "_xlso_customer", "description": "XL system customer", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "_xlso_partner": {"name": "_xlso_partner", "description": "XL system partner", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "_xlso_pref_pay": {"name": "_xlso_pref_pay", "description": "XL preferred payment", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "_xlso_sysid": {"name": "_xlso_sysid", "description": "XL system ID", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "adrnr": {"name": "adrnr", "description": "Address number", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "alc": {"name": "alc", "description": "Alternate license classification", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "anred": {"name": "anred", "description": "Title", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "aufsd": {"name": "aufsd", "description": "Sales data authorization group", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "bahne": {"name": "bahne", "description": "Train station", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "bahns": {"name": "bahns", "description": "Train station (ship-to)", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "bbbnr": {"name": "bbbnr", "description": "International location number (part 1)", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "bbsnr": {"name": "bbsnr", "description": "International location number (part 2)", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "begru": {"name": "begru", "description": "Authorization group", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "bubkz": {"name": "bubkz", "description": "Interest calculation flag", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "cassd": {"name": "cassd", "description": "Cash security indicator", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "ccc01": {"name": "ccc01", "description": "Credit card 1", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "ccc02": {"name": "ccc02", "description": "Credit card 2", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "ccc03": {"name": "ccc03", "description": "Credit card 3", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "ccc04": {"name": "ccc04", "description": "Credit card 4", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "cfopc": {"name": "cfopc", "description": "CFO approval code", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "cityc": {"name": "cityc", "description": "City code", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "civve": {"name": "civve", "description": "Civil status", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "cnae": {"name": "cnae", "description": "Economic activity classification", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "comsize": {"name": "comsize", "description": "Company size indicator", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "confs": {"name": "confs", "description": "Confirmation suppression", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "crtn": {"name": "crtn", "description": "Creation time", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "cvp_xblck": {"name": "cvp_xblck", "description": "Business partner block flag", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "datlt": {"name": "datlt", "description": "Date of last transaction", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "dear1": {"name": "dear1", "description": "Form of address 1", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "dear2": {"name": "dear2", "description": "Form of address 2", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "dear3": {"name": "dear3", "description": "Form of address 3", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "dear4": {"name": "dear4", "description": "Form of address 4", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "dear5": {"name": "dear5", "description": "Form of address 5", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "decregpc": {"name": "decregpc", "description": "Declaration region", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "dtams": {"name": "dtams", "description": "Data amended status", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "dtaws": {"name": "dtaws", "description": "Date of address update", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "duefl": {"name": "duefl", "description": "Dunning block", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "duns": {"name": "duns", "description": "D-U-N-S number", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "duns4": {"name": "duns4", "description": "D-U-N-S+4 number", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "ekont": {"name": "ekont", "description": "Account number at vendor", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "erdat": {"name": "erdat", "description": "Record creation date", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "ernam": {"name": "ernam", "description": "Name of person who created object", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "etikg": {"name": "etikg", "description": "Weight unit", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "exabl": {"name": "exabl", "description": "One-time account indicator", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "exp": {"name": "exp", "description": "Export indicator", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "faksd": {"name": "faksd", "description": "Invoice scheduling indicator", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "fee_schedule": {"name": "fee_schedule", "description": "Fee schedule ID", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "fiskn": {"name": "fiskn", "description": "Tax number key", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "fityp": {"name": "fityp", "description": "Business type", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "gform": {"name": "gform", "description": "Legal form", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "hzuor": {"name": "hzuor", "description": "Payment reference", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "icmstaxpay": {"name": "icmstaxpay", "description": "ICMS tax payer flag", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "indtyp": {"name": "indtyp", "description": "Industry type", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "inspatdebi": {"name": "inspatdebi", "description": "Inspection party (debtor)", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "inspbydebi": {"name": "inspbydebi", "description": "Inspected by (debtor)", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "j_1kfrepre": {"name": "j_1kfrepre", "description": "Fiscal representative", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "j_1kftbus": {"name": "j_1kftbus", "description": "Type of business", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "j_1kftind": {"name": "j_1kftind", "description": "Type of industry", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "jmjah": {"name": "jmjah", "description": "Year of last change", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "jmzah": {"name": "jmzah", "description": "Number of changes made", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "katr1": {"name": "katr1", "description": "Attribute 1", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "katr10": {"name": "katr10", "description": "Attribute 10", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "katr2": {"name": "katr2", "description": "Attribute 2", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "katr3": {"name": "katr3", "description": "Attribute 3", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "katr4": {"name": "katr4", "description": "Attribute 4", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "katr5": {"name": "katr5", "description": "Attribute 5", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "katr6": {"name": "katr6", "description": "Attribute 6", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "katr7": {"name": "katr7", "description": "Attribute 7", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "katr8": {"name": "katr8", "description": "Attribute 8", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "katr9": {"name": "katr9", "description": "Attribute 9", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "kdkg1": {"name": "kdkg1", "description": "Customer condition group 1", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "kdkg2": {"name": "kdkg2", "description": "Customer condition group 2", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "kdkg3": {"name": "kdkg3", "description": "Customer condition group 3", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "kdkg4": {"name": "kdkg4", "description": "Customer condition group 4", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "kdkg5": {"name": "kdkg5", "description": "Customer condition group 5", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "knazk": {"name": "knazk", "description": "Reference customer", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "knrza": {"name": "knrza", "description": "Central customer number", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "knurl": {"name": "knurl", "description": "Customer URL", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "konzs": {"name": "konzs", "description": "Consolidation indicator", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "ktocd": {"name": "ktocd", "description": "Account number of head office", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "legalnat": {"name": "legalnat", "description": "Legal nature", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "lifsd": {"name": "lifsd", "description": "Delivery account number", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "locco": {"name": "locco", "description": "Local company code", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "lzone": {"name": "lzone", "description": "Transportation zone", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "mcod1": {"name": "mcod1", "description": "Search term 1", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "mcod2": {"name": "mcod2", "description": "Search term 2", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "mcod3": {"name": "mcod3", "description": "Search term 3", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "milve": {"name": "milve", "description": "Military supply indicator", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "name4": {"name": "name4", "description": "Name 4", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "nodel": {"name": "nodel", "description": "Deletion lock indicator", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "oid_poreqd": {"name": "oid_poreqd", "description": "Purchase order required flag", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "oidrc": {"name": "oidrc", "description": "OID reconciliation flag", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "oipbl": {"name": "oipbl", "description": "OID payment block", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "pmt_office": {"name": "pmt_office", "description": "Payment office", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "psofg": {"name": "psofg", "description": "Fund group", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "psohs": {"name": "psohs", "description": "Fund source", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "psois": {"name": "psois", "description": "Fund indicator", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "pson1": {"name": "pson1", "description": "Fund segment 1", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "pson2": {"name": "pson2", "description": "Fund segment 2", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "pson3": {"name": "pson3", "description": "Fund segment 3", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "psoo1": {"name": "psoo1", "description": "Fund assignment 1", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "psoo2": {"name": "psoo2", "description": "Fund assignment 2", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "psoo3": {"name": "psoo3", "description": "Fund assignment 3", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "psoo4": {"name": "psoo4", "description": "Fund assignment 4", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "psoo5": {"name": "psoo5", "description": "Fund assignment 5", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "psost": {"name": "psost", "description": "Status of fund", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "psotl": {"name": "psotl", "description": "Fund transfer limit", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "psovn": {"name": "psovn", "description": "Fund version", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "rg": {"name": "rg", "description": "Company headquarters", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "rgdate": {"name": "rgdate", "description": "Registration date", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "ric": {"name": "ric", "description": "Retail indicator code", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "rne": {"name": "rne", "description": "Regional economic region", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "rnedate": {"name": "rnedate", "description": "Regional economic date", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "rpmkr": {"name": "rpmkr", "description": "Repricing marker", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "sperr": {"name": "sperr", "description": "Central posting block", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "sperz": {"name": "sperz", "description": "Central deletion indicator", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "stcd4": {"name": "stcd4", "description": "Tax number 4", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "stcd5": {"name": "stcd5", "description": "Tax number 5", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "stcdt": {"name": "stcdt", "description": "Tax type", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "stceg": {"name": "stceg", "description": "VAT registration number", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "stkza": {"name": "stkza", "description": "Indicator (head office)", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "stkzn": {"name": "stkzn", "description": "Indicator (branch)", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "stkzu": {"name": "stkzu", "description": "Indicator (subsidiary)", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "suframa": {"name": "suframa", "description": "SUFRAMA code", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "tdt": {"name": "tdt", "description": "Transportation planning date", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "telbx": {"name": "telbx", "description": "Telebox number", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "telf2": {"name": "telf2", "description": "Second telephone number", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "teltx": {"name": "teltx", "description": "Teletex number", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "telx1": {"name": "telx1", "description": "Telex number", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "txjcd": {"name": "txjcd", "description": "Tax jurisdiction code", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "txlw1": {"name": "txlw1", "description": "Local tax classification 1", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "txlw2": {"name": "txlw2", "description": "Local tax classification 2", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "uf": {"name": "uf", "description": "Federal unit code", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "umjah": {"name": "umjah", "description": "Year of last update", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "umsa1": {"name": "umsa1", "description": "Reason for update", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "umsat": {"name": "umsat", "description": "Date of last update", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "updat": {"name": "updat", "description": "Update date", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "uptim": {"name": "uptim", "description": "Update time", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "uwaer": {"name": "uwaer", "description": "Currency", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "xicms": {"name": "xicms", "description": "ICMS exemption indicator", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "xknza": {"name": "xknza", "description": "Indicator (duplicate customer)", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "xsubt": {"name": "xsubt", "description": "Subcontractor flag", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "xxipi": {"name": "xxipi", "description": "IPI exemption indicator", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "xzemp": {"name": "xzemp", "description": "Temporary customer indicator", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": "sap://models/staging/stg_sap.yml", "build_path": null, "unrendered_config": {"materialized": "view", "schema": "sap_{{ var('directed_schema','dev') }}", "enabled": true}, "created_at": 1756850330.9284902, "relation_name": "\"postgres\".\"public_sap_dev\".\"stg_sap__kna1\"", "raw_code": "{{ config(enabled=var('sap_using_kna1', True)) }}\n\n{% set source_columns = adapter.get_columns_in_relation(ref('stg_sap__kna1_tmp')) %}\n\nwith base as (\n\n    select {{ remove_slashes_from_col_names(source_columns) }}\n    from {{ ref('stg_sap__kna1_tmp') }}\n),\n\nfields as (\n\n    select\n        {{\n            fivetran_utils.fill_staging_columns(\n                source_columns=source_columns,\n                staging_columns=get_kna1_columns()\n            )\n        }}\n    from base\n),\n\nfinal as (\n\n    select\n        _vso_r_dpoint,\n        _vso_r_i_no_lyr,\n        _vso_r_load_pref,\n        _vso_r_matpal,\n        _vso_r_one_mat,\n        _vso_r_one_sort,\n        _vso_r_pal_ul,\n        _vso_r_palhgt,\n        _vso_r_pk_mat,\n        _vso_r_uld_side,\n        _xlso_client,\n        _xlso_customer,\n        _xlso_partner,\n        _xlso_pref_pay,\n        _xlso_sysid,\n        cast(mandt as {{ dbt.type_string() }}) as mandt,\n        cast(kunnr as {{ dbt.type_string() }}) as kunnr,\n        pmt_office,\n        brsch,\n        katr9,\n        uwaer,\n        kdkg1,\n        pson3,\n        bran4,\n        ort02,\n        fiskn,\n        konzs,\n        etikg,\n        psoo2,\n        sperz,\n        katr4,\n        telx1,\n        crtn,\n        dtaws,\n        pstl2,\n        datlt,\n        rne,\n        name4,\n        xzemp,\n        kukla,\n        name2,\n        bahne,\n        psohs,\n        duns4,\n        kdkg2,\n        oidrc,\n        bran5,\n        umsat,\n        stcd3,\n        uf,\n        txlw1,\n        psoo3,\n        rnedate,\n        begru,\n        katr5,\n        stcdt,\n        duns,\n        updat,\n        katr10,\n        dear1,\n        inspatdebi,\n        periv,\n        kdkg3,\n        abrvw,\n        rg,\n        stcd4,\n        loevm,\n        txlw2,\n        lifnr,\n        psoo4,\n        counc,\n        telfx,\n        stcd2,\n        inspbydebi,\n        dear2,\n        stcd1,\n        ort01,\n        oid_poreqd,\n        kdkg4,\n        cvp_xblck,\n        faksd,\n        ktokd,\n        telbx,\n        legalnat,\n        stras,\n        ccc01,\n        dtams,\n        psoo5,\n        j_1kftind,\n        stkzn,\n        exp,\n        psotl,\n        dear3,\n        xxipi,\n        niels,\n        umsa1,\n        bahns,\n        bubkz,\n        kdkg5,\n        knurl,\n        xknza,\n        dear6,\n        pfort,\n        stcd5,\n        cityc,\n        ccc02,\n        ric,\n        land1,\n        umjah,\n        fee_schedule,\n        dear4,\n        erdat,\n        teltx,\n        ccc03,\n        oipbl,\n        rgdate,\n        anred,\n        ekont,\n        vbund,\n        psost,\n        knrza,\n        dear5,\n        psofg,\n        jmjah,\n        tdt,\n        bbbnr,\n        regio,\n        alc,\n        aufsd,\n        ccc04,\n        lifsd,\n        cassd,\n        werks,\n        katr6,\n        psois,\n        adrnr,\n        civve,\n        stkzu,\n        fityp,\n        bran1,\n        psovn,\n        comsize,\n        j_1kfrepre,\n        mcod1,\n        katr1,\n        hzuor,\n        xicms,\n        indtyp,\n        xcpdk,\n        lzone,\n        sortl,\n        katr7,\n        gform,\n        pson1,\n        bran2,\n        stceg,\n        sperr,\n        locco,\n        uptim,\n        cnae,\n        mcod2,\n        ernam,\n        txjcd,\n        katr2,\n        confs,\n        telf1,\n        j_1kftbus,\n        spras,\n        bbsnr,\n        xsubt,\n        katr8,\n        jmzah,\n        nodel,\n        decregpc,\n        duefl,\n        pson2,\n        cfopc,\n        pfach,\n        icmstaxpay,\n        bran3,\n        suframa,\n        exabl,\n        pstlz,\n        stkza,\n        psoo1,\n        ktocd,\n        telf2,\n        knazk,\n        milve,\n        katr3,\n        mcod3,\n        rpmkr,\n        name3,\n        name1,\n        _fivetran_deleted,\n        _fivetran_synced,\n        _fivetran_sap_archived\n\n    from fields\n)\n\nselect *\nfrom final", "doc_blocks": [], "language": "sql", "refs": [{"name": "stg_sap__kna1_tmp", "package": null, "version": null}, {"name": "stg_sap__kna1_tmp", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.sap.remove_slashes_from_col_names", "macro.sap.get_kna1_columns", "macro.fivetran_utils.fill_staging_columns", "macro.dbt.type_string"], "nodes": ["model.sap.stg_sap__kna1_tmp"]}, "compiled_path": "target/compiled/sap/models/staging/stg_sap__kna1.sql", "compiled": true, "compiled_code": "\n\n\n\nwith base as (\n\n    select \n        \"kunnr\" as kunnr,\n        \"mandt\" as mandt,\n        \"land1\" as land1,\n        \"name1\" as name1,\n        \"name2\" as name2,\n        \"ort01\" as ort01,\n        \"pstlz\" as pstlz,\n        \"regio\" as regio,\n        \"sortl\" as sortl,\n        \"stras\" as stras,\n        \"telf1\" as telf1,\n        \"telfx\" as telfx,\n        \"xcpdk\" as xcpdk,\n        \"adrnr\" as adrnr,\n        \"mcod1\" as mcod1,\n        \"mcod2\" as mcod2,\n        \"mcod3\" as mcod3,\n        \"anred\" as anred,\n        \"aufsd\" as aufsd,\n        \"bahne\" as bahne,\n        \"bahns\" as bahns,\n        \"bbbnr\" as bbbnr,\n        \"bbsnr\" as bbsnr,\n        \"begru\" as begru,\n        \"brsch\" as brsch,\n        \"bubkz\" as bubkz,\n        \"datlt\" as datlt,\n        \"erdat\" as erdat,\n        \"ernam\" as ernam,\n        \"exabl\" as exabl,\n        \"faksd\" as faksd,\n        \"fiskn\" as fiskn,\n        \"knazk\" as knazk,\n        \"knrza\" as knrza,\n        \"konzs\" as konzs,\n        \"ktokd\" as ktokd,\n        \"kukla\" as kukla,\n        \"lifnr\" as lifnr,\n        \"lifsd\" as lifsd,\n        \"locco\" as locco,\n        \"loevm\" as loevm,\n        \"name3\" as name3,\n        \"name4\" as name4,\n        \"niels\" as niels,\n        \"ort02\" as ort02,\n        \"pfach\" as pfach,\n        \"pstl2\" as pstl2,\n        \"counc\" as counc,\n        \"cityc\" as cityc,\n        \"rpmkr\" as rpmkr,\n        \"sperr\" as sperr,\n        \"spras\" as spras,\n        \"stcd1\" as stcd1,\n        \"stcd2\" as stcd2,\n        \"stkza\" as stkza,\n        \"stkzu\" as stkzu,\n        \"telbx\" as telbx,\n        \"telf2\" as telf2,\n        \"teltx\" as teltx,\n        \"telx1\" as telx1,\n        \"lzone\" as lzone,\n        \"xzemp\" as xzemp,\n        \"vbund\" as vbund,\n        \"stceg\" as stceg,\n        \"dear1\" as dear1,\n        \"dear2\" as dear2,\n        \"dear3\" as dear3,\n        \"dear4\" as dear4,\n        \"dear5\" as dear5,\n        \"gform\" as gform,\n        \"bran1\" as bran1,\n        \"bran2\" as bran2,\n        \"bran3\" as bran3,\n        \"bran4\" as bran4,\n        \"bran5\" as bran5,\n        \"ekont\" as ekont,\n        \"umsat\" as umsat,\n        \"umjah\" as umjah,\n        \"uwaer\" as uwaer,\n        \"jmzah\" as jmzah,\n        \"jmjah\" as jmjah,\n        \"katr1\" as katr1,\n        \"katr2\" as katr2,\n        \"katr3\" as katr3,\n        \"katr4\" as katr4,\n        \"katr5\" as katr5,\n        \"katr6\" as katr6,\n        \"katr7\" as katr7,\n        \"katr8\" as katr8,\n        \"katr9\" as katr9,\n        \"katr10\" as katr10,\n        \"stkzn\" as stkzn,\n        \"umsa1\" as umsa1,\n        \"txjcd\" as txjcd,\n        \"periv\" as periv,\n        \"abrvw\" as abrvw,\n        \"inspbydebi\" as inspbydebi,\n        \"inspatdebi\" as inspatdebi,\n        \"ktocd\" as ktocd,\n        \"pfort\" as pfort,\n        \"werks\" as werks,\n        \"dtams\" as dtams,\n        \"dtaws\" as dtaws,\n        \"duefl\" as duefl,\n        \"hzuor\" as hzuor,\n        \"sperz\" as sperz,\n        \"etikg\" as etikg,\n        \"civve\" as civve,\n        \"milve\" as milve,\n        \"kdkg1\" as kdkg1,\n        \"kdkg2\" as kdkg2,\n        \"kdkg3\" as kdkg3,\n        \"kdkg4\" as kdkg4,\n        \"kdkg5\" as kdkg5,\n        \"xknza\" as xknza,\n        \"fityp\" as fityp,\n        \"stcdt\" as stcdt,\n        \"stcd3\" as stcd3,\n        \"stcd4\" as stcd4,\n        \"stcd5\" as stcd5,\n        \"xicms\" as xicms,\n        \"xxipi\" as xxipi,\n        \"xsubt\" as xsubt,\n        \"cfopc\" as cfopc,\n        \"txlw1\" as txlw1,\n        \"txlw2\" as txlw2,\n        \"ccc01\" as ccc01,\n        \"ccc02\" as ccc02,\n        \"ccc03\" as ccc03,\n        \"ccc04\" as ccc04,\n        \"cassd\" as cassd,\n        \"knurl\" as knurl,\n        \"j_1kfrepre\" as j_1kfrepre,\n        \"j_1kftbus\" as j_1kftbus,\n        \"j_1kftind\" as j_1kftind,\n        \"confs\" as confs,\n        \"updat\" as updat,\n        \"uptim\" as uptim,\n        \"nodel\" as nodel,\n        \"dear6\" as dear6,\n        \"cvp_xblck\" as cvp_xblck,\n        \"suframa\" as suframa,\n        \"rg\" as rg,\n        \"exp\" as exp,\n        \"uf\" as uf,\n        \"rgdate\" as rgdate,\n        \"ric\" as ric,\n        \"rne\" as rne,\n        \"rnedate\" as rnedate,\n        \"cnae\" as cnae,\n        \"legalnat\" as legalnat,\n        \"crtn\" as crtn,\n        \"icmstaxpay\" as icmstaxpay,\n        \"indtyp\" as indtyp,\n        \"tdt\" as tdt,\n        \"comsize\" as comsize,\n        \"decregpc\" as decregpc,\n        \"/vso/r_palhgt\" as _vso_r_palhgt,\n        \"/vso/r_pal_ul\" as _vso_r_pal_ul,\n        \"/vso/r_pk_mat\" as _vso_r_pk_mat,\n        \"/vso/r_matpal\" as _vso_r_matpal,\n        \"/vso/r_i_no_lyr\" as _vso_r_i_no_lyr,\n        \"/vso/r_one_mat\" as _vso_r_one_mat,\n        \"/vso/r_one_sort\" as _vso_r_one_sort,\n        \"/vso/r_uld_side\" as _vso_r_uld_side,\n        \"/vso/r_load_pref\" as _vso_r_load_pref,\n        \"/vso/r_dpoint\" as _vso_r_dpoint,\n        \"/xlso/customer\" as _xlso_customer,\n        \"/xlso/sysid\" as _xlso_sysid,\n        \"/xlso/client\" as _xlso_client,\n        \"/xlso/partner\" as _xlso_partner,\n        \"/xlso/pref_pay\" as _xlso_pref_pay,\n        \"alc\" as alc,\n        \"pmt_office\" as pmt_office,\n        \"fee_schedule\" as fee_schedule,\n        \"duns\" as duns,\n        \"duns4\" as duns4,\n        \"psofg\" as psofg,\n        \"psois\" as psois,\n        \"pson1\" as pson1,\n        \"pson2\" as pson2,\n        \"pson3\" as pson3,\n        \"psovn\" as psovn,\n        \"psotl\" as psotl,\n        \"psohs\" as psohs,\n        \"psost\" as psost,\n        \"psoo1\" as psoo1,\n        \"psoo2\" as psoo2,\n        \"psoo3\" as psoo3,\n        \"psoo4\" as psoo4,\n        \"psoo5\" as psoo5,\n        \"oidrc\" as oidrc,\n        \"oid_poreqd\" as oid_poreqd,\n        \"oipbl\" as oipbl,\n        \"_fivetran_rowid\" as _fivetran_rowid,\n        \"_fivetran_deleted\" as _fivetran_deleted,\n        \"_fivetran_synced\" as _fivetran_synced\n    from \"postgres\".\"public_sap_dev\".\"stg_sap__kna1_tmp\"\n),\n\nfields as (\n\n    select\n        \n    \n    \n    _fivetran_deleted\n    \n as \n    \n    _fivetran_deleted\n    \n, \n    \n    \n    _fivetran_rowid\n    \n as \n    \n    _fivetran_rowid\n    \n, \n    cast(null as timestamp) as \n    \n    _fivetran_sap_archived\n    \n , \n    \n    \n    _fivetran_synced\n    \n as \n    \n    _fivetran_synced\n    \n, \n    \n    \n    abrvw\n    \n as \n    \n    abrvw\n    \n, \n    \n    \n    adrnr\n    \n as \n    \n    adrnr\n    \n, \n    \n    \n    alc\n    \n as \n    \n    alc\n    \n, \n    \n    \n    anred\n    \n as \n    \n    anred\n    \n, \n    \n    \n    aufsd\n    \n as \n    \n    aufsd\n    \n, \n    \n    \n    bahne\n    \n as \n    \n    bahne\n    \n, \n    \n    \n    bahns\n    \n as \n    \n    bahns\n    \n, \n    \n    \n    bbbnr\n    \n as \n    \n    bbbnr\n    \n, \n    \n    \n    bbsnr\n    \n as \n    \n    bbsnr\n    \n, \n    \n    \n    begru\n    \n as \n    \n    begru\n    \n, \n    \n    \n    bran1\n    \n as \n    \n    bran1\n    \n, \n    \n    \n    bran2\n    \n as \n    \n    bran2\n    \n, \n    \n    \n    bran3\n    \n as \n    \n    bran3\n    \n, \n    \n    \n    bran4\n    \n as \n    \n    bran4\n    \n, \n    \n    \n    bran5\n    \n as \n    \n    bran5\n    \n, \n    \n    \n    brsch\n    \n as \n    \n    brsch\n    \n, \n    \n    \n    bubkz\n    \n as \n    \n    bubkz\n    \n, \n    \n    \n    cassd\n    \n as \n    \n    cassd\n    \n, \n    \n    \n    ccc01\n    \n as \n    \n    ccc01\n    \n, \n    \n    \n    ccc02\n    \n as \n    \n    ccc02\n    \n, \n    \n    \n    ccc03\n    \n as \n    \n    ccc03\n    \n, \n    \n    \n    ccc04\n    \n as \n    \n    ccc04\n    \n, \n    \n    \n    cfopc\n    \n as \n    \n    cfopc\n    \n, \n    \n    \n    cityc\n    \n as \n    \n    cityc\n    \n, \n    \n    \n    civve\n    \n as \n    \n    civve\n    \n, \n    \n    \n    cnae\n    \n as \n    \n    cnae\n    \n, \n    \n    \n    comsize\n    \n as \n    \n    comsize\n    \n, \n    \n    \n    confs\n    \n as \n    \n    confs\n    \n, \n    \n    \n    counc\n    \n as \n    \n    counc\n    \n, \n    \n    \n    crtn\n    \n as \n    \n    crtn\n    \n, \n    \n    \n    cvp_xblck\n    \n as \n    \n    cvp_xblck\n    \n, \n    \n    \n    datlt\n    \n as \n    \n    datlt\n    \n, \n    \n    \n    dear1\n    \n as \n    \n    dear1\n    \n, \n    \n    \n    dear2\n    \n as \n    \n    dear2\n    \n, \n    \n    \n    dear3\n    \n as \n    \n    dear3\n    \n, \n    \n    \n    dear4\n    \n as \n    \n    dear4\n    \n, \n    \n    \n    dear5\n    \n as \n    \n    dear5\n    \n, \n    \n    \n    dear6\n    \n as \n    \n    dear6\n    \n, \n    \n    \n    decregpc\n    \n as \n    \n    decregpc\n    \n, \n    \n    \n    dtams\n    \n as \n    \n    dtams\n    \n, \n    \n    \n    dtaws\n    \n as \n    \n    dtaws\n    \n, \n    \n    \n    duefl\n    \n as \n    \n    duefl\n    \n, \n    \n    \n    duns\n    \n as \n    \n    duns\n    \n, \n    \n    \n    duns4\n    \n as \n    \n    duns4\n    \n, \n    \n    \n    ekont\n    \n as \n    \n    ekont\n    \n, \n    \n    \n    erdat\n    \n as \n    \n    erdat\n    \n, \n    \n    \n    ernam\n    \n as \n    \n    ernam\n    \n, \n    \n    \n    etikg\n    \n as \n    \n    etikg\n    \n, \n    \n    \n    exabl\n    \n as \n    \n    exabl\n    \n, \n    \n    \n    exp\n    \n as \n    \n    exp\n    \n, \n    \n    \n    faksd\n    \n as \n    \n    faksd\n    \n, \n    \n    \n    fee_schedule\n    \n as \n    \n    fee_schedule\n    \n, \n    \n    \n    fiskn\n    \n as \n    \n    fiskn\n    \n, \n    \n    \n    fityp\n    \n as \n    \n    fityp\n    \n, \n    \n    \n    gform\n    \n as \n    \n    gform\n    \n, \n    \n    \n    hzuor\n    \n as \n    \n    hzuor\n    \n, \n    \n    \n    icmstaxpay\n    \n as \n    \n    icmstaxpay\n    \n, \n    \n    \n    indtyp\n    \n as \n    \n    indtyp\n    \n, \n    \n    \n    inspatdebi\n    \n as \n    \n    inspatdebi\n    \n, \n    \n    \n    inspbydebi\n    \n as \n    \n    inspbydebi\n    \n, \n    \n    \n    j_1kfrepre\n    \n as \n    \n    j_1kfrepre\n    \n, \n    \n    \n    j_1kftbus\n    \n as \n    \n    j_1kftbus\n    \n, \n    \n    \n    j_1kftind\n    \n as \n    \n    j_1kftind\n    \n, \n    \n    \n    jmjah\n    \n as \n    \n    jmjah\n    \n, \n    \n    \n    jmzah\n    \n as \n    \n    jmzah\n    \n, \n    \n    \n    katr1\n    \n as \n    \n    katr1\n    \n, \n    \n    \n    katr10\n    \n as \n    \n    katr10\n    \n, \n    \n    \n    katr2\n    \n as \n    \n    katr2\n    \n, \n    \n    \n    katr3\n    \n as \n    \n    katr3\n    \n, \n    \n    \n    katr4\n    \n as \n    \n    katr4\n    \n, \n    \n    \n    katr5\n    \n as \n    \n    katr5\n    \n, \n    \n    \n    katr6\n    \n as \n    \n    katr6\n    \n, \n    \n    \n    katr7\n    \n as \n    \n    katr7\n    \n, \n    \n    \n    katr8\n    \n as \n    \n    katr8\n    \n, \n    \n    \n    katr9\n    \n as \n    \n    katr9\n    \n, \n    \n    \n    kdkg1\n    \n as \n    \n    kdkg1\n    \n, \n    \n    \n    kdkg2\n    \n as \n    \n    kdkg2\n    \n, \n    \n    \n    kdkg3\n    \n as \n    \n    kdkg3\n    \n, \n    \n    \n    kdkg4\n    \n as \n    \n    kdkg4\n    \n, \n    \n    \n    kdkg5\n    \n as \n    \n    kdkg5\n    \n, \n    \n    \n    knazk\n    \n as \n    \n    knazk\n    \n, \n    \n    \n    knrza\n    \n as \n    \n    knrza\n    \n, \n    \n    \n    knurl\n    \n as \n    \n    knurl\n    \n, \n    \n    \n    konzs\n    \n as \n    \n    konzs\n    \n, \n    \n    \n    ktocd\n    \n as \n    \n    ktocd\n    \n, \n    \n    \n    ktokd\n    \n as \n    \n    ktokd\n    \n, \n    \n    \n    kukla\n    \n as \n    \n    kukla\n    \n, \n    \n    \n    kunnr\n    \n as \n    \n    kunnr\n    \n, \n    \n    \n    land1\n    \n as \n    \n    land1\n    \n, \n    \n    \n    legalnat\n    \n as \n    \n    legalnat\n    \n, \n    \n    \n    lifnr\n    \n as \n    \n    lifnr\n    \n, \n    \n    \n    lifsd\n    \n as \n    \n    lifsd\n    \n, \n    \n    \n    locco\n    \n as \n    \n    locco\n    \n, \n    \n    \n    loevm\n    \n as \n    \n    loevm\n    \n, \n    \n    \n    lzone\n    \n as \n    \n    lzone\n    \n, \n    \n    \n    mandt\n    \n as \n    \n    mandt\n    \n, \n    \n    \n    mcod1\n    \n as \n    \n    mcod1\n    \n, \n    \n    \n    mcod2\n    \n as \n    \n    mcod2\n    \n, \n    \n    \n    mcod3\n    \n as \n    \n    mcod3\n    \n, \n    \n    \n    milve\n    \n as \n    \n    milve\n    \n, \n    \n    \n    name1\n    \n as \n    \n    name1\n    \n, \n    \n    \n    name2\n    \n as \n    \n    name2\n    \n, \n    \n    \n    name3\n    \n as \n    \n    name3\n    \n, \n    \n    \n    name4\n    \n as \n    \n    name4\n    \n, \n    \n    \n    niels\n    \n as \n    \n    niels\n    \n, \n    \n    \n    nodel\n    \n as \n    \n    nodel\n    \n, \n    \n    \n    oid_poreqd\n    \n as \n    \n    oid_poreqd\n    \n, \n    \n    \n    oidrc\n    \n as \n    \n    oidrc\n    \n, \n    \n    \n    oipbl\n    \n as \n    \n    oipbl\n    \n, \n    \n    \n    ort01\n    \n as \n    \n    ort01\n    \n, \n    \n    \n    ort02\n    \n as \n    \n    ort02\n    \n, \n    \n    \n    periv\n    \n as \n    \n    periv\n    \n, \n    \n    \n    pfach\n    \n as \n    \n    pfach\n    \n, \n    \n    \n    pfort\n    \n as \n    \n    pfort\n    \n, \n    \n    \n    pmt_office\n    \n as \n    \n    pmt_office\n    \n, \n    \n    \n    psofg\n    \n as \n    \n    psofg\n    \n, \n    \n    \n    psohs\n    \n as \n    \n    psohs\n    \n, \n    \n    \n    psois\n    \n as \n    \n    psois\n    \n, \n    \n    \n    pson1\n    \n as \n    \n    pson1\n    \n, \n    \n    \n    pson2\n    \n as \n    \n    pson2\n    \n, \n    \n    \n    pson3\n    \n as \n    \n    pson3\n    \n, \n    \n    \n    psoo1\n    \n as \n    \n    psoo1\n    \n, \n    \n    \n    psoo2\n    \n as \n    \n    psoo2\n    \n, \n    \n    \n    psoo3\n    \n as \n    \n    psoo3\n    \n, \n    \n    \n    psoo4\n    \n as \n    \n    psoo4\n    \n, \n    \n    \n    psoo5\n    \n as \n    \n    psoo5\n    \n, \n    \n    \n    psost\n    \n as \n    \n    psost\n    \n, \n    \n    \n    psotl\n    \n as \n    \n    psotl\n    \n, \n    \n    \n    psovn\n    \n as \n    \n    psovn\n    \n, \n    \n    \n    pstl2\n    \n as \n    \n    pstl2\n    \n, \n    \n    \n    pstlz\n    \n as \n    \n    pstlz\n    \n, \n    \n    \n    regio\n    \n as \n    \n    regio\n    \n, \n    \n    \n    rg\n    \n as \n    \n    rg\n    \n, \n    \n    \n    rgdate\n    \n as \n    \n    rgdate\n    \n, \n    \n    \n    ric\n    \n as \n    \n    ric\n    \n, \n    \n    \n    rne\n    \n as \n    \n    rne\n    \n, \n    \n    \n    rnedate\n    \n as \n    \n    rnedate\n    \n, \n    \n    \n    rpmkr\n    \n as \n    \n    rpmkr\n    \n, \n    \n    \n    sortl\n    \n as \n    \n    sortl\n    \n, \n    \n    \n    sperr\n    \n as \n    \n    sperr\n    \n, \n    \n    \n    sperz\n    \n as \n    \n    sperz\n    \n, \n    \n    \n    spras\n    \n as \n    \n    spras\n    \n, \n    \n    \n    stcd1\n    \n as \n    \n    stcd1\n    \n, \n    \n    \n    stcd2\n    \n as \n    \n    stcd2\n    \n, \n    \n    \n    stcd3\n    \n as \n    \n    stcd3\n    \n, \n    \n    \n    stcd4\n    \n as \n    \n    stcd4\n    \n, \n    \n    \n    stcd5\n    \n as \n    \n    stcd5\n    \n, \n    \n    \n    stcdt\n    \n as \n    \n    stcdt\n    \n, \n    \n    \n    stceg\n    \n as \n    \n    stceg\n    \n, \n    \n    \n    stkza\n    \n as \n    \n    stkza\n    \n, \n    \n    \n    stkzn\n    \n as \n    \n    stkzn\n    \n, \n    \n    \n    stkzu\n    \n as \n    \n    stkzu\n    \n, \n    \n    \n    stras\n    \n as \n    \n    stras\n    \n, \n    \n    \n    suframa\n    \n as \n    \n    suframa\n    \n, \n    \n    \n    tdt\n    \n as \n    \n    tdt\n    \n, \n    \n    \n    telbx\n    \n as \n    \n    telbx\n    \n, \n    \n    \n    telf1\n    \n as \n    \n    telf1\n    \n, \n    \n    \n    telf2\n    \n as \n    \n    telf2\n    \n, \n    \n    \n    telfx\n    \n as \n    \n    telfx\n    \n, \n    \n    \n    teltx\n    \n as \n    \n    teltx\n    \n, \n    \n    \n    telx1\n    \n as \n    \n    telx1\n    \n, \n    \n    \n    txjcd\n    \n as \n    \n    txjcd\n    \n, \n    \n    \n    txlw1\n    \n as \n    \n    txlw1\n    \n, \n    \n    \n    txlw2\n    \n as \n    \n    txlw2\n    \n, \n    \n    \n    uf\n    \n as \n    \n    uf\n    \n, \n    \n    \n    umjah\n    \n as \n    \n    umjah\n    \n, \n    \n    \n    umsa1\n    \n as \n    \n    umsa1\n    \n, \n    \n    \n    umsat\n    \n as \n    \n    umsat\n    \n, \n    \n    \n    updat\n    \n as \n    \n    updat\n    \n, \n    \n    \n    uptim\n    \n as \n    \n    uptim\n    \n, \n    \n    \n    uwaer\n    \n as \n    \n    uwaer\n    \n, \n    \n    \n    vbund\n    \n as \n    \n    vbund\n    \n, \n    \n    \n    werks\n    \n as \n    \n    werks\n    \n, \n    \n    \n    xcpdk\n    \n as \n    \n    xcpdk\n    \n, \n    \n    \n    xicms\n    \n as \n    \n    xicms\n    \n, \n    \n    \n    xknza\n    \n as \n    \n    xknza\n    \n, \n    \n    \n    xsubt\n    \n as \n    \n    xsubt\n    \n, \n    \n    \n    xxipi\n    \n as \n    \n    xxipi\n    \n, \n    \n    \n    xzemp\n    \n as \n    \n    xzemp\n    \n, \n    cast(null as TEXT) as \n    \n    _vso_r_dpoint\n    \n , \n    cast(null as TEXT) as \n    \n    _vso_r_i_no_lyr\n    \n , \n    cast(null as TEXT) as \n    \n    _vso_r_load_pref\n    \n , \n    cast(null as TEXT) as \n    \n    _vso_r_matpal\n    \n , \n    cast(null as TEXT) as \n    \n    _vso_r_one_mat\n    \n , \n    cast(null as TEXT) as \n    \n    _vso_r_one_sort\n    \n , \n    cast(null as TEXT) as \n    \n    _vso_r_pal_ul\n    \n , \n    cast(null as numeric(28,6)) as \n    \n    _vso_r_palhgt\n    \n , \n    cast(null as TEXT) as \n    \n    _vso_r_pk_mat\n    \n , \n    cast(null as TEXT) as \n    \n    _vso_r_uld_side\n    \n , \n    cast(null as TEXT) as \n    \n    _xlso_client\n    \n , \n    cast(null as TEXT) as \n    \n    _xlso_customer\n    \n , \n    cast(null as TEXT) as \n    \n    _xlso_partner\n    \n , \n    cast(null as TEXT) as \n    \n    _xlso_pref_pay\n    \n , \n    cast(null as TEXT) as \n    \n    _xlso_sysid\n    \n \n\n\n    from base\n),\n\nfinal as (\n\n    select\n        _vso_r_dpoint,\n        _vso_r_i_no_lyr,\n        _vso_r_load_pref,\n        _vso_r_matpal,\n        _vso_r_one_mat,\n        _vso_r_one_sort,\n        _vso_r_pal_ul,\n        _vso_r_palhgt,\n        _vso_r_pk_mat,\n        _vso_r_uld_side,\n        _xlso_client,\n        _xlso_customer,\n        _xlso_partner,\n        _xlso_pref_pay,\n        _xlso_sysid,\n        cast(mandt as TEXT) as mandt,\n        cast(kunnr as TEXT) as kunnr,\n        pmt_office,\n        brsch,\n        katr9,\n        uwaer,\n        kdkg1,\n        pson3,\n        bran4,\n        ort02,\n        fiskn,\n        konzs,\n        etikg,\n        psoo2,\n        sperz,\n        katr4,\n        telx1,\n        crtn,\n        dtaws,\n        pstl2,\n        datlt,\n        rne,\n        name4,\n        xzemp,\n        kukla,\n        name2,\n        bahne,\n        psohs,\n        duns4,\n        kdkg2,\n        oidrc,\n        bran5,\n        umsat,\n        stcd3,\n        uf,\n        txlw1,\n        psoo3,\n        rnedate,\n        begru,\n        katr5,\n        stcdt,\n        duns,\n        updat,\n        katr10,\n        dear1,\n        inspatdebi,\n        periv,\n        kdkg3,\n        abrvw,\n        rg,\n        stcd4,\n        loevm,\n        txlw2,\n        lifnr,\n        psoo4,\n        counc,\n        telfx,\n        stcd2,\n        inspbydebi,\n        dear2,\n        stcd1,\n        ort01,\n        oid_poreqd,\n        kdkg4,\n        cvp_xblck,\n        faksd,\n        ktokd,\n        telbx,\n        legalnat,\n        stras,\n        ccc01,\n        dtams,\n        psoo5,\n        j_1kftind,\n        stkzn,\n        exp,\n        psotl,\n        dear3,\n        xxipi,\n        niels,\n        umsa1,\n        bahns,\n        bubkz,\n        kdkg5,\n        knurl,\n        xknza,\n        dear6,\n        pfort,\n        stcd5,\n        cityc,\n        ccc02,\n        ric,\n        land1,\n        umjah,\n        fee_schedule,\n        dear4,\n        erdat,\n        teltx,\n        ccc03,\n        oipbl,\n        rgdate,\n        anred,\n        ekont,\n        vbund,\n        psost,\n        knrza,\n        dear5,\n        psofg,\n        jmjah,\n        tdt,\n        bbbnr,\n        regio,\n        alc,\n        aufsd,\n        ccc04,\n        lifsd,\n        cassd,\n        werks,\n        katr6,\n        psois,\n        adrnr,\n        civve,\n        stkzu,\n        fityp,\n        bran1,\n        psovn,\n        comsize,\n        j_1kfrepre,\n        mcod1,\n        katr1,\n        hzuor,\n        xicms,\n        indtyp,\n        xcpdk,\n        lzone,\n        sortl,\n        katr7,\n        gform,\n        pson1,\n        bran2,\n        stceg,\n        sperr,\n        locco,\n        uptim,\n        cnae,\n        mcod2,\n        ernam,\n        txjcd,\n        katr2,\n        confs,\n        telf1,\n        j_1kftbus,\n        spras,\n        bbsnr,\n        xsubt,\n        katr8,\n        jmzah,\n        nodel,\n        decregpc,\n        duefl,\n        pson2,\n        cfopc,\n        pfach,\n        icmstaxpay,\n        bran3,\n        suframa,\n        exabl,\n        pstlz,\n        stkza,\n        psoo1,\n        ktocd,\n        telf2,\n        knazk,\n        milve,\n        katr3,\n        mcod3,\n        rpmkr,\n        name3,\n        name1,\n        _fivetran_deleted,\n        _fivetran_synced,\n        _fivetran_sap_archived\n\n    from fields\n)\n\nselect *\nfrom final", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null, "primary_key": [], "time_spine": null}, "model.sap.stg_sap__tvag": {"database": "postgres", "schema": "public_sap_dev", "name": "stg_sap__tvag", "resource_type": "model", "package_name": "sap", "path": "staging/stg_sap__tvag.sql", "original_file_path": "models/staging/stg_sap__tvag.sql", "unique_id": "model.sap.stg_sap__tvag", "fqn": ["sap", "staging", "stg_sap__tvag"], "alias": "stg_sap__tvag", "checksum": {"name": "sha256", "checksum": "5e94e5b8fa1716740d6a1f2f0fae5d2fbe96d175791e56db111ed2ec0d48e712"}, "config": {"enabled": true, "alias": null, "schema": "sap_dev", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "view", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "freshness": null}, "tags": [], "description": "Sales document rejection reasons", "columns": {"_fivetran_rowid": {"name": "_fivetran_rowid", "description": "Fivetran unique row ID", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "_fivetran_deleted": {"name": "_fivetran_deleted", "description": "Fivetran deletion marker", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "_fivetran_synced": {"name": "_fivetran_synced", "description": "Fivetran sync timestamp", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "abgru": {"name": "abgru", "description": "Reason code", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "dragr": {"name": "dragr", "description": "Item is relevant for delivery scheduling", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "ep_off": {"name": "ep_off", "description": "EDI partner-specific flag", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "fk_erl": {"name": "fk_erl", "description": "Billing block active", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "fsh_pqr_spec": {"name": "fsh_pqr_spec", "description": "PQR specification (Fashion)", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "hvr_change_time": {"name": "hvr_change_time", "description": "HVR change timestamp", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "hvr_is_deleted": {"name": "hvr_is_deleted", "description": "HVR deletion flag", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "kowrr": {"name": "kowrr", "description": "Net value relevant", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "mandt": {"name": "mandt", "description": "Client", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": "sap://models/staging/stg_sap.yml", "build_path": null, "unrendered_config": {"materialized": "view", "schema": "sap_{{ var('directed_schema','dev') }}", "enabled": true}, "created_at": 1756850331.3089995, "relation_name": "\"postgres\".\"public_sap_dev\".\"stg_sap__tvag\"", "raw_code": "{{ config(enabled=var('sap_using_tvag', True)) }}\n\n{% set source_columns = adapter.get_columns_in_relation(ref('stg_sap__tvag_tmp')) %}\n\nwith base as (\n    select {{ remove_slashes_from_col_names(source_columns) }}\n    from {{ ref('stg_sap__tvag_tmp') }}\n),\n\nfields as (\n    select\n        {{\n            fivetran_utils.fill_staging_columns(\n                source_columns=source_columns,\n                staging_columns=get_tvag_columns()\n            )\n        }}\n    from base\n),\n\nfinal as (\n    select\n        _fivetran_deleted,\n        _fivetran_rowid,\n        _fivetran_synced,\n        abgru,\n        dragr,\n        ep_off,\n        fk_erl,\n        fsh_pqr_spec,\n        hvr_change_time,\n        hvr_is_deleted,\n        kowrr,\n        mandt\n    from fields\n)\n\nselect *\nfrom final", "doc_blocks": [], "language": "sql", "refs": [{"name": "stg_sap__tvag_tmp", "package": null, "version": null}, {"name": "stg_sap__tvag_tmp", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.sap.remove_slashes_from_col_names", "macro.sap.get_tvag_columns", "macro.fivetran_utils.fill_staging_columns"], "nodes": ["model.sap.stg_sap__tvag_tmp"]}, "compiled_path": "target/compiled/sap/models/staging/stg_sap__tvag.sql", "compiled": true, "compiled_code": "\n\n\n\nwith base as (\n    select \n        \"_fivetran_deleted\" as _fivetran_deleted,\n        \"_fivetran_rowid\" as _fivetran_rowid,\n        \"_fivetran_synced\" as _fivetran_synced,\n        \"abgru\" as abgru,\n        \"dragr\" as dragr,\n        \"ep_off\" as ep_off,\n        \"fk_erl\" as fk_erl,\n        \"fsh_pqr_spec\" as fsh_pqr_spec,\n        \"hvr_change_time\" as hvr_change_time,\n        \"hvr_is_deleted\" as hvr_is_deleted,\n        \"kowrr\" as kowrr,\n        \"mandt\" as mandt\n    from \"postgres\".\"public_sap_dev\".\"stg_sap__tvag_tmp\"\n),\n\nfields as (\n    select\n        \n    \n    \n    _fivetran_deleted\n    \n as \n    \n    _fivetran_deleted\n    \n, \n    \n    \n    _fivetran_rowid\n    \n as \n    \n    _fivetran_rowid\n    \n, \n    \n    \n    _fivetran_synced\n    \n as \n    \n    _fivetran_synced\n    \n, \n    \n    \n    abgru\n    \n as \n    \n    abgru\n    \n, \n    \n    \n    dragr\n    \n as \n    \n    dragr\n    \n, \n    \n    \n    ep_off\n    \n as \n    \n    ep_off\n    \n, \n    \n    \n    fk_erl\n    \n as \n    \n    fk_erl\n    \n, \n    \n    \n    fsh_pqr_spec\n    \n as \n    \n    fsh_pqr_spec\n    \n, \n    \n    \n    hvr_change_time\n    \n as \n    \n    hvr_change_time\n    \n, \n    \n    \n    hvr_is_deleted\n    \n as \n    \n    hvr_is_deleted\n    \n, \n    \n    \n    kowrr\n    \n as \n    \n    kowrr\n    \n, \n    \n    \n    mandt\n    \n as \n    \n    mandt\n    \n\n\n\n    from base\n),\n\nfinal as (\n    select\n        _fivetran_deleted,\n        _fivetran_rowid,\n        _fivetran_synced,\n        abgru,\n        dragr,\n        ep_off,\n        fk_erl,\n        fsh_pqr_spec,\n        hvr_change_time,\n        hvr_is_deleted,\n        kowrr,\n        mandt\n    from fields\n)\n\nselect *\nfrom final", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null, "primary_key": [], "time_spine": null}, "model.sap.stg_sap__vbak": {"database": "postgres", "schema": "public_sap_dev", "name": "stg_sap__vbak", "resource_type": "model", "package_name": "sap", "path": "staging/stg_sap__vbak.sql", "original_file_path": "models/staging/stg_sap__vbak.sql", "unique_id": "model.sap.stg_sap__vbak", "fqn": ["sap", "staging", "stg_sap__vbak"], "alias": "stg_sap__vbak", "checksum": {"name": "sha256", "checksum": "8fe465cbfded13540aa97fe1cc4bd6f72c78ecdbf181a09ea2c366858474aa4d"}, "config": {"enabled": true, "alias": null, "schema": "sap_dev", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "view", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "freshness": null}, "tags": [], "description": "Sales document header data", "columns": {"_dataaging": {"name": "_dataaging", "description": "Data aging timestamp", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "_fivetran_deleted": {"name": "_fivetran_deleted", "description": "Fivetran deletion marker", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "_fivetran_sap_archived": {"name": "_fivetran_sap_archived", "description": "Fivetran SAP archive marker", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "_fivetran_synced": {"name": "_fivetran_synced", "description": "Fivetran sync timestamp", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "_xlso_catalog_id": {"name": "_xlso_catalog_id", "description": "XL system catalog ID", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "_xlso_payment_op": {"name": "_xlso_payment_op", "description": "XL system payment option", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "_xlso_so_vald_fm": {"name": "_xlso_so_vald_fm", "description": "XL system SO valid from", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "_xlso_so_vald_to": {"name": "_xlso_so_vald_to", "description": "XL system SO valid to", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "_xlso_trans_ctxt": {"name": "_xlso_trans_ctxt", "description": "XL system transaction context", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "_xlso_variant_id": {"name": "_xlso_variant_id", "description": "XL system variant ID", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "abdis": {"name": "abdis", "description": "Reason for rejection of the quotation", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "abhob": {"name": "abhob", "description": "Requested quantity already delivered", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "abhod": {"name": "abhod", "description": "Date of first partial delivery", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "abhov": {"name": "abhov", "description": "Volume delivered so far", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "abruf_part": {"name": "abruf_part", "description": "Partial delivery call-off", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "abrvw": {"name": "abrvw", "description": "Usage indicator", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "aedat": {"name": "aedat", "description": "Last change date", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "agrzr": {"name": "agrzr", "description": "Agreement number", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "amtbl": {"name": "amtbl", "description": "Billed amount", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "angdt": {"name": "angdt", "description": "Quotation date", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "auart": {"name": "auart", "description": "Sales document type", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "audat": {"name": "audat", "description": "Document date", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "aufnr": {"name": "aufnr", "description": "Order number", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "augru": {"name": "augru", "description": "Order reason", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "autlf": {"name": "autlf", "description": "Complete delivery defined for all items", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "awahr": {"name": "awahr", "description": "Probability of the quotation", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "betc": {"name": "betc", "description": "Tax base code", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "bname": {"name": "bname", "description": "Name of person who created the document", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "bnddt": {"name": "bnddt", "description": "Bid invitation deadline", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "bpn": {"name": "bpn", "description": "Bid project number", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "bsark": {"name": "bsark", "description": "Purchase order type", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "bstdk": {"name": "bstdk", "description": "Purchase order date", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "bstnk": {"name": "bstnk", "description": "Customer purchase order number", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "bstzd": {"name": "bstzd", "description": "Customer purchase order date", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "bukrs_vf": {"name": "bukrs_vf", "description": "Company code for billing", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "cancel_allow": {"name": "cancel_allow", "description": "Cancellation allowed indicator", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "cmfre": {"name": "cmfre", "description": "Credit management Released", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "cmngv": {"name": "cmngv", "description": "Credit management Total value", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "cmnup": {"name": "cmnup", "description": "Credit management Not yet posted value", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "cmwae": {"name": "cmwae", "description": "Credit management Currency", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "cont_dg": {"name": "cont_dg", "description": "Dangerous goods document number", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "crm_guid": {"name": "crm_guid", "description": "CRM GUID for sales document", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "ctlpc": {"name": "ctlpc", "description": "Pricing control", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "dat_fzau": {"name": "dat_fzau", "description": "Date of customer confirmation", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "enqueue_grp": {"name": "enqueue_grp", "description": "Lock group", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "erdat": {"name": "erdat", "description": "Created on", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "ernam": {"name": "ernam", "description": "Created by", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "erzet": {"name": "erzet", "description": "Time of creation", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "faksk": {"name": "faksk", "description": "Billing block at header level", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "fkara": {"name": "fkara", "description": "Billing type", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "fmbdat": {"name": "fmbdat", "description": "Date for fund commitment", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "fsh_candate": {"name": "fsh_candate", "description": "Cancellation date (Fashion)", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "fsh_cq_check": {"name": "fsh_cq_check", "description": "Check quantity (Fashion)", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "fsh_kvgr10": {"name": "fsh_kvgr10", "description": "Customer group 10 (Fashion)", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "fsh_kvgr6": {"name": "fsh_kvgr6", "description": "Customer group 6 (Fashion)", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "fsh_kvgr7": {"name": "fsh_kvgr7", "description": "Customer group 7 (Fashion)", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "fsh_kvgr8": {"name": "fsh_kvgr8", "description": "Customer group 8 (Fashion)", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "fsh_kvgr9": {"name": "fsh_kvgr9", "description": "Customer group 9 (Fashion)", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "fsh_os_stg_change": {"name": "fsh_os_stg_change", "description": "One-step staging change (Fashion)", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "fsh_rereg": {"name": "fsh_rereg", "description": "Reregistration status (Fashion)", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "fsh_ss": {"name": "fsh_ss", "description": "Season indicator (Fashion)", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "fsh_transaction": {"name": "fsh_transaction", "description": "Fashion transaction type", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "fsh_vas_cg": {"name": "fsh_vas_cg", "description": "VAS customer group (Fashion)", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "fsh_vrsn_status": {"name": "fsh_vrsn_status", "description": "Version status (Fashion)", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "grupp": {"name": "grupp", "description": "Credit control area group", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "gsber": {"name": "gsber", "description": "Business area", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "gskst": {"name": "gskst", "description": "Profit center", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "guebg": {"name": "guebg", "description": "Valid-from date", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "gueen": {"name": "gueen", "description": "Valid-to date", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "gwldt": {"name": "gwldt", "description": "Valid-to date (billing document)", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "handle": {"name": "handle", "description": "System handle for record", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "handoverloc": {"name": "handoverloc", "description": "Handover location", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "hb_cont_reason": {"name": "hb_cont_reason", "description": "Header condition control reason", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "hb_expdate": {"name": "hb_expdate", "description": "Header expiration date", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "hb_resdate": {"name": "hb_resdate", "description": "Header reservation date", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "hityp_pr": {"name": "hityp_pr", "description": "Item type proposal", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "ihrez": {"name": "ihrez", "description": "Customer reference", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "kalcd": {"name": "kalcd", "description": "Calculation schema group", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "kalsm": {"name": "kalsm", "description": "Pricing procedure", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "kalsm_ch": {"name": "kalsm_ch", "description": "Changed pricing procedure", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "kkber": {"name": "kkber", "description": "Credit control area", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "knkli": {"name": "knkli", "description": "Credit account", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "knuma": {"name": "knuma", "description": "Agreement number", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "knumv": {"name": "knumv", "description": "Condition number", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "kokrs": {"name": "kokrs", "description": "Controlling area", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "kostl": {"name": "kostl", "description": "Cost center", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "ktext": {"name": "ktext", "description": "Header text", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "kunnr": {"name": "kunnr", "description": "Sold-to party", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "kurst": {"name": "kurst", "description": "Exchange rate type", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "kvgr1": {"name": "kvgr1", "description": "Customer group 1", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "kvgr2": {"name": "kvgr2", "description": "Customer group 2", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "kvgr3": {"name": "kvgr3", "description": "Customer group 3", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "kvgr4": {"name": "kvgr4", "description": "Customer group 4", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "kvgr5": {"name": "kvgr5", "description": "Customer group 5", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "landtx": {"name": "landtx", "description": "Country of destination", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "lifsk": {"name": "lifsk", "description": "Delivery block (header)", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "logsysb": {"name": "logsysb", "description": "Logical system (billing)", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "mahdt": {"name": "mahdt", "description": "Dunning date", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "mahza": {"name": "mahza", "description": "Dunning level", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "mandt": {"name": "mandt", "description": "Client", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "mill_appl_id": {"name": "mill_appl_id", "description": "Mill product application ID", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "mod_allow": {"name": "mod_allow", "description": "Modification allowed", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "msr_id": {"name": "msr_id", "description": "MSR process ID", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "mtlaur": {"name": "mtlaur", "description": "Material availability date", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "multi": {"name": "multi", "description": "Multi-step shipping indicator", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "netwr": {"name": "netwr", "description": "Net value of the order", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "objnr": {"name": "objnr", "description": "Object number", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "pay_method": {"name": "pay_method", "description": "Payment method", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "phase": {"name": "phase", "description": "Project phase", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "proli": {"name": "proli", "description": "Project profile", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "ps_psp_pnr": {"name": "ps_psp_pnr", "description": "WBS element", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "psm_budat": {"name": "psm_budat", "description": "Budget date (Public Sector)", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "qmnum": {"name": "qmnum", "description": "Notification number", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "rep_freq": {"name": "rep_freq", "description": "Reporting frequency", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "rplnr": {"name": "rplnr", "description": "Replenishment order number", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "sbgrp": {"name": "sbgrp", "description": "Product hierarchy group", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "scheme_grp": {"name": "scheme_grp", "description": "Pricing scheme group", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "smenr": {"name": "smenr", "description": "Sales employee number", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "spart": {"name": "spart", "description": "Division", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "sppaym": {"name": "sppaym", "description": "Special payment agreement", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "stafo": {"name": "stafo", "description": "Follow-up document status", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "stage": {"name": "stage", "description": "Stage in approval workflow", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "stceg_l": {"name": "stceg_l", "description": "VAT registration number", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "stwae": {"name": "stwae", "description": "Statistics currency", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "submi": {"name": "submi", "description": "Subcontracting indicator", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "swenr": {"name": "swenr", "description": "Warranty number", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "tas": {"name": "tas", "description": "Task list type", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "taxk1": {"name": "taxk1", "description": "Tax classification 1", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "taxk2": {"name": "taxk2", "description": "Tax classification 2", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "taxk3": {"name": "taxk3", "description": "Tax classification 3", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "taxk4": {"name": "taxk4", "description": "Tax classification 4", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "taxk5": {"name": "taxk5", "description": "Tax classification 5", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "taxk6": {"name": "taxk6", "description": "Tax classification 6", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "taxk7": {"name": "taxk7", "description": "Tax classification 7", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "taxk8": {"name": "taxk8", "description": "Tax classification 8", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "taxk9": {"name": "taxk9", "description": "Tax classification 9", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "telf1": {"name": "telf1", "description": "Telephone number", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "tm_ctrl_key": {"name": "tm_ctrl_key", "description": "Transportation planning point", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "trvog": {"name": "trvog", "description": "Transaction group", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "upd_tmstmp": {"name": "upd_tmstmp", "description": "Update timestamp", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "vbeln": {"name": "vbeln", "description": "Sales document number", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "vbeln_grp": {"name": "vbeln_grp", "description": "Grouping sales document", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "vbkla": {"name": "vbkla", "description": "Order probability", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "vbklt": {"name": "vbklt", "description": "Texts for order probability", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "vbtyp": {"name": "vbtyp", "description": "Document category in sales", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "vdatu": {"name": "vdatu", "description": "Requested delivery date", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "vgbel": {"name": "vgbel", "description": "Document number of the reference", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "vgtyp": {"name": "vgtyp", "description": "Document category of the reference", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "vkbur": {"name": "vkbur", "description": "Sales office", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "vkgrp": {"name": "vkgrp", "description": "Sales group", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "vkorg": {"name": "vkorg", "description": "Sales organization", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "vprgr": {"name": "vprgr", "description": "Pricing group", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "vsbed": {"name": "vsbed", "description": "Shipping conditions", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "vsnmr_v": {"name": "vsnmr_v", "description": "Version number", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "vtweg": {"name": "vtweg", "description": "Distribution channel", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "vzeit": {"name": "vzeit", "description": "Time of delivery", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "waerk": {"name": "waerk", "description": "Document currency", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "wtysc_clm_hdr": {"name": "wtysc_clm_hdr", "description": "Warranty claim header", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "xblnr": {"name": "xblnr", "description": "Reference document number", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "xegdr": {"name": "xegdr", "description": "External GUID reference", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "zuonr": {"name": "zuonr", "description": "Assignment number", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": "sap://models/staging/stg_sap.yml", "build_path": null, "unrendered_config": {"materialized": "view", "schema": "sap_{{ var('directed_schema','dev') }}", "enabled": true}, "created_at": 1756850331.3570704, "relation_name": "\"postgres\".\"public_sap_dev\".\"stg_sap__vbak\"", "raw_code": "{{ config(enabled=var('sap_using_vbak', True)) }}\n\n{% set source_columns = adapter.get_columns_in_relation(ref('stg_sap__vbak_tmp')) %}\n\nwith base as (\n    select {{ remove_slashes_from_col_names(source_columns) }}\n    from {{ ref('stg_sap__vbak_tmp') }}\n),\n\nfields as (\n    select\n        {{\n            fivetran_utils.fill_staging_columns(\n                source_columns=source_columns,\n                staging_columns=get_vbak_columns()\n            )\n        }}\n    from base\n),\n\nfinal as (\n    select\n        _fivetran_deleted,\n        _fivetran_synced,\n        _fivetran_sap_archived,\n        cast(mandt as {{ dbt.type_string() }}) as mandt,\n        cast(vbeln as {{ dbt.type_string() }}) as vbeln,\n        kostl,\n        mahza,\n        msr_id,\n        _dataaging,\n        taxk5,\n        kvgr4,\n        amtbl,\n        trvog,\n        hb_resdate,\n        fmbdat,\n        fsh_vrsn_status,\n        upd_tmstmp,\n        auart,\n        hb_expdate,\n        scheme_grp,\n        smenr,\n        taxk6,\n        fsh_transaction,\n        kvgr5,\n        gskst,\n        vkgrp,\n        pay_method,\n        ktext,\n        ps_psp_pnr,\n        faksk,\n        bnddt,\n        cmwae,\n        kokrs,\n        cast(kunnr as {{ dbt.type_string() }}) as kunnr,\n        betc,\n        fsh_rereg,\n        tas,\n        cancel_allow,\n        fkara,\n        taxk7,\n        gwldt,\n        psm_budat,\n        objnr,\n        autlf,\n        stwae,\n        abhov,\n        logsysb,\n        fsh_kvgr6,\n        bname,\n        taxk8,\n        xblnr,\n        mtlaur,\n        augru,\n        stafo,\n        swenr,\n        _xlso_trans_ctxt,\n        abruf_part,\n        cmngv,\n        knkli,\n        spart,\n        proli,\n        enqueue_grp,\n        vzeit,\n        kalcd,\n        bukrs_vf,\n        fsh_kvgr7,\n        vprgr,\n        crm_guid,\n        hityp_pr,\n        taxk9,\n        vgbel,\n        erzet,\n        ihrez,\n        submi,\n        vdatu,\n        _xlso_variant_id,\n        abdis,\n        fsh_kvgr8,\n        ernam,\n        hb_cont_reason,\n        cast(netwr as {{ dbt.type_numeric() }}) as netwr,\n        vbkla,\n        vgtyp,\n        sbgrp,\n        stceg_l,\n        fsh_kvgr10,\n        knuma,\n        fsh_ss,\n        fsh_cq_check,\n        xegdr,\n        bstnk,\n        multi,\n        sppaym,\n        lifsk,\n        fsh_kvgr9,\n        aedat,\n        wtysc_clm_hdr,\n        dat_fzau,\n        awahr,\n        kurst,\n        gueen,\n        _xlso_so_vald_to,\n        cmnup,\n        abhod,\n        vkorg,\n        audat,\n        zuonr,\n        angdt,\n        vsbed,\n        _xlso_payment_op,\n        rep_freq,\n        handle,\n        _xlso_so_vald_fm,\n        bstzd,\n        taxk1,\n        mahdt,\n        bstdk,\n        vbeln_grp,\n        handoverloc,\n        qmnum,\n        kalsm_ch,\n        cont_dg,\n        cmfre,\n        vtweg,\n        telf1,\n        aufnr,\n        phase,\n        taxk2,\n        kvgr1,\n        grupp,\n        fsh_os_stg_change,\n        abhob,\n        landtx,\n        kalsm,\n        erdat,\n        bpn,\n        stage,\n        kkber,\n        taxk3,\n        abrvw,\n        vbtyp,\n        kvgr2,\n        knumv,\n        guebg,\n        fsh_vas_cg,\n        waerk,\n        vkbur,\n        ctlpc,\n        vsnmr_v,\n        rplnr,\n        vbklt,\n        mod_allow,\n        taxk4,\n        _xlso_catalog_id,\n        kvgr3,\n        fsh_candate,\n        agrzr,\n        mill_appl_id,\n        bsark,\n        tm_ctrl_key,\n        gsber\n    from fields\n)\n\nselect *\nfrom final", "doc_blocks": [], "language": "sql", "refs": [{"name": "stg_sap__vbak_tmp", "package": null, "version": null}, {"name": "stg_sap__vbak_tmp", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.sap.remove_slashes_from_col_names", "macro.sap.get_vbak_columns", "macro.fivetran_utils.fill_staging_columns", "macro.dbt.type_string", "macro.dbt.type_numeric"], "nodes": ["model.sap.stg_sap__vbak_tmp"]}, "compiled_path": "target/compiled/sap/models/staging/stg_sap__vbak.sql", "compiled": true, "compiled_code": "\n\n\n\nwith base as (\n    select \n        \"mandt\" as mandt,\n        \"vbeln\" as vbeln,\n        \"kostl\" as kostl,\n        \"mahza\" as mahza,\n        \"msr_id\" as msr_id,\n        \"_dataaging\" as _dataaging,\n        \"taxk5\" as taxk5,\n        \"kvgr4\" as kvgr4,\n        \"amtbl\" as amtbl,\n        \"trvog\" as trvog,\n        \"hb_resdate\" as hb_resdate,\n        \"fmbdat\" as fmbdat,\n        \"fsh_vrsn_status\" as fsh_vrsn_status,\n        \"upd_tmstmp\" as upd_tmstmp,\n        \"auart\" as auart,\n        \"hb_expdate\" as hb_expdate,\n        \"scheme_grp\" as scheme_grp,\n        \"smenr\" as smenr,\n        \"taxk6\" as taxk6,\n        \"fsh_transaction\" as fsh_transaction,\n        \"kvgr5\" as kvgr5,\n        \"gskst\" as gskst,\n        \"vkgrp\" as vkgrp,\n        \"pay_method\" as pay_method,\n        \"ktext\" as ktext,\n        \"ps_psp_pnr\" as ps_psp_pnr,\n        \"faksk\" as faksk,\n        \"bnddt\" as bnddt,\n        \"cmwae\" as cmwae,\n        \"kokrs\" as kokrs,\n        \"kunnr\" as kunnr,\n        \"betc\" as betc,\n        \"fsh_rereg\" as fsh_rereg,\n        \"tas\" as tas,\n        \"cancel_allow\" as cancel_allow,\n        \"fkara\" as fkara,\n        \"taxk7\" as taxk7,\n        \"gwldt\" as gwldt,\n        \"psm_budat\" as psm_budat,\n        \"objnr\" as objnr,\n        \"autlf\" as autlf,\n        \"stwae\" as stwae,\n        \"abhov\" as abhov,\n        \"logsysb\" as logsysb,\n        \"fsh_kvgr6\" as fsh_kvgr6,\n        \"bname\" as bname,\n        \"taxk8\" as taxk8,\n        \"xblnr\" as xblnr,\n        \"mtlaur\" as mtlaur,\n        \"augru\" as augru,\n        \"stafo\" as stafo,\n        \"swenr\" as swenr,\n        \"_xlso_trans_ctxt\" as _xlso_trans_ctxt,\n        \"abruf_part\" as abruf_part,\n        \"cmngv\" as cmngv,\n        \"knkli\" as knkli,\n        \"spart\" as spart,\n        \"proli\" as proli,\n        \"enqueue_grp\" as enqueue_grp,\n        \"vzeit\" as vzeit,\n        \"kalcd\" as kalcd,\n        \"bukrs_vf\" as bukrs_vf,\n        \"fsh_kvgr7\" as fsh_kvgr7,\n        \"vprgr\" as vprgr,\n        \"crm_guid\" as crm_guid,\n        \"hityp_pr\" as hityp_pr,\n        \"taxk9\" as taxk9,\n        \"vgbel\" as vgbel,\n        \"erzet\" as erzet,\n        \"ihrez\" as ihrez,\n        \"submi\" as submi,\n        \"vdatu\" as vdatu,\n        \"_xlso_variant_id\" as _xlso_variant_id,\n        \"abdis\" as abdis,\n        \"fsh_kvgr8\" as fsh_kvgr8,\n        \"ernam\" as ernam,\n        \"hb_cont_reason\" as hb_cont_reason,\n        \"netwr\" as netwr,\n        \"vbkla\" as vbkla,\n        \"vgtyp\" as vgtyp,\n        \"sbgrp\" as sbgrp,\n        \"stceg_l\" as stceg_l,\n        \"fsh_kvgr10\" as fsh_kvgr10,\n        \"knuma\" as knuma,\n        \"fsh_ss\" as fsh_ss,\n        \"fsh_cq_check\" as fsh_cq_check,\n        \"xegdr\" as xegdr,\n        \"bstnk\" as bstnk,\n        \"multi\" as multi,\n        \"sppaym\" as sppaym,\n        \"lifsk\" as lifsk,\n        \"fsh_kvgr9\" as fsh_kvgr9,\n        \"aedat\" as aedat,\n        \"wtysc_clm_hdr\" as wtysc_clm_hdr,\n        \"dat_fzau\" as dat_fzau,\n        \"awahr\" as awahr,\n        \"kurst\" as kurst,\n        \"gueen\" as gueen,\n        \"_xlso_so_vald_to\" as _xlso_so_vald_to,\n        \"cmnup\" as cmnup,\n        \"abhod\" as abhod,\n        \"vkorg\" as vkorg,\n        \"audat\" as audat,\n        \"zuonr\" as zuonr,\n        \"angdt\" as angdt,\n        \"vsbed\" as vsbed,\n        \"_xlso_payment_op\" as _xlso_payment_op,\n        \"rep_freq\" as rep_freq,\n        \"handle\" as handle,\n        \"_xlso_so_vald_fm\" as _xlso_so_vald_fm,\n        \"bstzd\" as bstzd,\n        \"taxk1\" as taxk1,\n        \"mahdt\" as mahdt,\n        \"bstdk\" as bstdk,\n        \"vbeln_grp\" as vbeln_grp,\n        \"handoverloc\" as handoverloc,\n        \"qmnum\" as qmnum,\n        \"kalsm_ch\" as kalsm_ch,\n        \"cont_dg\" as cont_dg,\n        \"cmfre\" as cmfre,\n        \"vtweg\" as vtweg,\n        \"telf1\" as telf1,\n        \"aufnr\" as aufnr,\n        \"phase\" as phase,\n        \"taxk2\" as taxk2,\n        \"kvgr1\" as kvgr1,\n        \"grupp\" as grupp,\n        \"fsh_os_stg_change\" as fsh_os_stg_change,\n        \"abhob\" as abhob,\n        \"landtx\" as landtx,\n        \"kalsm\" as kalsm,\n        \"erdat\" as erdat,\n        \"bpn\" as bpn,\n        \"stage\" as stage,\n        \"kkber\" as kkber,\n        \"taxk3\" as taxk3,\n        \"abrvw\" as abrvw,\n        \"vbtyp\" as vbtyp,\n        \"kvgr2\" as kvgr2,\n        \"knumv\" as knumv,\n        \"guebg\" as guebg,\n        \"fsh_vas_cg\" as fsh_vas_cg,\n        \"waerk\" as waerk,\n        \"vkbur\" as vkbur,\n        \"ctlpc\" as ctlpc,\n        \"vsnmr_v\" as vsnmr_v,\n        \"rplnr\" as rplnr,\n        \"vbklt\" as vbklt,\n        \"mod_allow\" as mod_allow,\n        \"taxk4\" as taxk4,\n        \"_xlso_catalog_id\" as _xlso_catalog_id,\n        \"kvgr3\" as kvgr3,\n        \"fsh_candate\" as fsh_candate,\n        \"agrzr\" as agrzr,\n        \"mill_appl_id\" as mill_appl_id,\n        \"bsark\" as bsark,\n        \"tm_ctrl_key\" as tm_ctrl_key,\n        \"gsber\" as gsber,\n        \"_fivetran_deleted\" as _fivetran_deleted,\n        \"_fivetran_synced\" as _fivetran_synced,\n        \"_fivetran_sap_archived\" as _fivetran_sap_archived\n    from \"postgres\".\"public_sap_dev\".\"stg_sap__vbak_tmp\"\n),\n\nfields as (\n    select\n        \n    \n    \n    mandt\n    \n as \n    \n    mandt\n    \n, \n    \n    \n    vbeln\n    \n as \n    \n    vbeln\n    \n, \n    \n    \n    kostl\n    \n as \n    \n    kostl\n    \n, \n    \n    \n    mahza\n    \n as \n    \n    mahza\n    \n, \n    \n    \n    msr_id\n    \n as \n    \n    msr_id\n    \n, \n    \n    \n    _dataaging\n    \n as \n    \n    _dataaging\n    \n, \n    \n    \n    taxk5\n    \n as \n    \n    taxk5\n    \n, \n    \n    \n    kvgr4\n    \n as \n    \n    kvgr4\n    \n, \n    \n    \n    amtbl\n    \n as \n    \n    amtbl\n    \n, \n    \n    \n    trvog\n    \n as \n    \n    trvog\n    \n, \n    \n    \n    hb_resdate\n    \n as \n    \n    hb_resdate\n    \n, \n    \n    \n    fmbdat\n    \n as \n    \n    fmbdat\n    \n, \n    \n    \n    fsh_vrsn_status\n    \n as \n    \n    fsh_vrsn_status\n    \n, \n    \n    \n    upd_tmstmp\n    \n as \n    \n    upd_tmstmp\n    \n, \n    \n    \n    auart\n    \n as \n    \n    auart\n    \n, \n    \n    \n    hb_expdate\n    \n as \n    \n    hb_expdate\n    \n, \n    \n    \n    scheme_grp\n    \n as \n    \n    scheme_grp\n    \n, \n    \n    \n    smenr\n    \n as \n    \n    smenr\n    \n, \n    \n    \n    taxk6\n    \n as \n    \n    taxk6\n    \n, \n    \n    \n    fsh_transaction\n    \n as \n    \n    fsh_transaction\n    \n, \n    \n    \n    kvgr5\n    \n as \n    \n    kvgr5\n    \n, \n    \n    \n    gskst\n    \n as \n    \n    gskst\n    \n, \n    \n    \n    vkgrp\n    \n as \n    \n    vkgrp\n    \n, \n    \n    \n    pay_method\n    \n as \n    \n    pay_method\n    \n, \n    \n    \n    ktext\n    \n as \n    \n    ktext\n    \n, \n    \n    \n    ps_psp_pnr\n    \n as \n    \n    ps_psp_pnr\n    \n, \n    \n    \n    faksk\n    \n as \n    \n    faksk\n    \n, \n    \n    \n    bnddt\n    \n as \n    \n    bnddt\n    \n, \n    \n    \n    cmwae\n    \n as \n    \n    cmwae\n    \n, \n    \n    \n    kokrs\n    \n as \n    \n    kokrs\n    \n, \n    \n    \n    kunnr\n    \n as \n    \n    kunnr\n    \n, \n    \n    \n    betc\n    \n as \n    \n    betc\n    \n, \n    \n    \n    fsh_rereg\n    \n as \n    \n    fsh_rereg\n    \n, \n    \n    \n    tas\n    \n as \n    \n    tas\n    \n, \n    \n    \n    cancel_allow\n    \n as \n    \n    cancel_allow\n    \n, \n    \n    \n    fkara\n    \n as \n    \n    fkara\n    \n, \n    \n    \n    taxk7\n    \n as \n    \n    taxk7\n    \n, \n    \n    \n    gwldt\n    \n as \n    \n    gwldt\n    \n, \n    \n    \n    psm_budat\n    \n as \n    \n    psm_budat\n    \n, \n    \n    \n    objnr\n    \n as \n    \n    objnr\n    \n, \n    \n    \n    autlf\n    \n as \n    \n    autlf\n    \n, \n    \n    \n    stwae\n    \n as \n    \n    stwae\n    \n, \n    \n    \n    abhov\n    \n as \n    \n    abhov\n    \n, \n    \n    \n    logsysb\n    \n as \n    \n    logsysb\n    \n, \n    \n    \n    fsh_kvgr6\n    \n as \n    \n    fsh_kvgr6\n    \n, \n    \n    \n    bname\n    \n as \n    \n    bname\n    \n, \n    \n    \n    taxk8\n    \n as \n    \n    taxk8\n    \n, \n    \n    \n    xblnr\n    \n as \n    \n    xblnr\n    \n, \n    \n    \n    mtlaur\n    \n as \n    \n    mtlaur\n    \n, \n    \n    \n    augru\n    \n as \n    \n    augru\n    \n, \n    \n    \n    stafo\n    \n as \n    \n    stafo\n    \n, \n    \n    \n    swenr\n    \n as \n    \n    swenr\n    \n, \n    \n    \n    _xlso_trans_ctxt\n    \n as \n    \n    _xlso_trans_ctxt\n    \n, \n    \n    \n    abruf_part\n    \n as \n    \n    abruf_part\n    \n, \n    \n    \n    cmngv\n    \n as \n    \n    cmngv\n    \n, \n    \n    \n    knkli\n    \n as \n    \n    knkli\n    \n, \n    \n    \n    spart\n    \n as \n    \n    spart\n    \n, \n    \n    \n    proli\n    \n as \n    \n    proli\n    \n, \n    \n    \n    enqueue_grp\n    \n as \n    \n    enqueue_grp\n    \n, \n    \n    \n    vzeit\n    \n as \n    \n    vzeit\n    \n, \n    \n    \n    kalcd\n    \n as \n    \n    kalcd\n    \n, \n    \n    \n    bukrs_vf\n    \n as \n    \n    bukrs_vf\n    \n, \n    \n    \n    fsh_kvgr7\n    \n as \n    \n    fsh_kvgr7\n    \n, \n    \n    \n    vprgr\n    \n as \n    \n    vprgr\n    \n, \n    \n    \n    crm_guid\n    \n as \n    \n    crm_guid\n    \n, \n    \n    \n    hityp_pr\n    \n as \n    \n    hityp_pr\n    \n, \n    \n    \n    taxk9\n    \n as \n    \n    taxk9\n    \n, \n    \n    \n    vgbel\n    \n as \n    \n    vgbel\n    \n, \n    \n    \n    erzet\n    \n as \n    \n    erzet\n    \n, \n    \n    \n    ihrez\n    \n as \n    \n    ihrez\n    \n, \n    \n    \n    submi\n    \n as \n    \n    submi\n    \n, \n    \n    \n    vdatu\n    \n as \n    \n    vdatu\n    \n, \n    \n    \n    _xlso_variant_id\n    \n as \n    \n    _xlso_variant_id\n    \n, \n    \n    \n    abdis\n    \n as \n    \n    abdis\n    \n, \n    \n    \n    fsh_kvgr8\n    \n as \n    \n    fsh_kvgr8\n    \n, \n    \n    \n    ernam\n    \n as \n    \n    ernam\n    \n, \n    \n    \n    hb_cont_reason\n    \n as \n    \n    hb_cont_reason\n    \n, \n    \n    \n    netwr\n    \n as \n    \n    netwr\n    \n, \n    \n    \n    vbkla\n    \n as \n    \n    vbkla\n    \n, \n    \n    \n    vgtyp\n    \n as \n    \n    vgtyp\n    \n, \n    \n    \n    sbgrp\n    \n as \n    \n    sbgrp\n    \n, \n    \n    \n    stceg_l\n    \n as \n    \n    stceg_l\n    \n, \n    \n    \n    fsh_kvgr10\n    \n as \n    \n    fsh_kvgr10\n    \n, \n    \n    \n    knuma\n    \n as \n    \n    knuma\n    \n, \n    \n    \n    fsh_ss\n    \n as \n    \n    fsh_ss\n    \n, \n    \n    \n    fsh_cq_check\n    \n as \n    \n    fsh_cq_check\n    \n, \n    \n    \n    xegdr\n    \n as \n    \n    xegdr\n    \n, \n    \n    \n    bstnk\n    \n as \n    \n    bstnk\n    \n, \n    \n    \n    multi\n    \n as \n    \n    multi\n    \n, \n    \n    \n    sppaym\n    \n as \n    \n    sppaym\n    \n, \n    \n    \n    lifsk\n    \n as \n    \n    lifsk\n    \n, \n    \n    \n    fsh_kvgr9\n    \n as \n    \n    fsh_kvgr9\n    \n, \n    \n    \n    aedat\n    \n as \n    \n    aedat\n    \n, \n    \n    \n    wtysc_clm_hdr\n    \n as \n    \n    wtysc_clm_hdr\n    \n, \n    \n    \n    dat_fzau\n    \n as \n    \n    dat_fzau\n    \n, \n    \n    \n    awahr\n    \n as \n    \n    awahr\n    \n, \n    \n    \n    kurst\n    \n as \n    \n    kurst\n    \n, \n    \n    \n    gueen\n    \n as \n    \n    gueen\n    \n, \n    \n    \n    _xlso_so_vald_to\n    \n as \n    \n    _xlso_so_vald_to\n    \n, \n    \n    \n    cmnup\n    \n as \n    \n    cmnup\n    \n, \n    \n    \n    abhod\n    \n as \n    \n    abhod\n    \n, \n    \n    \n    vkorg\n    \n as \n    \n    vkorg\n    \n, \n    \n    \n    audat\n    \n as \n    \n    audat\n    \n, \n    \n    \n    zuonr\n    \n as \n    \n    zuonr\n    \n, \n    \n    \n    angdt\n    \n as \n    \n    angdt\n    \n, \n    \n    \n    vsbed\n    \n as \n    \n    vsbed\n    \n, \n    \n    \n    _xlso_payment_op\n    \n as \n    \n    _xlso_payment_op\n    \n, \n    \n    \n    rep_freq\n    \n as \n    \n    rep_freq\n    \n, \n    \n    \n    handle\n    \n as \n    \n    handle\n    \n, \n    \n    \n    _xlso_so_vald_fm\n    \n as \n    \n    _xlso_so_vald_fm\n    \n, \n    \n    \n    bstzd\n    \n as \n    \n    bstzd\n    \n, \n    \n    \n    taxk1\n    \n as \n    \n    taxk1\n    \n, \n    \n    \n    mahdt\n    \n as \n    \n    mahdt\n    \n, \n    \n    \n    bstdk\n    \n as \n    \n    bstdk\n    \n, \n    \n    \n    vbeln_grp\n    \n as \n    \n    vbeln_grp\n    \n, \n    \n    \n    handoverloc\n    \n as \n    \n    handoverloc\n    \n, \n    \n    \n    qmnum\n    \n as \n    \n    qmnum\n    \n, \n    \n    \n    kalsm_ch\n    \n as \n    \n    kalsm_ch\n    \n, \n    \n    \n    cont_dg\n    \n as \n    \n    cont_dg\n    \n, \n    \n    \n    cmfre\n    \n as \n    \n    cmfre\n    \n, \n    \n    \n    vtweg\n    \n as \n    \n    vtweg\n    \n, \n    \n    \n    telf1\n    \n as \n    \n    telf1\n    \n, \n    \n    \n    aufnr\n    \n as \n    \n    aufnr\n    \n, \n    \n    \n    phase\n    \n as \n    \n    phase\n    \n, \n    \n    \n    taxk2\n    \n as \n    \n    taxk2\n    \n, \n    \n    \n    kvgr1\n    \n as \n    \n    kvgr1\n    \n, \n    \n    \n    grupp\n    \n as \n    \n    grupp\n    \n, \n    \n    \n    fsh_os_stg_change\n    \n as \n    \n    fsh_os_stg_change\n    \n, \n    \n    \n    abhob\n    \n as \n    \n    abhob\n    \n, \n    \n    \n    landtx\n    \n as \n    \n    landtx\n    \n, \n    \n    \n    kalsm\n    \n as \n    \n    kalsm\n    \n, \n    \n    \n    erdat\n    \n as \n    \n    erdat\n    \n, \n    \n    \n    bpn\n    \n as \n    \n    bpn\n    \n, \n    \n    \n    stage\n    \n as \n    \n    stage\n    \n, \n    \n    \n    kkber\n    \n as \n    \n    kkber\n    \n, \n    \n    \n    taxk3\n    \n as \n    \n    taxk3\n    \n, \n    \n    \n    abrvw\n    \n as \n    \n    abrvw\n    \n, \n    \n    \n    vbtyp\n    \n as \n    \n    vbtyp\n    \n, \n    \n    \n    kvgr2\n    \n as \n    \n    kvgr2\n    \n, \n    \n    \n    knumv\n    \n as \n    \n    knumv\n    \n, \n    \n    \n    guebg\n    \n as \n    \n    guebg\n    \n, \n    \n    \n    fsh_vas_cg\n    \n as \n    \n    fsh_vas_cg\n    \n, \n    \n    \n    waerk\n    \n as \n    \n    waerk\n    \n, \n    \n    \n    vkbur\n    \n as \n    \n    vkbur\n    \n, \n    \n    \n    ctlpc\n    \n as \n    \n    ctlpc\n    \n, \n    \n    \n    vsnmr_v\n    \n as \n    \n    vsnmr_v\n    \n, \n    \n    \n    rplnr\n    \n as \n    \n    rplnr\n    \n, \n    \n    \n    vbklt\n    \n as \n    \n    vbklt\n    \n, \n    \n    \n    mod_allow\n    \n as \n    \n    mod_allow\n    \n, \n    \n    \n    taxk4\n    \n as \n    \n    taxk4\n    \n, \n    \n    \n    _xlso_catalog_id\n    \n as \n    \n    _xlso_catalog_id\n    \n, \n    \n    \n    kvgr3\n    \n as \n    \n    kvgr3\n    \n, \n    \n    \n    fsh_candate\n    \n as \n    \n    fsh_candate\n    \n, \n    \n    \n    agrzr\n    \n as \n    \n    agrzr\n    \n, \n    \n    \n    mill_appl_id\n    \n as \n    \n    mill_appl_id\n    \n, \n    \n    \n    bsark\n    \n as \n    \n    bsark\n    \n, \n    \n    \n    tm_ctrl_key\n    \n as \n    \n    tm_ctrl_key\n    \n, \n    \n    \n    gsber\n    \n as \n    \n    gsber\n    \n, \n    \n    \n    _fivetran_deleted\n    \n as \n    \n    _fivetran_deleted\n    \n, \n    \n    \n    _fivetran_synced\n    \n as \n    \n    _fivetran_synced\n    \n, \n    \n    \n    _fivetran_sap_archived\n    \n as \n    \n    _fivetran_sap_archived\n    \n\n\n\n    from base\n),\n\nfinal as (\n    select\n        _fivetran_deleted,\n        _fivetran_synced,\n        _fivetran_sap_archived,\n        cast(mandt as TEXT) as mandt,\n        cast(vbeln as TEXT) as vbeln,\n        kostl,\n        mahza,\n        msr_id,\n        _dataaging,\n        taxk5,\n        kvgr4,\n        amtbl,\n        trvog,\n        hb_resdate,\n        fmbdat,\n        fsh_vrsn_status,\n        upd_tmstmp,\n        auart,\n        hb_expdate,\n        scheme_grp,\n        smenr,\n        taxk6,\n        fsh_transaction,\n        kvgr5,\n        gskst,\n        vkgrp,\n        pay_method,\n        ktext,\n        ps_psp_pnr,\n        faksk,\n        bnddt,\n        cmwae,\n        kokrs,\n        cast(kunnr as TEXT) as kunnr,\n        betc,\n        fsh_rereg,\n        tas,\n        cancel_allow,\n        fkara,\n        taxk7,\n        gwldt,\n        psm_budat,\n        objnr,\n        autlf,\n        stwae,\n        abhov,\n        logsysb,\n        fsh_kvgr6,\n        bname,\n        taxk8,\n        xblnr,\n        mtlaur,\n        augru,\n        stafo,\n        swenr,\n        _xlso_trans_ctxt,\n        abruf_part,\n        cmngv,\n        knkli,\n        spart,\n        proli,\n        enqueue_grp,\n        vzeit,\n        kalcd,\n        bukrs_vf,\n        fsh_kvgr7,\n        vprgr,\n        crm_guid,\n        hityp_pr,\n        taxk9,\n        vgbel,\n        erzet,\n        ihrez,\n        submi,\n        vdatu,\n        _xlso_variant_id,\n        abdis,\n        fsh_kvgr8,\n        ernam,\n        hb_cont_reason,\n        cast(netwr as numeric(28,6)) as netwr,\n        vbkla,\n        vgtyp,\n        sbgrp,\n        stceg_l,\n        fsh_kvgr10,\n        knuma,\n        fsh_ss,\n        fsh_cq_check,\n        xegdr,\n        bstnk,\n        multi,\n        sppaym,\n        lifsk,\n        fsh_kvgr9,\n        aedat,\n        wtysc_clm_hdr,\n        dat_fzau,\n        awahr,\n        kurst,\n        gueen,\n        _xlso_so_vald_to,\n        cmnup,\n        abhod,\n        vkorg,\n        audat,\n        zuonr,\n        angdt,\n        vsbed,\n        _xlso_payment_op,\n        rep_freq,\n        handle,\n        _xlso_so_vald_fm,\n        bstzd,\n        taxk1,\n        mahdt,\n        bstdk,\n        vbeln_grp,\n        handoverloc,\n        qmnum,\n        kalsm_ch,\n        cont_dg,\n        cmfre,\n        vtweg,\n        telf1,\n        aufnr,\n        phase,\n        taxk2,\n        kvgr1,\n        grupp,\n        fsh_os_stg_change,\n        abhob,\n        landtx,\n        kalsm,\n        erdat,\n        bpn,\n        stage,\n        kkber,\n        taxk3,\n        abrvw,\n        vbtyp,\n        kvgr2,\n        knumv,\n        guebg,\n        fsh_vas_cg,\n        waerk,\n        vkbur,\n        ctlpc,\n        vsnmr_v,\n        rplnr,\n        vbklt,\n        mod_allow,\n        taxk4,\n        _xlso_catalog_id,\n        kvgr3,\n        fsh_candate,\n        agrzr,\n        mill_appl_id,\n        bsark,\n        tm_ctrl_key,\n        gsber\n    from fields\n)\n\nselect *\nfrom final", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null, "primary_key": [], "time_spine": null}, "model.sap.stg_sap__bkpf": {"database": "postgres", "schema": "public_sap_dev", "name": "stg_sap__bkpf", "resource_type": "model", "package_name": "sap", "path": "staging/stg_sap__bkpf.sql", "original_file_path": "models/staging/stg_sap__bkpf.sql", "unique_id": "model.sap.stg_sap__bkpf", "fqn": ["sap", "staging", "stg_sap__bkpf"], "alias": "stg_sap__bkpf", "checksum": {"name": "sha256", "checksum": "ff77e560b0a447e569bb151e26d512cd77ab7168aec318b4ba92ccabfcc306fd"}, "config": {"enabled": true, "alias": null, "schema": "sap_dev", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "view", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "freshness": null}, "tags": [], "description": "Accounting document header", "columns": {"awkey": {"name": "awkey", "description": "Reference key", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "awsys": {"name": "awsys", "description": "Logical system", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "belnr": {"name": "belnr", "description": "Accounting document number", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "blart": {"name": "blart", "description": "Document type", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "bldat": {"name": "bldat", "description": "Document date in document", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "bukrs": {"name": "bukrs", "description": "Company code", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "cpudt": {"name": "cpudt", "description": "Day on which accounting document was entered", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "fikrs": {"name": "fikrs", "description": "Financial management area", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "gjahr": {"name": "gjahr", "description": "Fiscal year", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "glvor": {"name": "glvor", "description": "Business transaction", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "hwae2": {"name": "hwae2", "description": "Currency key of second local currency", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "hwae3": {"name": "hwae3", "description": "Currency key of third local currency", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "hwaer": {"name": "hwaer", "description": "Local currency", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "kursf": {"name": "kursf", "description": "Exchange rate", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "ldgrp": {"name": "ldgrp", "description": "Ledger group", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "mandt": {"name": "mandt", "description": "Client", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "monat": {"name": "monat", "description": "Fiscal period", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "waers": {"name": "waers", "description": "Currency key", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "xblnr": {"name": "xblnr", "description": "Reference document number", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "xreorg": {"name": "xreorg", "description": "Doc. contains open item that was transferred during reorg.", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": "sap://models/staging/stg_sap.yml", "build_path": null, "unrendered_config": {"materialized": "view", "schema": "sap_{{ var('directed_schema','dev') }}", "enabled": true}, "created_at": 1756850330.6217287, "relation_name": "\"postgres\".\"public_sap_dev\".\"stg_sap__bkpf\"", "raw_code": "{{ config(enabled=var('sap_using_bkpf', True)) }}\n\n{% set source_columns = adapter.get_columns_in_relation(ref('stg_sap__bkpf_tmp')) %}\n\nwith base as (\n\n    select {{ remove_slashes_from_col_names(source_columns) }}\n    from {{ ref('stg_sap__bkpf_tmp') }}\n),\n\nfields as (\n\n    select\n        {{\n            fivetran_utils.fill_staging_columns(\n                source_columns=source_columns,\n                staging_columns=get_bkpf_columns()\n            )\n        }}\n    from base\n),\n\nfinal as (\n\n    select \n        cast(mandt as {{ dbt.type_string() }}) as mandt,\n        cast(bukrs as {{ dbt.type_string() }}) as bukrs,\n        cast(belnr as {{ dbt.type_string() }}) as belnr,\n        cast(gjahr as {{ dbt.type_string() }}) as gjahr,\n        blart,\n        bldat,\n        monat,\n        cpudt,\n        xblnr,\n        waers,\n        glvor,\n        awkey,\n        fikrs,\n        hwaer,\n        hwae2,\n        hwae3,\n        awsys,\n        ldgrp,\n        kursf,\n        xreorg\n    from fields\n)\n\nselect * \nfrom final", "doc_blocks": [], "language": "sql", "refs": [{"name": "stg_sap__bkpf_tmp", "package": null, "version": null}, {"name": "stg_sap__bkpf_tmp", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.sap.remove_slashes_from_col_names", "macro.sap.get_bkpf_columns", "macro.fivetran_utils.fill_staging_columns", "macro.dbt.type_string"], "nodes": ["model.sap.stg_sap__bkpf_tmp"]}, "compiled_path": "target/compiled/sap/models/staging/stg_sap__bkpf.sql", "compiled": true, "compiled_code": "\n\n\n\nwith base as (\n\n    select \n        \"belnr\" as belnr,\n        \"bukrs\" as bukrs,\n        \"gjahr\" as gjahr,\n        \"mandt\" as mandt,\n        \"blart\" as blart,\n        \"bldat\" as bldat,\n        \"budat\" as budat,\n        \"monat\" as monat,\n        \"cpudt\" as cpudt,\n        \"cputm\" as cputm,\n        \"aedat\" as aedat,\n        \"upddt\" as upddt,\n        \"wwert\" as wwert,\n        \"usnam\" as usnam,\n        \"tcode\" as tcode,\n        \"bvorg\" as bvorg,\n        \"xblnr\" as xblnr,\n        \"dbblg\" as dbblg,\n        \"stblg\" as stblg,\n        \"stjah\" as stjah,\n        \"bktxt\" as bktxt,\n        \"waers\" as waers,\n        \"kursf\" as kursf,\n        \"kzwrs\" as kzwrs,\n        \"kzkrs\" as kzkrs,\n        \"bstat\" as bstat,\n        \"xnetb\" as xnetb,\n        \"frath\" as frath,\n        \"xrueb\" as xrueb,\n        \"glvor\" as glvor,\n        \"grpid\" as grpid,\n        \"dokid\" as dokid,\n        \"arcid\" as arcid,\n        \"iblar\" as iblar,\n        \"awtyp\" as awtyp,\n        \"awkey\" as awkey,\n        \"fikrs\" as fikrs,\n        \"hwaer\" as hwaer,\n        \"hwae2\" as hwae2,\n        \"hwae3\" as hwae3,\n        \"kurs2\" as kurs2,\n        \"kurs3\" as kurs3,\n        \"basw2\" as basw2,\n        \"basw3\" as basw3,\n        \"umrd2\" as umrd2,\n        \"umrd3\" as umrd3,\n        \"xstov\" as xstov,\n        \"stodt\" as stodt,\n        \"xmwst\" as xmwst,\n        \"curt2\" as curt2,\n        \"curt3\" as curt3,\n        \"kuty2\" as kuty2,\n        \"kuty3\" as kuty3,\n        \"xsnet\" as xsnet,\n        \"ausbk\" as ausbk,\n        \"xusvr\" as xusvr,\n        \"duefl\" as duefl,\n        \"awsys\" as awsys,\n        \"txkrs\" as txkrs,\n        \"ctxkrs\" as ctxkrs,\n        \"lotkz\" as lotkz,\n        \"xwvof\" as xwvof,\n        \"stgrd\" as stgrd,\n        \"ppnam\" as ppnam,\n        \"brnch\" as brnch,\n        \"numpg\" as numpg,\n        \"adisc\" as adisc,\n        \"xref1_hd\" as xref1_hd,\n        \"xref2_hd\" as xref2_hd,\n        \"xreversal\" as xreversal,\n        \"reindat\" as reindat,\n        \"rldnr\" as rldnr,\n        \"ldgrp\" as ldgrp,\n        \"propmano\" as propmano,\n        \"xblnr_alt\" as xblnr_alt,\n        \"vatdate\" as vatdate,\n        \"doccat\" as doccat,\n        \"xsplit\" as xsplit,\n        \"cash_alloc\" as cash_alloc,\n        \"follow_on\" as follow_on,\n        \"xreorg\" as xreorg,\n        \"subset\" as subset,\n        \"kurst\" as kurst,\n        \"kursx\" as kursx,\n        \"kur2x\" as kur2x,\n        \"kur3x\" as kur3x,\n        \"xmca\" as xmca,\n        \"resubmission\" as resubmission,\n        \"_sapf15_status\" as _sapf15_status,\n        \"psoty\" as psoty,\n        \"psoak\" as psoak,\n        \"psoks\" as psoks,\n        \"psosg\" as psosg,\n        \"psofn\" as psofn,\n        \"intform\" as intform,\n        \"intdate\" as intdate,\n        \"psobt\" as psobt,\n        \"psozl\" as psozl,\n        \"psodt\" as psodt,\n        \"psotm\" as psotm,\n        \"fm_umart\" as fm_umart,\n        \"ccins\" as ccins,\n        \"ccnum\" as ccnum,\n        \"ssblk\" as ssblk,\n        \"batch\" as batch,\n        \"sname\" as sname,\n        \"sampled\" as sampled,\n        \"exclude_flag\" as exclude_flag,\n        \"blind\" as blind,\n        \"offset_status\" as offset_status,\n        \"offset_refer_dat\" as offset_refer_dat,\n        \"penrc\" as penrc,\n        \"knumv\" as knumv,\n        \"_fivetran_rowid\" as _fivetran_rowid,\n        \"_fivetran_deleted\" as _fivetran_deleted,\n        \"_fivetran_synced\" as _fivetran_synced\n    from \"postgres\".\"public_sap_dev\".\"stg_sap__bkpf_tmp\"\n),\n\nfields as (\n\n    select\n        \n    \n    \n    _fivetran_deleted\n    \n as \n    \n    _fivetran_deleted\n    \n, \n    \n    \n    _fivetran_rowid\n    \n as \n    \n    _fivetran_rowid\n    \n, \n    \n    \n    _fivetran_synced\n    \n as \n    \n    _fivetran_synced\n    \n, \n    \n    \n    _sapf15_status\n    \n as \n    \n    _sapf15_status\n    \n, \n    \n    \n    adisc\n    \n as \n    \n    adisc\n    \n, \n    \n    \n    aedat\n    \n as \n    \n    aedat\n    \n, \n    \n    \n    arcid\n    \n as \n    \n    arcid\n    \n, \n    \n    \n    ausbk\n    \n as \n    \n    ausbk\n    \n, \n    \n    \n    awkey\n    \n as \n    \n    awkey\n    \n, \n    \n    \n    awsys\n    \n as \n    \n    awsys\n    \n, \n    \n    \n    awtyp\n    \n as \n    \n    awtyp\n    \n, \n    \n    \n    basw2\n    \n as \n    \n    basw2\n    \n, \n    \n    \n    basw3\n    \n as \n    \n    basw3\n    \n, \n    \n    \n    batch\n    \n as \n    \n    batch\n    \n, \n    \n    \n    belnr\n    \n as \n    \n    belnr\n    \n, \n    \n    \n    bktxt\n    \n as \n    \n    bktxt\n    \n, \n    \n    \n    blart\n    \n as \n    \n    blart\n    \n, \n    \n    \n    bldat\n    \n as \n    \n    bldat\n    \n, \n    \n    \n    blind\n    \n as \n    \n    blind\n    \n, \n    \n    \n    brnch\n    \n as \n    \n    brnch\n    \n, \n    \n    \n    bstat\n    \n as \n    \n    bstat\n    \n, \n    \n    \n    budat\n    \n as \n    \n    budat\n    \n, \n    \n    \n    bukrs\n    \n as \n    \n    bukrs\n    \n, \n    \n    \n    bvorg\n    \n as \n    \n    bvorg\n    \n, \n    \n    \n    cash_alloc\n    \n as \n    \n    cash_alloc\n    \n, \n    \n    \n    ccins\n    \n as \n    \n    ccins\n    \n, \n    \n    \n    ccnum\n    \n as \n    \n    ccnum\n    \n, \n    \n    \n    cpudt\n    \n as \n    \n    cpudt\n    \n, \n    \n    \n    cputm\n    \n as \n    \n    cputm\n    \n, \n    \n    \n    ctxkrs\n    \n as \n    \n    ctxkrs\n    \n, \n    \n    \n    curt2\n    \n as \n    \n    curt2\n    \n, \n    \n    \n    curt3\n    \n as \n    \n    curt3\n    \n, \n    \n    \n    dbblg\n    \n as \n    \n    dbblg\n    \n, \n    \n    \n    doccat\n    \n as \n    \n    doccat\n    \n, \n    \n    \n    dokid\n    \n as \n    \n    dokid\n    \n, \n    \n    \n    duefl\n    \n as \n    \n    duefl\n    \n, \n    \n    \n    exclude_flag\n    \n as \n    \n    exclude_flag\n    \n, \n    \n    \n    fikrs\n    \n as \n    \n    fikrs\n    \n, \n    \n    \n    fm_umart\n    \n as \n    \n    fm_umart\n    \n, \n    \n    \n    follow_on\n    \n as \n    \n    follow_on\n    \n, \n    \n    \n    frath\n    \n as \n    \n    frath\n    \n, \n    \n    \n    gjahr\n    \n as \n    \n    gjahr\n    \n, \n    \n    \n    glvor\n    \n as \n    \n    glvor\n    \n, \n    \n    \n    grpid\n    \n as \n    \n    grpid\n    \n, \n    \n    \n    hwae2\n    \n as \n    \n    hwae2\n    \n, \n    \n    \n    hwae3\n    \n as \n    \n    hwae3\n    \n, \n    \n    \n    hwaer\n    \n as \n    \n    hwaer\n    \n, \n    \n    \n    iblar\n    \n as \n    \n    iblar\n    \n, \n    \n    \n    intdate\n    \n as \n    \n    intdate\n    \n, \n    \n    \n    intform\n    \n as \n    \n    intform\n    \n, \n    \n    \n    knumv\n    \n as \n    \n    knumv\n    \n, \n    \n    \n    kur2x\n    \n as \n    \n    kur2x\n    \n, \n    \n    \n    kur3x\n    \n as \n    \n    kur3x\n    \n, \n    \n    \n    kurs2\n    \n as \n    \n    kurs2\n    \n, \n    \n    \n    kurs3\n    \n as \n    \n    kurs3\n    \n, \n    \n    \n    kursf\n    \n as \n    \n    kursf\n    \n, \n    \n    \n    kurst\n    \n as \n    \n    kurst\n    \n, \n    \n    \n    kursx\n    \n as \n    \n    kursx\n    \n, \n    \n    \n    kuty2\n    \n as \n    \n    kuty2\n    \n, \n    \n    \n    kuty3\n    \n as \n    \n    kuty3\n    \n, \n    \n    \n    kzkrs\n    \n as \n    \n    kzkrs\n    \n, \n    \n    \n    kzwrs\n    \n as \n    \n    kzwrs\n    \n, \n    \n    \n    ldgrp\n    \n as \n    \n    ldgrp\n    \n, \n    \n    \n    lotkz\n    \n as \n    \n    lotkz\n    \n, \n    \n    \n    mandt\n    \n as \n    \n    mandt\n    \n, \n    \n    \n    monat\n    \n as \n    \n    monat\n    \n, \n    \n    \n    numpg\n    \n as \n    \n    numpg\n    \n, \n    \n    \n    offset_refer_dat\n    \n as \n    \n    offset_refer_dat\n    \n, \n    \n    \n    offset_status\n    \n as \n    \n    offset_status\n    \n, \n    \n    \n    penrc\n    \n as \n    \n    penrc\n    \n, \n    \n    \n    ppnam\n    \n as \n    \n    ppnam\n    \n, \n    \n    \n    propmano\n    \n as \n    \n    propmano\n    \n, \n    \n    \n    psoak\n    \n as \n    \n    psoak\n    \n, \n    \n    \n    psobt\n    \n as \n    \n    psobt\n    \n, \n    \n    \n    psodt\n    \n as \n    \n    psodt\n    \n, \n    \n    \n    psofn\n    \n as \n    \n    psofn\n    \n, \n    \n    \n    psoks\n    \n as \n    \n    psoks\n    \n, \n    \n    \n    psosg\n    \n as \n    \n    psosg\n    \n, \n    \n    \n    psotm\n    \n as \n    \n    psotm\n    \n, \n    \n    \n    psoty\n    \n as \n    \n    psoty\n    \n, \n    \n    \n    psozl\n    \n as \n    \n    psozl\n    \n, \n    \n    \n    reindat\n    \n as \n    \n    reindat\n    \n, \n    \n    \n    resubmission\n    \n as \n    \n    resubmission\n    \n, \n    \n    \n    rldnr\n    \n as \n    \n    rldnr\n    \n, \n    \n    \n    sampled\n    \n as \n    \n    sampled\n    \n, \n    \n    \n    sname\n    \n as \n    \n    sname\n    \n, \n    \n    \n    ssblk\n    \n as \n    \n    ssblk\n    \n, \n    \n    \n    stblg\n    \n as \n    \n    stblg\n    \n, \n    \n    \n    stgrd\n    \n as \n    \n    stgrd\n    \n, \n    \n    \n    stjah\n    \n as \n    \n    stjah\n    \n, \n    \n    \n    stodt\n    \n as \n    \n    stodt\n    \n, \n    \n    \n    subset\n    \n as \n    \n    subset\n    \n, \n    \n    \n    tcode\n    \n as \n    \n    tcode\n    \n, \n    \n    \n    txkrs\n    \n as \n    \n    txkrs\n    \n, \n    \n    \n    umrd2\n    \n as \n    \n    umrd2\n    \n, \n    \n    \n    umrd3\n    \n as \n    \n    umrd3\n    \n, \n    \n    \n    upddt\n    \n as \n    \n    upddt\n    \n, \n    \n    \n    usnam\n    \n as \n    \n    usnam\n    \n, \n    \n    \n    vatdate\n    \n as \n    \n    vatdate\n    \n, \n    \n    \n    waers\n    \n as \n    \n    waers\n    \n, \n    \n    \n    wwert\n    \n as \n    \n    wwert\n    \n, \n    \n    \n    xblnr\n    \n as \n    \n    xblnr\n    \n, \n    \n    \n    xblnr_alt\n    \n as \n    \n    xblnr_alt\n    \n, \n    \n    \n    xmca\n    \n as \n    \n    xmca\n    \n, \n    \n    \n    xmwst\n    \n as \n    \n    xmwst\n    \n, \n    \n    \n    xnetb\n    \n as \n    \n    xnetb\n    \n, \n    \n    \n    xref1_hd\n    \n as \n    \n    xref1_hd\n    \n, \n    \n    \n    xref2_hd\n    \n as \n    \n    xref2_hd\n    \n, \n    \n    \n    xreorg\n    \n as \n    \n    xreorg\n    \n, \n    \n    \n    xreversal\n    \n as \n    \n    xreversal\n    \n, \n    \n    \n    xrueb\n    \n as \n    \n    xrueb\n    \n, \n    \n    \n    xsnet\n    \n as \n    \n    xsnet\n    \n, \n    \n    \n    xsplit\n    \n as \n    \n    xsplit\n    \n, \n    \n    \n    xstov\n    \n as \n    \n    xstov\n    \n, \n    \n    \n    xusvr\n    \n as \n    \n    xusvr\n    \n, \n    \n    \n    xwvof\n    \n as \n    \n    xwvof\n    \n\n\n\n    from base\n),\n\nfinal as (\n\n    select \n        cast(mandt as TEXT) as mandt,\n        cast(bukrs as TEXT) as bukrs,\n        cast(belnr as TEXT) as belnr,\n        cast(gjahr as TEXT) as gjahr,\n        blart,\n        bldat,\n        monat,\n        cpudt,\n        xblnr,\n        waers,\n        glvor,\n        awkey,\n        fikrs,\n        hwaer,\n        hwae2,\n        hwae3,\n        awsys,\n        ldgrp,\n        kursf,\n        xreorg\n    from fields\n)\n\nselect * \nfrom final", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null, "primary_key": [], "time_spine": null}, "model.sap.stg_sap__dd07l": {"database": "postgres", "schema": "public_sap_dev", "name": "stg_sap__dd07l", "resource_type": "model", "package_name": "sap", "path": "staging/stg_sap__dd07l.sql", "original_file_path": "models/staging/stg_sap__dd07l.sql", "unique_id": "model.sap.stg_sap__dd07l", "fqn": ["sap", "staging", "stg_sap__dd07l"], "alias": "stg_sap__dd07l", "checksum": {"name": "sha256", "checksum": "3a3eb2b9e2413ee0e8754292536d7a1690ae7ccd54c38a6f5e2edc1e78b8415a"}, "config": {"enabled": true, "alias": null, "schema": "sap_dev", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "view", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "freshness": null}, "tags": [], "description": "Domain values", "columns": {"_fivetran_deleted": {"name": "_fivetran_deleted", "description": "Fivetran deletion marker", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "_fivetran_rowid": {"name": "_fivetran_rowid", "description": "Fivetran unique row ID", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "_fivetran_synced": {"name": "_fivetran_synced", "description": "Fivetran sync timestamp", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "domname": {"name": "domname", "description": "Domain name", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "domvalue_l": {"name": "domvalue_l", "description": "Domain value", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "as4vers": {"name": "as4vers", "description": "Active version", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "hvr_change_time": {"name": "hvr_change_time", "description": "HVR change timestamp", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "valpos": {"name": "valpos", "description": "Value position within the domain", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": "sap://models/staging/stg_sap.yml", "build_path": null, "unrendered_config": {"materialized": "view", "schema": "sap_{{ var('directed_schema','dev') }}", "enabled": true}, "created_at": 1756850330.6317232, "relation_name": "\"postgres\".\"public_sap_dev\".\"stg_sap__dd07l\"", "raw_code": "{{ config(enabled=var('sap_using_dd07l', True)) }}\n\n{% set source_columns = adapter.get_columns_in_relation(ref('stg_sap__dd07l_tmp')) %}\n\nwith base as (\n    select {{ remove_slashes_from_col_names(source_columns) }}\n    from {{ ref('stg_sap__dd07l_tmp') }}\n),\n\nfields as (\n    select\n        {{\n            fivetran_utils.fill_staging_columns(\n                source_columns=source_columns,\n                staging_columns=get_dd07l_columns()\n            )\n        }}\n    from base\n),\n\nfinal as (\n    select\n        as4local,\n        as4vers,\n        domname,\n        valpos,\n        domvalue_l,\n        hvr_change_time,\n        _fivetran_deleted,\n        _fivetran_rowid,\n        _fivetran_synced\n    from fields\n)\n\nselect *\nfrom final", "doc_blocks": [], "language": "sql", "refs": [{"name": "stg_sap__dd07l_tmp", "package": null, "version": null}, {"name": "stg_sap__dd07l_tmp", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.sap.remove_slashes_from_col_names", "macro.sap.get_dd07l_columns", "macro.fivetran_utils.fill_staging_columns"], "nodes": ["model.sap.stg_sap__dd07l_tmp"]}, "compiled_path": "target/compiled/sap/models/staging/stg_sap__dd07l.sql", "compiled": true, "compiled_code": "\n\n\n\nwith base as (\n    select \n        \"_fivetran_deleted\" as _fivetran_deleted,\n        \"_fivetran_rowid\" as _fivetran_rowid,\n        \"_fivetran_synced\" as _fivetran_synced,\n        \"domvalue_l\" as domvalue_l,\n        \"domname\" as domname,\n        \"as4vers\" as as4vers,\n        \"hvr_change_time\" as hvr_change_time,\n        \"valpos\" as valpos\n    from \"postgres\".\"public_sap_dev\".\"stg_sap__dd07l_tmp\"\n),\n\nfields as (\n    select\n        \n    \n    \n    _fivetran_deleted\n    \n as \n    \n    _fivetran_deleted\n    \n, \n    \n    \n    _fivetran_rowid\n    \n as \n    \n    _fivetran_rowid\n    \n, \n    \n    \n    _fivetran_synced\n    \n as \n    \n    _fivetran_synced\n    \n, \n    cast(null as TEXT) as \n    \n    as4local\n    \n , \n    \n    \n    as4vers\n    \n as \n    \n    as4vers\n    \n, \n    \n    \n    domvalue_l\n    \n as \n    \n    domvalue_l\n    \n, \n    \n    \n    domname\n    \n as \n    \n    domname\n    \n, \n    \n    \n    valpos\n    \n as \n    \n    valpos\n    \n, \n    \n    \n    hvr_change_time\n    \n as \n    \n    hvr_change_time\n    \n\n\n\n    from base\n),\n\nfinal as (\n    select\n        as4local,\n        as4vers,\n        domname,\n        valpos,\n        domvalue_l,\n        hvr_change_time,\n        _fivetran_deleted,\n        _fivetran_rowid,\n        _fivetran_synced\n    from fields\n)\n\nselect *\nfrom final", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null, "primary_key": [], "time_spine": null}, "model.sap.stg_sap__makt": {"database": "postgres", "schema": "public_sap_dev", "name": "stg_sap__makt", "resource_type": "model", "package_name": "sap", "path": "staging/stg_sap__makt.sql", "original_file_path": "models/staging/stg_sap__makt.sql", "unique_id": "model.sap.stg_sap__makt", "fqn": ["sap", "staging", "stg_sap__makt"], "alias": "stg_sap__makt", "checksum": {"name": "sha256", "checksum": "3b813b9ce8e6cbaf42bc3f446464ecda2a6a722f271ede8e0d1ac5dac24f5f53"}, "config": {"enabled": true, "alias": null, "schema": "sap_dev", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "view", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "freshness": null}, "tags": [], "description": "Material Descriptions", "columns": {"_fivetran_deleted": {"name": "_fivetran_deleted", "description": "Fivetran deletion marker", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "_fivetran_rowid": {"name": "_fivetran_rowid", "description": "Fivetran unique row ID", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "_fivetran_synced": {"name": "_fivetran_synced", "description": "Fivetran sync timestamp", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "maktx": {"name": "maktx", "description": "Material description", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "mandt": {"name": "mandt", "description": "Client", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "matnr": {"name": "matnr", "description": "Material number", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "spras": {"name": "spras", "description": "Language key", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": "sap://models/staging/stg_sap.yml", "build_path": null, "unrendered_config": {"materialized": "view", "schema": "sap_{{ var('directed_schema','dev') }}", "enabled": true}, "created_at": 1756850330.9494286, "relation_name": "\"postgres\".\"public_sap_dev\".\"stg_sap__makt\"", "raw_code": "{{ config(enabled=var('sap_using_makt', True)) }}\n\n{% set source_columns = adapter.get_columns_in_relation(ref('stg_sap__makt_tmp')) %}\n\nwith base as (\n    select {{ remove_slashes_from_col_names(source_columns) }}\n    from {{ ref('stg_sap__makt_tmp') }}\n),\n\nfields as (\n    select\n        {{\n            fivetran_utils.fill_staging_columns(\n                source_columns=source_columns,\n                staging_columns=get_makt_columns()\n            )\n        }}\n    from base\n),\n\nfinal as (\n    select\n        maktx,\n        cast(mandt as {{ dbt.type_string() }}) as mandt,\n        cast(matnr as {{ dbt.type_string() }}) as matnr,\n        spras,\n        _fivetran_rowid,\n        _fivetran_deleted,\n        _fivetran_synced\n    from fields\n)\n\nselect *\nfrom final", "doc_blocks": [], "language": "sql", "refs": [{"name": "stg_sap__makt_tmp", "package": null, "version": null}, {"name": "stg_sap__makt_tmp", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.sap.remove_slashes_from_col_names", "macro.sap.get_makt_columns", "macro.fivetran_utils.fill_staging_columns", "macro.dbt.type_string"], "nodes": ["model.sap.stg_sap__makt_tmp"]}, "compiled_path": "target/compiled/sap/models/staging/stg_sap__makt.sql", "compiled": true, "compiled_code": "\n\n\n\nwith base as (\n    select \n        \"_fivetran_deleted\" as _fivetran_deleted,\n        \"_fivetran_rowid\" as _fivetran_rowid,\n        \"_fivetran_synced\" as _fivetran_synced,\n        \"maktx\" as maktx,\n        \"mandt\" as mandt,\n        \"matnr\" as matnr,\n        \"spras\" as spras\n    from \"postgres\".\"public_sap_dev\".\"stg_sap__makt_tmp\"\n),\n\nfields as (\n    select\n        \n    \n    \n    _fivetran_deleted\n    \n as \n    \n    _fivetran_deleted\n    \n, \n    \n    \n    _fivetran_rowid\n    \n as \n    \n    _fivetran_rowid\n    \n, \n    \n    \n    _fivetran_synced\n    \n as \n    \n    _fivetran_synced\n    \n, \n    \n    \n    maktx\n    \n as \n    \n    maktx\n    \n, \n    \n    \n    mandt\n    \n as \n    \n    mandt\n    \n, \n    \n    \n    matnr\n    \n as \n    \n    matnr\n    \n, \n    \n    \n    spras\n    \n as \n    \n    spras\n    \n\n\n\n    from base\n),\n\nfinal as (\n    select\n        maktx,\n        cast(mandt as TEXT) as mandt,\n        cast(matnr as TEXT) as matnr,\n        spras,\n        _fivetran_rowid,\n        _fivetran_deleted,\n        _fivetran_synced\n    from fields\n)\n\nselect *\nfrom final", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null, "primary_key": [], "time_spine": null}, "model.sap.stg_sap__pa0001": {"database": "postgres", "schema": "public_sap_dev", "name": "stg_sap__pa0001", "resource_type": "model", "package_name": "sap", "path": "staging/stg_sap__pa0001.sql", "original_file_path": "models/staging/stg_sap__pa0001.sql", "unique_id": "model.sap.stg_sap__pa0001", "fqn": ["sap", "staging", "stg_sap__pa0001"], "alias": "stg_sap__pa0001", "checksum": {"name": "sha256", "checksum": "7522cc7027e72a57e5c141c7ee514abf3d7da3aba624b81142a105d4d7dd3155"}, "config": {"enabled": true, "alias": null, "schema": "sap_dev", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "view", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "freshness": null}, "tags": [], "description": "HR master record--infotype 0001 (org. assignment)", "columns": {"abkrs": {"name": "abkrs", "description": "Payroll area", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "aedtm": {"name": "aedtm", "description": "Changed on", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "ansvh": {"name": "ansvh", "description": "Work contract", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "begda": {"name": "begda", "description": "Start date", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "btrtl": {"name": "btrtl", "description": "Personnel subarea", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "budget_pd": {"name": "budget_pd", "description": "FM--Budget period", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "bukrs": {"name": "bukrs", "description": "Company code", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "ename": {"name": "ename", "description": "Formatted name of employee or applicant", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "endda": {"name": "endda", "description": "End date", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "fistl": {"name": "fistl", "description": "Funds center", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "fkber": {"name": "fkber", "description": "Functional area", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "flag1": {"name": "flag1", "description": "Reserved field/unused field", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "flag2": {"name": "flag2", "description": "Reserved field/unused field", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "flag3": {"name": "flag3", "description": "Reserved field/unused field", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "flag4": {"name": "flag4", "description": "Reserved field/unused field", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "geber": {"name": "geber", "description": "Fund", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "grant_nbr": {"name": "grant_nbr", "description": "Grant", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "grpvl": {"name": "grpvl", "description": "Grouping value for personnel assignments", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "gsber": {"name": "gsber", "description": "Business area", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "histo": {"name": "histo", "description": "Historical record flag", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "itbld": {"name": "itbld", "description": "Infotype screen control", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "itxex": {"name": "itxex", "description": "Text exists for infotype", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "juper": {"name": "juper", "description": "Legal person", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "kokrs": {"name": "kokrs", "description": "Controlling area", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "kostl": {"name": "kostl", "description": "Cost center", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "mandt": {"name": "mandt", "description": "Client", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "mstbr": {"name": "mstbr", "description": "Supervisor area", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "objps": {"name": "objps", "description": "Object identification", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "ordex": {"name": "ordex", "description": "Confirmation fields exist", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "orgeh": {"name": "orgeh", "description": "Organizational unit", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "otype": {"name": "otype", "description": "Object type", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "pernr": {"name": "pernr", "description": "Personnel number", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "persg": {"name": "persg", "description": "Employee group", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "persk": {"name": "persk", "description": "Employee subgroup", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "plans": {"name": "plans", "description": "Position", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "preas": {"name": "preas", "description": "Reason for changing master data", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "refex": {"name": "refex", "description": "Reference fields exist (primary/secondary costs)", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "rese1": {"name": "rese1", "description": "Reserved field/unused field of length 2", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "rese2": {"name": "rese2", "description": "Reserved field/unused field of length 2", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "sacha": {"name": "sacha", "description": "Payroll administrator", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "sachp": {"name": "sachp", "description": "Administrator for HR master data", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "sachz": {"name": "sachz", "description": "Administrator for time recording", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "sbmod": {"name": "sbmod", "description": "Administrator group", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "seqnr": {"name": "seqnr", "description": "Number of infotype record with same key", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "sgmnt": {"name": "sgmnt", "description": "Segment for segmental reporting", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "sname": {"name": "sname", "description": "Employee's name (Sortable by LAST NAME FIRST NAME)", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "sprps": {"name": "sprps", "description": "Lock indicator for HR master data record", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "stell": {"name": "stell", "description": "Job", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "subty": {"name": "subty", "description": "Subtype", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "uname": {"name": "uname", "description": "Name of person who changed object", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "vdsk1": {"name": "vdsk1", "description": "Organizational key", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "werks": {"name": "werks", "description": "Personnel area", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": "sap://models/staging/stg_sap.yml", "build_path": null, "unrendered_config": {"materialized": "view", "schema": "sap_{{ var('directed_schema','dev') }}", "enabled": true}, "created_at": 1756850331.0113487, "relation_name": "\"postgres\".\"public_sap_dev\".\"stg_sap__pa0001\"", "raw_code": "{{ config(enabled=var('sap_using_pa0001', True)) }}\n\n{% set source_columns = adapter.get_columns_in_relation(ref('stg_sap__pa0001_tmp')) %}\n\nwith base as (\n\n    select {{ remove_slashes_from_col_names(source_columns) }}\n    from {{ ref('stg_sap__pa0001_tmp') }}\n),\n\nfields as (\n\n    select\n        {{\n            fivetran_utils.fill_staging_columns(\n                source_columns=source_columns,\n                staging_columns=get_pa0001_columns()\n            )\n        }}\n    from base\n),\n\nfinal as (\n    \n    select\n        cast(mandt as {{ dbt.type_string() }}) as mandt,\n        pernr,\n        subty,\n        objps,\n        sprps,\n        endda,\n        begda,\n        seqnr,\n        abkrs,\n        aedtm,\n        ansvh,\n        btrtl,\n        budget_pd,\n        cast(bukrs as {{ dbt.type_string() }}) as bukrs,\n        ename,\n        fistl,\n        fkber,\n        flag1,\n        flag2,\n        flag3,\n        flag4,\n        geber,\n        grant_nbr,\n        grpvl,\n        gsber,\n        histo,\n        itbld,\n        itxex,\n        juper,\n        kokrs,\n        kostl,\n        mstbr,\n        ordex,\n        orgeh,\n        otype,\n        persg,\n        persk,\n        plans,\n        preas,\n        refex,\n        rese1,\n        rese2,\n        sacha,\n        sachp,\n        sachz,\n        sbmod,\n        sgmnt,\n        sname,\n        stell,\n        uname,\n        vdsk1,\n        werks\n    from fields\n)\n\nselect *\nfrom final", "doc_blocks": [], "language": "sql", "refs": [{"name": "stg_sap__pa0001_tmp", "package": null, "version": null}, {"name": "stg_sap__pa0001_tmp", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.sap.remove_slashes_from_col_names", "macro.sap.get_pa0001_columns", "macro.fivetran_utils.fill_staging_columns", "macro.dbt.type_string"], "nodes": ["model.sap.stg_sap__pa0001_tmp"]}, "compiled_path": "target/compiled/sap/models/staging/stg_sap__pa0001.sql", "compiled": true, "compiled_code": "\n\n\n\nwith base as (\n\n    select \n        \"begda\" as begda,\n        \"endda\" as endda,\n        \"mandt\" as mandt,\n        \"objps\" as objps,\n        \"pernr\" as pernr,\n        \"seqnr\" as seqnr,\n        \"sprps\" as sprps,\n        \"subty\" as subty,\n        \"aedtm\" as aedtm,\n        \"uname\" as uname,\n        \"histo\" as histo,\n        \"itxex\" as itxex,\n        \"refex\" as refex,\n        \"ordex\" as ordex,\n        \"itbld\" as itbld,\n        \"preas\" as preas,\n        \"flag1\" as flag1,\n        \"flag2\" as flag2,\n        \"flag3\" as flag3,\n        \"flag4\" as flag4,\n        \"rese1\" as rese1,\n        \"rese2\" as rese2,\n        \"grpvl\" as grpvl,\n        \"bukrs\" as bukrs,\n        \"werks\" as werks,\n        \"persg\" as persg,\n        \"persk\" as persk,\n        \"vdsk1\" as vdsk1,\n        \"gsber\" as gsber,\n        \"btrtl\" as btrtl,\n        \"juper\" as juper,\n        \"abkrs\" as abkrs,\n        \"ansvh\" as ansvh,\n        \"kostl\" as kostl,\n        \"orgeh\" as orgeh,\n        \"plans\" as plans,\n        \"stell\" as stell,\n        \"mstbr\" as mstbr,\n        \"sacha\" as sacha,\n        \"sachp\" as sachp,\n        \"sachz\" as sachz,\n        \"sname\" as sname,\n        \"ename\" as ename,\n        \"otype\" as otype,\n        \"sbmod\" as sbmod,\n        \"kokrs\" as kokrs,\n        \"fistl\" as fistl,\n        \"geber\" as geber,\n        \"fkber\" as fkber,\n        \"grant_nbr\" as grant_nbr,\n        \"sgmnt\" as sgmnt,\n        \"budget_pd\" as budget_pd,\n        \"_fivetran_rowid\" as _fivetran_rowid,\n        \"_fivetran_deleted\" as _fivetran_deleted,\n        \"_fivetran_synced\" as _fivetran_synced\n    from \"postgres\".\"public_sap_dev\".\"stg_sap__pa0001_tmp\"\n),\n\nfields as (\n\n    select\n        \n    \n    \n    _fivetran_deleted\n    \n as \n    \n    _fivetran_deleted\n    \n, \n    \n    \n    _fivetran_rowid\n    \n as \n    \n    _fivetran_rowid\n    \n, \n    \n    \n    _fivetran_synced\n    \n as \n    \n    _fivetran_synced\n    \n, \n    \n    \n    abkrs\n    \n as \n    \n    abkrs\n    \n, \n    \n    \n    aedtm\n    \n as \n    \n    aedtm\n    \n, \n    \n    \n    ansvh\n    \n as \n    \n    ansvh\n    \n, \n    \n    \n    begda\n    \n as \n    \n    begda\n    \n, \n    \n    \n    btrtl\n    \n as \n    \n    btrtl\n    \n, \n    \n    \n    budget_pd\n    \n as \n    \n    budget_pd\n    \n, \n    \n    \n    bukrs\n    \n as \n    \n    bukrs\n    \n, \n    \n    \n    ename\n    \n as \n    \n    ename\n    \n, \n    \n    \n    endda\n    \n as \n    \n    endda\n    \n, \n    \n    \n    fistl\n    \n as \n    \n    fistl\n    \n, \n    \n    \n    fkber\n    \n as \n    \n    fkber\n    \n, \n    \n    \n    flag1\n    \n as \n    \n    flag1\n    \n, \n    \n    \n    flag2\n    \n as \n    \n    flag2\n    \n, \n    \n    \n    flag3\n    \n as \n    \n    flag3\n    \n, \n    \n    \n    flag4\n    \n as \n    \n    flag4\n    \n, \n    \n    \n    geber\n    \n as \n    \n    geber\n    \n, \n    \n    \n    grant_nbr\n    \n as \n    \n    grant_nbr\n    \n, \n    \n    \n    grpvl\n    \n as \n    \n    grpvl\n    \n, \n    \n    \n    gsber\n    \n as \n    \n    gsber\n    \n, \n    \n    \n    histo\n    \n as \n    \n    histo\n    \n, \n    \n    \n    itbld\n    \n as \n    \n    itbld\n    \n, \n    \n    \n    itxex\n    \n as \n    \n    itxex\n    \n, \n    \n    \n    juper\n    \n as \n    \n    juper\n    \n, \n    \n    \n    kokrs\n    \n as \n    \n    kokrs\n    \n, \n    \n    \n    kostl\n    \n as \n    \n    kostl\n    \n, \n    \n    \n    mandt\n    \n as \n    \n    mandt\n    \n, \n    \n    \n    mstbr\n    \n as \n    \n    mstbr\n    \n, \n    \n    \n    objps\n    \n as \n    \n    objps\n    \n, \n    \n    \n    ordex\n    \n as \n    \n    ordex\n    \n, \n    \n    \n    orgeh\n    \n as \n    \n    orgeh\n    \n, \n    \n    \n    otype\n    \n as \n    \n    otype\n    \n, \n    \n    \n    pernr\n    \n as \n    \n    pernr\n    \n, \n    \n    \n    persg\n    \n as \n    \n    persg\n    \n, \n    \n    \n    persk\n    \n as \n    \n    persk\n    \n, \n    \n    \n    plans\n    \n as \n    \n    plans\n    \n, \n    \n    \n    preas\n    \n as \n    \n    preas\n    \n, \n    \n    \n    refex\n    \n as \n    \n    refex\n    \n, \n    \n    \n    rese1\n    \n as \n    \n    rese1\n    \n, \n    \n    \n    rese2\n    \n as \n    \n    rese2\n    \n, \n    \n    \n    sacha\n    \n as \n    \n    sacha\n    \n, \n    \n    \n    sachp\n    \n as \n    \n    sachp\n    \n, \n    \n    \n    sachz\n    \n as \n    \n    sachz\n    \n, \n    \n    \n    sbmod\n    \n as \n    \n    sbmod\n    \n, \n    \n    \n    seqnr\n    \n as \n    \n    seqnr\n    \n, \n    \n    \n    sgmnt\n    \n as \n    \n    sgmnt\n    \n, \n    \n    \n    sname\n    \n as \n    \n    sname\n    \n, \n    \n    \n    sprps\n    \n as \n    \n    sprps\n    \n, \n    \n    \n    stell\n    \n as \n    \n    stell\n    \n, \n    \n    \n    subty\n    \n as \n    \n    subty\n    \n, \n    \n    \n    uname\n    \n as \n    \n    uname\n    \n, \n    \n    \n    vdsk1\n    \n as \n    \n    vdsk1\n    \n, \n    \n    \n    werks\n    \n as \n    \n    werks\n    \n\n\n\n    from base\n),\n\nfinal as (\n    \n    select\n        cast(mandt as TEXT) as mandt,\n        pernr,\n        subty,\n        objps,\n        sprps,\n        endda,\n        begda,\n        seqnr,\n        abkrs,\n        aedtm,\n        ansvh,\n        btrtl,\n        budget_pd,\n        cast(bukrs as TEXT) as bukrs,\n        ename,\n        fistl,\n        fkber,\n        flag1,\n        flag2,\n        flag3,\n        flag4,\n        geber,\n        grant_nbr,\n        grpvl,\n        gsber,\n        histo,\n        itbld,\n        itxex,\n        juper,\n        kokrs,\n        kostl,\n        mstbr,\n        ordex,\n        orgeh,\n        otype,\n        persg,\n        persk,\n        plans,\n        preas,\n        refex,\n        rese1,\n        rese2,\n        sacha,\n        sachp,\n        sachz,\n        sbmod,\n        sgmnt,\n        sname,\n        stell,\n        uname,\n        vdsk1,\n        werks\n    from fields\n)\n\nselect *\nfrom final", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null, "primary_key": [], "time_spine": null}, "model.sap.stg_sap__t161": {"database": "postgres", "schema": "public_sap_dev", "name": "stg_sap__t161", "resource_type": "model", "package_name": "sap", "path": "staging/stg_sap__t161.sql", "original_file_path": "models/staging/stg_sap__t161.sql", "unique_id": "model.sap.stg_sap__t161", "fqn": ["sap", "staging", "stg_sap__t161"], "alias": "stg_sap__t161", "checksum": {"name": "sha256", "checksum": "06d993477dda5c42ff323dbe6f165b09b57f361b54b7ee30245eb9aeeff35c7d"}, "config": {"enabled": true, "alias": null, "schema": "sap_dev", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "view", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "freshness": null}, "tags": [], "description": "Purchasing document types", "columns": {"_fivetran_rowid": {"name": "_fivetran_rowid", "description": "Fivetran unique row ID", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "_fivetran_deleted": {"name": "_fivetran_deleted", "description": "Fivetran deletion marker", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "_fivetran_synced": {"name": "_fivetran_synced", "description": "Fivetran sync timestamp", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "bsart": {"name": "bsart", "description": "Document type", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "bstyp": {"name": "bstyp", "description": "Document category", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "_sapmp_atnam": {"name": "_sapmp_atnam", "description": "SAP MP attribute name", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "_sapmp_ceact": {"name": "_sapmp_ceact", "description": "SAP MP change evaluation active", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "_sapmp_gauf": {"name": "_sapmp_gauf", "description": "SAP MP default value indicator", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "_sapmp_pausw": {"name": "_sapmp_pausw", "description": "SAP MP pause switch", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "_sapmp_pdact": {"name": "_sapmp_pdact", "description": "SAP MP document active", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "_sapmp_pprot": {"name": "_sapmp_pprot", "description": "SAP MP processing type", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "_sapmp_puser": {"name": "_sapmp_puser", "description": "SAP MP user field", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "abgebot": {"name": "abgebot", "description": "Quotation indicator", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "abvor": {"name": "abvor", "description": "Quotation required before order", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "ar_object": {"name": "ar_object", "description": "Archiving object", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "brefn": {"name": "brefn", "description": "Reference profile for external system", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "bsakz": {"name": "bsakz", "description": "Collective number indicator", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "cp_aktive": {"name": "cp_aktive", "description": "Central contract active", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "cptype": {"name": "cptype", "description": "Central contract type", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "fls_rsto": {"name": "fls_rsto", "description": "Release strategy origin", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "fsh_dpr_detpro": {"name": "fsh_dpr_detpro", "description": "Detail profile for demand prioritization", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "fsh_excl_return": {"name": "fsh_excl_return", "description": "Exclude returns indicator", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "fsh_po_idoc": {"name": "fsh_po_idoc", "description": "Fashion PO outbound IDoc active", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "fsh_var_kalsm": {"name": "fsh_var_kalsm", "description": "Pricing procedure for variants", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "fsh_vas_act": {"name": "fsh_vas_act", "description": "Value-added services active", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "fsh_vas_del": {"name": "fsh_vas_del", "description": "VAS delivery mode", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "fsh_vas_detdt": {"name": "fsh_vas_detdt", "description": "VAS determination date", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "fsh_vas_kalsm": {"name": "fsh_vas_kalsm", "description": "VAS pricing procedure", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "gsfrg": {"name": "gsfrg", "description": "Release group", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "hityp": {"name": "hityp", "description": "History type", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "hvr_change_time": {"name": "hvr_change_time", "description": "HVR change timestamp", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "hvr_is_deleted": {"name": "hvr_is_deleted", "description": "HVR deletion flag", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "koako": {"name": "koako", "description": "Account assignment mandatory", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "koett": {"name": "koett", "description": "Item category mandatory", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "kornr": {"name": "kornr", "description": "Reference document number", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "kzale": {"name": "kzale", "description": "Collective agreement allowed", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "lphis": {"name": "lphis", "description": "Change history required", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "mandt": {"name": "mandt", "description": "Client", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "mill_omkz": {"name": "mill_omkz", "description": "Industry solution flag (Mill)", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "msr_active": {"name": "msr_active", "description": "MSR active flag", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "numka": {"name": "numka", "description": "Number range for internal assignment", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "numkc": {"name": "numkc", "description": "Number range for contract", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "numke": {"name": "numke", "description": "Number range for external assignment", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "numki": {"name": "numki", "description": "Number range for inquiries", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "oicsegi": {"name": "oicsegi", "description": "OIL segment indicator", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "oirfqreq": {"name": "oirfqreq", "description": "RFQ required indicator", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "pargr": {"name": "pargr", "description": "Partner role group", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "pincr": {"name": "pincr", "description": "Price increase indicator", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "rdp_profile": {"name": "rdp_profile", "description": "RDP profile", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "refba": {"name": "refba", "description": "Reference purchase doc type", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "shenq": {"name": "shenq", "description": "Incompletion check indicator", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "stafo": {"name": "stafo", "description": "Follow-on doc status", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "stako": {"name": "stako", "description": "Header status", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "tolsl": {"name": "tolsl", "description": "Tolerance key for limit", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "umlif": {"name": "umlif", "description": "Goods recipient required", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "upinc": {"name": "upinc", "description": "Update indicator", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "variante": {"name": "variante", "description": "Variant control", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "wrf_enable_dateline": {"name": "wrf_enable_dateline", "description": "Enable dateline function", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "wvvkz": {"name": "wvvkz", "description": "Shipping instruction", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "xlokz": {"name": "xlokz", "description": "Delivery block indicator", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": "sap://models/staging/stg_sap.yml", "build_path": null, "unrendered_config": {"materialized": "view", "schema": "sap_{{ var('directed_schema','dev') }}", "enabled": true}, "created_at": 1756850331.29335, "relation_name": "\"postgres\".\"public_sap_dev\".\"stg_sap__t161\"", "raw_code": "{{ config(enabled=var('sap_using_t161', True)) }}\n\n{% set source_columns = adapter.get_columns_in_relation(ref('stg_sap__t161_tmp')) %}\n\nwith base as (\n\n    select {{ remove_slashes_from_col_names(source_columns) }}\n    from {{ ref('stg_sap__t161_tmp') }}\n),\n\nfields as (\n\n    select\n        {{\n            fivetran_utils.fill_staging_columns(\n                source_columns=source_columns,\n                staging_columns=get_t161_columns()\n            )\n        }}\n    from base\n),\n\nfinal as (\n    select\n        abgebot,\n        abvor,\n        ar_object,\n        brefn,\n        bsakz,\n        bsart,\n        bstyp,\n        cp_aktive,\n        cptype,\n        fls_rsto,\n        fsh_dpr_detpro,\n        fsh_excl_return,\n        fsh_po_idoc,\n        fsh_var_kalsm,\n        fsh_vas_act,\n        fsh_vas_del,\n        fsh_vas_detdt,\n        fsh_vas_kalsm,\n        gsfrg,\n        hityp,\n        hvr_change_time,\n        hvr_is_deleted,\n        koako,\n        koett,\n        kornr,\n        kzale,\n        lphis,\n        cast(mandt as {{ dbt.type_string() }}) as mandt,\n        mill_omkz,\n        msr_active,\n        numka,\n        numkc,\n        numke,\n        numki,\n        oicsegi,\n        oirfqreq,\n        pargr,\n        pincr,\n        refba,\n        rdp_profile,\n        shenq,\n        stafo,\n        stako,\n        tolsl,\n        umlif,\n        upinc,\n        variante,\n        wrf_enable_dateline,\n        wvvkz,\n        xlokz,\n        _sapmp_atnam,\n        _sapmp_ceact,\n        _sapmp_gauf,\n        _sapmp_pdact,\n        _sapmp_pprot,\n        _sapmp_puser,\n        _sapmp_pausw,\n        _fivetran_deleted,\n        _fivetran_synced,\n        _fivetran_rowid\n    from fields\n)\n\nselect *\nfrom final", "doc_blocks": [], "language": "sql", "refs": [{"name": "stg_sap__t161_tmp", "package": null, "version": null}, {"name": "stg_sap__t161_tmp", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.sap.remove_slashes_from_col_names", "macro.sap.get_t161_columns", "macro.fivetran_utils.fill_staging_columns", "macro.dbt.type_string"], "nodes": ["model.sap.stg_sap__t161_tmp"]}, "compiled_path": "target/compiled/sap/models/staging/stg_sap__t161.sql", "compiled": true, "compiled_code": "\n\n\n\nwith base as (\n\n    select \n        \"_sapmp_atnam\" as _sapmp_atnam,\n        \"_sapmp_ceact\" as _sapmp_ceact,\n        \"_sapmp_gauf\" as _sapmp_gauf,\n        \"_sapmp_pausw\" as _sapmp_pausw,\n        \"_sapmp_pdact\" as _sapmp_pdact,\n        \"_sapmp_pprot\" as _sapmp_pprot,\n        \"_sapmp_puser\" as _sapmp_puser,\n        \"abgebot\" as abgebot,\n        \"abvor\" as abvor,\n        \"ar_object\" as ar_object,\n        \"brefn\" as brefn,\n        \"bsakz\" as bsakz,\n        \"bsart\" as bsart,\n        \"bstyp\" as bstyp,\n        \"cptype\" as cptype,\n        \"cp_aktive\" as cp_aktive,\n        \"fls_rsto\" as fls_rsto,\n        \"fsh_dpr_detpro\" as fsh_dpr_detpro,\n        \"fsh_excl_return\" as fsh_excl_return,\n        \"fsh_po_idoc\" as fsh_po_idoc,\n        \"fsh_var_kalsm\" as fsh_var_kalsm,\n        \"fsh_vas_act\" as fsh_vas_act,\n        \"fsh_vas_del\" as fsh_vas_del,\n        \"fsh_vas_detdt\" as fsh_vas_detdt,\n        \"fsh_vas_kalsm\" as fsh_vas_kalsm,\n        \"gsfrg\" as gsfrg,\n        \"hityp\" as hityp,\n        \"hvr_change_time\" as hvr_change_time,\n        \"hvr_is_deleted\" as hvr_is_deleted,\n        \"hvr_rowid\" as hvr_rowid,\n        \"koako\" as koako,\n        \"koett\" as koett,\n        \"kornr\" as kornr,\n        \"kzale\" as kzale,\n        \"lphis\" as lphis,\n        \"mandt\" as mandt,\n        \"mill_omkz\" as mill_omkz,\n        \"msr_active\" as msr_active,\n        \"numka\" as numka,\n        \"numkc\" as numkc,\n        \"numke\" as numke,\n        \"numki\" as numki,\n        \"oicsegi\" as oicsegi,\n        \"oirfqreq\" as oirfqreq,\n        \"pargr\" as pargr,\n        \"pincr\" as pincr,\n        \"rdp_profile\" as rdp_profile,\n        \"refba\" as refba,\n        \"shenq\" as shenq,\n        \"stafo\" as stafo,\n        \"stako\" as stako,\n        \"tolsl\" as tolsl,\n        \"umlif\" as umlif,\n        \"upinc\" as upinc,\n        \"variante\" as variante,\n        \"wrf_enable_dateline\" as wrf_enable_dateline,\n        \"wvvkz\" as wvvkz,\n        \"xlokz\" as xlokz\n    from \"postgres\".\"public_sap_dev\".\"stg_sap__t161_tmp\"\n),\n\nfields as (\n\n    select\n        \n    cast(null as boolean) as \n    \n    _fivetran_deleted\n    \n , \n    cast(null as numeric(28,6)) as \n    \n    _fivetran_rowid\n    \n , \n    cast(null as timestamp) as \n    \n    _fivetran_synced\n    \n , \n    \n    \n    abgebot\n    \n as \n    \n    abgebot\n    \n, \n    \n    \n    abvor\n    \n as \n    \n    abvor\n    \n, \n    \n    \n    ar_object\n    \n as \n    \n    ar_object\n    \n, \n    \n    \n    brefn\n    \n as \n    \n    brefn\n    \n, \n    \n    \n    bsakz\n    \n as \n    \n    bsakz\n    \n, \n    \n    \n    bsart\n    \n as \n    \n    bsart\n    \n, \n    \n    \n    bstyp\n    \n as \n    \n    bstyp\n    \n, \n    \n    \n    cp_aktive\n    \n as \n    \n    cp_aktive\n    \n, \n    \n    \n    cptype\n    \n as \n    \n    cptype\n    \n, \n    \n    \n    fls_rsto\n    \n as \n    \n    fls_rsto\n    \n, \n    \n    \n    fsh_dpr_detpro\n    \n as \n    \n    fsh_dpr_detpro\n    \n, \n    \n    \n    fsh_excl_return\n    \n as \n    \n    fsh_excl_return\n    \n, \n    \n    \n    fsh_po_idoc\n    \n as \n    \n    fsh_po_idoc\n    \n, \n    \n    \n    fsh_var_kalsm\n    \n as \n    \n    fsh_var_kalsm\n    \n, \n    \n    \n    fsh_vas_act\n    \n as \n    \n    fsh_vas_act\n    \n, \n    \n    \n    fsh_vas_del\n    \n as \n    \n    fsh_vas_del\n    \n, \n    \n    \n    fsh_vas_detdt\n    \n as \n    \n    fsh_vas_detdt\n    \n, \n    \n    \n    fsh_vas_kalsm\n    \n as \n    \n    fsh_vas_kalsm\n    \n, \n    \n    \n    gsfrg\n    \n as \n    \n    gsfrg\n    \n, \n    \n    \n    hityp\n    \n as \n    \n    hityp\n    \n, \n    \n    \n    hvr_change_time\n    \n as \n    \n    hvr_change_time\n    \n, \n    \n    \n    hvr_is_deleted\n    \n as \n    \n    hvr_is_deleted\n    \n, \n    \n    \n    koako\n    \n as \n    \n    koako\n    \n, \n    \n    \n    koett\n    \n as \n    \n    koett\n    \n, \n    \n    \n    kornr\n    \n as \n    \n    kornr\n    \n, \n    \n    \n    kzale\n    \n as \n    \n    kzale\n    \n, \n    \n    \n    lphis\n    \n as \n    \n    lphis\n    \n, \n    \n    \n    mandt\n    \n as \n    \n    mandt\n    \n, \n    \n    \n    mill_omkz\n    \n as \n    \n    mill_omkz\n    \n, \n    \n    \n    msr_active\n    \n as \n    \n    msr_active\n    \n, \n    \n    \n    numka\n    \n as \n    \n    numka\n    \n, \n    \n    \n    numkc\n    \n as \n    \n    numkc\n    \n, \n    \n    \n    numke\n    \n as \n    \n    numke\n    \n, \n    \n    \n    numki\n    \n as \n    \n    numki\n    \n, \n    \n    \n    oicsegi\n    \n as \n    \n    oicsegi\n    \n, \n    \n    \n    oirfqreq\n    \n as \n    \n    oirfqreq\n    \n, \n    \n    \n    pargr\n    \n as \n    \n    pargr\n    \n, \n    \n    \n    pincr\n    \n as \n    \n    pincr\n    \n, \n    \n    \n    refba\n    \n as \n    \n    refba\n    \n, \n    \n    \n    rdp_profile\n    \n as \n    \n    rdp_profile\n    \n, \n    \n    \n    shenq\n    \n as \n    \n    shenq\n    \n, \n    \n    \n    stafo\n    \n as \n    \n    stafo\n    \n, \n    \n    \n    stako\n    \n as \n    \n    stako\n    \n, \n    \n    \n    tolsl\n    \n as \n    \n    tolsl\n    \n, \n    \n    \n    umlif\n    \n as \n    \n    umlif\n    \n, \n    \n    \n    upinc\n    \n as \n    \n    upinc\n    \n, \n    \n    \n    variante\n    \n as \n    \n    variante\n    \n, \n    \n    \n    wrf_enable_dateline\n    \n as \n    \n    wrf_enable_dateline\n    \n, \n    \n    \n    wvvkz\n    \n as \n    \n    wvvkz\n    \n, \n    \n    \n    xlokz\n    \n as \n    \n    xlokz\n    \n, \n    \n    \n    _sapmp_atnam\n    \n as \n    \n    _sapmp_atnam\n    \n, \n    \n    \n    _sapmp_ceact\n    \n as \n    \n    _sapmp_ceact\n    \n, \n    \n    \n    _sapmp_gauf\n    \n as \n    \n    _sapmp_gauf\n    \n, \n    \n    \n    _sapmp_pdact\n    \n as \n    \n    _sapmp_pdact\n    \n, \n    \n    \n    _sapmp_pprot\n    \n as \n    \n    _sapmp_pprot\n    \n, \n    \n    \n    _sapmp_puser\n    \n as \n    \n    _sapmp_puser\n    \n, \n    \n    \n    _sapmp_pausw\n    \n as \n    \n    _sapmp_pausw\n    \n\n\n\n    from base\n),\n\nfinal as (\n    select\n        abgebot,\n        abvor,\n        ar_object,\n        brefn,\n        bsakz,\n        bsart,\n        bstyp,\n        cp_aktive,\n        cptype,\n        fls_rsto,\n        fsh_dpr_detpro,\n        fsh_excl_return,\n        fsh_po_idoc,\n        fsh_var_kalsm,\n        fsh_vas_act,\n        fsh_vas_del,\n        fsh_vas_detdt,\n        fsh_vas_kalsm,\n        gsfrg,\n        hityp,\n        hvr_change_time,\n        hvr_is_deleted,\n        koako,\n        koett,\n        kornr,\n        kzale,\n        lphis,\n        cast(mandt as TEXT) as mandt,\n        mill_omkz,\n        msr_active,\n        numka,\n        numkc,\n        numke,\n        numki,\n        oicsegi,\n        oirfqreq,\n        pargr,\n        pincr,\n        refba,\n        rdp_profile,\n        shenq,\n        stafo,\n        stako,\n        tolsl,\n        umlif,\n        upinc,\n        variante,\n        wrf_enable_dateline,\n        wvvkz,\n        xlokz,\n        _sapmp_atnam,\n        _sapmp_ceact,\n        _sapmp_gauf,\n        _sapmp_pdact,\n        _sapmp_pprot,\n        _sapmp_puser,\n        _sapmp_pausw,\n        _fivetran_deleted,\n        _fivetran_synced,\n        _fivetran_rowid\n    from fields\n)\n\nselect *\nfrom final", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null, "primary_key": [], "time_spine": null}, "model.sap.stg_sap__t024": {"database": "postgres", "schema": "public_sap_dev", "name": "stg_sap__t024", "resource_type": "model", "package_name": "sap", "path": "staging/stg_sap__t024.sql", "original_file_path": "models/staging/stg_sap__t024.sql", "unique_id": "model.sap.stg_sap__t024", "fqn": ["sap", "staging", "stg_sap__t024"], "alias": "stg_sap__t024", "checksum": {"name": "sha256", "checksum": "df97d52b2c28d60e7a2694c08b5bd0cf2ca84f20965f36c9dbd8ce6b20ec2793"}, "config": {"enabled": true, "alias": null, "schema": "sap_dev", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "view", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "freshness": null}, "tags": [], "description": "Purchasing groups", "columns": {"ekgrp": {"name": "ekgrp", "description": "Purchasing group", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "mandt": {"name": "mandt", "description": "Client", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "_fivetran_deleted": {"name": "_fivetran_deleted", "description": "Fivetran deletion marker", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "_fivetran_rowid": {"name": "_fivetran_rowid", "description": "Fivetran unique row ID", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "_fivetran_sap_archived": {"name": "_fivetran_sap_archived", "description": "Fivetran SAP archive marker", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "_fivetran_synced": {"name": "_fivetran_synced", "description": "Fivetran sync timestamp", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "eknam": {"name": "eknam", "description": "Name of purchasing group", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "ektel": {"name": "ektel", "description": "Telephone number", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "ldest": {"name": "ldest", "description": "Logical destination", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "smtp_addr": {"name": "smtp_addr", "description": "Email address", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "tel_extens": {"name": "tel_extens", "description": "Telephone extension", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "tel_number": {"name": "tel_number", "description": "Telephone number", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "telfx": {"name": "telfx", "description": "Fax number", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": "sap://models/staging/stg_sap.yml", "build_path": null, "unrendered_config": {"materialized": "view", "schema": "sap_{{ var('directed_schema','dev') }}", "enabled": true}, "created_at": 1756850331.2597423, "relation_name": "\"postgres\".\"public_sap_dev\".\"stg_sap__t024\"", "raw_code": "{{ config(enabled=var('sap_using_t024', True)) }}\n\n{% set source_columns = adapter.get_columns_in_relation(ref('stg_sap__t024_tmp')) %}\n\nwith base as (\n    select {{ remove_slashes_from_col_names(source_columns) }}\n    from {{ ref('stg_sap__t024_tmp') }}\n),\n\nfields as (\n    select\n        {{\n            fivetran_utils.fill_staging_columns(\n                source_columns=source_columns,\n                staging_columns=get_t024_columns()\n            )\n        }}\n    from base\n),\n\nfinal as (\n    select\n        _fivetran_deleted,\n        _fivetran_rowid,\n        _fivetran_synced,\n        _fivetran_sap_archived,\n        ekgrp,\n        eknam,\n        ektel,\n        ldest,\n        cast(mandt as {{ dbt.type_string() }}) as mandt,\n        smtp_addr,\n        tel_extens,\n        tel_number,\n        telfx\n    from fields\n)\n\nselect *\nfrom final", "doc_blocks": [], "language": "sql", "refs": [{"name": "stg_sap__t024_tmp", "package": null, "version": null}, {"name": "stg_sap__t024_tmp", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.sap.remove_slashes_from_col_names", "macro.sap.get_t024_columns", "macro.fivetran_utils.fill_staging_columns", "macro.dbt.type_string"], "nodes": ["model.sap.stg_sap__t024_tmp"]}, "compiled_path": "target/compiled/sap/models/staging/stg_sap__t024.sql", "compiled": true, "compiled_code": "\n\n\n\nwith base as (\n    select \n        \"_fivetran_deleted\" as _fivetran_deleted,\n        \"_fivetran_rowid\" as _fivetran_rowid,\n        \"_fivetran_synced\" as _fivetran_synced,\n        \"_fivetran_sap_archived\" as _fivetran_sap_archived,\n        \"ekgrp\" as ekgrp,\n        \"eknam\" as eknam,\n        \"ektel\" as ektel,\n        \"ldest\" as ldest,\n        \"mandt\" as mandt,\n        \"smtp_addr\" as smtp_addr,\n        \"tel_extens\" as tel_extens,\n        \"tel_number\" as tel_number,\n        \"telfx\" as telfx\n    from \"postgres\".\"public_sap_dev\".\"stg_sap__t024_tmp\"\n),\n\nfields as (\n    select\n        \n    \n    \n    _fivetran_deleted\n    \n as \n    \n    _fivetran_deleted\n    \n, \n    \n    \n    _fivetran_rowid\n    \n as \n    \n    _fivetran_rowid\n    \n, \n    \n    \n    _fivetran_synced\n    \n as \n    \n    _fivetran_synced\n    \n, \n    \n    \n    _fivetran_sap_archived\n    \n as \n    \n    _fivetran_sap_archived\n    \n, \n    \n    \n    ekgrp\n    \n as \n    \n    ekgrp\n    \n, \n    \n    \n    eknam\n    \n as \n    \n    eknam\n    \n, \n    \n    \n    ektel\n    \n as \n    \n    ektel\n    \n, \n    \n    \n    ldest\n    \n as \n    \n    ldest\n    \n, \n    \n    \n    mandt\n    \n as \n    \n    mandt\n    \n, \n    \n    \n    smtp_addr\n    \n as \n    \n    smtp_addr\n    \n, \n    \n    \n    tel_extens\n    \n as \n    \n    tel_extens\n    \n, \n    \n    \n    tel_number\n    \n as \n    \n    tel_number\n    \n, \n    \n    \n    telfx\n    \n as \n    \n    telfx\n    \n\n\n\n    from base\n),\n\nfinal as (\n    select\n        _fivetran_deleted,\n        _fivetran_rowid,\n        _fivetran_synced,\n        _fivetran_sap_archived,\n        ekgrp,\n        eknam,\n        ektel,\n        ldest,\n        cast(mandt as TEXT) as mandt,\n        smtp_addr,\n        tel_extens,\n        tel_number,\n        telfx\n    from fields\n)\n\nselect *\nfrom final", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null, "primary_key": [], "time_spine": null}, "model.sap.stg_sap__t134": {"database": "postgres", "schema": "public_sap_dev", "name": "stg_sap__t134", "resource_type": "model", "package_name": "sap", "path": "staging/stg_sap__t134.sql", "original_file_path": "models/staging/stg_sap__t134.sql", "unique_id": "model.sap.stg_sap__t134", "fqn": ["sap", "staging", "stg_sap__t134"], "alias": "stg_sap__t134", "checksum": {"name": "sha256", "checksum": "1ba341211ec905155b5c997c6684210b2bc541b096f974a24996831f2fd848fa"}, "config": {"enabled": true, "alias": null, "schema": "sap_dev", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "view", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "freshness": null}, "tags": [], "description": "Material types", "columns": {"_fivetran_rowid": {"name": "_fivetran_rowid", "description": "Fivetran unique row ID", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "_fivetran_deleted": {"name": "_fivetran_deleted", "description": "Fivetran deletion marker", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "_fivetran_synced": {"name": "_fivetran_synced", "description": "Fivetran sync timestamp", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "mtart": {"name": "mtart", "description": "Material type", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "mandt": {"name": "mandt", "description": "Client", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "aranz": {"name": "aranz", "description": "Layout indicator for material master", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "ardel": {"name": "ardel", "description": "Flag for deletion of layout", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "begru": {"name": "begru", "description": "Authorization group", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "bsext": {"name": "bsext", "description": "External number assignment allowed", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "bsint": {"name": "bsint", "description": "Internal number assignment allowed", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "cchis": {"name": "cchis", "description": "Change document indicator", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "chneu": {"name": "chneu", "description": "Indicator (New entries allowed)", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "class": {"name": "class", "description": "Material type class", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "ctype": {"name": "ctype", "description": "Classification type", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "ekalr": {"name": "ekalr", "description": "Costing indicator", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "envop": {"name": "envop", "description": "Environmentally relevant", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "flref": {"name": "flref", "description": "Material type references another", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "hvr_change_time": {"name": "hvr_change_time", "description": "HVR change timestamp", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "hvr_is_deleted": {"name": "hvr_is_deleted", "description": "HVR deletion flag", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "izust": {"name": "izust", "description": "Status for inventory management", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "kkref": {"name": "kkref", "description": "Reference key for variant configuration", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "kzgrp": {"name": "kzgrp", "description": "Group material type", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "kzkfg": {"name": "kzkfg", "description": "Configurable material indicator", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "kzmpn": {"name": "kzmpn", "description": "Manufacturer part number allowed", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "kzpip": {"name": "kzpip", "description": "Pipeline material indicator", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "kzprc": {"name": "kzprc", "description": "Pricing allowed indicator", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "kzrac": {"name": "kzrac", "description": "Returnable packaging indicator", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "kzvpr": {"name": "kzvpr", "description": "Valuation allowed indicator", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "mbref": {"name": "mbref", "description": "Material type reference", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "mstae": {"name": "mstae", "description": "Cross-plant material status", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "mtref": {"name": "mtref", "description": "Reference material type", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "numke": {"name": "numke", "description": "External number range key", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "numki": {"name": "numki", "description": "Internal number range key", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "prdru": {"name": "prdru", "description": "Period indicator for price determination", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "pstat": {"name": "pstat", "description": "Maintenance status", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "vmtpo": {"name": "vmtpo", "description": "Group material type for variants", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "vnumke": {"name": "vnumke", "description": "External number range (variant)", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "vnumki": {"name": "vnumki", "description": "Internal number range (variant)", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "vprsv": {"name": "vprsv", "description": "Price control indicator", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "vtype": {"name": "vtype", "description": "Variant type", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "wmakg": {"name": "wmakg", "description": "Weight unit group", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": "sap://models/staging/stg_sap.yml", "build_path": null, "unrendered_config": {"materialized": "view", "schema": "sap_{{ var('directed_schema','dev') }}", "enabled": true}, "created_at": 1756850331.2759795, "relation_name": "\"postgres\".\"public_sap_dev\".\"stg_sap__t134\"", "raw_code": "{{ config(enabled=var('sap_using_t134', True)) }}\n\n{% set source_columns = adapter.get_columns_in_relation(ref('stg_sap__t134_tmp')) %}\n\nwith base as (\n    select {{ remove_slashes_from_col_names(source_columns) }}\n    from {{ ref('stg_sap__t134_tmp') }}\n),\n\nfields as (\n    select\n        {{\n            fivetran_utils.fill_staging_columns(\n                source_columns=source_columns,\n                staging_columns=get_t134_columns()\n            )\n        }}\n    from base\n),\n\nfinal as (\n    select\n        aranz,\n        ardel,\n        begru,\n        bsext,\n        bsint,\n        cchis,\n        chneu,\n        class,\n        ctype,\n        ekalr,\n        envop,\n        flref,\n        hvr_change_time,\n        hvr_is_deleted,\n        izust,\n        kkref,\n        kzgrp,\n        kzkfg,\n        kzmpn,\n        kzpip,\n        kzprc,\n        kzrac,\n        kzvpr,\n        cast(mandt as {{ dbt.type_string() }}) as mandt,\n        mbref,\n        mstae,\n        mtart,\n        mtref,\n        numke,\n        numki,\n        prdru,\n        pstat,\n        vmtpo,\n        vnumke,\n        vnumki,\n        vprsv,\n        vtype,\n        wmakg,\n        _fivetran_deleted,\n        _fivetran_synced,\n        _fivetran_rowid\n    from fields\n)\n\nselect *\nfrom final", "doc_blocks": [], "language": "sql", "refs": [{"name": "stg_sap__t134_tmp", "package": null, "version": null}, {"name": "stg_sap__t134_tmp", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.sap.remove_slashes_from_col_names", "macro.sap.get_t134_columns", "macro.fivetran_utils.fill_staging_columns", "macro.dbt.type_string"], "nodes": ["model.sap.stg_sap__t134_tmp"]}, "compiled_path": "target/compiled/sap/models/staging/stg_sap__t134.sql", "compiled": true, "compiled_code": "\n\n\n\nwith base as (\n    select \n        \"aranz\" as aranz,\n        \"ardel\" as ardel,\n        \"begru\" as begru,\n        \"bsext\" as bsext,\n        \"bsint\" as bsint,\n        \"cchis\" as cchis,\n        \"chneu\" as chneu,\n        \"class\" as class,\n        \"ctype\" as ctype,\n        \"ekalr\" as ekalr,\n        \"envop\" as envop,\n        \"flref\" as flref,\n        \"hvr_change_time\" as hvr_change_time,\n        \"hvr_is_deleted\" as hvr_is_deleted,\n        \"hvr_rowid\" as hvr_rowid,\n        \"izust\" as izust,\n        \"kkref\" as kkref,\n        \"kzgrp\" as kzgrp,\n        \"kzkfg\" as kzkfg,\n        \"kzmpn\" as kzmpn,\n        \"kzpip\" as kzpip,\n        \"kzprc\" as kzprc,\n        \"kzrac\" as kzrac,\n        \"kzvpr\" as kzvpr,\n        \"mandt\" as mandt,\n        \"mbref\" as mbref,\n        \"mstae\" as mstae,\n        \"mtart\" as mtart,\n        \"mtref\" as mtref,\n        \"numke\" as numke,\n        \"numki\" as numki,\n        \"prdru\" as prdru,\n        \"pstat\" as pstat,\n        \"vmtpo\" as vmtpo,\n        \"vnumke\" as vnumke,\n        \"vnumki\" as vnumki,\n        \"vprsv\" as vprsv,\n        \"vtype\" as vtype,\n        \"wmakg\" as wmakg\n    from \"postgres\".\"public_sap_dev\".\"stg_sap__t134_tmp\"\n),\n\nfields as (\n    select\n        \n    cast(null as boolean) as \n    \n    _fivetran_deleted\n    \n , \n    cast(null as numeric(28,6)) as \n    \n    _fivetran_rowid\n    \n , \n    cast(null as timestamp) as \n    \n    _fivetran_synced\n    \n , \n    \n    \n    aranz\n    \n as \n    \n    aranz\n    \n, \n    \n    \n    ardel\n    \n as \n    \n    ardel\n    \n, \n    \n    \n    begru\n    \n as \n    \n    begru\n    \n, \n    \n    \n    bsext\n    \n as \n    \n    bsext\n    \n, \n    \n    \n    bsint\n    \n as \n    \n    bsint\n    \n, \n    \n    \n    cchis\n    \n as \n    \n    cchis\n    \n, \n    \n    \n    chneu\n    \n as \n    \n    chneu\n    \n, \n    \n    \n    class\n    \n as \n    \n    class\n    \n, \n    \n    \n    ctype\n    \n as \n    \n    ctype\n    \n, \n    \n    \n    ekalr\n    \n as \n    \n    ekalr\n    \n, \n    \n    \n    envop\n    \n as \n    \n    envop\n    \n, \n    \n    \n    flref\n    \n as \n    \n    flref\n    \n, \n    \n    \n    hvr_change_time\n    \n as \n    \n    hvr_change_time\n    \n, \n    \n    \n    hvr_is_deleted\n    \n as \n    \n    hvr_is_deleted\n    \n, \n    \n    \n    izust\n    \n as \n    \n    izust\n    \n, \n    \n    \n    kkref\n    \n as \n    \n    kkref\n    \n, \n    \n    \n    kzgrp\n    \n as \n    \n    kzgrp\n    \n, \n    \n    \n    kzkfg\n    \n as \n    \n    kzkfg\n    \n, \n    \n    \n    kzmpn\n    \n as \n    \n    kzmpn\n    \n, \n    \n    \n    kzpip\n    \n as \n    \n    kzpip\n    \n, \n    \n    \n    kzprc\n    \n as \n    \n    kzprc\n    \n, \n    \n    \n    kzrac\n    \n as \n    \n    kzrac\n    \n, \n    \n    \n    kzvpr\n    \n as \n    \n    kzvpr\n    \n, \n    \n    \n    mandt\n    \n as \n    \n    mandt\n    \n, \n    \n    \n    mbref\n    \n as \n    \n    mbref\n    \n, \n    \n    \n    mstae\n    \n as \n    \n    mstae\n    \n, \n    \n    \n    mtart\n    \n as \n    \n    mtart\n    \n, \n    \n    \n    mtref\n    \n as \n    \n    mtref\n    \n, \n    \n    \n    numke\n    \n as \n    \n    numke\n    \n, \n    \n    \n    numki\n    \n as \n    \n    numki\n    \n, \n    \n    \n    prdru\n    \n as \n    \n    prdru\n    \n, \n    \n    \n    pstat\n    \n as \n    \n    pstat\n    \n, \n    \n    \n    vmtpo\n    \n as \n    \n    vmtpo\n    \n, \n    \n    \n    vnumke\n    \n as \n    \n    vnumke\n    \n, \n    \n    \n    vnumki\n    \n as \n    \n    vnumki\n    \n, \n    \n    \n    vprsv\n    \n as \n    \n    vprsv\n    \n, \n    \n    \n    vtype\n    \n as \n    \n    vtype\n    \n, \n    \n    \n    wmakg\n    \n as \n    \n    wmakg\n    \n\n\n\n    from base\n),\n\nfinal as (\n    select\n        aranz,\n        ardel,\n        begru,\n        bsext,\n        bsint,\n        cchis,\n        chneu,\n        class,\n        ctype,\n        ekalr,\n        envop,\n        flref,\n        hvr_change_time,\n        hvr_is_deleted,\n        izust,\n        kkref,\n        kzgrp,\n        kzkfg,\n        kzmpn,\n        kzpip,\n        kzprc,\n        kzrac,\n        kzvpr,\n        cast(mandt as TEXT) as mandt,\n        mbref,\n        mstae,\n        mtart,\n        mtref,\n        numke,\n        numki,\n        prdru,\n        pstat,\n        vmtpo,\n        vnumke,\n        vnumki,\n        vprsv,\n        vtype,\n        wmakg,\n        _fivetran_deleted,\n        _fivetran_synced,\n        _fivetran_rowid\n    from fields\n)\n\nselect *\nfrom final", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null, "primary_key": [], "time_spine": null}, "model.sap.stg_sap__dd07t": {"database": "postgres", "schema": "public_sap_dev", "name": "stg_sap__dd07t", "resource_type": "model", "package_name": "sap", "path": "staging/stg_sap__dd07t.sql", "original_file_path": "models/staging/stg_sap__dd07t.sql", "unique_id": "model.sap.stg_sap__dd07t", "fqn": ["sap", "staging", "stg_sap__dd07t"], "alias": "stg_sap__dd07t", "checksum": {"name": "sha256", "checksum": "9621f742363eb6f796780d165622c8781f811c09d99b51dfb1e67ec717c1297a"}, "config": {"enabled": true, "alias": null, "schema": "sap_dev", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "view", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "freshness": null}, "tags": [], "description": "Domain text values", "columns": {"_fivetran_deleted": {"name": "_fivetran_deleted", "description": "Fivetran deletion marker", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "_fivetran_rowid": {"name": "_fivetran_rowid", "description": "Fivetran unique row ID", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "_fivetran_synced": {"name": "_fivetran_synced", "description": "Fivetran sync timestamp", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "as4local": {"name": "as4local", "description": "Indicator of local object (not transported between systems)", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "as4vers": {"name": "as4vers", "description": "Active version", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "ddlanguage": {"name": "ddlanguage", "description": "Language key", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "ddtext": {"name": "ddtext", "description": "Text", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "domname": {"name": "domname", "description": "Domain name", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "domvalue_l": {"name": "domvalue_l", "description": "Domain value", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "hvr_change_time": {"name": "hvr_change_time", "description": "HVR change timestamp", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "valpos": {"name": "valpos", "description": "Value position within the domain", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": "sap://models/staging/stg_sap.yml", "build_path": null, "unrendered_config": {"materialized": "view", "schema": "sap_{{ var('directed_schema','dev') }}", "enabled": true}, "created_at": 1756850330.6338522, "relation_name": "\"postgres\".\"public_sap_dev\".\"stg_sap__dd07t\"", "raw_code": "{{ config(enabled=var('sap_using_dd07t', True)) }}\n\n{% set source_columns = adapter.get_columns_in_relation(ref('stg_sap__dd07t_tmp')) %}\n\nwith base as (\n    select {{ remove_slashes_from_col_names(source_columns) }}\n    from {{ ref('stg_sap__dd07t_tmp') }}\n),\n\nfields as (\n    select\n        {{\n            fivetran_utils.fill_staging_columns(\n                source_columns=source_columns,\n                staging_columns=get_dd07t_columns()\n            )\n        }}\n    from base\n),\n\nfinal as (\n    select\n        as4local,\n        as4vers,\n        ddlanguage,\n        ddtext,\n        domname,\n        domvalue_l,\n        valpos,\n        hvr_change_time,\n        _fivetran_deleted,\n        _fivetran_rowid,\n        _fivetran_synced\n    from fields\n)\n\nselect *\nfrom final", "doc_blocks": [], "language": "sql", "refs": [{"name": "stg_sap__dd07t_tmp", "package": null, "version": null}, {"name": "stg_sap__dd07t_tmp", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.sap.remove_slashes_from_col_names", "macro.sap.get_dd07t_columns", "macro.fivetran_utils.fill_staging_columns"], "nodes": ["model.sap.stg_sap__dd07t_tmp"]}, "compiled_path": "target/compiled/sap/models/staging/stg_sap__dd07t.sql", "compiled": true, "compiled_code": "\n\n\n\nwith base as (\n    select \n        \"_fivetran_deleted\" as _fivetran_deleted,\n        \"_fivetran_rowid\" as _fivetran_rowid,\n        \"_fivetran_synced\" as _fivetran_synced,\n        \"domname\" as domname,\n        \"domvalue_l\" as domvalue_l,\n        \"as4vers\" as as4vers,\n        \"ddlanguage\" as ddlanguage,\n        \"ddtext\" as ddtext,\n        \"hvr_change_time\" as hvr_change_time,\n        \"valpos\" as valpos\n    from \"postgres\".\"public_sap_dev\".\"stg_sap__dd07t_tmp\"\n),\n\nfields as (\n    select\n        \n    \n    \n    _fivetran_deleted\n    \n as \n    \n    _fivetran_deleted\n    \n, \n    \n    \n    _fivetran_rowid\n    \n as \n    \n    _fivetran_rowid\n    \n, \n    \n    \n    _fivetran_synced\n    \n as \n    \n    _fivetran_synced\n    \n, \n    cast(null as TEXT) as \n    \n    as4local\n    \n , \n    \n    \n    as4vers\n    \n as \n    \n    as4vers\n    \n, \n    \n    \n    ddlanguage\n    \n as \n    \n    ddlanguage\n    \n, \n    \n    \n    ddtext\n    \n as \n    \n    ddtext\n    \n, \n    \n    \n    domname\n    \n as \n    \n    domname\n    \n, \n    \n    \n    domvalue_l\n    \n as \n    \n    domvalue_l\n    \n, \n    \n    \n    valpos\n    \n as \n    \n    valpos\n    \n, \n    \n    \n    hvr_change_time\n    \n as \n    \n    hvr_change_time\n    \n\n\n\n    from base\n),\n\nfinal as (\n    select\n        as4local,\n        as4vers,\n        ddlanguage,\n        ddtext,\n        domname,\n        domvalue_l,\n        valpos,\n        hvr_change_time,\n        _fivetran_deleted,\n        _fivetran_rowid,\n        _fivetran_synced\n    from fields\n)\n\nselect *\nfrom final", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null, "primary_key": [], "time_spine": null}, "model.sap.stg_sap__eket": {"database": "postgres", "schema": "public_sap_dev", "name": "stg_sap__eket", "resource_type": "model", "package_name": "sap", "path": "staging/stg_sap__eket.sql", "original_file_path": "models/staging/stg_sap__eket.sql", "unique_id": "model.sap.stg_sap__eket", "fqn": ["sap", "staging", "stg_sap__eket"], "alias": "stg_sap__eket", "checksum": {"name": "sha256", "checksum": "5c7a174ec318b0fddd6bb2a3576a85f1ffdef53367597cfbda8e325ecf074818"}, "config": {"enabled": true, "alias": null, "schema": "sap_dev", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "view", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "freshness": null}, "tags": [], "description": "Schedule lines for purchasing document", "columns": {"_fivetran_deleted": {"name": "_fivetran_deleted", "description": "Fivetran deletion marker", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "_fivetran_sap_archived": {"name": "_fivetran_sap_archived", "description": "Fivetran SAP archive marker", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "_fivetran_synced": {"name": "_fivetran_synced", "description": "Fivetran sync timestamp", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "abart": {"name": "abart", "description": "Disposal type", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "altdt": {"name": "altdt", "description": "Date of last changes", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "ameng": {"name": "ameng", "description": "Quantity in unit of entry", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "anzsn": {"name": "anzsn", "description": "Number of serial numbers", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "aulwe": {"name": "aulwe", "description": "Delivery completed indicator", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "banfn": {"name": "banfn", "description": "Purchase requisition number", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "bedat": {"name": "bedat", "description": "Document date in purchasing document", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "bnfpo": {"name": "bnfpo", "description": "Item number of purchase requisition", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "budg_type": {"name": "budg_type", "description": "Budget type", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "cd_locno": {"name": "cd_locno", "description": "Location number for CD", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "cd_loctype": {"name": "cd_loctype", "description": "Type of CD location", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "charg": {"name": "charg", "description": "Batch number", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "check_type": {"name": "check_type", "description": "Type of check", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "chkom": {"name": "chkom", "description": "Confirmation control key", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "cncl_ancmnt_done": {"name": "cncl_ancmnt_done", "description": "Cancel announcement processed", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "dabmg": {"name": "dabmg", "description": "Quantity reduced", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "dat01": {"name": "dat01", "description": "Date field 1", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "dateshift_number": {"name": "dateshift_number", "description": "Number of days delivery date shifted", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "dl_id": {"name": "dl_id", "description": "Delivery ID", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "dng_date": {"name": "dng_date", "description": "Announcement date", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "dng_time": {"name": "dng_time", "description": "Announcement time", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "ebeln": {"name": "ebeln", "description": "Purchasing document number", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "ebelp": {"name": "ebelp", "description": "Item number of purchasing document", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "eindt": {"name": "eindt", "description": "Delivery date", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "eldat": {"name": "eldat", "description": "Goods receipt date", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "eluhr": {"name": "eluhr", "description": "Time of goods receipt", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "estkz": {"name": "estkz", "description": "Control indicator", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "etenr": {"name": "etenr", "description": "Schedule line number", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "fixkz": {"name": "fixkz", "description": "Fixed date and quantity indicator", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "fsh_os_id": {"name": "fsh_os_id", "description": "One-step ID for fashion", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "fsh_ralloc_qty": {"name": "fsh_ralloc_qty", "description": "Reallocation quantity", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "fsh_salloc_qty": {"name": "fsh_salloc_qty", "description": "Stock allocation quantity", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "geo_route": {"name": "geo_route", "description": "Geographical route", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "glmng": {"name": "glmng", "description": "Quantity of goods received", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "gts_ind": {"name": "gts_ind", "description": "GTS relevant indicator", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "handover_date": {"name": "handover_date", "description": "Handover date to forwarding agent", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "handoverdate": {"name": "handoverdate", "description": "Handover date", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "handovertime": {"name": "handovertime", "description": "Handover time", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "hvr_change_time": {"name": "hvr_change_time", "description": "HVR change timestamp", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "hvr_is_deleted": {"name": "hvr_is_deleted", "description": "HVR deletion flag", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "key_id": {"name": "key_id", "description": "Key ID", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "lddat": {"name": "lddat", "description": "Loading date", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "lduhr": {"name": "lduhr", "description": "Loading time", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "licha": {"name": "licha", "description": "Vendor batch number", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "lpein": {"name": "lpein", "description": "Price unit", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "mahnz": {"name": "mahnz", "description": "Reminder level", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "mandt": {"name": "mandt", "description": "Client", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "mbdat": {"name": "mbdat", "description": "GR planned date", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "mbuhr": {"name": "mbuhr", "description": "GR planned time", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "menge": {"name": "menge", "description": "Quantity", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "mng02": {"name": "mng02", "description": "Second quantity field", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "no_scem": {"name": "no_scem", "description": "No supply chain event management", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "nodisp": {"name": "nodisp", "description": "No display indicator", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "otb_curr": {"name": "otb_curr", "description": "Currency of OTB", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "otb_reason": {"name": "otb_reason", "description": "OTB blocking reason", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "otb_res_value": {"name": "otb_res_value", "description": "OTB release value", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "otb_spec_value": {"name": "otb_spec_value", "description": "OTB special release value", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "otb_status": {"name": "otb_status", "description": "OTB status", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "otb_value": {"name": "otb_value", "description": "OTB value", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "qunum": {"name": "qunum", "description": "Number of delivery note", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "qupos": {"name": "qupos", "description": "Delivery note item", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "route_gts": {"name": "route_gts", "description": "GTS route", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "rsnum": {"name": "rsnum", "description": "Reservation number", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "sernr": {"name": "sernr", "description": "Serial number", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "slfdt": {"name": "slfdt", "description": "Shelf life expiration date", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "spr_rsn_profile": {"name": "spr_rsn_profile", "description": "Profile for delivery date reason", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "tddat": {"name": "tddat", "description": "Transportation planning date", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "tduhr": {"name": "tduhr", "description": "Transportation planning time", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "tsp": {"name": "tsp", "description": "Service level", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "uzeit": {"name": "uzeit", "description": "Time of entry", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "verid": {"name": "verid", "description": "Production version", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "wadat": {"name": "wadat", "description": "Planned goods issue date", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "wamng": {"name": "wamng", "description": "Quantity of goods issued", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "wauhr": {"name": "wauhr", "description": "Goods issue time", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "wemng": {"name": "wemng", "description": "Quantity of goods received", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": "sap://models/staging/stg_sap.yml", "build_path": null, "unrendered_config": {"materialized": "view", "schema": "sap_{{ var('directed_schema','dev') }}", "enabled": true}, "created_at": 1756850330.6849446, "relation_name": "\"postgres\".\"public_sap_dev\".\"stg_sap__eket\"", "raw_code": "{{ config(enabled=var('sap_using_eket', True)) }}\n\n{% set source_columns = adapter.get_columns_in_relation(ref('stg_sap__eket_tmp')) %}\n\nwith base as (\n    select {{ remove_slashes_from_col_names(source_columns) }}\n    from {{ ref('stg_sap__eket_tmp') }}\n),\n\nfields as (\n    select\n        {{\n            fivetran_utils.fill_staging_columns(\n                source_columns=source_columns,\n                staging_columns=get_eket_columns()\n            )\n        }}\n    from base\n),\n\nfinal as (\n    select\n        abart,\n        altdt,\n        ameng,\n        anzsn,\n        aulwe,\n        banfn,\n        bedat,\n        bnfpo,\n        budg_type,\n        cd_locno,\n        cd_loctype,\n        charg,\n        check_type,\n        chkom,\n        cncl_ancmnt_done,\n        dabmg,\n        dat01,\n        dateshift_number,\n        dl_id,\n        dng_date,\n        dng_time,\n        cast(ebeln as {{ dbt.type_string() }}) as ebeln,\n        cast(ebelp as {{ dbt.type_string() }}) as ebelp,\n        eindt,\n        eldat,\n        eluhr,\n        estkz,\n        etenr,\n        fixkz,\n        fsh_os_id,\n        fsh_ralloc_qty,\n        fsh_salloc_qty,\n        geo_route,\n        glmng,\n        gts_ind,\n        handover_date,\n        handoverdate,\n        handovertime,\n        hvr_change_time,\n        hvr_is_deleted,\n        key_id,\n        lddat,\n        lduhr,\n        licha,\n        lpein,\n        mahnz,\n        cast(mandt as {{ dbt.type_string() }}) as mandt,\n        mbdat,\n        mbuhr,\n        cast(menge as {{ dbt.type_numeric() }}) as menge,\n        mng02,\n        no_scem,\n        nodisp,\n        otb_curr,\n        otb_reason,\n        otb_res_value,\n        otb_spec_value,\n        otb_status,\n        otb_value,\n        qunum,\n        qupos,\n        route_gts,\n        rsnum,\n        sernr,\n        slfdt,\n        spr_rsn_profile,\n        tddat,\n        tduhr,\n        tsp,\n        uzeit,\n        verid,\n        wadat,\n        wamng,\n        wauhr,\n        wemng,\n        _fivetran_sap_archived,\n        _fivetran_deleted,\n        _fivetran_synced\n    from fields\n)\n\nselect *\nfrom final", "doc_blocks": [], "language": "sql", "refs": [{"name": "stg_sap__eket_tmp", "package": null, "version": null}, {"name": "stg_sap__eket_tmp", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.sap.remove_slashes_from_col_names", "macro.sap.get_eket_columns", "macro.fivetran_utils.fill_staging_columns", "macro.dbt.type_string", "macro.dbt.type_numeric"], "nodes": ["model.sap.stg_sap__eket_tmp"]}, "compiled_path": "target/compiled/sap/models/staging/stg_sap__eket.sql", "compiled": true, "compiled_code": "\n\n\n\nwith base as (\n    select \n        \"abart\" as abart,\n        \"altdt\" as altdt,\n        \"ameng\" as ameng,\n        \"anzsn\" as anzsn,\n        \"aulwe\" as aulwe,\n        \"banfn\" as banfn,\n        \"bedat\" as bedat,\n        \"bnfpo\" as bnfpo,\n        \"budg_type\" as budg_type,\n        \"cd_locno\" as cd_locno,\n        \"cd_loctype\" as cd_loctype,\n        \"charg\" as charg,\n        \"check_type\" as check_type,\n        \"chkom\" as chkom,\n        \"cncl_ancmnt_done\" as cncl_ancmnt_done,\n        \"dat01\" as dat01,\n        \"dabmg\" as dabmg,\n        \"dateshift_number\" as dateshift_number,\n        \"dl_id\" as dl_id,\n        \"dng_date\" as dng_date,\n        \"dng_time\" as dng_time,\n        \"ebeln\" as ebeln,\n        \"ebelp\" as ebelp,\n        \"eindt\" as eindt,\n        \"eldat\" as eldat,\n        \"eluhr\" as eluhr,\n        \"estkz\" as estkz,\n        \"etenr\" as etenr,\n        \"fixkz\" as fixkz,\n        \"fsh_os_id\" as fsh_os_id,\n        \"fsh_ralloc_qty\" as fsh_ralloc_qty,\n        \"fsh_salloc_qty\" as fsh_salloc_qty,\n        \"geo_route\" as geo_route,\n        \"glmng\" as glmng,\n        \"gts_ind\" as gts_ind,\n        \"handover_date\" as handover_date,\n        \"handoverdate\" as handoverdate,\n        \"handovertime\" as handovertime,\n        \"hvr_change_time\" as hvr_change_time,\n        \"hvr_is_deleted\" as hvr_is_deleted,\n        \"key_id\" as key_id,\n        \"lddat\" as lddat,\n        \"lduhr\" as lduhr,\n        \"licha\" as licha,\n        \"lpein\" as lpein,\n        \"mahnz\" as mahnz,\n        \"mandt\" as mandt,\n        \"mbdat\" as mbdat,\n        \"mbuhr\" as mbuhr,\n        \"menge\" as menge,\n        \"mng02\" as mng02,\n        \"no_scem\" as no_scem,\n        \"nodisp\" as nodisp,\n        \"otb_curr\" as otb_curr,\n        \"otb_reason\" as otb_reason,\n        \"otb_res_value\" as otb_res_value,\n        \"otb_spec_value\" as otb_spec_value,\n        \"otb_status\" as otb_status,\n        \"otb_value\" as otb_value,\n        \"qunum\" as qunum,\n        \"qupos\" as qupos,\n        \"route_gts\" as route_gts,\n        \"rsnum\" as rsnum,\n        \"sernr\" as sernr,\n        \"slfdt\" as slfdt,\n        \"spr_rsn_profile\" as spr_rsn_profile,\n        \"tddat\" as tddat,\n        \"tduhr\" as tduhr,\n        \"tsp\" as tsp,\n        \"uzeit\" as uzeit,\n        \"verid\" as verid,\n        \"wadat\" as wadat,\n        \"wamng\" as wamng,\n        \"wauhr\" as wauhr,\n        \"wemng\" as wemng,\n        \"_fivetran_deleted\" as _fivetran_deleted,\n        \"_fivetran_synced\" as _fivetran_synced,\n        \"_fivetran_sap_archived\" as _fivetran_sap_archived\n    from \"postgres\".\"public_sap_dev\".\"stg_sap__eket_tmp\"\n),\n\nfields as (\n    select\n        \n    \n    \n    abart\n    \n as \n    \n    abart\n    \n, \n    \n    \n    altdt\n    \n as \n    \n    altdt\n    \n, \n    \n    \n    ameng\n    \n as \n    \n    ameng\n    \n, \n    \n    \n    anzsn\n    \n as \n    \n    anzsn\n    \n, \n    \n    \n    aulwe\n    \n as \n    \n    aulwe\n    \n, \n    \n    \n    banfn\n    \n as \n    \n    banfn\n    \n, \n    \n    \n    bedat\n    \n as \n    \n    bedat\n    \n, \n    \n    \n    bnfpo\n    \n as \n    \n    bnfpo\n    \n, \n    \n    \n    budg_type\n    \n as \n    \n    budg_type\n    \n, \n    \n    \n    cd_locno\n    \n as \n    \n    cd_locno\n    \n, \n    \n    \n    cd_loctype\n    \n as \n    \n    cd_loctype\n    \n, \n    \n    \n    charg\n    \n as \n    \n    charg\n    \n, \n    \n    \n    check_type\n    \n as \n    \n    check_type\n    \n, \n    \n    \n    chkom\n    \n as \n    \n    chkom\n    \n, \n    \n    \n    cncl_ancmnt_done\n    \n as \n    \n    cncl_ancmnt_done\n    \n, \n    \n    \n    dat01\n    \n as \n    \n    dat01\n    \n, \n    \n    \n    dabmg\n    \n as \n    \n    dabmg\n    \n, \n    \n    \n    dateshift_number\n    \n as \n    \n    dateshift_number\n    \n, \n    \n    \n    dl_id\n    \n as \n    \n    dl_id\n    \n, \n    \n    \n    dng_date\n    \n as \n    \n    dng_date\n    \n, \n    \n    \n    dng_time\n    \n as \n    \n    dng_time\n    \n, \n    \n    \n    ebeln\n    \n as \n    \n    ebeln\n    \n, \n    \n    \n    ebelp\n    \n as \n    \n    ebelp\n    \n, \n    \n    \n    eindt\n    \n as \n    \n    eindt\n    \n, \n    \n    \n    eldat\n    \n as \n    \n    eldat\n    \n, \n    \n    \n    eluhr\n    \n as \n    \n    eluhr\n    \n, \n    \n    \n    estkz\n    \n as \n    \n    estkz\n    \n, \n    \n    \n    etenr\n    \n as \n    \n    etenr\n    \n, \n    \n    \n    fixkz\n    \n as \n    \n    fixkz\n    \n, \n    \n    \n    fsh_os_id\n    \n as \n    \n    fsh_os_id\n    \n, \n    \n    \n    fsh_ralloc_qty\n    \n as \n    \n    fsh_ralloc_qty\n    \n, \n    \n    \n    fsh_salloc_qty\n    \n as \n    \n    fsh_salloc_qty\n    \n, \n    \n    \n    geo_route\n    \n as \n    \n    geo_route\n    \n, \n    \n    \n    glmng\n    \n as \n    \n    glmng\n    \n, \n    \n    \n    gts_ind\n    \n as \n    \n    gts_ind\n    \n, \n    \n    \n    handover_date\n    \n as \n    \n    handover_date\n    \n, \n    \n    \n    handoverdate\n    \n as \n    \n    handoverdate\n    \n, \n    \n    \n    handovertime\n    \n as \n    \n    handovertime\n    \n, \n    \n    \n    hvr_change_time\n    \n as \n    \n    hvr_change_time\n    \n, \n    \n    \n    hvr_is_deleted\n    \n as \n    \n    hvr_is_deleted\n    \n, \n    \n    \n    key_id\n    \n as \n    \n    key_id\n    \n, \n    \n    \n    lddat\n    \n as \n    \n    lddat\n    \n, \n    \n    \n    lduhr\n    \n as \n    \n    lduhr\n    \n, \n    \n    \n    licha\n    \n as \n    \n    licha\n    \n, \n    \n    \n    lpein\n    \n as \n    \n    lpein\n    \n, \n    \n    \n    mahnz\n    \n as \n    \n    mahnz\n    \n, \n    \n    \n    mandt\n    \n as \n    \n    mandt\n    \n, \n    \n    \n    mbdat\n    \n as \n    \n    mbdat\n    \n, \n    \n    \n    mbuhr\n    \n as \n    \n    mbuhr\n    \n, \n    \n    \n    menge\n    \n as \n    \n    menge\n    \n, \n    \n    \n    mng02\n    \n as \n    \n    mng02\n    \n, \n    \n    \n    no_scem\n    \n as \n    \n    no_scem\n    \n, \n    \n    \n    nodisp\n    \n as \n    \n    nodisp\n    \n, \n    \n    \n    otb_curr\n    \n as \n    \n    otb_curr\n    \n, \n    \n    \n    otb_reason\n    \n as \n    \n    otb_reason\n    \n, \n    \n    \n    otb_res_value\n    \n as \n    \n    otb_res_value\n    \n, \n    \n    \n    otb_spec_value\n    \n as \n    \n    otb_spec_value\n    \n, \n    \n    \n    otb_status\n    \n as \n    \n    otb_status\n    \n, \n    \n    \n    otb_value\n    \n as \n    \n    otb_value\n    \n, \n    \n    \n    qunum\n    \n as \n    \n    qunum\n    \n, \n    \n    \n    qupos\n    \n as \n    \n    qupos\n    \n, \n    \n    \n    route_gts\n    \n as \n    \n    route_gts\n    \n, \n    \n    \n    rsnum\n    \n as \n    \n    rsnum\n    \n, \n    \n    \n    sernr\n    \n as \n    \n    sernr\n    \n, \n    \n    \n    slfdt\n    \n as \n    \n    slfdt\n    \n, \n    \n    \n    spr_rsn_profile\n    \n as \n    \n    spr_rsn_profile\n    \n, \n    \n    \n    tddat\n    \n as \n    \n    tddat\n    \n, \n    \n    \n    tduhr\n    \n as \n    \n    tduhr\n    \n, \n    \n    \n    tsp\n    \n as \n    \n    tsp\n    \n, \n    \n    \n    uzeit\n    \n as \n    \n    uzeit\n    \n, \n    \n    \n    verid\n    \n as \n    \n    verid\n    \n, \n    \n    \n    wadat\n    \n as \n    \n    wadat\n    \n, \n    \n    \n    wamng\n    \n as \n    \n    wamng\n    \n, \n    \n    \n    wauhr\n    \n as \n    \n    wauhr\n    \n, \n    \n    \n    wemng\n    \n as \n    \n    wemng\n    \n, \n    \n    \n    _fivetran_deleted\n    \n as \n    \n    _fivetran_deleted\n    \n, \n    \n    \n    _fivetran_synced\n    \n as \n    \n    _fivetran_synced\n    \n, \n    \n    \n    _fivetran_sap_archived\n    \n as \n    \n    _fivetran_sap_archived\n    \n\n\n\n    from base\n),\n\nfinal as (\n    select\n        abart,\n        altdt,\n        ameng,\n        anzsn,\n        aulwe,\n        banfn,\n        bedat,\n        bnfpo,\n        budg_type,\n        cd_locno,\n        cd_loctype,\n        charg,\n        check_type,\n        chkom,\n        cncl_ancmnt_done,\n        dabmg,\n        dat01,\n        dateshift_number,\n        dl_id,\n        dng_date,\n        dng_time,\n        cast(ebeln as TEXT) as ebeln,\n        cast(ebelp as TEXT) as ebelp,\n        eindt,\n        eldat,\n        eluhr,\n        estkz,\n        etenr,\n        fixkz,\n        fsh_os_id,\n        fsh_ralloc_qty,\n        fsh_salloc_qty,\n        geo_route,\n        glmng,\n        gts_ind,\n        handover_date,\n        handoverdate,\n        handovertime,\n        hvr_change_time,\n        hvr_is_deleted,\n        key_id,\n        lddat,\n        lduhr,\n        licha,\n        lpein,\n        mahnz,\n        cast(mandt as TEXT) as mandt,\n        mbdat,\n        mbuhr,\n        cast(menge as numeric(28,6)) as menge,\n        mng02,\n        no_scem,\n        nodisp,\n        otb_curr,\n        otb_reason,\n        otb_res_value,\n        otb_spec_value,\n        otb_status,\n        otb_value,\n        qunum,\n        qupos,\n        route_gts,\n        rsnum,\n        sernr,\n        slfdt,\n        spr_rsn_profile,\n        tddat,\n        tduhr,\n        tsp,\n        uzeit,\n        verid,\n        wadat,\n        wamng,\n        wauhr,\n        wemng,\n        _fivetran_sap_archived,\n        _fivetran_deleted,\n        _fivetran_synced\n    from fields\n)\n\nselect *\nfrom final", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null, "primary_key": [], "time_spine": null}, "model.sap.stg_sap__faglflexa": {"database": "postgres", "schema": "public_sap_dev", "name": "stg_sap__faglflexa", "resource_type": "model", "package_name": "sap", "path": "staging/stg_sap__faglflexa.sql", "original_file_path": "models/staging/stg_sap__faglflexa.sql", "unique_id": "model.sap.stg_sap__faglflexa", "fqn": ["sap", "staging", "stg_sap__faglflexa"], "alias": "stg_sap__faglflexa", "checksum": {"name": "sha256", "checksum": "00d1ff2a28277e4aa8344dc9fe9386c8ee316cf40a4df21cbe0af930ffafe3ba"}, "config": {"enabled": true, "alias": null, "schema": "sap_dev", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "view", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "freshness": null}, "tags": [], "description": "General ledger (Actual line items)", "columns": {"activ": {"name": "activ", "description": "FI-SL business transaction", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "awtyp": {"name": "awtyp", "description": "Reference transaction", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "belnr": {"name": "belnr", "description": "Accounting document number", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "bschl": {"name": "bschl", "description": "Posting key", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "bstat": {"name": "bstat", "description": "Document status", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "budat": {"name": "budat", "description": "Posting date in the document", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "buzei": {"name": "buzei", "description": "Number of line item within accounting document", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "cost_elem": {"name": "cost_elem", "description": "Cost element", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "docln": {"name": "docln", "description": "Six-character posting item for ledger", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "docnr": {"name": "docnr", "description": "Accounting document number", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "drcrk": {"name": "drcrk", "description": "Debt/credit indicator", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "faglflexa_timestamp": {"name": "faglflexa_timestamp", "description": "UTC Timestamp in short form (YYYYMMDDhhmmss)", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "gjahr": {"name": "gjahr", "description": "Fiscal year", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "hsl": {"name": "hsl", "description": "Value in local currency", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "kokrs": {"name": "kokrs", "description": "Controlling area", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "ksl": {"name": "ksl", "description": "Value in group currency", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "logsys": {"name": "logsys", "description": "Logical system", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "msl": {"name": "msl", "description": "Quantity", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "osl": {"name": "osl", "description": "Value in another currency", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "poper": {"name": "poper", "description": "Posting period", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "pprctr": {"name": "pprctr", "description": "Partner profit center", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "prctr": {"name": "prctr", "description": "Profit center", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "psegment": {"name": "psegment", "description": "Partner segment for segmental reporting", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "racct": {"name": "racct", "description": "Account number", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "rassc": {"name": "rassc", "description": "Company id of trading partner", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "rbukrs": {"name": "rbukrs", "description": "Company code", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "rbusa": {"name": "rbusa", "description": "Business area", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "rclnt": {"name": "rclnt", "description": "Client", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "rcntr": {"name": "rcntr", "description": "Cost center", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "rfarea": {"name": "rfarea", "description": "Functional area", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "rldnr": {"name": "rldnr", "description": "Ledger in genral ledger accounting", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "rmvct": {"name": "rmvct", "description": "Transaction type", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "rrcty": {"name": "rrcty", "description": "Record type", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "rtcur": {"name": "rtcur", "description": "Currency key", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "runit": {"name": "runit", "description": "Base unit of measure", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "rvers": {"name": "rvers", "description": "Version", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "rwcur": {"name": "rwcur", "description": "Currency key of the original transaction currency", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "ryear": {"name": "ryear", "description": "Fiscal year", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "sbusa": {"name": "sbusa", "description": "Trading partner's business area", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "scntr": {"name": "scntr", "description": "Sender cost center", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "segment": {"name": "segment", "description": "Segment for segmental reporting", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "sfarea": {"name": "sfarea", "description": "Partner functional area", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "tsl": {"name": "tsl", "description": "Value in transaction currency", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "wsl": {"name": "wsl", "description": "Value in original transaction currency", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "_fivetran_synced": {"name": "_fivetran_synced", "description": "Fivetran sync timestamp", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": "sap://models/staging/stg_sap.yml", "build_path": null, "unrendered_config": {"materialized": "view", "schema": "sap_{{ var('directed_schema','dev') }}", "enabled": true}, "created_at": 1756850330.84299, "relation_name": "\"postgres\".\"public_sap_dev\".\"stg_sap__faglflexa\"", "raw_code": "{{ config(enabled=var('sap_using_faglflexa', True)) }}\n\n{% set source_columns = adapter.get_columns_in_relation(ref('stg_sap__faglflexa_tmp')) %}\n\nwith base as (\n\n    select {{ remove_slashes_from_col_names(source_columns) }}\n    from {{ ref('stg_sap__faglflexa_tmp') }}\n),\n\nfields as (\n\n    select\n        {{\n            fivetran_utils.fill_staging_columns(\n                source_columns=source_columns,\n                staging_columns=get_faglflexa_columns()\n            )\n        }}\n    from base\n),\n\nfinal as (   \n\n    select\n        cast(rclnt as {{ dbt.type_string() }}) as rclnt,\n        ryear,\n        docnr,\n        cast(rldnr as {{ dbt.type_string() }}) as rldnr,\n        cast(rbukrs as {{ dbt.type_string() }}) as rbukrs,\n        docln,\n        activ,\n        rmvct,\n        rtcur,\n        runit,\n        awtyp,\n        rrcty,\n        rvers,\n        logsys,\n        racct,\n        cost_elem,\n        rcntr,\n        prctr,\n        rfarea,\n        rbusa,\n        kokrs,\n        segment,\n        scntr,\n        pprctr,\n        sfarea,\n        sbusa,\n        rassc,\n        psegment,\n        tsl,\n        hsl,\n        ksl,\n        osl,\n        msl,\n        wsl,\n        drcrk,\n        poper,\n        rwcur,\n        cast(gjahr as {{ dbt.type_string() }}) as gjahr,\n        budat,\n        cast(belnr as {{ dbt.type_string() }}) as belnr,\n        cast(buzei as {{ dbt.type_string() }}) as buzei,\n        bschl,\n        bstat,\n        faglflexa_timestamp,\n        _fivetran_synced\n    from fields\n)\n\nselect * \nfrom final", "doc_blocks": [], "language": "sql", "refs": [{"name": "stg_sap__faglflexa_tmp", "package": null, "version": null}, {"name": "stg_sap__faglflexa_tmp", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.sap.remove_slashes_from_col_names", "macro.sap.get_faglflexa_columns", "macro.fivetran_utils.fill_staging_columns", "macro.dbt.type_string"], "nodes": ["model.sap.stg_sap__faglflexa_tmp"]}, "compiled_path": "target/compiled/sap/models/staging/stg_sap__faglflexa.sql", "compiled": true, "compiled_code": "\n\n\n\nwith base as (\n\n    select \n        \"docln\" as docln,\n        \"docnr\" as docnr,\n        \"rbukrs\" as rbukrs,\n        \"rclnt\" as rclnt,\n        \"rldnr\" as rldnr,\n        \"ryear\" as ryear,\n        \"activ\" as activ,\n        \"rmvct\" as rmvct,\n        \"rtcur\" as rtcur,\n        \"runit\" as runit,\n        \"awtyp\" as awtyp,\n        \"rrcty\" as rrcty,\n        \"rvers\" as rvers,\n        \"logsys\" as logsys,\n        \"racct\" as racct,\n        \"cost_elem\" as cost_elem,\n        \"rcntr\" as rcntr,\n        \"prctr\" as prctr,\n        \"rfarea\" as rfarea,\n        \"rbusa\" as rbusa,\n        \"kokrs\" as kokrs,\n        \"segment\" as segment,\n        \"zzspreg\" as zzspreg,\n        \"scntr\" as scntr,\n        \"pprctr\" as pprctr,\n        \"sfarea\" as sfarea,\n        \"sbusa\" as sbusa,\n        \"rassc\" as rassc,\n        \"psegment\" as psegment,\n        \"tsl\" as tsl,\n        \"hsl\" as hsl,\n        \"ksl\" as ksl,\n        \"osl\" as osl,\n        \"msl\" as msl,\n        \"wsl\" as wsl,\n        \"drcrk\" as drcrk,\n        \"poper\" as poper,\n        \"rwcur\" as rwcur,\n        \"gjahr\" as gjahr,\n        \"budat\" as budat,\n        \"belnr\" as belnr,\n        \"buzei\" as buzei,\n        \"bschl\" as bschl,\n        \"bstat\" as bstat,\n        \"linetype\" as linetype,\n        \"xsplitmod\" as xsplitmod,\n        \"usnam\" as usnam,\n        \"timestamp\" as timestamp,\n        \"_fivetran_rowid\" as _fivetran_rowid,\n        \"_fivetran_deleted\" as _fivetran_deleted,\n        \"_fivetran_synced\" as _fivetran_synced\n    from \"postgres\".\"public_sap_dev\".\"stg_sap__faglflexa_tmp\"\n),\n\nfields as (\n\n    select\n        \n    \n    \n    _fivetran_deleted\n    \n as \n    \n    _fivetran_deleted\n    \n, \n    \n    \n    _fivetran_rowid\n    \n as \n    \n    _fivetran_rowid\n    \n, \n    \n    \n    _fivetran_synced\n    \n as \n    \n    _fivetran_synced\n    \n, \n    \n    \n    activ\n    \n as \n    \n    activ\n    \n, \n    \n    \n    awtyp\n    \n as \n    \n    awtyp\n    \n, \n    \n    \n    belnr\n    \n as \n    \n    belnr\n    \n, \n    \n    \n    bschl\n    \n as \n    \n    bschl\n    \n, \n    \n    \n    bstat\n    \n as \n    \n    bstat\n    \n, \n    \n    \n    budat\n    \n as \n    \n    budat\n    \n, \n    \n    \n    buzei\n    \n as \n    \n    buzei\n    \n, \n    \n    \n    cost_elem\n    \n as \n    \n    cost_elem\n    \n, \n    \n    \n    docln\n    \n as \n    \n    docln\n    \n, \n    \n    \n    docnr\n    \n as \n    \n    docnr\n    \n, \n    \n    \n    drcrk\n    \n as \n    \n    drcrk\n    \n, \n    \n    \n    gjahr\n    \n as \n    \n    gjahr\n    \n, \n    \n    \n    hsl\n    \n as \n    \n    hsl\n    \n, \n    \n    \n    kokrs\n    \n as \n    \n    kokrs\n    \n, \n    \n    \n    ksl\n    \n as \n    \n    ksl\n    \n, \n    \n    \n    linetype\n    \n as \n    \n    linetype\n    \n, \n    \n    \n    logsys\n    \n as \n    \n    logsys\n    \n, \n    \n    \n    msl\n    \n as \n    \n    msl\n    \n, \n    \n    \n    osl\n    \n as \n    \n    osl\n    \n, \n    \n    \n    poper\n    \n as \n    \n    poper\n    \n, \n    \n    \n    pprctr\n    \n as \n    \n    pprctr\n    \n, \n    \n    \n    prctr\n    \n as \n    \n    prctr\n    \n, \n    \n    \n    psegment\n    \n as \n    \n    psegment\n    \n, \n    \n    \n    racct\n    \n as \n    \n    racct\n    \n, \n    \n    \n    rassc\n    \n as \n    \n    rassc\n    \n, \n    \n    \n    rbukrs\n    \n as \n    \n    rbukrs\n    \n, \n    \n    \n    rbusa\n    \n as \n    \n    rbusa\n    \n, \n    \n    \n    rclnt\n    \n as \n    \n    rclnt\n    \n, \n    \n    \n    rcntr\n    \n as \n    \n    rcntr\n    \n, \n    \n    \n    rfarea\n    \n as \n    \n    rfarea\n    \n, \n    \n    \n    rldnr\n    \n as \n    \n    rldnr\n    \n, \n    \n    \n    rmvct\n    \n as \n    \n    rmvct\n    \n, \n    \n    \n    rrcty\n    \n as \n    \n    rrcty\n    \n, \n    \n    \n    rtcur\n    \n as \n    \n    rtcur\n    \n, \n    \n    \n    runit\n    \n as \n    \n    runit\n    \n, \n    \n    \n    rvers\n    \n as \n    \n    rvers\n    \n, \n    \n    \n    rwcur\n    \n as \n    \n    rwcur\n    \n, \n    \n    \n    ryear\n    \n as \n    \n    ryear\n    \n, \n    \n    \n    sbusa\n    \n as \n    \n    sbusa\n    \n, \n    \n    \n    scntr\n    \n as \n    \n    scntr\n    \n, \n    \n    \n    segment\n    \n as \n    \n    segment\n    \n, \n    \n    \n    sfarea\n    \n as \n    \n    sfarea\n    \n, \n    \n    \n    timestamp\n    \n as faglflexa_timestamp , \n    \n    \n    tsl\n    \n as \n    \n    tsl\n    \n, \n    \n    \n    usnam\n    \n as \n    \n    usnam\n    \n, \n    \n    \n    wsl\n    \n as \n    \n    wsl\n    \n, \n    \n    \n    xsplitmod\n    \n as \n    \n    xsplitmod\n    \n, \n    \n    \n    zzspreg\n    \n as \n    \n    zzspreg\n    \n\n\n\n    from base\n),\n\nfinal as (   \n\n    select\n        cast(rclnt as TEXT) as rclnt,\n        ryear,\n        docnr,\n        cast(rldnr as TEXT) as rldnr,\n        cast(rbukrs as TEXT) as rbukrs,\n        docln,\n        activ,\n        rmvct,\n        rtcur,\n        runit,\n        awtyp,\n        rrcty,\n        rvers,\n        logsys,\n        racct,\n        cost_elem,\n        rcntr,\n        prctr,\n        rfarea,\n        rbusa,\n        kokrs,\n        segment,\n        scntr,\n        pprctr,\n        sfarea,\n        sbusa,\n        rassc,\n        psegment,\n        tsl,\n        hsl,\n        ksl,\n        osl,\n        msl,\n        wsl,\n        drcrk,\n        poper,\n        rwcur,\n        cast(gjahr as TEXT) as gjahr,\n        budat,\n        cast(belnr as TEXT) as belnr,\n        cast(buzei as TEXT) as buzei,\n        bschl,\n        bstat,\n        faglflexa_timestamp,\n        _fivetran_synced\n    from fields\n)\n\nselect * \nfrom final", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null, "primary_key": [], "time_spine": null}, "model.sap.stg_sap__pa0008": {"database": "postgres", "schema": "public_sap_dev", "name": "stg_sap__pa0008", "resource_type": "model", "package_name": "sap", "path": "staging/stg_sap__pa0008.sql", "original_file_path": "models/staging/stg_sap__pa0008.sql", "unique_id": "model.sap.stg_sap__pa0008", "fqn": ["sap", "staging", "stg_sap__pa0008"], "alias": "stg_sap__pa0008", "checksum": {"name": "sha256", "checksum": "9f69f5cc06cacd74d451fc821b4999ff22e40924748681efeb17bda6340450b2"}, "config": {"enabled": true, "alias": null, "schema": "sap_dev", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "view", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "freshness": null}, "tags": [], "description": "HR master record--infotype 0008 (basic pay)", "columns": {"aedtm": {"name": "aedtm", "description": "Changed on", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "ancur": {"name": "ancur", "description": "Currency key for annual salary", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "ansal": {"name": "ansal", "description": "Annual salary", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "anz01": {"name": "anz01", "description": "Number/unit", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "anz02": {"name": "anz02", "description": "Number/unit", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "anz03": {"name": "anz03", "description": "Number/unit", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "anz04": {"name": "anz04", "description": "Number/unit", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "anz05": {"name": "anz05", "description": "Number/unit", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "anz06": {"name": "anz06", "description": "Number/unit", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "anz07": {"name": "anz07", "description": "Number/unit", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "anz08": {"name": "anz08", "description": "Number/unit", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "anz09": {"name": "anz09", "description": "Number/unit", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "anz10": {"name": "anz10", "description": "Number/unit", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "anz11": {"name": "anz11", "description": "Number/unit", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "anz12": {"name": "anz12", "description": "Number/unit", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "anz13": {"name": "anz13", "description": "Number/unit", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "anz14": {"name": "anz14", "description": "Number/unit", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "anz15": {"name": "anz15", "description": "Number/unit", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "anz16": {"name": "anz16", "description": "Number/unit", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "anz17": {"name": "anz17", "description": "Number/unit", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "anz18": {"name": "anz18", "description": "Number/unit", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "anz19": {"name": "anz19", "description": "Number/unit", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "anz20": {"name": "anz20", "description": "Number/unit", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "anz21": {"name": "anz21", "description": "Number/unit", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "anz22": {"name": "anz22", "description": "Number/unit", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "anz23": {"name": "anz23", "description": "Number/unit", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "anz24": {"name": "anz24", "description": "Number/unit", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "anz25": {"name": "anz25", "description": "Number/unit", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "anz26": {"name": "anz26", "description": "Number/unit", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "anz27": {"name": "anz27", "description": "Number/unit", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "anz28": {"name": "anz28", "description": "Number/unit", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "anz29": {"name": "anz29", "description": "Number/unit", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "anz30": {"name": "anz30", "description": "Number/unit", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "anz31": {"name": "anz31", "description": "Number/unit", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "anz32": {"name": "anz32", "description": "Number/unit", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "anz33": {"name": "anz33", "description": "Number/unit", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "anz34": {"name": "anz34", "description": "Number/unit", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "anz35": {"name": "anz35", "description": "Number/unit", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "anz36": {"name": "anz36", "description": "Number/unit", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "anz37": {"name": "anz37", "description": "Number/unit", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "anz38": {"name": "anz38", "description": "Number/unit", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "anz39": {"name": "anz39", "description": "Number/unit", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "anz40": {"name": "anz40", "description": "Number/unit", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "begda": {"name": "begda", "description": "Start date", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "bet01": {"name": "bet01", "description": "Wage type amount for payments", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "bet02": {"name": "bet02", "description": "Wage type amount for payments", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "bet03": {"name": "bet03", "description": "Wage type amount for payments", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "bet04": {"name": "bet04", "description": "Wage type amount for payments", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "bet05": {"name": "bet05", "description": "Wage type amount for payments", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "bet06": {"name": "bet06", "description": "Wage type amount for payments", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "bet07": {"name": "bet07", "description": "Wage type amount for payments", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "bet08": {"name": "bet08", "description": "Wage type amount for payments", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "bet09": {"name": "bet09", "description": "Wage type amount for payments", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "bet10": {"name": "bet10", "description": "Wage type amount for payments", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "bet11": {"name": "bet11", "description": "Wage type amount for payments", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "bet12": {"name": "bet12", "description": "Wage type amount for payments", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "bet13": {"name": "bet13", "description": "Wage type amount for payments", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "bet14": {"name": "bet14", "description": "Wage type amount for payments", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "bet15": {"name": "bet15", "description": "Wage type amount for payments", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "bet16": {"name": "bet16", "description": "Wage type amount for payments", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "bet17": {"name": "bet17", "description": "Wage type amount for payments", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "bet18": {"name": "bet18", "description": "Wage type amount for payments", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "bet19": {"name": "bet19", "description": "Wage type amount for payments", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "bet20": {"name": "bet20", "description": "Wage type amount for payments", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "bet21": {"name": "bet21", "description": "Wage type amount for payments", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "bet22": {"name": "bet22", "description": "Wage type amount for payments", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "bet23": {"name": "bet23", "description": "Wage type amount for payments", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "bet24": {"name": "bet24", "description": "Wage type amount for payments", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "bet25": {"name": "bet25", "description": "Wage type amount for payments", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "bet26": {"name": "bet26", "description": "Wage type amount for payments", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "bet27": {"name": "bet27", "description": "Wage type amount for payments", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "bet28": {"name": "bet28", "description": "Wage type amount for payments", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "bet29": {"name": "bet29", "description": "Wage type amount for payments", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "bet30": {"name": "bet30", "description": "Wage type amount for payments", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "bet31": {"name": "bet31", "description": "Wage type amount for payments", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "bet32": {"name": "bet32", "description": "Wage type amount for payments", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "bet33": {"name": "bet33", "description": "Wage type amount for payments", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "bet34": {"name": "bet34", "description": "Wage type amount for payments", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "bet35": {"name": "bet35", "description": "Wage type amount for payments", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "bet36": {"name": "bet36", "description": "Wage type amount for payments", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "bet37": {"name": "bet37", "description": "Wage type amount for payments", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "bet38": {"name": "bet38", "description": "Wage type amount for payments", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "bet39": {"name": "bet39", "description": "Wage type amount for payments", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "bet40": {"name": "bet40", "description": "Wage type amount for payments", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "bsgrd": {"name": "bsgrd", "description": "Capacity utilization level", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "cpind": {"name": "cpind", "description": "Planned compensation type", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "divgv": {"name": "divgv", "description": "Working hours per payroll period", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "ein01": {"name": "ein01", "description": "Time/measurement unit", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "ein02": {"name": "ein02", "description": "Time/measurement unit", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "ein03": {"name": "ein03", "description": "Time/measurement unit", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "ein04": {"name": "ein04", "description": "Time/measurement unit", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "ein05": {"name": "ein05", "description": "Time/measurement unit", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "ein06": {"name": "ein06", "description": "Time/measurement unit", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "ein07": {"name": "ein07", "description": "Time/measurement unit", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "ein08": {"name": "ein08", "description": "Time/measurement unit", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "ein09": {"name": "ein09", "description": "Time/measurement unit", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "ein10": {"name": "ein10", "description": "Time/measurement unit", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "ein11": {"name": "ein11", "description": "Time/measurement unit", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "ein12": {"name": "ein12", "description": "Time/measurement unit", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "ein13": {"name": "ein13", "description": "Time/measurement unit", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "ein14": {"name": "ein14", "description": "Time/measurement unit", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "ein15": {"name": "ein15", "description": "Time/measurement unit", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "ein16": {"name": "ein16", "description": "Time/measurement unit", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "ein17": {"name": "ein17", "description": "Time/measurement unit", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "ein18": {"name": "ein18", "description": "Time/measurement unit", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "ein19": {"name": "ein19", "description": "Time/measurement unit", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "ein20": {"name": "ein20", "description": "Time/measurement unit", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "ein21": {"name": "ein21", "description": "Time/measurement unit", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "ein22": {"name": "ein22", "description": "Time/measurement unit", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "ein23": {"name": "ein23", "description": "Time/measurement unit", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "ein24": {"name": "ein24", "description": "Time/measurement unit", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "ein25": {"name": "ein25", "description": "Time/measurement unit", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "ein26": {"name": "ein26", "description": "Time/measurement unit", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "ein27": {"name": "ein27", "description": "Time/measurement unit", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "ein28": {"name": "ein28", "description": "Time/measurement unit", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "ein29": {"name": "ein29", "description": "Time/measurement unit", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "ein30": {"name": "ein30", "description": "Time/measurement unit", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "ein31": {"name": "ein31", "description": "Time/measurement unit", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "ein32": {"name": "ein32", "description": "Time/measurement unit", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "ein33": {"name": "ein33", "description": "Time/measurement unit", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "ein34": {"name": "ein34", "description": "Time/measurement unit", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "ein35": {"name": "ein35", "description": "Time/measurement unit", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "ein36": {"name": "ein36", "description": "Time/measurement unit", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "ein37": {"name": "ein37", "description": "Time/measurement unit", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "ein38": {"name": "ein38", "description": "Time/measurement unit", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "ein39": {"name": "ein39", "description": "Time/measurement unit", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "ein40": {"name": "ein40", "description": "Time/measurement unit", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "endda": {"name": "endda", "description": "End date", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "falgk": {"name": "falgk", "description": "Case group catalog", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "falgr": {"name": "falgr", "description": "Case group", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "flag1": {"name": "flag1", "description": "Reserved field/unused field", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "flag2": {"name": "flag2", "description": "Reserved field/unused field", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "flag3": {"name": "flag3", "description": "Reserved field/unused field", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "flag4": {"name": "flag4", "description": "Reserved field/unused field", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "flaga": {"name": "flaga", "description": "General flag", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "grpvl": {"name": "grpvl", "description": "Grouping value for personnel assignments", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "histo": {"name": "histo", "description": "Historical record flag", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "ind01": {"name": "ind01", "description": "Indicator for indirect valuation", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "ind02": {"name": "ind02", "description": "Indicator for indirect valuation", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "ind03": {"name": "ind03", "description": "Indicator for indirect valuation", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "ind04": {"name": "ind04", "description": "Indicator for indirect valuation", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "ind05": {"name": "ind05", "description": "Indicator for indirect valuation", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "ind06": {"name": "ind06", "description": "Indicator for indirect valuation", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "ind07": {"name": "ind07", "description": "Indicator for indirect valuation", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "ind08": {"name": "ind08", "description": "Indicator for indirect valuation", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "ind09": {"name": "ind09", "description": "Indicator for indirect valuation", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "ind10": {"name": "ind10", "description": "Indicator for indirect valuation", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "ind11": {"name": "ind11", "description": "Indicator for indirect valuation", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "ind12": {"name": "ind12", "description": "Indicator for indirect valuation", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "ind13": {"name": "ind13", "description": "Indicator for indirect valuation", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "ind14": {"name": "ind14", "description": "Indicator for indirect valuation", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "ind15": {"name": "ind15", "description": "Indicator for indirect valuation", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "ind16": {"name": "ind16", "description": "Indicator for indirect valuation", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "ind17": {"name": "ind17", "description": "Indicator for indirect valuation", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "ind18": {"name": "ind18", "description": "Indicator for indirect valuation", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "ind19": {"name": "ind19", "description": "Indicator for indirect valuation", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "ind20": {"name": "ind20", "description": "Indicator for indirect valuation", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "ind21": {"name": "ind21", "description": "Indicator for indirect valuation", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "ind22": {"name": "ind22", "description": "Indicator for indirect valuation", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "ind23": {"name": "ind23", "description": "Indicator for indirect valuation", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "ind24": {"name": "ind24", "description": "Indicator for indirect valuation", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "ind25": {"name": "ind25", "description": "Indicator for indirect valuation", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "ind26": {"name": "ind26", "description": "Indicator for indirect valuation", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "ind27": {"name": "ind27", "description": "Indicator for indirect valuation", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "ind28": {"name": "ind28", "description": "Indicator for indirect valuation", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "ind29": {"name": "ind29", "description": "Indicator for indirect valuation", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "ind30": {"name": "ind30", "description": "Indicator for indirect valuation", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "ind31": {"name": "ind31", "description": "Indicator for indirect valuation", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "ind32": {"name": "ind32", "description": "Indicator for indirect valuation", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "ind33": {"name": "ind33", "description": "Indicator for indirect valuation", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "ind34": {"name": "ind34", "description": "Indicator for indirect valuation", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "ind35": {"name": "ind35", "description": "Indicator for indirect valuation", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "ind36": {"name": "ind36", "description": "Indicator for indirect valuation", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "ind37": {"name": "ind37", "description": "Indicator for indirect valuation", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "ind38": {"name": "ind38", "description": "Indicator for indirect valuation", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "ind39": {"name": "ind39", "description": "Indicator for indirect valuation", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "ind40": {"name": "ind40", "description": "Indicator for indirect valuation", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "itbld": {"name": "itbld", "description": "Infotype screen control", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "itxex": {"name": "itxex", "description": "Text exists for infotype", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "lga01": {"name": "lga01", "description": "Wage type", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "lga02": {"name": "lga02", "description": "Wage type", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "lga03": {"name": "lga03", "description": "Wage type", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "lga04": {"name": "lga04", "description": "Wage type", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "lga05": {"name": "lga05", "description": "Wage type", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "lga06": {"name": "lga06", "description": "Wage type", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "lga07": {"name": "lga07", "description": "Wage type", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "lga08": {"name": "lga08", "description": "Wage type", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "lga09": {"name": "lga09", "description": "Wage type", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "lga10": {"name": "lga10", "description": "Wage type", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "lga11": {"name": "lga11", "description": "Wage type", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "lga12": {"name": "lga12", "description": "Wage type", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "lga13": {"name": "lga13", "description": "Wage type", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "lga14": {"name": "lga14", "description": "Wage type", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "lga15": {"name": "lga15", "description": "Wage type", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "lga16": {"name": "lga16", "description": "Wage type", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "lga17": {"name": "lga17", "description": "Wage type", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "lga18": {"name": "lga18", "description": "Wage type", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "lga19": {"name": "lga19", "description": "Wage type", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "lga20": {"name": "lga20", "description": "Wage type", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "lga21": {"name": "lga21", "description": "Wage type", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "lga22": {"name": "lga22", "description": "Wage type", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "lga23": {"name": "lga23", "description": "Wage type", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "lga24": {"name": "lga24", "description": "Wage type", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "lga25": {"name": "lga25", "description": "Wage type", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "lga26": {"name": "lga26", "description": "Wage type", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "lga27": {"name": "lga27", "description": "Wage type", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "lga28": {"name": "lga28", "description": "Wage type", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "lga29": {"name": "lga29", "description": "Wage type", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "lga30": {"name": "lga30", "description": "Wage type", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "lga31": {"name": "lga31", "description": "Wage type", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "lga32": {"name": "lga32", "description": "Wage type", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "lga33": {"name": "lga33", "description": "Wage type", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "lga34": {"name": "lga34", "description": "Wage type", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "lga35": {"name": "lga35", "description": "Wage type", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "lga36": {"name": "lga36", "description": "Wage type", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "lga37": {"name": "lga37", "description": "Wage type", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "lga38": {"name": "lga38", "description": "Wage type", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "lga39": {"name": "lga39", "description": "Wage type", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "lga40": {"name": "lga40", "description": "Wage type", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "mandt": {"name": "mandt", "description": "Client", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "objps": {"name": "objps", "description": "Object identification", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "opk01": {"name": "opk01", "description": "Operation indicator for wage types", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "opk02": {"name": "opk02", "description": "Operation indicator for wage types", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "opk03": {"name": "opk03", "description": "Operation indicator for wage types", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "opk04": {"name": "opk04", "description": "Operation indicator for wage types", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "opk05": {"name": "opk05", "description": "Operation indicator for wage types", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "opk06": {"name": "opk06", "description": "Operation indicator for wage types", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "opk07": {"name": "opk07", "description": "Operation indicator for wage types", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "opk08": {"name": "opk08", "description": "Operation indicator for wage types", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "opk09": {"name": "opk09", "description": "Operation indicator for wage types", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "opk10": {"name": "opk10", "description": "Operation indicator for wage types", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "opk11": {"name": "opk11", "description": "Operation indicator for wage types", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "opk12": {"name": "opk12", "description": "Operation indicator for wage types", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "opk13": {"name": "opk13", "description": "Operation indicator for wage types", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "opk14": {"name": "opk14", "description": "Operation indicator for wage types", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "opk15": {"name": "opk15", "description": "Operation indicator for wage types", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "opk16": {"name": "opk16", "description": "Operation indicator for wage types", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "opk17": {"name": "opk17", "description": "Operation indicator for wage types", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "opk18": {"name": "opk18", "description": "Operation indicator for wage types", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "opk19": {"name": "opk19", "description": "Operation indicator for wage types", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "opk20": {"name": "opk20", "description": "Operation indicator for wage types", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "opk21": {"name": "opk21", "description": "Operation indicator for wage types", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "opk22": {"name": "opk22", "description": "Operation indicator for wage types", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "opk23": {"name": "opk23", "description": "Operation indicator for wage types", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "opk24": {"name": "opk24", "description": "Operation indicator for wage types", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "opk25": {"name": "opk25", "description": "Operation indicator for wage types", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "opk26": {"name": "opk26", "description": "Operation indicator for wage types", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "opk27": {"name": "opk27", "description": "Operation indicator for wage types", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "opk28": {"name": "opk28", "description": "Operation indicator for wage types", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "opk29": {"name": "opk29", "description": "Operation indicator for wage types", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "opk30": {"name": "opk30", "description": "Operation indicator for wage types", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "opk31": {"name": "opk31", "description": "Operation indicator for wage types", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "opk32": {"name": "opk32", "description": "Operation indicator for wage types", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "opk33": {"name": "opk33", "description": "Operation indicator for wage types", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "opk34": {"name": "opk34", "description": "Operation indicator for wage types", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "opk35": {"name": "opk35", "description": "Operation indicator for wage types", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "opk36": {"name": "opk36", "description": "Operation indicator for wage types", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "opk37": {"name": "opk37", "description": "Operation indicator for wage types", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "opk38": {"name": "opk38", "description": "Operation indicator for wage types", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "opk39": {"name": "opk39", "description": "Operation indicator for wage types", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "opk40": {"name": "opk40", "description": "Operation indicator for wage types", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "ordex": {"name": "ordex", "description": "Confirmation fields exist", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "orzst": {"name": "orzst", "description": "Cost of living allowance level", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "partn": {"name": "partn", "description": "Partnership", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "pernr": {"name": "pernr", "description": "Personnel number", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "preas": {"name": "preas", "description": "Reason for changing master data", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "refex": {"name": "refex", "description": "Reference fields exist (primary/secondary costs)", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "rese1": {"name": "rese1", "description": "Reserved field/unused field of length 2", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "rese2": {"name": "rese2", "description": "Reserved field/unused field of length 2", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "seqnr": {"name": "seqnr", "description": "Number of infotype record with same key", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "sprps": {"name": "sprps", "description": "Lock indicator for HR master data record", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "stvor": {"name": "stvor", "description": "Date of next increase", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "subty": {"name": "subty", "description": "Subtype", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "trfar": {"name": "trfar", "description": "Pay scale type", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "trfgb": {"name": "trfgb", "description": "Pay scale area", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "trfgr": {"name": "trfgr", "description": "Pay scale group", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "trfst": {"name": "trfst", "description": "Pay scale level", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "uname": {"name": "uname", "description": "Name of person who changed object", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "vglgb": {"name": "vglgb", "description": "Comparison pay scale area", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "vglgr": {"name": "vglgr", "description": "Comparison pay scale group", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "vglst": {"name": "vglst", "description": "Comparison pay scale level", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "vglsv": {"name": "vglsv", "description": "Date of next increase", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "vglta": {"name": "vglta", "description": "Comparison pay scale type", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "waers": {"name": "waers", "description": "Currency key", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": "sap://models/staging/stg_sap.yml", "build_path": null, "unrendered_config": {"materialized": "view", "schema": "sap_{{ var('directed_schema','dev') }}", "enabled": true}, "created_at": 1756850331.1123054, "relation_name": "\"postgres\".\"public_sap_dev\".\"stg_sap__pa0008\"", "raw_code": "{{ config(enabled=var('sap_using_pa0008', True)) }}\n\n{% set source_columns = adapter.get_columns_in_relation(ref('stg_sap__pa0008_tmp')) %}\n\nwith base as (\n\n    select {{ remove_slashes_from_col_names(source_columns) }}\n    from {{ ref('stg_sap__pa0008_tmp') }}\n),\n\nfields as (\n\n    select\n        {{\n            fivetran_utils.fill_staging_columns(\n                source_columns=source_columns,\n                staging_columns=get_pa0008_columns()\n            )\n        }}\n    from base\n),\n\nfinal as (\n    \n    select\n        cast(mandt as {{ dbt.type_string() }}) as mandt,\n        pernr,  \n        subty,\n        objps,\n        sprps,\n        endda,\n        begda,\n        seqnr,\n        aedtm,\n        ancur,\n        ansal,\n        anz01,\n        anz02,\n        anz03,\n        anz04,\n        anz05,\n        anz06,\n        anz07,\n        anz08,\n        anz09,\n        anz10,\n        anz11,\n        anz12,\n        anz13,\n        anz14,\n        anz15,\n        anz16,\n        anz17,\n        anz18,\n        anz19,\n        anz20,\n        anz21,\n        anz22,\n        anz23,\n        anz24,\n        anz25,\n        anz26,\n        anz27,\n        anz28,\n        anz29,\n        anz30,\n        anz31,\n        anz32,\n        anz33,\n        anz34,\n        anz35,\n        anz36,\n        anz37,\n        anz38,\n        anz39,\n        anz40,\n        bet01,\n        bet02,\n        bet03,\n        bet04,\n        bet05,\n        bet06,\n        bet07,\n        bet08,\n        bet09,\n        bet10,\n        bet11,\n        bet12,\n        bet13,\n        bet14,\n        bet15,\n        bet16,\n        bet17,\n        bet18,\n        bet19,\n        bet20,\n        bet21,\n        bet22,\n        bet23,\n        bet24,\n        bet25,\n        bet26,\n        bet27,\n        bet28,\n        bet29,\n        bet30,\n        bet31,\n        bet32,\n        bet33,\n        bet34,\n        bet35,\n        bet36,\n        bet37,\n        bet38,\n        bet39,\n        bet40,\n        bsgrd,\n        cpind,\n        divgv,\n        ein01,\n        ein02,\n        ein03,\n        ein04,\n        ein05,\n        ein06,\n        ein07,\n        ein08,\n        ein09,\n        ein10,\n        ein11,\n        ein12,\n        ein13,\n        ein14,\n        ein15,\n        ein16,\n        ein17,\n        ein18,\n        ein19,\n        ein20,\n        ein21,\n        ein22,\n        ein23,\n        ein24,\n        ein25,\n        ein26,\n        ein27,\n        ein28,\n        ein29,\n        ein30,\n        ein31,\n        ein32,\n        ein33,\n        ein34,\n        ein35,\n        ein36,\n        ein37,\n        ein38,\n        ein39,\n        ein40,\n        falgk,\n        falgr,\n        flag1,\n        flag2,\n        flag3,\n        flag4,\n        flaga,\n        grpvl,\n        histo,\n        ind01,\n        ind02,\n        ind03,\n        ind04,\n        ind05,\n        ind06,\n        ind07,\n        ind08,\n        ind09,\n        ind10,\n        ind11,\n        ind12,\n        ind13,\n        ind14,\n        ind15,\n        ind16,\n        ind17,\n        ind18,\n        ind19,\n        ind20,\n        ind21,\n        ind22,\n        ind23,\n        ind24,\n        ind25,\n        ind26,\n        ind27,\n        ind28,\n        ind29,\n        ind30,\n        ind31,\n        ind32,\n        ind33,\n        ind34,\n        ind35,\n        ind36,\n        ind37,\n        ind38,\n        ind39,\n        ind40,\n        itbld,\n        itxex,\n        lga01,\n        lga02,\n        lga03,\n        lga04,\n        lga05,\n        lga06,\n        lga07,\n        lga08,\n        lga09,\n        lga10,\n        lga11,\n        lga12,\n        lga13,\n        lga14,\n        lga15,\n        lga16,\n        lga17,\n        lga18,\n        lga19,\n        lga20,\n        lga21,\n        lga22,\n        lga23,\n        lga24,\n        lga25,\n        lga26,\n        lga27,\n        lga28,\n        lga29,\n        lga30,\n        lga31,\n        lga32,\n        lga33,\n        lga34,\n        lga35,\n        lga36,\n        lga37,\n        lga38,\n        lga39,\n        lga40,\n        opk01,\n        opk02,\n        opk03,\n        opk04,\n        opk05,\n        opk06,\n        opk07,\n        opk08,\n        opk09,\n        opk10,\n        opk11,\n        opk12,\n        opk13,\n        opk14,\n        opk15,\n        opk16,\n        opk17,\n        opk18,\n        opk19,\n        opk20,\n        opk21,\n        opk22,\n        opk23,\n        opk24,\n        opk25,\n        opk26,\n        opk27,\n        opk28,\n        opk29,\n        opk30,\n        opk31,\n        opk32,\n        opk33,\n        opk34,\n        opk35,\n        opk36,\n        opk37,\n        opk38,\n        opk39,\n        opk40,\n        ordex,\n        orzst,\n        partn,\n        preas,\n        refex,\n        rese1,\n        rese2,\n        stvor,\n        trfar,\n        trfgb,\n        trfgr,\n        trfst,\n        uname,\n        vglgb,\n        vglgr,\n        vglst,\n        vglsv,\n        vglta,\n        waers\n    from fields\n)\n\nselect *\nfrom final", "doc_blocks": [], "language": "sql", "refs": [{"name": "stg_sap__pa0008_tmp", "package": null, "version": null}, {"name": "stg_sap__pa0008_tmp", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.sap.remove_slashes_from_col_names", "macro.sap.get_pa0008_columns", "macro.fivetran_utils.fill_staging_columns", "macro.dbt.type_string"], "nodes": ["model.sap.stg_sap__pa0008_tmp"]}, "compiled_path": "target/compiled/sap/models/staging/stg_sap__pa0008.sql", "compiled": true, "compiled_code": "\n\n\n\nwith base as (\n\n    select \n        \"begda\" as begda,\n        \"endda\" as endda,\n        \"mandt\" as mandt,\n        \"objps\" as objps,\n        \"pernr\" as pernr,\n        \"seqnr\" as seqnr,\n        \"sprps\" as sprps,\n        \"subty\" as subty,\n        \"aedtm\" as aedtm,\n        \"uname\" as uname,\n        \"histo\" as histo,\n        \"itxex\" as itxex,\n        \"refex\" as refex,\n        \"ordex\" as ordex,\n        \"itbld\" as itbld,\n        \"preas\" as preas,\n        \"flag1\" as flag1,\n        \"flag2\" as flag2,\n        \"flag3\" as flag3,\n        \"flag4\" as flag4,\n        \"rese1\" as rese1,\n        \"rese2\" as rese2,\n        \"grpvl\" as grpvl,\n        \"trfar\" as trfar,\n        \"trfgb\" as trfgb,\n        \"trfgr\" as trfgr,\n        \"trfst\" as trfst,\n        \"stvor\" as stvor,\n        \"orzst\" as orzst,\n        \"partn\" as partn,\n        \"waers\" as waers,\n        \"vglta\" as vglta,\n        \"vglgb\" as vglgb,\n        \"vglgr\" as vglgr,\n        \"vglst\" as vglst,\n        \"vglsv\" as vglsv,\n        \"bsgrd\" as bsgrd,\n        \"divgv\" as divgv,\n        \"ansal\" as ansal,\n        \"falgk\" as falgk,\n        \"falgr\" as falgr,\n        \"lga01\" as lga01,\n        \"bet01\" as bet01,\n        \"anz01\" as anz01,\n        \"ein01\" as ein01,\n        \"opk01\" as opk01,\n        \"lga02\" as lga02,\n        \"bet02\" as bet02,\n        \"anz02\" as anz02,\n        \"ein02\" as ein02,\n        \"opk02\" as opk02,\n        \"lga03\" as lga03,\n        \"bet03\" as bet03,\n        \"anz03\" as anz03,\n        \"ein03\" as ein03,\n        \"opk03\" as opk03,\n        \"lga04\" as lga04,\n        \"bet04\" as bet04,\n        \"anz04\" as anz04,\n        \"ein04\" as ein04,\n        \"opk04\" as opk04,\n        \"lga05\" as lga05,\n        \"bet05\" as bet05,\n        \"anz05\" as anz05,\n        \"ein05\" as ein05,\n        \"opk05\" as opk05,\n        \"lga06\" as lga06,\n        \"bet06\" as bet06,\n        \"anz06\" as anz06,\n        \"ein06\" as ein06,\n        \"opk06\" as opk06,\n        \"lga07\" as lga07,\n        \"bet07\" as bet07,\n        \"anz07\" as anz07,\n        \"ein07\" as ein07,\n        \"opk07\" as opk07,\n        \"lga08\" as lga08,\n        \"bet08\" as bet08,\n        \"anz08\" as anz08,\n        \"ein08\" as ein08,\n        \"opk08\" as opk08,\n        \"lga09\" as lga09,\n        \"bet09\" as bet09,\n        \"anz09\" as anz09,\n        \"ein09\" as ein09,\n        \"opk09\" as opk09,\n        \"lga10\" as lga10,\n        \"bet10\" as bet10,\n        \"anz10\" as anz10,\n        \"ein10\" as ein10,\n        \"opk10\" as opk10,\n        \"lga11\" as lga11,\n        \"bet11\" as bet11,\n        \"anz11\" as anz11,\n        \"ein11\" as ein11,\n        \"opk11\" as opk11,\n        \"lga12\" as lga12,\n        \"bet12\" as bet12,\n        \"anz12\" as anz12,\n        \"ein12\" as ein12,\n        \"opk12\" as opk12,\n        \"lga13\" as lga13,\n        \"bet13\" as bet13,\n        \"anz13\" as anz13,\n        \"ein13\" as ein13,\n        \"opk13\" as opk13,\n        \"lga14\" as lga14,\n        \"bet14\" as bet14,\n        \"anz14\" as anz14,\n        \"ein14\" as ein14,\n        \"opk14\" as opk14,\n        \"lga15\" as lga15,\n        \"bet15\" as bet15,\n        \"anz15\" as anz15,\n        \"ein15\" as ein15,\n        \"opk15\" as opk15,\n        \"lga16\" as lga16,\n        \"bet16\" as bet16,\n        \"anz16\" as anz16,\n        \"ein16\" as ein16,\n        \"opk16\" as opk16,\n        \"lga17\" as lga17,\n        \"bet17\" as bet17,\n        \"anz17\" as anz17,\n        \"ein17\" as ein17,\n        \"opk17\" as opk17,\n        \"lga18\" as lga18,\n        \"bet18\" as bet18,\n        \"anz18\" as anz18,\n        \"ein18\" as ein18,\n        \"opk18\" as opk18,\n        \"lga19\" as lga19,\n        \"bet19\" as bet19,\n        \"anz19\" as anz19,\n        \"ein19\" as ein19,\n        \"opk19\" as opk19,\n        \"lga20\" as lga20,\n        \"bet20\" as bet20,\n        \"anz20\" as anz20,\n        \"ein20\" as ein20,\n        \"opk20\" as opk20,\n        \"lga21\" as lga21,\n        \"bet21\" as bet21,\n        \"anz21\" as anz21,\n        \"ein21\" as ein21,\n        \"opk21\" as opk21,\n        \"lga22\" as lga22,\n        \"bet22\" as bet22,\n        \"anz22\" as anz22,\n        \"ein22\" as ein22,\n        \"opk22\" as opk22,\n        \"lga23\" as lga23,\n        \"bet23\" as bet23,\n        \"anz23\" as anz23,\n        \"ein23\" as ein23,\n        \"opk23\" as opk23,\n        \"lga24\" as lga24,\n        \"bet24\" as bet24,\n        \"anz24\" as anz24,\n        \"ein24\" as ein24,\n        \"opk24\" as opk24,\n        \"lga25\" as lga25,\n        \"bet25\" as bet25,\n        \"anz25\" as anz25,\n        \"ein25\" as ein25,\n        \"opk25\" as opk25,\n        \"lga26\" as lga26,\n        \"bet26\" as bet26,\n        \"anz26\" as anz26,\n        \"ein26\" as ein26,\n        \"opk26\" as opk26,\n        \"lga27\" as lga27,\n        \"bet27\" as bet27,\n        \"anz27\" as anz27,\n        \"ein27\" as ein27,\n        \"opk27\" as opk27,\n        \"lga28\" as lga28,\n        \"bet28\" as bet28,\n        \"anz28\" as anz28,\n        \"ein28\" as ein28,\n        \"opk28\" as opk28,\n        \"lga29\" as lga29,\n        \"bet29\" as bet29,\n        \"anz29\" as anz29,\n        \"ein29\" as ein29,\n        \"opk29\" as opk29,\n        \"lga30\" as lga30,\n        \"bet30\" as bet30,\n        \"anz30\" as anz30,\n        \"ein30\" as ein30,\n        \"opk30\" as opk30,\n        \"lga31\" as lga31,\n        \"bet31\" as bet31,\n        \"anz31\" as anz31,\n        \"ein31\" as ein31,\n        \"opk31\" as opk31,\n        \"lga32\" as lga32,\n        \"bet32\" as bet32,\n        \"anz32\" as anz32,\n        \"ein32\" as ein32,\n        \"opk32\" as opk32,\n        \"lga33\" as lga33,\n        \"bet33\" as bet33,\n        \"anz33\" as anz33,\n        \"ein33\" as ein33,\n        \"opk33\" as opk33,\n        \"lga34\" as lga34,\n        \"bet34\" as bet34,\n        \"anz34\" as anz34,\n        \"ein34\" as ein34,\n        \"opk34\" as opk34,\n        \"lga35\" as lga35,\n        \"bet35\" as bet35,\n        \"anz35\" as anz35,\n        \"ein35\" as ein35,\n        \"opk35\" as opk35,\n        \"lga36\" as lga36,\n        \"bet36\" as bet36,\n        \"anz36\" as anz36,\n        \"ein36\" as ein36,\n        \"opk36\" as opk36,\n        \"lga37\" as lga37,\n        \"bet37\" as bet37,\n        \"anz37\" as anz37,\n        \"ein37\" as ein37,\n        \"opk37\" as opk37,\n        \"lga38\" as lga38,\n        \"bet38\" as bet38,\n        \"anz38\" as anz38,\n        \"ein38\" as ein38,\n        \"opk38\" as opk38,\n        \"lga39\" as lga39,\n        \"bet39\" as bet39,\n        \"anz39\" as anz39,\n        \"ein39\" as ein39,\n        \"opk39\" as opk39,\n        \"lga40\" as lga40,\n        \"bet40\" as bet40,\n        \"anz40\" as anz40,\n        \"ein40\" as ein40,\n        \"opk40\" as opk40,\n        \"ind01\" as ind01,\n        \"ind02\" as ind02,\n        \"ind03\" as ind03,\n        \"ind04\" as ind04,\n        \"ind05\" as ind05,\n        \"ind06\" as ind06,\n        \"ind07\" as ind07,\n        \"ind08\" as ind08,\n        \"ind09\" as ind09,\n        \"ind10\" as ind10,\n        \"ind11\" as ind11,\n        \"ind12\" as ind12,\n        \"ind13\" as ind13,\n        \"ind14\" as ind14,\n        \"ind15\" as ind15,\n        \"ind16\" as ind16,\n        \"ind17\" as ind17,\n        \"ind18\" as ind18,\n        \"ind19\" as ind19,\n        \"ind20\" as ind20,\n        \"ind21\" as ind21,\n        \"ind22\" as ind22,\n        \"ind23\" as ind23,\n        \"ind24\" as ind24,\n        \"ind25\" as ind25,\n        \"ind26\" as ind26,\n        \"ind27\" as ind27,\n        \"ind28\" as ind28,\n        \"ind29\" as ind29,\n        \"ind30\" as ind30,\n        \"ind31\" as ind31,\n        \"ind32\" as ind32,\n        \"ind33\" as ind33,\n        \"ind34\" as ind34,\n        \"ind35\" as ind35,\n        \"ind36\" as ind36,\n        \"ind37\" as ind37,\n        \"ind38\" as ind38,\n        \"ind39\" as ind39,\n        \"ind40\" as ind40,\n        \"ancur\" as ancur,\n        \"cpind\" as cpind,\n        \"flaga\" as flaga,\n        \"_fivetran_rowid\" as _fivetran_rowid,\n        \"_fivetran_deleted\" as _fivetran_deleted,\n        \"_fivetran_synced\" as _fivetran_synced\n    from \"postgres\".\"public_sap_dev\".\"stg_sap__pa0008_tmp\"\n),\n\nfields as (\n\n    select\n        \n    \n    \n    _fivetran_deleted\n    \n as \n    \n    _fivetran_deleted\n    \n, \n    \n    \n    _fivetran_rowid\n    \n as \n    \n    _fivetran_rowid\n    \n, \n    \n    \n    _fivetran_synced\n    \n as \n    \n    _fivetran_synced\n    \n, \n    \n    \n    aedtm\n    \n as \n    \n    aedtm\n    \n, \n    \n    \n    ancur\n    \n as \n    \n    ancur\n    \n, \n    \n    \n    ansal\n    \n as \n    \n    ansal\n    \n, \n    \n    \n    anz01\n    \n as \n    \n    anz01\n    \n, \n    \n    \n    anz02\n    \n as \n    \n    anz02\n    \n, \n    \n    \n    anz03\n    \n as \n    \n    anz03\n    \n, \n    \n    \n    anz04\n    \n as \n    \n    anz04\n    \n, \n    \n    \n    anz05\n    \n as \n    \n    anz05\n    \n, \n    \n    \n    anz06\n    \n as \n    \n    anz06\n    \n, \n    \n    \n    anz07\n    \n as \n    \n    anz07\n    \n, \n    \n    \n    anz08\n    \n as \n    \n    anz08\n    \n, \n    \n    \n    anz09\n    \n as \n    \n    anz09\n    \n, \n    \n    \n    anz10\n    \n as \n    \n    anz10\n    \n, \n    \n    \n    anz11\n    \n as \n    \n    anz11\n    \n, \n    \n    \n    anz12\n    \n as \n    \n    anz12\n    \n, \n    \n    \n    anz13\n    \n as \n    \n    anz13\n    \n, \n    \n    \n    anz14\n    \n as \n    \n    anz14\n    \n, \n    \n    \n    anz15\n    \n as \n    \n    anz15\n    \n, \n    \n    \n    anz16\n    \n as \n    \n    anz16\n    \n, \n    \n    \n    anz17\n    \n as \n    \n    anz17\n    \n, \n    \n    \n    anz18\n    \n as \n    \n    anz18\n    \n, \n    \n    \n    anz19\n    \n as \n    \n    anz19\n    \n, \n    \n    \n    anz20\n    \n as \n    \n    anz20\n    \n, \n    \n    \n    anz21\n    \n as \n    \n    anz21\n    \n, \n    \n    \n    anz22\n    \n as \n    \n    anz22\n    \n, \n    \n    \n    anz23\n    \n as \n    \n    anz23\n    \n, \n    \n    \n    anz24\n    \n as \n    \n    anz24\n    \n, \n    \n    \n    anz25\n    \n as \n    \n    anz25\n    \n, \n    \n    \n    anz26\n    \n as \n    \n    anz26\n    \n, \n    \n    \n    anz27\n    \n as \n    \n    anz27\n    \n, \n    \n    \n    anz28\n    \n as \n    \n    anz28\n    \n, \n    \n    \n    anz29\n    \n as \n    \n    anz29\n    \n, \n    \n    \n    anz30\n    \n as \n    \n    anz30\n    \n, \n    \n    \n    anz31\n    \n as \n    \n    anz31\n    \n, \n    \n    \n    anz32\n    \n as \n    \n    anz32\n    \n, \n    \n    \n    anz33\n    \n as \n    \n    anz33\n    \n, \n    \n    \n    anz34\n    \n as \n    \n    anz34\n    \n, \n    \n    \n    anz35\n    \n as \n    \n    anz35\n    \n, \n    \n    \n    anz36\n    \n as \n    \n    anz36\n    \n, \n    \n    \n    anz37\n    \n as \n    \n    anz37\n    \n, \n    \n    \n    anz38\n    \n as \n    \n    anz38\n    \n, \n    \n    \n    anz39\n    \n as \n    \n    anz39\n    \n, \n    \n    \n    anz40\n    \n as \n    \n    anz40\n    \n, \n    \n    \n    begda\n    \n as \n    \n    begda\n    \n, \n    \n    \n    bet01\n    \n as \n    \n    bet01\n    \n, \n    \n    \n    bet02\n    \n as \n    \n    bet02\n    \n, \n    \n    \n    bet03\n    \n as \n    \n    bet03\n    \n, \n    \n    \n    bet04\n    \n as \n    \n    bet04\n    \n, \n    \n    \n    bet05\n    \n as \n    \n    bet05\n    \n, \n    \n    \n    bet06\n    \n as \n    \n    bet06\n    \n, \n    \n    \n    bet07\n    \n as \n    \n    bet07\n    \n, \n    \n    \n    bet08\n    \n as \n    \n    bet08\n    \n, \n    \n    \n    bet09\n    \n as \n    \n    bet09\n    \n, \n    \n    \n    bet10\n    \n as \n    \n    bet10\n    \n, \n    \n    \n    bet11\n    \n as \n    \n    bet11\n    \n, \n    \n    \n    bet12\n    \n as \n    \n    bet12\n    \n, \n    \n    \n    bet13\n    \n as \n    \n    bet13\n    \n, \n    \n    \n    bet14\n    \n as \n    \n    bet14\n    \n, \n    \n    \n    bet15\n    \n as \n    \n    bet15\n    \n, \n    \n    \n    bet16\n    \n as \n    \n    bet16\n    \n, \n    \n    \n    bet17\n    \n as \n    \n    bet17\n    \n, \n    \n    \n    bet18\n    \n as \n    \n    bet18\n    \n, \n    \n    \n    bet19\n    \n as \n    \n    bet19\n    \n, \n    \n    \n    bet20\n    \n as \n    \n    bet20\n    \n, \n    \n    \n    bet21\n    \n as \n    \n    bet21\n    \n, \n    \n    \n    bet22\n    \n as \n    \n    bet22\n    \n, \n    \n    \n    bet23\n    \n as \n    \n    bet23\n    \n, \n    \n    \n    bet24\n    \n as \n    \n    bet24\n    \n, \n    \n    \n    bet25\n    \n as \n    \n    bet25\n    \n, \n    \n    \n    bet26\n    \n as \n    \n    bet26\n    \n, \n    \n    \n    bet27\n    \n as \n    \n    bet27\n    \n, \n    \n    \n    bet28\n    \n as \n    \n    bet28\n    \n, \n    \n    \n    bet29\n    \n as \n    \n    bet29\n    \n, \n    \n    \n    bet30\n    \n as \n    \n    bet30\n    \n, \n    \n    \n    bet31\n    \n as \n    \n    bet31\n    \n, \n    \n    \n    bet32\n    \n as \n    \n    bet32\n    \n, \n    \n    \n    bet33\n    \n as \n    \n    bet33\n    \n, \n    \n    \n    bet34\n    \n as \n    \n    bet34\n    \n, \n    \n    \n    bet35\n    \n as \n    \n    bet35\n    \n, \n    \n    \n    bet36\n    \n as \n    \n    bet36\n    \n, \n    \n    \n    bet37\n    \n as \n    \n    bet37\n    \n, \n    \n    \n    bet38\n    \n as \n    \n    bet38\n    \n, \n    \n    \n    bet39\n    \n as \n    \n    bet39\n    \n, \n    \n    \n    bet40\n    \n as \n    \n    bet40\n    \n, \n    \n    \n    bsgrd\n    \n as \n    \n    bsgrd\n    \n, \n    \n    \n    cpind\n    \n as \n    \n    cpind\n    \n, \n    \n    \n    divgv\n    \n as \n    \n    divgv\n    \n, \n    \n    \n    ein01\n    \n as \n    \n    ein01\n    \n, \n    \n    \n    ein02\n    \n as \n    \n    ein02\n    \n, \n    \n    \n    ein03\n    \n as \n    \n    ein03\n    \n, \n    \n    \n    ein04\n    \n as \n    \n    ein04\n    \n, \n    \n    \n    ein05\n    \n as \n    \n    ein05\n    \n, \n    \n    \n    ein06\n    \n as \n    \n    ein06\n    \n, \n    \n    \n    ein07\n    \n as \n    \n    ein07\n    \n, \n    \n    \n    ein08\n    \n as \n    \n    ein08\n    \n, \n    \n    \n    ein09\n    \n as \n    \n    ein09\n    \n, \n    \n    \n    ein10\n    \n as \n    \n    ein10\n    \n, \n    \n    \n    ein11\n    \n as \n    \n    ein11\n    \n, \n    \n    \n    ein12\n    \n as \n    \n    ein12\n    \n, \n    \n    \n    ein13\n    \n as \n    \n    ein13\n    \n, \n    \n    \n    ein14\n    \n as \n    \n    ein14\n    \n, \n    \n    \n    ein15\n    \n as \n    \n    ein15\n    \n, \n    \n    \n    ein16\n    \n as \n    \n    ein16\n    \n, \n    \n    \n    ein17\n    \n as \n    \n    ein17\n    \n, \n    \n    \n    ein18\n    \n as \n    \n    ein18\n    \n, \n    \n    \n    ein19\n    \n as \n    \n    ein19\n    \n, \n    \n    \n    ein20\n    \n as \n    \n    ein20\n    \n, \n    \n    \n    ein21\n    \n as \n    \n    ein21\n    \n, \n    \n    \n    ein22\n    \n as \n    \n    ein22\n    \n, \n    \n    \n    ein23\n    \n as \n    \n    ein23\n    \n, \n    \n    \n    ein24\n    \n as \n    \n    ein24\n    \n, \n    \n    \n    ein25\n    \n as \n    \n    ein25\n    \n, \n    \n    \n    ein26\n    \n as \n    \n    ein26\n    \n, \n    \n    \n    ein27\n    \n as \n    \n    ein27\n    \n, \n    \n    \n    ein28\n    \n as \n    \n    ein28\n    \n, \n    \n    \n    ein29\n    \n as \n    \n    ein29\n    \n, \n    \n    \n    ein30\n    \n as \n    \n    ein30\n    \n, \n    \n    \n    ein31\n    \n as \n    \n    ein31\n    \n, \n    \n    \n    ein32\n    \n as \n    \n    ein32\n    \n, \n    \n    \n    ein33\n    \n as \n    \n    ein33\n    \n, \n    \n    \n    ein34\n    \n as \n    \n    ein34\n    \n, \n    \n    \n    ein35\n    \n as \n    \n    ein35\n    \n, \n    \n    \n    ein36\n    \n as \n    \n    ein36\n    \n, \n    \n    \n    ein37\n    \n as \n    \n    ein37\n    \n, \n    \n    \n    ein38\n    \n as \n    \n    ein38\n    \n, \n    \n    \n    ein39\n    \n as \n    \n    ein39\n    \n, \n    \n    \n    ein40\n    \n as \n    \n    ein40\n    \n, \n    \n    \n    endda\n    \n as \n    \n    endda\n    \n, \n    \n    \n    falgk\n    \n as \n    \n    falgk\n    \n, \n    \n    \n    falgr\n    \n as \n    \n    falgr\n    \n, \n    \n    \n    flag1\n    \n as \n    \n    flag1\n    \n, \n    \n    \n    flag2\n    \n as \n    \n    flag2\n    \n, \n    \n    \n    flag3\n    \n as \n    \n    flag3\n    \n, \n    \n    \n    flag4\n    \n as \n    \n    flag4\n    \n, \n    \n    \n    flaga\n    \n as \n    \n    flaga\n    \n, \n    \n    \n    grpvl\n    \n as \n    \n    grpvl\n    \n, \n    \n    \n    histo\n    \n as \n    \n    histo\n    \n, \n    \n    \n    ind01\n    \n as \n    \n    ind01\n    \n, \n    \n    \n    ind02\n    \n as \n    \n    ind02\n    \n, \n    \n    \n    ind03\n    \n as \n    \n    ind03\n    \n, \n    \n    \n    ind04\n    \n as \n    \n    ind04\n    \n, \n    \n    \n    ind05\n    \n as \n    \n    ind05\n    \n, \n    \n    \n    ind06\n    \n as \n    \n    ind06\n    \n, \n    \n    \n    ind07\n    \n as \n    \n    ind07\n    \n, \n    \n    \n    ind08\n    \n as \n    \n    ind08\n    \n, \n    \n    \n    ind09\n    \n as \n    \n    ind09\n    \n, \n    \n    \n    ind10\n    \n as \n    \n    ind10\n    \n, \n    \n    \n    ind11\n    \n as \n    \n    ind11\n    \n, \n    \n    \n    ind12\n    \n as \n    \n    ind12\n    \n, \n    \n    \n    ind13\n    \n as \n    \n    ind13\n    \n, \n    \n    \n    ind14\n    \n as \n    \n    ind14\n    \n, \n    \n    \n    ind15\n    \n as \n    \n    ind15\n    \n, \n    \n    \n    ind16\n    \n as \n    \n    ind16\n    \n, \n    \n    \n    ind17\n    \n as \n    \n    ind17\n    \n, \n    \n    \n    ind18\n    \n as \n    \n    ind18\n    \n, \n    \n    \n    ind19\n    \n as \n    \n    ind19\n    \n, \n    \n    \n    ind20\n    \n as \n    \n    ind20\n    \n, \n    \n    \n    ind21\n    \n as \n    \n    ind21\n    \n, \n    \n    \n    ind22\n    \n as \n    \n    ind22\n    \n, \n    \n    \n    ind23\n    \n as \n    \n    ind23\n    \n, \n    \n    \n    ind24\n    \n as \n    \n    ind24\n    \n, \n    \n    \n    ind25\n    \n as \n    \n    ind25\n    \n, \n    \n    \n    ind26\n    \n as \n    \n    ind26\n    \n, \n    \n    \n    ind27\n    \n as \n    \n    ind27\n    \n, \n    \n    \n    ind28\n    \n as \n    \n    ind28\n    \n, \n    \n    \n    ind29\n    \n as \n    \n    ind29\n    \n, \n    \n    \n    ind30\n    \n as \n    \n    ind30\n    \n, \n    \n    \n    ind31\n    \n as \n    \n    ind31\n    \n, \n    \n    \n    ind32\n    \n as \n    \n    ind32\n    \n, \n    \n    \n    ind33\n    \n as \n    \n    ind33\n    \n, \n    \n    \n    ind34\n    \n as \n    \n    ind34\n    \n, \n    \n    \n    ind35\n    \n as \n    \n    ind35\n    \n, \n    \n    \n    ind36\n    \n as \n    \n    ind36\n    \n, \n    \n    \n    ind37\n    \n as \n    \n    ind37\n    \n, \n    \n    \n    ind38\n    \n as \n    \n    ind38\n    \n, \n    \n    \n    ind39\n    \n as \n    \n    ind39\n    \n, \n    \n    \n    ind40\n    \n as \n    \n    ind40\n    \n, \n    \n    \n    itbld\n    \n as \n    \n    itbld\n    \n, \n    \n    \n    itxex\n    \n as \n    \n    itxex\n    \n, \n    \n    \n    lga01\n    \n as \n    \n    lga01\n    \n, \n    \n    \n    lga02\n    \n as \n    \n    lga02\n    \n, \n    \n    \n    lga03\n    \n as \n    \n    lga03\n    \n, \n    \n    \n    lga04\n    \n as \n    \n    lga04\n    \n, \n    \n    \n    lga05\n    \n as \n    \n    lga05\n    \n, \n    \n    \n    lga06\n    \n as \n    \n    lga06\n    \n, \n    \n    \n    lga07\n    \n as \n    \n    lga07\n    \n, \n    \n    \n    lga08\n    \n as \n    \n    lga08\n    \n, \n    \n    \n    lga09\n    \n as \n    \n    lga09\n    \n, \n    \n    \n    lga10\n    \n as \n    \n    lga10\n    \n, \n    \n    \n    lga11\n    \n as \n    \n    lga11\n    \n, \n    \n    \n    lga12\n    \n as \n    \n    lga12\n    \n, \n    \n    \n    lga13\n    \n as \n    \n    lga13\n    \n, \n    \n    \n    lga14\n    \n as \n    \n    lga14\n    \n, \n    \n    \n    lga15\n    \n as \n    \n    lga15\n    \n, \n    \n    \n    lga16\n    \n as \n    \n    lga16\n    \n, \n    \n    \n    lga17\n    \n as \n    \n    lga17\n    \n, \n    \n    \n    lga18\n    \n as \n    \n    lga18\n    \n, \n    \n    \n    lga19\n    \n as \n    \n    lga19\n    \n, \n    \n    \n    lga20\n    \n as \n    \n    lga20\n    \n, \n    \n    \n    lga21\n    \n as \n    \n    lga21\n    \n, \n    \n    \n    lga22\n    \n as \n    \n    lga22\n    \n, \n    \n    \n    lga23\n    \n as \n    \n    lga23\n    \n, \n    \n    \n    lga24\n    \n as \n    \n    lga24\n    \n, \n    \n    \n    lga25\n    \n as \n    \n    lga25\n    \n, \n    \n    \n    lga26\n    \n as \n    \n    lga26\n    \n, \n    \n    \n    lga27\n    \n as \n    \n    lga27\n    \n, \n    \n    \n    lga28\n    \n as \n    \n    lga28\n    \n, \n    \n    \n    lga29\n    \n as \n    \n    lga29\n    \n, \n    \n    \n    lga30\n    \n as \n    \n    lga30\n    \n, \n    \n    \n    lga31\n    \n as \n    \n    lga31\n    \n, \n    \n    \n    lga32\n    \n as \n    \n    lga32\n    \n, \n    \n    \n    lga33\n    \n as \n    \n    lga33\n    \n, \n    \n    \n    lga34\n    \n as \n    \n    lga34\n    \n, \n    \n    \n    lga35\n    \n as \n    \n    lga35\n    \n, \n    \n    \n    lga36\n    \n as \n    \n    lga36\n    \n, \n    \n    \n    lga37\n    \n as \n    \n    lga37\n    \n, \n    \n    \n    lga38\n    \n as \n    \n    lga38\n    \n, \n    \n    \n    lga39\n    \n as \n    \n    lga39\n    \n, \n    \n    \n    lga40\n    \n as \n    \n    lga40\n    \n, \n    \n    \n    mandt\n    \n as \n    \n    mandt\n    \n, \n    \n    \n    objps\n    \n as \n    \n    objps\n    \n, \n    \n    \n    opk01\n    \n as \n    \n    opk01\n    \n, \n    \n    \n    opk02\n    \n as \n    \n    opk02\n    \n, \n    \n    \n    opk03\n    \n as \n    \n    opk03\n    \n, \n    \n    \n    opk04\n    \n as \n    \n    opk04\n    \n, \n    \n    \n    opk05\n    \n as \n    \n    opk05\n    \n, \n    \n    \n    opk06\n    \n as \n    \n    opk06\n    \n, \n    \n    \n    opk07\n    \n as \n    \n    opk07\n    \n, \n    \n    \n    opk08\n    \n as \n    \n    opk08\n    \n, \n    \n    \n    opk09\n    \n as \n    \n    opk09\n    \n, \n    \n    \n    opk10\n    \n as \n    \n    opk10\n    \n, \n    \n    \n    opk11\n    \n as \n    \n    opk11\n    \n, \n    \n    \n    opk12\n    \n as \n    \n    opk12\n    \n, \n    \n    \n    opk13\n    \n as \n    \n    opk13\n    \n, \n    \n    \n    opk14\n    \n as \n    \n    opk14\n    \n, \n    \n    \n    opk15\n    \n as \n    \n    opk15\n    \n, \n    \n    \n    opk16\n    \n as \n    \n    opk16\n    \n, \n    \n    \n    opk17\n    \n as \n    \n    opk17\n    \n, \n    \n    \n    opk18\n    \n as \n    \n    opk18\n    \n, \n    \n    \n    opk19\n    \n as \n    \n    opk19\n    \n, \n    \n    \n    opk20\n    \n as \n    \n    opk20\n    \n, \n    \n    \n    opk21\n    \n as \n    \n    opk21\n    \n, \n    \n    \n    opk22\n    \n as \n    \n    opk22\n    \n, \n    \n    \n    opk23\n    \n as \n    \n    opk23\n    \n, \n    \n    \n    opk24\n    \n as \n    \n    opk24\n    \n, \n    \n    \n    opk25\n    \n as \n    \n    opk25\n    \n, \n    \n    \n    opk26\n    \n as \n    \n    opk26\n    \n, \n    \n    \n    opk27\n    \n as \n    \n    opk27\n    \n, \n    \n    \n    opk28\n    \n as \n    \n    opk28\n    \n, \n    \n    \n    opk29\n    \n as \n    \n    opk29\n    \n, \n    \n    \n    opk30\n    \n as \n    \n    opk30\n    \n, \n    \n    \n    opk31\n    \n as \n    \n    opk31\n    \n, \n    \n    \n    opk32\n    \n as \n    \n    opk32\n    \n, \n    \n    \n    opk33\n    \n as \n    \n    opk33\n    \n, \n    \n    \n    opk34\n    \n as \n    \n    opk34\n    \n, \n    \n    \n    opk35\n    \n as \n    \n    opk35\n    \n, \n    \n    \n    opk36\n    \n as \n    \n    opk36\n    \n, \n    \n    \n    opk37\n    \n as \n    \n    opk37\n    \n, \n    \n    \n    opk38\n    \n as \n    \n    opk38\n    \n, \n    \n    \n    opk39\n    \n as \n    \n    opk39\n    \n, \n    \n    \n    opk40\n    \n as \n    \n    opk40\n    \n, \n    \n    \n    ordex\n    \n as \n    \n    ordex\n    \n, \n    \n    \n    orzst\n    \n as \n    \n    orzst\n    \n, \n    \n    \n    partn\n    \n as \n    \n    partn\n    \n, \n    \n    \n    pernr\n    \n as \n    \n    pernr\n    \n, \n    \n    \n    preas\n    \n as \n    \n    preas\n    \n, \n    \n    \n    refex\n    \n as \n    \n    refex\n    \n, \n    \n    \n    rese1\n    \n as \n    \n    rese1\n    \n, \n    \n    \n    rese2\n    \n as \n    \n    rese2\n    \n, \n    \n    \n    seqnr\n    \n as \n    \n    seqnr\n    \n, \n    \n    \n    sprps\n    \n as \n    \n    sprps\n    \n, \n    \n    \n    stvor\n    \n as \n    \n    stvor\n    \n, \n    \n    \n    subty\n    \n as \n    \n    subty\n    \n, \n    \n    \n    trfar\n    \n as \n    \n    trfar\n    \n, \n    \n    \n    trfgb\n    \n as \n    \n    trfgb\n    \n, \n    \n    \n    trfgr\n    \n as \n    \n    trfgr\n    \n, \n    \n    \n    trfst\n    \n as \n    \n    trfst\n    \n, \n    \n    \n    uname\n    \n as \n    \n    uname\n    \n, \n    \n    \n    vglgb\n    \n as \n    \n    vglgb\n    \n, \n    \n    \n    vglgr\n    \n as \n    \n    vglgr\n    \n, \n    \n    \n    vglst\n    \n as \n    \n    vglst\n    \n, \n    \n    \n    vglsv\n    \n as \n    \n    vglsv\n    \n, \n    \n    \n    vglta\n    \n as \n    \n    vglta\n    \n, \n    \n    \n    waers\n    \n as \n    \n    waers\n    \n\n\n\n    from base\n),\n\nfinal as (\n    \n    select\n        cast(mandt as TEXT) as mandt,\n        pernr,  \n        subty,\n        objps,\n        sprps,\n        endda,\n        begda,\n        seqnr,\n        aedtm,\n        ancur,\n        ansal,\n        anz01,\n        anz02,\n        anz03,\n        anz04,\n        anz05,\n        anz06,\n        anz07,\n        anz08,\n        anz09,\n        anz10,\n        anz11,\n        anz12,\n        anz13,\n        anz14,\n        anz15,\n        anz16,\n        anz17,\n        anz18,\n        anz19,\n        anz20,\n        anz21,\n        anz22,\n        anz23,\n        anz24,\n        anz25,\n        anz26,\n        anz27,\n        anz28,\n        anz29,\n        anz30,\n        anz31,\n        anz32,\n        anz33,\n        anz34,\n        anz35,\n        anz36,\n        anz37,\n        anz38,\n        anz39,\n        anz40,\n        bet01,\n        bet02,\n        bet03,\n        bet04,\n        bet05,\n        bet06,\n        bet07,\n        bet08,\n        bet09,\n        bet10,\n        bet11,\n        bet12,\n        bet13,\n        bet14,\n        bet15,\n        bet16,\n        bet17,\n        bet18,\n        bet19,\n        bet20,\n        bet21,\n        bet22,\n        bet23,\n        bet24,\n        bet25,\n        bet26,\n        bet27,\n        bet28,\n        bet29,\n        bet30,\n        bet31,\n        bet32,\n        bet33,\n        bet34,\n        bet35,\n        bet36,\n        bet37,\n        bet38,\n        bet39,\n        bet40,\n        bsgrd,\n        cpind,\n        divgv,\n        ein01,\n        ein02,\n        ein03,\n        ein04,\n        ein05,\n        ein06,\n        ein07,\n        ein08,\n        ein09,\n        ein10,\n        ein11,\n        ein12,\n        ein13,\n        ein14,\n        ein15,\n        ein16,\n        ein17,\n        ein18,\n        ein19,\n        ein20,\n        ein21,\n        ein22,\n        ein23,\n        ein24,\n        ein25,\n        ein26,\n        ein27,\n        ein28,\n        ein29,\n        ein30,\n        ein31,\n        ein32,\n        ein33,\n        ein34,\n        ein35,\n        ein36,\n        ein37,\n        ein38,\n        ein39,\n        ein40,\n        falgk,\n        falgr,\n        flag1,\n        flag2,\n        flag3,\n        flag4,\n        flaga,\n        grpvl,\n        histo,\n        ind01,\n        ind02,\n        ind03,\n        ind04,\n        ind05,\n        ind06,\n        ind07,\n        ind08,\n        ind09,\n        ind10,\n        ind11,\n        ind12,\n        ind13,\n        ind14,\n        ind15,\n        ind16,\n        ind17,\n        ind18,\n        ind19,\n        ind20,\n        ind21,\n        ind22,\n        ind23,\n        ind24,\n        ind25,\n        ind26,\n        ind27,\n        ind28,\n        ind29,\n        ind30,\n        ind31,\n        ind32,\n        ind33,\n        ind34,\n        ind35,\n        ind36,\n        ind37,\n        ind38,\n        ind39,\n        ind40,\n        itbld,\n        itxex,\n        lga01,\n        lga02,\n        lga03,\n        lga04,\n        lga05,\n        lga06,\n        lga07,\n        lga08,\n        lga09,\n        lga10,\n        lga11,\n        lga12,\n        lga13,\n        lga14,\n        lga15,\n        lga16,\n        lga17,\n        lga18,\n        lga19,\n        lga20,\n        lga21,\n        lga22,\n        lga23,\n        lga24,\n        lga25,\n        lga26,\n        lga27,\n        lga28,\n        lga29,\n        lga30,\n        lga31,\n        lga32,\n        lga33,\n        lga34,\n        lga35,\n        lga36,\n        lga37,\n        lga38,\n        lga39,\n        lga40,\n        opk01,\n        opk02,\n        opk03,\n        opk04,\n        opk05,\n        opk06,\n        opk07,\n        opk08,\n        opk09,\n        opk10,\n        opk11,\n        opk12,\n        opk13,\n        opk14,\n        opk15,\n        opk16,\n        opk17,\n        opk18,\n        opk19,\n        opk20,\n        opk21,\n        opk22,\n        opk23,\n        opk24,\n        opk25,\n        opk26,\n        opk27,\n        opk28,\n        opk29,\n        opk30,\n        opk31,\n        opk32,\n        opk33,\n        opk34,\n        opk35,\n        opk36,\n        opk37,\n        opk38,\n        opk39,\n        opk40,\n        ordex,\n        orzst,\n        partn,\n        preas,\n        refex,\n        rese1,\n        rese2,\n        stvor,\n        trfar,\n        trfgb,\n        trfgr,\n        trfst,\n        uname,\n        vglgb,\n        vglgr,\n        vglst,\n        vglsv,\n        vglta,\n        waers\n    from fields\n)\n\nselect *\nfrom final", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null, "primary_key": [], "time_spine": null}, "model.sap.stg_sap__ekpo": {"database": "postgres", "schema": "public_sap_dev", "name": "stg_sap__ekpo", "resource_type": "model", "package_name": "sap", "path": "staging/stg_sap__ekpo.sql", "original_file_path": "models/staging/stg_sap__ekpo.sql", "unique_id": "model.sap.stg_sap__ekpo", "fqn": ["sap", "staging", "stg_sap__ekpo"], "alias": "stg_sap__ekpo", "checksum": {"name": "sha256", "checksum": "95d000d1fa11ebf0d5c330fd16d6b7402cdc747b96468a5f4c1e26b299903d47"}, "config": {"enabled": true, "alias": null, "schema": "sap_dev", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "view", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "freshness": null}, "tags": [], "description": "Purchasing document item", "columns": {"_accgo_is_co_rel": {"name": "_accgo_is_co_rel", "description": "CO-relevant indicator", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "_bev1_nedepfree": {"name": "_bev1_nedepfree", "description": "Non-deductible free indicator", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "_bev1_negen_item": {"name": "_bev1_negen_item", "description": "Beverage-specific generation item", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "_bev1_nestruccat": {"name": "_bev1_nestruccat", "description": "Beverage structure category", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "_fivetran_deleted": {"name": "_fivetran_deleted", "description": "Fivetran deletion marker", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "_fivetran_rowid": {"name": "_fivetran_rowid", "description": "Fivetran unique row ID", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "_fivetran_sap_archived": {"name": "_fivetran_sap_archived", "description": "Fivetran SAP archive marker", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "_fivetran_synced": {"name": "_fivetran_synced", "description": "Fivetran sync timestamp", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "abdat": {"name": "abdat", "description": "Delivery date", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "abeln": {"name": "abeln", "description": "Delivery document number", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "abelp": {"name": "abelp", "description": "Delivery document item", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "abftz": {"name": "abftz", "description": "Release documentation flag", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "abmng": {"name": "abmng", "description": "Quantity delivered", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "abskz": {"name": "abskz", "description": "Reason for rejection", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "abueb": {"name": "abueb", "description": "Quantity reversed", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "adrn2": {"name": "adrn2", "description": "Address number (item)", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "adrnr": {"name": "adrnr", "description": "Address number", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "advcode": {"name": "advcode", "description": "Advance payment code", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "aedat": {"name": "aedat", "description": "Last change date", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "afnam": {"name": "afnam", "description": "Requisitioner", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "agdat": {"name": "agdat", "description": "Date of purchase requisition", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "agmem": {"name": "agmem", "description": "Member responsible", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "aktnr": {"name": "aktnr", "description": "Promotional deal number", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "anfnr": {"name": "anfnr", "description": "Inquiry number", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "anfps": {"name": "anfps", "description": "Inquiry item", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "anzpu": {"name": "anzpu", "description": "Number of order price units", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "anzsn": {"name": "anzsn", "description": "Number of serial numbers", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "apoms": {"name": "apoms", "description": "APO master data synchronization", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "arsnr": {"name": "arsnr", "description": "Quotation number", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "arsps": {"name": "arsps", "description": "Quotation item", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "attyp": {"name": "attyp", "description": "Object category", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "aurel": {"name": "aurel", "description": "Automatic release indicator", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "banfn": {"name": "banfn", "description": "Purchase requisition number", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "bednr": {"name": "bednr", "description": "Requirement tracking number", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "berid": {"name": "berid", "description": "MRP area", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "blk_reason_id": {"name": "blk_reason_id", "description": "Block reason ID", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "blk_reason_txt": {"name": "blk_reason_txt", "description": "Block reason text", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "bnfpo": {"name": "bnfpo", "description": "Purchase requisition item", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "bonba": {"name": "bonba", "description": "Bonus buy indicator", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "bonus": {"name": "bonus", "description": "Bonus indicator", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "bprme": {"name": "bprme", "description": "Order price unit", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "bpumn": {"name": "bpumn", "description": "Denominator for order price unit", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "bpumz": {"name": "bpumz", "description": "Numerator for order price unit", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "brgew": {"name": "brgew", "description": "Gross weight", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "brtwr": {"name": "brtwr", "description": "Gross order value", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "bsgru": {"name": "bsgru", "description": "Purchasing group", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "bstae": {"name": "bstae", "description": "Item status", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "bstyp": {"name": "bstyp", "description": "Purchasing document category", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "budget_pd": {"name": "budget_pd", "description": "Budget period", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "bukrs": {"name": "bukrs", "description": "Company code", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "bwtar": {"name": "bwtar", "description": "Valuation type", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "bwtty": {"name": "bwtty", "description": "Valuation category", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "ccomp": {"name": "ccomp", "description": "Central company code", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "chg_fplnr": {"name": "chg_fplnr", "description": "Change number for production order", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "chg_srv": {"name": "chg_srv", "description": "Change number for service", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "cmpl_dlv_itm": {"name": "cmpl_dlv_itm", "description": "Complete delivery item", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "cnfm_qty": {"name": "cnfm_qty", "description": "Confirmed quantity", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "cons_order": {"name": "cons_order", "description": "Consignment order indicator", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "cqu_sar": {"name": "cqu_sar", "description": "Service acceptance request", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "cuobj": {"name": "cuobj", "description": "Configuration (internal object number)", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "diff_invoice": {"name": "diff_invoice", "description": "Invoice difference indicator", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "disub_kunnr": {"name": "disub_kunnr", "description": "Customer number of subcontractor", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "disub_owner": {"name": "disub_owner", "description": "Owner of subcontractor components", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "disub_posnr": {"name": "disub_posnr", "description": "Item number in sales order", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "disub_pspnr": {"name": "disub_pspnr", "description": "WBS element in subcontract", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "disub_sobkz": {"name": "disub_sobkz", "description": "Special stock indicator for subcontracting", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "disub_vbeln": {"name": "disub_vbeln", "description": "Sales order for subcontract", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "dpamt": {"name": "dpamt", "description": "Down payment amount", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "dpdat": {"name": "dpdat", "description": "Down payment date", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "dppct": {"name": "dppct", "description": "Down payment percentage", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "dptyp": {"name": "dptyp", "description": "Down payment category", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "drdat": {"name": "drdat", "description": "Confirmation date", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "druhr": {"name": "druhr", "description": "Confirmation time", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "drunr": {"name": "drunr", "description": "Confirmation number", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "ean11": {"name": "ean11", "description": "International Article Number (EAN/UPC)", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "ebeln": {"name": "ebeln", "description": "Purchasing document number", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "ebelp": {"name": "ebelp", "description": "Item number of purchasing document", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "ebon2": {"name": "ebon2", "description": "Additional bonus indicator 2", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "ebon3": {"name": "ebon3", "description": "Additional bonus indicator 3", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "ebonf": {"name": "ebonf", "description": "Bonus indicator for framework agreements", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "effwr": {"name": "effwr", "description": "Effective order value", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "eglkz": {"name": "eglkz", "description": "Final invoice indicator", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "ehtyp": {"name": "ehtyp", "description": "Purchasing document type (external)", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "eildt": {"name": "eildt", "description": "First delivery date", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "ekkol": {"name": "ekkol", "description": "Purchasing document header copy", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "elikz": {"name": "elikz", "description": "Final delivery indicator", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "ematn": {"name": "ematn", "description": "Material number (vendor)", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "emlif": {"name": "emlif", "description": "Vendor material number", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "emnfr": {"name": "emnfr", "description": "Manufacturer part number", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "empst": {"name": "empst", "description": "Price determination indicator", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "erekz": {"name": "erekz", "description": "Goods receipt indicator", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "etdrk": {"name": "etdrk", "description": "Schedule line blocked", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "etfz1": {"name": "etfz1", "description": "Delivery schedule split 1", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "etfz2": {"name": "etfz2", "description": "Delivery schedule split 2", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "evers": {"name": "evers", "description": "Shipping instructions", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "excpe": {"name": "excpe", "description": "Exception code", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "exlin": {"name": "exlin", "description": "External line number", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "exsnr": {"name": "exsnr", "description": "External serial number", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "ext_rfx_item": {"name": "ext_rfx_item", "description": "External bid invitation item", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "ext_rfx_number": {"name": "ext_rfx_number", "description": "External bid invitation number", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "ext_rfx_system": {"name": "ext_rfx_system", "description": "Source system for bid invitation", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "fabkz": {"name": "fabkz", "description": "Disposal indicator", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "ffzhi": {"name": "ffzhi", "description": "Free goods quantity", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "fipos": {"name": "fipos", "description": "Commitment item", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "fiscal_incentive": {"name": "fiscal_incentive", "description": "Fiscal incentive indicator", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "fiscal_incentive_id": {"name": "fiscal_incentive_id", "description": "Fiscal incentive ID", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "fistl": {"name": "fistl", "description": "Funds center", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "fixmg": {"name": "fixmg", "description": "Fixed quantity", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "fkber": {"name": "fkber", "description": "Functional area", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "fls_rsto": {"name": "fls_rsto", "description": "Release strategy origin", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "fmfgus_key": {"name": "fmfgus_key", "description": "FM key for U.S. federal government", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "fplnr": {"name": "fplnr", "description": "Maintenance plan", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "fsh_atp_date": {"name": "fsh_atp_date", "description": "Fashion ATP date", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "fsh_collection": {"name": "fsh_collection", "description": "Fashion collection", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "fsh_grid_cond_rec": {"name": "fsh_grid_cond_rec", "description": "Fashion grid condition record", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "fsh_item": {"name": "fsh_item", "description": "Fashion item number", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "fsh_item_group": {"name": "fsh_item_group", "description": "Fashion item group", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "fsh_psm_pfm_split": {"name": "fsh_psm_pfm_split", "description": "Budget split for fashion", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "fsh_season": {"name": "fsh_season", "description": "Fashion season", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "fsh_season_year": {"name": "fsh_season_year", "description": "Fashion season year", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "fsh_ss": {"name": "fsh_ss", "description": "Fashion season status", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "fsh_theme": {"name": "fsh_theme", "description": "Fashion theme", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "fsh_transaction": {"name": "fsh_transaction", "description": "Fashion transaction type", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "fsh_vas_prnt_id": {"name": "fsh_vas_prnt_id", "description": "VAS parent item ID", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "fsh_vas_rel": {"name": "fsh_vas_rel", "description": "VAS relevance indicator", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "geber": {"name": "geber", "description": "Fund", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "gewei": {"name": "gewei", "description": "Unit of weight", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "gnetwr": {"name": "gnetwr", "description": "Net order value", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "grant_nbr": {"name": "grant_nbr", "description": "Grant", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "handoverloc": {"name": "handoverloc", "description": "Handover location", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "hvr_change_time": {"name": "hvr_change_time", "description": "HVR change timestamp", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "hvr_is_deleted": {"name": "hvr_is_deleted", "description": "HVR deletion flag", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "idnlf": {"name": "idnlf", "description": "International vendor number", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "inco1": {"name": "inco1", "description": "Incoterms (Part 1)", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "inco2": {"name": "inco2", "description": "Incoterms (Part 2)", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "inco2_l": {"name": "inco2_l", "description": "Incoterms long text 2", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "inco3_l": {"name": "inco3_l", "description": "Incoterms long text 3", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "infnr": {"name": "infnr", "description": "Info record number", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "insmk": {"name": "insmk", "description": "Stock type", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "insnc": {"name": "insnc", "description": "Inspection control indicator", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "iprkz": {"name": "iprkz", "description": "Interest indicator", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "itcons": {"name": "itcons", "description": "Consignment indicator", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "iuid_relevant": {"name": "iuid_relevant", "description": "UID-relevant item", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "j_1aidatep": {"name": "j_1aidatep", "description": "Excise invoice date", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "j_1aindxp": {"name": "j_1aindxp", "description": "Excise indicator", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "j_1bindust": {"name": "j_1bindust", "description": "Industry type", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "j_1bmatorg": {"name": "j_1bmatorg", "description": "Material origin", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "j_1bmatuse": {"name": "j_1bmatuse", "description": "Material usage", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "j_1bnbm": {"name": "j_1bnbm", "description": "Excise number", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "j_1bownpro": {"name": "j_1bownpro", "description": "Own process indicator", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "kanba": {"name": "kanba", "description": "Kanban indicator", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "kblnr": {"name": "kblnr", "description": "Document number for earmarked funds", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "kblpos": {"name": "kblpos", "description": "Document item for earmarked funds", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "knttp": {"name": "knttp", "description": "Account assignment category", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "ko_gsber": {"name": "ko_gsber", "description": "Partner business area", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "ko_pargb": {"name": "ko_pargb", "description": "Partner business area (alternate)", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "ko_pprctr": {"name": "ko_pprctr", "description": "Partner profit center", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "ko_prctr": {"name": "ko_prctr", "description": "Profit center", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "kolif": {"name": "kolif", "description": "Subcontracting vendor", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "konnr": {"name": "konnr", "description": "Agreement number", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "ktmng": {"name": "ktmng", "description": "Target quantity", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "ktpnr": {"name": "ktpnr", "description": "Subcontracting number", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "kunnr": {"name": "kunnr", "description": "Customer number", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "kzabs": {"name": "kzabs", "description": "Delivery completed indicator", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "kzbws": {"name": "kzbws", "description": "Value not deductible", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "kzfme": {"name": "kzfme", "description": "Indicator for FM assignment", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "kzkfg": {"name": "kzkfg", "description": "Configurable material", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "kzstu": {"name": "kzstu", "description": "Batch split indicator", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "kztlf": {"name": "kztlf", "description": "Indicator third-party order", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "kzvbr": {"name": "kzvbr", "description": "Bill of materials explosion", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "kzwi1": {"name": "kzwi1", "description": "Subtotal 1", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "kzwi2": {"name": "kzwi2", "description": "Subtotal 2", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "kzwi3": {"name": "kzwi3", "description": "Subtotal 3", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "kzwi4": {"name": "kzwi4", "description": "Subtotal 4", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "kzwi5": {"name": "kzwi5", "description": "Subtotal 5", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "kzwi6": {"name": "kzwi6", "description": "Subtotal 6", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "labnr": {"name": "labnr", "description": "Storage bin", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "lblkz": {"name": "lblkz", "description": "Labeling indicator", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "lebre": {"name": "lebre", "description": "GR-based invoice verification", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "lewed": {"name": "lewed", "description": "Goods receipt indicator", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "lfret": {"name": "lfret", "description": "Returns indicator", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "lgort": {"name": "lgort", "description": "Storage location", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "lmein": {"name": "lmein", "description": "Delivery unit", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "loekz": {"name": "loekz", "description": "Deletion indicator", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "ltsnr": {"name": "ltsnr", "description": "Vendor subrange", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "mahn1": {"name": "mahn1", "description": "Reminder level 1", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "mahn2": {"name": "mahn2", "description": "Reminder level 2", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "mahn3": {"name": "mahn3", "description": "Reminder level 3", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "mahnz": {"name": "mahnz", "description": "Number of reminders", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "mandt": {"name": "mandt", "description": "Client", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "manual_tc_reason": {"name": "manual_tc_reason", "description": "Manual tax code reason", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "matkl": {"name": "matkl", "description": "Material group", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "matnr": {"name": "matnr", "description": "Material number", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "meins": {"name": "meins", "description": "Order unit", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "menge": {"name": "menge", "description": "Quantity", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "meprf": {"name": "meprf", "description": "Pricing reference material", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "mfrgr": {"name": "mfrgr", "description": "Material freight group", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "mfrnr": {"name": "mfrnr", "description": "Manufacturer number", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "mfrpn": {"name": "mfrpn", "description": "Manufacturer part number", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "mfzhi": {"name": "mfzhi", "description": "Free goods quantity", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "mhdrz": {"name": "mhdrz", "description": "Minimum remaining shelf life", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "mlmaa": {"name": "mlmaa", "description": "Material ledger indicator", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "mprof": {"name": "mprof", "description": "MRP profile", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "mrpind": {"name": "mrpind", "description": "MRP indicator", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "mtart": {"name": "mtart", "description": "Material type", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "mwskz": {"name": "mwskz", "description": "Tax code", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "navnw": {"name": "navnw", "description": "Net invoice value", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "netpr": {"name": "netpr", "description": "Net price", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "netwr": {"name": "netwr", "description": "Net order value", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "nfabd": {"name": "nfabd", "description": "Planned delivery date", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "nlabd": {"name": "nlabd", "description": "Next delivery date", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "notkz": {"name": "notkz", "description": "Non-stock material indicator", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "novet": {"name": "novet", "description": "No GR-based invoice verification", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "nrfhg": {"name": "nrfhg", "description": "Sequential number of account assignment", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "ntgew": {"name": "ntgew", "description": "Net weight", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "oia_baselo": {"name": "oia_baselo", "description": "Base location for OIA", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "oia_ipmvat": {"name": "oia_ipmvat", "description": "IPM VAT indicator", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "oia_spltiv": {"name": "oia_spltiv", "description": "Invoice split indicator", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "oibasprod": {"name": "oibasprod", "description": "OIA base product", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "oic_adestn": {"name": "oic_adestn", "description": "Destination address", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "oic_aorgin": {"name": "oic_aorgin", "description": "Origin address", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "oic_dcityc": {"name": "oic_dcityc", "description": "Destination city code", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "oic_dcounc": {"name": "oic_dcounc", "description": "Destination country code", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "oic_dland1": {"name": "oic_dland1", "description": "Destination country", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "oic_dregio": {"name": "oic_dregio", "description": "Destination region", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "oic_lifnr": {"name": "oic_lifnr", "description": "Vendor number for OIC", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "oic_mot": {"name": "oic_mot", "description": "Mode of transport", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "oic_ocityc": {"name": "oic_ocityc", "description": "Origin city code", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "oic_ocounc": {"name": "oic_ocounc", "description": "Origin country code", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "oic_oland1": {"name": "oic_oland1", "description": "Origin country", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "oic_oregio": {"name": "oic_oregio", "description": "Origin region", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "oic_pbatch": {"name": "oic_pbatch", "description": "Planned batch", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "oic_pdestn": {"name": "oic_pdestn", "description": "Planned destination", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "oic_porgin": {"name": "oic_porgin", "description": "Planned origin", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "oic_ptrip": {"name": "oic_ptrip", "description": "Planned trip ID", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "oic_truckn": {"name": "oic_truckn", "description": "Truck number", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "oicertf1": {"name": "oicertf1", "description": "OI certificate 1", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "oicertf1_gi": {"name": "oicertf1_gi", "description": "OI certificate 1 GI", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "oid_extbol": {"name": "oid_extbol", "description": "External bill of lading", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "oid_miscdl": {"name": "oid_miscdl", "description": "Miscellaneous delivery", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "oidatfm1": {"name": "oidatfm1", "description": "Date from OI", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "oidatfm1_gi": {"name": "oidatfm1_gi", "description": "Date from OI GI", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "oidatto1": {"name": "oidatto1", "description": "Date to OI", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "oidatto1_gi": {"name": "oidatto1_gi", "description": "Date to OI GI", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "oiedbal": {"name": "oiedbal", "description": "Opening inventory balance", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "oiedbal_gi": {"name": "oiedbal_gi", "description": "Opening inventory balance GI", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "oiedbalm": {"name": "oiedbalm", "description": "Opening measured balance", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "oiedbalm_gi": {"name": "oiedbalm_gi", "description": "Opening measured balance GI", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "oiedok": {"name": "oiedok", "description": "Document for OI", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "oiedok_gi": {"name": "oiedok_gi", "description": "Document for OI GI", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "oiexgnum": {"name": "oiexgnum", "description": "Exchange group number", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "oiexgtyp": {"name": "oiexgtyp", "description": "Exchange type", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "oiextnr": {"name": "oiextnr", "description": "External number", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "oifeech": {"name": "oifeech", "description": "Fee charge", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "oifeedt": {"name": "oifeedt", "description": "Fee date", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "oifeetot": {"name": "oifeetot", "description": "Total fee", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "oiferp": {"name": "oiferp", "description": "ERP fee ID", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "oiftind": {"name": "oiftind", "description": "Freight indicator", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "oighndl": {"name": "oighndl", "description": "Handling type", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "oih_folqty": {"name": "oih_folqty", "description": "Follow-on quantity", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "oih_folqty_gi": {"name": "oih_folqty_gi", "description": "Follow-on quantity GI", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "oih_lcfol": {"name": "oih_lcfol", "description": "Local follow-on indicator", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "oih_lcfol_gi": {"name": "oih_lcfol_gi", "description": "Local follow-on indicator GI", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "oih_licin": {"name": "oih_licin", "description": "License in", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "oih_licin_gi": {"name": "oih_licin_gi", "description": "License in GI", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "oih_lictp": {"name": "oih_lictp", "description": "License type", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "oih_lictp_gi": {"name": "oih_lictp_gi", "description": "License type GI", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "oihantyp": {"name": "oihantyp", "description": "Handling type", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "oihantyp_gi": {"name": "oihantyp_gi", "description": "Handling type GI", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "oiinex": {"name": "oiinex", "description": "Include/exclude indicator", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "oiinex_gi": {"name": "oiinex_gi", "description": "Include/exclude GI", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "oiitmnr": {"name": "oiitmnr", "description": "Item number", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "oimatcyc": {"name": "oimatcyc", "description": "Material cycle", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "oinetcyc": {"name": "oinetcyc", "description": "Netting cycle", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "oioilcon": {"name": "oioilcon", "description": "Oil content", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "oipipeval": {"name": "oipipeval", "description": "Pipeline value", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "oipricie": {"name": "oipricie", "description": "Price internal/external", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "oipriop": {"name": "oipriop", "description": "Pricing option", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "oisbrel": {"name": "oisbrel", "description": "Subsequent billing release", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "oitaxcon": {"name": "oitaxcon", "description": "Tax condition", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "oitaxfrom": {"name": "oitaxfrom", "description": "Tax origin", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "oitaxgrp": {"name": "oitaxgrp", "description": "Tax group", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "oitaxgrp_gi": {"name": "oitaxgrp_gi", "description": "Tax group GI", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "oitaxto": {"name": "oitaxto", "description": "Tax destination", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "oitrind": {"name": "oitrind", "description": "Transport indicator", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "oitrkjr": {"name": "oitrkjr", "description": "Transport key junior", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "oitrknr": {"name": "oitrknr", "description": "Transport key number", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "oitxcon1": {"name": "oitxcon1", "description": "Tax condition 1", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "oitxcon2": {"name": "oitxcon2", "description": "Tax condition 2", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "oitxcon3": {"name": "oitxcon3", "description": "Tax condition 3", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "oitxcon4": {"name": "oitxcon4", "description": "Tax condition 4", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "oitxcon5": {"name": "oitxcon5", "description": "Tax condition 5", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "oitxcon6": {"name": "oitxcon6", "description": "Tax condition 6", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "oiumbar": {"name": "oiumbar", "description": "Measured quantity unit", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "oivatf": {"name": "oivatf", "description": "VAT flag", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "oivath": {"name": "oivath", "description": "VAT handling", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "packno": {"name": "packno", "description": "Package number", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "peinh": {"name": "peinh", "description": "Price unit", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "plifz": {"name": "plifz", "description": "Planned delivery time", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "pol_id": {"name": "pol_id", "description": "Purchasing order list ID", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "prdat": {"name": "prdat", "description": "Price determination date", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "prio_req": {"name": "prio_req", "description": "Requirement priority", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "prio_urg": {"name": "prio_urg", "description": "Urgency priority", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "prsdr": {"name": "prsdr", "description": "Price date category", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "pstyp": {"name": "pstyp", "description": "Item category", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "punei": {"name": "punei", "description": "Price unit for order", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "put_back": {"name": "put_back", "description": "Put-back indicator", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "rdprf": {"name": "rdprf", "description": "Rounding profile", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "reason_code": {"name": "reason_code", "description": "Rejection reason code", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "ref_item": {"name": "ref_item", "description": "Reference item", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "refsite": {"name": "refsite", "description": "Reference site", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "repos": {"name": "repos", "description": "Repositioning indicator", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "reslo": {"name": "reslo", "description": "Reservation location", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "retpc": {"name": "retpc", "description": "Returns percentage", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "retpo": {"name": "retpo", "description": "Returns indicator", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "revlv": {"name": "revlv", "description": "Revision level", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "saisj": {"name": "saisj", "description": "Season year", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "saiso": {"name": "saiso", "description": "Season", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "satnr": {"name": "satnr", "description": "Cross-plant configuration", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "schpr": {"name": "schpr", "description": "Schedule margin key", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "sernp": {"name": "sernp", "description": "Serial number profile", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "serru": {"name": "serru", "description": "Serial number requirement", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "sf_txjcd": {"name": "sf_txjcd", "description": "SAP Fieldglass tax jurisdiction", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "sgt_rcat": {"name": "sgt_rcat", "description": "Segmentation requirement category", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "sgt_scat": {"name": "sgt_scat", "description": "Segmentation category", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "sikgr": {"name": "sikgr", "description": "Account assignment group", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "sktof": {"name": "sktof", "description": "Cash discount indicator", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "sobkz": {"name": "sobkz", "description": "Special stock indicator", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "source_id": {"name": "source_id", "description": "Source ID", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "source_key": {"name": "source_key", "description": "Source key", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "spe_abgru": {"name": "spe_abgru", "description": "Reason for rejection (supplier)", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "spe_chng_sys": {"name": "spe_chng_sys", "description": "Change system", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "spe_cq_ctrltype": {"name": "spe_cq_ctrltype", "description": "Control type for batch", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "spe_cq_nocq": {"name": "spe_cq_nocq", "description": "No batch determination", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "spe_crm_fkrel": {"name": "spe_crm_fkrel", "description": "CRM follow-up reference", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "spe_crm_ref_item": {"name": "spe_crm_ref_item", "description": "CRM reference item", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "spe_crm_ref_so": {"name": "spe_crm_ref_so", "description": "CRM reference sales order", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "spe_crm_so": {"name": "spe_crm_so", "description": "CRM sales order", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "spe_crm_so_item": {"name": "spe_crm_so_item", "description": "CRM sales order item", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "spe_ewm_dtc": {"name": "spe_ewm_dtc", "description": "EWM delivery type control", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "spe_insmk_src": {"name": "spe_insmk_src", "description": "Stock type from source", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "spinf": {"name": "spinf", "description": "Info record update", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "srm_contract_id": {"name": "srm_contract_id", "description": "SRM contract ID", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "srm_contract_itm": {"name": "srm_contract_itm", "description": "SRM contract item", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "srv_bas_com": {"name": "srv_bas_com", "description": "Service-based component", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "ssqss": {"name": "ssqss", "description": "Subsequence number", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "stafo": {"name": "stafo", "description": "Status for follow-on documents", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "stapo": {"name": "stapo", "description": "Status of PO item", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "statu": {"name": "statu", "description": "Status", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "status": {"name": "status", "description": "Item status", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "tax_subject_st": {"name": "tax_subject_st", "description": "Tax subject status", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "tc_aut_det": {"name": "tc_aut_det", "description": "Tax code auto determination", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "techs": {"name": "techs", "description": "Technical spec reference", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "trmrisk_relevant": {"name": "trmrisk_relevant", "description": "Treasury risk-relevant", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "twrkz": {"name": "twrkz", "description": "Planning plant", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "txjcd": {"name": "txjcd", "description": "Tax jurisdiction code", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "txz01": {"name": "txz01", "description": "Item text", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "tzonrc": {"name": "tzonrc", "description": "Time zone rule code", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "uebpo": {"name": "uebpo", "description": "Overdelivery tolerance", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "uebtk": {"name": "uebtk", "description": "Unlimited overdelivery", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "uebto": {"name": "uebto", "description": "Overdelivery limit", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "umren": {"name": "umren", "description": "Conversion denominator", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "umrez": {"name": "umrez", "description": "Conversion numerator", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "umsok": {"name": "umsok", "description": "Stock transfer", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "untto": {"name": "untto", "description": "Quantity in unit of issue", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "uptyp": {"name": "uptyp", "description": "Update type", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "upvor": {"name": "upvor", "description": "Planned delivery schedule", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "usequ": {"name": "usequ", "description": "Sequence number", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "voleh": {"name": "voleh", "description": "Volume unit", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "volum": {"name": "volum", "description": "Volume", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "vorab": {"name": "vorab", "description": "Advance delivery allowed", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "vrtkz": {"name": "vrtkz", "description": "Distribution indicator", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "vsart": {"name": "vsart", "description": "Shipping type", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "wabwe": {"name": "wabwe", "description": "Goods receipt indicator", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "webaz": {"name": "webaz", "description": "GR quantity posted", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "webre": {"name": "webre", "description": "Invoice receipt expected", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "weora": {"name": "weora", "description": "Time of goods receipt", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "wepos": {"name": "wepos", "description": "Goods receipt processed", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "werks": {"name": "werks", "description": "Plant", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "weunb": {"name": "weunb", "description": "Goods receipt non-valuated", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "wrf_charstc1": {"name": "wrf_charstc1", "description": "Retail characteristic 1", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "wrf_charstc2": {"name": "wrf_charstc2", "description": "Retail characteristic 2", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "wrf_charstc3": {"name": "wrf_charstc3", "description": "Retail characteristic 3", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "xconditions": {"name": "xconditions", "description": "Conditions exist", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "xersy": {"name": "xersy", "description": "Evaluated receipt settlement", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "xoblr": {"name": "xoblr", "description": "Obligation relevant", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "zgtyp": {"name": "zgtyp", "description": "Payment type", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "zwert": {"name": "zwert", "description": "Value", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": "sap://models/staging/stg_sap.yml", "build_path": null, "unrendered_config": {"materialized": "view", "schema": "sap_{{ var('directed_schema','dev') }}", "enabled": true}, "created_at": 1756850330.839736, "relation_name": "\"postgres\".\"public_sap_dev\".\"stg_sap__ekpo\"", "raw_code": "{{ config(enabled=var('sap_using_ekpo', True)) }}\n\n{% set source_columns = adapter.get_columns_in_relation(ref('stg_sap__ekpo_tmp')) %}\n\nwith base as (\n    select {{ remove_slashes_from_col_names(source_columns) }}\n    from {{ ref('stg_sap__ekpo_tmp') }}\n),\n\nfields as (\n    select\n        {{\n            fivetran_utils.fill_staging_columns(\n                source_columns=source_columns,\n                staging_columns=get_ekpo_columns()\n            )\n        }}\n    from base\n),\n\nfinal as (\n    select\n        _accgo_is_co_rel,\n        _bev1_nedepfree,\n        _bev1_negen_item,\n        _bev1_nestruccat,\n        abdat,\n        abeln,\n        abelp,\n        abftz,\n        abmng,\n        abskz,\n        abueb,\n        adrn2,\n        adrnr,\n        advcode,\n        aedat,\n        afnam,\n        agdat,\n        agmem,\n        aktnr,\n        anfnr,\n        anfps,\n        anzpu,\n        anzsn,\n        apoms,\n        arsnr,\n        arsps,\n        attyp,\n        aurel,\n        banfn,\n        bednr,\n        berid,\n        blk_reason_id,\n        blk_reason_txt,\n        bnfpo,\n        bonba,\n        bonus,\n        bprme,\n        bpumn,\n        bpumz,\n        brgew,\n        brtwr,\n        bsgru,\n        bstae,\n        bstyp,\n        budget_pd,\n        cast(bukrs as {{ dbt.type_string() }}) as bukrs,\n        bwtar,\n        bwtty,\n        ccomp,\n        chg_fplnr,\n        chg_srv,\n        cmpl_dlv_itm,\n        cnfm_qty,\n        cons_order,\n        cqu_sar,\n        cuobj,\n        diff_invoice,\n        disub_kunnr,\n        disub_owner,\n        disub_posnr,\n        disub_pspnr,\n        disub_sobkz,\n        disub_vbeln,\n        dpamt,\n        dpdat,\n        dppct,\n        dptyp,\n        drdat,\n        druhr,\n        drunr,\n        ean11,\n        cast(ebeln as {{ dbt.type_string() }}) as ebeln,\n        cast(ebelp as {{ dbt.type_string() }}) as ebelp,\n        ebon2,\n        ebon3,\n        ebonf,\n        effwr,\n        eglkz,\n        ehtyp,\n        eildt,\n        ekkol,\n        elikz,\n        ematn,\n        emlif,\n        emnfr,\n        empst,\n        erekz,\n        etdrk,\n        etfz1,\n        etfz2,\n        evers,\n        excpe,\n        exlin,\n        exsnr,\n        ext_rfx_item,\n        ext_rfx_number,\n        ext_rfx_system,\n        fabkz,\n        ffzhi,\n        fipos,\n        fiscal_incentive,\n        fiscal_incentive_id,\n        fistl,\n        fixmg,\n        fkber,\n        fls_rsto,\n        fmfgus_key,\n        fplnr,\n        fsh_atp_date,\n        fsh_collection,\n        fsh_grid_cond_rec,\n        fsh_item,\n        fsh_item_group,\n        fsh_psm_pfm_split,\n        fsh_season,\n        fsh_season_year,\n        fsh_ss,\n        fsh_theme,\n        fsh_transaction,\n        fsh_vas_prnt_id,\n        fsh_vas_rel,\n        geber,\n        gewei,\n        gnetwr,\n        grant_nbr,\n        handoverloc,\n        hvr_change_time,\n        hvr_is_deleted,\n        idnlf,\n        inco1,\n        inco2,\n        inco2_l,\n        inco3_l,\n        infnr,\n        insmk,\n        insnc,\n        iprkz,\n        itcons,\n        iuid_relevant,\n        j_1aidatep,\n        j_1aindxp,\n        j_1bindust,\n        j_1bmatorg,\n        j_1bmatuse,\n        j_1bnbm,\n        j_1bownpro,\n        kanba,\n        kblnr,\n        kblpos,\n        knttp,\n        ko_gsber,\n        ko_pargb,\n        ko_pprctr,\n        ko_prctr,\n        kolif,\n        konnr,\n        ktmng,\n        ktpnr,\n        cast(kunnr as {{ dbt.type_string() }}) as kunnr,\n        kzabs,\n        kzbws,\n        kzfme,\n        kzkfg,\n        kzstu,\n        kztlf,\n        kzvbr,\n        kzwi1,\n        kzwi2,\n        kzwi3,\n        kzwi4,\n        kzwi5,\n        kzwi6,\n        labnr,\n        lblkz,\n        lebre,\n        lewed,\n        lfret,\n        lgort,\n        lmein,\n        loekz,\n        ltsnr,\n        mahn1,\n        mahn2,\n        mahn3,\n        mahnz,\n        cast(mandt as {{ dbt.type_string() }}) as mandt,\n        manual_tc_reason,\n        matkl,\n        cast(matnr as {{ dbt.type_string() }}) as matnr,\n        meins,\n        cast(menge as {{ dbt.type_numeric() }}) as menge,\n        meprf,\n        mfrgr,\n        mfrnr,\n        mfrpn,\n        mfzhi,\n        mhdrz,\n        mlmaa,\n        mprof,\n        mrpind,\n        mtart,\n        mwskz,\n        navnw,\n        netpr,\n        cast(netwr as {{ dbt.type_numeric() }}) as netwr,\n        nfabd,\n        nlabd,\n        notkz,\n        novet,\n        nrfhg,\n        ntgew,\n        oia_baselo,\n        oia_ipmvat,\n        oia_spltiv,\n        oibasprod,\n        oic_adestn,\n        oic_aorgin,\n        oic_dcityc,\n        oic_dcounc,\n        oic_dland1,\n        oic_dregio,\n        oic_lifnr,\n        oic_mot,\n        oic_ocityc,\n        oic_ocounc,\n        oic_oland1,\n        oic_oregio,\n        oic_pbatch,\n        oic_pdestn,\n        oic_porgin,\n        oic_ptrip,\n        oic_truckn,\n        oicertf1,\n        oicertf1_gi,\n        oid_extbol,\n        oid_miscdl,\n        oidatfm1,\n        oidatfm1_gi,\n        oidatto1,\n        oidatto1_gi,\n        oiedbal,\n        oiedbal_gi,\n        oiedbalm,\n        oiedbalm_gi,\n        oiedok,\n        oiedok_gi,\n        oiexgnum,\n        oiexgtyp,\n        oiextnr,\n        oifeech,\n        oifeedt,\n        oifeetot,\n        oiferp,\n        oiftind,\n        oighndl,\n        oih_folqty,\n        oih_folqty_gi,\n        oih_lcfol,\n        oih_lcfol_gi,\n        oih_licin,\n        oih_licin_gi,\n        oih_lictp,\n        oih_lictp_gi,\n        oihantyp,\n        oihantyp_gi,\n        oiinex,\n        oiinex_gi,\n        oiitmnr,\n        oimatcyc,\n        oinetcyc,\n        oioilcon,\n        oipipeval,\n        oipricie,\n        oipriop,\n        oisbrel,\n        oitaxcon,\n        oitaxfrom,\n        oitaxgrp,\n        oitaxgrp_gi,\n        oitaxto,\n        oitrind,\n        oitrkjr,\n        oitrknr,\n        oitxcon1,\n        oitxcon2,\n        oitxcon3,\n        oitxcon4,\n        oitxcon5,\n        oitxcon6,\n        oiumbar,\n        oivatf,\n        oivath,\n        packno,\n        peinh,\n        plifz,\n        pol_id,\n        prdat,\n        prio_req,\n        prio_urg,\n        prsdr,\n        pstyp,\n        punei,\n        put_back,\n        rdprf,\n        reason_code,\n        ref_item,\n        refsite,\n        repos,\n        reslo,\n        retpc,\n        retpo,\n        revlv,\n        saisj,\n        saiso,\n        satnr,\n        schpr,\n        sernp,\n        serru,\n        sf_txjcd,\n        sgt_rcat,\n        sgt_scat,\n        sikgr,\n        sktof,\n        sobkz,\n        source_id,\n        source_key,\n        spe_abgru,\n        spe_chng_sys,\n        spe_cq_ctrltype,\n        spe_cq_nocq,\n        spe_crm_fkrel,\n        spe_crm_ref_item,\n        spe_crm_ref_so,\n        spe_crm_so,\n        spe_crm_so_item,\n        spe_ewm_dtc,\n        spe_insmk_src,\n        spinf,\n        srm_contract_id,\n        srm_contract_itm,\n        srv_bas_com,\n        ssqss,\n        stafo,\n        stapo,\n        statu,\n        status,\n        tax_subject_st,\n        tc_aut_det,\n        techs,\n        trmrisk_relevant,\n        twrkz,\n        txjcd,\n        txz01,\n        tzonrc,\n        uebpo,\n        uebtk,\n        uebto,\n        umren,\n        umrez,\n        umsok,\n        untto,\n        uptyp,\n        upvor,\n        usequ,\n        voleh,\n        volum,\n        vorab,\n        vrtkz,\n        vsart,\n        wabwe,\n        webaz,\n        webre,\n        weora,\n        wepos,\n        werks,\n        weunb,\n        wrf_charstc1,\n        wrf_charstc2,\n        wrf_charstc3,\n        xconditions,\n        xersy,\n        xoblr,\n        zgtyp,\n        zwert,\n        _fivetran_sap_archived,\n        _fivetran_deleted,\n        _fivetran_rowid,\n        _fivetran_synced\n    from fields\n)\n\nselect *\nfrom final", "doc_blocks": [], "language": "sql", "refs": [{"name": "stg_sap__ekpo_tmp", "package": null, "version": null}, {"name": "stg_sap__ekpo_tmp", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.sap.remove_slashes_from_col_names", "macro.sap.get_ekpo_columns", "macro.fivetran_utils.fill_staging_columns", "macro.dbt.type_string", "macro.dbt.type_numeric"], "nodes": ["model.sap.stg_sap__ekpo_tmp"]}, "compiled_path": "target/compiled/sap/models/staging/stg_sap__ekpo.sql", "compiled": true, "compiled_code": "\n\n\n\nwith base as (\n    select \n        \"hvr_rowid\" as hvr_rowid,\n        \"mandt\" as mandt,\n        \"ebeln\" as ebeln,\n        \"ebelp\" as ebelp,\n        \"loekz\" as loekz,\n        \"statu\" as statu,\n        \"aedat\" as aedat,\n        \"txz01\" as txz01,\n        \"matnr\" as matnr,\n        \"ematn\" as ematn,\n        \"bukrs\" as bukrs,\n        \"werks\" as werks,\n        \"lgort\" as lgort,\n        \"bednr\" as bednr,\n        \"matkl\" as matkl,\n        \"infnr\" as infnr,\n        \"idnlf\" as idnlf,\n        \"ktmng\" as ktmng,\n        \"menge\" as menge,\n        \"meins\" as meins,\n        \"bprme\" as bprme,\n        \"bpumz\" as bpumz,\n        \"bpumn\" as bpumn,\n        \"umrez\" as umrez,\n        \"umren\" as umren,\n        \"netpr\" as netpr,\n        \"peinh\" as peinh,\n        \"netwr\" as netwr,\n        \"brtwr\" as brtwr,\n        \"agdat\" as agdat,\n        \"webaz\" as webaz,\n        \"mwskz\" as mwskz,\n        \"bonus\" as bonus,\n        \"insmk\" as insmk,\n        \"spinf\" as spinf,\n        \"prsdr\" as prsdr,\n        \"schpr\" as schpr,\n        \"mahnz\" as mahnz,\n        \"mahn1\" as mahn1,\n        \"mahn2\" as mahn2,\n        \"mahn3\" as mahn3,\n        \"uebto\" as uebto,\n        \"uebtk\" as uebtk,\n        \"untto\" as untto,\n        \"bwtar\" as bwtar,\n        \"bwtty\" as bwtty,\n        \"abskz\" as abskz,\n        \"agmem\" as agmem,\n        \"elikz\" as elikz,\n        \"erekz\" as erekz,\n        \"pstyp\" as pstyp,\n        \"knttp\" as knttp,\n        \"kzvbr\" as kzvbr,\n        \"vrtkz\" as vrtkz,\n        \"twrkz\" as twrkz,\n        \"wepos\" as wepos,\n        \"weunb\" as weunb,\n        \"repos\" as repos,\n        \"webre\" as webre,\n        \"kzabs\" as kzabs,\n        \"labnr\" as labnr,\n        \"konnr\" as konnr,\n        \"ktpnr\" as ktpnr,\n        \"abdat\" as abdat,\n        \"abftz\" as abftz,\n        \"etfz1\" as etfz1,\n        \"etfz2\" as etfz2,\n        \"kzstu\" as kzstu,\n        \"notkz\" as notkz,\n        \"lmein\" as lmein,\n        \"evers\" as evers,\n        \"zwert\" as zwert,\n        \"navnw\" as navnw,\n        \"abmng\" as abmng,\n        \"prdat\" as prdat,\n        \"bstyp\" as bstyp,\n        \"effwr\" as effwr,\n        \"xoblr\" as xoblr,\n        \"kunnr\" as kunnr,\n        \"adrnr\" as adrnr,\n        \"ekkol\" as ekkol,\n        \"sktof\" as sktof,\n        \"stafo\" as stafo,\n        \"plifz\" as plifz,\n        \"ntgew\" as ntgew,\n        \"gewei\" as gewei,\n        \"txjcd\" as txjcd,\n        \"etdrk\" as etdrk,\n        \"sobkz\" as sobkz,\n        \"arsnr\" as arsnr,\n        \"arsps\" as arsps,\n        \"insnc\" as insnc,\n        \"ssqss\" as ssqss,\n        \"zgtyp\" as zgtyp,\n        \"ean11\" as ean11,\n        \"bstae\" as bstae,\n        \"revlv\" as revlv,\n        \"geber\" as geber,\n        \"fistl\" as fistl,\n        \"fipos\" as fipos,\n        \"ko_gsber\" as ko_gsber,\n        \"ko_pargb\" as ko_pargb,\n        \"ko_prctr\" as ko_prctr,\n        \"ko_pprctr\" as ko_pprctr,\n        \"meprf\" as meprf,\n        \"brgew\" as brgew,\n        \"volum\" as volum,\n        \"voleh\" as voleh,\n        \"inco1\" as inco1,\n        \"inco2\" as inco2,\n        \"vorab\" as vorab,\n        \"kolif\" as kolif,\n        \"ltsnr\" as ltsnr,\n        \"packno\" as packno,\n        \"fplnr\" as fplnr,\n        \"gnetwr\" as gnetwr,\n        \"stapo\" as stapo,\n        \"uebpo\" as uebpo,\n        \"lewed\" as lewed,\n        \"emlif\" as emlif,\n        \"lblkz\" as lblkz,\n        \"satnr\" as satnr,\n        \"attyp\" as attyp,\n        \"vsart\" as vsart,\n        \"handoverloc\" as handoverloc,\n        \"kanba\" as kanba,\n        \"adrn2\" as adrn2,\n        \"cuobj\" as cuobj,\n        \"xersy\" as xersy,\n        \"eildt\" as eildt,\n        \"drdat\" as drdat,\n        \"druhr\" as druhr,\n        \"drunr\" as drunr,\n        \"aktnr\" as aktnr,\n        \"abeln\" as abeln,\n        \"abelp\" as abelp,\n        \"anzpu\" as anzpu,\n        \"punei\" as punei,\n        \"saiso\" as saiso,\n        \"saisj\" as saisj,\n        \"ebon2\" as ebon2,\n        \"ebon3\" as ebon3,\n        \"ebonf\" as ebonf,\n        \"mlmaa\" as mlmaa,\n        \"mhdrz\" as mhdrz,\n        \"anfnr\" as anfnr,\n        \"anfps\" as anfps,\n        \"kzkfg\" as kzkfg,\n        \"usequ\" as usequ,\n        \"umsok\" as umsok,\n        \"banfn\" as banfn,\n        \"bnfpo\" as bnfpo,\n        \"mtart\" as mtart,\n        \"uptyp\" as uptyp,\n        \"upvor\" as upvor,\n        \"kzwi1\" as kzwi1,\n        \"kzwi2\" as kzwi2,\n        \"kzwi3\" as kzwi3,\n        \"kzwi4\" as kzwi4,\n        \"kzwi5\" as kzwi5,\n        \"kzwi6\" as kzwi6,\n        \"sikgr\" as sikgr,\n        \"mfzhi\" as mfzhi,\n        \"ffzhi\" as ffzhi,\n        \"retpo\" as retpo,\n        \"aurel\" as aurel,\n        \"bsgru\" as bsgru,\n        \"lfret\" as lfret,\n        \"mfrgr\" as mfrgr,\n        \"nrfhg\" as nrfhg,\n        \"j_1bnbm\" as j_1bnbm,\n        \"j_1bmatuse\" as j_1bmatuse,\n        \"j_1bmatorg\" as j_1bmatorg,\n        \"j_1bownpro\" as j_1bownpro,\n        \"j_1bindust\" as j_1bindust,\n        \"abueb\" as abueb,\n        \"nlabd\" as nlabd,\n        \"nfabd\" as nfabd,\n        \"kzbws\" as kzbws,\n        \"bonba\" as bonba,\n        \"fabkz\" as fabkz,\n        \"j_1aindxp\" as j_1aindxp,\n        \"j_1aidatep\" as j_1aidatep,\n        \"mprof\" as mprof,\n        \"eglkz\" as eglkz,\n        \"kztlf\" as kztlf,\n        \"kzfme\" as kzfme,\n        \"rdprf\" as rdprf,\n        \"techs\" as techs,\n        \"chg_srv\" as chg_srv,\n        \"chg_fplnr\" as chg_fplnr,\n        \"mfrpn\" as mfrpn,\n        \"mfrnr\" as mfrnr,\n        \"emnfr\" as emnfr,\n        \"novet\" as novet,\n        \"afnam\" as afnam,\n        \"tzonrc\" as tzonrc,\n        \"iprkz\" as iprkz,\n        \"lebre\" as lebre,\n        \"berid\" as berid,\n        \"xconditions\" as xconditions,\n        \"apoms\" as apoms,\n        \"ccomp\" as ccomp,\n        \"grant_nbr\" as grant_nbr,\n        \"fkber\" as fkber,\n        \"status\" as status,\n        \"reslo\" as reslo,\n        \"kblnr\" as kblnr,\n        \"kblpos\" as kblpos,\n        \"weora\" as weora,\n        \"srv_bas_com\" as srv_bas_com,\n        \"prio_urg\" as prio_urg,\n        \"prio_req\" as prio_req,\n        \"empst\" as empst,\n        \"diff_invoice\" as diff_invoice,\n        \"trmrisk_relevant\" as trmrisk_relevant,\n        \"spe_abgru\" as spe_abgru,\n        \"spe_crm_so\" as spe_crm_so,\n        \"spe_crm_so_item\" as spe_crm_so_item,\n        \"spe_crm_ref_so\" as spe_crm_ref_so,\n        \"spe_crm_ref_item\" as spe_crm_ref_item,\n        \"spe_crm_fkrel\" as spe_crm_fkrel,\n        \"spe_chng_sys\" as spe_chng_sys,\n        \"spe_insmk_src\" as spe_insmk_src,\n        \"spe_cq_ctrltype\" as spe_cq_ctrltype,\n        \"spe_cq_nocq\" as spe_cq_nocq,\n        \"reason_code\" as reason_code,\n        \"cqu_sar\" as cqu_sar,\n        \"anzsn\" as anzsn,\n        \"spe_ewm_dtc\" as spe_ewm_dtc,\n        \"exlin\" as exlin,\n        \"exsnr\" as exsnr,\n        \"ehtyp\" as ehtyp,\n        \"retpc\" as retpc,\n        \"dptyp\" as dptyp,\n        \"dppct\" as dppct,\n        \"dpamt\" as dpamt,\n        \"dpdat\" as dpdat,\n        \"fls_rsto\" as fls_rsto,\n        \"ext_rfx_number\" as ext_rfx_number,\n        \"ext_rfx_item\" as ext_rfx_item,\n        \"ext_rfx_system\" as ext_rfx_system,\n        \"srm_contract_id\" as srm_contract_id,\n        \"srm_contract_itm\" as srm_contract_itm,\n        \"blk_reason_id\" as blk_reason_id,\n        \"blk_reason_txt\" as blk_reason_txt,\n        \"itcons\" as itcons,\n        \"fixmg\" as fixmg,\n        \"wabwe\" as wabwe,\n        \"cmpl_dlv_itm\" as cmpl_dlv_itm,\n        \"inco2_l\" as inco2_l,\n        \"inco3_l\" as inco3_l,\n        \"tc_aut_det\" as tc_aut_det,\n        \"manual_tc_reason\" as manual_tc_reason,\n        \"fiscal_incentive\" as fiscal_incentive,\n        \"tax_subject_st\" as tax_subject_st,\n        \"fiscal_incentive_id\" as fiscal_incentive_id,\n        \"sf_txjcd\" as sf_txjcd,\n        \"_bev1_negen_item\" as _bev1_negen_item,\n        \"_bev1_nedepfree\" as _bev1_nedepfree,\n        \"_bev1_nestruccat\" as _bev1_nestruccat,\n        \"advcode\" as advcode,\n        \"budget_pd\" as budget_pd,\n        \"excpe\" as excpe,\n        \"fmfgus_key\" as fmfgus_key,\n        \"iuid_relevant\" as iuid_relevant,\n        \"mrpind\" as mrpind,\n        \"oipipeval\" as oipipeval,\n        \"oic_lifnr\" as oic_lifnr,\n        \"oic_dcityc\" as oic_dcityc,\n        \"oic_dcounc\" as oic_dcounc,\n        \"oic_dregio\" as oic_dregio,\n        \"oic_dland1\" as oic_dland1,\n        \"oic_ocityc\" as oic_ocityc,\n        \"oic_ocounc\" as oic_ocounc,\n        \"oic_oregio\" as oic_oregio,\n        \"oic_oland1\" as oic_oland1,\n        \"oic_porgin\" as oic_porgin,\n        \"oic_pdestn\" as oic_pdestn,\n        \"oic_ptrip\" as oic_ptrip,\n        \"oic_pbatch\" as oic_pbatch,\n        \"oic_mot\" as oic_mot,\n        \"oic_aorgin\" as oic_aorgin,\n        \"oic_adestn\" as oic_adestn,\n        \"oic_truckn\" as oic_truckn,\n        \"oia_baselo\" as oia_baselo,\n        \"oitaxfrom\" as oitaxfrom,\n        \"oihantyp\" as oihantyp,\n        \"oipricie\" as oipricie,\n        \"oitaxto\" as oitaxto,\n        \"oitaxcon\" as oitaxcon,\n        \"oitaxgrp\" as oitaxgrp,\n        \"oioilcon\" as oioilcon,\n        \"oiinex\" as oiinex,\n        \"oiexgnum\" as oiexgnum,\n        \"oiexgtyp\" as oiexgtyp,\n        \"oifeetot\" as oifeetot,\n        \"oifeedt\" as oifeedt,\n        \"oinetcyc\" as oinetcyc,\n        \"oiferp\" as oiferp,\n        \"oifeech\" as oifeech,\n        \"oia_ipmvat\" as oia_ipmvat,\n        \"oia_spltiv\" as oia_spltiv,\n        \"oivath\" as oivath,\n        \"oivatf\" as oivatf,\n        \"oisbrel\" as oisbrel,\n        \"oibasprod\" as oibasprod,\n        \"oitrknr\" as oitrknr,\n        \"oitrkjr\" as oitrkjr,\n        \"oiextnr\" as oiextnr,\n        \"oiitmnr\" as oiitmnr,\n        \"oiftind\" as oiftind,\n        \"oipriop\" as oipriop,\n        \"oitrind\" as oitrind,\n        \"oighndl\" as oighndl,\n        \"oiumbar\" as oiumbar,\n        \"oitxcon1\" as oitxcon1,\n        \"oitxcon2\" as oitxcon2,\n        \"oitxcon3\" as oitxcon3,\n        \"oitxcon4\" as oitxcon4,\n        \"oitxcon5\" as oitxcon5,\n        \"oitxcon6\" as oitxcon6,\n        \"oid_extbol\" as oid_extbol,\n        \"oid_miscdl\" as oid_miscdl,\n        \"oimatcyc\" as oimatcyc,\n        \"oiedok\" as oiedok,\n        \"oiedbal\" as oiedbal,\n        \"oiedbalm\" as oiedbalm,\n        \"oicertf1\" as oicertf1,\n        \"oidatfm1\" as oidatfm1,\n        \"oidatto1\" as oidatto1,\n        \"oih_lictp\" as oih_lictp,\n        \"oih_licin\" as oih_licin,\n        \"oih_lcfol\" as oih_lcfol,\n        \"oih_folqty\" as oih_folqty,\n        \"oiedok_gi\" as oiedok_gi,\n        \"oiedbal_gi\" as oiedbal_gi,\n        \"oiedbalm_gi\" as oiedbalm_gi,\n        \"oihantyp_gi\" as oihantyp_gi,\n        \"oiinex_gi\" as oiinex_gi,\n        \"oitaxgrp_gi\" as oitaxgrp_gi,\n        \"oicertf1_gi\" as oicertf1_gi,\n        \"oidatfm1_gi\" as oidatfm1_gi,\n        \"oidatto1_gi\" as oidatto1_gi,\n        \"oih_lictp_gi\" as oih_lictp_gi,\n        \"oih_licin_gi\" as oih_licin_gi,\n        \"oih_lcfol_gi\" as oih_lcfol_gi,\n        \"oih_folqty_gi\" as oih_folqty_gi,\n        \"sgt_scat\" as sgt_scat,\n        \"sgt_rcat\" as sgt_rcat,\n        \"wrf_charstc1\" as wrf_charstc1,\n        \"wrf_charstc2\" as wrf_charstc2,\n        \"wrf_charstc3\" as wrf_charstc3,\n        \"refsite\" as refsite,\n        \"_accgo_is_co_rel\" as _accgo_is_co_rel,\n        \"serru\" as serru,\n        \"sernp\" as sernp,\n        \"disub_sobkz\" as disub_sobkz,\n        \"disub_pspnr\" as disub_pspnr,\n        \"disub_kunnr\" as disub_kunnr,\n        \"disub_vbeln\" as disub_vbeln,\n        \"disub_posnr\" as disub_posnr,\n        \"disub_owner\" as disub_owner,\n        \"fsh_season_year\" as fsh_season_year,\n        \"fsh_season\" as fsh_season,\n        \"fsh_collection\" as fsh_collection,\n        \"fsh_theme\" as fsh_theme,\n        \"fsh_atp_date\" as fsh_atp_date,\n        \"fsh_vas_rel\" as fsh_vas_rel,\n        \"fsh_vas_prnt_id\" as fsh_vas_prnt_id,\n        \"fsh_transaction\" as fsh_transaction,\n        \"fsh_item_group\" as fsh_item_group,\n        \"fsh_item\" as fsh_item,\n        \"fsh_ss\" as fsh_ss,\n        \"fsh_grid_cond_rec\" as fsh_grid_cond_rec,\n        \"fsh_psm_pfm_split\" as fsh_psm_pfm_split,\n        \"cnfm_qty\" as cnfm_qty,\n        \"ref_item\" as ref_item,\n        \"source_id\" as source_id,\n        \"source_key\" as source_key,\n        \"put_back\" as put_back,\n        \"pol_id\" as pol_id,\n        \"cons_order\" as cons_order,\n        \"hvr_is_deleted\" as hvr_is_deleted,\n        \"hvr_change_time\" as hvr_change_time\n    from \"postgres\".\"public_sap_dev\".\"stg_sap__ekpo_tmp\"\n),\n\nfields as (\n    select\n        \n    \n    \n    abdat\n    \n as \n    \n    abdat\n    \n, \n    \n    \n    abeln\n    \n as \n    \n    abeln\n    \n, \n    \n    \n    abelp\n    \n as \n    \n    abelp\n    \n, \n    \n    \n    abftz\n    \n as \n    \n    abftz\n    \n, \n    \n    \n    abmng\n    \n as \n    \n    abmng\n    \n, \n    \n    \n    abskz\n    \n as \n    \n    abskz\n    \n, \n    \n    \n    abueb\n    \n as \n    \n    abueb\n    \n, \n    \n    \n    adrn2\n    \n as \n    \n    adrn2\n    \n, \n    \n    \n    adrnr\n    \n as \n    \n    adrnr\n    \n, \n    \n    \n    advcode\n    \n as \n    \n    advcode\n    \n, \n    \n    \n    aedat\n    \n as \n    \n    aedat\n    \n, \n    \n    \n    afnam\n    \n as \n    \n    afnam\n    \n, \n    \n    \n    agdat\n    \n as \n    \n    agdat\n    \n, \n    \n    \n    agmem\n    \n as \n    \n    agmem\n    \n, \n    \n    \n    aktnr\n    \n as \n    \n    aktnr\n    \n, \n    \n    \n    anfnr\n    \n as \n    \n    anfnr\n    \n, \n    \n    \n    anfps\n    \n as \n    \n    anfps\n    \n, \n    \n    \n    anzpu\n    \n as \n    \n    anzpu\n    \n, \n    \n    \n    anzsn\n    \n as \n    \n    anzsn\n    \n, \n    \n    \n    apoms\n    \n as \n    \n    apoms\n    \n, \n    \n    \n    arsnr\n    \n as \n    \n    arsnr\n    \n, \n    \n    \n    arsps\n    \n as \n    \n    arsps\n    \n, \n    \n    \n    attyp\n    \n as \n    \n    attyp\n    \n, \n    \n    \n    aurel\n    \n as \n    \n    aurel\n    \n, \n    \n    \n    banfn\n    \n as \n    \n    banfn\n    \n, \n    \n    \n    bednr\n    \n as \n    \n    bednr\n    \n, \n    \n    \n    berid\n    \n as \n    \n    berid\n    \n, \n    \n    \n    blk_reason_id\n    \n as \n    \n    blk_reason_id\n    \n, \n    \n    \n    blk_reason_txt\n    \n as \n    \n    blk_reason_txt\n    \n, \n    \n    \n    bnfpo\n    \n as \n    \n    bnfpo\n    \n, \n    \n    \n    bonba\n    \n as \n    \n    bonba\n    \n, \n    \n    \n    bonus\n    \n as \n    \n    bonus\n    \n, \n    \n    \n    bprme\n    \n as \n    \n    bprme\n    \n, \n    \n    \n    bpumn\n    \n as \n    \n    bpumn\n    \n, \n    \n    \n    bpumz\n    \n as \n    \n    bpumz\n    \n, \n    \n    \n    brgew\n    \n as \n    \n    brgew\n    \n, \n    \n    \n    brtwr\n    \n as \n    \n    brtwr\n    \n, \n    \n    \n    bsgru\n    \n as \n    \n    bsgru\n    \n, \n    \n    \n    bstae\n    \n as \n    \n    bstae\n    \n, \n    \n    \n    bstyp\n    \n as \n    \n    bstyp\n    \n, \n    \n    \n    budget_pd\n    \n as \n    \n    budget_pd\n    \n, \n    \n    \n    bukrs\n    \n as \n    \n    bukrs\n    \n, \n    \n    \n    bwtar\n    \n as \n    \n    bwtar\n    \n, \n    \n    \n    bwtty\n    \n as \n    \n    bwtty\n    \n, \n    \n    \n    ccomp\n    \n as \n    \n    ccomp\n    \n, \n    \n    \n    chg_fplnr\n    \n as \n    \n    chg_fplnr\n    \n, \n    \n    \n    chg_srv\n    \n as \n    \n    chg_srv\n    \n, \n    \n    \n    cmpl_dlv_itm\n    \n as \n    \n    cmpl_dlv_itm\n    \n, \n    \n    \n    cnfm_qty\n    \n as \n    \n    cnfm_qty\n    \n, \n    \n    \n    cons_order\n    \n as \n    \n    cons_order\n    \n, \n    \n    \n    cqu_sar\n    \n as \n    \n    cqu_sar\n    \n, \n    \n    \n    cuobj\n    \n as \n    \n    cuobj\n    \n, \n    \n    \n    diff_invoice\n    \n as \n    \n    diff_invoice\n    \n, \n    \n    \n    disub_kunnr\n    \n as \n    \n    disub_kunnr\n    \n, \n    \n    \n    disub_owner\n    \n as \n    \n    disub_owner\n    \n, \n    \n    \n    disub_posnr\n    \n as \n    \n    disub_posnr\n    \n, \n    \n    \n    disub_pspnr\n    \n as \n    \n    disub_pspnr\n    \n, \n    \n    \n    disub_sobkz\n    \n as \n    \n    disub_sobkz\n    \n, \n    \n    \n    disub_vbeln\n    \n as \n    \n    disub_vbeln\n    \n, \n    \n    \n    dpamt\n    \n as \n    \n    dpamt\n    \n, \n    \n    \n    dpdat\n    \n as \n    \n    dpdat\n    \n, \n    \n    \n    dppct\n    \n as \n    \n    dppct\n    \n, \n    \n    \n    dptyp\n    \n as \n    \n    dptyp\n    \n, \n    \n    \n    drdat\n    \n as \n    \n    drdat\n    \n, \n    \n    \n    druhr\n    \n as \n    \n    druhr\n    \n, \n    \n    \n    drunr\n    \n as \n    \n    drunr\n    \n, \n    \n    \n    ean11\n    \n as \n    \n    ean11\n    \n, \n    \n    \n    ebeln\n    \n as \n    \n    ebeln\n    \n, \n    \n    \n    ebelp\n    \n as \n    \n    ebelp\n    \n, \n    \n    \n    ebon2\n    \n as \n    \n    ebon2\n    \n, \n    \n    \n    ebon3\n    \n as \n    \n    ebon3\n    \n, \n    \n    \n    ebonf\n    \n as \n    \n    ebonf\n    \n, \n    \n    \n    effwr\n    \n as \n    \n    effwr\n    \n, \n    \n    \n    eglkz\n    \n as \n    \n    eglkz\n    \n, \n    \n    \n    ehtyp\n    \n as \n    \n    ehtyp\n    \n, \n    \n    \n    eildt\n    \n as \n    \n    eildt\n    \n, \n    \n    \n    ekkol\n    \n as \n    \n    ekkol\n    \n, \n    \n    \n    elikz\n    \n as \n    \n    elikz\n    \n, \n    \n    \n    ematn\n    \n as \n    \n    ematn\n    \n, \n    \n    \n    emlif\n    \n as \n    \n    emlif\n    \n, \n    \n    \n    emnfr\n    \n as \n    \n    emnfr\n    \n, \n    \n    \n    empst\n    \n as \n    \n    empst\n    \n, \n    \n    \n    erekz\n    \n as \n    \n    erekz\n    \n, \n    \n    \n    etdrk\n    \n as \n    \n    etdrk\n    \n, \n    \n    \n    etfz1\n    \n as \n    \n    etfz1\n    \n, \n    \n    \n    etfz2\n    \n as \n    \n    etfz2\n    \n, \n    \n    \n    evers\n    \n as \n    \n    evers\n    \n, \n    \n    \n    excpe\n    \n as \n    \n    excpe\n    \n, \n    \n    \n    exlin\n    \n as \n    \n    exlin\n    \n, \n    \n    \n    exsnr\n    \n as \n    \n    exsnr\n    \n, \n    \n    \n    ext_rfx_item\n    \n as \n    \n    ext_rfx_item\n    \n, \n    \n    \n    ext_rfx_number\n    \n as \n    \n    ext_rfx_number\n    \n, \n    \n    \n    ext_rfx_system\n    \n as \n    \n    ext_rfx_system\n    \n, \n    \n    \n    fabkz\n    \n as \n    \n    fabkz\n    \n, \n    \n    \n    ffzhi\n    \n as \n    \n    ffzhi\n    \n, \n    \n    \n    fipos\n    \n as \n    \n    fipos\n    \n, \n    \n    \n    fiscal_incentive\n    \n as \n    \n    fiscal_incentive\n    \n, \n    \n    \n    fiscal_incentive_id\n    \n as \n    \n    fiscal_incentive_id\n    \n, \n    \n    \n    fistl\n    \n as \n    \n    fistl\n    \n, \n    \n    \n    fixmg\n    \n as \n    \n    fixmg\n    \n, \n    \n    \n    fkber\n    \n as \n    \n    fkber\n    \n, \n    \n    \n    fls_rsto\n    \n as \n    \n    fls_rsto\n    \n, \n    \n    \n    fmfgus_key\n    \n as \n    \n    fmfgus_key\n    \n, \n    \n    \n    fplnr\n    \n as \n    \n    fplnr\n    \n, \n    \n    \n    fsh_atp_date\n    \n as \n    \n    fsh_atp_date\n    \n, \n    \n    \n    fsh_collection\n    \n as \n    \n    fsh_collection\n    \n, \n    \n    \n    fsh_grid_cond_rec\n    \n as \n    \n    fsh_grid_cond_rec\n    \n, \n    \n    \n    fsh_item\n    \n as \n    \n    fsh_item\n    \n, \n    \n    \n    fsh_item_group\n    \n as \n    \n    fsh_item_group\n    \n, \n    \n    \n    fsh_psm_pfm_split\n    \n as \n    \n    fsh_psm_pfm_split\n    \n, \n    \n    \n    fsh_season\n    \n as \n    \n    fsh_season\n    \n, \n    \n    \n    fsh_season_year\n    \n as \n    \n    fsh_season_year\n    \n, \n    \n    \n    fsh_ss\n    \n as \n    \n    fsh_ss\n    \n, \n    \n    \n    fsh_theme\n    \n as \n    \n    fsh_theme\n    \n, \n    \n    \n    fsh_transaction\n    \n as \n    \n    fsh_transaction\n    \n, \n    \n    \n    fsh_vas_prnt_id\n    \n as \n    \n    fsh_vas_prnt_id\n    \n, \n    \n    \n    fsh_vas_rel\n    \n as \n    \n    fsh_vas_rel\n    \n, \n    \n    \n    geber\n    \n as \n    \n    geber\n    \n, \n    \n    \n    gewei\n    \n as \n    \n    gewei\n    \n, \n    \n    \n    gnetwr\n    \n as \n    \n    gnetwr\n    \n, \n    \n    \n    grant_nbr\n    \n as \n    \n    grant_nbr\n    \n, \n    \n    \n    handoverloc\n    \n as \n    \n    handoverloc\n    \n, \n    \n    \n    hvr_change_time\n    \n as \n    \n    hvr_change_time\n    \n, \n    \n    \n    hvr_is_deleted\n    \n as \n    \n    hvr_is_deleted\n    \n, \n    \n    \n    idnlf\n    \n as \n    \n    idnlf\n    \n, \n    \n    \n    inco1\n    \n as \n    \n    inco1\n    \n, \n    \n    \n    inco2\n    \n as \n    \n    inco2\n    \n, \n    \n    \n    inco2_l\n    \n as \n    \n    inco2_l\n    \n, \n    \n    \n    inco3_l\n    \n as \n    \n    inco3_l\n    \n, \n    \n    \n    infnr\n    \n as \n    \n    infnr\n    \n, \n    \n    \n    insmk\n    \n as \n    \n    insmk\n    \n, \n    \n    \n    insnc\n    \n as \n    \n    insnc\n    \n, \n    \n    \n    iprkz\n    \n as \n    \n    iprkz\n    \n, \n    \n    \n    itcons\n    \n as \n    \n    itcons\n    \n, \n    \n    \n    iuid_relevant\n    \n as \n    \n    iuid_relevant\n    \n, \n    \n    \n    j_1aidatep\n    \n as \n    \n    j_1aidatep\n    \n, \n    \n    \n    j_1aindxp\n    \n as \n    \n    j_1aindxp\n    \n, \n    \n    \n    j_1bindust\n    \n as \n    \n    j_1bindust\n    \n, \n    \n    \n    j_1bmatorg\n    \n as \n    \n    j_1bmatorg\n    \n, \n    \n    \n    j_1bmatuse\n    \n as \n    \n    j_1bmatuse\n    \n, \n    \n    \n    j_1bnbm\n    \n as \n    \n    j_1bnbm\n    \n, \n    \n    \n    j_1bownpro\n    \n as \n    \n    j_1bownpro\n    \n, \n    \n    \n    kanba\n    \n as \n    \n    kanba\n    \n, \n    \n    \n    kblnr\n    \n as \n    \n    kblnr\n    \n, \n    \n    \n    kblpos\n    \n as \n    \n    kblpos\n    \n, \n    \n    \n    knttp\n    \n as \n    \n    knttp\n    \n, \n    \n    \n    ko_gsber\n    \n as \n    \n    ko_gsber\n    \n, \n    \n    \n    ko_pargb\n    \n as \n    \n    ko_pargb\n    \n, \n    \n    \n    ko_pprctr\n    \n as \n    \n    ko_pprctr\n    \n, \n    \n    \n    ko_prctr\n    \n as \n    \n    ko_prctr\n    \n, \n    \n    \n    kolif\n    \n as \n    \n    kolif\n    \n, \n    \n    \n    konnr\n    \n as \n    \n    konnr\n    \n, \n    \n    \n    ktmng\n    \n as \n    \n    ktmng\n    \n, \n    \n    \n    ktpnr\n    \n as \n    \n    ktpnr\n    \n, \n    \n    \n    kunnr\n    \n as \n    \n    kunnr\n    \n, \n    \n    \n    kzabs\n    \n as \n    \n    kzabs\n    \n, \n    \n    \n    kzbws\n    \n as \n    \n    kzbws\n    \n, \n    \n    \n    kzfme\n    \n as \n    \n    kzfme\n    \n, \n    \n    \n    kzkfg\n    \n as \n    \n    kzkfg\n    \n, \n    \n    \n    kzstu\n    \n as \n    \n    kzstu\n    \n, \n    \n    \n    kztlf\n    \n as \n    \n    kztlf\n    \n, \n    \n    \n    kzvbr\n    \n as \n    \n    kzvbr\n    \n, \n    \n    \n    kzwi1\n    \n as \n    \n    kzwi1\n    \n, \n    \n    \n    kzwi2\n    \n as \n    \n    kzwi2\n    \n, \n    \n    \n    kzwi3\n    \n as \n    \n    kzwi3\n    \n, \n    \n    \n    kzwi4\n    \n as \n    \n    kzwi4\n    \n, \n    \n    \n    kzwi5\n    \n as \n    \n    kzwi5\n    \n, \n    \n    \n    kzwi6\n    \n as \n    \n    kzwi6\n    \n, \n    \n    \n    labnr\n    \n as \n    \n    labnr\n    \n, \n    \n    \n    lblkz\n    \n as \n    \n    lblkz\n    \n, \n    \n    \n    lebre\n    \n as \n    \n    lebre\n    \n, \n    \n    \n    lewed\n    \n as \n    \n    lewed\n    \n, \n    \n    \n    lfret\n    \n as \n    \n    lfret\n    \n, \n    \n    \n    lgort\n    \n as \n    \n    lgort\n    \n, \n    \n    \n    lmein\n    \n as \n    \n    lmein\n    \n, \n    \n    \n    loekz\n    \n as \n    \n    loekz\n    \n, \n    \n    \n    ltsnr\n    \n as \n    \n    ltsnr\n    \n, \n    \n    \n    mahn1\n    \n as \n    \n    mahn1\n    \n, \n    \n    \n    mahn2\n    \n as \n    \n    mahn2\n    \n, \n    \n    \n    mahn3\n    \n as \n    \n    mahn3\n    \n, \n    \n    \n    mahnz\n    \n as \n    \n    mahnz\n    \n, \n    \n    \n    mandt\n    \n as \n    \n    mandt\n    \n, \n    \n    \n    manual_tc_reason\n    \n as \n    \n    manual_tc_reason\n    \n, \n    \n    \n    matkl\n    \n as \n    \n    matkl\n    \n, \n    \n    \n    matnr\n    \n as \n    \n    matnr\n    \n, \n    \n    \n    meins\n    \n as \n    \n    meins\n    \n, \n    \n    \n    menge\n    \n as \n    \n    menge\n    \n, \n    \n    \n    meprf\n    \n as \n    \n    meprf\n    \n, \n    \n    \n    mfrgr\n    \n as \n    \n    mfrgr\n    \n, \n    \n    \n    mfrnr\n    \n as \n    \n    mfrnr\n    \n, \n    \n    \n    mfrpn\n    \n as \n    \n    mfrpn\n    \n, \n    \n    \n    mfzhi\n    \n as \n    \n    mfzhi\n    \n, \n    \n    \n    mhdrz\n    \n as \n    \n    mhdrz\n    \n, \n    \n    \n    mlmaa\n    \n as \n    \n    mlmaa\n    \n, \n    \n    \n    mprof\n    \n as \n    \n    mprof\n    \n, \n    \n    \n    mrpind\n    \n as \n    \n    mrpind\n    \n, \n    \n    \n    mtart\n    \n as \n    \n    mtart\n    \n, \n    \n    \n    mwskz\n    \n as \n    \n    mwskz\n    \n, \n    \n    \n    navnw\n    \n as \n    \n    navnw\n    \n, \n    \n    \n    netpr\n    \n as \n    \n    netpr\n    \n, \n    \n    \n    netwr\n    \n as \n    \n    netwr\n    \n, \n    \n    \n    nfabd\n    \n as \n    \n    nfabd\n    \n, \n    \n    \n    nlabd\n    \n as \n    \n    nlabd\n    \n, \n    \n    \n    notkz\n    \n as \n    \n    notkz\n    \n, \n    \n    \n    novet\n    \n as \n    \n    novet\n    \n, \n    \n    \n    nrfhg\n    \n as \n    \n    nrfhg\n    \n, \n    \n    \n    ntgew\n    \n as \n    \n    ntgew\n    \n, \n    \n    \n    oia_baselo\n    \n as \n    \n    oia_baselo\n    \n, \n    \n    \n    oia_ipmvat\n    \n as \n    \n    oia_ipmvat\n    \n, \n    \n    \n    oia_spltiv\n    \n as \n    \n    oia_spltiv\n    \n, \n    \n    \n    oibasprod\n    \n as \n    \n    oibasprod\n    \n, \n    \n    \n    oic_adestn\n    \n as \n    \n    oic_adestn\n    \n, \n    \n    \n    oic_aorgin\n    \n as \n    \n    oic_aorgin\n    \n, \n    \n    \n    oic_dcityc\n    \n as \n    \n    oic_dcityc\n    \n, \n    \n    \n    oic_dcounc\n    \n as \n    \n    oic_dcounc\n    \n, \n    \n    \n    oic_dland1\n    \n as \n    \n    oic_dland1\n    \n, \n    \n    \n    oic_dregio\n    \n as \n    \n    oic_dregio\n    \n, \n    \n    \n    oic_lifnr\n    \n as \n    \n    oic_lifnr\n    \n, \n    \n    \n    oic_mot\n    \n as \n    \n    oic_mot\n    \n, \n    \n    \n    oic_ocityc\n    \n as \n    \n    oic_ocityc\n    \n, \n    \n    \n    oic_ocounc\n    \n as \n    \n    oic_ocounc\n    \n, \n    \n    \n    oic_oland1\n    \n as \n    \n    oic_oland1\n    \n, \n    \n    \n    oic_oregio\n    \n as \n    \n    oic_oregio\n    \n, \n    \n    \n    oic_pbatch\n    \n as \n    \n    oic_pbatch\n    \n, \n    \n    \n    oic_pdestn\n    \n as \n    \n    oic_pdestn\n    \n, \n    \n    \n    oic_porgin\n    \n as \n    \n    oic_porgin\n    \n, \n    \n    \n    oic_ptrip\n    \n as \n    \n    oic_ptrip\n    \n, \n    \n    \n    oic_truckn\n    \n as \n    \n    oic_truckn\n    \n, \n    \n    \n    oicertf1\n    \n as \n    \n    oicertf1\n    \n, \n    \n    \n    oicertf1_gi\n    \n as \n    \n    oicertf1_gi\n    \n, \n    \n    \n    oid_extbol\n    \n as \n    \n    oid_extbol\n    \n, \n    \n    \n    oid_miscdl\n    \n as \n    \n    oid_miscdl\n    \n, \n    \n    \n    oidatfm1\n    \n as \n    \n    oidatfm1\n    \n, \n    \n    \n    oidatfm1_gi\n    \n as \n    \n    oidatfm1_gi\n    \n, \n    \n    \n    oidatto1\n    \n as \n    \n    oidatto1\n    \n, \n    \n    \n    oidatto1_gi\n    \n as \n    \n    oidatto1_gi\n    \n, \n    \n    \n    oiedbal\n    \n as \n    \n    oiedbal\n    \n, \n    \n    \n    oiedbal_gi\n    \n as \n    \n    oiedbal_gi\n    \n, \n    \n    \n    oiedbalm\n    \n as \n    \n    oiedbalm\n    \n, \n    \n    \n    oiedbalm_gi\n    \n as \n    \n    oiedbalm_gi\n    \n, \n    \n    \n    oiedok\n    \n as \n    \n    oiedok\n    \n, \n    \n    \n    oiedok_gi\n    \n as \n    \n    oiedok_gi\n    \n, \n    \n    \n    oiexgnum\n    \n as \n    \n    oiexgnum\n    \n, \n    \n    \n    oiexgtyp\n    \n as \n    \n    oiexgtyp\n    \n, \n    \n    \n    oiextnr\n    \n as \n    \n    oiextnr\n    \n, \n    \n    \n    oifeech\n    \n as \n    \n    oifeech\n    \n, \n    \n    \n    oifeedt\n    \n as \n    \n    oifeedt\n    \n, \n    \n    \n    oifeetot\n    \n as \n    \n    oifeetot\n    \n, \n    \n    \n    oiferp\n    \n as \n    \n    oiferp\n    \n, \n    \n    \n    oiftind\n    \n as \n    \n    oiftind\n    \n, \n    \n    \n    oighndl\n    \n as \n    \n    oighndl\n    \n, \n    \n    \n    oih_folqty\n    \n as \n    \n    oih_folqty\n    \n, \n    \n    \n    oih_folqty_gi\n    \n as \n    \n    oih_folqty_gi\n    \n, \n    \n    \n    oih_lcfol\n    \n as \n    \n    oih_lcfol\n    \n, \n    \n    \n    oih_lcfol_gi\n    \n as \n    \n    oih_lcfol_gi\n    \n, \n    \n    \n    oih_licin\n    \n as \n    \n    oih_licin\n    \n, \n    \n    \n    oih_licin_gi\n    \n as \n    \n    oih_licin_gi\n    \n, \n    \n    \n    oih_lictp\n    \n as \n    \n    oih_lictp\n    \n, \n    \n    \n    oih_lictp_gi\n    \n as \n    \n    oih_lictp_gi\n    \n, \n    \n    \n    oihantyp\n    \n as \n    \n    oihantyp\n    \n, \n    \n    \n    oihantyp_gi\n    \n as \n    \n    oihantyp_gi\n    \n, \n    \n    \n    oiinex\n    \n as \n    \n    oiinex\n    \n, \n    \n    \n    oiinex_gi\n    \n as \n    \n    oiinex_gi\n    \n, \n    \n    \n    oiitmnr\n    \n as \n    \n    oiitmnr\n    \n, \n    \n    \n    oimatcyc\n    \n as \n    \n    oimatcyc\n    \n, \n    \n    \n    oinetcyc\n    \n as \n    \n    oinetcyc\n    \n, \n    \n    \n    oioilcon\n    \n as \n    \n    oioilcon\n    \n, \n    \n    \n    oipipeval\n    \n as \n    \n    oipipeval\n    \n, \n    \n    \n    oipricie\n    \n as \n    \n    oipricie\n    \n, \n    \n    \n    oipriop\n    \n as \n    \n    oipriop\n    \n, \n    \n    \n    oisbrel\n    \n as \n    \n    oisbrel\n    \n, \n    \n    \n    oitaxcon\n    \n as \n    \n    oitaxcon\n    \n, \n    \n    \n    oitaxfrom\n    \n as \n    \n    oitaxfrom\n    \n, \n    \n    \n    oitaxgrp\n    \n as \n    \n    oitaxgrp\n    \n, \n    \n    \n    oitaxgrp_gi\n    \n as \n    \n    oitaxgrp_gi\n    \n, \n    \n    \n    oitaxto\n    \n as \n    \n    oitaxto\n    \n, \n    \n    \n    oitrind\n    \n as \n    \n    oitrind\n    \n, \n    \n    \n    oitrkjr\n    \n as \n    \n    oitrkjr\n    \n, \n    \n    \n    oitrknr\n    \n as \n    \n    oitrknr\n    \n, \n    \n    \n    oitxcon1\n    \n as \n    \n    oitxcon1\n    \n, \n    \n    \n    oitxcon2\n    \n as \n    \n    oitxcon2\n    \n, \n    \n    \n    oitxcon3\n    \n as \n    \n    oitxcon3\n    \n, \n    \n    \n    oitxcon4\n    \n as \n    \n    oitxcon4\n    \n, \n    \n    \n    oitxcon5\n    \n as \n    \n    oitxcon5\n    \n, \n    \n    \n    oitxcon6\n    \n as \n    \n    oitxcon6\n    \n, \n    \n    \n    oiumbar\n    \n as \n    \n    oiumbar\n    \n, \n    \n    \n    oivatf\n    \n as \n    \n    oivatf\n    \n, \n    \n    \n    oivath\n    \n as \n    \n    oivath\n    \n, \n    \n    \n    packno\n    \n as \n    \n    packno\n    \n, \n    \n    \n    peinh\n    \n as \n    \n    peinh\n    \n, \n    \n    \n    plifz\n    \n as \n    \n    plifz\n    \n, \n    \n    \n    pol_id\n    \n as \n    \n    pol_id\n    \n, \n    \n    \n    prdat\n    \n as \n    \n    prdat\n    \n, \n    \n    \n    prio_req\n    \n as \n    \n    prio_req\n    \n, \n    \n    \n    prio_urg\n    \n as \n    \n    prio_urg\n    \n, \n    \n    \n    prsdr\n    \n as \n    \n    prsdr\n    \n, \n    \n    \n    pstyp\n    \n as \n    \n    pstyp\n    \n, \n    \n    \n    punei\n    \n as \n    \n    punei\n    \n, \n    \n    \n    put_back\n    \n as \n    \n    put_back\n    \n, \n    \n    \n    rdprf\n    \n as \n    \n    rdprf\n    \n, \n    \n    \n    reason_code\n    \n as \n    \n    reason_code\n    \n, \n    \n    \n    ref_item\n    \n as \n    \n    ref_item\n    \n, \n    \n    \n    refsite\n    \n as \n    \n    refsite\n    \n, \n    \n    \n    repos\n    \n as \n    \n    repos\n    \n, \n    \n    \n    reslo\n    \n as \n    \n    reslo\n    \n, \n    \n    \n    retpc\n    \n as \n    \n    retpc\n    \n, \n    \n    \n    retpo\n    \n as \n    \n    retpo\n    \n, \n    \n    \n    revlv\n    \n as \n    \n    revlv\n    \n, \n    \n    \n    saisj\n    \n as \n    \n    saisj\n    \n, \n    \n    \n    saiso\n    \n as \n    \n    saiso\n    \n, \n    \n    \n    satnr\n    \n as \n    \n    satnr\n    \n, \n    \n    \n    schpr\n    \n as \n    \n    schpr\n    \n, \n    \n    \n    sernp\n    \n as \n    \n    sernp\n    \n, \n    \n    \n    serru\n    \n as \n    \n    serru\n    \n, \n    \n    \n    sf_txjcd\n    \n as \n    \n    sf_txjcd\n    \n, \n    \n    \n    sgt_rcat\n    \n as \n    \n    sgt_rcat\n    \n, \n    \n    \n    sgt_scat\n    \n as \n    \n    sgt_scat\n    \n, \n    \n    \n    sikgr\n    \n as \n    \n    sikgr\n    \n, \n    \n    \n    sktof\n    \n as \n    \n    sktof\n    \n, \n    \n    \n    sobkz\n    \n as \n    \n    sobkz\n    \n, \n    \n    \n    source_id\n    \n as \n    \n    source_id\n    \n, \n    \n    \n    source_key\n    \n as \n    \n    source_key\n    \n, \n    \n    \n    spe_abgru\n    \n as \n    \n    spe_abgru\n    \n, \n    \n    \n    spe_chng_sys\n    \n as \n    \n    spe_chng_sys\n    \n, \n    \n    \n    spe_cq_ctrltype\n    \n as \n    \n    spe_cq_ctrltype\n    \n, \n    \n    \n    spe_cq_nocq\n    \n as \n    \n    spe_cq_nocq\n    \n, \n    \n    \n    spe_crm_fkrel\n    \n as \n    \n    spe_crm_fkrel\n    \n, \n    \n    \n    spe_crm_ref_item\n    \n as \n    \n    spe_crm_ref_item\n    \n, \n    \n    \n    spe_crm_ref_so\n    \n as \n    \n    spe_crm_ref_so\n    \n, \n    \n    \n    spe_crm_so\n    \n as \n    \n    spe_crm_so\n    \n, \n    \n    \n    spe_crm_so_item\n    \n as \n    \n    spe_crm_so_item\n    \n, \n    \n    \n    spe_ewm_dtc\n    \n as \n    \n    spe_ewm_dtc\n    \n, \n    \n    \n    spe_insmk_src\n    \n as \n    \n    spe_insmk_src\n    \n, \n    \n    \n    spinf\n    \n as \n    \n    spinf\n    \n, \n    \n    \n    srm_contract_id\n    \n as \n    \n    srm_contract_id\n    \n, \n    \n    \n    srm_contract_itm\n    \n as \n    \n    srm_contract_itm\n    \n, \n    \n    \n    srv_bas_com\n    \n as \n    \n    srv_bas_com\n    \n, \n    \n    \n    ssqss\n    \n as \n    \n    ssqss\n    \n, \n    \n    \n    stafo\n    \n as \n    \n    stafo\n    \n, \n    \n    \n    stapo\n    \n as \n    \n    stapo\n    \n, \n    \n    \n    statu\n    \n as \n    \n    statu\n    \n, \n    \n    \n    status\n    \n as \n    \n    status\n    \n, \n    \n    \n    tax_subject_st\n    \n as \n    \n    tax_subject_st\n    \n, \n    \n    \n    tc_aut_det\n    \n as \n    \n    tc_aut_det\n    \n, \n    \n    \n    techs\n    \n as \n    \n    techs\n    \n, \n    \n    \n    trmrisk_relevant\n    \n as \n    \n    trmrisk_relevant\n    \n, \n    \n    \n    twrkz\n    \n as \n    \n    twrkz\n    \n, \n    \n    \n    txjcd\n    \n as \n    \n    txjcd\n    \n, \n    \n    \n    txz01\n    \n as \n    \n    txz01\n    \n, \n    \n    \n    tzonrc\n    \n as \n    \n    tzonrc\n    \n, \n    \n    \n    uebpo\n    \n as \n    \n    uebpo\n    \n, \n    \n    \n    uebtk\n    \n as \n    \n    uebtk\n    \n, \n    \n    \n    uebto\n    \n as \n    \n    uebto\n    \n, \n    \n    \n    umren\n    \n as \n    \n    umren\n    \n, \n    \n    \n    umrez\n    \n as \n    \n    umrez\n    \n, \n    \n    \n    umsok\n    \n as \n    \n    umsok\n    \n, \n    \n    \n    untto\n    \n as \n    \n    untto\n    \n, \n    \n    \n    uptyp\n    \n as \n    \n    uptyp\n    \n, \n    \n    \n    upvor\n    \n as \n    \n    upvor\n    \n, \n    \n    \n    usequ\n    \n as \n    \n    usequ\n    \n, \n    \n    \n    voleh\n    \n as \n    \n    voleh\n    \n, \n    \n    \n    volum\n    \n as \n    \n    volum\n    \n, \n    \n    \n    vorab\n    \n as \n    \n    vorab\n    \n, \n    \n    \n    vrtkz\n    \n as \n    \n    vrtkz\n    \n, \n    \n    \n    vsart\n    \n as \n    \n    vsart\n    \n, \n    \n    \n    wabwe\n    \n as \n    \n    wabwe\n    \n, \n    \n    \n    webaz\n    \n as \n    \n    webaz\n    \n, \n    \n    \n    webre\n    \n as \n    \n    webre\n    \n, \n    \n    \n    weora\n    \n as \n    \n    weora\n    \n, \n    \n    \n    wepos\n    \n as \n    \n    wepos\n    \n, \n    \n    \n    werks\n    \n as \n    \n    werks\n    \n, \n    \n    \n    weunb\n    \n as \n    \n    weunb\n    \n, \n    \n    \n    wrf_charstc1\n    \n as \n    \n    wrf_charstc1\n    \n, \n    \n    \n    wrf_charstc2\n    \n as \n    \n    wrf_charstc2\n    \n, \n    \n    \n    wrf_charstc3\n    \n as \n    \n    wrf_charstc3\n    \n, \n    \n    \n    xconditions\n    \n as \n    \n    xconditions\n    \n, \n    \n    \n    xersy\n    \n as \n    \n    xersy\n    \n, \n    \n    \n    xoblr\n    \n as \n    \n    xoblr\n    \n, \n    \n    \n    zgtyp\n    \n as \n    \n    zgtyp\n    \n, \n    \n    \n    zwert\n    \n as \n    \n    zwert\n    \n, \n    cast(null as boolean) as \n    \n    _fivetran_deleted\n    \n , \n    cast(null as numeric(28,6)) as \n    \n    _fivetran_rowid\n    \n , \n    cast(null as timestamp) as \n    \n    _fivetran_synced\n    \n , \n    cast(null as TEXT) as \n    \n    _fivetran_sap_archived\n    \n , \n    \n    \n    _accgo_is_co_rel\n    \n as \n    \n    _accgo_is_co_rel\n    \n, \n    \n    \n    _bev1_nedepfree\n    \n as \n    \n    _bev1_nedepfree\n    \n, \n    \n    \n    _bev1_negen_item\n    \n as \n    \n    _bev1_negen_item\n    \n, \n    \n    \n    _bev1_nestruccat\n    \n as \n    \n    _bev1_nestruccat\n    \n\n\n\n    from base\n),\n\nfinal as (\n    select\n        _accgo_is_co_rel,\n        _bev1_nedepfree,\n        _bev1_negen_item,\n        _bev1_nestruccat,\n        abdat,\n        abeln,\n        abelp,\n        abftz,\n        abmng,\n        abskz,\n        abueb,\n        adrn2,\n        adrnr,\n        advcode,\n        aedat,\n        afnam,\n        agdat,\n        agmem,\n        aktnr,\n        anfnr,\n        anfps,\n        anzpu,\n        anzsn,\n        apoms,\n        arsnr,\n        arsps,\n        attyp,\n        aurel,\n        banfn,\n        bednr,\n        berid,\n        blk_reason_id,\n        blk_reason_txt,\n        bnfpo,\n        bonba,\n        bonus,\n        bprme,\n        bpumn,\n        bpumz,\n        brgew,\n        brtwr,\n        bsgru,\n        bstae,\n        bstyp,\n        budget_pd,\n        cast(bukrs as TEXT) as bukrs,\n        bwtar,\n        bwtty,\n        ccomp,\n        chg_fplnr,\n        chg_srv,\n        cmpl_dlv_itm,\n        cnfm_qty,\n        cons_order,\n        cqu_sar,\n        cuobj,\n        diff_invoice,\n        disub_kunnr,\n        disub_owner,\n        disub_posnr,\n        disub_pspnr,\n        disub_sobkz,\n        disub_vbeln,\n        dpamt,\n        dpdat,\n        dppct,\n        dptyp,\n        drdat,\n        druhr,\n        drunr,\n        ean11,\n        cast(ebeln as TEXT) as ebeln,\n        cast(ebelp as TEXT) as ebelp,\n        ebon2,\n        ebon3,\n        ebonf,\n        effwr,\n        eglkz,\n        ehtyp,\n        eildt,\n        ekkol,\n        elikz,\n        ematn,\n        emlif,\n        emnfr,\n        empst,\n        erekz,\n        etdrk,\n        etfz1,\n        etfz2,\n        evers,\n        excpe,\n        exlin,\n        exsnr,\n        ext_rfx_item,\n        ext_rfx_number,\n        ext_rfx_system,\n        fabkz,\n        ffzhi,\n        fipos,\n        fiscal_incentive,\n        fiscal_incentive_id,\n        fistl,\n        fixmg,\n        fkber,\n        fls_rsto,\n        fmfgus_key,\n        fplnr,\n        fsh_atp_date,\n        fsh_collection,\n        fsh_grid_cond_rec,\n        fsh_item,\n        fsh_item_group,\n        fsh_psm_pfm_split,\n        fsh_season,\n        fsh_season_year,\n        fsh_ss,\n        fsh_theme,\n        fsh_transaction,\n        fsh_vas_prnt_id,\n        fsh_vas_rel,\n        geber,\n        gewei,\n        gnetwr,\n        grant_nbr,\n        handoverloc,\n        hvr_change_time,\n        hvr_is_deleted,\n        idnlf,\n        inco1,\n        inco2,\n        inco2_l,\n        inco3_l,\n        infnr,\n        insmk,\n        insnc,\n        iprkz,\n        itcons,\n        iuid_relevant,\n        j_1aidatep,\n        j_1aindxp,\n        j_1bindust,\n        j_1bmatorg,\n        j_1bmatuse,\n        j_1bnbm,\n        j_1bownpro,\n        kanba,\n        kblnr,\n        kblpos,\n        knttp,\n        ko_gsber,\n        ko_pargb,\n        ko_pprctr,\n        ko_prctr,\n        kolif,\n        konnr,\n        ktmng,\n        ktpnr,\n        cast(kunnr as TEXT) as kunnr,\n        kzabs,\n        kzbws,\n        kzfme,\n        kzkfg,\n        kzstu,\n        kztlf,\n        kzvbr,\n        kzwi1,\n        kzwi2,\n        kzwi3,\n        kzwi4,\n        kzwi5,\n        kzwi6,\n        labnr,\n        lblkz,\n        lebre,\n        lewed,\n        lfret,\n        lgort,\n        lmein,\n        loekz,\n        ltsnr,\n        mahn1,\n        mahn2,\n        mahn3,\n        mahnz,\n        cast(mandt as TEXT) as mandt,\n        manual_tc_reason,\n        matkl,\n        cast(matnr as TEXT) as matnr,\n        meins,\n        cast(menge as numeric(28,6)) as menge,\n        meprf,\n        mfrgr,\n        mfrnr,\n        mfrpn,\n        mfzhi,\n        mhdrz,\n        mlmaa,\n        mprof,\n        mrpind,\n        mtart,\n        mwskz,\n        navnw,\n        netpr,\n        cast(netwr as numeric(28,6)) as netwr,\n        nfabd,\n        nlabd,\n        notkz,\n        novet,\n        nrfhg,\n        ntgew,\n        oia_baselo,\n        oia_ipmvat,\n        oia_spltiv,\n        oibasprod,\n        oic_adestn,\n        oic_aorgin,\n        oic_dcityc,\n        oic_dcounc,\n        oic_dland1,\n        oic_dregio,\n        oic_lifnr,\n        oic_mot,\n        oic_ocityc,\n        oic_ocounc,\n        oic_oland1,\n        oic_oregio,\n        oic_pbatch,\n        oic_pdestn,\n        oic_porgin,\n        oic_ptrip,\n        oic_truckn,\n        oicertf1,\n        oicertf1_gi,\n        oid_extbol,\n        oid_miscdl,\n        oidatfm1,\n        oidatfm1_gi,\n        oidatto1,\n        oidatto1_gi,\n        oiedbal,\n        oiedbal_gi,\n        oiedbalm,\n        oiedbalm_gi,\n        oiedok,\n        oiedok_gi,\n        oiexgnum,\n        oiexgtyp,\n        oiextnr,\n        oifeech,\n        oifeedt,\n        oifeetot,\n        oiferp,\n        oiftind,\n        oighndl,\n        oih_folqty,\n        oih_folqty_gi,\n        oih_lcfol,\n        oih_lcfol_gi,\n        oih_licin,\n        oih_licin_gi,\n        oih_lictp,\n        oih_lictp_gi,\n        oihantyp,\n        oihantyp_gi,\n        oiinex,\n        oiinex_gi,\n        oiitmnr,\n        oimatcyc,\n        oinetcyc,\n        oioilcon,\n        oipipeval,\n        oipricie,\n        oipriop,\n        oisbrel,\n        oitaxcon,\n        oitaxfrom,\n        oitaxgrp,\n        oitaxgrp_gi,\n        oitaxto,\n        oitrind,\n        oitrkjr,\n        oitrknr,\n        oitxcon1,\n        oitxcon2,\n        oitxcon3,\n        oitxcon4,\n        oitxcon5,\n        oitxcon6,\n        oiumbar,\n        oivatf,\n        oivath,\n        packno,\n        peinh,\n        plifz,\n        pol_id,\n        prdat,\n        prio_req,\n        prio_urg,\n        prsdr,\n        pstyp,\n        punei,\n        put_back,\n        rdprf,\n        reason_code,\n        ref_item,\n        refsite,\n        repos,\n        reslo,\n        retpc,\n        retpo,\n        revlv,\n        saisj,\n        saiso,\n        satnr,\n        schpr,\n        sernp,\n        serru,\n        sf_txjcd,\n        sgt_rcat,\n        sgt_scat,\n        sikgr,\n        sktof,\n        sobkz,\n        source_id,\n        source_key,\n        spe_abgru,\n        spe_chng_sys,\n        spe_cq_ctrltype,\n        spe_cq_nocq,\n        spe_crm_fkrel,\n        spe_crm_ref_item,\n        spe_crm_ref_so,\n        spe_crm_so,\n        spe_crm_so_item,\n        spe_ewm_dtc,\n        spe_insmk_src,\n        spinf,\n        srm_contract_id,\n        srm_contract_itm,\n        srv_bas_com,\n        ssqss,\n        stafo,\n        stapo,\n        statu,\n        status,\n        tax_subject_st,\n        tc_aut_det,\n        techs,\n        trmrisk_relevant,\n        twrkz,\n        txjcd,\n        txz01,\n        tzonrc,\n        uebpo,\n        uebtk,\n        uebto,\n        umren,\n        umrez,\n        umsok,\n        untto,\n        uptyp,\n        upvor,\n        usequ,\n        voleh,\n        volum,\n        vorab,\n        vrtkz,\n        vsart,\n        wabwe,\n        webaz,\n        webre,\n        weora,\n        wepos,\n        werks,\n        weunb,\n        wrf_charstc1,\n        wrf_charstc2,\n        wrf_charstc3,\n        xconditions,\n        xersy,\n        xoblr,\n        zgtyp,\n        zwert,\n        _fivetran_sap_archived,\n        _fivetran_deleted,\n        _fivetran_rowid,\n        _fivetran_synced\n    from fields\n)\n\nselect *\nfrom final", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null, "primary_key": [], "time_spine": null}, "model.sap.stg_sap__pa0031": {"database": "postgres", "schema": "public_sap_dev", "name": "stg_sap__pa0031", "resource_type": "model", "package_name": "sap", "path": "staging/stg_sap__pa0031.sql", "original_file_path": "models/staging/stg_sap__pa0031.sql", "unique_id": "model.sap.stg_sap__pa0031", "fqn": ["sap", "staging", "stg_sap__pa0031"], "alias": "stg_sap__pa0031", "checksum": {"name": "sha256", "checksum": "5c9212d73b6a3dc8a2515bab6416f1d018787412fc3baac4c5e2dac33dc989d5"}, "config": {"enabled": true, "alias": null, "schema": "sap_dev", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "view", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "freshness": null}, "tags": [], "description": "HR master record--infotype 0031 (Reference personnel numbers)", "columns": {"aedtm": {"name": "aedtm", "description": "Changed on", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "begda": {"name": "begda", "description": "Start date", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "endda": {"name": "endda", "description": "End date", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "flag1": {"name": "flag1", "description": "Reserved field/unused field", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "flag2": {"name": "flag2", "description": "Reserved field/unused field", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "flag3": {"name": "flag3", "description": "Reserved field/unused field", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "flag4": {"name": "flag4", "description": "Reserved field/unused field", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "grpvl": {"name": "grpvl", "description": "Grouping value for personnel assignments", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "histo": {"name": "histo", "description": "Historical record flag", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "itbld": {"name": "itbld", "description": "Infotype screen control", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "itxex": {"name": "itxex", "description": "Text exists for infotype", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "mandt": {"name": "mandt", "description": "Client", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "objps": {"name": "objps", "description": "Object information", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "ordex": {"name": "ordex", "description": "Confirmation fields exist", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "pernr": {"name": "pernr", "description": "Personnel number", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "preas": {"name": "preas", "description": "Reason for changing master data", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "refex": {"name": "refex", "description": "Reference fields exist", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "rese1": {"name": "rese1", "description": "Reserved field/unused field of length 2", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "rese2": {"name": "rese2", "description": "Reserved field/unused field of length 2", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "rfp01": {"name": "rfp01", "description": "Reference personnel number", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "rfp02": {"name": "rfp02", "description": "Reference personnel number", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "rfp03": {"name": "rfp03", "description": "Reference personnel number", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "rfp04": {"name": "rfp04", "description": "Reference personnel number", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "rfp05": {"name": "rfp05", "description": "Reference personnel number", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "rfp06": {"name": "rfp06", "description": "Reference personnel number", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "rfp07": {"name": "rfp07", "description": "Reference personnel number", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "rfp08": {"name": "rfp08", "description": "Reference personnel number", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "rfp09": {"name": "rfp09", "description": "Reference personnel number", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "rfp10": {"name": "rfp10", "description": "Reference personnel number", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "rfp11": {"name": "rfp11", "description": "Reference personnel number", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "rfp12": {"name": "rfp12", "description": "Reference personnel number", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "rfp13": {"name": "rfp13", "description": "Reference personnel number", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "rfp14": {"name": "rfp14", "description": "Reference personnel number", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "rfp15": {"name": "rfp15", "description": "Reference personnel number", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "rfp16": {"name": "rfp16", "description": "Reference personnel number", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "rfp17": {"name": "rfp17", "description": "Reference personnel number", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "rfp18": {"name": "rfp18", "description": "Reference personnel number", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "rfp19": {"name": "rfp19", "description": "Reference personnel number", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "rfp20": {"name": "rfp20", "description": "Reference personnel number", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "seqnr": {"name": "seqnr", "description": "Number of infotype record with same key", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "sprps": {"name": "sprps", "description": "Lock indicator for HR master data record", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "subty": {"name": "subty", "description": "Subtype", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "uname": {"name": "uname", "description": "Name of person who changed object", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": "sap://models/staging/stg_sap.yml", "build_path": null, "unrendered_config": {"materialized": "view", "schema": "sap_{{ var('directed_schema','dev') }}", "enabled": true}, "created_at": 1756850331.1219769, "relation_name": "\"postgres\".\"public_sap_dev\".\"stg_sap__pa0031\"", "raw_code": "{{ config(enabled=var('sap_using_pa0031', True)) }}\n\n{% set source_columns = adapter.get_columns_in_relation(ref('stg_sap__pa0031_tmp')) %}\n\nwith base as (\n\n    select {{ remove_slashes_from_col_names(source_columns) }}\n    from {{ ref('stg_sap__pa0031_tmp') }}\n),\n\nfields as (\n\n    select\n        {{\n            fivetran_utils.fill_staging_columns(\n                source_columns=source_columns,\n                staging_columns=get_pa0031_columns()\n            )\n        }}\n    from base\n),\n\nfinal as (\n    \n    select\n        cast(mandt as {{ dbt.type_string() }}) as mandt,\n        pernr,\n        subty,\n        objps,\n        sprps,\n        endda,\n        begda,\n        seqnr,\n        aedtm,\n        flag1,\n        flag2,\n        flag3,\n        flag4,\n        grpvl,\n        histo,\n        itbld,\n        itxex,\n        ordex,\n        preas,\n        refex,\n        rese1,\n        rese2,\n        rfp01,\n        rfp02,\n        rfp03,\n        rfp04,\n        rfp05,\n        rfp06,\n        rfp07,\n        rfp08,\n        rfp09,\n        rfp10,\n        rfp11,\n        rfp12,\n        rfp13,\n        rfp14,\n        rfp15,\n        rfp16,\n        rfp17,\n        rfp18,\n        rfp19,\n        rfp20,\n        uname\n    from fields\n)\n\nselect *\nfrom final", "doc_blocks": [], "language": "sql", "refs": [{"name": "stg_sap__pa0031_tmp", "package": null, "version": null}, {"name": "stg_sap__pa0031_tmp", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.sap.remove_slashes_from_col_names", "macro.sap.get_pa0031_columns", "macro.fivetran_utils.fill_staging_columns", "macro.dbt.type_string"], "nodes": ["model.sap.stg_sap__pa0031_tmp"]}, "compiled_path": "target/compiled/sap/models/staging/stg_sap__pa0031.sql", "compiled": true, "compiled_code": "\n\n\n\nwith base as (\n\n    select \n        \"aedtm\" as aedtm,\n        \"begda\" as begda,\n        \"endda\" as endda,\n        \"flag1\" as flag1,\n        \"flag2\" as flag2,\n        \"flag3\" as flag3,\n        \"flag4\" as flag4,\n        \"grpvl\" as grpvl,\n        \"histo\" as histo,\n        \"itbld\" as itbld,\n        \"itxex\" as itxex,\n        \"mandt\" as mandt,\n        \"objps\" as objps,\n        \"ordex\" as ordex,\n        \"pernr\" as pernr,\n        \"preas\" as preas,\n        \"refex\" as refex,\n        \"rese1\" as rese1,\n        \"rese2\" as rese2,\n        \"rfp01\" as rfp01,\n        \"rfp02\" as rfp02,\n        \"rfp03\" as rfp03,\n        \"rfp04\" as rfp04,\n        \"rfp05\" as rfp05,\n        \"rfp06\" as rfp06,\n        \"rfp07\" as rfp07,\n        \"rfp08\" as rfp08,\n        \"rfp09\" as rfp09,\n        \"rfp10\" as rfp10,\n        \"rfp11\" as rfp11,\n        \"rfp12\" as rfp12,\n        \"rfp13\" as rfp13,\n        \"rfp14\" as rfp14,\n        \"rfp15\" as rfp15,\n        \"rfp16\" as rfp16,\n        \"rfp17\" as rfp17,\n        \"rfp18\" as rfp18,\n        \"rfp19\" as rfp19,\n        \"rfp20\" as rfp20,\n        \"seqnr\" as seqnr,\n        \"sprps\" as sprps,\n        \"subty\" as subty,\n        \"uname\" as uname,\n        \"_fivetran_rowid\" as _fivetran_rowid,\n        \"_fivetran_deleted\" as _fivetran_deleted,\n        \"_fivetran_synced\" as _fivetran_synced\n    from \"postgres\".\"public_sap_dev\".\"stg_sap__pa0031_tmp\"\n),\n\nfields as (\n\n    select\n        \n    \n    \n    _fivetran_deleted\n    \n as \n    \n    _fivetran_deleted\n    \n, \n    \n    \n    _fivetran_rowid\n    \n as \n    \n    _fivetran_rowid\n    \n, \n    \n    \n    _fivetran_synced\n    \n as \n    \n    _fivetran_synced\n    \n, \n    \n    \n    aedtm\n    \n as \n    \n    aedtm\n    \n, \n    \n    \n    begda\n    \n as \n    \n    begda\n    \n, \n    \n    \n    endda\n    \n as \n    \n    endda\n    \n, \n    \n    \n    flag1\n    \n as \n    \n    flag1\n    \n, \n    \n    \n    flag2\n    \n as \n    \n    flag2\n    \n, \n    \n    \n    flag3\n    \n as \n    \n    flag3\n    \n, \n    \n    \n    flag4\n    \n as \n    \n    flag4\n    \n, \n    \n    \n    grpvl\n    \n as \n    \n    grpvl\n    \n, \n    \n    \n    histo\n    \n as \n    \n    histo\n    \n, \n    \n    \n    itbld\n    \n as \n    \n    itbld\n    \n, \n    \n    \n    itxex\n    \n as \n    \n    itxex\n    \n, \n    \n    \n    mandt\n    \n as \n    \n    mandt\n    \n, \n    \n    \n    objps\n    \n as \n    \n    objps\n    \n, \n    \n    \n    ordex\n    \n as \n    \n    ordex\n    \n, \n    \n    \n    pernr\n    \n as \n    \n    pernr\n    \n, \n    \n    \n    preas\n    \n as \n    \n    preas\n    \n, \n    \n    \n    refex\n    \n as \n    \n    refex\n    \n, \n    \n    \n    rese1\n    \n as \n    \n    rese1\n    \n, \n    \n    \n    rese2\n    \n as \n    \n    rese2\n    \n, \n    \n    \n    rfp01\n    \n as \n    \n    rfp01\n    \n, \n    \n    \n    rfp02\n    \n as \n    \n    rfp02\n    \n, \n    \n    \n    rfp03\n    \n as \n    \n    rfp03\n    \n, \n    \n    \n    rfp04\n    \n as \n    \n    rfp04\n    \n, \n    \n    \n    rfp05\n    \n as \n    \n    rfp05\n    \n, \n    \n    \n    rfp06\n    \n as \n    \n    rfp06\n    \n, \n    \n    \n    rfp07\n    \n as \n    \n    rfp07\n    \n, \n    \n    \n    rfp08\n    \n as \n    \n    rfp08\n    \n, \n    \n    \n    rfp09\n    \n as \n    \n    rfp09\n    \n, \n    \n    \n    rfp10\n    \n as \n    \n    rfp10\n    \n, \n    \n    \n    rfp11\n    \n as \n    \n    rfp11\n    \n, \n    \n    \n    rfp12\n    \n as \n    \n    rfp12\n    \n, \n    \n    \n    rfp13\n    \n as \n    \n    rfp13\n    \n, \n    \n    \n    rfp14\n    \n as \n    \n    rfp14\n    \n, \n    \n    \n    rfp15\n    \n as \n    \n    rfp15\n    \n, \n    \n    \n    rfp16\n    \n as \n    \n    rfp16\n    \n, \n    \n    \n    rfp17\n    \n as \n    \n    rfp17\n    \n, \n    \n    \n    rfp18\n    \n as \n    \n    rfp18\n    \n, \n    \n    \n    rfp19\n    \n as \n    \n    rfp19\n    \n, \n    \n    \n    rfp20\n    \n as \n    \n    rfp20\n    \n, \n    \n    \n    seqnr\n    \n as \n    \n    seqnr\n    \n, \n    \n    \n    sprps\n    \n as \n    \n    sprps\n    \n, \n    \n    \n    subty\n    \n as \n    \n    subty\n    \n, \n    \n    \n    uname\n    \n as \n    \n    uname\n    \n\n\n\n    from base\n),\n\nfinal as (\n    \n    select\n        cast(mandt as TEXT) as mandt,\n        pernr,\n        subty,\n        objps,\n        sprps,\n        endda,\n        begda,\n        seqnr,\n        aedtm,\n        flag1,\n        flag2,\n        flag3,\n        flag4,\n        grpvl,\n        histo,\n        itbld,\n        itxex,\n        ordex,\n        preas,\n        refex,\n        rese1,\n        rese2,\n        rfp01,\n        rfp02,\n        rfp03,\n        rfp04,\n        rfp05,\n        rfp06,\n        rfp07,\n        rfp08,\n        rfp09,\n        rfp10,\n        rfp11,\n        rfp12,\n        rfp13,\n        rfp14,\n        rfp15,\n        rfp16,\n        rfp17,\n        rfp18,\n        rfp19,\n        rfp20,\n        uname\n    from fields\n)\n\nselect *\nfrom final", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null, "primary_key": [], "time_spine": null}, "model.sap.stg_sap__t880": {"database": "postgres", "schema": "public_sap_dev", "name": "stg_sap__t880", "resource_type": "model", "package_name": "sap", "path": "staging/stg_sap__t880.sql", "original_file_path": "models/staging/stg_sap__t880.sql", "unique_id": "model.sap.stg_sap__t880", "fqn": ["sap", "staging", "stg_sap__t880"], "alias": "stg_sap__t880", "checksum": {"name": "sha256", "checksum": "5ec07cc8d613ced5037e6800d1a2496845df83853c0e448a06ca4090db07e0fe"}, "config": {"enabled": true, "alias": null, "schema": "sap_dev", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "view", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "freshness": null}, "tags": [], "description": "Global company data (for KONS Ledger)", "columns": {"_fivetran_deleted": {"name": "_fivetran_deleted", "description": "Fivetran deletion marker", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "_fivetran_rowid": {"name": "_fivetran_rowid", "description": "Fivetran unique row ID", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "_fivetran_synced": {"name": "_fivetran_synced", "description": "Fivetran sync timestamp", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "city": {"name": "city", "description": "City", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "cntry": {"name": "cntry", "description": "Country key", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "curr": {"name": "curr", "description": "Currency key", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "glsip": {"name": "glsip", "description": "Global ledger posting indicator", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "indpo": {"name": "indpo", "description": "Indicator purchase order relevant", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "langu": {"name": "langu", "description": "Language key", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "lccomp": {"name": "lccomp", "description": "Local company number", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "mandt": {"name": "mandt", "description": "Client", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "mclnt": {"name": "mclnt", "description": "Client in local company", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "mcomp": {"name": "mcomp", "description": "Consolidated company number", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "modcp": {"name": "modcp", "description": "Consolidation module", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "name1": {"name": "name1", "description": "Company name", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "name2": {"name": "name2", "description": "Company name 2", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "pobox": {"name": "pobox", "description": "PO box", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "pstlc": {"name": "pstlc", "description": "Postal code", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "rcomp": {"name": "rcomp", "description": "Company", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "resta": {"name": "resta", "description": "Region/state", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "rform": {"name": "rform", "description": "Legal form", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "stret": {"name": "stret", "description": "Street", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "strt2": {"name": "strt2", "description": "Street 2", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "zweig": {"name": "zweig", "description": "Branch number", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": "sap://models/staging/stg_sap.yml", "build_path": null, "unrendered_config": {"materialized": "view", "schema": "sap_{{ var('directed_schema','dev') }}", "enabled": true}, "created_at": 1756850331.3062775, "relation_name": "\"postgres\".\"public_sap_dev\".\"stg_sap__t880\"", "raw_code": "{{ config(enabled=var('sap_using_t880', True)) }}\n\n{% set source_columns = adapter.get_columns_in_relation(ref('stg_sap__t880_tmp')) %}\n\nwith base as (\n\n    select {{ remove_slashes_from_col_names(source_columns) }}\n    from {{ ref('stg_sap__t880_tmp') }}\n),\n\nfields as (\n\n    select\n        {{\n            fivetran_utils.fill_staging_columns(\n                source_columns=source_columns,\n                staging_columns=get_t880_columns()\n            )\n        }}\n    from base\n),\n\nfinal as (\n\n    select\n        _fivetran_deleted,\n        _fivetran_rowid,\n        _fivetran_synced,\n        city,\n        cntry,\n        curr,\n        glsip,\n        indpo,\n        langu,\n        lccomp,\n        cast(mandt as {{ dbt.type_string() }}) as mandt,\n        mclnt,\n        mcomp,\n        modcp,\n        name1,\n        name2,\n        pobox,\n        pstlc,\n        rcomp,\n        resta,\n        rform,\n        stret,\n        strt2,\n        zweig\n    from fields\n)\n\nselect * \nfrom final", "doc_blocks": [], "language": "sql", "refs": [{"name": "stg_sap__t880_tmp", "package": null, "version": null}, {"name": "stg_sap__t880_tmp", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.sap.remove_slashes_from_col_names", "macro.sap.get_t880_columns", "macro.fivetran_utils.fill_staging_columns", "macro.dbt.type_string"], "nodes": ["model.sap.stg_sap__t880_tmp"]}, "compiled_path": "target/compiled/sap/models/staging/stg_sap__t880.sql", "compiled": true, "compiled_code": "\n\n\n\nwith base as (\n\n    select \n        \"mandt\" as mandt,\n        \"rcomp\" as rcomp,\n        \"name1\" as name1,\n        \"cntry\" as cntry,\n        \"name2\" as name2,\n        \"langu\" as langu,\n        \"stret\" as stret,\n        \"pobox\" as pobox,\n        \"pstlc\" as pstlc,\n        \"city\" as city,\n        \"curr\" as curr,\n        \"modcp\" as modcp,\n        \"glsip\" as glsip,\n        \"resta\" as resta,\n        \"rform\" as rform,\n        \"zweig\" as zweig,\n        \"mcomp\" as mcomp,\n        \"mclnt\" as mclnt,\n        \"lccomp\" as lccomp,\n        \"strt2\" as strt2,\n        \"indpo\" as indpo,\n        \"_fivetran_rowid\" as _fivetran_rowid,\n        \"_fivetran_deleted\" as _fivetran_deleted,\n        \"_fivetran_synced\" as _fivetran_synced\n    from \"postgres\".\"public_sap_dev\".\"stg_sap__t880_tmp\"\n),\n\nfields as (\n\n    select\n        \n    \n    \n    _fivetran_deleted\n    \n as \n    \n    _fivetran_deleted\n    \n, \n    \n    \n    _fivetran_rowid\n    \n as \n    \n    _fivetran_rowid\n    \n, \n    \n    \n    _fivetran_synced\n    \n as \n    \n    _fivetran_synced\n    \n, \n    \n    \n    city\n    \n as \n    \n    city\n    \n, \n    \n    \n    cntry\n    \n as \n    \n    cntry\n    \n, \n    \n    \n    curr\n    \n as \n    \n    curr\n    \n, \n    \n    \n    glsip\n    \n as \n    \n    glsip\n    \n, \n    \n    \n    indpo\n    \n as \n    \n    indpo\n    \n, \n    \n    \n    langu\n    \n as \n    \n    langu\n    \n, \n    \n    \n    lccomp\n    \n as \n    \n    lccomp\n    \n, \n    \n    \n    mandt\n    \n as \n    \n    mandt\n    \n, \n    \n    \n    mclnt\n    \n as \n    \n    mclnt\n    \n, \n    \n    \n    mcomp\n    \n as \n    \n    mcomp\n    \n, \n    \n    \n    modcp\n    \n as \n    \n    modcp\n    \n, \n    \n    \n    name1\n    \n as \n    \n    name1\n    \n, \n    \n    \n    name2\n    \n as \n    \n    name2\n    \n, \n    \n    \n    pobox\n    \n as \n    \n    pobox\n    \n, \n    \n    \n    pstlc\n    \n as \n    \n    pstlc\n    \n, \n    \n    \n    rcomp\n    \n as \n    \n    rcomp\n    \n, \n    \n    \n    resta\n    \n as \n    \n    resta\n    \n, \n    \n    \n    rform\n    \n as \n    \n    rform\n    \n, \n    \n    \n    stret\n    \n as \n    \n    stret\n    \n, \n    \n    \n    strt2\n    \n as \n    \n    strt2\n    \n, \n    \n    \n    zweig\n    \n as \n    \n    zweig\n    \n\n\n\n    from base\n),\n\nfinal as (\n\n    select\n        _fivetran_deleted,\n        _fivetran_rowid,\n        _fivetran_synced,\n        city,\n        cntry,\n        curr,\n        glsip,\n        indpo,\n        langu,\n        lccomp,\n        cast(mandt as TEXT) as mandt,\n        mclnt,\n        mcomp,\n        modcp,\n        name1,\n        name2,\n        pobox,\n        pstlc,\n        rcomp,\n        resta,\n        rform,\n        stret,\n        strt2,\n        zweig\n    from fields\n)\n\nselect * \nfrom final", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null, "primary_key": [], "time_spine": null}, "model.sap.stg_sap__t001": {"database": "postgres", "schema": "public_sap_dev", "name": "stg_sap__t001", "resource_type": "model", "package_name": "sap", "path": "staging/stg_sap__t001.sql", "original_file_path": "models/staging/stg_sap__t001.sql", "unique_id": "model.sap.stg_sap__t001", "fqn": ["sap", "staging", "stg_sap__t001"], "alias": "stg_sap__t001", "checksum": {"name": "sha256", "checksum": "15f5f9de5c0420e3af0d6d93049d633e258478c113c7ca9146e4dcd92184f6cc"}, "config": {"enabled": true, "alias": null, "schema": "sap_dev", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "view", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "freshness": null}, "tags": [], "description": "Company codes", "columns": {"_fivetran_deleted": {"name": "_fivetran_deleted", "description": "Fivetran deletion marker", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "_fivetran_sap_archived": {"name": "_fivetran_sap_archived", "description": "Fivetran SAP archive marker", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "_fivetran_synced": {"name": "_fivetran_synced", "description": "Fivetran sync timestamp", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "adrnr": {"name": "adrnr", "description": "Address number", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "bapovar": {"name": "bapovar", "description": "BAPI variant for company code", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "bukrs": {"name": "bukrs", "description": "Company code", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "butxt": {"name": "butxt", "description": "Company name", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "bukrs_glob": {"name": "bukrs_glob", "description": "Global company code", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "buvar": {"name": "buvar", "description": "Posting period variant", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "dkweg": {"name": "dkweg", "description": "Payment methods permitted", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "dtamtc": {"name": "dtamtc", "description": "Automatic tax calculation procedure", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "dtaxr": {"name": "dtaxr", "description": "Tax reporting country", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "dtprov": {"name": "dtprov", "description": "Withholding tax provider", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "dttaxc": {"name": "dttaxc", "description": "Withholding tax code", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "dttdsp": {"name": "dttdsp", "description": "Display withholding tax data", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "ebukr": {"name": "ebukr", "description": "Central company code", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "fdbuk": {"name": "fdbuk", "description": "Head office company code", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "fikrs": {"name": "fikrs", "description": "Financial management area", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "fm_derive_acc": {"name": "fm_derive_acc", "description": "FM derive account assignment", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "fmhrdate": {"name": "fmhrdate", "description": "Date for FM budget check", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "fstva": {"name": "fstva", "description": "Financial statement version", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "fstvare": {"name": "fstvare", "description": "Financial statement version (retirement)", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "impda": {"name": "impda", "description": "Import date", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "infmt": {"name": "infmt", "description": "Invoice format key", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "kkber": {"name": "kkber", "description": "Credit control area", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "kokfi": {"name": "kokfi", "description": "FI system indicator", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "kopim": {"name": "kopim", "description": "Payment methods copied", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "ktop2": {"name": "ktop2", "description": "Alternative chart of accounts", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "ktopl": {"name": "ktopl", "description": "Chart of accounts", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "land1": {"name": "land1", "description": "Country key", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "mandt": {"name": "mandt", "description": "Client", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "mregl": {"name": "mregl", "description": "Tax reporting country for EU", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "mwska": {"name": "mwska", "description": "Default tax code for sales", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "mwskv": {"name": "mwskv", "description": "Default tax code for purchases", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "offsacct": {"name": "offsacct", "description": "Offset account", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "opvar": {"name": "opvar", "description": "Open item clearing variant", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "ort01": {"name": "ort01", "description": "City", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "periv": {"name": "periv", "description": "Fiscal year variant", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "pp_pdate": {"name": "pp_pdate", "description": "Planned posting date", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "pst_per_var": {"name": "pst_per_var", "description": "Posting period variant", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "rcomp": {"name": "rcomp", "description": "Company", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "spras": {"name": "spras", "description": "Language key", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "stceg": {"name": "stceg", "description": "VAT registration number", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "surccm": {"name": "surccm", "description": "Surrogate company code mapping", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "txjcd": {"name": "txjcd", "description": "Tax jurisdiction code", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "txkrs": {"name": "txkrs", "description": "Currency translation key", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "umkrs": {"name": "umkrs", "description": "Intercompany clearing account", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "waabw": {"name": "waabw", "description": "Default exchange rate type", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "waers": {"name": "waers", "description": "Currency key", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "wfvar": {"name": "wfvar", "description": "Workflow variant", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "wt_newwt": {"name": "wt_newwt", "description": "Withholding tax changeover indicator", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "xbbba": {"name": "xbbba", "description": "Business area is mandatory", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "xbbbe": {"name": "xbbbe", "description": "Business area derived from profit center", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "xbbbf": {"name": "xbbbf", "description": "Derivation of business area from plant", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "xbbko": {"name": "xbbko", "description": "Business area derived from cost object", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "xbbsc": {"name": "xbbsc", "description": "Business area derived from sales order", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "xcession": {"name": "xcession", "description": "Tax-exempt company indicator", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "xcos": {"name": "xcos", "description": "Cost of sales accounting active", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "xcovr": {"name": "xcovr", "description": "Commitment item is required", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "xeink": {"name": "xeink", "description": "Purchasing data maintained", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "xextb": {"name": "xextb", "description": "External business partner required", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "xfdis": {"name": "xfdis", "description": "Discount is fixed", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "xfdmm": {"name": "xfdmm", "description": "Materials management active", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "xfdsd": {"name": "xfdsd", "description": "Sales and distribution active", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "xfmca": {"name": "xfmca", "description": "FM active (cash-based)", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "xfmcb": {"name": "xfmcb", "description": "FM active (budget-based)", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "xfmco": {"name": "xfmco", "description": "FM active (commitment-based)", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "xgjrv": {"name": "xgjrv", "description": "Journal voucher active", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "xgsbe": {"name": "xgsbe", "description": "Business area financials active", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "xjvaa": {"name": "xjvaa", "description": "JV accounting active", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "xkdft": {"name": "xkdft", "description": "Default tax indicator", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "xkkbi": {"name": "xkkbi", "description": "Credit management active", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "xmwsn": {"name": "xmwsn", "description": "New tax procedure active", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "xnegp": {"name": "xnegp", "description": "Negative postings allowed", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "xprod": {"name": "xprod", "description": "Product costing active", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "xskfn": {"name": "xskfn", "description": "Reconciliation accounts required", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "xslta": {"name": "xslta", "description": "SLA transfer active", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "xsplt": {"name": "xsplt", "description": "Document splitting active", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "xstdt": {"name": "xstdt", "description": "Statistics date usage", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "xvalv": {"name": "xvalv", "description": "Use valuation view", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "xvatdate": {"name": "xvatdate", "description": "VAT date active", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "xvvwa": {"name": "xvvwa", "description": "Vendor withholding tax active", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": "sap://models/staging/stg_sap.yml", "build_path": null, "unrendered_config": {"materialized": "view", "schema": "sap_{{ var('directed_schema','dev') }}", "enabled": true}, "created_at": 1756850331.1482258, "relation_name": "\"postgres\".\"public_sap_dev\".\"stg_sap__t001\"", "raw_code": "{{ config(enabled=var('sap_using_t001', True)) }}\n\n{% set source_columns = adapter.get_columns_in_relation(ref('stg_sap__t001_tmp')) %}\n\nwith base as (\n\n    select {{ remove_slashes_from_col_names(source_columns) }}\n    from {{ ref('stg_sap__t001_tmp') }}\n),\n\nfields as (\n\n    select\n        {{\n            fivetran_utils.fill_staging_columns(\n                source_columns=source_columns,\n                staging_columns=get_t001_columns()\n            )\n        }}\n    from base\n),\n\nfinal as (\n\n    select\n        cast(mandt as {{ dbt.type_string() }}) as mandt,\n        cast(bukrs as {{ dbt.type_string() }}) as bukrs,\n        dkweg,\n        xgjrv,\n        xeink,\n        fdbuk,\n        pp_pdate,\n        xprod,\n        xskfn,\n        xcovr,\n        ebukr,\n        bukrs_glob,\n        xmwsn,\n        butxt,\n        bapovar,\n        xbbko,\n        dttdsp,\n        dtaxr,\n        impda,\n        kkber,\n        xfmca,\n        xfmcb,\n        surccm,\n        fstvare,\n        periv,\n        txjcd,\n        fmhrdate,\n        xbbba,\n        ort01,\n        rcomp,\n        xsplt,\n        kopim,\n        infmt,\n        fm_derive_acc,\n        ktopl,\n        umkrs,\n        xkkbi,\n        pst_per_var,\n        xvatdate,\n        txkrs,\n        waers,\n        xkdft,\n        xcos,\n        xbbbf,\n        xbbsc,\n        xfmco,\n        dttaxc,\n        mregl,\n        mwskv,\n        xstdt,\n        xnegp,\n        spras,\n        xvvwa,\n        dtprov,\n        waabw,\n        wt_newwt,\n        xcession,\n        xslta,\n        adrnr,\n        xjvaa,\n        opvar,\n        mwska,\n        kokfi,\n        ktop2,\n        xextb,\n        buvar,\n        offsacct,\n        dtamtc,\n        wfvar,\n        land1,\n        fstva,\n        xfdis,\n        xbbbe,\n        xvalv,\n        fikrs,\n        xfdsd,\n        xfdmm,\n        xgsbe,\n        stceg,\n        _fivetran_deleted,\n        _fivetran_synced,\n        _fivetran_sap_archived\n    from fields\n)\n\nselect * \nfrom final", "doc_blocks": [], "language": "sql", "refs": [{"name": "stg_sap__t001_tmp", "package": null, "version": null}, {"name": "stg_sap__t001_tmp", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.sap.remove_slashes_from_col_names", "macro.sap.get_t001_columns", "macro.fivetran_utils.fill_staging_columns", "macro.dbt.type_string"], "nodes": ["model.sap.stg_sap__t001_tmp"]}, "compiled_path": "target/compiled/sap/models/staging/stg_sap__t001.sql", "compiled": true, "compiled_code": "\n\n\n\nwith base as (\n\n    select \n        \"bukrs\" as bukrs,\n        \"mandt\" as mandt,\n        \"butxt\" as butxt,\n        \"ort01\" as ort01,\n        \"land1\" as land1,\n        \"waers\" as waers,\n        \"spras\" as spras,\n        \"ktopl\" as ktopl,\n        \"waabw\" as waabw,\n        \"periv\" as periv,\n        \"kokfi\" as kokfi,\n        \"rcomp\" as rcomp,\n        \"adrnr\" as adrnr,\n        \"stceg\" as stceg,\n        \"fikrs\" as fikrs,\n        \"xfmco\" as xfmco,\n        \"xfmcb\" as xfmcb,\n        \"xfmca\" as xfmca,\n        \"txjcd\" as txjcd,\n        \"fmhrdate\" as fmhrdate,\n        \"buvar\" as buvar,\n        \"fdbuk\" as fdbuk,\n        \"xfdis\" as xfdis,\n        \"xvalv\" as xvalv,\n        \"xskfn\" as xskfn,\n        \"kkber\" as kkber,\n        \"xmwsn\" as xmwsn,\n        \"mregl\" as mregl,\n        \"xgsbe\" as xgsbe,\n        \"xgjrv\" as xgjrv,\n        \"xkdft\" as xkdft,\n        \"xprod\" as xprod,\n        \"xeink\" as xeink,\n        \"xjvaa\" as xjvaa,\n        \"xvvwa\" as xvvwa,\n        \"xslta\" as xslta,\n        \"xfdmm\" as xfdmm,\n        \"xfdsd\" as xfdsd,\n        \"xextb\" as xextb,\n        \"ebukr\" as ebukr,\n        \"ktop2\" as ktop2,\n        \"umkrs\" as umkrs,\n        \"bukrs_glob\" as bukrs_glob,\n        \"fstva\" as fstva,\n        \"opvar\" as opvar,\n        \"xcovr\" as xcovr,\n        \"txkrs\" as txkrs,\n        \"wfvar\" as wfvar,\n        \"xbbbf\" as xbbbf,\n        \"xbbbe\" as xbbbe,\n        \"xbbba\" as xbbba,\n        \"xbbko\" as xbbko,\n        \"xstdt\" as xstdt,\n        \"mwskv\" as mwskv,\n        \"mwska\" as mwska,\n        \"impda\" as impda,\n        \"xnegp\" as xnegp,\n        \"xkkbi\" as xkkbi,\n        \"wt_newwt\" as wt_newwt,\n        \"pp_pdate\" as pp_pdate,\n        \"infmt\" as infmt,\n        \"fstvare\" as fstvare,\n        \"kopim\" as kopim,\n        \"dkweg\" as dkweg,\n        \"offsacct\" as offsacct,\n        \"bapovar\" as bapovar,\n        \"xcos\" as xcos,\n        \"xcession\" as xcession,\n        \"xsplt\" as xsplt,\n        \"surccm\" as surccm,\n        \"dtprov\" as dtprov,\n        \"dtamtc\" as dtamtc,\n        \"dttaxc\" as dttaxc,\n        \"dttdsp\" as dttdsp,\n        \"dtaxr\" as dtaxr,\n        \"xvatdate\" as xvatdate,\n        \"pst_per_var\" as pst_per_var,\n        \"xbbsc\" as xbbsc,\n        \"fm_derive_acc\" as fm_derive_acc,\n        \"_fivetran_sap_archived\" as _fivetran_sap_archived,\n        \"_fivetran_deleted\" as _fivetran_deleted,\n        \"_fivetran_synced\" as _fivetran_synced\n    from \"postgres\".\"public_sap_dev\".\"stg_sap__t001_tmp\"\n),\n\nfields as (\n\n    select\n        \n    \n    \n    _fivetran_deleted\n    \n as \n    \n    _fivetran_deleted\n    \n, \n    \n    \n    _fivetran_sap_archived\n    \n as \n    \n    _fivetran_sap_archived\n    \n, \n    \n    \n    _fivetran_synced\n    \n as \n    \n    _fivetran_synced\n    \n, \n    \n    \n    adrnr\n    \n as \n    \n    adrnr\n    \n, \n    \n    \n    bapovar\n    \n as \n    \n    bapovar\n    \n, \n    \n    \n    bukrs\n    \n as \n    \n    bukrs\n    \n, \n    \n    \n    bukrs_glob\n    \n as \n    \n    bukrs_glob\n    \n, \n    \n    \n    butxt\n    \n as \n    \n    butxt\n    \n, \n    \n    \n    buvar\n    \n as \n    \n    buvar\n    \n, \n    \n    \n    dkweg\n    \n as \n    \n    dkweg\n    \n, \n    \n    \n    dtamtc\n    \n as \n    \n    dtamtc\n    \n, \n    \n    \n    dtaxr\n    \n as \n    \n    dtaxr\n    \n, \n    \n    \n    dtprov\n    \n as \n    \n    dtprov\n    \n, \n    \n    \n    dttaxc\n    \n as \n    \n    dttaxc\n    \n, \n    \n    \n    dttdsp\n    \n as \n    \n    dttdsp\n    \n, \n    \n    \n    ebukr\n    \n as \n    \n    ebukr\n    \n, \n    \n    \n    fdbuk\n    \n as \n    \n    fdbuk\n    \n, \n    \n    \n    fikrs\n    \n as \n    \n    fikrs\n    \n, \n    \n    \n    fm_derive_acc\n    \n as \n    \n    fm_derive_acc\n    \n, \n    \n    \n    fmhrdate\n    \n as \n    \n    fmhrdate\n    \n, \n    \n    \n    fstva\n    \n as \n    \n    fstva\n    \n, \n    \n    \n    fstvare\n    \n as \n    \n    fstvare\n    \n, \n    \n    \n    impda\n    \n as \n    \n    impda\n    \n, \n    \n    \n    infmt\n    \n as \n    \n    infmt\n    \n, \n    \n    \n    kkber\n    \n as \n    \n    kkber\n    \n, \n    \n    \n    kokfi\n    \n as \n    \n    kokfi\n    \n, \n    \n    \n    kopim\n    \n as \n    \n    kopim\n    \n, \n    \n    \n    ktop2\n    \n as \n    \n    ktop2\n    \n, \n    \n    \n    ktopl\n    \n as \n    \n    ktopl\n    \n, \n    \n    \n    land1\n    \n as \n    \n    land1\n    \n, \n    \n    \n    mandt\n    \n as \n    \n    mandt\n    \n, \n    \n    \n    mregl\n    \n as \n    \n    mregl\n    \n, \n    \n    \n    mwska\n    \n as \n    \n    mwska\n    \n, \n    \n    \n    mwskv\n    \n as \n    \n    mwskv\n    \n, \n    \n    \n    offsacct\n    \n as \n    \n    offsacct\n    \n, \n    \n    \n    opvar\n    \n as \n    \n    opvar\n    \n, \n    \n    \n    ort01\n    \n as \n    \n    ort01\n    \n, \n    \n    \n    periv\n    \n as \n    \n    periv\n    \n, \n    \n    \n    pp_pdate\n    \n as \n    \n    pp_pdate\n    \n, \n    \n    \n    pst_per_var\n    \n as \n    \n    pst_per_var\n    \n, \n    \n    \n    rcomp\n    \n as \n    \n    rcomp\n    \n, \n    \n    \n    spras\n    \n as \n    \n    spras\n    \n, \n    \n    \n    stceg\n    \n as \n    \n    stceg\n    \n, \n    \n    \n    surccm\n    \n as \n    \n    surccm\n    \n, \n    \n    \n    txjcd\n    \n as \n    \n    txjcd\n    \n, \n    \n    \n    txkrs\n    \n as \n    \n    txkrs\n    \n, \n    \n    \n    umkrs\n    \n as \n    \n    umkrs\n    \n, \n    \n    \n    waabw\n    \n as \n    \n    waabw\n    \n, \n    \n    \n    waers\n    \n as \n    \n    waers\n    \n, \n    \n    \n    wfvar\n    \n as \n    \n    wfvar\n    \n, \n    \n    \n    wt_newwt\n    \n as \n    \n    wt_newwt\n    \n, \n    \n    \n    xbbba\n    \n as \n    \n    xbbba\n    \n, \n    \n    \n    xbbbe\n    \n as \n    \n    xbbbe\n    \n, \n    \n    \n    xbbbf\n    \n as \n    \n    xbbbf\n    \n, \n    \n    \n    xbbko\n    \n as \n    \n    xbbko\n    \n, \n    \n    \n    xbbsc\n    \n as \n    \n    xbbsc\n    \n, \n    \n    \n    xcession\n    \n as \n    \n    xcession\n    \n, \n    \n    \n    xcos\n    \n as \n    \n    xcos\n    \n, \n    \n    \n    xcovr\n    \n as \n    \n    xcovr\n    \n, \n    \n    \n    xeink\n    \n as \n    \n    xeink\n    \n, \n    \n    \n    xextb\n    \n as \n    \n    xextb\n    \n, \n    \n    \n    xfdis\n    \n as \n    \n    xfdis\n    \n, \n    \n    \n    xfdmm\n    \n as \n    \n    xfdmm\n    \n, \n    \n    \n    xfdsd\n    \n as \n    \n    xfdsd\n    \n, \n    \n    \n    xfmca\n    \n as \n    \n    xfmca\n    \n, \n    \n    \n    xfmcb\n    \n as \n    \n    xfmcb\n    \n, \n    \n    \n    xfmco\n    \n as \n    \n    xfmco\n    \n, \n    \n    \n    xgjrv\n    \n as \n    \n    xgjrv\n    \n, \n    \n    \n    xgsbe\n    \n as \n    \n    xgsbe\n    \n, \n    \n    \n    xjvaa\n    \n as \n    \n    xjvaa\n    \n, \n    \n    \n    xkdft\n    \n as \n    \n    xkdft\n    \n, \n    \n    \n    xkkbi\n    \n as \n    \n    xkkbi\n    \n, \n    \n    \n    xmwsn\n    \n as \n    \n    xmwsn\n    \n, \n    \n    \n    xnegp\n    \n as \n    \n    xnegp\n    \n, \n    \n    \n    xprod\n    \n as \n    \n    xprod\n    \n, \n    \n    \n    xskfn\n    \n as \n    \n    xskfn\n    \n, \n    \n    \n    xslta\n    \n as \n    \n    xslta\n    \n, \n    \n    \n    xsplt\n    \n as \n    \n    xsplt\n    \n, \n    \n    \n    xstdt\n    \n as \n    \n    xstdt\n    \n, \n    \n    \n    xvalv\n    \n as \n    \n    xvalv\n    \n, \n    \n    \n    xvatdate\n    \n as \n    \n    xvatdate\n    \n, \n    \n    \n    xvvwa\n    \n as \n    \n    xvvwa\n    \n\n\n\n    from base\n),\n\nfinal as (\n\n    select\n        cast(mandt as TEXT) as mandt,\n        cast(bukrs as TEXT) as bukrs,\n        dkweg,\n        xgjrv,\n        xeink,\n        fdbuk,\n        pp_pdate,\n        xprod,\n        xskfn,\n        xcovr,\n        ebukr,\n        bukrs_glob,\n        xmwsn,\n        butxt,\n        bapovar,\n        xbbko,\n        dttdsp,\n        dtaxr,\n        impda,\n        kkber,\n        xfmca,\n        xfmcb,\n        surccm,\n        fstvare,\n        periv,\n        txjcd,\n        fmhrdate,\n        xbbba,\n        ort01,\n        rcomp,\n        xsplt,\n        kopim,\n        infmt,\n        fm_derive_acc,\n        ktopl,\n        umkrs,\n        xkkbi,\n        pst_per_var,\n        xvatdate,\n        txkrs,\n        waers,\n        xkdft,\n        xcos,\n        xbbbf,\n        xbbsc,\n        xfmco,\n        dttaxc,\n        mregl,\n        mwskv,\n        xstdt,\n        xnegp,\n        spras,\n        xvvwa,\n        dtprov,\n        waabw,\n        wt_newwt,\n        xcession,\n        xslta,\n        adrnr,\n        xjvaa,\n        opvar,\n        mwska,\n        kokfi,\n        ktop2,\n        xextb,\n        buvar,\n        offsacct,\n        dtamtc,\n        wfvar,\n        land1,\n        fstva,\n        xfdis,\n        xbbbe,\n        xvalv,\n        fikrs,\n        xfdsd,\n        xfdmm,\n        xgsbe,\n        stceg,\n        _fivetran_deleted,\n        _fivetran_synced,\n        _fivetran_sap_archived\n    from fields\n)\n\nselect * \nfrom final", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null, "primary_key": [], "time_spine": null}, "model.sap.stg_sap__pa0007": {"database": "postgres", "schema": "public_sap_dev", "name": "stg_sap__pa0007", "resource_type": "model", "package_name": "sap", "path": "staging/stg_sap__pa0007.sql", "original_file_path": "models/staging/stg_sap__pa0007.sql", "unique_id": "model.sap.stg_sap__pa0007", "fqn": ["sap", "staging", "stg_sap__pa0007"], "alias": "stg_sap__pa0007", "checksum": {"name": "sha256", "checksum": "17803d51f0b2e325518ce39b6c12d506f72dae37a5db55532239f76ee4e3c4c8"}, "config": {"enabled": true, "alias": null, "schema": "sap_dev", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "view", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "freshness": null}, "tags": [], "description": "HR master record--infotype 0007 (planned working time)", "columns": {"aedtm": {"name": "aedtm", "description": "Changed on", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "arbst": {"name": "arbst", "description": "Daily working hours", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "awtyp": {"name": "awtyp", "description": "Reference transaction", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "begda": {"name": "begda", "description": "Start date", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "dysch": {"name": "dysch", "description": "Create daily work schedule dynamically", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "empct": {"name": "empct", "description": "Employment percentage", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "endda": {"name": "endda", "description": "End date", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "flag1": {"name": "flag1", "description": "Reserved field/unused field", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "flag2": {"name": "flag2", "description": "Reserved field/unused field", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "flag3": {"name": "flag3", "description": "Reserved field/unused field", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "flag4": {"name": "flag4", "description": "Reserved field/unused field", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "grpvl": {"name": "grpvl", "description": "Grouping value for personnel assignments", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "histo": {"name": "histo", "description": "Historical record flag", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "itbld": {"name": "itbld", "description": "Infotype screen control", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "itxex": {"name": "itxex", "description": "Text exists for infotype", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "jrstd": {"name": "jrstd", "description": "Annual working hours", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "kztim": {"name": "kztim", "description": "Additional indicator for time management", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "mandt": {"name": "mandt", "description": "Client", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "maxja": {"name": "maxja", "description": "Maximum number of working hours per year", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "maxmo": {"name": "maxmo", "description": "Maximum number of work hours per month", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "maxta": {"name": "maxta", "description": "Maximum number of work hours per day", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "maxwo": {"name": "maxwo", "description": "Maximum number of work hours per week", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "minja": {"name": "minja", "description": "Minimum annual working hours", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "minmo": {"name": "minmo", "description": "Minimum number of work hours per month", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "minta": {"name": "minta", "description": "Minimum number of work hours per day", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "minwo": {"name": "minwo", "description": "Minimum weekly working hours", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "mostd": {"name": "mostd", "description": "Monthly hours", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "objps": {"name": "objps", "description": "Object identification", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "ordex": {"name": "ordex", "description": "Confirmation fields exist", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "pernr": {"name": "pernr", "description": "Personnel number", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "preas": {"name": "preas", "description": "Reason for changing master data", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "refex": {"name": "refex", "description": "Reference fields exist (primary/secondary costs)", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "rese1": {"name": "rese1", "description": "Reserved field/unused field of length 2", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "rese2": {"name": "rese2", "description": "Reserved field/unused field of length 2", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "schkz": {"name": "schkz", "description": "Work schedule rule", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "seqnr": {"name": "seqnr", "description": "Number of infotype record with same key", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "sprps": {"name": "sprps", "description": "Lock indicator for HR master data record", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "subty": {"name": "subty", "description": "Subtype", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "teilk": {"name": "teilk", "description": "Indicator part-time employee", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "uname": {"name": "uname", "description": "Name of person who changed objects", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "wkwdy": {"name": "wkwdy", "description": "Weekly workdays", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "wostd": {"name": "wostd", "description": "Hours per week", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "wweek": {"name": "wweek", "description": "Working week", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "zterf": {"name": "zterf", "description": "Employee time management status", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": "sap://models/staging/stg_sap.yml", "build_path": null, "unrendered_config": {"materialized": "view", "schema": "sap_{{ var('directed_schema','dev') }}", "enabled": true}, "created_at": 1756850331.020435, "relation_name": "\"postgres\".\"public_sap_dev\".\"stg_sap__pa0007\"", "raw_code": "{{ config(enabled=var('sap_using_pa0007', True)) }}\n\n{% set source_columns = adapter.get_columns_in_relation(ref('stg_sap__pa0007_tmp')) %}\n\nwith base as (\n\n    select {{ remove_slashes_from_col_names(source_columns) }}\n    from {{ ref('stg_sap__pa0007_tmp') }}\n),\n\nfields as (\n\n    select\n        {{\n            fivetran_utils.fill_staging_columns(\n                source_columns=source_columns,\n                staging_columns=get_pa0007_columns()\n            )\n        }}\n    from base\n),\n\nfinal as (\n    \n    select\n        cast(mandt as {{ dbt.type_string() }}) as mandt,\n        pernr,\n        subty,\n        objps,\n        sprps,\n        endda,\n        begda,\n        seqnr,\n        aedtm,\n        arbst,\n        awtyp,\n        dysch,\n        empct,\n        flag1,\n        flag2,\n        flag3,\n        flag4,\n        grpvl,\n        histo,\n        itbld,\n        itxex,\n        jrstd,\n        kztim,\n        maxja,\n        maxmo,\n        maxta,\n        maxwo,\n        minja,\n        minmo,\n        minta,\n        minwo,\n        mostd,\n        ordex,\n        preas,\n        refex,\n        rese1,\n        rese2,\n        schkz,\n        teilk,\n        uname,\n        wkwdy,\n        wostd,\n        wweek,\n        zterf\n    from fields\n)\n\nselect *\nfrom final", "doc_blocks": [], "language": "sql", "refs": [{"name": "stg_sap__pa0007_tmp", "package": null, "version": null}, {"name": "stg_sap__pa0007_tmp", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.sap.remove_slashes_from_col_names", "macro.sap.get_pa0007_columns", "macro.fivetran_utils.fill_staging_columns", "macro.dbt.type_string"], "nodes": ["model.sap.stg_sap__pa0007_tmp"]}, "compiled_path": "target/compiled/sap/models/staging/stg_sap__pa0007.sql", "compiled": true, "compiled_code": "\n\n\n\nwith base as (\n\n    select \n        \"begda\" as begda,\n        \"endda\" as endda,\n        \"mandt\" as mandt,\n        \"objps\" as objps,\n        \"pernr\" as pernr,\n        \"seqnr\" as seqnr,\n        \"sprps\" as sprps,\n        \"subty\" as subty,\n        \"aedtm\" as aedtm,\n        \"uname\" as uname,\n        \"histo\" as histo,\n        \"itxex\" as itxex,\n        \"refex\" as refex,\n        \"ordex\" as ordex,\n        \"itbld\" as itbld,\n        \"preas\" as preas,\n        \"flag1\" as flag1,\n        \"flag2\" as flag2,\n        \"flag3\" as flag3,\n        \"flag4\" as flag4,\n        \"rese1\" as rese1,\n        \"rese2\" as rese2,\n        \"grpvl\" as grpvl,\n        \"schkz\" as schkz,\n        \"zterf\" as zterf,\n        \"empct\" as empct,\n        \"mostd\" as mostd,\n        \"wostd\" as wostd,\n        \"arbst\" as arbst,\n        \"wkwdy\" as wkwdy,\n        \"jrstd\" as jrstd,\n        \"teilk\" as teilk,\n        \"minta\" as minta,\n        \"maxta\" as maxta,\n        \"minwo\" as minwo,\n        \"maxwo\" as maxwo,\n        \"minmo\" as minmo,\n        \"maxmo\" as maxmo,\n        \"minja\" as minja,\n        \"maxja\" as maxja,\n        \"dysch\" as dysch,\n        \"kztim\" as kztim,\n        \"wweek\" as wweek,\n        \"awtyp\" as awtyp,\n        \"_fivetran_rowid\" as _fivetran_rowid,\n        \"_fivetran_deleted\" as _fivetran_deleted,\n        \"_fivetran_synced\" as _fivetran_synced\n    from \"postgres\".\"public_sap_dev\".\"stg_sap__pa0007_tmp\"\n),\n\nfields as (\n\n    select\n        \n    \n    \n    _fivetran_deleted\n    \n as \n    \n    _fivetran_deleted\n    \n, \n    \n    \n    _fivetran_rowid\n    \n as \n    \n    _fivetran_rowid\n    \n, \n    \n    \n    _fivetran_synced\n    \n as \n    \n    _fivetran_synced\n    \n, \n    \n    \n    aedtm\n    \n as \n    \n    aedtm\n    \n, \n    \n    \n    arbst\n    \n as \n    \n    arbst\n    \n, \n    \n    \n    awtyp\n    \n as \n    \n    awtyp\n    \n, \n    \n    \n    begda\n    \n as \n    \n    begda\n    \n, \n    \n    \n    dysch\n    \n as \n    \n    dysch\n    \n, \n    \n    \n    empct\n    \n as \n    \n    empct\n    \n, \n    \n    \n    endda\n    \n as \n    \n    endda\n    \n, \n    \n    \n    flag1\n    \n as \n    \n    flag1\n    \n, \n    \n    \n    flag2\n    \n as \n    \n    flag2\n    \n, \n    \n    \n    flag3\n    \n as \n    \n    flag3\n    \n, \n    \n    \n    flag4\n    \n as \n    \n    flag4\n    \n, \n    \n    \n    grpvl\n    \n as \n    \n    grpvl\n    \n, \n    \n    \n    histo\n    \n as \n    \n    histo\n    \n, \n    \n    \n    itbld\n    \n as \n    \n    itbld\n    \n, \n    \n    \n    itxex\n    \n as \n    \n    itxex\n    \n, \n    \n    \n    jrstd\n    \n as \n    \n    jrstd\n    \n, \n    \n    \n    kztim\n    \n as \n    \n    kztim\n    \n, \n    \n    \n    mandt\n    \n as \n    \n    mandt\n    \n, \n    \n    \n    maxja\n    \n as \n    \n    maxja\n    \n, \n    \n    \n    maxmo\n    \n as \n    \n    maxmo\n    \n, \n    \n    \n    maxta\n    \n as \n    \n    maxta\n    \n, \n    \n    \n    maxwo\n    \n as \n    \n    maxwo\n    \n, \n    \n    \n    minja\n    \n as \n    \n    minja\n    \n, \n    \n    \n    minmo\n    \n as \n    \n    minmo\n    \n, \n    \n    \n    minta\n    \n as \n    \n    minta\n    \n, \n    \n    \n    minwo\n    \n as \n    \n    minwo\n    \n, \n    \n    \n    mostd\n    \n as \n    \n    mostd\n    \n, \n    \n    \n    objps\n    \n as \n    \n    objps\n    \n, \n    \n    \n    ordex\n    \n as \n    \n    ordex\n    \n, \n    \n    \n    pernr\n    \n as \n    \n    pernr\n    \n, \n    \n    \n    preas\n    \n as \n    \n    preas\n    \n, \n    \n    \n    refex\n    \n as \n    \n    refex\n    \n, \n    \n    \n    rese1\n    \n as \n    \n    rese1\n    \n, \n    \n    \n    rese2\n    \n as \n    \n    rese2\n    \n, \n    \n    \n    schkz\n    \n as \n    \n    schkz\n    \n, \n    \n    \n    seqnr\n    \n as \n    \n    seqnr\n    \n, \n    \n    \n    sprps\n    \n as \n    \n    sprps\n    \n, \n    \n    \n    subty\n    \n as \n    \n    subty\n    \n, \n    \n    \n    teilk\n    \n as \n    \n    teilk\n    \n, \n    \n    \n    uname\n    \n as \n    \n    uname\n    \n, \n    \n    \n    wkwdy\n    \n as \n    \n    wkwdy\n    \n, \n    \n    \n    wostd\n    \n as \n    \n    wostd\n    \n, \n    \n    \n    wweek\n    \n as \n    \n    wweek\n    \n, \n    \n    \n    zterf\n    \n as \n    \n    zterf\n    \n\n\n\n    from base\n),\n\nfinal as (\n    \n    select\n        cast(mandt as TEXT) as mandt,\n        pernr,\n        subty,\n        objps,\n        sprps,\n        endda,\n        begda,\n        seqnr,\n        aedtm,\n        arbst,\n        awtyp,\n        dysch,\n        empct,\n        flag1,\n        flag2,\n        flag3,\n        flag4,\n        grpvl,\n        histo,\n        itbld,\n        itxex,\n        jrstd,\n        kztim,\n        maxja,\n        maxmo,\n        maxta,\n        maxwo,\n        minja,\n        minmo,\n        minta,\n        minwo,\n        mostd,\n        ordex,\n        preas,\n        refex,\n        rese1,\n        rese2,\n        schkz,\n        teilk,\n        uname,\n        wkwdy,\n        wostd,\n        wweek,\n        zterf\n    from fields\n)\n\nselect *\nfrom final", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null, "primary_key": [], "time_spine": null}, "model.sap.stg_sap__lfa1": {"database": "postgres", "schema": "public_sap_dev", "name": "stg_sap__lfa1", "resource_type": "model", "package_name": "sap", "path": "staging/stg_sap__lfa1.sql", "original_file_path": "models/staging/stg_sap__lfa1.sql", "unique_id": "model.sap.stg_sap__lfa1", "fqn": ["sap", "staging", "stg_sap__lfa1"], "alias": "stg_sap__lfa1", "checksum": {"name": "sha256", "checksum": "8131a9871e4feeea6fd19a154030f1b330417a23c646e39bd9865ba515ff66e5"}, "config": {"enabled": true, "alias": null, "schema": "sap_dev", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "view", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "freshness": null}, "tags": [], "description": "Vendor master (General section)", "columns": {"mandt": {"name": "mandt", "description": "Client", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "lifnr": {"name": "lifnr", "description": "Vendor ID", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "land1": {"name": "land1", "description": "Country key", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "name1": {"name": "name1", "description": "Name (line 1)", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "name2": {"name": "name2", "description": "Name (line 2)", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "name3": {"name": "name3", "description": "Name (line 3)", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "name4": {"name": "name4", "description": "Name (line 4)", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "ort01": {"name": "ort01", "description": "City", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "ort02": {"name": "ort02", "description": "District", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "pfach": {"name": "pfach", "description": "PO box", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "pstl2": {"name": "pstl2", "description": "PO box postal code", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "pstlz": {"name": "pstlz", "description": "Postal code", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "regio": {"name": "regio", "description": "Region", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "sortl": {"name": "sortl", "description": "Sort field", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "stras": {"name": "stras", "description": "Street", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "telbx": {"name": "telbx", "description": "Telebox number", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "telf1": {"name": "telf1", "description": "Telephone 1", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "telf2": {"name": "telf2", "description": "Telephone 2", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "telfx": {"name": "telfx", "description": "Fax number", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "teltx": {"name": "teltx", "description": "Teletex number", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "telx1": {"name": "telx1", "description": "Telex number", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "xcpdk": {"name": "xcpdk", "description": "CPD indicator", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "xzemp": {"name": "xzemp", "description": "Temporary vendor indicator", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "vbund": {"name": "vbund", "description": "Company code group", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "fiskn": {"name": "fiskn", "description": "Tax number key", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "stcd1": {"name": "stcd1", "description": "Tax number 1", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "stcd2": {"name": "stcd2", "description": "Tax number 2", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "stkza": {"name": "stkza", "description": "Head office indicator", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "stkzu": {"name": "stkzu", "description": "Subsidiary indicator", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "stceg": {"name": "stceg", "description": "VAT registration number", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "stkzn": {"name": "stkzn", "description": "Branch indicator", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "sperq": {"name": "sperq", "description": "Request block", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "gbort": {"name": "gbort", "description": "Place of birth", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "gbdat": {"name": "gbdat", "description": "Date of birth", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "sexkz": {"name": "sexkz", "description": "Gender key", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "kraus": {"name": "kraus", "description": "Creditor authorization", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "revdb": {"name": "revdb", "description": "Revenue district", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "qssys": {"name": "qssys", "description": "Quality system", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "ktock": {"name": "ktock", "description": "Head office vendor", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "pfort": {"name": "pfort", "description": "Gate", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "werks": {"name": "werks", "description": "Plant", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "ltsna": {"name": "ltsna", "description": "Sub-range", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "werkr": {"name": "werkr", "description": "Place of production", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "plkal": {"name": "plkal", "description": "Pricing procedure", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "duefl": {"name": "duefl", "description": "Dunning block", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "txjcd": {"name": "txjcd", "description": "Tax jurisdiction", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "sperz": {"name": "sperz", "description": "Central deletion flag", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "scacd": {"name": "scacd", "description": "Service agent ID", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "sfrgr": {"name": "sfrgr", "description": "Freight group", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "lzone": {"name": "lzone", "description": "Transport zone", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "xlfza": {"name": "xlfza", "description": "Tax exemption flag", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "dlgrp": {"name": "dlgrp", "description": "Deletion group", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "fityp": {"name": "fityp", "description": "Business type", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "stcdt": {"name": "stcdt", "description": "Tax type", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "regss": {"name": "regss", "description": "Region segment", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "actss": {"name": "actss", "description": "Activity status", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "stcd3": {"name": "stcd3", "description": "Tax number 3", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "stcd4": {"name": "stcd4", "description": "Tax number 4", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "stcd5": {"name": "stcd5", "description": "Tax number 5", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "ipisp": {"name": "ipisp", "description": "Insurance provider", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "taxbs": {"name": "taxbs", "description": "Tax base", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "profs": {"name": "profs", "description": "Profession", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "stgdl": {"name": "stgdl", "description": "Staging deadline", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "emnfr": {"name": "emnfr", "description": "Manufacturer number", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "lfurl": {"name": "lfurl", "description": "Vendor URL", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "j_1kfrepre": {"name": "j_1kfrepre", "description": "Fiscal representative", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "j_1kftbus": {"name": "j_1kftbus", "description": "Type of business", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "j_1kftind": {"name": "j_1kftind", "description": "Type of industry", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "confs": {"name": "confs", "description": "Confirmation suppression", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "updat": {"name": "updat", "description": "Update date", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "uptim": {"name": "uptim", "description": "Update time", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "nodel": {"name": "nodel", "description": "Deletion lock", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "qssysdat": {"name": "qssysdat", "description": "Quality system date", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "podkzb": {"name": "podkzb", "description": "POD indicator", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "fisku": {"name": "fisku", "description": "Tax region", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "stenr": {"name": "stenr", "description": "Street number", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "carrier_conf": {"name": "carrier_conf", "description": "Carrier confirmation", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "min_comp": {"name": "min_comp", "description": "Minority company", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "term_li": {"name": "term_li", "description": "Terms of liability", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "crc_num": {"name": "crc_num", "description": "Credit rating number", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "cvp_xblck": {"name": "cvp_xblck", "description": "Vendor block flag", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "rg": {"name": "rg", "description": "Company headquarters", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "exp": {"name": "exp", "description": "Export indicator", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "uf": {"name": "uf", "description": "Federal unit", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "rgdate": {"name": "rgdate", "description": "Registration date", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "ric": {"name": "ric", "description": "Retail code", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "rne": {"name": "rne", "description": "Regional code", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "rnedate": {"name": "rnedate", "description": "Regional date", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "cnae": {"name": "cnae", "description": "Economic activity", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "legalnat": {"name": "legalnat", "description": "Legal nature", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "crtn": {"name": "crtn", "description": "Creation time", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "icmstaxpay": {"name": "icmstaxpay", "description": "ICMS tax payer", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "indtyp": {"name": "indtyp", "description": "Industry type", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "tdt": {"name": "tdt", "description": "Transport plan date", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "comsize": {"name": "comsize", "description": "Company size", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "decregpc": {"name": "decregpc", "description": "Declaration region", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "j_sc_capital": {"name": "j_sc_capital", "description": "Capital", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "j_sc_currency": {"name": "j_sc_currency", "description": "Capital currency", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "alc": {"name": "alc", "description": "License classification", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "pmt_office": {"name": "pmt_office", "description": "Payment office", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "ppa_relevant": {"name": "ppa_relevant", "description": "PPA relevant flag", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "psofg": {"name": "psofg", "description": "Fund group", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "psois": {"name": "psois", "description": "Fund indicator", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "pson1": {"name": "pson1", "description": "Fund segment 1", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "pson2": {"name": "pson2", "description": "Fund segment 2", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "pson3": {"name": "pson3", "description": "Fund segment 3", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "psovn": {"name": "psovn", "description": "Fund version", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "psotl": {"name": "psotl", "description": "Fund transfer limit", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "psohs": {"name": "psohs", "description": "Fund source", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "psost": {"name": "psost", "description": "Fund status", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "transport_chain": {"name": "transport_chain", "description": "Transport chain", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "staging_time": {"name": "staging_time", "description": "Staging time", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "scheduling_type": {"name": "scheduling_type", "description": "Scheduling type", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "submi_relevant": {"name": "submi_relevant", "description": "Subcontracting relevant", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "_fivetran_deleted": {"name": "_fivetran_deleted", "description": "Fivetran deletion marker", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "_fivetran_synced": {"name": "_fivetran_synced", "description": "Fivetran sync timestamp", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "_fivetran_rowid": {"name": "_fivetran_rowid", "description": "Fivetran unique row ID", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "adrnr": {"name": "adrnr", "description": "Address number", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "mcod1": {"name": "mcod1", "description": "Search term 1", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "mcod2": {"name": "mcod2", "description": "Search term 2", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "mcod3": {"name": "mcod3", "description": "Search term 3", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "anred": {"name": "anred", "description": "Title", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "bahns": {"name": "bahns", "description": "Train station", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "bbbnr": {"name": "bbbnr", "description": "Location number (part 1)", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "bbsnr": {"name": "bbsnr", "description": "Location number (part 2)", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "begru": {"name": "begru", "description": "Authorization group", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "brsch": {"name": "brsch", "description": "Industry key", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "bubkz": {"name": "bubkz", "description": "Interest calculation flag", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "datlt": {"name": "datlt", "description": "Last transaction date", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "dtams": {"name": "dtams", "description": "Amendment status", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "dtaws": {"name": "dtaws", "description": "Address update date", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "erdat": {"name": "erdat", "description": "Record creation date", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "ernam": {"name": "ernam", "description": "Created by user", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "esrnr": {"name": "esrnr", "description": "ESR number", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "konzs": {"name": "konzs", "description": "Consolidation indicator", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "ktokk": {"name": "ktokk", "description": "Account group", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "kunnr": {"name": "kunnr", "description": "Customer number", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "lnrza": {"name": "lnrza", "description": "Central vendor number", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "loevm": {"name": "loevm", "description": "Deletion flag", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "sperr": {"name": "sperr", "description": "Central block", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "sperm": {"name": "sperm", "description": "Posting block", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "spras": {"name": "spras", "description": "Language key", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": "sap://models/staging/stg_sap.yml", "build_path": null, "unrendered_config": {"materialized": "view", "schema": "sap_{{ var('directed_schema','dev') }}", "enabled": true}, "created_at": 1756850330.9478428, "relation_name": "\"postgres\".\"public_sap_dev\".\"stg_sap__lfa1\"", "raw_code": "{{ config(enabled=var('sap_using_lfa1', True)) }}\n\n{% set source_columns = adapter.get_columns_in_relation(ref('stg_sap__lfa1_tmp')) %}\n\nwith base as (\n\n    select {{ remove_slashes_from_col_names(source_columns) }}\n    from {{ ref('stg_sap__lfa1_tmp') }}\n),\n\nfields as (\n\n    select\n        {{\n            fivetran_utils.fill_staging_columns(\n                source_columns=source_columns,\n                staging_columns=get_lfa1_columns()\n            )\n        }}\n    from base\n),\n\nfinal as (\n    \n    select\n        cast(mandt as {{ dbt.type_string() }}) as mandt,\n        lifnr,\n        land1,\n        name1,\n        name2,\n        name3,\n        name4,\n        ort01,\n        ort02,\n        pfach,\n        pstl2,\n        pstlz,\n        regio,\n        sortl,\n        stras,\n        adrnr,\n        mcod1,\n        mcod2,\n        mcod3,\n        anred,\n        bahns,\n        bbbnr,\n        bbsnr,\n        begru,\n        brsch,\n        bubkz,\n        datlt,\n        dtams,\n        dtaws,\n        erdat,\n        ernam,\n        esrnr,\n        konzs,\n        ktokk,\n        kunnr,\n        lnrza,\n        loevm,\n        sperr,\n        sperm,\n        spras,\n        stcd1,\n        stcd2,\n        stkza,\n        stkzu,\n        telbx,\n        telf1,\n        telf2,\n        telfx,\n        teltx,\n        telx1,\n        xcpdk,\n        xzemp,\n        vbund,\n        fiskn,\n        stceg,\n        stkzn,\n        sperq,\n        gbort,\n        gbdat,\n        sexkz,\n        kraus,\n        revdb,\n        qssys,\n        ktock,\n        pfort,\n        werks,\n        ltsna,\n        werkr,\n        plkal,\n        duefl,\n        txjcd,\n        sperz,\n        scacd,\n        sfrgr,\n        lzone,\n        xlfza,\n        dlgrp,\n        fityp,\n        stcdt,\n        regss,\n        actss,\n        stcd3,\n        stcd4,\n        stcd5,\n        ipisp,\n        taxbs,\n        profs,\n        stgdl,\n        emnfr,\n        lfurl,\n        j_1kfrepre,\n        j_1kftbus,\n        j_1kftind,\n        confs,\n        updat,\n        uptim,\n        nodel,\n        qssysdat,\n        podkzb,\n        fisku,\n        stenr,\n        carrier_conf,\n        min_comp,\n        term_li,\n        crc_num,\n        cvp_xblck,\n        rg,\n        exp,\n        uf,\n        rgdate,\n        ric,\n        rne,\n        rnedate,\n        cnae,\n        legalnat,\n        crtn,\n        icmstaxpay,\n        indtyp,\n        tdt,\n        comsize,\n        decregpc,\n        j_sc_capital,\n        j_sc_currency,\n        alc,\n        pmt_office,\n        ppa_relevant,\n        psofg,\n        psois,\n        pson1,\n        pson2,\n        pson3,\n        psovn,\n        psotl,\n        psohs,\n        psost,\n        transport_chain,\n        staging_time,\n        scheduling_type,\n        submi_relevant,\n        _fivetran_deleted,\n        _fivetran_synced,\n        _fivetran_rowid\n    from fields\n)\n\nselect *\nfrom final", "doc_blocks": [], "language": "sql", "refs": [{"name": "stg_sap__lfa1_tmp", "package": null, "version": null}, {"name": "stg_sap__lfa1_tmp", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.sap.remove_slashes_from_col_names", "macro.sap.get_lfa1_columns", "macro.fivetran_utils.fill_staging_columns", "macro.dbt.type_string"], "nodes": ["model.sap.stg_sap__lfa1_tmp"]}, "compiled_path": "target/compiled/sap/models/staging/stg_sap__lfa1.sql", "compiled": true, "compiled_code": "\n\n\n\nwith base as (\n\n    select \n        \"lifnr\" as lifnr,\n        \"mandt\" as mandt,\n        \"land1\" as land1,\n        \"name1\" as name1,\n        \"name2\" as name2,\n        \"name3\" as name3,\n        \"name4\" as name4,\n        \"ort01\" as ort01,\n        \"ort02\" as ort02,\n        \"pfach\" as pfach,\n        \"pstl2\" as pstl2,\n        \"pstlz\" as pstlz,\n        \"regio\" as regio,\n        \"sortl\" as sortl,\n        \"stras\" as stras,\n        \"adrnr\" as adrnr,\n        \"mcod1\" as mcod1,\n        \"mcod2\" as mcod2,\n        \"mcod3\" as mcod3,\n        \"anred\" as anred,\n        \"bahns\" as bahns,\n        \"bbbnr\" as bbbnr,\n        \"bbsnr\" as bbsnr,\n        \"begru\" as begru,\n        \"brsch\" as brsch,\n        \"bubkz\" as bubkz,\n        \"datlt\" as datlt,\n        \"dtams\" as dtams,\n        \"dtaws\" as dtaws,\n        \"erdat\" as erdat,\n        \"ernam\" as ernam,\n        \"esrnr\" as esrnr,\n        \"konzs\" as konzs,\n        \"ktokk\" as ktokk,\n        \"kunnr\" as kunnr,\n        \"lnrza\" as lnrza,\n        \"loevm\" as loevm,\n        \"sperr\" as sperr,\n        \"sperm\" as sperm,\n        \"spras\" as spras,\n        \"stcd1\" as stcd1,\n        \"stcd2\" as stcd2,\n        \"stkza\" as stkza,\n        \"stkzu\" as stkzu,\n        \"telbx\" as telbx,\n        \"telf1\" as telf1,\n        \"telf2\" as telf2,\n        \"telfx\" as telfx,\n        \"teltx\" as teltx,\n        \"telx1\" as telx1,\n        \"xcpdk\" as xcpdk,\n        \"xzemp\" as xzemp,\n        \"vbund\" as vbund,\n        \"fiskn\" as fiskn,\n        \"stceg\" as stceg,\n        \"stkzn\" as stkzn,\n        \"sperq\" as sperq,\n        \"gbort\" as gbort,\n        \"gbdat\" as gbdat,\n        \"sexkz\" as sexkz,\n        \"kraus\" as kraus,\n        \"revdb\" as revdb,\n        \"qssys\" as qssys,\n        \"ktock\" as ktock,\n        \"pfort\" as pfort,\n        \"werks\" as werks,\n        \"ltsna\" as ltsna,\n        \"werkr\" as werkr,\n        \"plkal\" as plkal,\n        \"duefl\" as duefl,\n        \"txjcd\" as txjcd,\n        \"sperz\" as sperz,\n        \"scacd\" as scacd,\n        \"sfrgr\" as sfrgr,\n        \"lzone\" as lzone,\n        \"xlfza\" as xlfza,\n        \"dlgrp\" as dlgrp,\n        \"fityp\" as fityp,\n        \"stcdt\" as stcdt,\n        \"regss\" as regss,\n        \"actss\" as actss,\n        \"stcd3\" as stcd3,\n        \"stcd4\" as stcd4,\n        \"stcd5\" as stcd5,\n        \"ipisp\" as ipisp,\n        \"taxbs\" as taxbs,\n        \"profs\" as profs,\n        \"stgdl\" as stgdl,\n        \"emnfr\" as emnfr,\n        \"lfurl\" as lfurl,\n        \"j_1kfrepre\" as j_1kfrepre,\n        \"j_1kftbus\" as j_1kftbus,\n        \"j_1kftind\" as j_1kftind,\n        \"confs\" as confs,\n        \"updat\" as updat,\n        \"uptim\" as uptim,\n        \"nodel\" as nodel,\n        \"qssysdat\" as qssysdat,\n        \"podkzb\" as podkzb,\n        \"fisku\" as fisku,\n        \"stenr\" as stenr,\n        \"carrier_conf\" as carrier_conf,\n        \"min_comp\" as min_comp,\n        \"term_li\" as term_li,\n        \"crc_num\" as crc_num,\n        \"cvp_xblck\" as cvp_xblck,\n        \"rg\" as rg,\n        \"exp\" as exp,\n        \"uf\" as uf,\n        \"rgdate\" as rgdate,\n        \"ric\" as ric,\n        \"rne\" as rne,\n        \"rnedate\" as rnedate,\n        \"cnae\" as cnae,\n        \"legalnat\" as legalnat,\n        \"crtn\" as crtn,\n        \"icmstaxpay\" as icmstaxpay,\n        \"indtyp\" as indtyp,\n        \"tdt\" as tdt,\n        \"comsize\" as comsize,\n        \"decregpc\" as decregpc,\n        \"j_sc_capital\" as j_sc_capital,\n        \"j_sc_currency\" as j_sc_currency,\n        \"alc\" as alc,\n        \"pmt_office\" as pmt_office,\n        \"ppa_relevant\" as ppa_relevant,\n        \"psofg\" as psofg,\n        \"psois\" as psois,\n        \"pson1\" as pson1,\n        \"pson2\" as pson2,\n        \"pson3\" as pson3,\n        \"psovn\" as psovn,\n        \"psotl\" as psotl,\n        \"psohs\" as psohs,\n        \"psost\" as psost,\n        \"transport_chain\" as transport_chain,\n        \"staging_time\" as staging_time,\n        \"scheduling_type\" as scheduling_type,\n        \"submi_relevant\" as submi_relevant,\n        \"_fivetran_rowid\" as _fivetran_rowid,\n        \"_fivetran_deleted\" as _fivetran_deleted,\n        \"_fivetran_synced\" as _fivetran_synced\n    from \"postgres\".\"public_sap_dev\".\"stg_sap__lfa1_tmp\"\n),\n\nfields as (\n\n    select\n        \n    \n    \n    _fivetran_deleted\n    \n as \n    \n    _fivetran_deleted\n    \n, \n    \n    \n    _fivetran_rowid\n    \n as \n    \n    _fivetran_rowid\n    \n, \n    \n    \n    _fivetran_synced\n    \n as \n    \n    _fivetran_synced\n    \n, \n    \n    \n    actss\n    \n as \n    \n    actss\n    \n, \n    \n    \n    adrnr\n    \n as \n    \n    adrnr\n    \n, \n    \n    \n    alc\n    \n as \n    \n    alc\n    \n, \n    \n    \n    anred\n    \n as \n    \n    anred\n    \n, \n    \n    \n    bahns\n    \n as \n    \n    bahns\n    \n, \n    \n    \n    bbbnr\n    \n as \n    \n    bbbnr\n    \n, \n    \n    \n    bbsnr\n    \n as \n    \n    bbsnr\n    \n, \n    \n    \n    begru\n    \n as \n    \n    begru\n    \n, \n    \n    \n    brsch\n    \n as \n    \n    brsch\n    \n, \n    \n    \n    bubkz\n    \n as \n    \n    bubkz\n    \n, \n    \n    \n    carrier_conf\n    \n as \n    \n    carrier_conf\n    \n, \n    \n    \n    cnae\n    \n as \n    \n    cnae\n    \n, \n    \n    \n    comsize\n    \n as \n    \n    comsize\n    \n, \n    \n    \n    confs\n    \n as \n    \n    confs\n    \n, \n    \n    \n    crc_num\n    \n as \n    \n    crc_num\n    \n, \n    \n    \n    crtn\n    \n as \n    \n    crtn\n    \n, \n    \n    \n    cvp_xblck\n    \n as \n    \n    cvp_xblck\n    \n, \n    \n    \n    datlt\n    \n as \n    \n    datlt\n    \n, \n    \n    \n    decregpc\n    \n as \n    \n    decregpc\n    \n, \n    \n    \n    dlgrp\n    \n as \n    \n    dlgrp\n    \n, \n    \n    \n    dtams\n    \n as \n    \n    dtams\n    \n, \n    \n    \n    dtaws\n    \n as \n    \n    dtaws\n    \n, \n    \n    \n    duefl\n    \n as \n    \n    duefl\n    \n, \n    \n    \n    emnfr\n    \n as \n    \n    emnfr\n    \n, \n    \n    \n    erdat\n    \n as \n    \n    erdat\n    \n, \n    \n    \n    ernam\n    \n as \n    \n    ernam\n    \n, \n    \n    \n    esrnr\n    \n as \n    \n    esrnr\n    \n, \n    \n    \n    exp\n    \n as \n    \n    exp\n    \n, \n    \n    \n    fiskn\n    \n as \n    \n    fiskn\n    \n, \n    \n    \n    fisku\n    \n as \n    \n    fisku\n    \n, \n    \n    \n    fityp\n    \n as \n    \n    fityp\n    \n, \n    \n    \n    gbdat\n    \n as \n    \n    gbdat\n    \n, \n    \n    \n    gbort\n    \n as \n    \n    gbort\n    \n, \n    \n    \n    icmstaxpay\n    \n as \n    \n    icmstaxpay\n    \n, \n    \n    \n    indtyp\n    \n as \n    \n    indtyp\n    \n, \n    \n    \n    ipisp\n    \n as \n    \n    ipisp\n    \n, \n    \n    \n    j_1kfrepre\n    \n as \n    \n    j_1kfrepre\n    \n, \n    \n    \n    j_1kftbus\n    \n as \n    \n    j_1kftbus\n    \n, \n    \n    \n    j_1kftind\n    \n as \n    \n    j_1kftind\n    \n, \n    \n    \n    j_sc_capital\n    \n as \n    \n    j_sc_capital\n    \n, \n    \n    \n    j_sc_currency\n    \n as \n    \n    j_sc_currency\n    \n, \n    \n    \n    konzs\n    \n as \n    \n    konzs\n    \n, \n    \n    \n    kraus\n    \n as \n    \n    kraus\n    \n, \n    \n    \n    ktock\n    \n as \n    \n    ktock\n    \n, \n    \n    \n    ktokk\n    \n as \n    \n    ktokk\n    \n, \n    \n    \n    kunnr\n    \n as \n    \n    kunnr\n    \n, \n    \n    \n    land1\n    \n as \n    \n    land1\n    \n, \n    \n    \n    legalnat\n    \n as \n    \n    legalnat\n    \n, \n    \n    \n    lfurl\n    \n as \n    \n    lfurl\n    \n, \n    \n    \n    lifnr\n    \n as \n    \n    lifnr\n    \n, \n    \n    \n    lnrza\n    \n as \n    \n    lnrza\n    \n, \n    \n    \n    loevm\n    \n as \n    \n    loevm\n    \n, \n    \n    \n    ltsna\n    \n as \n    \n    ltsna\n    \n, \n    \n    \n    lzone\n    \n as \n    \n    lzone\n    \n, \n    \n    \n    mandt\n    \n as \n    \n    mandt\n    \n, \n    \n    \n    mcod1\n    \n as \n    \n    mcod1\n    \n, \n    \n    \n    mcod2\n    \n as \n    \n    mcod2\n    \n, \n    \n    \n    mcod3\n    \n as \n    \n    mcod3\n    \n, \n    \n    \n    min_comp\n    \n as \n    \n    min_comp\n    \n, \n    \n    \n    name1\n    \n as \n    \n    name1\n    \n, \n    \n    \n    name2\n    \n as \n    \n    name2\n    \n, \n    \n    \n    name3\n    \n as \n    \n    name3\n    \n, \n    \n    \n    name4\n    \n as \n    \n    name4\n    \n, \n    \n    \n    nodel\n    \n as \n    \n    nodel\n    \n, \n    \n    \n    ort01\n    \n as \n    \n    ort01\n    \n, \n    \n    \n    ort02\n    \n as \n    \n    ort02\n    \n, \n    \n    \n    pfach\n    \n as \n    \n    pfach\n    \n, \n    \n    \n    pfort\n    \n as \n    \n    pfort\n    \n, \n    \n    \n    plkal\n    \n as \n    \n    plkal\n    \n, \n    \n    \n    pmt_office\n    \n as \n    \n    pmt_office\n    \n, \n    \n    \n    podkzb\n    \n as \n    \n    podkzb\n    \n, \n    \n    \n    ppa_relevant\n    \n as \n    \n    ppa_relevant\n    \n, \n    \n    \n    profs\n    \n as \n    \n    profs\n    \n, \n    \n    \n    psofg\n    \n as \n    \n    psofg\n    \n, \n    \n    \n    psohs\n    \n as \n    \n    psohs\n    \n, \n    \n    \n    psois\n    \n as \n    \n    psois\n    \n, \n    \n    \n    pson1\n    \n as \n    \n    pson1\n    \n, \n    \n    \n    pson2\n    \n as \n    \n    pson2\n    \n, \n    \n    \n    pson3\n    \n as \n    \n    pson3\n    \n, \n    \n    \n    psost\n    \n as \n    \n    psost\n    \n, \n    \n    \n    psotl\n    \n as \n    \n    psotl\n    \n, \n    \n    \n    psovn\n    \n as \n    \n    psovn\n    \n, \n    \n    \n    pstl2\n    \n as \n    \n    pstl2\n    \n, \n    \n    \n    pstlz\n    \n as \n    \n    pstlz\n    \n, \n    \n    \n    qssys\n    \n as \n    \n    qssys\n    \n, \n    \n    \n    qssysdat\n    \n as \n    \n    qssysdat\n    \n, \n    \n    \n    regio\n    \n as \n    \n    regio\n    \n, \n    \n    \n    regss\n    \n as \n    \n    regss\n    \n, \n    \n    \n    revdb\n    \n as \n    \n    revdb\n    \n, \n    \n    \n    rg\n    \n as \n    \n    rg\n    \n, \n    \n    \n    rgdate\n    \n as \n    \n    rgdate\n    \n, \n    \n    \n    ric\n    \n as \n    \n    ric\n    \n, \n    \n    \n    rne\n    \n as \n    \n    rne\n    \n, \n    \n    \n    rnedate\n    \n as \n    \n    rnedate\n    \n, \n    \n    \n    scacd\n    \n as \n    \n    scacd\n    \n, \n    \n    \n    scheduling_type\n    \n as \n    \n    scheduling_type\n    \n, \n    \n    \n    sexkz\n    \n as \n    \n    sexkz\n    \n, \n    \n    \n    sfrgr\n    \n as \n    \n    sfrgr\n    \n, \n    \n    \n    sortl\n    \n as \n    \n    sortl\n    \n, \n    \n    \n    sperm\n    \n as \n    \n    sperm\n    \n, \n    \n    \n    sperq\n    \n as \n    \n    sperq\n    \n, \n    \n    \n    sperr\n    \n as \n    \n    sperr\n    \n, \n    \n    \n    sperz\n    \n as \n    \n    sperz\n    \n, \n    \n    \n    spras\n    \n as \n    \n    spras\n    \n, \n    \n    \n    staging_time\n    \n as \n    \n    staging_time\n    \n, \n    \n    \n    stcd1\n    \n as \n    \n    stcd1\n    \n, \n    \n    \n    stcd2\n    \n as \n    \n    stcd2\n    \n, \n    \n    \n    stcd3\n    \n as \n    \n    stcd3\n    \n, \n    \n    \n    stcd4\n    \n as \n    \n    stcd4\n    \n, \n    \n    \n    stcd5\n    \n as \n    \n    stcd5\n    \n, \n    \n    \n    stcdt\n    \n as \n    \n    stcdt\n    \n, \n    \n    \n    stceg\n    \n as \n    \n    stceg\n    \n, \n    \n    \n    stenr\n    \n as \n    \n    stenr\n    \n, \n    \n    \n    stgdl\n    \n as \n    \n    stgdl\n    \n, \n    \n    \n    stkza\n    \n as \n    \n    stkza\n    \n, \n    \n    \n    stkzn\n    \n as \n    \n    stkzn\n    \n, \n    \n    \n    stkzu\n    \n as \n    \n    stkzu\n    \n, \n    \n    \n    stras\n    \n as \n    \n    stras\n    \n, \n    \n    \n    submi_relevant\n    \n as \n    \n    submi_relevant\n    \n, \n    \n    \n    taxbs\n    \n as \n    \n    taxbs\n    \n, \n    \n    \n    tdt\n    \n as \n    \n    tdt\n    \n, \n    \n    \n    telbx\n    \n as \n    \n    telbx\n    \n, \n    \n    \n    telf1\n    \n as \n    \n    telf1\n    \n, \n    \n    \n    telf2\n    \n as \n    \n    telf2\n    \n, \n    \n    \n    telfx\n    \n as \n    \n    telfx\n    \n, \n    \n    \n    teltx\n    \n as \n    \n    teltx\n    \n, \n    \n    \n    telx1\n    \n as \n    \n    telx1\n    \n, \n    \n    \n    term_li\n    \n as \n    \n    term_li\n    \n, \n    \n    \n    transport_chain\n    \n as \n    \n    transport_chain\n    \n, \n    \n    \n    txjcd\n    \n as \n    \n    txjcd\n    \n, \n    \n    \n    uf\n    \n as \n    \n    uf\n    \n, \n    \n    \n    updat\n    \n as \n    \n    updat\n    \n, \n    \n    \n    uptim\n    \n as \n    \n    uptim\n    \n, \n    \n    \n    vbund\n    \n as \n    \n    vbund\n    \n, \n    \n    \n    werkr\n    \n as \n    \n    werkr\n    \n, \n    \n    \n    werks\n    \n as \n    \n    werks\n    \n, \n    \n    \n    xcpdk\n    \n as \n    \n    xcpdk\n    \n, \n    \n    \n    xlfza\n    \n as \n    \n    xlfza\n    \n, \n    \n    \n    xzemp\n    \n as \n    \n    xzemp\n    \n\n\n\n    from base\n),\n\nfinal as (\n    \n    select\n        cast(mandt as TEXT) as mandt,\n        lifnr,\n        land1,\n        name1,\n        name2,\n        name3,\n        name4,\n        ort01,\n        ort02,\n        pfach,\n        pstl2,\n        pstlz,\n        regio,\n        sortl,\n        stras,\n        adrnr,\n        mcod1,\n        mcod2,\n        mcod3,\n        anred,\n        bahns,\n        bbbnr,\n        bbsnr,\n        begru,\n        brsch,\n        bubkz,\n        datlt,\n        dtams,\n        dtaws,\n        erdat,\n        ernam,\n        esrnr,\n        konzs,\n        ktokk,\n        kunnr,\n        lnrza,\n        loevm,\n        sperr,\n        sperm,\n        spras,\n        stcd1,\n        stcd2,\n        stkza,\n        stkzu,\n        telbx,\n        telf1,\n        telf2,\n        telfx,\n        teltx,\n        telx1,\n        xcpdk,\n        xzemp,\n        vbund,\n        fiskn,\n        stceg,\n        stkzn,\n        sperq,\n        gbort,\n        gbdat,\n        sexkz,\n        kraus,\n        revdb,\n        qssys,\n        ktock,\n        pfort,\n        werks,\n        ltsna,\n        werkr,\n        plkal,\n        duefl,\n        txjcd,\n        sperz,\n        scacd,\n        sfrgr,\n        lzone,\n        xlfza,\n        dlgrp,\n        fityp,\n        stcdt,\n        regss,\n        actss,\n        stcd3,\n        stcd4,\n        stcd5,\n        ipisp,\n        taxbs,\n        profs,\n        stgdl,\n        emnfr,\n        lfurl,\n        j_1kfrepre,\n        j_1kftbus,\n        j_1kftind,\n        confs,\n        updat,\n        uptim,\n        nodel,\n        qssysdat,\n        podkzb,\n        fisku,\n        stenr,\n        carrier_conf,\n        min_comp,\n        term_li,\n        crc_num,\n        cvp_xblck,\n        rg,\n        exp,\n        uf,\n        rgdate,\n        ric,\n        rne,\n        rnedate,\n        cnae,\n        legalnat,\n        crtn,\n        icmstaxpay,\n        indtyp,\n        tdt,\n        comsize,\n        decregpc,\n        j_sc_capital,\n        j_sc_currency,\n        alc,\n        pmt_office,\n        ppa_relevant,\n        psofg,\n        psois,\n        pson1,\n        pson2,\n        pson3,\n        psovn,\n        psotl,\n        psohs,\n        psost,\n        transport_chain,\n        staging_time,\n        scheduling_type,\n        submi_relevant,\n        _fivetran_deleted,\n        _fivetran_synced,\n        _fivetran_rowid\n    from fields\n)\n\nselect *\nfrom final", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null, "primary_key": [], "time_spine": null}, "model.sap.stg_sap__vbup": {"database": "postgres", "schema": "public_sap_dev", "name": "stg_sap__vbup", "resource_type": "model", "package_name": "sap", "path": "staging/stg_sap__vbup.sql", "original_file_path": "models/staging/stg_sap__vbup.sql", "unique_id": "model.sap.stg_sap__vbup", "fqn": ["sap", "staging", "stg_sap__vbup"], "alias": "stg_sap__vbup", "checksum": {"name": "sha256", "checksum": "713a1140e67f4118d80412fab481b2ae09363b784a6ed59f4b7e62c7bd9bca0d"}, "config": {"enabled": true, "alias": null, "schema": "sap_dev", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "view", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "freshness": null}, "tags": [], "description": "Sales document status (item level)", "columns": {"_fivetran_deleted": {"name": "_fivetran_deleted", "description": "Fivetran deletion marker", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "_fivetran_sap_archived": {"name": "_fivetran_sap_archived", "description": "Fivetran SAP archive marker", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "_fivetran_synced": {"name": "_fivetran_synced", "description": "Fivetran sync timestamp", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "absta": {"name": "absta", "description": "Rejection status for item", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "besta": {"name": "besta", "description": "Purchase order status (item)", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "cmppi": {"name": "cmppi", "description": "Credit check static limit (item)", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "cmppj": {"name": "cmppj", "description": "Credit check terms of payment (item)", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "costa": {"name": "costa", "description": "Costing status (item)", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "dcsta": {"name": "dcsta", "description": "Document completeness status", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "fkivp": {"name": "fkivp", "description": "Billing plan status (item)", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "fksaa": {"name": "fksaa", "description": "Billing block (item)", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "fksta": {"name": "fksta", "description": "Billing status (item)", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "fsh_ar_stat_itm": {"name": "fsh_ar_stat_itm", "description": "Fashion AR status at item level", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "fssta": {"name": "fssta", "description": "Financial document status (item)", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "gbsta": {"name": "gbsta", "description": "Overall processing status (item)", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "hdall": {"name": "hdall", "description": "Item fully delivered", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "koqua": {"name": "koqua", "description": "Configuration status (item)", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "kosta": {"name": "kosta", "description": "Cost estimate status (item)", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "lfgsa": {"name": "lfgsa", "description": "Delivery status (item)", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "lfsta": {"name": "lfsta", "description": "Delivery status of item", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "lssta": {"name": "lssta", "description": "Picking status (item)", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "ltsps": {"name": "ltsps", "description": "Last transportation scheduling status", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "lvsta": {"name": "lvsta", "description": "Goods movement status (item)", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "mandt": {"name": "mandt", "description": "Client", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "manek": {"name": "manek", "description": "Manual credit check indicator (item)", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "mill_vs_vssta": {"name": "mill_vs_vssta", "description": "Mill-specific item status", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "pdsta": {"name": "pdsta", "description": "Pricing document status (item)", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "pksta": {"name": "pksta", "description": "Picking status", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "posnr": {"name": "posnr", "description": "Sales document item number", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "rfgsa": {"name": "rfgsa", "description": "Reference document status (item)", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "rfsta": {"name": "rfsta", "description": "Reference billing status (item)", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "rrsta": {"name": "rrsta", "description": "Returns status (item)", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "uvall": {"name": "uvall", "description": "Fully billed (item)", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "uvfak": {"name": "uvfak", "description": "Billing block indicator (item)", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "uvp01": {"name": "uvp01", "description": "User status 01", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "uvp02": {"name": "uvp02", "description": "User status 02", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "uvp03": {"name": "uvp03", "description": "User status 03", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "uvp04": {"name": "uvp04", "description": "User status 04", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "uvp05": {"name": "uvp05", "description": "User status 05", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "uvpak": {"name": "uvpak", "description": "Packing status (item)", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "uvpik": {"name": "uvpik", "description": "Picking status (item)", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "uvprs": {"name": "uvprs", "description": "Pricing status (item)", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "uvvlk": {"name": "uvvlk", "description": "Delivery status (fully delivered, item)", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "uvwak": {"name": "uvwak", "description": "Goods issue status (item)", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "vbeln": {"name": "vbeln", "description": "Sales document number", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "vlstp": {"name": "vlstp", "description": "Delivery status (partial)", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "wbsta": {"name": "wbsta", "description": "Goods issue status (item)", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": "sap://models/staging/stg_sap.yml", "build_path": null, "unrendered_config": {"materialized": "view", "schema": "sap_{{ var('directed_schema','dev') }}", "enabled": true}, "created_at": 1756850331.4884307, "relation_name": "\"postgres\".\"public_sap_dev\".\"stg_sap__vbup\"", "raw_code": "{{ config(enabled=var('sap_using_vbup', True)) }}\n\n{% set source_columns = adapter.get_columns_in_relation(ref('stg_sap__vbup_tmp')) %}\n\nwith base as (\n    select {{ remove_slashes_from_col_names(source_columns) }}\n    from {{ ref('stg_sap__vbup_tmp') }}\n),\n\nfields as (\n    select\n        {{\n            fivetran_utils.fill_staging_columns(\n                source_columns=source_columns,\n                staging_columns=get_vbup_columns()\n            )\n        }}\n    from base\n),\n\nfinal as (\n    select\n        _fivetran_deleted,\n        _fivetran_synced,\n        _fivetran_sap_archived,\n        cast(mandt as {{ dbt.type_string() }}) as mandt,\n        cast(posnr as {{ dbt.type_string() }}) as posnr,\n        cast(vbeln as {{ dbt.type_string() }}) as vbeln,\n        uvpak,\n        uvvlk,\n        mill_vs_vssta,\n        pksta,\n        lssta,\n        vlstp,\n        absta,\n        fksta,\n        fkivp,\n        lfgsa,\n        rrsta,\n        lfsta,\n        fksaa,\n        wbsta,\n        ltsps,\n        costa,\n        fssta,\n        kosta,\n        uvpik,\n        uvfak,\n        uvall,\n        rfgsa,\n        uvprs,\n        lvsta,\n        rfsta,\n        cmppj,\n        cmppi,\n        hdall,\n        besta,\n        pdsta,\n        fsh_ar_stat_itm,\n        manek,\n        gbsta,\n        uvwak,\n        dcsta,\n        uvp05,\n        uvp02,\n        uvp04,\n        koqua,\n        uvp01,\n        uvp03\n    from fields\n)\n\nselect *\nfrom final", "doc_blocks": [], "language": "sql", "refs": [{"name": "stg_sap__vbup_tmp", "package": null, "version": null}, {"name": "stg_sap__vbup_tmp", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.sap.remove_slashes_from_col_names", "macro.sap.get_vbup_columns", "macro.fivetran_utils.fill_staging_columns", "macro.dbt.type_string"], "nodes": ["model.sap.stg_sap__vbup_tmp"]}, "compiled_path": "target/compiled/sap/models/staging/stg_sap__vbup.sql", "compiled": true, "compiled_code": "\n\n\n\nwith base as (\n    select \n        \"mandt\" as mandt,\n        \"posnr\" as posnr,\n        \"vbeln\" as vbeln,\n        \"uvpak\" as uvpak,\n        \"uvvlk\" as uvvlk,\n        \"mill_vs_vssta\" as mill_vs_vssta,\n        \"pksta\" as pksta,\n        \"lssta\" as lssta,\n        \"vlstp\" as vlstp,\n        \"absta\" as absta,\n        \"fksta\" as fksta,\n        \"fkivp\" as fkivp,\n        \"lfgsa\" as lfgsa,\n        \"rrsta\" as rrsta,\n        \"lfsta\" as lfsta,\n        \"fksaa\" as fksaa,\n        \"wbsta\" as wbsta,\n        \"ltsps\" as ltsps,\n        \"costa\" as costa,\n        \"fssta\" as fssta,\n        \"kosta\" as kosta,\n        \"uvpik\" as uvpik,\n        \"uvfak\" as uvfak,\n        \"uvall\" as uvall,\n        \"rfgsa\" as rfgsa,\n        \"uvprs\" as uvprs,\n        \"lvsta\" as lvsta,\n        \"rfsta\" as rfsta,\n        \"cmppj\" as cmppj,\n        \"cmppi\" as cmppi,\n        \"hdall\" as hdall,\n        \"besta\" as besta,\n        \"pdsta\" as pdsta,\n        \"fsh_ar_stat_itm\" as fsh_ar_stat_itm,\n        \"manek\" as manek,\n        \"gbsta\" as gbsta,\n        \"uvwak\" as uvwak,\n        \"dcsta\" as dcsta,\n        \"uvp05\" as uvp05,\n        \"uvp02\" as uvp02,\n        \"uvp04\" as uvp04,\n        \"koqua\" as koqua,\n        \"uvp01\" as uvp01,\n        \"uvp03\" as uvp03,\n        \"_fivetran_deleted\" as _fivetran_deleted,\n        \"_fivetran_synced\" as _fivetran_synced,\n        \"_fivetran_sap_archived\" as _fivetran_sap_archived\n    from \"postgres\".\"public_sap_dev\".\"stg_sap__vbup_tmp\"\n),\n\nfields as (\n    select\n        \n    \n    \n    mandt\n    \n as \n    \n    mandt\n    \n, \n    \n    \n    posnr\n    \n as \n    \n    posnr\n    \n, \n    \n    \n    vbeln\n    \n as \n    \n    vbeln\n    \n, \n    \n    \n    uvpak\n    \n as \n    \n    uvpak\n    \n, \n    \n    \n    uvvlk\n    \n as \n    \n    uvvlk\n    \n, \n    \n    \n    mill_vs_vssta\n    \n as \n    \n    mill_vs_vssta\n    \n, \n    \n    \n    pksta\n    \n as \n    \n    pksta\n    \n, \n    \n    \n    lssta\n    \n as \n    \n    lssta\n    \n, \n    \n    \n    vlstp\n    \n as \n    \n    vlstp\n    \n, \n    \n    \n    absta\n    \n as \n    \n    absta\n    \n, \n    \n    \n    fksta\n    \n as \n    \n    fksta\n    \n, \n    \n    \n    fkivp\n    \n as \n    \n    fkivp\n    \n, \n    \n    \n    lfgsa\n    \n as \n    \n    lfgsa\n    \n, \n    \n    \n    rrsta\n    \n as \n    \n    rrsta\n    \n, \n    \n    \n    lfsta\n    \n as \n    \n    lfsta\n    \n, \n    \n    \n    fksaa\n    \n as \n    \n    fksaa\n    \n, \n    \n    \n    wbsta\n    \n as \n    \n    wbsta\n    \n, \n    \n    \n    ltsps\n    \n as \n    \n    ltsps\n    \n, \n    \n    \n    costa\n    \n as \n    \n    costa\n    \n, \n    \n    \n    fssta\n    \n as \n    \n    fssta\n    \n, \n    \n    \n    kosta\n    \n as \n    \n    kosta\n    \n, \n    \n    \n    uvpik\n    \n as \n    \n    uvpik\n    \n, \n    \n    \n    uvfak\n    \n as \n    \n    uvfak\n    \n, \n    \n    \n    uvall\n    \n as \n    \n    uvall\n    \n, \n    \n    \n    rfgsa\n    \n as \n    \n    rfgsa\n    \n, \n    \n    \n    uvprs\n    \n as \n    \n    uvprs\n    \n, \n    \n    \n    lvsta\n    \n as \n    \n    lvsta\n    \n, \n    \n    \n    rfsta\n    \n as \n    \n    rfsta\n    \n, \n    \n    \n    cmppj\n    \n as \n    \n    cmppj\n    \n, \n    \n    \n    cmppi\n    \n as \n    \n    cmppi\n    \n, \n    \n    \n    hdall\n    \n as \n    \n    hdall\n    \n, \n    \n    \n    besta\n    \n as \n    \n    besta\n    \n, \n    \n    \n    pdsta\n    \n as \n    \n    pdsta\n    \n, \n    \n    \n    fsh_ar_stat_itm\n    \n as \n    \n    fsh_ar_stat_itm\n    \n, \n    \n    \n    manek\n    \n as \n    \n    manek\n    \n, \n    \n    \n    gbsta\n    \n as \n    \n    gbsta\n    \n, \n    \n    \n    uvwak\n    \n as \n    \n    uvwak\n    \n, \n    \n    \n    dcsta\n    \n as \n    \n    dcsta\n    \n, \n    \n    \n    uvp05\n    \n as \n    \n    uvp05\n    \n, \n    \n    \n    uvp02\n    \n as \n    \n    uvp02\n    \n, \n    \n    \n    uvp04\n    \n as \n    \n    uvp04\n    \n, \n    \n    \n    koqua\n    \n as \n    \n    koqua\n    \n, \n    \n    \n    uvp01\n    \n as \n    \n    uvp01\n    \n, \n    \n    \n    uvp03\n    \n as \n    \n    uvp03\n    \n, \n    \n    \n    _fivetran_deleted\n    \n as \n    \n    _fivetran_deleted\n    \n, \n    \n    \n    _fivetran_synced\n    \n as \n    \n    _fivetran_synced\n    \n, \n    \n    \n    _fivetran_sap_archived\n    \n as \n    \n    _fivetran_sap_archived\n    \n\n\n\n    from base\n),\n\nfinal as (\n    select\n        _fivetran_deleted,\n        _fivetran_synced,\n        _fivetran_sap_archived,\n        cast(mandt as TEXT) as mandt,\n        cast(posnr as TEXT) as posnr,\n        cast(vbeln as TEXT) as vbeln,\n        uvpak,\n        uvvlk,\n        mill_vs_vssta,\n        pksta,\n        lssta,\n        vlstp,\n        absta,\n        fksta,\n        fkivp,\n        lfgsa,\n        rrsta,\n        lfsta,\n        fksaa,\n        wbsta,\n        ltsps,\n        costa,\n        fssta,\n        kosta,\n        uvpik,\n        uvfak,\n        uvall,\n        rfgsa,\n        uvprs,\n        lvsta,\n        rfsta,\n        cmppj,\n        cmppi,\n        hdall,\n        besta,\n        pdsta,\n        fsh_ar_stat_itm,\n        manek,\n        gbsta,\n        uvwak,\n        dcsta,\n        uvp05,\n        uvp02,\n        uvp04,\n        koqua,\n        uvp01,\n        uvp03\n    from fields\n)\n\nselect *\nfrom final", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null, "primary_key": [], "time_spine": null}, "model.sap.stg_sap__vbuk": {"database": "postgres", "schema": "public_sap_dev", "name": "stg_sap__vbuk", "resource_type": "model", "package_name": "sap", "path": "staging/stg_sap__vbuk.sql", "original_file_path": "models/staging/stg_sap__vbuk.sql", "unique_id": "model.sap.stg_sap__vbuk", "fqn": ["sap", "staging", "stg_sap__vbuk"], "alias": "stg_sap__vbuk", "checksum": {"name": "sha256", "checksum": "13f49ae5d080de5dff768645179ff92331f8b6b0bd8d2e629e5829cff541cc1b"}, "config": {"enabled": true, "alias": null, "schema": "sap_dev", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "view", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "freshness": null}, "tags": [], "description": "Sales document status (header)", "columns": {"_fivetran_deleted": {"name": "_fivetran_deleted", "description": "Fivetran deletion marker", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "_fivetran_rowid": {"name": "_fivetran_rowid", "description": "Fivetran unique row ID", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "_fivetran_synced": {"name": "_fivetran_synced", "description": "Fivetran sync timestamp", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "abstk": {"name": "abstk", "description": "Rejection status", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "aedat": {"name": "aedat", "description": "Last change date", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "bestk": {"name": "bestk", "description": "Purchase order status", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "block": {"name": "block", "description": "General blocking reason", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "buchk": {"name": "buchk", "description": "Accounting status", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "cmgst": {"name": "cmgst", "description": "Overall credit check status", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "cmps0": {"name": "cmps0", "description": "Credit check static check", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "cmps1": {"name": "cmps1", "description": "Credit check days sales outstanding", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "cmps2": {"name": "cmps2", "description": "Credit check oldest open item", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "cmps_cm": {"name": "cmps_cm", "description": "Credit check credit master data", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "cmps_te": {"name": "cmps_te", "description": "Credit check terms of payment", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "cmpsa": {"name": "cmpsa", "description": "Credit check component A", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "cmpsb": {"name": "cmpsb", "description": "Credit check component B", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "cmpsc": {"name": "cmpsc", "description": "Credit check component C", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "cmpsd": {"name": "cmpsd", "description": "Credit check component D", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "cmpse": {"name": "cmpse", "description": "Credit check component E", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "cmpsf": {"name": "cmpsf", "description": "Credit check component F", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "cmpsg": {"name": "cmpsg", "description": "Credit check component G", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "cmpsh": {"name": "cmpsh", "description": "Credit check component H", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "cmpsi": {"name": "cmpsi", "description": "Credit check component I", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "cmpsj": {"name": "cmpsj", "description": "Credit check component J", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "cmpsk": {"name": "cmpsk", "description": "Credit check component K", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "cmpsl": {"name": "cmpsl", "description": "Credit check component L", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "cmpsm": {"name": "cmpsm", "description": "Credit check component M", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "costa": {"name": "costa", "description": "Costing status", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "dcstk": {"name": "dcstk", "description": "Document completeness status", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "fkivk": {"name": "fkivk", "description": "Invoicing plan status", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "fksak": {"name": "fksak", "description": "Billing document creation status", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "fkstk": {"name": "fkstk", "description": "Billing status", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "fmstk": {"name": "fmstk", "description": "Funds management status", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "fsh_ar_stat_hdr": {"name": "fsh_ar_stat_hdr", "description": "Fashion AR status header", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "fsstk": {"name": "fsstk", "description": "Financial document status", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "gbstk": {"name": "gbstk", "description": "Overall processing status", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "hdall": {"name": "hdall", "description": "Header fully delivered", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "hdals": {"name": "hdals", "description": "Header partially delivered", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "hvr_change_time": {"name": "hvr_change_time", "description": "HVR change timestamp", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "hvr_is_deleted": {"name": "hvr_is_deleted", "description": "HVR deletion flag", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "koquk": {"name": "koquk", "description": "Configuration status", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "kostk": {"name": "kostk", "description": "Cost estimate status", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "lfgsk": {"name": "lfgsk", "description": "Delivery status", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "lfstk": {"name": "lfstk", "description": "Delivery status of item", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "lsstk": {"name": "lsstk", "description": "Picking status", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "lvstk": {"name": "lvstk", "description": "Goods movement status", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "mandt": {"name": "mandt", "description": "Client", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "manek": {"name": "manek", "description": "Manual credit check indicator", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "pdstk": {"name": "pdstk", "description": "Pricing document status", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "pkstk": {"name": "pkstk", "description": "Picking confirmation status", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "relik": {"name": "relik", "description": "Release indicator", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "rfgsk": {"name": "rfgsk", "description": "Reference document status", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "rfstk": {"name": "rfstk", "description": "Reference billing status", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "rrsta": {"name": "rrsta", "description": "Returns status", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "saprl": {"name": "saprl", "description": "Release status", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "spe_tmpid": {"name": "spe_tmpid", "description": "Temporary document ID", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "spstg": {"name": "spstg", "description": "Shipping status", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "trsta": {"name": "trsta", "description": "Transportation status", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "uvall": {"name": "uvall", "description": "Fully billed", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "uvals": {"name": "uvals", "description": "Partially billed", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "uvfak": {"name": "uvfak", "description": "Billing block indicator", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "uvfas": {"name": "uvfas", "description": "Partial billing block", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "uvgek": {"name": "uvgek", "description": "Rebate agreement status", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "uvk01": {"name": "uvk01", "description": "User status 01", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "uvk02": {"name": "uvk02", "description": "User status 02", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "uvk03": {"name": "uvk03", "description": "User status 03", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "uvk04": {"name": "uvk04", "description": "User status 04", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "uvk05": {"name": "uvk05", "description": "User status 05", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "uvpak": {"name": "uvpak", "description": "Packing status", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "uvpas": {"name": "uvpas", "description": "Packing partial status", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "uvpik": {"name": "uvpik", "description": "Picking status", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "uvpis": {"name": "uvpis", "description": "Picking partial status", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "uvprs": {"name": "uvprs", "description": "Pricing status", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "uvs01": {"name": "uvs01", "description": "Custom status 01", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "uvs02": {"name": "uvs02", "description": "Custom status 02", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "uvs03": {"name": "uvs03", "description": "Custom status 03", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "uvs04": {"name": "uvs04", "description": "Custom status 04", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "uvs05": {"name": "uvs05", "description": "Custom status 05", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "uvvlk": {"name": "uvvlk", "description": "Delivery status (fully delivered)", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "uvvls": {"name": "uvvls", "description": "Delivery status (partially delivered)", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "uvwak": {"name": "uvwak", "description": "Goods issue status", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "uvwas": {"name": "uvwas", "description": "Partial goods issue status", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "vbeln": {"name": "vbeln", "description": "Sales document number", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "vbobj": {"name": "vbobj", "description": "Object type", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "vbtyp": {"name": "vbtyp", "description": "Sales document category", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "vbtyp_ext": {"name": "vbtyp_ext", "description": "External document category", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "vestk": {"name": "vestk", "description": "Shipping status", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "vlstk": {"name": "vlstk", "description": "Delivery status", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "wbstk": {"name": "wbstk", "description": "Goods issue status", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": "sap://models/staging/stg_sap.yml", "build_path": null, "unrendered_config": {"materialized": "view", "schema": "sap_{{ var('directed_schema','dev') }}", "enabled": true}, "created_at": 1756850331.476517, "relation_name": "\"postgres\".\"public_sap_dev\".\"stg_sap__vbuk\"", "raw_code": "{{ config(enabled=var('sap_using_vbuk', True)) }}\n\n{% set source_columns = adapter.get_columns_in_relation(ref('stg_sap__vbuk_tmp')) %}\n\nwith base as (\n    select {{ remove_slashes_from_col_names(source_columns) }}\n    from {{ ref('stg_sap__vbuk_tmp') }}\n),\n\nfields as (\n    select\n        {{\n            fivetran_utils.fill_staging_columns(\n                source_columns=source_columns,\n                staging_columns=get_vbuk_columns()\n            )\n        }}\n    from base\n),\n\nfinal as (\n    select\n        cast(mandt as {{ dbt.type_string() }}) as mandt,\n        aedat,\n        cast(vbeln as {{ dbt.type_string() }}) as vbeln,\n        rfstk,\n        rfgsk,\n        bestk,\n        lfstk,\n        lfgsk,\n        wbstk,\n        fkstk,\n        fksak,\n        buchk,\n        abstk,\n        gbstk,\n        kostk,\n        lvstk,\n        uvals,\n        uvvls,\n        uvfas,\n        uvall,\n        uvvlk,\n        uvfak,\n        uvprs,\n        vbtyp,\n        vbobj,\n        fkivk,\n        relik,\n        uvk01,\n        uvk02,\n        uvk03,\n        uvk04,\n        uvk05,\n        uvs01,\n        uvs02,\n        uvs03,\n        uvs04,\n        uvs05,\n        pkstk,\n        cmpsa,\n        cmpsb,\n        cmpsc,\n        cmpsd,\n        cmpse,\n        cmpsf,\n        cmpsg,\n        cmpsh,\n        cmpsi,\n        cmpsj,\n        cmpsk,\n        cmpsl,\n        cmps0,\n        cmps1,\n        cmps2,\n        cmgst,\n        trsta,\n        koquk,\n        costa,\n        saprl,\n        uvpas,\n        uvpis,\n        uvwas,\n        uvpak,\n        uvpik,\n        uvwak,\n        uvgek,\n        cmpsm,\n        dcstk,\n        vestk,\n        vlstk,\n        rrsta,\n        block,\n        fsstk,\n        lsstk,\n        spstg,\n        pdstk,\n        fmstk,\n        manek,\n        spe_tmpid,\n        hdall,\n        hdals,\n        cmps_cm,\n        cmps_te,\n        vbtyp_ext,\n        fsh_ar_stat_hdr,\n        hvr_is_deleted,\n        hvr_change_time,\n        _fivetran_deleted,\n        _fivetran_rowid,\n        _fivetran_synced\n    from fields\n)\n\nselect *\nfrom final", "doc_blocks": [], "language": "sql", "refs": [{"name": "stg_sap__vbuk_tmp", "package": null, "version": null}, {"name": "stg_sap__vbuk_tmp", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.sap.remove_slashes_from_col_names", "macro.sap.get_vbuk_columns", "macro.fivetran_utils.fill_staging_columns", "macro.dbt.type_string"], "nodes": ["model.sap.stg_sap__vbuk_tmp"]}, "compiled_path": "target/compiled/sap/models/staging/stg_sap__vbuk.sql", "compiled": true, "compiled_code": "\n\n\n\nwith base as (\n    select \n        \"mandt\" as mandt,\n        \"vbeln\" as vbeln,\n        \"rfstk\" as rfstk,\n        \"rfgsk\" as rfgsk,\n        \"bestk\" as bestk,\n        \"lfstk\" as lfstk,\n        \"lfgsk\" as lfgsk,\n        \"wbstk\" as wbstk,\n        \"fkstk\" as fkstk,\n        \"fksak\" as fksak,\n        \"buchk\" as buchk,\n        \"abstk\" as abstk,\n        \"gbstk\" as gbstk,\n        \"kostk\" as kostk,\n        \"lvstk\" as lvstk,\n        \"uvals\" as uvals,\n        \"uvvls\" as uvvls,\n        \"uvfas\" as uvfas,\n        \"uvall\" as uvall,\n        \"uvvlk\" as uvvlk,\n        \"uvfak\" as uvfak,\n        \"uvprs\" as uvprs,\n        \"vbtyp\" as vbtyp,\n        \"vbobj\" as vbobj,\n        \"aedat\" as aedat,\n        \"fkivk\" as fkivk,\n        \"relik\" as relik,\n        \"uvk01\" as uvk01,\n        \"uvk02\" as uvk02,\n        \"uvk03\" as uvk03,\n        \"uvk04\" as uvk04,\n        \"uvk05\" as uvk05,\n        \"uvs01\" as uvs01,\n        \"uvs02\" as uvs02,\n        \"uvs03\" as uvs03,\n        \"uvs04\" as uvs04,\n        \"uvs05\" as uvs05,\n        \"pkstk\" as pkstk,\n        \"cmpsa\" as cmpsa,\n        \"cmpsb\" as cmpsb,\n        \"cmpsc\" as cmpsc,\n        \"cmpsd\" as cmpsd,\n        \"cmpse\" as cmpse,\n        \"cmpsf\" as cmpsf,\n        \"cmpsg\" as cmpsg,\n        \"cmpsh\" as cmpsh,\n        \"cmpsi\" as cmpsi,\n        \"cmpsj\" as cmpsj,\n        \"cmpsk\" as cmpsk,\n        \"cmpsl\" as cmpsl,\n        \"cmps0\" as cmps0,\n        \"cmps1\" as cmps1,\n        \"cmps2\" as cmps2,\n        \"cmgst\" as cmgst,\n        \"trsta\" as trsta,\n        \"koquk\" as koquk,\n        \"costa\" as costa,\n        \"saprl\" as saprl,\n        \"uvpas\" as uvpas,\n        \"uvpis\" as uvpis,\n        \"uvwas\" as uvwas,\n        \"uvpak\" as uvpak,\n        \"uvpik\" as uvpik,\n        \"uvwak\" as uvwak,\n        \"uvgek\" as uvgek,\n        \"cmpsm\" as cmpsm,\n        \"dcstk\" as dcstk,\n        \"vestk\" as vestk,\n        \"vlstk\" as vlstk,\n        \"rrsta\" as rrsta,\n        \"block\" as block,\n        \"fsstk\" as fsstk,\n        \"lsstk\" as lsstk,\n        \"spstg\" as spstg,\n        \"pdstk\" as pdstk,\n        \"fmstk\" as fmstk,\n        \"manek\" as manek,\n        \"spe_tmpid\" as spe_tmpid,\n        \"hdall\" as hdall,\n        \"hdals\" as hdals,\n        \"cmps_cm\" as cmps_cm,\n        \"cmps_te\" as cmps_te,\n        \"vbtyp_ext\" as vbtyp_ext,\n        \"fsh_ar_stat_hdr\" as fsh_ar_stat_hdr,\n        \"hvr_is_deleted\" as hvr_is_deleted,\n        \"hvr_change_time\" as hvr_change_time\n    from \"postgres\".\"public_sap_dev\".\"stg_sap__vbuk_tmp\"\n),\n\nfields as (\n    select\n        \n    \n    \n    mandt\n    \n as \n    \n    mandt\n    \n, \n    \n    \n    vbeln\n    \n as \n    \n    vbeln\n    \n, \n    \n    \n    rfstk\n    \n as \n    \n    rfstk\n    \n, \n    \n    \n    rfgsk\n    \n as \n    \n    rfgsk\n    \n, \n    \n    \n    bestk\n    \n as \n    \n    bestk\n    \n, \n    \n    \n    lfstk\n    \n as \n    \n    lfstk\n    \n, \n    \n    \n    lfgsk\n    \n as \n    \n    lfgsk\n    \n, \n    \n    \n    wbstk\n    \n as \n    \n    wbstk\n    \n, \n    \n    \n    fkstk\n    \n as \n    \n    fkstk\n    \n, \n    \n    \n    fksak\n    \n as \n    \n    fksak\n    \n, \n    \n    \n    buchk\n    \n as \n    \n    buchk\n    \n, \n    \n    \n    abstk\n    \n as \n    \n    abstk\n    \n, \n    \n    \n    gbstk\n    \n as \n    \n    gbstk\n    \n, \n    \n    \n    kostk\n    \n as \n    \n    kostk\n    \n, \n    \n    \n    lvstk\n    \n as \n    \n    lvstk\n    \n, \n    \n    \n    uvals\n    \n as \n    \n    uvals\n    \n, \n    \n    \n    uvvls\n    \n as \n    \n    uvvls\n    \n, \n    \n    \n    uvfas\n    \n as \n    \n    uvfas\n    \n, \n    \n    \n    uvall\n    \n as \n    \n    uvall\n    \n, \n    \n    \n    uvvlk\n    \n as \n    \n    uvvlk\n    \n, \n    \n    \n    uvfak\n    \n as \n    \n    uvfak\n    \n, \n    \n    \n    uvprs\n    \n as \n    \n    uvprs\n    \n, \n    \n    \n    vbtyp\n    \n as \n    \n    vbtyp\n    \n, \n    \n    \n    vbobj\n    \n as \n    \n    vbobj\n    \n, \n    \n    \n    aedat\n    \n as \n    \n    aedat\n    \n, \n    \n    \n    fkivk\n    \n as \n    \n    fkivk\n    \n, \n    \n    \n    relik\n    \n as \n    \n    relik\n    \n, \n    \n    \n    uvk01\n    \n as \n    \n    uvk01\n    \n, \n    \n    \n    uvk02\n    \n as \n    \n    uvk02\n    \n, \n    \n    \n    uvk03\n    \n as \n    \n    uvk03\n    \n, \n    \n    \n    uvk04\n    \n as \n    \n    uvk04\n    \n, \n    \n    \n    uvk05\n    \n as \n    \n    uvk05\n    \n, \n    \n    \n    uvs01\n    \n as \n    \n    uvs01\n    \n, \n    \n    \n    uvs02\n    \n as \n    \n    uvs02\n    \n, \n    \n    \n    uvs03\n    \n as \n    \n    uvs03\n    \n, \n    \n    \n    uvs04\n    \n as \n    \n    uvs04\n    \n, \n    \n    \n    uvs05\n    \n as \n    \n    uvs05\n    \n, \n    \n    \n    pkstk\n    \n as \n    \n    pkstk\n    \n, \n    \n    \n    cmpsa\n    \n as \n    \n    cmpsa\n    \n, \n    \n    \n    cmpsb\n    \n as \n    \n    cmpsb\n    \n, \n    \n    \n    cmpsc\n    \n as \n    \n    cmpsc\n    \n, \n    \n    \n    cmpsd\n    \n as \n    \n    cmpsd\n    \n, \n    \n    \n    cmpse\n    \n as \n    \n    cmpse\n    \n, \n    \n    \n    cmpsf\n    \n as \n    \n    cmpsf\n    \n, \n    \n    \n    cmpsg\n    \n as \n    \n    cmpsg\n    \n, \n    \n    \n    cmpsh\n    \n as \n    \n    cmpsh\n    \n, \n    \n    \n    cmpsi\n    \n as \n    \n    cmpsi\n    \n, \n    \n    \n    cmpsj\n    \n as \n    \n    cmpsj\n    \n, \n    \n    \n    cmpsk\n    \n as \n    \n    cmpsk\n    \n, \n    \n    \n    cmpsl\n    \n as \n    \n    cmpsl\n    \n, \n    \n    \n    cmps0\n    \n as \n    \n    cmps0\n    \n, \n    \n    \n    cmps1\n    \n as \n    \n    cmps1\n    \n, \n    \n    \n    cmps2\n    \n as \n    \n    cmps2\n    \n, \n    \n    \n    cmgst\n    \n as \n    \n    cmgst\n    \n, \n    \n    \n    trsta\n    \n as \n    \n    trsta\n    \n, \n    \n    \n    koquk\n    \n as \n    \n    koquk\n    \n, \n    \n    \n    costa\n    \n as \n    \n    costa\n    \n, \n    \n    \n    saprl\n    \n as \n    \n    saprl\n    \n, \n    \n    \n    uvpas\n    \n as \n    \n    uvpas\n    \n, \n    \n    \n    uvpis\n    \n as \n    \n    uvpis\n    \n, \n    \n    \n    uvwas\n    \n as \n    \n    uvwas\n    \n, \n    \n    \n    uvpak\n    \n as \n    \n    uvpak\n    \n, \n    \n    \n    uvpik\n    \n as \n    \n    uvpik\n    \n, \n    \n    \n    uvwak\n    \n as \n    \n    uvwak\n    \n, \n    \n    \n    uvgek\n    \n as \n    \n    uvgek\n    \n, \n    \n    \n    cmpsm\n    \n as \n    \n    cmpsm\n    \n, \n    \n    \n    dcstk\n    \n as \n    \n    dcstk\n    \n, \n    \n    \n    vestk\n    \n as \n    \n    vestk\n    \n, \n    \n    \n    vlstk\n    \n as \n    \n    vlstk\n    \n, \n    \n    \n    rrsta\n    \n as \n    \n    rrsta\n    \n, \n    \n    \n    block\n    \n as \n    \n    block\n    \n, \n    \n    \n    fsstk\n    \n as \n    \n    fsstk\n    \n, \n    \n    \n    lsstk\n    \n as \n    \n    lsstk\n    \n, \n    \n    \n    spstg\n    \n as \n    \n    spstg\n    \n, \n    \n    \n    pdstk\n    \n as \n    \n    pdstk\n    \n, \n    \n    \n    fmstk\n    \n as \n    \n    fmstk\n    \n, \n    \n    \n    manek\n    \n as \n    \n    manek\n    \n, \n    \n    \n    spe_tmpid\n    \n as \n    \n    spe_tmpid\n    \n, \n    \n    \n    hdall\n    \n as \n    \n    hdall\n    \n, \n    \n    \n    hdals\n    \n as \n    \n    hdals\n    \n, \n    \n    \n    cmps_cm\n    \n as \n    \n    cmps_cm\n    \n, \n    \n    \n    cmps_te\n    \n as \n    \n    cmps_te\n    \n, \n    \n    \n    vbtyp_ext\n    \n as \n    \n    vbtyp_ext\n    \n, \n    \n    \n    fsh_ar_stat_hdr\n    \n as \n    \n    fsh_ar_stat_hdr\n    \n, \n    \n    \n    hvr_is_deleted\n    \n as \n    \n    hvr_is_deleted\n    \n, \n    \n    \n    hvr_change_time\n    \n as \n    \n    hvr_change_time\n    \n, \n    cast(null as boolean) as \n    \n    _fivetran_deleted\n    \n , \n    cast(null as timestamp) as \n    \n    _fivetran_synced\n    \n , \n    cast(null as TEXT) as \n    \n    _fivetran_rowid\n    \n \n\n\n    from base\n),\n\nfinal as (\n    select\n        cast(mandt as TEXT) as mandt,\n        aedat,\n        cast(vbeln as TEXT) as vbeln,\n        rfstk,\n        rfgsk,\n        bestk,\n        lfstk,\n        lfgsk,\n        wbstk,\n        fkstk,\n        fksak,\n        buchk,\n        abstk,\n        gbstk,\n        kostk,\n        lvstk,\n        uvals,\n        uvvls,\n        uvfas,\n        uvall,\n        uvvlk,\n        uvfak,\n        uvprs,\n        vbtyp,\n        vbobj,\n        fkivk,\n        relik,\n        uvk01,\n        uvk02,\n        uvk03,\n        uvk04,\n        uvk05,\n        uvs01,\n        uvs02,\n        uvs03,\n        uvs04,\n        uvs05,\n        pkstk,\n        cmpsa,\n        cmpsb,\n        cmpsc,\n        cmpsd,\n        cmpse,\n        cmpsf,\n        cmpsg,\n        cmpsh,\n        cmpsi,\n        cmpsj,\n        cmpsk,\n        cmpsl,\n        cmps0,\n        cmps1,\n        cmps2,\n        cmgst,\n        trsta,\n        koquk,\n        costa,\n        saprl,\n        uvpas,\n        uvpis,\n        uvwas,\n        uvpak,\n        uvpik,\n        uvwak,\n        uvgek,\n        cmpsm,\n        dcstk,\n        vestk,\n        vlstk,\n        rrsta,\n        block,\n        fsstk,\n        lsstk,\n        spstg,\n        pdstk,\n        fmstk,\n        manek,\n        spe_tmpid,\n        hdall,\n        hdals,\n        cmps_cm,\n        cmps_te,\n        vbtyp_ext,\n        fsh_ar_stat_hdr,\n        hvr_is_deleted,\n        hvr_change_time,\n        _fivetran_deleted,\n        _fivetran_rowid,\n        _fivetran_synced\n    from fields\n)\n\nselect *\nfrom final", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null, "primary_key": [], "time_spine": null}, "model.sap.stg_sap__ekbe": {"database": "postgres", "schema": "public_sap_dev", "name": "stg_sap__ekbe", "resource_type": "model", "package_name": "sap", "path": "staging/stg_sap__ekbe.sql", "original_file_path": "models/staging/stg_sap__ekbe.sql", "unique_id": "model.sap.stg_sap__ekbe", "fqn": ["sap", "staging", "stg_sap__ekbe"], "alias": "stg_sap__ekbe", "checksum": {"name": "sha256", "checksum": "b7277d067af2b3f43104e5c1c07c7e6e7c395f1e21969d4cb6bc9181437839e1"}, "config": {"enabled": true, "alias": null, "schema": "sap_dev", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "view", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "freshness": null}, "tags": [], "description": "Purchasing document history", "columns": {"_fivetran_deleted": {"name": "_fivetran_deleted", "description": "Fivetran deletion marker", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "_fivetran_sap_archived": {"name": "_fivetran_sap_archived", "description": "Fivetran SAP archive marker", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "_fivetran_synced": {"name": "_fivetran_synced", "description": "Fivetran sync timestamp", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "arewb": {"name": "arewb", "description": "Amount in local currency", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "arewr": {"name": "arewr", "description": "Original amount in local currency", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "arewr_pop": {"name": "arewr_pop", "description": "Corrected local currency amount", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "areww": {"name": "areww", "description": "Valuated amount in local currency", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "bamng": {"name": "bamng", "description": "Quantity entered", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "bekkn": {"name": "bekkn", "description": "Account assignment number", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "belnr": {"name": "belnr", "description": "Document number", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "bewtp": {"name": "bewtp", "description": "Transaction type", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "bldat": {"name": "bldat", "description": "Document date", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "bpmng": {"name": "bpmng", "description": "Quantity in order price unit", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "bpmng_pop": {"name": "bpmng_pop", "description": "Adjusted quantity in order price unit", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "bpweb": {"name": "bpweb", "description": "Vendor document number", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "bpwes": {"name": "bpwes", "description": "Vendor item number", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "budat": {"name": "budat", "description": "Posting date", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "buzei": {"name": "buzei", "description": "Document item", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "bwart": {"name": "bwart", "description": "Movement type", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "bwtar": {"name": "bwtar", "description": "Valuation type", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "charg": {"name": "charg", "description": "Batch number", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "cpudt": {"name": "cpudt", "description": "Entry date", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "cputm": {"name": "cputm", "description": "Entry time", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "dmbtr": {"name": "dmbtr", "description": "Amount in local currency", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "dmbtr_pop": {"name": "dmbtr_pop", "description": "Adjusted amount in local currency", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "ebeln": {"name": "ebeln", "description": "Purchasing document", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "ebelp": {"name": "ebelp", "description": "Purchasing document item", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "elikz": {"name": "elikz", "description": "Final delivery flag", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "ematn": {"name": "ematn", "description": "Supplier material number", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "ernam": {"name": "ernam", "description": "Created by", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "et_upd": {"name": "et_upd", "description": "Update timestamp", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "etens": {"name": "etens", "description": "Confirmation sequence number", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "evere": {"name": "evere", "description": "ERS indicator", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "fsh_collection": {"name": "fsh_collection", "description": "Fashion collection", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "fsh_season": {"name": "fsh_season", "description": "Fashion season", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "fsh_season_year": {"name": "fsh_season_year", "description": "Fashion season year", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "fsh_theme": {"name": "fsh_theme", "description": "Fashion theme", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "gjahr": {"name": "gjahr", "description": "Fiscal year", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "grund": {"name": "grund", "description": "Movement reason", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "hswae": {"name": "hswae", "description": "Insurance currency", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "hvr_change_time": {"name": "hvr_change_time", "description": "HVR change timestamp", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "hvr_is_deleted": {"name": "hvr_is_deleted", "description": "HVR deletion flag", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "introw": {"name": "introw", "description": "Internal row number", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "inv_item_origin": {"name": "inv_item_origin", "description": "Invoice item origin", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "j_sc_die_comp_f": {"name": "j_sc_die_comp_f", "description": "Custom field", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "knumv": {"name": "knumv", "description": "Condition number", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "kudif": {"name": "kudif", "description": "Customer-specific field", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "lemin": {"name": "lemin", "description": "Minimum delivery quantity", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "lfbnr": {"name": "lfbnr", "description": "Vendor invoice number", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "lfgja": {"name": "lfgja", "description": "Vendor invoice fiscal year", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "lfpos": {"name": "lfpos", "description": "Vendor invoice item", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "lsmeh": {"name": "lsmeh", "description": "Order unit of measure", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "lsmng": {"name": "lsmng", "description": "Order unit quantity", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "mandt": {"name": "mandt", "description": "Client", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "matnr": {"name": "matnr", "description": "Material number", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "menge": {"name": "menge", "description": "Quantity", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "menge_pop": {"name": "menge_pop", "description": "Adjusted quantity", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "mwskz": {"name": "mwskz", "description": "Tax code", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "packno": {"name": "packno", "description": "Package number", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "reewr": {"name": "reewr", "description": "ERS amount", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "refwr": {"name": "refwr", "description": "Reference amount", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "retamt_fc": {"name": "retamt_fc", "description": "Retention amount (FC)", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "retamt_lc": {"name": "retamt_lc", "description": "Retention amount (LC)", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "retamtp_fc": {"name": "retamtp_fc", "description": "Retention percent (FC)", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "retamtp_lc": {"name": "retamtp_lc", "description": "Retention percent (LC)", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "rewrb": {"name": "rewrb", "description": "Tax amount", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "saprl": {"name": "saprl", "description": "SAP release", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "sgt_scat": {"name": "sgt_scat", "description": "Segmentation category", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "shkzg": {"name": "shkzg", "description": "Debit/credit indicator", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "srvpos": {"name": "srvpos", "description": "Service line number", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "vbeln_st": {"name": "vbeln_st", "description": "Sales document", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "vbelp_st": {"name": "vbelp_st", "description": "Sales document item", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "vgabe": {"name": "vgabe", "description": "Transaction/event type", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "waers": {"name": "waers", "description": "Currency key", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "weora": {"name": "weora", "description": "Goods receipt time", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "werks": {"name": "werks", "description": "Plant", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "wesbb": {"name": "wesbb", "description": "Quantity to be invoiced", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "wesbs": {"name": "wesbs", "description": "Quantity to be delivered", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "wkurs": {"name": "wkurs", "description": "Exchange rate", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "wrbtr": {"name": "wrbtr", "description": "Amount in document currency", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "wrbtr_pop": {"name": "wrbtr_pop", "description": "Adjusted amount in document currency", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "wrf_charstc1": {"name": "wrf_charstc1", "description": "Retail characteristic 1", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "wrf_charstc2": {"name": "wrf_charstc2", "description": "Retail characteristic 2", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "wrf_charstc3": {"name": "wrf_charstc3", "description": "Retail characteristic 3", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "xblnr": {"name": "xblnr", "description": "Reference document number", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "xmacc": {"name": "xmacc", "description": "Cross-company accounting flag", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "xunpl": {"name": "xunpl", "description": "Planned delivery costs flag", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "xwoff": {"name": "xwoff", "description": "Goods movement offset flag", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "xwsbr": {"name": "xwsbr", "description": "ERS settlement flag", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "zekkn": {"name": "zekkn", "description": "Account assignment sequence number", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": "sap://models/staging/stg_sap.yml", "build_path": null, "unrendered_config": {"materialized": "view", "schema": "sap_{{ var('directed_schema','dev') }}", "enabled": true}, "created_at": 1756850330.6595776, "relation_name": "\"postgres\".\"public_sap_dev\".\"stg_sap__ekbe\"", "raw_code": "{{ config(enabled=var('sap_using_ekbe', True)) }}\n\n{% set source_columns = adapter.get_columns_in_relation(ref('stg_sap__ekbe_tmp')) %}\n\nwith base as (\n    select {{ remove_slashes_from_col_names(source_columns) }}\n    from {{ ref('stg_sap__ekbe_tmp') }}\n),\n\nfields as (\n    select\n        {{\n            fivetran_utils.fill_staging_columns(\n                source_columns=source_columns,\n                staging_columns=get_ekbe_columns()\n            )\n        }}\n    from base\n),\n\nfinal as (\n    select\n        arewb,\n        arewr,\n        arewr_pop,\n        areww,\n        bamng,\n        bekkn,\n        belnr,\n        bewtp,\n        bldat,\n        bpmng,\n        bpmng_pop,\n        bpweb,\n        bpwes,\n        budat,\n        buzei,\n        bwart,\n        bwtar,\n        charg,\n        cpudt,\n        cputm,\n        dmbtr,\n        dmbtr_pop,\n        cast(ebeln as {{ dbt.type_string() }}) as ebeln,\n        cast(ebelp as {{ dbt.type_string() }}) as ebelp,\n        elikz,\n        ematn,\n        ernam,\n        et_upd,\n        etens,\n        evere,\n        fsh_collection,\n        fsh_season,\n        fsh_season_year,\n        fsh_theme,\n        gjahr,\n        grund,\n        hswae,\n        hvr_change_time,\n        hvr_is_deleted,\n        introw,\n        inv_item_origin,\n        j_sc_die_comp_f,\n        knumv,\n        kudif,\n        lemin,\n        lfbnr,\n        lfgja,\n        lfpos,\n        lsmeh,\n        lsmng,\n        cast(mandt as {{ dbt.type_string() }}) as mandt,\n        cast(matnr as {{ dbt.type_string() }}) as matnr,\n        cast(menge as {{ dbt.type_numeric() }}) as menge,\n        menge_pop,\n        mwskz,\n        packno,\n        reewr,\n        refwr,\n        retamt_fc,\n        retamt_lc,\n        retamtp_fc,\n        retamtp_lc,\n        rewrb,\n        saprl,\n        sgt_scat,\n        cast(shkzg as {{ dbt.type_string() }}) as shkzg,\n        srvpos,\n        vbeln_st,\n        vbelp_st,\n        cast(vgabe as {{ dbt.type_string() }}) as vgabe,\n        waers,\n        weora,\n        werks,\n        wesbb,\n        wesbs,\n        wkurs,\n        wrbtr,\n        wrbtr_pop,\n        wrf_charstc1,\n        wrf_charstc2,\n        wrf_charstc3,\n        xblnr,\n        xmacc,\n        xunpl,\n        xwoff,\n        xwsbr,\n        zekkn,\n        _fivetran_sap_archived,\n        _fivetran_deleted,\n        _fivetran_synced\n    from fields\n)\n\nselect *\nfrom final", "doc_blocks": [], "language": "sql", "refs": [{"name": "stg_sap__ekbe_tmp", "package": null, "version": null}, {"name": "stg_sap__ekbe_tmp", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.sap.remove_slashes_from_col_names", "macro.sap.get_ekbe_columns", "macro.fivetran_utils.fill_staging_columns", "macro.dbt.type_string", "macro.dbt.type_numeric"], "nodes": ["model.sap.stg_sap__ekbe_tmp"]}, "compiled_path": "target/compiled/sap/models/staging/stg_sap__ekbe.sql", "compiled": true, "compiled_code": "\n\n\n\nwith base as (\n    select \n        \"arewb\" as arewb,\n        \"arewr\" as arewr,\n        \"arewr_pop\" as arewr_pop,\n        \"areww\" as areww,\n        \"bamng\" as bamng,\n        \"bekkn\" as bekkn,\n        \"belnr\" as belnr,\n        \"bewtp\" as bewtp,\n        \"bldat\" as bldat,\n        \"bpmng\" as bpmng,\n        \"bpmng_pop\" as bpmng_pop,\n        \"bpweb\" as bpweb,\n        \"bpwes\" as bpwes,\n        \"budat\" as budat,\n        \"buzei\" as buzei,\n        \"bwart\" as bwart,\n        \"bwtar\" as bwtar,\n        \"charg\" as charg,\n        \"cpudt\" as cpudt,\n        \"cputm\" as cputm,\n        \"dmbtr\" as dmbtr,\n        \"dmbtr_pop\" as dmbtr_pop,\n        \"ebeln\" as ebeln,\n        \"ebelp\" as ebelp,\n        \"elikz\" as elikz,\n        \"ematn\" as ematn,\n        \"ernam\" as ernam,\n        \"et_upd\" as et_upd,\n        \"etens\" as etens,\n        \"evere\" as evere,\n        \"fsh_collection\" as fsh_collection,\n        \"fsh_season\" as fsh_season,\n        \"fsh_season_year\" as fsh_season_year,\n        \"fsh_theme\" as fsh_theme,\n        \"gjahr\" as gjahr,\n        \"grund\" as grund,\n        \"hswae\" as hswae,\n        \"hvr_change_time\" as hvr_change_time,\n        \"hvr_is_deleted\" as hvr_is_deleted,\n        \"introw\" as introw,\n        \"inv_item_origin\" as inv_item_origin,\n        \"j_sc_die_comp_f\" as j_sc_die_comp_f,\n        \"knumv\" as knumv,\n        \"kudif\" as kudif,\n        \"lemin\" as lemin,\n        \"lfbnr\" as lfbnr,\n        \"lfgja\" as lfgja,\n        \"lfpos\" as lfpos,\n        \"lsmeh\" as lsmeh,\n        \"lsmng\" as lsmng,\n        \"mandt\" as mandt,\n        \"matnr\" as matnr,\n        \"menge\" as menge,\n        \"menge_pop\" as menge_pop,\n        \"mwskz\" as mwskz,\n        \"packno\" as packno,\n        \"reewr\" as reewr,\n        \"refwr\" as refwr,\n        \"retamt_fc\" as retamt_fc,\n        \"retamt_lc\" as retamt_lc,\n        \"retamtp_fc\" as retamtp_fc,\n        \"retamtp_lc\" as retamtp_lc,\n        \"rewrb\" as rewrb,\n        \"saprl\" as saprl,\n        \"sgt_scat\" as sgt_scat,\n        \"shkzg\" as shkzg,\n        \"srvpos\" as srvpos,\n        \"vbeln_st\" as vbeln_st,\n        \"vbelp_st\" as vbelp_st,\n        \"vgabe\" as vgabe,\n        \"waers\" as waers,\n        \"weora\" as weora,\n        \"werks\" as werks,\n        \"wesbb\" as wesbb,\n        \"wesbs\" as wesbs,\n        \"wkurs\" as wkurs,\n        \"wrbtr\" as wrbtr,\n        \"wrbtr_pop\" as wrbtr_pop,\n        \"wrf_charstc1\" as wrf_charstc1,\n        \"wrf_charstc2\" as wrf_charstc2,\n        \"wrf_charstc3\" as wrf_charstc3,\n        \"xblnr\" as xblnr,\n        \"xmacc\" as xmacc,\n        \"xunpl\" as xunpl,\n        \"xwoff\" as xwoff,\n        \"xwsbr\" as xwsbr,\n        \"zekkn\" as zekkn,\n        \"_fivetran_deleted\" as _fivetran_deleted,\n        \"_fivetran_synced\" as _fivetran_synced,\n        \"_fivetran_sap_archived\" as _fivetran_sap_archived\n    from \"postgres\".\"public_sap_dev\".\"stg_sap__ekbe_tmp\"\n),\n\nfields as (\n    select\n        \n    \n    \n    arewb\n    \n as \n    \n    arewb\n    \n, \n    \n    \n    arewr\n    \n as \n    \n    arewr\n    \n, \n    \n    \n    arewr_pop\n    \n as \n    \n    arewr_pop\n    \n, \n    \n    \n    areww\n    \n as \n    \n    areww\n    \n, \n    \n    \n    bamng\n    \n as \n    \n    bamng\n    \n, \n    \n    \n    bekkn\n    \n as \n    \n    bekkn\n    \n, \n    \n    \n    belnr\n    \n as \n    \n    belnr\n    \n, \n    \n    \n    bewtp\n    \n as \n    \n    bewtp\n    \n, \n    \n    \n    bldat\n    \n as \n    \n    bldat\n    \n, \n    \n    \n    bpmng\n    \n as \n    \n    bpmng\n    \n, \n    \n    \n    bpmng_pop\n    \n as \n    \n    bpmng_pop\n    \n, \n    \n    \n    bpweb\n    \n as \n    \n    bpweb\n    \n, \n    \n    \n    bpwes\n    \n as \n    \n    bpwes\n    \n, \n    \n    \n    budat\n    \n as \n    \n    budat\n    \n, \n    \n    \n    buzei\n    \n as \n    \n    buzei\n    \n, \n    \n    \n    bwart\n    \n as \n    \n    bwart\n    \n, \n    \n    \n    bwtar\n    \n as \n    \n    bwtar\n    \n, \n    \n    \n    charg\n    \n as \n    \n    charg\n    \n, \n    \n    \n    cpudt\n    \n as \n    \n    cpudt\n    \n, \n    \n    \n    cputm\n    \n as \n    \n    cputm\n    \n, \n    \n    \n    dmbtr\n    \n as \n    \n    dmbtr\n    \n, \n    \n    \n    dmbtr_pop\n    \n as \n    \n    dmbtr_pop\n    \n, \n    \n    \n    ebeln\n    \n as \n    \n    ebeln\n    \n, \n    \n    \n    ebelp\n    \n as \n    \n    ebelp\n    \n, \n    \n    \n    elikz\n    \n as \n    \n    elikz\n    \n, \n    \n    \n    ematn\n    \n as \n    \n    ematn\n    \n, \n    \n    \n    ernam\n    \n as \n    \n    ernam\n    \n, \n    \n    \n    et_upd\n    \n as \n    \n    et_upd\n    \n, \n    \n    \n    etens\n    \n as \n    \n    etens\n    \n, \n    \n    \n    evere\n    \n as \n    \n    evere\n    \n, \n    \n    \n    fsh_collection\n    \n as \n    \n    fsh_collection\n    \n, \n    \n    \n    fsh_season\n    \n as \n    \n    fsh_season\n    \n, \n    \n    \n    fsh_season_year\n    \n as \n    \n    fsh_season_year\n    \n, \n    \n    \n    fsh_theme\n    \n as \n    \n    fsh_theme\n    \n, \n    \n    \n    gjahr\n    \n as \n    \n    gjahr\n    \n, \n    \n    \n    grund\n    \n as \n    \n    grund\n    \n, \n    \n    \n    hswae\n    \n as \n    \n    hswae\n    \n, \n    \n    \n    hvr_change_time\n    \n as \n    \n    hvr_change_time\n    \n, \n    \n    \n    hvr_is_deleted\n    \n as \n    \n    hvr_is_deleted\n    \n, \n    \n    \n    introw\n    \n as \n    \n    introw\n    \n, \n    \n    \n    inv_item_origin\n    \n as \n    \n    inv_item_origin\n    \n, \n    \n    \n    j_sc_die_comp_f\n    \n as \n    \n    j_sc_die_comp_f\n    \n, \n    \n    \n    knumv\n    \n as \n    \n    knumv\n    \n, \n    \n    \n    kudif\n    \n as \n    \n    kudif\n    \n, \n    \n    \n    lemin\n    \n as \n    \n    lemin\n    \n, \n    \n    \n    lfbnr\n    \n as \n    \n    lfbnr\n    \n, \n    \n    \n    lfgja\n    \n as \n    \n    lfgja\n    \n, \n    \n    \n    lfpos\n    \n as \n    \n    lfpos\n    \n, \n    \n    \n    lsmeh\n    \n as \n    \n    lsmeh\n    \n, \n    \n    \n    lsmng\n    \n as \n    \n    lsmng\n    \n, \n    \n    \n    mandt\n    \n as \n    \n    mandt\n    \n, \n    \n    \n    matnr\n    \n as \n    \n    matnr\n    \n, \n    \n    \n    menge\n    \n as \n    \n    menge\n    \n, \n    \n    \n    menge_pop\n    \n as \n    \n    menge_pop\n    \n, \n    \n    \n    mwskz\n    \n as \n    \n    mwskz\n    \n, \n    \n    \n    packno\n    \n as \n    \n    packno\n    \n, \n    \n    \n    reewr\n    \n as \n    \n    reewr\n    \n, \n    \n    \n    refwr\n    \n as \n    \n    refwr\n    \n, \n    \n    \n    retamt_fc\n    \n as \n    \n    retamt_fc\n    \n, \n    \n    \n    retamt_lc\n    \n as \n    \n    retamt_lc\n    \n, \n    \n    \n    retamtp_fc\n    \n as \n    \n    retamtp_fc\n    \n, \n    \n    \n    retamtp_lc\n    \n as \n    \n    retamtp_lc\n    \n, \n    \n    \n    rewrb\n    \n as \n    \n    rewrb\n    \n, \n    \n    \n    saprl\n    \n as \n    \n    saprl\n    \n, \n    \n    \n    sgt_scat\n    \n as \n    \n    sgt_scat\n    \n, \n    \n    \n    shkzg\n    \n as \n    \n    shkzg\n    \n, \n    \n    \n    srvpos\n    \n as \n    \n    srvpos\n    \n, \n    \n    \n    vbeln_st\n    \n as \n    \n    vbeln_st\n    \n, \n    \n    \n    vbelp_st\n    \n as \n    \n    vbelp_st\n    \n, \n    \n    \n    vgabe\n    \n as \n    \n    vgabe\n    \n, \n    \n    \n    waers\n    \n as \n    \n    waers\n    \n, \n    \n    \n    weora\n    \n as \n    \n    weora\n    \n, \n    \n    \n    werks\n    \n as \n    \n    werks\n    \n, \n    \n    \n    wesbb\n    \n as \n    \n    wesbb\n    \n, \n    \n    \n    wesbs\n    \n as \n    \n    wesbs\n    \n, \n    \n    \n    wkurs\n    \n as \n    \n    wkurs\n    \n, \n    \n    \n    wrbtr\n    \n as \n    \n    wrbtr\n    \n, \n    \n    \n    wrbtr_pop\n    \n as \n    \n    wrbtr_pop\n    \n, \n    \n    \n    wrf_charstc1\n    \n as \n    \n    wrf_charstc1\n    \n, \n    \n    \n    wrf_charstc2\n    \n as \n    \n    wrf_charstc2\n    \n, \n    \n    \n    wrf_charstc3\n    \n as \n    \n    wrf_charstc3\n    \n, \n    \n    \n    xblnr\n    \n as \n    \n    xblnr\n    \n, \n    \n    \n    xmacc\n    \n as \n    \n    xmacc\n    \n, \n    \n    \n    xunpl\n    \n as \n    \n    xunpl\n    \n, \n    \n    \n    xwoff\n    \n as \n    \n    xwoff\n    \n, \n    \n    \n    xwsbr\n    \n as \n    \n    xwsbr\n    \n, \n    \n    \n    zekkn\n    \n as \n    \n    zekkn\n    \n, \n    \n    \n    _fivetran_deleted\n    \n as \n    \n    _fivetran_deleted\n    \n, \n    \n    \n    _fivetran_synced\n    \n as \n    \n    _fivetran_synced\n    \n, \n    \n    \n    _fivetran_sap_archived\n    \n as \n    \n    _fivetran_sap_archived\n    \n\n\n\n    from base\n),\n\nfinal as (\n    select\n        arewb,\n        arewr,\n        arewr_pop,\n        areww,\n        bamng,\n        bekkn,\n        belnr,\n        bewtp,\n        bldat,\n        bpmng,\n        bpmng_pop,\n        bpweb,\n        bpwes,\n        budat,\n        buzei,\n        bwart,\n        bwtar,\n        charg,\n        cpudt,\n        cputm,\n        dmbtr,\n        dmbtr_pop,\n        cast(ebeln as TEXT) as ebeln,\n        cast(ebelp as TEXT) as ebelp,\n        elikz,\n        ematn,\n        ernam,\n        et_upd,\n        etens,\n        evere,\n        fsh_collection,\n        fsh_season,\n        fsh_season_year,\n        fsh_theme,\n        gjahr,\n        grund,\n        hswae,\n        hvr_change_time,\n        hvr_is_deleted,\n        introw,\n        inv_item_origin,\n        j_sc_die_comp_f,\n        knumv,\n        kudif,\n        lemin,\n        lfbnr,\n        lfgja,\n        lfpos,\n        lsmeh,\n        lsmng,\n        cast(mandt as TEXT) as mandt,\n        cast(matnr as TEXT) as matnr,\n        cast(menge as numeric(28,6)) as menge,\n        menge_pop,\n        mwskz,\n        packno,\n        reewr,\n        refwr,\n        retamt_fc,\n        retamt_lc,\n        retamtp_fc,\n        retamtp_lc,\n        rewrb,\n        saprl,\n        sgt_scat,\n        cast(shkzg as TEXT) as shkzg,\n        srvpos,\n        vbeln_st,\n        vbelp_st,\n        cast(vgabe as TEXT) as vgabe,\n        waers,\n        weora,\n        werks,\n        wesbb,\n        wesbs,\n        wkurs,\n        wrbtr,\n        wrbtr_pop,\n        wrf_charstc1,\n        wrf_charstc2,\n        wrf_charstc3,\n        xblnr,\n        xmacc,\n        xunpl,\n        xwoff,\n        xwsbr,\n        zekkn,\n        _fivetran_sap_archived,\n        _fivetran_deleted,\n        _fivetran_synced\n    from fields\n)\n\nselect *\nfrom final", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null, "primary_key": [], "time_spine": null}, "model.sap.stg_sap__vbap": {"database": "postgres", "schema": "public_sap_dev", "name": "stg_sap__vbap", "resource_type": "model", "package_name": "sap", "path": "staging/stg_sap__vbap.sql", "original_file_path": "models/staging/stg_sap__vbap.sql", "unique_id": "model.sap.stg_sap__vbap", "fqn": ["sap", "staging", "stg_sap__vbap"], "alias": "stg_sap__vbap", "checksum": {"name": "sha256", "checksum": "2f5ac3a896c2b5f780ed7a73cc93188968e671bd4cb5c6d71cc20b4ab9fbe9af"}, "config": {"enabled": true, "alias": null, "schema": "sap_dev", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "view", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "freshness": null}, "tags": [], "description": "Sales document item data", "columns": {"_accgo_is_co_rel": {"name": "_accgo_is_co_rel", "description": "CO-relevant indicator (Accruals)", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "_accgo_tx_p": {"name": "_accgo_tx_p", "description": "Accruals tax percentage", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "_bev1_srfund": {"name": "_bev1_srfund", "description": "Beverage-specific fund indicator", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "_dataaging": {"name": "_dataaging", "description": "Data aging timestamp", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "_fivetran_deleted": {"name": "_fivetran_deleted", "description": "Fivetran deletion marker", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "_fivetran_sap_archived": {"name": "_fivetran_sap_archived", "description": "Fivetran SAP archive marker", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "_fivetran_synced": {"name": "_fivetran_synced", "description": "Fivetran sync timestamp", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "_slce_inst_guid": {"name": "_slce_inst_guid", "description": "Solution configuration instance GUID", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "_slce_single_conf_done": {"name": "_slce_single_conf_done", "description": "Single configuration completed", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "_slce_single_conf_reqired": {"name": "_slce_single_conf_reqired", "description": "Single configuration required", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "_slce_sol_cuobj": {"name": "_slce_sol_cuobj", "description": "Solution configuration object number", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "_slce_sol_ext_guid": {"name": "_slce_sol_ext_guid", "description": "Solution external GUID", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "_slce_sol_matnr": {"name": "_slce_sol_matnr", "description": "Solution material number", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "_slce_sol_posnr": {"name": "_slce_sol_posnr", "description": "Solution item number", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "_xlso_course_bda": {"name": "_xlso_course_bda", "description": "XL course begin date", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "_xlso_course_eda": {"name": "_xlso_course_eda", "description": "XL course end date", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "_xlso_course_id": {"name": "_xlso_course_id", "description": "XL course ID", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "abdat": {"name": "abdat", "description": "Delivery date", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "abfor": {"name": "abfor", "description": "Schedule line date (initial)", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "abges": {"name": "abges", "description": "Quantity confirmed by availability check", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "abgrs": {"name": "abgrs", "description": "Reason for rejection", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "abgru": {"name": "abgru", "description": "Rejection reason", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "ablfz": {"name": "ablfz", "description": "Partial delivery allowed", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "absfz": {"name": "absfz", "description": "Maximum partial deliveries", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "aedat": {"name": "aedat", "description": "Last change date", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "antlf": {"name": "antlf", "description": "Number of partial deliveries", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "anzsn": {"name": "anzsn", "description": "Number of serial numbers", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "aplzl_oaa": {"name": "aplzl_oaa", "description": "Routing line number (OAA)", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "aplzl_olc": {"name": "aplzl_olc", "description": "Routing line number (OLC)", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "arktx": {"name": "arktx", "description": "Short text for sales order item", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "arsnum": {"name": "arsnum", "description": "Scheduling agreement number", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "arspos": {"name": "arspos", "description": "Scheduling agreement item", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "atpkz": {"name": "atpkz", "description": "ATP check indicator", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "aufnr": {"name": "aufnr", "description": "Order number", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "aufpl_oaa": {"name": "aufpl_oaa", "description": "Routing number (OAA)", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "aufpl_olc": {"name": "aufpl_olc", "description": "Routing number (OLC)", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "awahr": {"name": "awahr", "description": "Order probability", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "bedae": {"name": "bedae", "description": "Requirement type", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "berid": {"name": "berid", "description": "MRP area", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "betc": {"name": "betc", "description": "Tax base code", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "bonus": {"name": "bonus", "description": "Bonus indicator", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "bpn": {"name": "bpn", "description": "Bid project number", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "brgew": {"name": "brgew", "description": "Gross weight", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "budget_pd": {"name": "budget_pd", "description": "Budget period", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "bwtar": {"name": "bwtar", "description": "Valuation type", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "bwtex": {"name": "bwtex", "description": "External valuation type", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "cancel_allow": {"name": "cancel_allow", "description": "Cancellation allowed", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "cepok": {"name": "cepok", "description": "Order confirmation partner", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "charg": {"name": "charg", "description": "Batch number", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "chmvs": {"name": "chmvs", "description": "Batch split indicator", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "chspl": {"name": "chspl", "description": "Split delivery indicator", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "clint": {"name": "clint", "description": "Classification internal number", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "cmeth": {"name": "cmeth", "description": "Costing method", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "cmkua": {"name": "cmkua", "description": "Credit management check at item level", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "cmpnt": {"name": "cmpnt", "description": "Component item indicator", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "cmpre": {"name": "cmpre", "description": "Comparative quantity", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "cmpre_flt": {"name": "cmpre_flt", "description": "Float-based comparison quantity", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "cmtfg": {"name": "cmtfg", "description": "Configuration strategy", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "cpd_updat": {"name": "cpd_updat", "description": "Update indicator for CPD item", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "cuobj": {"name": "cuobj", "description": "Configuration object number", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "cuobj_ch": {"name": "cuobj_ch", "description": "Changed configuration object", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "ean11": {"name": "ean11", "description": "International Article Number (EAN/UPC)", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "eannr": {"name": "eannr", "description": "European Article Number", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "erdat": {"name": "erdat", "description": "Creation date", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "erlre": {"name": "erlre", "description": "Final delivery indicator", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "ernam": {"name": "ernam", "description": "Created by", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "erzet": {"name": "erzet", "description": "Time of entry", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "exart": {"name": "exart", "description": "Export/import type", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "faksp": {"name": "faksp", "description": "Billing block for item", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "ferc_ind": {"name": "ferc_ind", "description": "Federal Energy Reg Commission indicator", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "fiscal_incentive": {"name": "fiscal_incentive", "description": "Fiscal incentive indicator", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "fiscal_incentive_id": {"name": "fiscal_incentive_id", "description": "Fiscal incentive ID", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "fistl": {"name": "fistl", "description": "Funds center", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "fixmg": {"name": "fixmg", "description": "Fixed quantity", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "fkber": {"name": "fkber", "description": "Functional area", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "fkrel": {"name": "fkrel", "description": "Relevant for billing", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "fmeng": {"name": "fmeng", "description": "Confirmed quantity", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "fmfgus_key": {"name": "fmfgus_key", "description": "FM federal government US key", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "fonds": {"name": "fonds", "description": "Fund", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "fsh_candate": {"name": "fsh_candate", "description": "Fashion cancellation date", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "fsh_collection": {"name": "fsh_collection", "description": "Fashion collection", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "fsh_crsd": {"name": "fsh_crsd", "description": "Creation strategy", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "fsh_grid_cond_rec": {"name": "fsh_grid_cond_rec", "description": "Grid condition record (Fashion)", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "fsh_item": {"name": "fsh_item", "description": "Fashion item number", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "fsh_item_group": {"name": "fsh_item_group", "description": "Fashion item group", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "fsh_pqr_uepos": {"name": "fsh_pqr_uepos", "description": "Parent item for PQR", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "fsh_psm_pfm_split": {"name": "fsh_psm_pfm_split", "description": "Budget split for fashion items", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "fsh_searef": {"name": "fsh_searef", "description": "Season reference", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "fsh_season": {"name": "fsh_season", "description": "Fashion season", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "fsh_season_year": {"name": "fsh_season_year", "description": "Fashion season year", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "fsh_theme": {"name": "fsh_theme", "description": "Fashion theme", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "fsh_transaction": {"name": "fsh_transaction", "description": "Fashion transaction type", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "fsh_vas_prnt_id": {"name": "fsh_vas_prnt_id", "description": "Parent VAS item", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "fsh_vas_rel": {"name": "fsh_vas_rel", "description": "VAS relevance indicator", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "fsh_vasref": {"name": "fsh_vasref", "description": "VAS reference ID", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "gewei": {"name": "gewei", "description": "Weight unit", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "grant_nbr": {"name": "grant_nbr", "description": "Grant number", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "grkor": {"name": "grkor", "description": "Group counter", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "grpos": {"name": "grpos", "description": "Group position", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "gsber": {"name": "gsber", "description": "Business area", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "handoverdate": {"name": "handoverdate", "description": "Handover date to shipper", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "handoverloc": {"name": "handoverloc", "description": "Handover location", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "handovertime": {"name": "handovertime", "description": "Handover time", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "iuid_relevant": {"name": "iuid_relevant", "description": "Indicator for IUID relevance", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "j_1bcfop": {"name": "j_1bcfop", "description": "Brazilian CFOP code", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "j_1btaxlw1": {"name": "j_1btaxlw1", "description": "Local tax classification 1", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "j_1btaxlw2": {"name": "j_1btaxlw2", "description": "Local tax classification 2", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "j_1btaxlw3": {"name": "j_1btaxlw3", "description": "Local tax classification 3", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "j_1btaxlw4": {"name": "j_1btaxlw4", "description": "Local tax classification 4", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "j_1btaxlw5": {"name": "j_1btaxlw5", "description": "Local tax classification 5", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "j_1btxsdc": {"name": "j_1btxsdc", "description": "Substitui\u00e7\u00e3o tribut\u00e1ria code (Brazil)", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "kalnr": {"name": "kalnr", "description": "Internal number for conditions", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "kalsm_k": {"name": "kalsm_k", "description": "Pricing procedure for item", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "kalvar": {"name": "kalvar", "description": "Calculation variant", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "kannr": {"name": "kannr", "description": "Quantity contract number", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "kbmeng": {"name": "kbmeng", "description": "Cumulative confirmed quantity", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "kbver": {"name": "kbver", "description": "Condition record version", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "kdmat": {"name": "kdmat", "description": "Customer material number", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "kever": {"name": "kever", "description": "Version number of costing", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "klmeng": {"name": "klmeng", "description": "Target quantity", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "klvar": {"name": "klvar", "description": "Variant configuration version", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "kmein": {"name": "kmein", "description": "Target quantity unit", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "kmpmg": {"name": "kmpmg", "description": "Cumulative quantity delivered", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "knttp": {"name": "knttp", "description": "Account assignment category", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "knuma_ag": {"name": "knuma_ag", "description": "Agreement item number", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "knuma_pi": {"name": "knuma_pi", "description": "Pricing item number", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "knumh": {"name": "knumh", "description": "Condition record number", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "kondm": {"name": "kondm", "description": "Material group 1", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "kosch": {"name": "kosch", "description": "Product allocation procedure", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "kostl": {"name": "kostl", "description": "Cost center", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "koupd": {"name": "koupd", "description": "Last configuration update", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "kowrr": {"name": "kowrr", "description": "Statistical value", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "kpein": {"name": "kpein", "description": "Pricing unit", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "ktgrm": {"name": "ktgrm", "description": "Tax classification", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "kwmeng": {"name": "kwmeng", "description": "Order quantity", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "kzbws": {"name": "kzbws", "description": "Value not deductible", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "kzfme": {"name": "kzfme", "description": "Indicator for FM assignment", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "kztlf": {"name": "kztlf", "description": "Third-party order processing", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "kzvbr": {"name": "kzvbr", "description": "Relevant for rebate processing", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "kzwi1": {"name": "kzwi1", "description": "Subtotal 1", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "kzwi2": {"name": "kzwi2", "description": "Subtotal 2", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "kzwi3": {"name": "kzwi3", "description": "Subtotal 3", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "kzwi4": {"name": "kzwi4", "description": "Subtotal 4", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "kzwi5": {"name": "kzwi5", "description": "Subtotal 5", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "kzwi6": {"name": "kzwi6", "description": "Subtotal 6", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "lfmng": {"name": "lfmng", "description": "Quantity already delivered", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "lfrel": {"name": "lfrel", "description": "Schedule line relevant for delivery", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "lgort": {"name": "lgort", "description": "Storage location", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "logsys_ext": {"name": "logsys_ext", "description": "External logical system", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "lprio": {"name": "lprio", "description": "Delivery priority", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "lsmeng": {"name": "lsmeng", "description": "Cumulative open quantity", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "lstanr": {"name": "lstanr", "description": "Standard BOM item number", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "magrv": {"name": "magrv", "description": "Material group for packaging", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "mandt": {"name": "mandt", "description": "Client", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "manual_tc_reason": {"name": "manual_tc_reason", "description": "Manual tax code reason", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "matkl": {"name": "matkl", "description": "Material group", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "matnr": {"name": "matnr", "description": "Material number", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "matwa": {"name": "matwa", "description": "Material entered", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "meins": {"name": "meins", "description": "Base unit of measure", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "mfrgr": {"name": "mfrgr", "description": "Material freight group", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "mill_se_gposn": {"name": "mill_se_gposn", "description": "General position number (Mill)", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "mod_allow": {"name": "mod_allow", "description": "Modification allowed", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "mprok": {"name": "mprok", "description": "Product allocation indicator", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "msr_approv_block": {"name": "msr_approv_block", "description": "MSR approval block indicator", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "msr_refund_code": {"name": "msr_refund_code", "description": "MSR refund code", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "msr_ret_reason": {"name": "msr_ret_reason", "description": "MSR return reason", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "mtvfp": {"name": "mtvfp", "description": "Availability check rule", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "mvgr1": {"name": "mvgr1", "description": "Material group 1", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "mvgr2": {"name": "mvgr2", "description": "Material group 2", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "mvgr3": {"name": "mvgr3", "description": "Material group 3", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "mvgr4": {"name": "mvgr4", "description": "Material group 4", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "mvgr5": {"name": "mvgr5", "description": "Material group 5", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "mwsbp": {"name": "mwsbp", "description": "Tax amount in pricing currency", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "nachl": {"name": "nachl", "description": "Subsequent function indicator", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "netpr": {"name": "netpr", "description": "Net price", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "netwr": {"name": "netwr", "description": "Net value", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "nrab_knumh": {"name": "nrab_knumh", "description": "Condition record number (manual discount)", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "ntgew": {"name": "ntgew", "description": "Net weight", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "objnr": {"name": "objnr", "description": "Object number", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "oia_baselo": {"name": "oia_baselo", "description": "OIL base location", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "oibasprod": {"name": "oibasprod", "description": "OIL base product", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "oibwtar_ex": {"name": "oibwtar_ex", "description": "External valuation type for OIL", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "oibwtar_im": {"name": "oibwtar_im", "description": "Internal valuation type for OIL", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "oibypass": {"name": "oibypass", "description": "Bypass indicator for OIL", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "oic_adestn": {"name": "oic_adestn", "description": "Destination address (OIL)", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "oic_aorgin": {"name": "oic_aorgin", "description": "Origin address (OIL)", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "oic_dcityc": {"name": "oic_dcityc", "description": "Destination city code", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "oic_dcounc": {"name": "oic_dcounc", "description": "Destination country code", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "oic_dland1": {"name": "oic_dland1", "description": "Destination country", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "oic_drcreg": {"name": "oic_drcreg", "description": "Destination region code", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "oic_drctry": {"name": "oic_drctry", "description": "Destination region country", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "oic_dregio": {"name": "oic_dregio", "description": "Destination region", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "oic_kmpos": {"name": "oic_kmpos", "description": "OIL line item number", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "oic_lifnr": {"name": "oic_lifnr", "description": "Vendor number (OIL)", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "oic_mot": {"name": "oic_mot", "description": "Mode of transport", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "oic_ocityc": {"name": "oic_ocityc", "description": "Origin city code", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "oic_ocounc": {"name": "oic_ocounc", "description": "Origin country code", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "oic_oland1": {"name": "oic_oland1", "description": "Origin country", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "oic_oregio": {"name": "oic_oregio", "description": "Origin region", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "oic_pbatch": {"name": "oic_pbatch", "description": "Planned batch", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "oic_pdestn": {"name": "oic_pdestn", "description": "Planned destination", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "oic_porgin": {"name": "oic_porgin", "description": "Planned origin", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "oic_ptrip": {"name": "oic_ptrip", "description": "Planned trip number", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "oic_truckn": {"name": "oic_truckn", "description": "Truck number", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "oicertf1": {"name": "oicertf1", "description": "Certificate number", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "oicertf1_ex": {"name": "oicertf1_ex", "description": "External certificate ID", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "oicontnr": {"name": "oicontnr", "description": "Container number", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "oid_extbol": {"name": "oid_extbol", "description": "External bill of lading number", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "oid_miscdl": {"name": "oid_miscdl", "description": "Miscellaneous delivery ID", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "oid_ship": {"name": "oid_ship", "description": "Shipment number", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "oidmsg_dat": {"name": "oidmsg_dat", "description": "Message date", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "oidmsg_prd": {"name": "oidmsg_prd", "description": "Message product", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "oidmsg_qty": {"name": "oidmsg_qty", "description": "Message quantity", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "oidmsg_shp": {"name": "oidmsg_shp", "description": "Message shipment", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "oidmsg_trm": {"name": "oidmsg_trm", "description": "Message transport mode", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "oidmsg_uom": {"name": "oidmsg_uom", "description": "Unit of measure (message)", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "oidrc": {"name": "oidrc", "description": "Message reconciliation code", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "oiedbal": {"name": "oiedbal", "description": "Opening inventory balance", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "oiedbal_ex": {"name": "oiedbal_ex", "description": "External opening balance", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "oiedbal_im": {"name": "oiedbal_im", "description": "Internal opening balance", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "oiedbalm": {"name": "oiedbalm", "description": "Opening measured balance", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "oiedbalm_ex": {"name": "oiedbalm_ex", "description": "External opening measured balance", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "oiedbalm_im": {"name": "oiedbalm_im", "description": "Internal opening measured balance", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "oiedok": {"name": "oiedok", "description": "Document number for opening inventory", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "oiexgnum": {"name": "oiexgnum", "description": "Exchange agreement number", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "oiexgtyp": {"name": "oiexgtyp", "description": "Exchange type", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "oifeech": {"name": "oifeech", "description": "Fee charge code", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "oifeedt": {"name": "oifeedt", "description": "Fee effective date", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "oifeetot": {"name": "oifeetot", "description": "Total fee amount", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "oignrule": {"name": "oignrule", "description": "Gain/loss rule", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "oih_folqty": {"name": "oih_folqty", "description": "Follow-on quantity", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "oih_folqty_ex": {"name": "oih_folqty_ex", "description": "External follow-on quantity", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "oih_lcfol": {"name": "oih_lcfol", "description": "Local follow-on quantity", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "oih_lcfol_ex": {"name": "oih_lcfol_ex", "description": "External local follow-on quantity", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "oih_licin": {"name": "oih_licin", "description": "License in", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "oih_licin_ex": {"name": "oih_licin_ex", "description": "External license in", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "oih_lictp": {"name": "oih_lictp", "description": "License type", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "oih_lictp_ex": {"name": "oih_lictp_ex", "description": "External license type", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "oihantyp": {"name": "oihantyp", "description": "Handling type", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "oihantyp_ex": {"name": "oihantyp_ex", "description": "External handling type", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "oihantyp_im": {"name": "oihantyp_im", "description": "Internal handling type", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "oihcotdisch": {"name": "oihcotdisch", "description": "Discharge indicator", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "oihnotlgort": {"name": "oihnotlgort", "description": "Not relevant storage location", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "oihnotwerks": {"name": "oihnotwerks", "description": "Not relevant plant", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "oihtaxrcp_ex": {"name": "oihtaxrcp_ex", "description": "External tax recipient", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "oiinex": {"name": "oiinex", "description": "Include/exclude indicator", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "oiinex_ex": {"name": "oiinex_ex", "description": "External include/exclude indicator", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "oimetind": {"name": "oimetind", "description": "Measurement indicator", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "oinetcyc": {"name": "oinetcyc", "description": "Netting cycle", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "oioilcon": {"name": "oioilcon", "description": "Oil content", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "oipipeval": {"name": "oipipeval", "description": "Pipeline value", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "oiplantd": {"name": "oiplantd", "description": "Destination plant", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "oipricie": {"name": "oipricie", "description": "Price inclusive indicator", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "oipricie_ex": {"name": "oipricie_ex", "description": "External price inclusive indicator", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "oipricie_im": {"name": "oipricie_im", "description": "Internal price inclusive indicator", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "oipsdrc": {"name": "oipsdrc", "description": "Source of pricing", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "oisbrel": {"name": "oisbrel", "description": "Subsequent billing release", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "oislf": {"name": "oislf", "description": "Subsequent document reference", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "oitaxfrom": {"name": "oitaxfrom", "description": "Tax origin", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "oitaxfrom_ex": {"name": "oitaxfrom_ex", "description": "External tax origin", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "oitaxfrom_im": {"name": "oitaxfrom_im", "description": "Internal tax origin", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "oitaxgrp": {"name": "oitaxgrp", "description": "Tax group", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "oitaxgrp_ex": {"name": "oitaxgrp_ex", "description": "External tax group", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "oitaxgrp_im": {"name": "oitaxgrp_im", "description": "Internal tax group", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "oitaxto": {"name": "oitaxto", "description": "Tax destination", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "oitaxto_ex": {"name": "oitaxto_ex", "description": "External tax destination", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "oitaxto_im": {"name": "oitaxto_im", "description": "Internal tax destination", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "oiwap": {"name": "oiwap", "description": "Weighted average price", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "paobjnr": {"name": "paobjnr", "description": "Profitability segment number", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "pargb": {"name": "pargb", "description": "Partner business area", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "pay_method": {"name": "pay_method", "description": "Payment method", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "pctrf": {"name": "pctrf", "description": "Profit center transfer indicator", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "plavo": {"name": "plavo", "description": "Planned order indicator", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "pmatn": {"name": "pmatn", "description": "Pricing reference material", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "posar": {"name": "posar", "description": "Order type", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "posex": {"name": "posex", "description": "External item number", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "posnr": {"name": "posnr", "description": "Sales document item number", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "posnv": {"name": "posnv", "description": "Sub-item number", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "prbme": {"name": "prbme", "description": "Pricing unit of measure", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "prctr": {"name": "prctr", "description": "Profit center", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "prefe": {"name": "prefe", "description": "Preference indicator", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "prodh": {"name": "prodh", "description": "Product hierarchy", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "prosa": {"name": "prosa", "description": "Order probability", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "provg": {"name": "provg", "description": "Promotion ID", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "prs_objnr": {"name": "prs_objnr", "description": "Object number for condition pricing", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "prs_sd_spsnr": {"name": "prs_sd_spsnr", "description": "Sales-specific price source", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "prs_work_period": {"name": "prs_work_period", "description": "Pricing work period", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "prsok": {"name": "prsok", "description": "Pricing ok flag", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "ps_psp_pnr": {"name": "ps_psp_pnr", "description": "WBS element", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "pstyv": {"name": "pstyv", "description": "Item category", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "rep_freq": {"name": "rep_freq", "description": "Replenishment frequency", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "revacc_refid": {"name": "revacc_refid", "description": "Reference ID for revenue recognition", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "revacc_reftype": {"name": "revacc_reftype", "description": "Reference type for revenue recognition", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "rkfkf": {"name": "rkfkf", "description": "Billing relevance", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "route": {"name": "route", "description": "Route", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "serail": {"name": "serail", "description": "Serial number profile", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "sernr": {"name": "sernr", "description": "Serial number", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "sgt_rcat": {"name": "sgt_rcat", "description": "Segmentation requirement category", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "shkzg": {"name": "shkzg", "description": "Debit/credit indicator", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "skopf": {"name": "skopf", "description": "Pricing copy indicator", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "sktof": {"name": "sktof", "description": "Cash discount indicator", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "sloctype": {"name": "sloctype", "description": "Storage location type", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "smeng": {"name": "smeng", "description": "Confirmed quantity", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "sobkz": {"name": "sobkz", "description": "Special stock indicator", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "spart": {"name": "spart", "description": "Division", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "spcsto": {"name": "spcsto", "description": "Special stock", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "sposn": {"name": "sposn", "description": "BOM sub-item number", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "stadat": {"name": "stadat", "description": "Start date", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "stafo": {"name": "stafo", "description": "Follow-on document status", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "stcur": {"name": "stcur", "description": "Statistics currency", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "stdat": {"name": "stdat", "description": "Statistics date", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "stkey": {"name": "stkey", "description": "Key for product hierarchy statistics", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "stlkn": {"name": "stlkn", "description": "BOM item node number", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "stlnr": {"name": "stlnr", "description": "BOM number", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "stlty": {"name": "stlty", "description": "BOM category", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "stman": {"name": "stman", "description": "Manual BOM entry indicator", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "stockloc": {"name": "stockloc", "description": "Stock location", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "stpos": {"name": "stpos", "description": "BOM item number", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "stpoz": {"name": "stpoz", "description": "BOM sub-item number", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "sugrd": {"name": "sugrd", "description": "Reason for goods movement", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "sumbd": {"name": "sumbd", "description": "Total confirmed quantity", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "tas": {"name": "tas", "description": "Transportation scheduling agreement", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "tax_subject_st": {"name": "tax_subject_st", "description": "Tax subject status", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "taxm1": {"name": "taxm1", "description": "Tax indicator 1", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "taxm2": {"name": "taxm2", "description": "Tax indicator 2", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "taxm3": {"name": "taxm3", "description": "Tax indicator 3", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "taxm4": {"name": "taxm4", "description": "Tax indicator 4", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "taxm5": {"name": "taxm5", "description": "Tax indicator 5", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "taxm6": {"name": "taxm6", "description": "Tax indicator 6", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "taxm7": {"name": "taxm7", "description": "Tax indicator 7", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "taxm8": {"name": "taxm8", "description": "Tax indicator 8", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "taxm9": {"name": "taxm9", "description": "Tax indicator 9", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "tc_aut_det": {"name": "tc_aut_det", "description": "Automatic tax code determination", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "techs": {"name": "techs", "description": "Technical specification", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "trmrisk_relevant": {"name": "trmrisk_relevant", "description": "Treasury risk relevance indicator", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "uebtk": {"name": "uebtk", "description": "Unlimited overdelivery allowed", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "uebto": {"name": "uebto", "description": "Overdelivery tolerance", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "uepos": {"name": "uepos", "description": "Higher-level item", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "uepvw": {"name": "uepvw", "description": "Item usage", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "ukonm": {"name": "ukonm", "description": "Rounding profile", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "umref": {"name": "umref", "description": "Reference document number for transfer", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "umvkn": {"name": "umvkn", "description": "Supplying sales organization", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "umvkz": {"name": "umvkz", "description": "Supplying distribution channel", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "umzin": {"name": "umzin", "description": "Conversion denominator", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "umziz": {"name": "umziz", "description": "Conversion numerator", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "untto": {"name": "untto", "description": "Delivery quantity", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "upflu": {"name": "upflu", "description": "Indicator updated from forecast", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "upmat": {"name": "upmat", "description": "Upper-level material number", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "vbeaf": {"name": "vbeaf", "description": "Confirmed schedule lines quantity", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "vbeav": {"name": "vbeav", "description": "Cumulative open quantity", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "vbeln": {"name": "vbeln", "description": "Sales document number", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "vbelv": {"name": "vbelv", "description": "Preceding document", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "vgbel": {"name": "vgbel", "description": "Reference document number", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "vgpos": {"name": "vgpos", "description": "Reference item number", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "vgref": {"name": "vgref", "description": "Reference usage", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "vgtyp": {"name": "vgtyp", "description": "Document category of reference", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "vkaus": {"name": "vkaus", "description": "Sales document reason", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "vkgru": {"name": "vkgru", "description": "Responsible sales group", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "voleh": {"name": "voleh", "description": "Volume unit", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "volum": {"name": "volum", "description": "Volume", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "voref": {"name": "voref", "description": "Order reference", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "vpmat": {"name": "vpmat", "description": "Pricing material number", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "vpwrk": {"name": "vpwrk", "description": "Supplying plant", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "vpzuo": {"name": "vpzuo", "description": "Assignment number", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "vrkme": {"name": "vrkme", "description": "Sales unit", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "vstel": {"name": "vstel", "description": "Shipping point", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "waerk": {"name": "waerk", "description": "Document currency", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "wavwr": {"name": "wavwr", "description": "Total value of goods", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "werks": {"name": "werks", "description": "Plant", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "wgru1": {"name": "wgru1", "description": "Pricing group 1", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "wgru2": {"name": "wgru2", "description": "Pricing group 2", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "wktnr": {"name": "wktnr", "description": "Value contract number", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "wktps": {"name": "wktps", "description": "Value contract item", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "wrf_charstc1": {"name": "wrf_charstc1", "description": "Retail characteristic 1", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "wrf_charstc2": {"name": "wrf_charstc2", "description": "Retail characteristic 2", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "wrf_charstc3": {"name": "wrf_charstc3", "description": "Retail characteristic 3", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "wtysc_clmitem": {"name": "wtysc_clmitem", "description": "Warranty claim item", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "xchar": {"name": "xchar", "description": "Batch management requirement indicator", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "xchpf": {"name": "xchpf", "description": "Batch management indicator", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "z_prs_bill_flag": {"name": "z_prs_bill_flag", "description": "Billing flag (custom)", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "z_prs_chargelevl": {"name": "z_prs_chargelevl", "description": "Charge level (custom)", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "z_prs_country": {"name": "z_prs_country", "description": "Country indicator (custom)", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "z_prs_offshore": {"name": "z_prs_offshore", "description": "Offshore flag (custom)", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "zieme": {"name": "zieme", "description": "Custom unit of measure", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "zmeng": {"name": "zmeng", "description": "Cumulative order quantity", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "zschl_k": {"name": "zschl_k", "description": "Condition type key (custom)", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "zwert": {"name": "zwert", "description": "Value for custom field", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "zzdea_license": {"name": "zzdea_license", "description": "DEA license number", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "zzdea_schedule": {"name": "zzdea_schedule", "description": "DEA schedule", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": "sap://models/staging/stg_sap.yml", "build_path": null, "unrendered_config": {"materialized": "view", "schema": "sap_{{ var('directed_schema','dev') }}", "enabled": true}, "created_at": 1756850331.4469807, "relation_name": "\"postgres\".\"public_sap_dev\".\"stg_sap__vbap\"", "raw_code": "{{ config(enabled=var('sap_using_vbap', True)) }}\n\n{% set source_columns = adapter.get_columns_in_relation(ref('stg_sap__vbap_tmp')) %}\n\nwith base as (\n    select {{ remove_slashes_from_col_names(source_columns) }}\n    from {{ ref('stg_sap__vbap_tmp') }}\n),\n\nfields as (\n    select\n        {{\n            fivetran_utils.fill_staging_columns(\n                source_columns=source_columns,\n                staging_columns=get_vbap_columns()\n            )\n        }}\n    from base\n),\n\nfinal as (\n    select\n        _fivetran_deleted,\n        _fivetran_synced,\n        _fivetran_sap_archived,\n        cast(mandt as {{ dbt.type_string() }}) as mandt,\n        cast(posnr as {{ dbt.type_string() }}) as posnr,\n        cast(vbeln as {{ dbt.type_string() }}) as vbeln,\n        smeng,\n        stlty,\n        vgref,\n        bwtar,\n        knuma_ag,\n        spart,\n        bwtex,\n        oih_licin,\n        oic_dcounc,\n        knuma_pi,\n        oic_dcityc,\n        tas,\n        oignrule,\n        upmat,\n        kalsm_k,\n        oicertf1_ex,\n        aplzl_olc,\n        umvkn,\n        oidmsg_qty,\n        kever,\n        mtvfp,\n        oihantyp_ex,\n        abgru,\n        xchar,\n        kostl,\n        _accgo_tx_p,\n        prs_work_period,\n        vkgru,\n        wktnr,\n        absfz,\n        oih_lcfol,\n        vbeaf,\n        ernam,\n        oitaxfrom_im,\n        stafo,\n        oic_lifnr,\n        j_1btxsdc,\n        taxm1,\n        lprio,\n        oiedbalm_ex,\n        umziz,\n        kzvbr,\n        oic_aorgin,\n        _slce_inst_guid,\n        charg,\n        stlkn,\n        fsh_collection,\n        cmeth,\n        aplzl_oaa,\n        oidmsg_dat,\n        umvkz,\n        oitaxgrp_ex,\n        fsh_candate,\n        oipricie_im,\n        _slce_sol_posnr,\n        tax_subject_st,\n        gewei,\n        revacc_refid,\n        oic_porgin,\n        sobkz,\n        vpwrk,\n        waerk,\n        mod_allow,\n        umzin,\n        magrv,\n        oic_pbatch,\n        bonus,\n        sloctype,\n        oiedbal_im,\n        fsh_vas_prnt_id,\n        ablfz,\n        taxm3,\n        pstyv,\n        _xlso_course_eda,\n        fiscal_incentive,\n        oic_mot,\n        oic_oregio,\n        fistl,\n        vpmat,\n        awahr,\n        kpein,\n        voleh,\n        werks,\n        oicertf1,\n        knumh,\n        taxm2,\n        fsh_psm_pfm_split,\n        tc_aut_det,\n        serail,\n        kosch,\n        oid_miscdl,\n        oih_lictp_ex,\n        paobjnr,\n        ps_psp_pnr,\n        rkfkf,\n        sktof,\n        fkrel,\n        oihantyp,\n        _slce_sol_matnr,\n        oiplantd,\n        lstanr,\n        _dataaging,\n        cpd_updat,\n        oic_drcreg,\n        bedae,\n        manual_tc_reason,\n        spcsto,\n        aedat,\n        z_prs_offshore,\n        kzwi1,\n        oiedok,\n        fsh_pqr_uepos,\n        handovertime,\n        xchpf,\n        oibwtar_im,\n        cast(shkzg as {{ dbt.type_string() }}) as shkzg,\n        _slce_sol_cuobj,\n        aufpl_olc,\n        ntgew,\n        vgtyp,\n        stockloc,\n        pmatn,\n        sernr,\n        taxm4,\n        kalnr,\n        oiexgnum,\n        erlre,\n        oiexgtyp,\n        oitaxto_im,\n        kzbws,\n        _accgo_is_co_rel,\n        pargb,\n        oimetind,\n        oih_folqty,\n        oic_truckn,\n        uebtk,\n        arsnum,\n        kdmat,\n        bpn,\n        mvgr1,\n        voref,\n        erzet,\n        arktx,\n        cmpnt,\n        oihnotlgort,\n        uepos,\n        stdat,\n        stcur,\n        oitaxfrom_ex,\n        fiscal_incentive_id,\n        _slce_single_conf_done,\n        klmeng,\n        zmeng,\n        oidrc,\n        pay_method,\n        _slce_sol_ext_guid,\n        kzwi2,\n        oibypass,\n        fsh_item_group,\n        aufpl_oaa,\n        cast(kwmeng as {{ dbt.type_numeric() }}) as kwmeng,\n        oih_lcfol_ex,\n        koupd,\n        fsh_grid_cond_rec,\n        techs,\n        cast(matnr as {{ dbt.type_string() }}) as matnr,\n        wgru1,\n        oitaxfrom,\n        taxm5,\n        kztlf,\n        iuid_relevant,\n        oic_kmpos,\n        z_prs_country,\n        gsber,\n        oipricie_ex,\n        fsh_crsd,\n        fsh_transaction,\n        grkor,\n        uepvw,\n        mfrgr,\n        vbelv,\n        untto,\n        plavo,\n        vpzuo,\n        mvgr3,\n        sugrd,\n        oic_ptrip,\n        oic_adestn,\n        oic_oland1,\n        mvgr2,\n        netpr,\n        oicontnr,\n        stman,\n        oiedbal_ex,\n        j_1btaxlw3,\n        _slce_single_conf_reqired,\n        oinetcyc,\n        prsok,\n        vgpos,\n        cuobj_ch,\n        oic_pdestn,\n        rep_freq,\n        lsmeng,\n        stpoz,\n        kzwi3,\n        posar,\n        budget_pd,\n        z_prs_chargelevl,\n        posnv,\n        wgru2,\n        oifeetot,\n        oic_dregio,\n        oih_licin_ex,\n        oioilcon,\n        aufnr,\n        sgt_rcat,\n        oidmsg_uom,\n        oibasprod,\n        msr_refund_code,\n        cuobj,\n        kbver,\n        sposn,\n        fsh_season_year,\n        zzdea_license,\n        taxm6,\n        mprok,\n        provg,\n        oitaxto,\n        cmkua,\n        cmtfg,\n        oid_extbol,\n        ukonm,\n        mvgr4,\n        kmein,\n        klvar,\n        prs_sd_spsnr,\n        mwsbp,\n        revacc_reftype,\n        wrf_charstc1,\n        fsh_item,\n        skopf,\n        oibwtar_ex,\n        prodh,\n        stkey,\n        j_1btaxlw4,\n        route,\n        _xlso_course_bda,\n        matkl,\n        oic_drctry,\n        kalvar,\n        lfrel,\n        kmpmg,\n        kzwi4,\n        wtysc_clmitem,\n        fmeng,\n        nrab_knumh,\n        oitaxto_ex,\n        cmpre,\n        handoverdate,\n        nachl,\n        abdat,\n        kondm,\n        oic_dland1,\n        cmpre_flt,\n        taxm7,\n        ferc_ind,\n        oifeech,\n        oih_folqty_ex,\n        prctr,\n        eannr,\n        zschl_k,\n        oislf,\n        pctrf,\n        fsh_vas_rel,\n        mvgr5,\n        fkber,\n        vbeav,\n        zwert,\n        antlf,\n        cancel_allow,\n        fsh_searef,\n        oipricie,\n        wrf_charstc2,\n        upflu,\n        oihcotdisch,\n        oidmsg_shp,\n        grant_nbr,\n        oidmsg_trm,\n        umref,\n        kzwi6,\n        knttp,\n        j_1btaxlw5,\n        stlnr,\n        vkaus,\n        erdat,\n        kzwi5,\n        fsh_theme,\n        fsh_season,\n        zieme,\n        oipsdrc,\n        uebto,\n        grpos,\n        chmvs,\n        oihantyp_im,\n        abges,\n        oihnotwerks,\n        z_prs_bill_flag,\n        abgrs,\n        taxm8,\n        objnr,\n        volum,\n        oiinex_ex,\n        j_1btaxlw1,\n        j_1bcfop,\n        kowrr,\n        fixmg,\n        _xlso_course_id,\n        fmfgus_key,\n        atpkz,\n        oifeedt,\n        meins,\n        oiinex,\n        msr_ret_reason,\n        handoverloc,\n        lfmng,\n        ktgrm,\n        oia_baselo,\n        betc,\n        wrf_charstc3,\n        oiedbalm_im,\n        oihtaxrcp_ex,\n        oic_ocounc,\n        exart,\n        fsh_vasref,\n        oiwap,\n        vgbel,\n        kannr,\n        sumbd,\n        oidmsg_prd,\n        posex,\n        oitaxgrp_im,\n        oic_ocityc,\n        oid_ship,\n        prosa,\n        berid,\n        logsys_ext,\n        oipipeval,\n        oitaxgrp,\n        vrkme,\n        ean11,\n        taxm9,\n        kzfme,\n        wktps,\n        j_1btaxlw2,\n        oiedbalm,\n        stpos,\n        anzsn,\n        oisbrel,\n        oih_lictp,\n        wavwr,\n        arspos,\n        _bev1_srfund,\n        cast(netwr as {{ dbt.type_numeric() }}) as netwr,\n        prs_objnr,\n        kbmeng,\n        prefe,\n        prbme,\n        clint,\n        zzdea_schedule,\n        oiedbal,\n        trmrisk_relevant,\n        chspl,\n        matwa,\n        faksp,\n        fonds,\n        brgew,\n        abfor,\n        stadat,\n        vstel,\n        mill_se_gposn,\n        lgort,\n        msr_approv_block,\n        cepok\n    from fields\n)\n\nselect *\nfrom final", "doc_blocks": [], "language": "sql", "refs": [{"name": "stg_sap__vbap_tmp", "package": null, "version": null}, {"name": "stg_sap__vbap_tmp", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.sap.remove_slashes_from_col_names", "macro.sap.get_vbap_columns", "macro.fivetran_utils.fill_staging_columns", "macro.dbt.type_string", "macro.dbt.type_numeric"], "nodes": ["model.sap.stg_sap__vbap_tmp"]}, "compiled_path": "target/compiled/sap/models/staging/stg_sap__vbap.sql", "compiled": true, "compiled_code": "\n\n\n\nwith base as (\n    select \n        \"mandt\" as mandt,\n        \"posnr\" as posnr,\n        \"vbeln\" as vbeln,\n        \"smeng\" as smeng,\n        \"stlty\" as stlty,\n        \"vgref\" as vgref,\n        \"bwtar\" as bwtar,\n        \"knuma_ag\" as knuma_ag,\n        \"spart\" as spart,\n        \"bwtex\" as bwtex,\n        \"oih_licin\" as oih_licin,\n        \"oic_dcounc\" as oic_dcounc,\n        \"knuma_pi\" as knuma_pi,\n        \"oic_dcityc\" as oic_dcityc,\n        \"tas\" as tas,\n        \"oignrule\" as oignrule,\n        \"upmat\" as upmat,\n        \"kalsm_k\" as kalsm_k,\n        \"oicertf1_ex\" as oicertf1_ex,\n        \"aplzl_olc\" as aplzl_olc,\n        \"umvkn\" as umvkn,\n        \"oidmsg_qty\" as oidmsg_qty,\n        \"kever\" as kever,\n        \"mtvfp\" as mtvfp,\n        \"oihantyp_ex\" as oihantyp_ex,\n        \"abgru\" as abgru,\n        \"xchar\" as xchar,\n        \"kostl\" as kostl,\n        \"_accgo_tx_p\" as _accgo_tx_p,\n        \"prs_work_period\" as prs_work_period,\n        \"vkgru\" as vkgru,\n        \"wktnr\" as wktnr,\n        \"absfz\" as absfz,\n        \"oih_lcfol\" as oih_lcfol,\n        \"vbeaf\" as vbeaf,\n        \"ernam\" as ernam,\n        \"oitaxfrom_im\" as oitaxfrom_im,\n        \"stafo\" as stafo,\n        \"oic_lifnr\" as oic_lifnr,\n        \"j_1btxsdc\" as j_1btxsdc,\n        \"taxm1\" as taxm1,\n        \"lprio\" as lprio,\n        \"oiedbalm_ex\" as oiedbalm_ex,\n        \"umziz\" as umziz,\n        \"kzvbr\" as kzvbr,\n        \"oic_aorgin\" as oic_aorgin,\n        \"_slce_inst_guid\" as _slce_inst_guid,\n        \"charg\" as charg,\n        \"stlkn\" as stlkn,\n        \"fsh_collection\" as fsh_collection,\n        \"cmeth\" as cmeth,\n        \"aplzl_oaa\" as aplzl_oaa,\n        \"oidmsg_dat\" as oidmsg_dat,\n        \"umvkz\" as umvkz,\n        \"oitaxgrp_ex\" as oitaxgrp_ex,\n        \"fsh_candate\" as fsh_candate,\n        \"oipricie_im\" as oipricie_im,\n        \"_slce_sol_posnr\" as _slce_sol_posnr,\n        \"tax_subject_st\" as tax_subject_st,\n        \"gewei\" as gewei,\n        \"revacc_refid\" as revacc_refid,\n        \"oic_porgin\" as oic_porgin,\n        \"sobkz\" as sobkz,\n        \"vpwrk\" as vpwrk,\n        \"waerk\" as waerk,\n        \"mod_allow\" as mod_allow,\n        \"umzin\" as umzin,\n        \"magrv\" as magrv,\n        \"oic_pbatch\" as oic_pbatch,\n        \"bonus\" as bonus,\n        \"sloctype\" as sloctype,\n        \"oiedbal_im\" as oiedbal_im,\n        \"fsh_vas_prnt_id\" as fsh_vas_prnt_id,\n        \"ablfz\" as ablfz,\n        \"taxm3\" as taxm3,\n        \"pstyv\" as pstyv,\n        \"_xlso_course_eda\" as _xlso_course_eda,\n        \"fiscal_incentive\" as fiscal_incentive,\n        \"oic_mot\" as oic_mot,\n        \"oic_oregio\" as oic_oregio,\n        \"fistl\" as fistl,\n        \"vpmat\" as vpmat,\n        \"awahr\" as awahr,\n        \"kpein\" as kpein,\n        \"voleh\" as voleh,\n        \"werks\" as werks,\n        \"oicertf1\" as oicertf1,\n        \"knumh\" as knumh,\n        \"taxm2\" as taxm2,\n        \"fsh_psm_pfm_split\" as fsh_psm_pfm_split,\n        \"tc_aut_det\" as tc_aut_det,\n        \"serail\" as serail,\n        \"kosch\" as kosch,\n        \"oid_miscdl\" as oid_miscdl,\n        \"oih_lictp_ex\" as oih_lictp_ex,\n        \"paobjnr\" as paobjnr,\n        \"ps_psp_pnr\" as ps_psp_pnr,\n        \"rkfkf\" as rkfkf,\n        \"sktof\" as sktof,\n        \"fkrel\" as fkrel,\n        \"oihantyp\" as oihantyp,\n        \"_slce_sol_matnr\" as _slce_sol_matnr,\n        \"oiplantd\" as oiplantd,\n        \"lstanr\" as lstanr,\n        \"_dataaging\" as _dataaging,\n        \"cpd_updat\" as cpd_updat,\n        \"oic_drcreg\" as oic_drcreg,\n        \"bedae\" as bedae,\n        \"manual_tc_reason\" as manual_tc_reason,\n        \"spcsto\" as spcsto,\n        \"aedat\" as aedat,\n        \"z_prs_offshore\" as z_prs_offshore,\n        \"kzwi1\" as kzwi1,\n        \"oiedok\" as oiedok,\n        \"fsh_pqr_uepos\" as fsh_pqr_uepos,\n        \"handovertime\" as handovertime,\n        \"xchpf\" as xchpf,\n        \"oibwtar_im\" as oibwtar_im,\n        \"shkzg\" as shkzg,\n        \"_slce_sol_cuobj\" as _slce_sol_cuobj,\n        \"aufpl_olc\" as aufpl_olc,\n        \"ntgew\" as ntgew,\n        \"vgtyp\" as vgtyp,\n        \"stockloc\" as stockloc,\n        \"pmatn\" as pmatn,\n        \"sernr\" as sernr,\n        \"taxm4\" as taxm4,\n        \"kalnr\" as kalnr,\n        \"oiexgnum\" as oiexgnum,\n        \"erlre\" as erlre,\n        \"oiexgtyp\" as oiexgtyp,\n        \"oitaxto_im\" as oitaxto_im,\n        \"kzbws\" as kzbws,\n        \"_accgo_is_co_rel\" as _accgo_is_co_rel,\n        \"pargb\" as pargb,\n        \"oimetind\" as oimetind,\n        \"oih_folqty\" as oih_folqty,\n        \"oic_truckn\" as oic_truckn,\n        \"uebtk\" as uebtk,\n        \"arsnum\" as arsnum,\n        \"kdmat\" as kdmat,\n        \"bpn\" as bpn,\n        \"mvgr1\" as mvgr1,\n        \"voref\" as voref,\n        \"erzet\" as erzet,\n        \"arktx\" as arktx,\n        \"cmpnt\" as cmpnt,\n        \"oihnotlgort\" as oihnotlgort,\n        \"uepos\" as uepos,\n        \"stdat\" as stdat,\n        \"stcur\" as stcur,\n        \"oitaxfrom_ex\" as oitaxfrom_ex,\n        \"fiscal_incentive_id\" as fiscal_incentive_id,\n        \"_slce_single_conf_done\" as _slce_single_conf_done,\n        \"klmeng\" as klmeng,\n        \"zmeng\" as zmeng,\n        \"oidrc\" as oidrc,\n        \"pay_method\" as pay_method,\n        \"_slce_sol_ext_guid\" as _slce_sol_ext_guid,\n        \"kzwi2\" as kzwi2,\n        \"oibypass\" as oibypass,\n        \"fsh_item_group\" as fsh_item_group,\n        \"aufpl_oaa\" as aufpl_oaa,\n        \"kwmeng\" as kwmeng,\n        \"oih_lcfol_ex\" as oih_lcfol_ex,\n        \"koupd\" as koupd,\n        \"fsh_grid_cond_rec\" as fsh_grid_cond_rec,\n        \"techs\" as techs,\n        \"matnr\" as matnr,\n        \"wgru1\" as wgru1,\n        \"oitaxfrom\" as oitaxfrom,\n        \"taxm5\" as taxm5,\n        \"kztlf\" as kztlf,\n        \"iuid_relevant\" as iuid_relevant,\n        \"oic_kmpos\" as oic_kmpos,\n        \"z_prs_country\" as z_prs_country,\n        \"gsber\" as gsber,\n        \"oipricie_ex\" as oipricie_ex,\n        \"fsh_crsd\" as fsh_crsd,\n        \"fsh_transaction\" as fsh_transaction,\n        \"grkor\" as grkor,\n        \"uepvw\" as uepvw,\n        \"mfrgr\" as mfrgr,\n        \"vbelv\" as vbelv,\n        \"untto\" as untto,\n        \"plavo\" as plavo,\n        \"vpzuo\" as vpzuo,\n        \"mvgr3\" as mvgr3,\n        \"sugrd\" as sugrd,\n        \"oic_ptrip\" as oic_ptrip,\n        \"oic_adestn\" as oic_adestn,\n        \"oic_oland1\" as oic_oland1,\n        \"mvgr2\" as mvgr2,\n        \"netpr\" as netpr,\n        \"oicontnr\" as oicontnr,\n        \"stman\" as stman,\n        \"oiedbal_ex\" as oiedbal_ex,\n        \"j_1btaxlw3\" as j_1btaxlw3,\n        \"_slce_single_conf_reqired\" as _slce_single_conf_reqired,\n        \"oinetcyc\" as oinetcyc,\n        \"prsok\" as prsok,\n        \"vgpos\" as vgpos,\n        \"cuobj_ch\" as cuobj_ch,\n        \"oic_pdestn\" as oic_pdestn,\n        \"rep_freq\" as rep_freq,\n        \"lsmeng\" as lsmeng,\n        \"stpoz\" as stpoz,\n        \"kzwi3\" as kzwi3,\n        \"posar\" as posar,\n        \"budget_pd\" as budget_pd,\n        \"z_prs_chargelevl\" as z_prs_chargelevl,\n        \"posnv\" as posnv,\n        \"wgru2\" as wgru2,\n        \"oifeetot\" as oifeetot,\n        \"oic_dregio\" as oic_dregio,\n        \"oih_licin_ex\" as oih_licin_ex,\n        \"oioilcon\" as oioilcon,\n        \"aufnr\" as aufnr,\n        \"sgt_rcat\" as sgt_rcat,\n        \"oidmsg_uom\" as oidmsg_uom,\n        \"oibasprod\" as oibasprod,\n        \"msr_refund_code\" as msr_refund_code,\n        \"cuobj\" as cuobj,\n        \"kbver\" as kbver,\n        \"sposn\" as sposn,\n        \"fsh_season_year\" as fsh_season_year,\n        \"zzdea_license\" as zzdea_license,\n        \"taxm6\" as taxm6,\n        \"mprok\" as mprok,\n        \"provg\" as provg,\n        \"oitaxto\" as oitaxto,\n        \"cmkua\" as cmkua,\n        \"cmtfg\" as cmtfg,\n        \"oid_extbol\" as oid_extbol,\n        \"ukonm\" as ukonm,\n        \"mvgr4\" as mvgr4,\n        \"kmein\" as kmein,\n        \"klvar\" as klvar,\n        \"prs_sd_spsnr\" as prs_sd_spsnr,\n        \"mwsbp\" as mwsbp,\n        \"revacc_reftype\" as revacc_reftype,\n        \"wrf_charstc1\" as wrf_charstc1,\n        \"fsh_item\" as fsh_item,\n        \"skopf\" as skopf,\n        \"oibwtar_ex\" as oibwtar_ex,\n        \"prodh\" as prodh,\n        \"stkey\" as stkey,\n        \"j_1btaxlw4\" as j_1btaxlw4,\n        \"route\" as route,\n        \"_xlso_course_bda\" as _xlso_course_bda,\n        \"matkl\" as matkl,\n        \"oic_drctry\" as oic_drctry,\n        \"kalvar\" as kalvar,\n        \"lfrel\" as lfrel,\n        \"kmpmg\" as kmpmg,\n        \"kzwi4\" as kzwi4,\n        \"wtysc_clmitem\" as wtysc_clmitem,\n        \"fmeng\" as fmeng,\n        \"nrab_knumh\" as nrab_knumh,\n        \"oitaxto_ex\" as oitaxto_ex,\n        \"cmpre\" as cmpre,\n        \"handoverdate\" as handoverdate,\n        \"nachl\" as nachl,\n        \"abdat\" as abdat,\n        \"kondm\" as kondm,\n        \"oic_dland1\" as oic_dland1,\n        \"cmpre_flt\" as cmpre_flt,\n        \"taxm7\" as taxm7,\n        \"ferc_ind\" as ferc_ind,\n        \"oifeech\" as oifeech,\n        \"oih_folqty_ex\" as oih_folqty_ex,\n        \"prctr\" as prctr,\n        \"eannr\" as eannr,\n        \"zschl_k\" as zschl_k,\n        \"oislf\" as oislf,\n        \"pctrf\" as pctrf,\n        \"fsh_vas_rel\" as fsh_vas_rel,\n        \"mvgr5\" as mvgr5,\n        \"fkber\" as fkber,\n        \"vbeav\" as vbeav,\n        \"zwert\" as zwert,\n        \"antlf\" as antlf,\n        \"cancel_allow\" as cancel_allow,\n        \"fsh_searef\" as fsh_searef,\n        \"oipricie\" as oipricie,\n        \"wrf_charstc2\" as wrf_charstc2,\n        \"upflu\" as upflu,\n        \"oihcotdisch\" as oihcotdisch,\n        \"oidmsg_shp\" as oidmsg_shp,\n        \"grant_nbr\" as grant_nbr,\n        \"oidmsg_trm\" as oidmsg_trm,\n        \"umref\" as umref,\n        \"kzwi6\" as kzwi6,\n        \"knttp\" as knttp,\n        \"j_1btaxlw5\" as j_1btaxlw5,\n        \"stlnr\" as stlnr,\n        \"vkaus\" as vkaus,\n        \"erdat\" as erdat,\n        \"kzwi5\" as kzwi5,\n        \"fsh_theme\" as fsh_theme,\n        \"fsh_season\" as fsh_season,\n        \"zieme\" as zieme,\n        \"oipsdrc\" as oipsdrc,\n        \"uebto\" as uebto,\n        \"grpos\" as grpos,\n        \"chmvs\" as chmvs,\n        \"oihantyp_im\" as oihantyp_im,\n        \"abges\" as abges,\n        \"oihnotwerks\" as oihnotwerks,\n        \"z_prs_bill_flag\" as z_prs_bill_flag,\n        \"abgrs\" as abgrs,\n        \"taxm8\" as taxm8,\n        \"objnr\" as objnr,\n        \"volum\" as volum,\n        \"oiinex_ex\" as oiinex_ex,\n        \"j_1btaxlw1\" as j_1btaxlw1,\n        \"j_1bcfop\" as j_1bcfop,\n        \"kowrr\" as kowrr,\n        \"fixmg\" as fixmg,\n        \"_xlso_course_id\" as _xlso_course_id,\n        \"fmfgus_key\" as fmfgus_key,\n        \"atpkz\" as atpkz,\n        \"oifeedt\" as oifeedt,\n        \"meins\" as meins,\n        \"oiinex\" as oiinex,\n        \"msr_ret_reason\" as msr_ret_reason,\n        \"handoverloc\" as handoverloc,\n        \"lfmng\" as lfmng,\n        \"ktgrm\" as ktgrm,\n        \"oia_baselo\" as oia_baselo,\n        \"betc\" as betc,\n        \"wrf_charstc3\" as wrf_charstc3,\n        \"oiedbalm_im\" as oiedbalm_im,\n        \"oihtaxrcp_ex\" as oihtaxrcp_ex,\n        \"oic_ocounc\" as oic_ocounc,\n        \"exart\" as exart,\n        \"fsh_vasref\" as fsh_vasref,\n        \"oiwap\" as oiwap,\n        \"vgbel\" as vgbel,\n        \"kannr\" as kannr,\n        \"sumbd\" as sumbd,\n        \"oidmsg_prd\" as oidmsg_prd,\n        \"posex\" as posex,\n        \"oitaxgrp_im\" as oitaxgrp_im,\n        \"oic_ocityc\" as oic_ocityc,\n        \"oid_ship\" as oid_ship,\n        \"prosa\" as prosa,\n        \"berid\" as berid,\n        \"logsys_ext\" as logsys_ext,\n        \"oipipeval\" as oipipeval,\n        \"oitaxgrp\" as oitaxgrp,\n        \"vrkme\" as vrkme,\n        \"ean11\" as ean11,\n        \"taxm9\" as taxm9,\n        \"kzfme\" as kzfme,\n        \"wktps\" as wktps,\n        \"j_1btaxlw2\" as j_1btaxlw2,\n        \"oiedbalm\" as oiedbalm,\n        \"stpos\" as stpos,\n        \"anzsn\" as anzsn,\n        \"oisbrel\" as oisbrel,\n        \"oih_lictp\" as oih_lictp,\n        \"wavwr\" as wavwr,\n        \"arspos\" as arspos,\n        \"_bev1_srfund\" as _bev1_srfund,\n        \"netwr\" as netwr,\n        \"prs_objnr\" as prs_objnr,\n        \"kbmeng\" as kbmeng,\n        \"prefe\" as prefe,\n        \"prbme\" as prbme,\n        \"clint\" as clint,\n        \"zzdea_schedule\" as zzdea_schedule,\n        \"oiedbal\" as oiedbal,\n        \"trmrisk_relevant\" as trmrisk_relevant,\n        \"chspl\" as chspl,\n        \"matwa\" as matwa,\n        \"faksp\" as faksp,\n        \"fonds\" as fonds,\n        \"brgew\" as brgew,\n        \"abfor\" as abfor,\n        \"stadat\" as stadat,\n        \"vstel\" as vstel,\n        \"mill_se_gposn\" as mill_se_gposn,\n        \"lgort\" as lgort,\n        \"msr_approv_block\" as msr_approv_block,\n        \"cepok\" as cepok,\n        \"_fivetran_deleted\" as _fivetran_deleted,\n        \"_fivetran_synced\" as _fivetran_synced,\n        \"_fivetran_sap_archived\" as _fivetran_sap_archived\n    from \"postgres\".\"public_sap_dev\".\"stg_sap__vbap_tmp\"\n),\n\nfields as (\n    select\n        \n    \n    \n    _accgo_is_co_rel\n    \n as \n    \n    _accgo_is_co_rel\n    \n, \n    \n    \n    _accgo_tx_p\n    \n as \n    \n    _accgo_tx_p\n    \n, \n    \n    \n    _bev1_srfund\n    \n as \n    \n    _bev1_srfund\n    \n, \n    \n    \n    _dataaging\n    \n as \n    \n    _dataaging\n    \n, \n    \n    \n    _fivetran_deleted\n    \n as \n    \n    _fivetran_deleted\n    \n, \n    \n    \n    _fivetran_sap_archived\n    \n as \n    \n    _fivetran_sap_archived\n    \n, \n    \n    \n    _fivetran_synced\n    \n as \n    \n    _fivetran_synced\n    \n, \n    \n    \n    _slce_inst_guid\n    \n as \n    \n    _slce_inst_guid\n    \n, \n    \n    \n    _slce_single_conf_done\n    \n as \n    \n    _slce_single_conf_done\n    \n, \n    \n    \n    _slce_single_conf_reqired\n    \n as \n    \n    _slce_single_conf_reqired\n    \n, \n    \n    \n    _slce_sol_cuobj\n    \n as \n    \n    _slce_sol_cuobj\n    \n, \n    \n    \n    _slce_sol_ext_guid\n    \n as \n    \n    _slce_sol_ext_guid\n    \n, \n    \n    \n    _slce_sol_matnr\n    \n as \n    \n    _slce_sol_matnr\n    \n, \n    \n    \n    _slce_sol_posnr\n    \n as \n    \n    _slce_sol_posnr\n    \n, \n    \n    \n    _xlso_course_bda\n    \n as \n    \n    _xlso_course_bda\n    \n, \n    \n    \n    _xlso_course_eda\n    \n as \n    \n    _xlso_course_eda\n    \n, \n    \n    \n    _xlso_course_id\n    \n as \n    \n    _xlso_course_id\n    \n, \n    \n    \n    abdat\n    \n as \n    \n    abdat\n    \n, \n    \n    \n    abfor\n    \n as \n    \n    abfor\n    \n, \n    \n    \n    abges\n    \n as \n    \n    abges\n    \n, \n    \n    \n    abgrs\n    \n as \n    \n    abgrs\n    \n, \n    \n    \n    abgru\n    \n as \n    \n    abgru\n    \n, \n    \n    \n    ablfz\n    \n as \n    \n    ablfz\n    \n, \n    \n    \n    absfz\n    \n as \n    \n    absfz\n    \n, \n    \n    \n    aedat\n    \n as \n    \n    aedat\n    \n, \n    \n    \n    antlf\n    \n as \n    \n    antlf\n    \n, \n    \n    \n    anzsn\n    \n as \n    \n    anzsn\n    \n, \n    \n    \n    aplzl_oaa\n    \n as \n    \n    aplzl_oaa\n    \n, \n    \n    \n    aplzl_olc\n    \n as \n    \n    aplzl_olc\n    \n, \n    \n    \n    arktx\n    \n as \n    \n    arktx\n    \n, \n    \n    \n    arsnum\n    \n as \n    \n    arsnum\n    \n, \n    \n    \n    arspos\n    \n as \n    \n    arspos\n    \n, \n    \n    \n    atpkz\n    \n as \n    \n    atpkz\n    \n, \n    \n    \n    aufnr\n    \n as \n    \n    aufnr\n    \n, \n    \n    \n    aufpl_oaa\n    \n as \n    \n    aufpl_oaa\n    \n, \n    \n    \n    aufpl_olc\n    \n as \n    \n    aufpl_olc\n    \n, \n    \n    \n    awahr\n    \n as \n    \n    awahr\n    \n, \n    \n    \n    bedae\n    \n as \n    \n    bedae\n    \n, \n    \n    \n    berid\n    \n as \n    \n    berid\n    \n, \n    \n    \n    betc\n    \n as \n    \n    betc\n    \n, \n    \n    \n    bonus\n    \n as \n    \n    bonus\n    \n, \n    \n    \n    bpn\n    \n as \n    \n    bpn\n    \n, \n    \n    \n    brgew\n    \n as \n    \n    brgew\n    \n, \n    \n    \n    budget_pd\n    \n as \n    \n    budget_pd\n    \n, \n    \n    \n    bwtar\n    \n as \n    \n    bwtar\n    \n, \n    \n    \n    bwtex\n    \n as \n    \n    bwtex\n    \n, \n    \n    \n    cancel_allow\n    \n as \n    \n    cancel_allow\n    \n, \n    \n    \n    cepok\n    \n as \n    \n    cepok\n    \n, \n    \n    \n    charg\n    \n as \n    \n    charg\n    \n, \n    \n    \n    chmvs\n    \n as \n    \n    chmvs\n    \n, \n    \n    \n    chspl\n    \n as \n    \n    chspl\n    \n, \n    \n    \n    clint\n    \n as \n    \n    clint\n    \n, \n    \n    \n    cmeth\n    \n as \n    \n    cmeth\n    \n, \n    \n    \n    cmkua\n    \n as \n    \n    cmkua\n    \n, \n    \n    \n    cmpnt\n    \n as \n    \n    cmpnt\n    \n, \n    \n    \n    cmpre_flt\n    \n as \n    \n    cmpre_flt\n    \n, \n    \n    \n    cmpre\n    \n as \n    \n    cmpre\n    \n, \n    \n    \n    cmtfg\n    \n as \n    \n    cmtfg\n    \n, \n    \n    \n    cpd_updat\n    \n as \n    \n    cpd_updat\n    \n, \n    \n    \n    cuobj_ch\n    \n as \n    \n    cuobj_ch\n    \n, \n    \n    \n    cuobj\n    \n as \n    \n    cuobj\n    \n, \n    \n    \n    ean11\n    \n as \n    \n    ean11\n    \n, \n    \n    \n    eannr\n    \n as \n    \n    eannr\n    \n, \n    \n    \n    erdat\n    \n as \n    \n    erdat\n    \n, \n    \n    \n    erlre\n    \n as \n    \n    erlre\n    \n, \n    \n    \n    ernam\n    \n as \n    \n    ernam\n    \n, \n    \n    \n    erzet\n    \n as \n    \n    erzet\n    \n, \n    \n    \n    exart\n    \n as \n    \n    exart\n    \n, \n    \n    \n    faksp\n    \n as \n    \n    faksp\n    \n, \n    \n    \n    ferc_ind\n    \n as \n    \n    ferc_ind\n    \n, \n    \n    \n    fiscal_incentive_id\n    \n as \n    \n    fiscal_incentive_id\n    \n, \n    \n    \n    fiscal_incentive\n    \n as \n    \n    fiscal_incentive\n    \n, \n    \n    \n    fistl\n    \n as \n    \n    fistl\n    \n, \n    \n    \n    fixmg\n    \n as \n    \n    fixmg\n    \n, \n    \n    \n    fkber\n    \n as \n    \n    fkber\n    \n, \n    \n    \n    fkrel\n    \n as \n    \n    fkrel\n    \n, \n    \n    \n    fmeng\n    \n as \n    \n    fmeng\n    \n, \n    \n    \n    fmfgus_key\n    \n as \n    \n    fmfgus_key\n    \n, \n    \n    \n    fonds\n    \n as \n    \n    fonds\n    \n, \n    \n    \n    fsh_candate\n    \n as \n    \n    fsh_candate\n    \n, \n    \n    \n    fsh_collection\n    \n as \n    \n    fsh_collection\n    \n, \n    \n    \n    fsh_crsd\n    \n as \n    \n    fsh_crsd\n    \n, \n    \n    \n    fsh_grid_cond_rec\n    \n as \n    \n    fsh_grid_cond_rec\n    \n, \n    \n    \n    fsh_item_group\n    \n as \n    \n    fsh_item_group\n    \n, \n    \n    \n    fsh_item\n    \n as \n    \n    fsh_item\n    \n, \n    \n    \n    fsh_pqr_uepos\n    \n as \n    \n    fsh_pqr_uepos\n    \n, \n    \n    \n    fsh_psm_pfm_split\n    \n as \n    \n    fsh_psm_pfm_split\n    \n, \n    \n    \n    fsh_searef\n    \n as \n    \n    fsh_searef\n    \n, \n    \n    \n    fsh_season_year\n    \n as \n    \n    fsh_season_year\n    \n, \n    \n    \n    fsh_season\n    \n as \n    \n    fsh_season\n    \n, \n    \n    \n    fsh_theme\n    \n as \n    \n    fsh_theme\n    \n, \n    \n    \n    fsh_transaction\n    \n as \n    \n    fsh_transaction\n    \n, \n    \n    \n    fsh_vas_prnt_id\n    \n as \n    \n    fsh_vas_prnt_id\n    \n, \n    \n    \n    fsh_vas_rel\n    \n as \n    \n    fsh_vas_rel\n    \n, \n    \n    \n    fsh_vasref\n    \n as \n    \n    fsh_vasref\n    \n, \n    \n    \n    gewei\n    \n as \n    \n    gewei\n    \n, \n    \n    \n    grant_nbr\n    \n as \n    \n    grant_nbr\n    \n, \n    \n    \n    grkor\n    \n as \n    \n    grkor\n    \n, \n    \n    \n    grpos\n    \n as \n    \n    grpos\n    \n, \n    \n    \n    gsber\n    \n as \n    \n    gsber\n    \n, \n    \n    \n    handoverdate\n    \n as \n    \n    handoverdate\n    \n, \n    \n    \n    handoverloc\n    \n as \n    \n    handoverloc\n    \n, \n    \n    \n    handovertime\n    \n as \n    \n    handovertime\n    \n, \n    \n    \n    iuid_relevant\n    \n as \n    \n    iuid_relevant\n    \n, \n    \n    \n    j_1bcfop\n    \n as \n    \n    j_1bcfop\n    \n, \n    \n    \n    j_1btaxlw1\n    \n as \n    \n    j_1btaxlw1\n    \n, \n    \n    \n    j_1btaxlw2\n    \n as \n    \n    j_1btaxlw2\n    \n, \n    \n    \n    j_1btaxlw3\n    \n as \n    \n    j_1btaxlw3\n    \n, \n    \n    \n    j_1btaxlw4\n    \n as \n    \n    j_1btaxlw4\n    \n, \n    \n    \n    j_1btaxlw5\n    \n as \n    \n    j_1btaxlw5\n    \n, \n    \n    \n    j_1btxsdc\n    \n as \n    \n    j_1btxsdc\n    \n, \n    \n    \n    kalnr\n    \n as \n    \n    kalnr\n    \n, \n    \n    \n    kalsm_k\n    \n as \n    \n    kalsm_k\n    \n, \n    \n    \n    kalvar\n    \n as \n    \n    kalvar\n    \n, \n    \n    \n    kannr\n    \n as \n    \n    kannr\n    \n, \n    \n    \n    kbmeng\n    \n as \n    \n    kbmeng\n    \n, \n    \n    \n    kbver\n    \n as \n    \n    kbver\n    \n, \n    \n    \n    kdmat\n    \n as \n    \n    kdmat\n    \n, \n    \n    \n    kever\n    \n as \n    \n    kever\n    \n, \n    \n    \n    klmeng\n    \n as \n    \n    klmeng\n    \n, \n    \n    \n    klvar\n    \n as \n    \n    klvar\n    \n, \n    \n    \n    kmein\n    \n as \n    \n    kmein\n    \n, \n    \n    \n    kmpmg\n    \n as \n    \n    kmpmg\n    \n, \n    \n    \n    knttp\n    \n as \n    \n    knttp\n    \n, \n    \n    \n    knuma_ag\n    \n as \n    \n    knuma_ag\n    \n, \n    \n    \n    knuma_pi\n    \n as \n    \n    knuma_pi\n    \n, \n    \n    \n    knumh\n    \n as \n    \n    knumh\n    \n, \n    \n    \n    kondm\n    \n as \n    \n    kondm\n    \n, \n    \n    \n    kosch\n    \n as \n    \n    kosch\n    \n, \n    \n    \n    kostl\n    \n as \n    \n    kostl\n    \n, \n    \n    \n    koupd\n    \n as \n    \n    koupd\n    \n, \n    \n    \n    kowrr\n    \n as \n    \n    kowrr\n    \n, \n    \n    \n    kpein\n    \n as \n    \n    kpein\n    \n, \n    \n    \n    ktgrm\n    \n as \n    \n    ktgrm\n    \n, \n    \n    \n    kwmeng\n    \n as \n    \n    kwmeng\n    \n, \n    \n    \n    kzbws\n    \n as \n    \n    kzbws\n    \n, \n    \n    \n    kzfme\n    \n as \n    \n    kzfme\n    \n, \n    \n    \n    kztlf\n    \n as \n    \n    kztlf\n    \n, \n    \n    \n    kzvbr\n    \n as \n    \n    kzvbr\n    \n, \n    \n    \n    kzwi1\n    \n as \n    \n    kzwi1\n    \n, \n    \n    \n    kzwi2\n    \n as \n    \n    kzwi2\n    \n, \n    \n    \n    kzwi3\n    \n as \n    \n    kzwi3\n    \n, \n    \n    \n    kzwi4\n    \n as \n    \n    kzwi4\n    \n, \n    \n    \n    kzwi5\n    \n as \n    \n    kzwi5\n    \n, \n    \n    \n    kzwi6\n    \n as \n    \n    kzwi6\n    \n, \n    \n    \n    lfmng\n    \n as \n    \n    lfmng\n    \n, \n    \n    \n    lfrel\n    \n as \n    \n    lfrel\n    \n, \n    \n    \n    lgort\n    \n as \n    \n    lgort\n    \n, \n    \n    \n    logsys_ext\n    \n as \n    \n    logsys_ext\n    \n, \n    \n    \n    lprio\n    \n as \n    \n    lprio\n    \n, \n    \n    \n    lsmeng\n    \n as \n    \n    lsmeng\n    \n, \n    \n    \n    lstanr\n    \n as \n    \n    lstanr\n    \n, \n    \n    \n    magrv\n    \n as \n    \n    magrv\n    \n, \n    \n    \n    mandt\n    \n as \n    \n    mandt\n    \n, \n    \n    \n    manual_tc_reason\n    \n as \n    \n    manual_tc_reason\n    \n, \n    \n    \n    matkl\n    \n as \n    \n    matkl\n    \n, \n    \n    \n    matnr\n    \n as \n    \n    matnr\n    \n, \n    \n    \n    matwa\n    \n as \n    \n    matwa\n    \n, \n    \n    \n    meins\n    \n as \n    \n    meins\n    \n, \n    \n    \n    mfrgr\n    \n as \n    \n    mfrgr\n    \n, \n    \n    \n    mill_se_gposn\n    \n as \n    \n    mill_se_gposn\n    \n, \n    \n    \n    mod_allow\n    \n as \n    \n    mod_allow\n    \n, \n    \n    \n    mprok\n    \n as \n    \n    mprok\n    \n, \n    \n    \n    msr_approv_block\n    \n as \n    \n    msr_approv_block\n    \n, \n    \n    \n    msr_refund_code\n    \n as \n    \n    msr_refund_code\n    \n, \n    \n    \n    msr_ret_reason\n    \n as \n    \n    msr_ret_reason\n    \n, \n    \n    \n    mtvfp\n    \n as \n    \n    mtvfp\n    \n, \n    \n    \n    mvgr1\n    \n as \n    \n    mvgr1\n    \n, \n    \n    \n    mvgr2\n    \n as \n    \n    mvgr2\n    \n, \n    \n    \n    mvgr3\n    \n as \n    \n    mvgr3\n    \n, \n    \n    \n    mvgr4\n    \n as \n    \n    mvgr4\n    \n, \n    \n    \n    mvgr5\n    \n as \n    \n    mvgr5\n    \n, \n    \n    \n    mwsbp\n    \n as \n    \n    mwsbp\n    \n, \n    \n    \n    nachl\n    \n as \n    \n    nachl\n    \n, \n    \n    \n    netpr\n    \n as \n    \n    netpr\n    \n, \n    \n    \n    netwr\n    \n as \n    \n    netwr\n    \n, \n    \n    \n    nrab_knumh\n    \n as \n    \n    nrab_knumh\n    \n, \n    \n    \n    ntgew\n    \n as \n    \n    ntgew\n    \n, \n    \n    \n    objnr\n    \n as \n    \n    objnr\n    \n, \n    \n    \n    oia_baselo\n    \n as \n    \n    oia_baselo\n    \n, \n    \n    \n    oibasprod\n    \n as \n    \n    oibasprod\n    \n, \n    \n    \n    oibwtar_ex\n    \n as \n    \n    oibwtar_ex\n    \n, \n    \n    \n    oibwtar_im\n    \n as \n    \n    oibwtar_im\n    \n, \n    \n    \n    oibypass\n    \n as \n    \n    oibypass\n    \n, \n    \n    \n    oic_adestn\n    \n as \n    \n    oic_adestn\n    \n, \n    \n    \n    oic_aorgin\n    \n as \n    \n    oic_aorgin\n    \n, \n    \n    \n    oic_dcityc\n    \n as \n    \n    oic_dcityc\n    \n, \n    \n    \n    oic_dcounc\n    \n as \n    \n    oic_dcounc\n    \n, \n    \n    \n    oic_dland1\n    \n as \n    \n    oic_dland1\n    \n, \n    \n    \n    oic_drcreg\n    \n as \n    \n    oic_drcreg\n    \n, \n    \n    \n    oic_drctry\n    \n as \n    \n    oic_drctry\n    \n, \n    \n    \n    oic_dregio\n    \n as \n    \n    oic_dregio\n    \n, \n    \n    \n    oic_kmpos\n    \n as \n    \n    oic_kmpos\n    \n, \n    \n    \n    oic_lifnr\n    \n as \n    \n    oic_lifnr\n    \n, \n    \n    \n    oic_mot\n    \n as \n    \n    oic_mot\n    \n, \n    \n    \n    oic_ocityc\n    \n as \n    \n    oic_ocityc\n    \n, \n    \n    \n    oic_ocounc\n    \n as \n    \n    oic_ocounc\n    \n, \n    \n    \n    oic_oland1\n    \n as \n    \n    oic_oland1\n    \n, \n    \n    \n    oic_oregio\n    \n as \n    \n    oic_oregio\n    \n, \n    \n    \n    oic_pbatch\n    \n as \n    \n    oic_pbatch\n    \n, \n    \n    \n    oic_pdestn\n    \n as \n    \n    oic_pdestn\n    \n, \n    \n    \n    oic_porgin\n    \n as \n    \n    oic_porgin\n    \n, \n    \n    \n    oic_ptrip\n    \n as \n    \n    oic_ptrip\n    \n, \n    \n    \n    oic_truckn\n    \n as \n    \n    oic_truckn\n    \n, \n    \n    \n    oicertf1_ex\n    \n as \n    \n    oicertf1_ex\n    \n, \n    \n    \n    oicertf1\n    \n as \n    \n    oicertf1\n    \n, \n    \n    \n    oicontnr\n    \n as \n    \n    oicontnr\n    \n, \n    \n    \n    oid_extbol\n    \n as \n    \n    oid_extbol\n    \n, \n    \n    \n    oid_miscdl\n    \n as \n    \n    oid_miscdl\n    \n, \n    \n    \n    oid_ship\n    \n as \n    \n    oid_ship\n    \n, \n    \n    \n    oidmsg_dat\n    \n as \n    \n    oidmsg_dat\n    \n, \n    \n    \n    oidmsg_prd\n    \n as \n    \n    oidmsg_prd\n    \n, \n    \n    \n    oidmsg_qty\n    \n as \n    \n    oidmsg_qty\n    \n, \n    \n    \n    oidmsg_shp\n    \n as \n    \n    oidmsg_shp\n    \n, \n    \n    \n    oidmsg_trm\n    \n as \n    \n    oidmsg_trm\n    \n, \n    \n    \n    oidmsg_uom\n    \n as \n    \n    oidmsg_uom\n    \n, \n    \n    \n    oidrc\n    \n as \n    \n    oidrc\n    \n, \n    \n    \n    oiedbal_ex\n    \n as \n    \n    oiedbal_ex\n    \n, \n    \n    \n    oiedbal_im\n    \n as \n    \n    oiedbal_im\n    \n, \n    \n    \n    oiedbal\n    \n as \n    \n    oiedbal\n    \n, \n    \n    \n    oiedbalm_ex\n    \n as \n    \n    oiedbalm_ex\n    \n, \n    \n    \n    oiedbalm_im\n    \n as \n    \n    oiedbalm_im\n    \n, \n    \n    \n    oiedbalm\n    \n as \n    \n    oiedbalm\n    \n, \n    \n    \n    oiedok\n    \n as \n    \n    oiedok\n    \n, \n    \n    \n    oiexgnum\n    \n as \n    \n    oiexgnum\n    \n, \n    \n    \n    oiexgtyp\n    \n as \n    \n    oiexgtyp\n    \n, \n    \n    \n    oifeech\n    \n as \n    \n    oifeech\n    \n, \n    \n    \n    oifeedt\n    \n as \n    \n    oifeedt\n    \n, \n    \n    \n    oifeetot\n    \n as \n    \n    oifeetot\n    \n, \n    \n    \n    oignrule\n    \n as \n    \n    oignrule\n    \n, \n    \n    \n    oih_folqty_ex\n    \n as \n    \n    oih_folqty_ex\n    \n, \n    \n    \n    oih_folqty\n    \n as \n    \n    oih_folqty\n    \n, \n    \n    \n    oih_lcfol_ex\n    \n as \n    \n    oih_lcfol_ex\n    \n, \n    \n    \n    oih_lcfol\n    \n as \n    \n    oih_lcfol\n    \n, \n    \n    \n    oih_licin_ex\n    \n as \n    \n    oih_licin_ex\n    \n, \n    \n    \n    oih_licin\n    \n as \n    \n    oih_licin\n    \n, \n    \n    \n    oih_lictp_ex\n    \n as \n    \n    oih_lictp_ex\n    \n, \n    \n    \n    oih_lictp\n    \n as \n    \n    oih_lictp\n    \n, \n    \n    \n    oihantyp_ex\n    \n as \n    \n    oihantyp_ex\n    \n, \n    \n    \n    oihantyp_im\n    \n as \n    \n    oihantyp_im\n    \n, \n    \n    \n    oihantyp\n    \n as \n    \n    oihantyp\n    \n, \n    \n    \n    oihcotdisch\n    \n as \n    \n    oihcotdisch\n    \n, \n    \n    \n    oihnotlgort\n    \n as \n    \n    oihnotlgort\n    \n, \n    \n    \n    oihnotwerks\n    \n as \n    \n    oihnotwerks\n    \n, \n    \n    \n    oihtaxrcp_ex\n    \n as \n    \n    oihtaxrcp_ex\n    \n, \n    \n    \n    oiinex_ex\n    \n as \n    \n    oiinex_ex\n    \n, \n    \n    \n    oiinex\n    \n as \n    \n    oiinex\n    \n, \n    \n    \n    oimetind\n    \n as \n    \n    oimetind\n    \n, \n    \n    \n    oinetcyc\n    \n as \n    \n    oinetcyc\n    \n, \n    \n    \n    oioilcon\n    \n as \n    \n    oioilcon\n    \n, \n    \n    \n    oipipeval\n    \n as \n    \n    oipipeval\n    \n, \n    \n    \n    oiplantd\n    \n as \n    \n    oiplantd\n    \n, \n    \n    \n    oipricie_ex\n    \n as \n    \n    oipricie_ex\n    \n, \n    \n    \n    oipricie_im\n    \n as \n    \n    oipricie_im\n    \n, \n    \n    \n    oipricie\n    \n as \n    \n    oipricie\n    \n, \n    \n    \n    oipsdrc\n    \n as \n    \n    oipsdrc\n    \n, \n    \n    \n    oisbrel\n    \n as \n    \n    oisbrel\n    \n, \n    \n    \n    oislf\n    \n as \n    \n    oislf\n    \n, \n    \n    \n    oitaxfrom_ex\n    \n as \n    \n    oitaxfrom_ex\n    \n, \n    \n    \n    oitaxfrom_im\n    \n as \n    \n    oitaxfrom_im\n    \n, \n    \n    \n    oitaxfrom\n    \n as \n    \n    oitaxfrom\n    \n, \n    \n    \n    oitaxgrp_ex\n    \n as \n    \n    oitaxgrp_ex\n    \n, \n    \n    \n    oitaxgrp_im\n    \n as \n    \n    oitaxgrp_im\n    \n, \n    \n    \n    oitaxgrp\n    \n as \n    \n    oitaxgrp\n    \n, \n    \n    \n    oitaxto_ex\n    \n as \n    \n    oitaxto_ex\n    \n, \n    \n    \n    oitaxto_im\n    \n as \n    \n    oitaxto_im\n    \n, \n    \n    \n    oitaxto\n    \n as \n    \n    oitaxto\n    \n, \n    \n    \n    oiwap\n    \n as \n    \n    oiwap\n    \n, \n    \n    \n    paobjnr\n    \n as \n    \n    paobjnr\n    \n, \n    \n    \n    pargb\n    \n as \n    \n    pargb\n    \n, \n    \n    \n    pay_method\n    \n as \n    \n    pay_method\n    \n, \n    \n    \n    pctrf\n    \n as \n    \n    pctrf\n    \n, \n    \n    \n    plavo\n    \n as \n    \n    plavo\n    \n, \n    \n    \n    pmatn\n    \n as \n    \n    pmatn\n    \n, \n    \n    \n    posar\n    \n as \n    \n    posar\n    \n, \n    \n    \n    posex\n    \n as \n    \n    posex\n    \n, \n    \n    \n    posnr\n    \n as \n    \n    posnr\n    \n, \n    \n    \n    posnv\n    \n as \n    \n    posnv\n    \n, \n    \n    \n    prbme\n    \n as \n    \n    prbme\n    \n, \n    \n    \n    prctr\n    \n as \n    \n    prctr\n    \n, \n    \n    \n    prefe\n    \n as \n    \n    prefe\n    \n, \n    \n    \n    prodh\n    \n as \n    \n    prodh\n    \n, \n    \n    \n    prosa\n    \n as \n    \n    prosa\n    \n, \n    \n    \n    provg\n    \n as \n    \n    provg\n    \n, \n    \n    \n    prs_objnr\n    \n as \n    \n    prs_objnr\n    \n, \n    \n    \n    prs_sd_spsnr\n    \n as \n    \n    prs_sd_spsnr\n    \n, \n    \n    \n    prs_work_period\n    \n as \n    \n    prs_work_period\n    \n, \n    \n    \n    prsok\n    \n as \n    \n    prsok\n    \n, \n    \n    \n    ps_psp_pnr\n    \n as \n    \n    ps_psp_pnr\n    \n, \n    \n    \n    pstyv\n    \n as \n    \n    pstyv\n    \n, \n    \n    \n    rep_freq\n    \n as \n    \n    rep_freq\n    \n, \n    \n    \n    revacc_refid\n    \n as \n    \n    revacc_refid\n    \n, \n    \n    \n    revacc_reftype\n    \n as \n    \n    revacc_reftype\n    \n, \n    \n    \n    rkfkf\n    \n as \n    \n    rkfkf\n    \n, \n    \n    \n    route\n    \n as \n    \n    route\n    \n, \n    \n    \n    serail\n    \n as \n    \n    serail\n    \n, \n    \n    \n    sernr\n    \n as \n    \n    sernr\n    \n, \n    \n    \n    sgt_rcat\n    \n as \n    \n    sgt_rcat\n    \n, \n    \n    \n    shkzg\n    \n as \n    \n    shkzg\n    \n, \n    \n    \n    skopf\n    \n as \n    \n    skopf\n    \n, \n    \n    \n    sktof\n    \n as \n    \n    sktof\n    \n, \n    \n    \n    sloctype\n    \n as \n    \n    sloctype\n    \n, \n    \n    \n    smeng\n    \n as \n    \n    smeng\n    \n, \n    \n    \n    sobkz\n    \n as \n    \n    sobkz\n    \n, \n    \n    \n    spart\n    \n as \n    \n    spart\n    \n, \n    \n    \n    spcsto\n    \n as \n    \n    spcsto\n    \n, \n    \n    \n    sposn\n    \n as \n    \n    sposn\n    \n, \n    \n    \n    stadat\n    \n as \n    \n    stadat\n    \n, \n    \n    \n    stafo\n    \n as \n    \n    stafo\n    \n, \n    \n    \n    stcur\n    \n as \n    \n    stcur\n    \n, \n    \n    \n    stdat\n    \n as \n    \n    stdat\n    \n, \n    \n    \n    stkey\n    \n as \n    \n    stkey\n    \n, \n    \n    \n    stlkn\n    \n as \n    \n    stlkn\n    \n, \n    \n    \n    stlnr\n    \n as \n    \n    stlnr\n    \n, \n    \n    \n    stlty\n    \n as \n    \n    stlty\n    \n, \n    \n    \n    stman\n    \n as \n    \n    stman\n    \n, \n    \n    \n    stockloc\n    \n as \n    \n    stockloc\n    \n, \n    \n    \n    stpos\n    \n as \n    \n    stpos\n    \n, \n    \n    \n    stpoz\n    \n as \n    \n    stpoz\n    \n, \n    \n    \n    sugrd\n    \n as \n    \n    sugrd\n    \n, \n    \n    \n    sumbd\n    \n as \n    \n    sumbd\n    \n, \n    \n    \n    tas\n    \n as \n    \n    tas\n    \n, \n    \n    \n    tax_subject_st\n    \n as \n    \n    tax_subject_st\n    \n, \n    \n    \n    taxm1\n    \n as \n    \n    taxm1\n    \n, \n    \n    \n    taxm2\n    \n as \n    \n    taxm2\n    \n, \n    \n    \n    taxm3\n    \n as \n    \n    taxm3\n    \n, \n    \n    \n    taxm4\n    \n as \n    \n    taxm4\n    \n, \n    \n    \n    taxm5\n    \n as \n    \n    taxm5\n    \n, \n    \n    \n    taxm6\n    \n as \n    \n    taxm6\n    \n, \n    \n    \n    taxm7\n    \n as \n    \n    taxm7\n    \n, \n    \n    \n    taxm8\n    \n as \n    \n    taxm8\n    \n, \n    \n    \n    taxm9\n    \n as \n    \n    taxm9\n    \n, \n    \n    \n    tc_aut_det\n    \n as \n    \n    tc_aut_det\n    \n, \n    \n    \n    techs\n    \n as \n    \n    techs\n    \n, \n    \n    \n    trmrisk_relevant\n    \n as \n    \n    trmrisk_relevant\n    \n, \n    \n    \n    uebtk\n    \n as \n    \n    uebtk\n    \n, \n    \n    \n    uebto\n    \n as \n    \n    uebto\n    \n, \n    \n    \n    uepos\n    \n as \n    \n    uepos\n    \n, \n    \n    \n    uepvw\n    \n as \n    \n    uepvw\n    \n, \n    \n    \n    ukonm\n    \n as \n    \n    ukonm\n    \n, \n    \n    \n    umref\n    \n as \n    \n    umref\n    \n, \n    \n    \n    umvkn\n    \n as \n    \n    umvkn\n    \n, \n    \n    \n    umvkz\n    \n as \n    \n    umvkz\n    \n, \n    \n    \n    umzin\n    \n as \n    \n    umzin\n    \n, \n    \n    \n    umziz\n    \n as \n    \n    umziz\n    \n, \n    \n    \n    untto\n    \n as \n    \n    untto\n    \n, \n    \n    \n    upflu\n    \n as \n    \n    upflu\n    \n, \n    \n    \n    upmat\n    \n as \n    \n    upmat\n    \n, \n    \n    \n    vbeaf\n    \n as \n    \n    vbeaf\n    \n, \n    \n    \n    vbeav\n    \n as \n    \n    vbeav\n    \n, \n    \n    \n    vbeln\n    \n as \n    \n    vbeln\n    \n, \n    \n    \n    vbelv\n    \n as \n    \n    vbelv\n    \n, \n    \n    \n    vgbel\n    \n as \n    \n    vgbel\n    \n, \n    \n    \n    vgpos\n    \n as \n    \n    vgpos\n    \n, \n    \n    \n    vgref\n    \n as \n    \n    vgref\n    \n, \n    \n    \n    vgtyp\n    \n as \n    \n    vgtyp\n    \n, \n    \n    \n    vkaus\n    \n as \n    \n    vkaus\n    \n, \n    \n    \n    vkgru\n    \n as \n    \n    vkgru\n    \n, \n    \n    \n    voleh\n    \n as \n    \n    voleh\n    \n, \n    \n    \n    volum\n    \n as \n    \n    volum\n    \n, \n    \n    \n    voref\n    \n as \n    \n    voref\n    \n, \n    \n    \n    vpmat\n    \n as \n    \n    vpmat\n    \n, \n    \n    \n    vpwrk\n    \n as \n    \n    vpwrk\n    \n, \n    \n    \n    vpzuo\n    \n as \n    \n    vpzuo\n    \n, \n    \n    \n    vrkme\n    \n as \n    \n    vrkme\n    \n, \n    \n    \n    vstel\n    \n as \n    \n    vstel\n    \n, \n    \n    \n    waerk\n    \n as \n    \n    waerk\n    \n, \n    \n    \n    wavwr\n    \n as \n    \n    wavwr\n    \n, \n    \n    \n    werks\n    \n as \n    \n    werks\n    \n, \n    \n    \n    wgru1\n    \n as \n    \n    wgru1\n    \n, \n    \n    \n    wgru2\n    \n as \n    \n    wgru2\n    \n, \n    \n    \n    wktnr\n    \n as \n    \n    wktnr\n    \n, \n    \n    \n    wktps\n    \n as \n    \n    wktps\n    \n, \n    \n    \n    wrf_charstc1\n    \n as \n    \n    wrf_charstc1\n    \n, \n    \n    \n    wrf_charstc2\n    \n as \n    \n    wrf_charstc2\n    \n, \n    \n    \n    wrf_charstc3\n    \n as \n    \n    wrf_charstc3\n    \n, \n    \n    \n    wtysc_clmitem\n    \n as \n    \n    wtysc_clmitem\n    \n, \n    \n    \n    xchar\n    \n as \n    \n    xchar\n    \n, \n    \n    \n    xchpf\n    \n as \n    \n    xchpf\n    \n, \n    \n    \n    z_prs_bill_flag\n    \n as \n    \n    z_prs_bill_flag\n    \n, \n    \n    \n    z_prs_chargelevl\n    \n as \n    \n    z_prs_chargelevl\n    \n, \n    \n    \n    z_prs_country\n    \n as \n    \n    z_prs_country\n    \n, \n    \n    \n    z_prs_offshore\n    \n as \n    \n    z_prs_offshore\n    \n, \n    \n    \n    zieme\n    \n as \n    \n    zieme\n    \n, \n    \n    \n    zmeng\n    \n as \n    \n    zmeng\n    \n, \n    \n    \n    zschl_k\n    \n as \n    \n    zschl_k\n    \n, \n    \n    \n    zwert\n    \n as \n    \n    zwert\n    \n, \n    \n    \n    zzdea_license\n    \n as \n    \n    zzdea_license\n    \n, \n    \n    \n    zzdea_schedule\n    \n as \n    \n    zzdea_schedule\n    \n\n\n\n    from base\n),\n\nfinal as (\n    select\n        _fivetran_deleted,\n        _fivetran_synced,\n        _fivetran_sap_archived,\n        cast(mandt as TEXT) as mandt,\n        cast(posnr as TEXT) as posnr,\n        cast(vbeln as TEXT) as vbeln,\n        smeng,\n        stlty,\n        vgref,\n        bwtar,\n        knuma_ag,\n        spart,\n        bwtex,\n        oih_licin,\n        oic_dcounc,\n        knuma_pi,\n        oic_dcityc,\n        tas,\n        oignrule,\n        upmat,\n        kalsm_k,\n        oicertf1_ex,\n        aplzl_olc,\n        umvkn,\n        oidmsg_qty,\n        kever,\n        mtvfp,\n        oihantyp_ex,\n        abgru,\n        xchar,\n        kostl,\n        _accgo_tx_p,\n        prs_work_period,\n        vkgru,\n        wktnr,\n        absfz,\n        oih_lcfol,\n        vbeaf,\n        ernam,\n        oitaxfrom_im,\n        stafo,\n        oic_lifnr,\n        j_1btxsdc,\n        taxm1,\n        lprio,\n        oiedbalm_ex,\n        umziz,\n        kzvbr,\n        oic_aorgin,\n        _slce_inst_guid,\n        charg,\n        stlkn,\n        fsh_collection,\n        cmeth,\n        aplzl_oaa,\n        oidmsg_dat,\n        umvkz,\n        oitaxgrp_ex,\n        fsh_candate,\n        oipricie_im,\n        _slce_sol_posnr,\n        tax_subject_st,\n        gewei,\n        revacc_refid,\n        oic_porgin,\n        sobkz,\n        vpwrk,\n        waerk,\n        mod_allow,\n        umzin,\n        magrv,\n        oic_pbatch,\n        bonus,\n        sloctype,\n        oiedbal_im,\n        fsh_vas_prnt_id,\n        ablfz,\n        taxm3,\n        pstyv,\n        _xlso_course_eda,\n        fiscal_incentive,\n        oic_mot,\n        oic_oregio,\n        fistl,\n        vpmat,\n        awahr,\n        kpein,\n        voleh,\n        werks,\n        oicertf1,\n        knumh,\n        taxm2,\n        fsh_psm_pfm_split,\n        tc_aut_det,\n        serail,\n        kosch,\n        oid_miscdl,\n        oih_lictp_ex,\n        paobjnr,\n        ps_psp_pnr,\n        rkfkf,\n        sktof,\n        fkrel,\n        oihantyp,\n        _slce_sol_matnr,\n        oiplantd,\n        lstanr,\n        _dataaging,\n        cpd_updat,\n        oic_drcreg,\n        bedae,\n        manual_tc_reason,\n        spcsto,\n        aedat,\n        z_prs_offshore,\n        kzwi1,\n        oiedok,\n        fsh_pqr_uepos,\n        handovertime,\n        xchpf,\n        oibwtar_im,\n        cast(shkzg as TEXT) as shkzg,\n        _slce_sol_cuobj,\n        aufpl_olc,\n        ntgew,\n        vgtyp,\n        stockloc,\n        pmatn,\n        sernr,\n        taxm4,\n        kalnr,\n        oiexgnum,\n        erlre,\n        oiexgtyp,\n        oitaxto_im,\n        kzbws,\n        _accgo_is_co_rel,\n        pargb,\n        oimetind,\n        oih_folqty,\n        oic_truckn,\n        uebtk,\n        arsnum,\n        kdmat,\n        bpn,\n        mvgr1,\n        voref,\n        erzet,\n        arktx,\n        cmpnt,\n        oihnotlgort,\n        uepos,\n        stdat,\n        stcur,\n        oitaxfrom_ex,\n        fiscal_incentive_id,\n        _slce_single_conf_done,\n        klmeng,\n        zmeng,\n        oidrc,\n        pay_method,\n        _slce_sol_ext_guid,\n        kzwi2,\n        oibypass,\n        fsh_item_group,\n        aufpl_oaa,\n        cast(kwmeng as numeric(28,6)) as kwmeng,\n        oih_lcfol_ex,\n        koupd,\n        fsh_grid_cond_rec,\n        techs,\n        cast(matnr as TEXT) as matnr,\n        wgru1,\n        oitaxfrom,\n        taxm5,\n        kztlf,\n        iuid_relevant,\n        oic_kmpos,\n        z_prs_country,\n        gsber,\n        oipricie_ex,\n        fsh_crsd,\n        fsh_transaction,\n        grkor,\n        uepvw,\n        mfrgr,\n        vbelv,\n        untto,\n        plavo,\n        vpzuo,\n        mvgr3,\n        sugrd,\n        oic_ptrip,\n        oic_adestn,\n        oic_oland1,\n        mvgr2,\n        netpr,\n        oicontnr,\n        stman,\n        oiedbal_ex,\n        j_1btaxlw3,\n        _slce_single_conf_reqired,\n        oinetcyc,\n        prsok,\n        vgpos,\n        cuobj_ch,\n        oic_pdestn,\n        rep_freq,\n        lsmeng,\n        stpoz,\n        kzwi3,\n        posar,\n        budget_pd,\n        z_prs_chargelevl,\n        posnv,\n        wgru2,\n        oifeetot,\n        oic_dregio,\n        oih_licin_ex,\n        oioilcon,\n        aufnr,\n        sgt_rcat,\n        oidmsg_uom,\n        oibasprod,\n        msr_refund_code,\n        cuobj,\n        kbver,\n        sposn,\n        fsh_season_year,\n        zzdea_license,\n        taxm6,\n        mprok,\n        provg,\n        oitaxto,\n        cmkua,\n        cmtfg,\n        oid_extbol,\n        ukonm,\n        mvgr4,\n        kmein,\n        klvar,\n        prs_sd_spsnr,\n        mwsbp,\n        revacc_reftype,\n        wrf_charstc1,\n        fsh_item,\n        skopf,\n        oibwtar_ex,\n        prodh,\n        stkey,\n        j_1btaxlw4,\n        route,\n        _xlso_course_bda,\n        matkl,\n        oic_drctry,\n        kalvar,\n        lfrel,\n        kmpmg,\n        kzwi4,\n        wtysc_clmitem,\n        fmeng,\n        nrab_knumh,\n        oitaxto_ex,\n        cmpre,\n        handoverdate,\n        nachl,\n        abdat,\n        kondm,\n        oic_dland1,\n        cmpre_flt,\n        taxm7,\n        ferc_ind,\n        oifeech,\n        oih_folqty_ex,\n        prctr,\n        eannr,\n        zschl_k,\n        oislf,\n        pctrf,\n        fsh_vas_rel,\n        mvgr5,\n        fkber,\n        vbeav,\n        zwert,\n        antlf,\n        cancel_allow,\n        fsh_searef,\n        oipricie,\n        wrf_charstc2,\n        upflu,\n        oihcotdisch,\n        oidmsg_shp,\n        grant_nbr,\n        oidmsg_trm,\n        umref,\n        kzwi6,\n        knttp,\n        j_1btaxlw5,\n        stlnr,\n        vkaus,\n        erdat,\n        kzwi5,\n        fsh_theme,\n        fsh_season,\n        zieme,\n        oipsdrc,\n        uebto,\n        grpos,\n        chmvs,\n        oihantyp_im,\n        abges,\n        oihnotwerks,\n        z_prs_bill_flag,\n        abgrs,\n        taxm8,\n        objnr,\n        volum,\n        oiinex_ex,\n        j_1btaxlw1,\n        j_1bcfop,\n        kowrr,\n        fixmg,\n        _xlso_course_id,\n        fmfgus_key,\n        atpkz,\n        oifeedt,\n        meins,\n        oiinex,\n        msr_ret_reason,\n        handoverloc,\n        lfmng,\n        ktgrm,\n        oia_baselo,\n        betc,\n        wrf_charstc3,\n        oiedbalm_im,\n        oihtaxrcp_ex,\n        oic_ocounc,\n        exart,\n        fsh_vasref,\n        oiwap,\n        vgbel,\n        kannr,\n        sumbd,\n        oidmsg_prd,\n        posex,\n        oitaxgrp_im,\n        oic_ocityc,\n        oid_ship,\n        prosa,\n        berid,\n        logsys_ext,\n        oipipeval,\n        oitaxgrp,\n        vrkme,\n        ean11,\n        taxm9,\n        kzfme,\n        wktps,\n        j_1btaxlw2,\n        oiedbalm,\n        stpos,\n        anzsn,\n        oisbrel,\n        oih_lictp,\n        wavwr,\n        arspos,\n        _bev1_srfund,\n        cast(netwr as numeric(28,6)) as netwr,\n        prs_objnr,\n        kbmeng,\n        prefe,\n        prbme,\n        clint,\n        zzdea_schedule,\n        oiedbal,\n        trmrisk_relevant,\n        chspl,\n        matwa,\n        faksp,\n        fonds,\n        brgew,\n        abfor,\n        stadat,\n        vstel,\n        mill_se_gposn,\n        lgort,\n        msr_approv_block,\n        cepok\n    from fields\n)\n\nselect *\nfrom final", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null, "primary_key": [], "time_spine": null}, "model.sap.stg_sap__t134_tmp": {"database": "postgres", "schema": "public_sap_dev", "name": "stg_sap__t134_tmp", "resource_type": "model", "package_name": "sap", "path": "staging/base/stg_sap__t134_tmp.sql", "original_file_path": "models/staging/base/stg_sap__t134_tmp.sql", "unique_id": "model.sap.stg_sap__t134_tmp", "fqn": ["sap", "staging", "base", "stg_sap__t134_tmp"], "alias": "stg_sap__t134_tmp", "checksum": {"name": "sha256", "checksum": "da6b44b706f508903bc43e81f79bba2664a9db811280a703f284bbe1241cbc9d"}, "config": {"enabled": true, "alias": null, "schema": "sap_dev", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "view", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "freshness": null}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "unrendered_config": {"materialized": "view", "schema": "sap_{{ var('directed_schema','dev') }}", "enabled": true}, "created_at": 1756850329.9264865, "relation_name": "\"postgres\".\"public_sap_dev\".\"stg_sap__t134_tmp\"", "raw_code": "{{ config(enabled=var('sap_using_t134', True)) }}\n\nselect * \nfrom {{ var('t134') }}", "doc_blocks": [], "language": "sql", "refs": [], "sources": [["sap", "t134"]], "metrics": [], "depends_on": {"macros": [], "nodes": ["source.sap.sap.t134"]}, "compiled_path": "target/compiled/sap/models/staging/base/stg_sap__t134_tmp.sql", "compiled": true, "compiled_code": "\n\nselect * \nfrom \"postgres\".\"public\".\"sap_t134_data\"", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null, "primary_key": [], "time_spine": null}, "model.sap.stg_sap__makt_tmp": {"database": "postgres", "schema": "public_sap_dev", "name": "stg_sap__makt_tmp", "resource_type": "model", "package_name": "sap", "path": "staging/base/stg_sap__makt_tmp.sql", "original_file_path": "models/staging/base/stg_sap__makt_tmp.sql", "unique_id": "model.sap.stg_sap__makt_tmp", "fqn": ["sap", "staging", "base", "stg_sap__makt_tmp"], "alias": "stg_sap__makt_tmp", "checksum": {"name": "sha256", "checksum": "9b3d0acf5a079e3cce56312a2981927e81826000510c4df47ac257b62968db40"}, "config": {"enabled": true, "alias": null, "schema": "sap_dev", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "view", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "freshness": null}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "unrendered_config": {"materialized": "view", "schema": "sap_{{ var('directed_schema','dev') }}", "enabled": true}, "created_at": 1756850329.9348261, "relation_name": "\"postgres\".\"public_sap_dev\".\"stg_sap__makt_tmp\"", "raw_code": "{{ config(enabled=var('sap_using_makt', True)) }}\n\nselect * \nfrom {{ var('makt') }}", "doc_blocks": [], "language": "sql", "refs": [], "sources": [["sap", "makt"]], "metrics": [], "depends_on": {"macros": [], "nodes": ["source.sap.sap.makt"]}, "compiled_path": "target/compiled/sap/models/staging/base/stg_sap__makt_tmp.sql", "compiled": true, "compiled_code": "\n\nselect * \nfrom \"postgres\".\"public\".\"sap_makt_data\"", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null, "primary_key": [], "time_spine": null}, "model.sap.stg_sap__t024_tmp": {"database": "postgres", "schema": "public_sap_dev", "name": "stg_sap__t024_tmp", "resource_type": "model", "package_name": "sap", "path": "staging/base/stg_sap__t024_tmp.sql", "original_file_path": "models/staging/base/stg_sap__t024_tmp.sql", "unique_id": "model.sap.stg_sap__t024_tmp", "fqn": ["sap", "staging", "base", "stg_sap__t024_tmp"], "alias": "stg_sap__t024_tmp", "checksum": {"name": "sha256", "checksum": "ff484338a4cda87c9ea8b2d187d5e48b7d6d22f3f1dae860ffabc9cbf8145e63"}, "config": {"enabled": true, "alias": null, "schema": "sap_dev", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "view", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "freshness": null}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "unrendered_config": {"materialized": "view", "schema": "sap_{{ var('directed_schema','dev') }}", "enabled": true}, "created_at": 1756850329.94254, "relation_name": "\"postgres\".\"public_sap_dev\".\"stg_sap__t024_tmp\"", "raw_code": "{{ config(enabled=var('sap_using_t024', True)) }}\n\nselect * \nfrom {{ var('t024') }}", "doc_blocks": [], "language": "sql", "refs": [], "sources": [["sap", "t024"]], "metrics": [], "depends_on": {"macros": [], "nodes": ["source.sap.sap.t024"]}, "compiled_path": "target/compiled/sap/models/staging/base/stg_sap__t024_tmp.sql", "compiled": true, "compiled_code": "\n\nselect * \nfrom \"postgres\".\"public\".\"sap_t024_data\"", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null, "primary_key": [], "time_spine": null}, "model.sap.stg_sap__t024e_tmp": {"database": "postgres", "schema": "public_sap_dev", "name": "stg_sap__t024e_tmp", "resource_type": "model", "package_name": "sap", "path": "staging/base/stg_sap__t024e_tmp.sql", "original_file_path": "models/staging/base/stg_sap__t024e_tmp.sql", "unique_id": "model.sap.stg_sap__t024e_tmp", "fqn": ["sap", "staging", "base", "stg_sap__t024e_tmp"], "alias": "stg_sap__t024e_tmp", "checksum": {"name": "sha256", "checksum": "96e1d7f58b3f13cd74a700e3bd14da21f60290b150bbb5c5271c4320c4904865"}, "config": {"enabled": true, "alias": null, "schema": "sap_dev", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "view", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "freshness": null}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "unrendered_config": {"materialized": "view", "schema": "sap_{{ var('directed_schema','dev') }}", "enabled": true}, "created_at": 1756850329.9506335, "relation_name": "\"postgres\".\"public_sap_dev\".\"stg_sap__t024e_tmp\"", "raw_code": "{{ config(enabled=var('sap_using_t024e', True)) }}\n\nselect * \nfrom {{ var('t024e') }}", "doc_blocks": [], "language": "sql", "refs": [], "sources": [["sap", "t024e"]], "metrics": [], "depends_on": {"macros": [], "nodes": ["source.sap.sap.t024e"]}, "compiled_path": "target/compiled/sap/models/staging/base/stg_sap__t024e_tmp.sql", "compiled": true, "compiled_code": "\n\nselect * \nfrom \"postgres\".\"public\".\"sap_t024e_data\"", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null, "primary_key": [], "time_spine": null}, "model.sap.stg_sap__t001_tmp": {"database": "postgres", "schema": "public_sap_dev", "name": "stg_sap__t001_tmp", "resource_type": "model", "package_name": "sap", "path": "staging/base/stg_sap__t001_tmp.sql", "original_file_path": "models/staging/base/stg_sap__t001_tmp.sql", "unique_id": "model.sap.stg_sap__t001_tmp", "fqn": ["sap", "staging", "base", "stg_sap__t001_tmp"], "alias": "stg_sap__t001_tmp", "checksum": {"name": "sha256", "checksum": "424c46924ca9db402027902da3c03cbfd46ca284c93244b263aeb1006af38e77"}, "config": {"enabled": true, "alias": null, "schema": "sap_dev", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "view", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "freshness": null}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "unrendered_config": {"materialized": "view", "schema": "sap_{{ var('directed_schema','dev') }}", "enabled": true}, "created_at": 1756850329.9585097, "relation_name": "\"postgres\".\"public_sap_dev\".\"stg_sap__t001_tmp\"", "raw_code": "{{ config(enabled=var('sap_using_t001', True)) }}\n\nselect * \nfrom {{ var('t001') }}", "doc_blocks": [], "language": "sql", "refs": [], "sources": [["sap", "t001"]], "metrics": [], "depends_on": {"macros": [], "nodes": ["source.sap.sap.t001"]}, "compiled_path": "target/compiled/sap/models/staging/base/stg_sap__t001_tmp.sql", "compiled": true, "compiled_code": "\n\nselect * \nfrom \"postgres\".\"public\".\"sap_t001_data\"", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null, "primary_key": [], "time_spine": null}, "model.sap.stg_sap__pa0007_tmp": {"database": "postgres", "schema": "public_sap_dev", "name": "stg_sap__pa0007_tmp", "resource_type": "model", "package_name": "sap", "path": "staging/base/stg_sap__pa0007_tmp.sql", "original_file_path": "models/staging/base/stg_sap__pa0007_tmp.sql", "unique_id": "model.sap.stg_sap__pa0007_tmp", "fqn": ["sap", "staging", "base", "stg_sap__pa0007_tmp"], "alias": "stg_sap__pa0007_tmp", "checksum": {"name": "sha256", "checksum": "1201081880de9349ffee4a15bb9025ca15e46c74b40f1aad817c716b79ce399b"}, "config": {"enabled": true, "alias": null, "schema": "sap_dev", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "view", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "freshness": null}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "unrendered_config": {"materialized": "view", "schema": "sap_{{ var('directed_schema','dev') }}", "enabled": true}, "created_at": 1756850329.9672902, "relation_name": "\"postgres\".\"public_sap_dev\".\"stg_sap__pa0007_tmp\"", "raw_code": "{{ config(enabled=var('sap_using_pa0007', True)) }}\n\nselect * \nfrom {{ var('pa0007') }}", "doc_blocks": [], "language": "sql", "refs": [], "sources": [["sap", "pa0007"]], "metrics": [], "depends_on": {"macros": [], "nodes": ["source.sap.sap.pa0007"]}, "compiled_path": "target/compiled/sap/models/staging/base/stg_sap__pa0007_tmp.sql", "compiled": true, "compiled_code": "\n\nselect * \nfrom \"postgres\".\"public\".\"sap_pa0007_data\"", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null, "primary_key": [], "time_spine": null}, "model.sap.stg_sap__dd07l_tmp": {"database": "postgres", "schema": "public_sap_dev", "name": "stg_sap__dd07l_tmp", "resource_type": "model", "package_name": "sap", "path": "staging/base/stg_sap__dd07l_tmp.sql", "original_file_path": "models/staging/base/stg_sap__dd07l_tmp.sql", "unique_id": "model.sap.stg_sap__dd07l_tmp", "fqn": ["sap", "staging", "base", "stg_sap__dd07l_tmp"], "alias": "stg_sap__dd07l_tmp", "checksum": {"name": "sha256", "checksum": "55cf31a564d42141c937b5f7e45337cf79ef8693c03b50f53e9b62c45d0d35bd"}, "config": {"enabled": true, "alias": null, "schema": "sap_dev", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "view", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "freshness": null}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "unrendered_config": {"materialized": "view", "schema": "sap_{{ var('directed_schema','dev') }}", "enabled": true}, "created_at": 1756850329.9753306, "relation_name": "\"postgres\".\"public_sap_dev\".\"stg_sap__dd07l_tmp\"", "raw_code": "{{ config(enabled=var('sap_using_dd07l', True)) }}\n\nselect * \nfrom {{ var('dd07l') }}", "doc_blocks": [], "language": "sql", "refs": [], "sources": [["sap", "dd07l"]], "metrics": [], "depends_on": {"macros": [], "nodes": ["source.sap.sap.dd07l"]}, "compiled_path": "target/compiled/sap/models/staging/base/stg_sap__dd07l_tmp.sql", "compiled": true, "compiled_code": "\n\nselect * \nfrom \"postgres\".\"public\".\"sap_dd07l_data\"", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null, "primary_key": [], "time_spine": null}, "model.sap.stg_sap__t161t_tmp": {"database": "postgres", "schema": "public_sap_dev", "name": "stg_sap__t161t_tmp", "resource_type": "model", "package_name": "sap", "path": "staging/base/stg_sap__t161t_tmp.sql", "original_file_path": "models/staging/base/stg_sap__t161t_tmp.sql", "unique_id": "model.sap.stg_sap__t161t_tmp", "fqn": ["sap", "staging", "base", "stg_sap__t161t_tmp"], "alias": "stg_sap__t161t_tmp", "checksum": {"name": "sha256", "checksum": "cd92bf6021ad54f9049b7499c589049546db9616cd0d26529ad762178561a873"}, "config": {"enabled": true, "alias": null, "schema": "sap_dev", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "view", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "freshness": null}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "unrendered_config": {"materialized": "view", "schema": "sap_{{ var('directed_schema','dev') }}", "enabled": true}, "created_at": 1756850329.9848468, "relation_name": "\"postgres\".\"public_sap_dev\".\"stg_sap__t161t_tmp\"", "raw_code": "{{ config(enabled=var('sap_using_t161t', True)) }}\n\nselect *\nfrom {{ var('t161t') }}", "doc_blocks": [], "language": "sql", "refs": [], "sources": [["sap", "t161t"]], "metrics": [], "depends_on": {"macros": [], "nodes": ["source.sap.sap.t161t"]}, "compiled_path": "target/compiled/sap/models/staging/base/stg_sap__t161t_tmp.sql", "compiled": true, "compiled_code": "\n\nselect *\nfrom \"postgres\".\"public\".\"sap_t161t_data\"", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null, "primary_key": [], "time_spine": null}, "model.sap.stg_sap__bkpf_tmp": {"database": "postgres", "schema": "public_sap_dev", "name": "stg_sap__bkpf_tmp", "resource_type": "model", "package_name": "sap", "path": "staging/base/stg_sap__bkpf_tmp.sql", "original_file_path": "models/staging/base/stg_sap__bkpf_tmp.sql", "unique_id": "model.sap.stg_sap__bkpf_tmp", "fqn": ["sap", "staging", "base", "stg_sap__bkpf_tmp"], "alias": "stg_sap__bkpf_tmp", "checksum": {"name": "sha256", "checksum": "32f2853405d5563c7baaa9c546060d208a0285095d940628e48dc960a178b324"}, "config": {"enabled": true, "alias": null, "schema": "sap_dev", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "view", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "freshness": null}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "unrendered_config": {"materialized": "view", "schema": "sap_{{ var('directed_schema','dev') }}", "enabled": true}, "created_at": 1756850329.9926546, "relation_name": "\"postgres\".\"public_sap_dev\".\"stg_sap__bkpf_tmp\"", "raw_code": "{{ config(enabled=var('sap_using_bkpf', True)) }}\n\nselect * \nfrom {{ var('bkpf') }}", "doc_blocks": [], "language": "sql", "refs": [], "sources": [["sap", "bkpf"]], "metrics": [], "depends_on": {"macros": [], "nodes": ["source.sap.sap.bkpf"]}, "compiled_path": "target/compiled/sap/models/staging/base/stg_sap__bkpf_tmp.sql", "compiled": true, "compiled_code": "\n\nselect * \nfrom \"postgres\".\"public\".\"sap_bkpf_data\"", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null, "primary_key": [], "time_spine": null}, "model.sap.stg_sap__t161_tmp": {"database": "postgres", "schema": "public_sap_dev", "name": "stg_sap__t161_tmp", "resource_type": "model", "package_name": "sap", "path": "staging/base/stg_sap__t161_tmp.sql", "original_file_path": "models/staging/base/stg_sap__t161_tmp.sql", "unique_id": "model.sap.stg_sap__t161_tmp", "fqn": ["sap", "staging", "base", "stg_sap__t161_tmp"], "alias": "stg_sap__t161_tmp", "checksum": {"name": "sha256", "checksum": "699b54fc6e8be868496dbd167f815952e9c970090fc85ff86205fb32496a7daa"}, "config": {"enabled": true, "alias": null, "schema": "sap_dev", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "view", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "freshness": null}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "unrendered_config": {"materialized": "view", "schema": "sap_{{ var('directed_schema','dev') }}", "enabled": true}, "created_at": 1756850330.0008392, "relation_name": "\"postgres\".\"public_sap_dev\".\"stg_sap__t161_tmp\"", "raw_code": "{{ config(enabled=var('sap_using_t161', True)) }}\n\nselect * \nfrom {{ var('t161') }}", "doc_blocks": [], "language": "sql", "refs": [], "sources": [["sap", "t161"]], "metrics": [], "depends_on": {"macros": [], "nodes": ["source.sap.sap.t161"]}, "compiled_path": "target/compiled/sap/models/staging/base/stg_sap__t161_tmp.sql", "compiled": true, "compiled_code": "\n\nselect * \nfrom \"postgres\".\"public\".\"sap_t161_data\"", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null, "primary_key": [], "time_spine": null}, "model.sap.stg_sap__kna1_tmp": {"database": "postgres", "schema": "public_sap_dev", "name": "stg_sap__kna1_tmp", "resource_type": "model", "package_name": "sap", "path": "staging/base/stg_sap__kna1_tmp.sql", "original_file_path": "models/staging/base/stg_sap__kna1_tmp.sql", "unique_id": "model.sap.stg_sap__kna1_tmp", "fqn": ["sap", "staging", "base", "stg_sap__kna1_tmp"], "alias": "stg_sap__kna1_tmp", "checksum": {"name": "sha256", "checksum": "d9fc5ffb851457a0574a90e5e1c60ab4723d6bf5b716405812e0312e9c10dbde"}, "config": {"enabled": true, "alias": null, "schema": "sap_dev", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "view", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "freshness": null}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "unrendered_config": {"materialized": "view", "schema": "sap_{{ var('directed_schema','dev') }}", "enabled": true}, "created_at": 1756850330.0092218, "relation_name": "\"postgres\".\"public_sap_dev\".\"stg_sap__kna1_tmp\"", "raw_code": "{{ config(enabled=var('sap_using_kna1', True)) }}\n\nselect * \nfrom {{ var('kna1') }}", "doc_blocks": [], "language": "sql", "refs": [], "sources": [["sap", "kna1"]], "metrics": [], "depends_on": {"macros": [], "nodes": ["source.sap.sap.kna1"]}, "compiled_path": "target/compiled/sap/models/staging/base/stg_sap__kna1_tmp.sql", "compiled": true, "compiled_code": "\n\nselect * \nfrom \"postgres\".\"public\".\"sap_kna1_data\"", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null, "primary_key": [], "time_spine": null}, "model.sap.stg_sap__vbuk_tmp": {"database": "postgres", "schema": "public_sap_dev", "name": "stg_sap__vbuk_tmp", "resource_type": "model", "package_name": "sap", "path": "staging/base/stg_sap__vbuk_tmp.sql", "original_file_path": "models/staging/base/stg_sap__vbuk_tmp.sql", "unique_id": "model.sap.stg_sap__vbuk_tmp", "fqn": ["sap", "staging", "base", "stg_sap__vbuk_tmp"], "alias": "stg_sap__vbuk_tmp", "checksum": {"name": "sha256", "checksum": "00b2fe4f79fee99fda172fe01ce3e6ed5cb3247c53cf1e1a91f561da09f974d4"}, "config": {"enabled": true, "alias": null, "schema": "sap_dev", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "view", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "freshness": null}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "unrendered_config": {"materialized": "view", "schema": "sap_{{ var('directed_schema','dev') }}", "enabled": true}, "created_at": 1756850330.0172808, "relation_name": "\"postgres\".\"public_sap_dev\".\"stg_sap__vbuk_tmp\"", "raw_code": "{{ config(enabled=var('sap_using_vbuk', True)) }}\n\nselect *\nfrom {{ var('vbuk') }}", "doc_blocks": [], "language": "sql", "refs": [], "sources": [["sap", "vbuk"]], "metrics": [], "depends_on": {"macros": [], "nodes": ["source.sap.sap.vbuk"]}, "compiled_path": "target/compiled/sap/models/staging/base/stg_sap__vbuk_tmp.sql", "compiled": true, "compiled_code": "\n\nselect *\nfrom \"postgres\".\"public\".\"sap_vbuk_data\"", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null, "primary_key": [], "time_spine": null}, "model.sap.stg_sap__t880_tmp": {"database": "postgres", "schema": "public_sap_dev", "name": "stg_sap__t880_tmp", "resource_type": "model", "package_name": "sap", "path": "staging/base/stg_sap__t880_tmp.sql", "original_file_path": "models/staging/base/stg_sap__t880_tmp.sql", "unique_id": "model.sap.stg_sap__t880_tmp", "fqn": ["sap", "staging", "base", "stg_sap__t880_tmp"], "alias": "stg_sap__t880_tmp", "checksum": {"name": "sha256", "checksum": "269bebe88d46b273e8ec25922b0f16ce4369de54d1fdfeb735e2cb8ceb1c189c"}, "config": {"enabled": true, "alias": null, "schema": "sap_dev", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "view", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "freshness": null}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "unrendered_config": {"materialized": "view", "schema": "sap_{{ var('directed_schema','dev') }}", "enabled": true}, "created_at": 1756850330.027531, "relation_name": "\"postgres\".\"public_sap_dev\".\"stg_sap__t880_tmp\"", "raw_code": "{{ config(enabled=var('sap_using_t880', True)) }}\n\nselect * \nfrom {{ var('t880') }}", "doc_blocks": [], "language": "sql", "refs": [], "sources": [["sap", "t880"]], "metrics": [], "depends_on": {"macros": [], "nodes": ["source.sap.sap.t880"]}, "compiled_path": "target/compiled/sap/models/staging/base/stg_sap__t880_tmp.sql", "compiled": true, "compiled_code": "\n\nselect * \nfrom \"postgres\".\"public\".\"sap_t880_data\"", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null, "primary_key": [], "time_spine": null}, "model.sap.stg_sap__pa0000_tmp": {"database": "postgres", "schema": "public_sap_dev", "name": "stg_sap__pa0000_tmp", "resource_type": "model", "package_name": "sap", "path": "staging/base/stg_sap__pa0000_tmp.sql", "original_file_path": "models/staging/base/stg_sap__pa0000_tmp.sql", "unique_id": "model.sap.stg_sap__pa0000_tmp", "fqn": ["sap", "staging", "base", "stg_sap__pa0000_tmp"], "alias": "stg_sap__pa0000_tmp", "checksum": {"name": "sha256", "checksum": "cbf70f4cd07798f7b5be0f8e81e46364c71c6d8d655fd17d363baf58dad03932"}, "config": {"enabled": true, "alias": null, "schema": "sap_dev", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "view", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "freshness": null}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "unrendered_config": {"materialized": "view", "schema": "sap_{{ var('directed_schema','dev') }}", "enabled": true}, "created_at": 1756850330.035536, "relation_name": "\"postgres\".\"public_sap_dev\".\"stg_sap__pa0000_tmp\"", "raw_code": "{{ config(enabled=var('sap_using_pa0000', True)) }}\n\nselect * \nfrom {{ var('pa0000') }}", "doc_blocks": [], "language": "sql", "refs": [], "sources": [["sap", "pa0000"]], "metrics": [], "depends_on": {"macros": [], "nodes": ["source.sap.sap.pa0000"]}, "compiled_path": "target/compiled/sap/models/staging/base/stg_sap__pa0000_tmp.sql", "compiled": true, "compiled_code": "\n\nselect * \nfrom \"postgres\".\"public\".\"sap_pa0000_data\"", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null, "primary_key": [], "time_spine": null}, "model.sap.stg_sap__vbap_tmp": {"database": "postgres", "schema": "public_sap_dev", "name": "stg_sap__vbap_tmp", "resource_type": "model", "package_name": "sap", "path": "staging/base/stg_sap__vbap_tmp.sql", "original_file_path": "models/staging/base/stg_sap__vbap_tmp.sql", "unique_id": "model.sap.stg_sap__vbap_tmp", "fqn": ["sap", "staging", "base", "stg_sap__vbap_tmp"], "alias": "stg_sap__vbap_tmp", "checksum": {"name": "sha256", "checksum": "fc1e20d1405a831b4e23c2bceb8302543f6121f08770ddb130e962f335833960"}, "config": {"enabled": true, "alias": null, "schema": "sap_dev", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "view", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "freshness": null}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "unrendered_config": {"materialized": "view", "schema": "sap_{{ var('directed_schema','dev') }}", "enabled": true}, "created_at": 1756850330.0432267, "relation_name": "\"postgres\".\"public_sap_dev\".\"stg_sap__vbap_tmp\"", "raw_code": "{{ config(enabled=var('sap_using_vbap', True)) }}\n\nselect *\nfrom {{ var('vbap') }}", "doc_blocks": [], "language": "sql", "refs": [], "sources": [["sap", "vbap"]], "metrics": [], "depends_on": {"macros": [], "nodes": ["source.sap.sap.vbap"]}, "compiled_path": "target/compiled/sap/models/staging/base/stg_sap__vbap_tmp.sql", "compiled": true, "compiled_code": "\n\nselect *\nfrom \"postgres\".\"public\".\"sap_vbap_data\"", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null, "primary_key": [], "time_spine": null}, "model.sap.stg_sap__t134t_tmp": {"database": "postgres", "schema": "public_sap_dev", "name": "stg_sap__t134t_tmp", "resource_type": "model", "package_name": "sap", "path": "staging/base/stg_sap__t134t_tmp.sql", "original_file_path": "models/staging/base/stg_sap__t134t_tmp.sql", "unique_id": "model.sap.stg_sap__t134t_tmp", "fqn": ["sap", "staging", "base", "stg_sap__t134t_tmp"], "alias": "stg_sap__t134t_tmp", "checksum": {"name": "sha256", "checksum": "af7971d3f569f73f9f29bdcf48c7b07b1dc80d2327afdc445fc0a4470c952fa3"}, "config": {"enabled": true, "alias": null, "schema": "sap_dev", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "view", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "freshness": null}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "unrendered_config": {"materialized": "view", "schema": "sap_{{ var('directed_schema','dev') }}", "enabled": true}, "created_at": 1756850330.051253, "relation_name": "\"postgres\".\"public_sap_dev\".\"stg_sap__t134t_tmp\"", "raw_code": "{{ config(enabled=var('sap_using_t134t', True)) }}\n\nselect * \nfrom {{ var('t134t') }}", "doc_blocks": [], "language": "sql", "refs": [], "sources": [["sap", "t134t"]], "metrics": [], "depends_on": {"macros": [], "nodes": ["source.sap.sap.t134t"]}, "compiled_path": "target/compiled/sap/models/staging/base/stg_sap__t134t_tmp.sql", "compiled": true, "compiled_code": "\n\nselect * \nfrom \"postgres\".\"public\".\"sap_t134t_data\"", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null, "primary_key": [], "time_spine": null}, "model.sap.stg_sap__mara_tmp": {"database": "postgres", "schema": "public_sap_dev", "name": "stg_sap__mara_tmp", "resource_type": "model", "package_name": "sap", "path": "staging/base/stg_sap__mara_tmp.sql", "original_file_path": "models/staging/base/stg_sap__mara_tmp.sql", "unique_id": "model.sap.stg_sap__mara_tmp", "fqn": ["sap", "staging", "base", "stg_sap__mara_tmp"], "alias": "stg_sap__mara_tmp", "checksum": {"name": "sha256", "checksum": "7dabac365d8e2d2e7ee7abcd2cca26d3d3a5f54404e782939aebb91b4d614a34"}, "config": {"enabled": true, "alias": null, "schema": "sap_dev", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "view", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "freshness": null}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "unrendered_config": {"materialized": "view", "schema": "sap_{{ var('directed_schema','dev') }}", "enabled": true}, "created_at": 1756850330.0623286, "relation_name": "\"postgres\".\"public_sap_dev\".\"stg_sap__mara_tmp\"", "raw_code": "{{ config(enabled=var('sap_using_mara', True)) }}\n\nselect * \nfrom {{ var('mara') }}", "doc_blocks": [], "language": "sql", "refs": [], "sources": [["sap", "mara"]], "metrics": [], "depends_on": {"macros": [], "nodes": ["source.sap.sap.mara"]}, "compiled_path": "target/compiled/sap/models/staging/base/stg_sap__mara_tmp.sql", "compiled": true, "compiled_code": "\n\nselect * \nfrom \"postgres\".\"public\".\"sap_mara_data\"", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null, "primary_key": [], "time_spine": null}, "model.sap.stg_sap__vbak_tmp": {"database": "postgres", "schema": "public_sap_dev", "name": "stg_sap__vbak_tmp", "resource_type": "model", "package_name": "sap", "path": "staging/base/stg_sap__vbak_tmp.sql", "original_file_path": "models/staging/base/stg_sap__vbak_tmp.sql", "unique_id": "model.sap.stg_sap__vbak_tmp", "fqn": ["sap", "staging", "base", "stg_sap__vbak_tmp"], "alias": "stg_sap__vbak_tmp", "checksum": {"name": "sha256", "checksum": "000982942fe68be7cf66bbf952086abaddba5db0394914ba5fce2b5ce14901fc"}, "config": {"enabled": true, "alias": null, "schema": "sap_dev", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "view", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "freshness": null}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "unrendered_config": {"materialized": "view", "schema": "sap_{{ var('directed_schema','dev') }}", "enabled": true}, "created_at": 1756850330.070498, "relation_name": "\"postgres\".\"public_sap_dev\".\"stg_sap__vbak_tmp\"", "raw_code": "{{ config(enabled=var('sap_using_vbak', True)) }}\n\nselect *\nfrom {{ var('vbak') }}", "doc_blocks": [], "language": "sql", "refs": [], "sources": [["sap", "vbak"]], "metrics": [], "depends_on": {"macros": [], "nodes": ["source.sap.sap.vbak"]}, "compiled_path": "target/compiled/sap/models/staging/base/stg_sap__vbak_tmp.sql", "compiled": true, "compiled_code": "\n\nselect *\nfrom \"postgres\".\"public\".\"sap_vbak_data\"", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null, "primary_key": [], "time_spine": null}, "model.sap.stg_sap__tvagt_tmp": {"database": "postgres", "schema": "public_sap_dev", "name": "stg_sap__tvagt_tmp", "resource_type": "model", "package_name": "sap", "path": "staging/base/stg_sap__tvagt_tmp.sql", "original_file_path": "models/staging/base/stg_sap__tvagt_tmp.sql", "unique_id": "model.sap.stg_sap__tvagt_tmp", "fqn": ["sap", "staging", "base", "stg_sap__tvagt_tmp"], "alias": "stg_sap__tvagt_tmp", "checksum": {"name": "sha256", "checksum": "603b9049d56c703f2d551a7658a6274d5def808ba162df7726f93e9ef2df05de"}, "config": {"enabled": true, "alias": null, "schema": "sap_dev", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "view", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "freshness": null}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "unrendered_config": {"materialized": "view", "schema": "sap_{{ var('directed_schema','dev') }}", "enabled": true}, "created_at": 1756850330.078945, "relation_name": "\"postgres\".\"public_sap_dev\".\"stg_sap__tvagt_tmp\"", "raw_code": "{{ config(enabled=var('sap_using_tvagt', True)) }}\n\nselect * \nfrom {{ var('tvagt') }}", "doc_blocks": [], "language": "sql", "refs": [], "sources": [["sap", "tvagt"]], "metrics": [], "depends_on": {"macros": [], "nodes": ["source.sap.sap.tvagt"]}, "compiled_path": "target/compiled/sap/models/staging/base/stg_sap__tvagt_tmp.sql", "compiled": true, "compiled_code": "\n\nselect * \nfrom \"postgres\".\"public\".\"sap_tvagt_data\"", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null, "primary_key": [], "time_spine": null}, "model.sap.stg_sap__ekko_tmp": {"database": "postgres", "schema": "public_sap_dev", "name": "stg_sap__ekko_tmp", "resource_type": "model", "package_name": "sap", "path": "staging/base/stg_sap__ekko_tmp.sql", "original_file_path": "models/staging/base/stg_sap__ekko_tmp.sql", "unique_id": "model.sap.stg_sap__ekko_tmp", "fqn": ["sap", "staging", "base", "stg_sap__ekko_tmp"], "alias": "stg_sap__ekko_tmp", "checksum": {"name": "sha256", "checksum": "a41850e22e0dac710e0a78e0c3e630e0dc19285601d3e0c0e20e12ce593586e0"}, "config": {"enabled": true, "alias": null, "schema": "sap_dev", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "view", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "freshness": null}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "unrendered_config": {"materialized": "view", "schema": "sap_{{ var('directed_schema','dev') }}", "enabled": true}, "created_at": 1756850330.0870996, "relation_name": "\"postgres\".\"public_sap_dev\".\"stg_sap__ekko_tmp\"", "raw_code": "{{ config(enabled=var('sap_using_ekko', True)) }}\n\nselect * \nfrom {{ var('ekko') }}", "doc_blocks": [], "language": "sql", "refs": [], "sources": [["sap", "ekko"]], "metrics": [], "depends_on": {"macros": [], "nodes": ["source.sap.sap.ekko"]}, "compiled_path": "target/compiled/sap/models/staging/base/stg_sap__ekko_tmp.sql", "compiled": true, "compiled_code": "\n\nselect * \nfrom \"postgres\".\"public\".\"sap_ekko_data\"", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null, "primary_key": [], "time_spine": null}, "model.sap.stg_sap__faglflexa_tmp": {"database": "postgres", "schema": "public_sap_dev", "name": "stg_sap__faglflexa_tmp", "resource_type": "model", "package_name": "sap", "path": "staging/base/stg_sap__faglflexa_tmp.sql", "original_file_path": "models/staging/base/stg_sap__faglflexa_tmp.sql", "unique_id": "model.sap.stg_sap__faglflexa_tmp", "fqn": ["sap", "staging", "base", "stg_sap__faglflexa_tmp"], "alias": "stg_sap__faglflexa_tmp", "checksum": {"name": "sha256", "checksum": "2aa000c9820b961b7ecb9a43c903c39fa7dc84da9fe979309b05c30a069ed96a"}, "config": {"enabled": true, "alias": null, "schema": "sap_dev", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "view", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "freshness": null}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "unrendered_config": {"materialized": "view", "schema": "sap_{{ var('directed_schema','dev') }}", "enabled": true}, "created_at": 1756850330.095006, "relation_name": "\"postgres\".\"public_sap_dev\".\"stg_sap__faglflexa_tmp\"", "raw_code": "{{ config(enabled=var('sap_using_faglflexa', True)) }}\n\nselect * \nfrom {{ var('faglflexa') }}", "doc_blocks": [], "language": "sql", "refs": [], "sources": [["sap", "faglflexa"]], "metrics": [], "depends_on": {"macros": [], "nodes": ["source.sap.sap.faglflexa"]}, "compiled_path": "target/compiled/sap/models/staging/base/stg_sap__faglflexa_tmp.sql", "compiled": true, "compiled_code": "\n\nselect * \nfrom \"postgres\".\"public\".\"sap_faglflexa_data\"", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null, "primary_key": [], "time_spine": null}, "model.sap.stg_sap__t001w_tmp": {"database": "postgres", "schema": "public_sap_dev", "name": "stg_sap__t001w_tmp", "resource_type": "model", "package_name": "sap", "path": "staging/base/stg_sap__t001w_tmp.sql", "original_file_path": "models/staging/base/stg_sap__t001w_tmp.sql", "unique_id": "model.sap.stg_sap__t001w_tmp", "fqn": ["sap", "staging", "base", "stg_sap__t001w_tmp"], "alias": "stg_sap__t001w_tmp", "checksum": {"name": "sha256", "checksum": "25d756c0b0af0f6968280a953e593679b23d3aef133cfa4dc49c87507fd94ac4"}, "config": {"enabled": true, "alias": null, "schema": "sap_dev", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "view", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "freshness": null}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "unrendered_config": {"materialized": "view", "schema": "sap_{{ var('directed_schema','dev') }}", "enabled": true}, "created_at": 1756850330.1046193, "relation_name": "\"postgres\".\"public_sap_dev\".\"stg_sap__t001w_tmp\"", "raw_code": "{{ config(enabled=var('sap_using_t001w', True)) }}\n\nselect * \nfrom {{ var('t001w') }}", "doc_blocks": [], "language": "sql", "refs": [], "sources": [["sap", "t001w"]], "metrics": [], "depends_on": {"macros": [], "nodes": ["source.sap.sap.t001w"]}, "compiled_path": "target/compiled/sap/models/staging/base/stg_sap__t001w_tmp.sql", "compiled": true, "compiled_code": "\n\nselect * \nfrom \"postgres\".\"public\".\"sap_t001w_data\"", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null, "primary_key": [], "time_spine": null}, "model.sap.stg_sap__ekbe_tmp": {"database": "postgres", "schema": "public_sap_dev", "name": "stg_sap__ekbe_tmp", "resource_type": "model", "package_name": "sap", "path": "staging/base/stg_sap__ekbe_tmp.sql", "original_file_path": "models/staging/base/stg_sap__ekbe_tmp.sql", "unique_id": "model.sap.stg_sap__ekbe_tmp", "fqn": ["sap", "staging", "base", "stg_sap__ekbe_tmp"], "alias": "stg_sap__ekbe_tmp", "checksum": {"name": "sha256", "checksum": "236fa44528f7e585440d93813b88a200c0d5f526c7af9cb55b99b5346e2a6ff3"}, "config": {"enabled": true, "alias": null, "schema": "sap_dev", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "view", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "freshness": null}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "unrendered_config": {"materialized": "view", "schema": "sap_{{ var('directed_schema','dev') }}", "enabled": true}, "created_at": 1756850330.1123717, "relation_name": "\"postgres\".\"public_sap_dev\".\"stg_sap__ekbe_tmp\"", "raw_code": "{{ config(enabled=var('sap_using_ekbe', True)) }}\n\nselect * \nfrom {{ var('ekbe') }}", "doc_blocks": [], "language": "sql", "refs": [], "sources": [["sap", "ekbe"]], "metrics": [], "depends_on": {"macros": [], "nodes": ["source.sap.sap.ekbe"]}, "compiled_path": "target/compiled/sap/models/staging/base/stg_sap__ekbe_tmp.sql", "compiled": true, "compiled_code": "\n\nselect * \nfrom \"postgres\".\"public\".\"sap_ekbe_data\"", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null, "primary_key": [], "time_spine": null}, "model.sap.stg_sap__tvag_tmp": {"database": "postgres", "schema": "public_sap_dev", "name": "stg_sap__tvag_tmp", "resource_type": "model", "package_name": "sap", "path": "staging/base/stg_sap__tvag_tmp.sql", "original_file_path": "models/staging/base/stg_sap__tvag_tmp.sql", "unique_id": "model.sap.stg_sap__tvag_tmp", "fqn": ["sap", "staging", "base", "stg_sap__tvag_tmp"], "alias": "stg_sap__tvag_tmp", "checksum": {"name": "sha256", "checksum": "f19208421571126076b1c687df1d367a0719c8d885c6a3a8afa3b2418fd46e4a"}, "config": {"enabled": true, "alias": null, "schema": "sap_dev", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "view", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "freshness": null}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "unrendered_config": {"materialized": "view", "schema": "sap_{{ var('directed_schema','dev') }}", "enabled": true}, "created_at": 1756850330.1205957, "relation_name": "\"postgres\".\"public_sap_dev\".\"stg_sap__tvag_tmp\"", "raw_code": "{{ config(enabled=var('sap_using_tvag', True)) }}\n\nselect * \nfrom {{ var('tvag') }}", "doc_blocks": [], "language": "sql", "refs": [], "sources": [["sap", "tvag"]], "metrics": [], "depends_on": {"macros": [], "nodes": ["source.sap.sap.tvag"]}, "compiled_path": "target/compiled/sap/models/staging/base/stg_sap__tvag_tmp.sql", "compiled": true, "compiled_code": "\n\nselect * \nfrom \"postgres\".\"public\".\"sap_tvag_data\"", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null, "primary_key": [], "time_spine": null}, "model.sap.stg_sap__t503_tmp": {"database": "postgres", "schema": "public_sap_dev", "name": "stg_sap__t503_tmp", "resource_type": "model", "package_name": "sap", "path": "staging/base/stg_sap__t503_tmp.sql", "original_file_path": "models/staging/base/stg_sap__t503_tmp.sql", "unique_id": "model.sap.stg_sap__t503_tmp", "fqn": ["sap", "staging", "base", "stg_sap__t503_tmp"], "alias": "stg_sap__t503_tmp", "checksum": {"name": "sha256", "checksum": "b93edc42f6ed3375820f74ecc7e827efc65f46d87beda571b7f772a2d1b5dafd"}, "config": {"enabled": true, "alias": null, "schema": "sap_dev", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "view", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "freshness": null}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "unrendered_config": {"materialized": "view", "schema": "sap_{{ var('directed_schema','dev') }}", "enabled": true}, "created_at": 1756850330.1287217, "relation_name": "\"postgres\".\"public_sap_dev\".\"stg_sap__t503_tmp\"", "raw_code": "{{ config(enabled=var('sap_using_t503', True)) }}\n\nselect * \nfrom {{ var('t503') }}", "doc_blocks": [], "language": "sql", "refs": [], "sources": [["sap", "t503"]], "metrics": [], "depends_on": {"macros": [], "nodes": ["source.sap.sap.t503"]}, "compiled_path": "target/compiled/sap/models/staging/base/stg_sap__t503_tmp.sql", "compiled": true, "compiled_code": "\n\nselect * \nfrom \"postgres\".\"public\".\"sap_t503_data\"", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null, "primary_key": [], "time_spine": null}, "model.sap.stg_sap__eket_tmp": {"database": "postgres", "schema": "public_sap_dev", "name": "stg_sap__eket_tmp", "resource_type": "model", "package_name": "sap", "path": "staging/base/stg_sap__eket_tmp.sql", "original_file_path": "models/staging/base/stg_sap__eket_tmp.sql", "unique_id": "model.sap.stg_sap__eket_tmp", "fqn": ["sap", "staging", "base", "stg_sap__eket_tmp"], "alias": "stg_sap__eket_tmp", "checksum": {"name": "sha256", "checksum": "b3acf6392b2f3bf8bf6bacce1eb9f96c92c32946a9c630d2e897e1c62893846a"}, "config": {"enabled": true, "alias": null, "schema": "sap_dev", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "view", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "freshness": null}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "unrendered_config": {"materialized": "view", "schema": "sap_{{ var('directed_schema','dev') }}", "enabled": true}, "created_at": 1756850330.13647, "relation_name": "\"postgres\".\"public_sap_dev\".\"stg_sap__eket_tmp\"", "raw_code": "{{ config(enabled=var('sap_using_eket', True)) }}\n\nselect * \nfrom {{ var('eket') }}", "doc_blocks": [], "language": "sql", "refs": [], "sources": [["sap", "eket"]], "metrics": [], "depends_on": {"macros": [], "nodes": ["source.sap.sap.eket"]}, "compiled_path": "target/compiled/sap/models/staging/base/stg_sap__eket_tmp.sql", "compiled": true, "compiled_code": "\n\nselect * \nfrom \"postgres\".\"public\".\"sap_eket_data\"", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null, "primary_key": [], "time_spine": null}, "model.sap.stg_sap__dd07t_tmp": {"database": "postgres", "schema": "public_sap_dev", "name": "stg_sap__dd07t_tmp", "resource_type": "model", "package_name": "sap", "path": "staging/base/stg_sap__dd07t_tmp.sql", "original_file_path": "models/staging/base/stg_sap__dd07t_tmp.sql", "unique_id": "model.sap.stg_sap__dd07t_tmp", "fqn": ["sap", "staging", "base", "stg_sap__dd07t_tmp"], "alias": "stg_sap__dd07t_tmp", "checksum": {"name": "sha256", "checksum": "53a76e09ee994855bdb495d9b8ced84ab306ce821a2133160e20c81683a49468"}, "config": {"enabled": true, "alias": null, "schema": "sap_dev", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "view", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "freshness": null}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "unrendered_config": {"materialized": "view", "schema": "sap_{{ var('directed_schema','dev') }}", "enabled": true}, "created_at": 1756850330.1466897, "relation_name": "\"postgres\".\"public_sap_dev\".\"stg_sap__dd07t_tmp\"", "raw_code": "{{ config(enabled=var('sap_using_dd07t', True)) }}\n\nselect * \nfrom {{ var('dd07t') }}", "doc_blocks": [], "language": "sql", "refs": [], "sources": [["sap", "dd07t"]], "metrics": [], "depends_on": {"macros": [], "nodes": ["source.sap.sap.dd07t"]}, "compiled_path": "target/compiled/sap/models/staging/base/stg_sap__dd07t_tmp.sql", "compiled": true, "compiled_code": "\n\nselect * \nfrom \"postgres\".\"public\".\"sap_dd07t_data\"", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null, "primary_key": [], "time_spine": null}, "model.sap.stg_sap__vbup_tmp": {"database": "postgres", "schema": "public_sap_dev", "name": "stg_sap__vbup_tmp", "resource_type": "model", "package_name": "sap", "path": "staging/base/stg_sap__vbup_tmp.sql", "original_file_path": "models/staging/base/stg_sap__vbup_tmp.sql", "unique_id": "model.sap.stg_sap__vbup_tmp", "fqn": ["sap", "staging", "base", "stg_sap__vbup_tmp"], "alias": "stg_sap__vbup_tmp", "checksum": {"name": "sha256", "checksum": "904531af7f36916298d92f9932e91b62d521395bff703bb0dda9efae7f41a6eb"}, "config": {"enabled": true, "alias": null, "schema": "sap_dev", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "view", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "freshness": null}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "unrendered_config": {"materialized": "view", "schema": "sap_{{ var('directed_schema','dev') }}", "enabled": true}, "created_at": 1756850330.1546502, "relation_name": "\"postgres\".\"public_sap_dev\".\"stg_sap__vbup_tmp\"", "raw_code": "{{ config(enabled=var('sap_using_vbup', True)) }}\n\nselect *\nfrom {{ var('vbup') }}", "doc_blocks": [], "language": "sql", "refs": [], "sources": [["sap", "vbup"]], "metrics": [], "depends_on": {"macros": [], "nodes": ["source.sap.sap.vbup"]}, "compiled_path": "target/compiled/sap/models/staging/base/stg_sap__vbup_tmp.sql", "compiled": true, "compiled_code": "\n\nselect *\nfrom \"postgres\".\"public\".\"sap_vbup_data\"", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null, "primary_key": [], "time_spine": null}, "model.sap.stg_sap__bseg_tmp": {"database": "postgres", "schema": "public_sap_dev", "name": "stg_sap__bseg_tmp", "resource_type": "model", "package_name": "sap", "path": "staging/base/stg_sap__bseg_tmp.sql", "original_file_path": "models/staging/base/stg_sap__bseg_tmp.sql", "unique_id": "model.sap.stg_sap__bseg_tmp", "fqn": ["sap", "staging", "base", "stg_sap__bseg_tmp"], "alias": "stg_sap__bseg_tmp", "checksum": {"name": "sha256", "checksum": "9ebadb82300d11e069060cb6c7bad0e39ea9c0b39d6108101a16a69518d034d6"}, "config": {"enabled": true, "alias": null, "schema": "sap_dev", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "view", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "freshness": null}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "unrendered_config": {"materialized": "view", "schema": "sap_{{ var('directed_schema','dev') }}", "enabled": true}, "created_at": 1756850330.16276, "relation_name": "\"postgres\".\"public_sap_dev\".\"stg_sap__bseg_tmp\"", "raw_code": "{{ config(enabled=var('sap_using_bseg', True)) }}\n\nselect * \nfrom {{ var('bseg') }}", "doc_blocks": [], "language": "sql", "refs": [], "sources": [["sap", "bseg"]], "metrics": [], "depends_on": {"macros": [], "nodes": ["source.sap.sap.bseg"]}, "compiled_path": "target/compiled/sap/models/staging/base/stg_sap__bseg_tmp.sql", "compiled": true, "compiled_code": "\n\nselect * \nfrom \"postgres\".\"public\".\"sap_bseg_data\"", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null, "primary_key": [], "time_spine": null}, "model.sap.stg_sap__pa0001_tmp": {"database": "postgres", "schema": "public_sap_dev", "name": "stg_sap__pa0001_tmp", "resource_type": "model", "package_name": "sap", "path": "staging/base/stg_sap__pa0001_tmp.sql", "original_file_path": "models/staging/base/stg_sap__pa0001_tmp.sql", "unique_id": "model.sap.stg_sap__pa0001_tmp", "fqn": ["sap", "staging", "base", "stg_sap__pa0001_tmp"], "alias": "stg_sap__pa0001_tmp", "checksum": {"name": "sha256", "checksum": "0d674dd930135a08519896a48db1ae16c38202dc530636a39a26dea6cbdce846"}, "config": {"enabled": true, "alias": null, "schema": "sap_dev", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "view", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "freshness": null}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "unrendered_config": {"materialized": "view", "schema": "sap_{{ var('directed_schema','dev') }}", "enabled": true}, "created_at": 1756850330.1707046, "relation_name": "\"postgres\".\"public_sap_dev\".\"stg_sap__pa0001_tmp\"", "raw_code": "{{ config(enabled=var('sap_using_pa0001', True)) }}\n\nselect * \nfrom {{ var('pa0001') }}", "doc_blocks": [], "language": "sql", "refs": [], "sources": [["sap", "pa0001"]], "metrics": [], "depends_on": {"macros": [], "nodes": ["source.sap.sap.pa0001"]}, "compiled_path": "target/compiled/sap/models/staging/base/stg_sap__pa0001_tmp.sql", "compiled": true, "compiled_code": "\n\nselect * \nfrom \"postgres\".\"public\".\"sap_pa0001_data\"", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null, "primary_key": [], "time_spine": null}, "model.sap.stg_sap__ekpo_tmp": {"database": "postgres", "schema": "public_sap_dev", "name": "stg_sap__ekpo_tmp", "resource_type": "model", "package_name": "sap", "path": "staging/base/stg_sap__ekpo_tmp.sql", "original_file_path": "models/staging/base/stg_sap__ekpo_tmp.sql", "unique_id": "model.sap.stg_sap__ekpo_tmp", "fqn": ["sap", "staging", "base", "stg_sap__ekpo_tmp"], "alias": "stg_sap__ekpo_tmp", "checksum": {"name": "sha256", "checksum": "88971c8c8ab4c89a186f9a857cc0b359deac55881423610e0c8100c920fc61ca"}, "config": {"enabled": true, "alias": null, "schema": "sap_dev", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "view", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "freshness": null}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "unrendered_config": {"materialized": "view", "schema": "sap_{{ var('directed_schema','dev') }}", "enabled": true}, "created_at": 1756850330.18032, "relation_name": "\"postgres\".\"public_sap_dev\".\"stg_sap__ekpo_tmp\"", "raw_code": "{{ config(enabled=var('sap_using_ekpo', True)) }}\n\nselect * \nfrom {{ var('ekpo') }}", "doc_blocks": [], "language": "sql", "refs": [], "sources": [["sap", "ekpo"]], "metrics": [], "depends_on": {"macros": [], "nodes": ["source.sap.sap.ekpo"]}, "compiled_path": "target/compiled/sap/models/staging/base/stg_sap__ekpo_tmp.sql", "compiled": true, "compiled_code": "\n\nselect * \nfrom \"postgres\".\"public\".\"sap_ekpo_data\"", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null, "primary_key": [], "time_spine": null}, "model.sap.stg_sap__lfa1_tmp": {"database": "postgres", "schema": "public_sap_dev", "name": "stg_sap__lfa1_tmp", "resource_type": "model", "package_name": "sap", "path": "staging/base/stg_sap__lfa1_tmp.sql", "original_file_path": "models/staging/base/stg_sap__lfa1_tmp.sql", "unique_id": "model.sap.stg_sap__lfa1_tmp", "fqn": ["sap", "staging", "base", "stg_sap__lfa1_tmp"], "alias": "stg_sap__lfa1_tmp", "checksum": {"name": "sha256", "checksum": "028f0abd0d2660b929ddc7f67b0bbbd34d9a40b756eef286c3cd1b614f347ba2"}, "config": {"enabled": true, "alias": null, "schema": "sap_dev", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "view", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "freshness": null}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "unrendered_config": {"materialized": "view", "schema": "sap_{{ var('directed_schema','dev') }}", "enabled": true}, "created_at": 1756850330.1887777, "relation_name": "\"postgres\".\"public_sap_dev\".\"stg_sap__lfa1_tmp\"", "raw_code": "{{ config(enabled=var('sap_using_lfa1', True)) }}\n\nselect * \nfrom {{ var('lfa1') }}", "doc_blocks": [], "language": "sql", "refs": [], "sources": [["sap", "lfa1"]], "metrics": [], "depends_on": {"macros": [], "nodes": ["source.sap.sap.lfa1"]}, "compiled_path": "target/compiled/sap/models/staging/base/stg_sap__lfa1_tmp.sql", "compiled": true, "compiled_code": "\n\nselect * \nfrom \"postgres\".\"public\".\"sap_lfa1_data\"", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null, "primary_key": [], "time_spine": null}, "model.sap.stg_sap__pa0031_tmp": {"database": "postgres", "schema": "public_sap_dev", "name": "stg_sap__pa0031_tmp", "resource_type": "model", "package_name": "sap", "path": "staging/base/stg_sap__pa0031_tmp.sql", "original_file_path": "models/staging/base/stg_sap__pa0031_tmp.sql", "unique_id": "model.sap.stg_sap__pa0031_tmp", "fqn": ["sap", "staging", "base", "stg_sap__pa0031_tmp"], "alias": "stg_sap__pa0031_tmp", "checksum": {"name": "sha256", "checksum": "0367cc37412acbc43b947f4d14af9229a47042127d50cf28d1b0609c89adb692"}, "config": {"enabled": true, "alias": null, "schema": "sap_dev", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "view", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "freshness": null}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "unrendered_config": {"materialized": "view", "schema": "sap_{{ var('directed_schema','dev') }}", "enabled": true}, "created_at": 1756850330.1967018, "relation_name": "\"postgres\".\"public_sap_dev\".\"stg_sap__pa0031_tmp\"", "raw_code": "{{ config(enabled=var('sap_using_pa0031', True)) }}\n\nselect * \nfrom {{ var('pa0031') }}", "doc_blocks": [], "language": "sql", "refs": [], "sources": [["sap", "pa0031"]], "metrics": [], "depends_on": {"macros": [], "nodes": ["source.sap.sap.pa0031"]}, "compiled_path": "target/compiled/sap/models/staging/base/stg_sap__pa0031_tmp.sql", "compiled": true, "compiled_code": "\n\nselect * \nfrom \"postgres\".\"public\".\"sap_pa0031_data\"", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null, "primary_key": [], "time_spine": null}, "model.sap.stg_sap__faglflext_tmp": {"database": "postgres", "schema": "public_sap_dev", "name": "stg_sap__faglflext_tmp", "resource_type": "model", "package_name": "sap", "path": "staging/base/stg_sap__faglflext_tmp.sql", "original_file_path": "models/staging/base/stg_sap__faglflext_tmp.sql", "unique_id": "model.sap.stg_sap__faglflext_tmp", "fqn": ["sap", "staging", "base", "stg_sap__faglflext_tmp"], "alias": "stg_sap__faglflext_tmp", "checksum": {"name": "sha256", "checksum": "1f51798b94ff69d76d8a86c22c8d1f30b5b9afa0c4bb7f05dd2dd5721ca03c1e"}, "config": {"enabled": true, "alias": null, "schema": "sap_dev", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "view", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "freshness": null}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "unrendered_config": {"materialized": "view", "schema": "sap_{{ var('directed_schema','dev') }}", "enabled": true}, "created_at": 1756850330.204891, "relation_name": "\"postgres\".\"public_sap_dev\".\"stg_sap__faglflext_tmp\"", "raw_code": "{{ config(enabled=var('sap_using_faglflext', True)) }}\n\nselect * \nfrom {{ var('faglflext') }}", "doc_blocks": [], "language": "sql", "refs": [], "sources": [["sap", "faglflext"]], "metrics": [], "depends_on": {"macros": [], "nodes": ["source.sap.sap.faglflext"]}, "compiled_path": "target/compiled/sap/models/staging/base/stg_sap__faglflext_tmp.sql", "compiled": true, "compiled_code": "\n\nselect * \nfrom \"postgres\".\"public\".\"sap_faglflext_data\"", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null, "primary_key": [], "time_spine": null}, "model.sap.stg_sap__pa0008_tmp": {"database": "postgres", "schema": "public_sap_dev", "name": "stg_sap__pa0008_tmp", "resource_type": "model", "package_name": "sap", "path": "staging/base/stg_sap__pa0008_tmp.sql", "original_file_path": "models/staging/base/stg_sap__pa0008_tmp.sql", "unique_id": "model.sap.stg_sap__pa0008_tmp", "fqn": ["sap", "staging", "base", "stg_sap__pa0008_tmp"], "alias": "stg_sap__pa0008_tmp", "checksum": {"name": "sha256", "checksum": "c871dc3435bbca0e6d45f205b67a95acfa18d53792c6d8f0641fbe63833ffe13"}, "config": {"enabled": true, "alias": null, "schema": "sap_dev", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "view", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "freshness": null}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "unrendered_config": {"materialized": "view", "schema": "sap_{{ var('directed_schema','dev') }}", "enabled": true}, "created_at": 1756850330.2129364, "relation_name": "\"postgres\".\"public_sap_dev\".\"stg_sap__pa0008_tmp\"", "raw_code": "{{ config(enabled=var('sap_using_pa0008', True)) }}\n\nselect * \nfrom {{ var('pa0008') }}", "doc_blocks": [], "language": "sql", "refs": [], "sources": [["sap", "pa0008"]], "metrics": [], "depends_on": {"macros": [], "nodes": ["source.sap.sap.pa0008"]}, "compiled_path": "target/compiled/sap/models/staging/base/stg_sap__pa0008_tmp.sql", "compiled": true, "compiled_code": "\n\nselect * \nfrom \"postgres\".\"public\".\"sap_pa0008_data\"", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null, "primary_key": [], "time_spine": null}, "model.sap.stg_sap__ska1_tmp": {"database": "postgres", "schema": "public_sap_dev", "name": "stg_sap__ska1_tmp", "resource_type": "model", "package_name": "sap", "path": "staging/base/stg_sap__ska1_tmp.sql", "original_file_path": "models/staging/base/stg_sap__ska1_tmp.sql", "unique_id": "model.sap.stg_sap__ska1_tmp", "fqn": ["sap", "staging", "base", "stg_sap__ska1_tmp"], "alias": "stg_sap__ska1_tmp", "checksum": {"name": "sha256", "checksum": "a71f554a97a0d30938e1694e6cdaf1214741b56519216eb9b24fc0dbe6541735"}, "config": {"enabled": true, "alias": null, "schema": "sap_dev", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "view", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "freshness": null}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "unrendered_config": {"materialized": "view", "schema": "sap_{{ var('directed_schema','dev') }}", "enabled": true}, "created_at": 1756850330.2228954, "relation_name": "\"postgres\".\"public_sap_dev\".\"stg_sap__ska1_tmp\"", "raw_code": "{{ config(enabled=var('sap_using_ska1', True)) }}\n\nselect * \nfrom {{ var('ska1') }}", "doc_blocks": [], "language": "sql", "refs": [], "sources": [["sap", "ska1"]], "metrics": [], "depends_on": {"macros": [], "nodes": ["source.sap.sap.ska1"]}, "compiled_path": "target/compiled/sap/models/staging/base/stg_sap__ska1_tmp.sql", "compiled": true, "compiled_code": "\n\nselect * \nfrom \"postgres\".\"public\".\"sap_ska1_data\"", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null, "primary_key": [], "time_spine": null}}, "sources": {"source.sap.sap.bkpf": {"database": "postgres", "schema": "public", "name": "bkpf", "resource_type": "source", "package_name": "sap", "path": "models/staging/src_sap.yml", "original_file_path": "models/staging/src_sap.yml", "unique_id": "source.sap.sap.bkpf", "fqn": ["sap", "staging", "sap", "bkpf"], "source_name": "sap", "source_description": "", "loader": "fivetran", "identifier": "sap_bkpf_data", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": "_fivetran_synced", "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "Accounting document header", "columns": {"_fivetran_deleted": {"name": "_fivetran_deleted", "description": "Fivetran deletion marker", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "_fivetran_rowid": {"name": "_fivetran_rowid", "description": "Fivetran unique row ID", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "_fivetran_synced": {"name": "_fivetran_synced", "description": "Fivetran sync timestamp", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "_sapf15_status": {"name": "_sapf15_status", "description": "SAP F15 status flag", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "adisc": {"name": "adisc", "description": "Dunning block", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "aedat": {"name": "aedat", "description": "Last change date", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "arcid": {"name": "arcid", "description": "Archive run ID", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "ausbk": {"name": "ausbk", "description": "House bank", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "awkey": {"name": "awkey", "description": "Reference key", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "awsys": {"name": "awsys", "description": "Logical system", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "awtyp": {"name": "awtyp", "description": "Reference document type", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "basw2": {"name": "basw2", "description": "Second local currency base amount", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "basw3": {"name": "basw3", "description": "Third local currency base amount", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "batch": {"name": "batch", "description": "Batch number", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "belnr": {"name": "belnr", "description": "Accounting document number", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "bktxt": {"name": "bktxt", "description": "Document header text", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "blart": {"name": "blart", "description": "Document type", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "bldat": {"name": "bldat", "description": "Document date in document", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "blind": {"name": "blind", "description": "Invoice list indicator", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "brnch": {"name": "brnch", "description": "Branch number", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "bstat": {"name": "bstat", "description": "Document status", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "budat": {"name": "budat", "description": "Posting date", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "bukrs": {"name": "bukrs", "description": "Company code", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "bvorg": {"name": "bvorg", "description": "Original document number", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "cash_alloc": {"name": "cash_alloc", "description": "Cash allocation indicator", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "ccins": {"name": "ccins", "description": "Credit card issuer", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "ccnum": {"name": "ccnum", "description": "Credit card number", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "cpudt": {"name": "cpudt", "description": "Day on which accounting document was entered", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "cputm": {"name": "cputm", "description": "Time of entry", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "ctxkrs": {"name": "ctxkrs", "description": "Translation currency", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "curt2": {"name": "curt2", "description": "Second local currency", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "curt3": {"name": "curt3", "description": "Third local currency", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "dbblg": {"name": "dbblg", "description": "Reference document number for depreciation", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "doccat": {"name": "doccat", "description": "Document category", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "dokid": {"name": "dokid", "description": "Document ID", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "duefl": {"name": "duefl", "description": "Due date flag", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "exclude_flag": {"name": "exclude_flag", "description": "Exclusion indicator", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "fikrs": {"name": "fikrs", "description": "Financial management area", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "fm_umart": {"name": "fm_umart", "description": "FM transaction type", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "follow_on": {"name": "follow_on", "description": "Follow-on document flag", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "frath": {"name": "frath", "description": "Document grouping key", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "gjahr": {"name": "gjahr", "description": "Fiscal year", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "glvor": {"name": "glvor", "description": "Business transaction", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "grpid": {"name": "grpid", "description": "Group ID", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "hwae2": {"name": "hwae2", "description": "Currency key of second local currency", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "hwae3": {"name": "hwae3", "description": "Currency key of third local currency", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "hwaer": {"name": "hwaer", "description": "Local currency", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "iblar": {"name": "iblar", "description": "Interest indicator", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "intdate": {"name": "intdate", "description": "Interest calculation date", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "intform": {"name": "intform", "description": "Interest calculation method", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "knumv": {"name": "knumv", "description": "Condition document number", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "kur2x": {"name": "kur2x", "description": "Exchange rate for second local currency", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "kur3x": {"name": "kur3x", "description": "Exchange rate for third local currency", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "kurs2": {"name": "kurs2", "description": "Exchange rate 2", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "kurs3": {"name": "kurs3", "description": "Exchange rate 3", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "kursf": {"name": "kursf", "description": "Exchange rate", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "kurst": {"name": "kurst", "description": "Exchange rate type", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "kursx": {"name": "kursx", "description": "Exchange rate (market)", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "kuty2": {"name": "kuty2", "description": "Exchange rate quotation type 2", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "kuty3": {"name": "kuty3", "description": "Exchange rate quotation type 3", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "kzkrs": {"name": "kzkrs", "description": "Currency translation key", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "kzwrs": {"name": "kzwrs", "description": "Cash discount amount", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "ldgrp": {"name": "ldgrp", "description": "Ledger group", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "lotkz": {"name": "lotkz", "description": "Lottery indicator", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "mandt": {"name": "mandt", "description": "Client", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "monat": {"name": "monat", "description": "Fiscal period", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "numpg": {"name": "numpg", "description": "Number range for document", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "offset_refer_dat": {"name": "offset_refer_dat", "description": "Offset reference date", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "offset_status": {"name": "offset_status", "description": "Offset document status", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "penrc": {"name": "penrc", "description": "Number of pension recipients", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "ppnam": {"name": "ppnam", "description": "Program name", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "propmano": {"name": "propmano", "description": "Proposal management number", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "psoak": {"name": "psoak", "description": "Public sector account assignment", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "psobt": {"name": "psobt", "description": "Object type", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "psodt": {"name": "psodt", "description": "Due date", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "psofn": {"name": "psofn", "description": "Fund", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "psoks": {"name": "psoks", "description": "Commitment item", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "psosg": {"name": "psosg", "description": "Funded program", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "psotm": {"name": "psotm", "description": "Functional area", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "psoty": {"name": "psoty", "description": "Funds center", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "psozl": {"name": "psozl", "description": "Grant", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "reindat": {"name": "reindat", "description": "Reinsurance start date", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "resubmission": {"name": "resubmission", "description": "Resubmission date", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "rldnr": {"name": "rldnr", "description": "Ledger", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "sampled": {"name": "sampled", "description": "Sampled document flag", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "sname": {"name": "sname", "description": "User name", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "ssblk": {"name": "ssblk", "description": "Substitution block", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "stblg": {"name": "stblg", "description": "Reversal document number", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "stgrd": {"name": "stgrd", "description": "Reason code", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "stjah": {"name": "stjah", "description": "Reversal fiscal year", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "stodt": {"name": "stodt", "description": "Reversal posting date", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "subset": {"name": "subset", "description": "Sample set", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "tcode": {"name": "tcode", "description": "Transaction code", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "txkrs": {"name": "txkrs", "description": "Currency translation key", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "umrd2": {"name": "umrd2", "description": "Translation date for 2nd currency", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "umrd3": {"name": "umrd3", "description": "Translation date for 3rd currency", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "upddt": {"name": "upddt", "description": "Update date", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "usnam": {"name": "usnam", "description": "User name", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "vatdate": {"name": "vatdate", "description": "VAT date", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "waers": {"name": "waers", "description": "Currency key", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "wwert": {"name": "wwert", "description": "Value date", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "xblnr": {"name": "xblnr", "description": "Reference document number", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "xblnr_alt": {"name": "xblnr_alt", "description": "Alternative reference number", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "xmca": {"name": "xmca", "description": "MCA indicator", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "xmwst": {"name": "xmwst", "description": "Tax code indicator", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "xnetb": {"name": "xnetb", "description": "Net amount indicator", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "xref1_hd": {"name": "xref1_hd", "description": "Reference key 1", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "xref2_hd": {"name": "xref2_hd", "description": "Reference key 2", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "xreorg": {"name": "xreorg", "description": "Doc. contains open item that was transferred during reorg.", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "xreversal": {"name": "xreversal", "description": "Reversal document indicator", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "xrueb": {"name": "xrueb", "description": "Reversal reason", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "xsnet": {"name": "xsnet", "description": "Net procedure indicator", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "xsplit": {"name": "xsplit", "description": "Document split indicator", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "xstov": {"name": "xstov", "description": "Reversal posting indicator", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "xusvr": {"name": "xusvr", "description": "U.S. government flag", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "xwvof": {"name": "xwvof", "description": "Goods movement indicator", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": "_fivetran_synced", "loaded_at_query": null, "meta": {}, "tags": []}, "patch_path": null, "unrendered_config": {"loaded_at_field": "_fivetran_synced", "enabled": true, "loaded_at_query": null, "meta": {}, "tags": []}, "relation_name": "\"postgres\".\"public\".\"sap_bkpf_data\"", "created_at": 1756850331.8453946, "unrendered_database": "{% if target.type != 'spark' %}{{ var('sap_database', target.database) }}{% endif %}", "unrendered_schema": "{{ var('sap_schema', 'sap') }}", "doc_blocks": []}, "source.sap.sap.bseg": {"database": "postgres", "schema": "public", "name": "bseg", "resource_type": "source", "package_name": "sap", "path": "models/staging/src_sap.yml", "original_file_path": "models/staging/src_sap.yml", "unique_id": "source.sap.sap.bseg", "fqn": ["sap", "staging", "sap", "bseg"], "source_name": "sap", "source_description": "", "loader": "fivetran", "identifier": "sap_bseg_data", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": "_fivetran_synced", "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "Accounting document segment", "columns": {"_fivetran_deleted": {"name": "_fivetran_deleted", "description": "Fivetran deletion marker", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "_fivetran_rowid": {"name": "_fivetran_rowid", "description": "Fivetran unique row ID", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "_fivetran_synced": {"name": "_fivetran_synced", "description": "Fivetran sync timestamp", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "abper": {"name": "abper", "description": "Employee responsible", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "absbt": {"name": "absbt", "description": "Credit management (Hedged amount)", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "agzei": {"name": "agzei", "description": "Clearing item", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "altkt": {"name": "altkt", "description": "Alternative account number", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "anbwa": {"name": "anbwa", "description": "Asset transaction type", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "anfae": {"name": "anfae", "description": "Business area for asset", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "anfbj": {"name": "anfbj", "description": "Fiscal year of asset value", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "anfbn": {"name": "anfbn", "description": "Asset value document number", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "anfbu": {"name": "anfbu", "description": "Company code of asset transaction", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "anln1": {"name": "anln1", "description": "Main asset number", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "anln2": {"name": "anln2", "description": "Asset subnumber", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "aplzl": {"name": "aplzl", "description": "Counter for operations", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "aufnr": {"name": "aufnr", "description": "Order number", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "aufpl": {"name": "aufpl", "description": "Routing number of operations", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "augbl": {"name": "augbl", "description": "Document number of the clearing document", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "augcp": {"name": "augcp", "description": "Clearing reason code", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "augdt": {"name": "augdt", "description": "Clearing date", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "auggj": {"name": "auggj", "description": "Fiscal year of clearing document", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "bdif2": {"name": "bdif2", "description": "Valuation difference for the second local currency", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "bdif3": {"name": "bdif3", "description": "Valuation difference for the third local currency", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "bdiff": {"name": "bdiff", "description": "Valuation difference", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "belnr": {"name": "belnr", "description": "Accounting document number", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "bewar": {"name": "bewar", "description": "Transaction type", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "blnbt": {"name": "blnbt", "description": "Transaction currency amount", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "blnkz": {"name": "blnkz", "description": "List indicator", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "blnpz": {"name": "blnpz", "description": "Billing item", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "bonfb": {"name": "bonfb", "description": "Follow-on document indicator", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "bpmng": {"name": "bpmng", "description": "Quantity in order price unit", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "bprme": {"name": "bprme", "description": "Order price unit", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "bschl": {"name": "bschl", "description": "Posting key", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "btype": {"name": "btype", "description": "Document type category", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "bualt": {"name": "bualt", "description": "Alternative account indicator", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "budget_pd": {"name": "budget_pd", "description": "Budget period", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "bukrs": {"name": "bukrs", "description": "Company code", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "bupla": {"name": "bupla", "description": "Business place", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "bustw": {"name": "bustw", "description": "Tax office", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "buzei": {"name": "buzei", "description": "Number of line item within accounting document", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "buzid": {"name": "buzid", "description": "Identification of the line item", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "bvtyp": {"name": "bvtyp", "description": "Partner bank type", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "bwkey": {"name": "bwkey", "description": "Valuation area", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "bwtar": {"name": "bwtar", "description": "Valuation type", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "bzdat": {"name": "bzdat", "description": "Value date", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "ccbtc": {"name": "ccbtc", "description": "Payment cards (Settlement run)", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "cession_kz": {"name": "cession_kz", "description": "Accounts receivable pledging indicator", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "dabrz": {"name": "dabrz", "description": "Reference date for settlement", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "depot": {"name": "depot", "description": "Storage location", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "diekz": {"name": "diekz", "description": "Indicator revenue distribution", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "disbj": {"name": "disbj", "description": "Fiscal year of distributed item", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "disbn": {"name": "disbn", "description": "Number of distributed item", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "disbz": {"name": "disbz", "description": "Line of distributed item", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "dmbtr": {"name": "dmbtr", "description": "Amount in local currency", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "dtws1": {"name": "dtws1", "description": "Instruction key 1", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "dtws2": {"name": "dtws2", "description": "Instruction key 2", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "dtws3": {"name": "dtws3", "description": "Instruction key 3", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "dtws4": {"name": "dtws4", "description": "Instruction key 4", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "ebeln": {"name": "ebeln", "description": "Purchasing document number", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "ebelp": {"name": "ebelp", "description": "Item number of purchasing document", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "eten2": {"name": "eten2", "description": "Delivery schedule line number", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "filkd": {"name": "filkd", "description": "Account number of the branch", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "fkber": {"name": "fkber", "description": "Functional area", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "fkber_long": {"name": "fkber_long", "description": "Functional area", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "gjahr": {"name": "gjahr", "description": "Fiscal year", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "gsber": {"name": "gsber", "description": "Business area", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "hkont": {"name": "hkont", "description": "General ledger account", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "imkey": {"name": "imkey", "description": "Internal key for real estate object", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "kidno": {"name": "kidno", "description": "Payment reference", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "kkber": {"name": "kkber", "description": "Credit control area", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "koart": {"name": "koart", "description": "Account type", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "kostl": {"name": "kostl", "description": "Cost center", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "kstar": {"name": "kstar", "description": "Cost element", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "kunnr": {"name": "kunnr", "description": "Customer numbers", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "lifnr": {"name": "lifnr", "description": "Account number of vendor or creditor", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "maber": {"name": "maber", "description": "Dunning area", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "madat": {"name": "madat", "description": "Last dunned on", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "mandt": {"name": "mandt", "description": "Client", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "mansp": {"name": "mansp", "description": "Dunning block", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "manst": {"name": "manst", "description": "Dunning level", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "meins": {"name": "meins", "description": "Base unit of measure", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "menge": {"name": "menge", "description": "Quantity", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "mschl": {"name": "mschl", "description": "Dunning key", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "mwskz": {"name": "mwskz", "description": "Tax on sales/purchases code", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "pargb": {"name": "pargb", "description": "Trading partner's business area", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "pfkber": {"name": "pfkber", "description": "Partner functional area", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "posn2": {"name": "posn2", "description": "Sales document item", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "pprct": {"name": "pprct", "description": "Partner profit center", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "projk": {"name": "projk", "description": "Work Breakdown Structure Element (WBS Element)", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "pswbt": {"name": "pswbt", "description": "Amount for updating in general ledger", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "pswsl": {"name": "pswsl", "description": "Update currency for general ledger transaction figures", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "pyamt": {"name": "pyamt", "description": "Amount in payment currency", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "pycur": {"name": "pycur", "description": "Currency for automatic payment", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "qbshb": {"name": "qbshb", "description": "Withholding tax amount (in document currency)", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "qsfbt": {"name": "qsfbt", "description": "Withholding tax-exempt amount (in document currency)", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "qsshb": {"name": "qsshb", "description": "Withholding tax base amount", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "rebzg": {"name": "rebzg", "description": "Number of the invoice the transaction belongs to", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "rebzt": {"name": "rebzt", "description": "Follow-on document type", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "rfzei": {"name": "rfzei", "description": "Payment card item", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "rstgr": {"name": "rstgr", "description": "Reason code for payments", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "saknr": {"name": "saknr", "description": "G/L account number", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "samnr": {"name": "samnr", "description": "Invoice list number", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "secco": {"name": "secco", "description": "Section code", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "sgtxt": {"name": "sgtxt", "description": "Item text", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "shkzg": {"name": "shkzg", "description": "Debit/credit indicator", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "skfbt": {"name": "skfbt", "description": "Amount eligible for cash discount in document currency", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "sknto": {"name": "sknto", "description": "Cash discount amount in local currency", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "umskz": {"name": "umskz", "description": "Special G/L indicator", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "umsks": {"name": "umsks", "description": "Special G/L transaction type", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "uzawe": {"name": "uzawe", "description": "Payment method supplement", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "valut": {"name": "valut", "description": "Value date", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "vbel2": {"name": "vbel2", "description": "Sales document", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "vbeln": {"name": "vbeln", "description": "Billing document", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "vbewa": {"name": "vbewa", "description": "Flow type", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "vbund": {"name": "vbund", "description": "Company id of trading partner", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "vertn": {"name": "vertn", "description": "Contract number", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "vertt": {"name": "vertt", "description": "Contract type", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "werks": {"name": "werks", "description": "Plant", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "wrbtr": {"name": "wrbtr", "description": "Amount in document currency", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "wskto": {"name": "wskto", "description": "Cash discount amount in document currency", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "wverw": {"name": "wverw", "description": "Bill of exchange usage type", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "xlgclr": {"name": "xlgclr", "description": "Clearing specific to ledger groups", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "xnegp": {"name": "xnegp", "description": "Indicator (Negative posting)", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "xopvw": {"name": "xopvw", "description": "Indicator (Open item management?)", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "xpypr": {"name": "xpypr", "description": "Indicator (Items from payment program blocked)", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "xragl": {"name": "xragl", "description": "Indicator (Clearing was reversed)", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "xref1": {"name": "xref1", "description": "Business partner reference key", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "xref2": {"name": "xref2", "description": "Business partner reference key", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "xref3": {"name": "xref3", "description": "Reference key for line item", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "xzahl": {"name": "xzahl", "description": "Indicator (Is the posting key used in a payment transaction?)", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "zbd1p": {"name": "zbd1p", "description": "Cash discount percentage 1", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "zbd1t": {"name": "zbd1t", "description": "Cash discount days 1", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "zbd2p": {"name": "zbd2p", "description": "Cash discount percentage 2", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "zbd2t": {"name": "zbd2t", "description": "Cash discount days 2", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "zbd3t": {"name": "zbd3t", "description": "Net payment terms period", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "zbfix": {"name": "zbfix", "description": "Fixed payment terms", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "zfbdt": {"name": "zfbdt", "description": "Baseline date for due date calculation", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "zlsch": {"name": "zlsch", "description": "Payment method", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "zlspr": {"name": "zlspr", "description": "Payment block key", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "zterm": {"name": "zterm", "description": "Terms of payment key", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "zuonr": {"name": "zuonr", "description": "Assignment number", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "zzbuspartn": {"name": "zzbuspartn", "description": "Business partner", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "zzchan": {"name": "zzchan", "description": "Distribution channel", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "zzlob": {"name": "zzlob", "description": "Business line", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "zzloca": {"name": "zzloca", "description": "City", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "zzproduct": {"name": "zzproduct", "description": "Product group", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "zzregion": {"name": "zzregion", "description": "User defined regions", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "zzspreg": {"name": "zzspreg", "description": "Special region", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "zzstate": {"name": "zzstate", "description": "State/province code", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "zzuserfld1": {"name": "zzuserfld1", "description": "Territory", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "zzuserfld2": {"name": "zzuserfld2", "description": "Owner/Cont.", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "zzuserfld3": {"name": "zzuserfld3", "description": "Vein", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": "_fivetran_synced", "loaded_at_query": null, "meta": {}, "tags": []}, "patch_path": null, "unrendered_config": {"loaded_at_field": "_fivetran_synced", "enabled": true, "loaded_at_query": null, "meta": {}, "tags": []}, "relation_name": "\"postgres\".\"public\".\"sap_bseg_data\"", "created_at": 1756850331.8482668, "unrendered_database": "{% if target.type != 'spark' %}{{ var('sap_database', target.database) }}{% endif %}", "unrendered_schema": "{{ var('sap_schema', 'sap') }}", "doc_blocks": []}, "source.sap.sap.dd07l": {"database": "postgres", "schema": "public", "name": "dd07l", "resource_type": "source", "package_name": "sap", "path": "models/staging/src_sap.yml", "original_file_path": "models/staging/src_sap.yml", "unique_id": "source.sap.sap.dd07l", "fqn": ["sap", "staging", "sap", "dd07l"], "source_name": "sap", "source_description": "", "loader": "fivetran", "identifier": "sap_dd07l_data", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": "_fivetran_synced", "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "Domain values", "columns": {"_fivetran_deleted": {"name": "_fivetran_deleted", "description": "Fivetran deletion marker", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "_fivetran_rowid": {"name": "_fivetran_rowid", "description": "Fivetran unique row ID", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "_fivetran_synced": {"name": "_fivetran_synced", "description": "Fivetran sync timestamp", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "as4vers": {"name": "as4vers", "description": "Active version", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "domname": {"name": "domname", "description": "Domain name", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "domvalue_l": {"name": "domvalue_l", "description": "Value of domain", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "hvr_change_time": {"name": "hvr_change_time", "description": "HVR change timestamp", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": "_fivetran_synced", "loaded_at_query": null, "meta": {}, "tags": []}, "patch_path": null, "unrendered_config": {"loaded_at_field": "_fivetran_synced", "enabled": true, "loaded_at_query": null, "meta": {}, "tags": []}, "relation_name": "\"postgres\".\"public\".\"sap_dd07l_data\"", "created_at": 1756850331.8489556, "unrendered_database": "{% if target.type != 'spark' %}{{ var('sap_database', target.database) }}{% endif %}", "unrendered_schema": "{{ var('sap_schema', 'sap') }}", "doc_blocks": []}, "source.sap.sap.dd07t": {"database": "postgres", "schema": "public", "name": "dd07t", "resource_type": "source", "package_name": "sap", "path": "models/staging/src_sap.yml", "original_file_path": "models/staging/src_sap.yml", "unique_id": "source.sap.sap.dd07t", "fqn": ["sap", "staging", "sap", "dd07t"], "source_name": "sap", "source_description": "", "loader": "fivetran", "identifier": "sap_dd07t_data", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": "_fivetran_synced", "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "Texts for domain values", "columns": {"_fivetran_deleted": {"name": "_fivetran_deleted", "description": "Fivetran deletion marker", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "_fivetran_rowid": {"name": "_fivetran_rowid", "description": "Fivetran unique row ID", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "_fivetran_synced": {"name": "_fivetran_synced", "description": "Fivetran sync timestamp", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "as4local": {"name": "as4local", "description": "Indicator of local object (not transported between systems)", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "as4vers": {"name": "as4vers", "description": "Active version", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "ddlanguage": {"name": "ddlanguage", "description": "Language key", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "ddtext": {"name": "ddtext", "description": "Text", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "domname": {"name": "domname", "description": "Domain name", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "domvalue_l": {"name": "domvalue_l", "description": "Domain value", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "hvr_change_time": {"name": "hvr_change_time", "description": "HVR change timestamp", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "valpos": {"name": "valpos", "description": "Value position within the domain", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": "_fivetran_synced", "loaded_at_query": null, "meta": {}, "tags": []}, "patch_path": null, "unrendered_config": {"loaded_at_field": "_fivetran_synced", "enabled": true, "loaded_at_query": null, "meta": {}, "tags": []}, "relation_name": "\"postgres\".\"public\".\"sap_dd07t_data\"", "created_at": 1756850331.849646, "unrendered_database": "{% if target.type != 'spark' %}{{ var('sap_database', target.database) }}{% endif %}", "unrendered_schema": "{{ var('sap_schema', 'sap') }}", "doc_blocks": []}, "source.sap.sap.ekbe": {"database": "postgres", "schema": "public", "name": "ekbe", "resource_type": "source", "package_name": "sap", "path": "models/staging/src_sap.yml", "original_file_path": "models/staging/src_sap.yml", "unique_id": "source.sap.sap.ekbe", "fqn": ["sap", "staging", "sap", "ekbe"], "source_name": "sap", "source_description": "", "loader": "fivetran", "identifier": "sap_ekbe_data", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": "_fivetran_synced", "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "Purchasing document history", "columns": {"_fivetran_deleted": {"name": "_fivetran_deleted", "description": "Fivetran deletion marker", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "_fivetran_sap_archived": {"name": "_fivetran_sap_archived", "description": "Fivetran SAP archive marker", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "_fivetran_synced": {"name": "_fivetran_synced", "description": "Fivetran sync timestamp", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "arewb": {"name": "arewb", "description": "Amount in local currency", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "arewr": {"name": "arewr", "description": "Original amount in local currency", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "arewr_pop": {"name": "arewr_pop", "description": "Corrected local currency amount", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "areww": {"name": "areww", "description": "Valuated amount in local currency", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "bamng": {"name": "bamng", "description": "Quantity entered", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "bekkn": {"name": "bekkn", "description": "Account assignment number", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "belnr": {"name": "belnr", "description": "Document number", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "bewtp": {"name": "bewtp", "description": "Transaction type", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "bldat": {"name": "bldat", "description": "Document date", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "bpmng": {"name": "bpmng", "description": "Quantity in order price unit", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "bpmng_pop": {"name": "bpmng_pop", "description": "Adjusted quantity in order price unit", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "bpweb": {"name": "bpweb", "description": "Vendor document number", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "bpwes": {"name": "bpwes", "description": "Vendor item number", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "budat": {"name": "budat", "description": "Posting date", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "buzei": {"name": "buzei", "description": "Document item", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "bwart": {"name": "bwart", "description": "Movement type", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "bwtar": {"name": "bwtar", "description": "Valuation type", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "charg": {"name": "charg", "description": "Batch number", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "cpudt": {"name": "cpudt", "description": "Entry date", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "cputm": {"name": "cputm", "description": "Entry time", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "dmbtr": {"name": "dmbtr", "description": "Amount in local currency", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "dmbtr_pop": {"name": "dmbtr_pop", "description": "Adjusted amount in local currency", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "ebeln": {"name": "ebeln", "description": "Purchasing document", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "ebelp": {"name": "ebelp", "description": "Purchasing document item", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "elikz": {"name": "elikz", "description": "Final delivery flag", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "ematn": {"name": "ematn", "description": "Supplier material number", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "ernam": {"name": "ernam", "description": "Created by", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "et_upd": {"name": "et_upd", "description": "Update timestamp", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "etens": {"name": "etens", "description": "Confirmation sequence number", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "evere": {"name": "evere", "description": "ERS indicator", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "fsh_collection": {"name": "fsh_collection", "description": "Fashion collection", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "fsh_season": {"name": "fsh_season", "description": "Fashion season", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "fsh_season_year": {"name": "fsh_season_year", "description": "Fashion season year", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "fsh_theme": {"name": "fsh_theme", "description": "Fashion theme", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "gjahr": {"name": "gjahr", "description": "Fiscal year", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "grund": {"name": "grund", "description": "Movement reason", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "hswae": {"name": "hswae", "description": "Insurance currency", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "hvr_change_time": {"name": "hvr_change_time", "description": "HVR change timestamp", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "hvr_is_deleted": {"name": "hvr_is_deleted", "description": "HVR deletion flag", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "introw": {"name": "introw", "description": "Internal row number", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "inv_item_origin": {"name": "inv_item_origin", "description": "Invoice item origin", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "j_sc_die_comp_f": {"name": "j_sc_die_comp_f", "description": "Custom field", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "knumv": {"name": "knumv", "description": "Condition number", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "kudif": {"name": "kudif", "description": "Customer-specific field", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "lemin": {"name": "lemin", "description": "Minimum delivery quantity", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "lfbnr": {"name": "lfbnr", "description": "Vendor invoice number", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "lfgja": {"name": "lfgja", "description": "Vendor invoice fiscal year", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "lfpos": {"name": "lfpos", "description": "Vendor invoice item", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "lsmeh": {"name": "lsmeh", "description": "Order unit of measure", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "lsmng": {"name": "lsmng", "description": "Order unit quantity", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "mandt": {"name": "mandt", "description": "Client", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "matnr": {"name": "matnr", "description": "Material number", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "menge": {"name": "menge", "description": "Quantity", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "menge_pop": {"name": "menge_pop", "description": "Adjusted quantity", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "mwskz": {"name": "mwskz", "description": "Tax code", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "packno": {"name": "packno", "description": "Package number", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "reewr": {"name": "reewr", "description": "ERS amount", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "refwr": {"name": "refwr", "description": "Reference amount", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "retamt_fc": {"name": "retamt_fc", "description": "Retention amount (FC)", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "retamt_lc": {"name": "retamt_lc", "description": "Retention amount (LC)", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "retamtp_fc": {"name": "retamtp_fc", "description": "Retention percent (FC)", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "retamtp_lc": {"name": "retamtp_lc", "description": "Retention percent (LC)", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "rewrb": {"name": "rewrb", "description": "Tax amount", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "saprl": {"name": "saprl", "description": "SAP release", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "sgt_scat": {"name": "sgt_scat", "description": "Segmentation category", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "shkzg": {"name": "shkzg", "description": "Debit/credit indicator", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "srvpos": {"name": "srvpos", "description": "Service line number", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "vbeln_st": {"name": "vbeln_st", "description": "Sales document", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "vbelp_st": {"name": "vbelp_st", "description": "Sales document item", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "vgabe": {"name": "vgabe", "description": "Transaction/event type", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "waers": {"name": "waers", "description": "Currency key", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "weora": {"name": "weora", "description": "Goods receipt time", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "werks": {"name": "werks", "description": "Plant", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "wesbb": {"name": "wesbb", "description": "Quantity to be invoiced", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "wesbs": {"name": "wesbs", "description": "Quantity to be delivered", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "wkurs": {"name": "wkurs", "description": "Exchange rate", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "wrbtr": {"name": "wrbtr", "description": "Amount in document currency", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "wrbtr_pop": {"name": "wrbtr_pop", "description": "Adjusted amount in document currency", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "wrf_charstc1": {"name": "wrf_charstc1", "description": "Retail characteristic 1", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "wrf_charstc2": {"name": "wrf_charstc2", "description": "Retail characteristic 2", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "wrf_charstc3": {"name": "wrf_charstc3", "description": "Retail characteristic 3", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "xblnr": {"name": "xblnr", "description": "Reference document number", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "xmacc": {"name": "xmacc", "description": "Cross-company accounting flag", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "xunpl": {"name": "xunpl", "description": "Planned delivery costs flag", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "xwoff": {"name": "xwoff", "description": "Goods movement offset flag", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "xwsbr": {"name": "xwsbr", "description": "ERS settlement flag", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "zekkn": {"name": "zekkn", "description": "Account assignment sequence number", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": "_fivetran_synced", "loaded_at_query": null, "meta": {}, "tags": []}, "patch_path": null, "unrendered_config": {"loaded_at_field": "_fivetran_synced", "enabled": true, "loaded_at_query": null, "meta": {}, "tags": []}, "relation_name": "\"postgres\".\"public\".\"sap_ekbe_data\"", "created_at": 1756850331.8507016, "unrendered_database": "{% if target.type != 'spark' %}{{ var('sap_database', target.database) }}{% endif %}", "unrendered_schema": "{{ var('sap_schema', 'sap') }}", "doc_blocks": []}, "source.sap.sap.eket": {"database": "postgres", "schema": "public", "name": "eket", "resource_type": "source", "package_name": "sap", "path": "models/staging/src_sap.yml", "original_file_path": "models/staging/src_sap.yml", "unique_id": "source.sap.sap.eket", "fqn": ["sap", "staging", "sap", "eket"], "source_name": "sap", "source_description": "", "loader": "fivetran", "identifier": "sap_eket_data", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": "_fivetran_synced", "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "Schedule lines for purchasing document", "columns": {"_fivetran_deleted": {"name": "_fivetran_deleted", "description": "Fivetran deletion marker", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "_fivetran_sap_archived": {"name": "_fivetran_sap_archived", "description": "Fivetran SAP archive marker", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "_fivetran_synced": {"name": "_fivetran_synced", "description": "Fivetran sync timestamp", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "abart": {"name": "abart", "description": "Disposal type", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "altdt": {"name": "altdt", "description": "Date of last changes", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "ameng": {"name": "ameng", "description": "Quantity in unit of entry", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "anzsn": {"name": "anzsn", "description": "Number of serial numbers", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "aulwe": {"name": "aulwe", "description": "Delivery completed indicator", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "banfn": {"name": "banfn", "description": "Purchase requisition number", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "bedat": {"name": "bedat", "description": "Document date in purchasing document", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "bnfpo": {"name": "bnfpo", "description": "Item number of purchase requisition", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "budg_type": {"name": "budg_type", "description": "Budget type", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "cd_locno": {"name": "cd_locno", "description": "Location number for CD", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "cd_loctype": {"name": "cd_loctype", "description": "Type of CD location", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "charg": {"name": "charg", "description": "Batch number", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "check_type": {"name": "check_type", "description": "Type of check", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "chkom": {"name": "chkom", "description": "Confirmation control key", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "cncl_ancmnt_done": {"name": "cncl_ancmnt_done", "description": "Cancel announcement processed", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "dabmg": {"name": "dabmg", "description": "Quantity reduced", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "dat01": {"name": "dat01", "description": "Date field 1", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "dateshift_number": {"name": "dateshift_number", "description": "Number of days delivery date shifted", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "dl_id": {"name": "dl_id", "description": "Delivery ID", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "dng_date": {"name": "dng_date", "description": "Announcement date", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "dng_time": {"name": "dng_time", "description": "Announcement time", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "ebeln": {"name": "ebeln", "description": "Purchasing document number", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "ebelp": {"name": "ebelp", "description": "Item number of purchasing document", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "eindt": {"name": "eindt", "description": "Delivery date", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "eldat": {"name": "eldat", "description": "Goods receipt date", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "eluhr": {"name": "eluhr", "description": "Time of goods receipt", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "estkz": {"name": "estkz", "description": "Control indicator", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "etenr": {"name": "etenr", "description": "Schedule line number", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "fixkz": {"name": "fixkz", "description": "Fixed date and quantity indicator", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "fsh_os_id": {"name": "fsh_os_id", "description": "One-step ID for fashion", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "fsh_ralloc_qty": {"name": "fsh_ralloc_qty", "description": "Reallocation quantity", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "fsh_salloc_qty": {"name": "fsh_salloc_qty", "description": "Stock allocation quantity", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "geo_route": {"name": "geo_route", "description": "Geographical route", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "glmng": {"name": "glmng", "description": "Quantity of goods received", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "gts_ind": {"name": "gts_ind", "description": "GTS relevant indicator", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "handover_date": {"name": "handover_date", "description": "Handover date to forwarding agent", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "handoverdate": {"name": "handoverdate", "description": "Handover date", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "handovertime": {"name": "handovertime", "description": "Handover time", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "hvr_change_time": {"name": "hvr_change_time", "description": "HVR change timestamp", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "hvr_is_deleted": {"name": "hvr_is_deleted", "description": "HVR deletion flag", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "key_id": {"name": "key_id", "description": "Key ID", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "lddat": {"name": "lddat", "description": "Loading date", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "lduhr": {"name": "lduhr", "description": "Loading time", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "licha": {"name": "licha", "description": "Vendor batch number", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "lpein": {"name": "lpein", "description": "Price unit", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "mahnz": {"name": "mahnz", "description": "Reminder level", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "mandt": {"name": "mandt", "description": "Client", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "mbdat": {"name": "mbdat", "description": "GR planned date", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "mbuhr": {"name": "mbuhr", "description": "GR planned time", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "menge": {"name": "menge", "description": "Quantity", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "mng02": {"name": "mng02", "description": "Second quantity field", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "no_scem": {"name": "no_scem", "description": "No supply chain event management", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "nodisp": {"name": "nodisp", "description": "No display indicator", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "otb_curr": {"name": "otb_curr", "description": "Currency of OTB", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "otb_reason": {"name": "otb_reason", "description": "OTB blocking reason", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "otb_res_value": {"name": "otb_res_value", "description": "OTB release value", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "otb_spec_value": {"name": "otb_spec_value", "description": "OTB special release value", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "otb_status": {"name": "otb_status", "description": "OTB status", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "otb_value": {"name": "otb_value", "description": "OTB value", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "qunum": {"name": "qunum", "description": "Number of delivery note", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "qupos": {"name": "qupos", "description": "Delivery note item", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "route_gts": {"name": "route_gts", "description": "GTS route", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "rsnum": {"name": "rsnum", "description": "Reservation number", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "sernr": {"name": "sernr", "description": "Serial number", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "slfdt": {"name": "slfdt", "description": "Shelf life expiration date", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "spr_rsn_profile": {"name": "spr_rsn_profile", "description": "Profile for delivery date reason", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "tddat": {"name": "tddat", "description": "Transportation planning date", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "tduhr": {"name": "tduhr", "description": "Transportation planning time", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "tsp": {"name": "tsp", "description": "Service level", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "uzeit": {"name": "uzeit", "description": "Time of entry", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "verid": {"name": "verid", "description": "Production version", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "wadat": {"name": "wadat", "description": "Planned goods issue date", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "wamng": {"name": "wamng", "description": "Quantity of goods issued", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "wauhr": {"name": "wauhr", "description": "Goods issue time", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "wemng": {"name": "wemng", "description": "Quantity of goods received", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": "_fivetran_synced", "loaded_at_query": null, "meta": {}, "tags": []}, "patch_path": null, "unrendered_config": {"loaded_at_field": "_fivetran_synced", "enabled": true, "loaded_at_query": null, "meta": {}, "tags": []}, "relation_name": "\"postgres\".\"public\".\"sap_eket_data\"", "created_at": 1756850331.8516982, "unrendered_database": "{% if target.type != 'spark' %}{{ var('sap_database', target.database) }}{% endif %}", "unrendered_schema": "{{ var('sap_schema', 'sap') }}", "doc_blocks": []}, "source.sap.sap.ekko": {"database": "postgres", "schema": "public", "name": "ekko", "resource_type": "source", "package_name": "sap", "path": "models/staging/src_sap.yml", "original_file_path": "models/staging/src_sap.yml", "unique_id": "source.sap.sap.ekko", "fqn": ["sap", "staging", "sap", "ekko"], "source_name": "sap", "source_description": "", "loader": "fivetran", "identifier": "sap_ekko_data", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": "_fivetran_synced", "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "Purchasing document header", "columns": {"_fivetran_deleted": {"name": "_fivetran_deleted", "description": "Fivetran deletion marker", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "_fivetran_sap_archived": {"name": "_fivetran_sap_archived", "description": "Fivetran SAP archive marker", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "_fivetran_synced": {"name": "_fivetran_synced", "description": "Fivetran sync timestamp", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "abgru": {"name": "abgru", "description": "Reason for rejection", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "absgr": {"name": "absgr", "description": "Reason code", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "addnr": {"name": "addnr", "description": "Address number", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "adrnr": {"name": "adrnr", "description": "Vendor address number", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "aedat": {"name": "aedat", "description": "Document change date", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "angdt": {"name": "angdt", "description": "Quotation date", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "angnr": {"name": "angnr", "description": "Quotation number", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "aurel_allow": {"name": "aurel_allow", "description": "Allow automatic release", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "ausnr": {"name": "ausnr", "description": "Authorization number", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "autlf": {"name": "autlf", "description": "Complete delivery indicator", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "bedat": {"name": "bedat", "description": "Purchasing document date", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "bnddt": {"name": "bnddt", "description": "Deadline for submission", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "bsakz": {"name": "bsakz", "description": "Collective number indicator", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "bsart": {"name": "bsart", "description": "Purchasing document type", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "bstyp": {"name": "bstyp", "description": "Purchasing document category", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "budg_type": {"name": "budg_type", "description": "Budget type", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "bukrs": {"name": "bukrs", "description": "Company code", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "bwbdt": {"name": "bwbdt", "description": "Start of validity", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "check_type": {"name": "check_type", "description": "Type of check", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "con_distr_lev": {"name": "con_distr_lev", "description": "Contract distribution level", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "con_otb_req": {"name": "con_otb_req", "description": "OTB check required", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "con_prebook_lev": {"name": "con_prebook_lev", "description": "Prebook level for contract", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "contract_allow": {"name": "contract_allow", "description": "Contract type allowed", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "delper_allow": {"name": "delper_allow", "description": "Partial delivery allowed", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "description": {"name": "description", "description": "Header description", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "dpamt": {"name": "dpamt", "description": "Down payment amount", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "dpdat": {"name": "dpdat", "description": "Down payment date", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "dppct": {"name": "dppct", "description": "Down payment percentage", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "dptyp": {"name": "dptyp", "description": "Down payment category", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "ebeln": {"name": "ebeln", "description": "Purchasing document number", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "eindt": {"name": "eindt", "description": "Delivery date", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "eindt_allow": {"name": "eindt_allow", "description": "Allow delivery date changes", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "ekgrp": {"name": "ekgrp", "description": "Purchasing group", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "ekgrp_allow": {"name": "ekgrp_allow", "description": "Purchasing group allowed", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "ekorg": {"name": "ekorg", "description": "Purchasing organization", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "eq_eindt": {"name": "eq_eindt", "description": "Equal delivery date", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "eq_werks": {"name": "eq_werks", "description": "Equal plant", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "ernam": {"name": "ernam", "description": "Created by", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "exnum": {"name": "exnum", "description": "Export/import number", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "fixpo": {"name": "fixpo", "description": "Fixed vendor indicator", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "fixpo_allow": {"name": "fixpo_allow", "description": "Fixed vendor allowed", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "force_cnt": {"name": "force_cnt", "description": "Forced confirmation count", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "force_id": {"name": "force_id", "description": "Forced confirmation ID", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "frggr": {"name": "frggr", "description": "Release group", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "frgke": {"name": "frgke", "description": "Release code", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "frgrl": {"name": "frgrl", "description": "Release strategy", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "frgsx": {"name": "frgsx", "description": "Release status", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "frgzu": {"name": "frgzu", "description": "Release indicator", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "fsh_item_group": {"name": "fsh_item_group", "description": "Item group (fashion)", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "fsh_os_stg_change": {"name": "fsh_os_stg_change", "description": "One-step stage change", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "fsh_snst_status": {"name": "fsh_snst_status", "description": "Seasonal status", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "fsh_transaction": {"name": "fsh_transaction", "description": "Fashion transaction type", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "fsh_vas_last_item": {"name": "fsh_vas_last_item", "description": "Last VAS item", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "gwldt": {"name": "gwldt", "description": "Valid-to date", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "handoverloc": {"name": "handoverloc", "description": "Handover location", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "hierarchy_exists": {"name": "hierarchy_exists", "description": "Document hierarchy exists", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "hvr_change_time": {"name": "hvr_change_time", "description": "HVR change timestamp", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "hvr_is_deleted": {"name": "hvr_is_deleted", "description": "HVR deletion flag", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "ihran": {"name": "ihran", "description": "Vendor internal reference", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "ihrez": {"name": "ihrez", "description": "Vendor quotation number", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "inco1": {"name": "inco1", "description": "Incoterms (part 1)", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "inco2": {"name": "inco2", "description": "Incoterms (part 2)", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "inco2_l": {"name": "inco2_l", "description": "Incoterms long text 2", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "inco3_l": {"name": "inco3_l", "description": "Incoterms long text 3", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "incov": {"name": "incov", "description": "Incoterms version", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "kalsm": {"name": "kalsm", "description": "Calculation schema", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "kdatb": {"name": "kdatb", "description": "Valid-from date", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "kdate": {"name": "kdate", "description": "Pricing date", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "key_id": {"name": "key_id", "description": "Key ID", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "key_id_allow": {"name": "key_id_allow", "description": "Allow changes to key ID", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "knumv": {"name": "knumv", "description": "Document condition number", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "konnr": {"name": "konnr", "description": "Contract number", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "kornr": {"name": "kornr", "description": "Outline agreement item", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "ktwrt": {"name": "ktwrt", "description": "Total value of items", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "kufix": {"name": "kufix", "description": "Exchange rate fixed", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "kunnr": {"name": "kunnr", "description": "Customer number", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "lands": {"name": "lands", "description": "Country key", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "lblif": {"name": "lblif", "description": "Vendor delivery completed", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "legal_contract": {"name": "legal_contract", "description": "Legal contract ID", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "lifnr": {"name": "lifnr", "description": "Vendor account number", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "lifre": {"name": "lifre", "description": "Subcontractor number", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "llief": {"name": "llief", "description": "Main vendor", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "loekz": {"name": "loekz", "description": "Deletion indicator in purchasing document", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "logsy": {"name": "logsy", "description": "Logical system", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "lphis": {"name": "lphis", "description": "Change history", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "lponr": {"name": "lponr", "description": "Last PO number", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "ltsnr_allow": {"name": "ltsnr_allow", "description": "Allowed supplier route", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "mandt": {"name": "mandt", "description": "Client", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "memory": {"name": "memory", "description": "Buffer memory setting", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "memorytype": {"name": "memorytype", "description": "Buffer memory type", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "msr_id": {"name": "msr_id", "description": "Material substitution rule", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "otb_cond_type": {"name": "otb_cond_type", "description": "OTB condition type", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "otb_curr": {"name": "otb_curr", "description": "OTB currency", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "otb_level": {"name": "otb_level", "description": "OTB level", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "otb_reason": {"name": "otb_reason", "description": "Reason for OTB block", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "otb_res_value": {"name": "otb_res_value", "description": "Released value OTB", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "otb_spec_value": {"name": "otb_spec_value", "description": "Special release value OTB", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "otb_status": {"name": "otb_status", "description": "OTB check status", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "otb_value": {"name": "otb_value", "description": "OTB value", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "pincr": {"name": "pincr", "description": "Price increase percentage", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "pohf_type": {"name": "pohf_type", "description": "Purchase order history flag type", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "procstat": {"name": "procstat", "description": "Processing status", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "pstyp_allow": {"name": "pstyp_allow", "description": "Item category allowed", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "reason_code": {"name": "reason_code", "description": "Rejection reason", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "release_date": {"name": "release_date", "description": "Release date", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "reloc_id": {"name": "reloc_id", "description": "Relocation ID", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "reloc_seq_id": {"name": "reloc_seq_id", "description": "Relocation sequence ID", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "reswk": {"name": "reswk", "description": "Supplying plant", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "retpc": {"name": "retpc", "description": "Return percentage", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "rettp": {"name": "rettp", "description": "Return type", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "revno": {"name": "revno", "description": "Revision number", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "rlwrt": {"name": "rlwrt", "description": "Release value", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "scmproc": {"name": "scmproc", "description": "SCM process type", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "shipcond": {"name": "shipcond", "description": "Shipping conditions", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "source_logsys": {"name": "source_logsys", "description": "Source logical system", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "spr_rsn_profile": {"name": "spr_rsn_profile", "description": "Delivery date reason profile", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "spras": {"name": "spras", "description": "Language key", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "stafo": {"name": "stafo", "description": "Item status", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "stako": {"name": "stako", "description": "Header status", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "statu": {"name": "statu", "description": "Processing status", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "stceg": {"name": "stceg", "description": "VAT registration number", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "stceg_l": {"name": "stceg_l", "description": "VAT registration number (long)", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "submi": {"name": "submi", "description": "Subcontracting indicator", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "telf1": {"name": "telf1", "description": "Telephone number", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "threshold_exists": {"name": "threshold_exists", "description": "Threshold value exists", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "unsez": {"name": "unsez", "description": "Non-deductible input tax indicator", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "upinc": {"name": "upinc", "description": "Price update indicator", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "verkf": {"name": "verkf", "description": "Salesperson at vendor", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "vsart": {"name": "vsart", "description": "Shipping type", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "vzskz": {"name": "vzskz", "description": "Payment card plan", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "waers": {"name": "waers", "description": "Currency key", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "weakt": {"name": "weakt", "description": "Goods receipt indicator", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "werks_allow": {"name": "werks_allow", "description": "Plant allowed", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "wkurs": {"name": "wkurs", "description": "Exchange rate", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "zbd1p": {"name": "zbd1p", "description": "Cash discount percentage 1", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "zbd1t": {"name": "zbd1t", "description": "Cash discount days 1", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "zbd2p": {"name": "zbd2p", "description": "Cash discount percentage 2", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "zbd2t": {"name": "zbd2t", "description": "Cash discount days 2", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "zbd3t": {"name": "zbd3t", "description": "Net payment terms period", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "zterm": {"name": "zterm", "description": "Terms of payment key", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": "_fivetran_synced", "loaded_at_query": null, "meta": {}, "tags": []}, "patch_path": null, "unrendered_config": {"loaded_at_field": "_fivetran_synced", "enabled": true, "loaded_at_query": null, "meta": {}, "tags": []}, "relation_name": "\"postgres\".\"public\".\"sap_ekko_data\"", "created_at": 1756850331.8530312, "unrendered_database": "{% if target.type != 'spark' %}{{ var('sap_database', target.database) }}{% endif %}", "unrendered_schema": "{{ var('sap_schema', 'sap') }}", "doc_blocks": []}, "source.sap.sap.ekpo": {"database": "postgres", "schema": "public", "name": "ekpo", "resource_type": "source", "package_name": "sap", "path": "models/staging/src_sap.yml", "original_file_path": "models/staging/src_sap.yml", "unique_id": "source.sap.sap.ekpo", "fqn": ["sap", "staging", "sap", "ekpo"], "source_name": "sap", "source_description": "", "loader": "fivetran", "identifier": "sap_ekpo_data", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": "_fivetran_synced", "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "Purchasing document item", "columns": {"_accgo_is_co_rel": {"name": "_accgo_is_co_rel", "description": "CO-relevant indicator", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "_bev1_nedepfree": {"name": "_bev1_nedepfree", "description": "Non-deductible free indicator", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "_bev1_negen_item": {"name": "_bev1_negen_item", "description": "Beverage-specific generation item", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "_bev1_nestruccat": {"name": "_bev1_nestruccat", "description": "Beverage structure category", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "_fivetran_deleted": {"name": "_fivetran_deleted", "description": "Fivetran deletion marker", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "_fivetran_sap_archived": {"name": "_fivetran_sap_archived", "description": "Fivetran SAP archive marker", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "_fivetran_synced": {"name": "_fivetran_synced", "description": "Fivetran sync timestamp", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "_fivetran_rowid": {"name": "_fivetran_rowid", "description": "Fivetran unique row ID", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "abdat": {"name": "abdat", "description": "Delivery date", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "abeln": {"name": "abeln", "description": "Delivery document number", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "abelp": {"name": "abelp", "description": "Delivery document item", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "abftz": {"name": "abftz", "description": "Release documentation flag", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "abmng": {"name": "abmng", "description": "Quantity delivered", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "abskz": {"name": "abskz", "description": "Reason for rejection", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "abueb": {"name": "abueb", "description": "Quantity reversed", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "adrn2": {"name": "adrn2", "description": "Address number (item)", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "adrnr": {"name": "adrnr", "description": "Address number", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "advcode": {"name": "advcode", "description": "Advance payment code", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "aedat": {"name": "aedat", "description": "Last change date", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "afnam": {"name": "afnam", "description": "Requisitioner", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "agdat": {"name": "agdat", "description": "Date of purchase requisition", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "agmem": {"name": "agmem", "description": "Member responsible", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "aktnr": {"name": "aktnr", "description": "Promotional deal number", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "anfnr": {"name": "anfnr", "description": "Inquiry number", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "anfps": {"name": "anfps", "description": "Inquiry item", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "anzpu": {"name": "anzpu", "description": "Number of order price units", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "anzsn": {"name": "anzsn", "description": "Number of serial numbers", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "apoms": {"name": "apoms", "description": "APO master data synchronization", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "arsnr": {"name": "arsnr", "description": "Quotation number", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "arsps": {"name": "arsps", "description": "Quotation item", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "attyp": {"name": "attyp", "description": "Object category", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "aurel": {"name": "aurel", "description": "Automatic release indicator", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "banfn": {"name": "banfn", "description": "Purchase requisition number", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "bednr": {"name": "bednr", "description": "Requirement tracking number", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "berid": {"name": "berid", "description": "MRP area", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "blk_reason_id": {"name": "blk_reason_id", "description": "Block reason ID", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "blk_reason_txt": {"name": "blk_reason_txt", "description": "Block reason text", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "bnfpo": {"name": "bnfpo", "description": "Purchase requisition item", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "bonba": {"name": "bonba", "description": "Bonus buy indicator", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "bonus": {"name": "bonus", "description": "Bonus indicator", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "bprme": {"name": "bprme", "description": "Order price unit", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "bpumn": {"name": "bpumn", "description": "Denominator for order price unit", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "bpumz": {"name": "bpumz", "description": "Numerator for order price unit", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "brgew": {"name": "brgew", "description": "Gross weight", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "brtwr": {"name": "brtwr", "description": "Gross order value", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "bsgru": {"name": "bsgru", "description": "Purchasing group", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "bstae": {"name": "bstae", "description": "Item status", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "bstyp": {"name": "bstyp", "description": "Purchasing document category", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "budget_pd": {"name": "budget_pd", "description": "Budget period", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "bukrs": {"name": "bukrs", "description": "Company code", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "bwtar": {"name": "bwtar", "description": "Valuation type", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "bwtty": {"name": "bwtty", "description": "Valuation category", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "ccomp": {"name": "ccomp", "description": "Central company code", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "chg_fplnr": {"name": "chg_fplnr", "description": "Change number for production order", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "chg_srv": {"name": "chg_srv", "description": "Change number for service", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "cmpl_dlv_itm": {"name": "cmpl_dlv_itm", "description": "Complete delivery item", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "cnfm_qty": {"name": "cnfm_qty", "description": "Confirmed quantity", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "cons_order": {"name": "cons_order", "description": "Consignment order indicator", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "cqu_sar": {"name": "cqu_sar", "description": "Service acceptance request", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "cuobj": {"name": "cuobj", "description": "Configuration (internal object number)", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "diff_invoice": {"name": "diff_invoice", "description": "Invoice difference indicator", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "disub_kunnr": {"name": "disub_kunnr", "description": "Customer number of subcontractor", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "disub_owner": {"name": "disub_owner", "description": "Owner of subcontractor components", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "disub_posnr": {"name": "disub_posnr", "description": "Item number in sales order", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "disub_pspnr": {"name": "disub_pspnr", "description": "WBS element in subcontract", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "disub_sobkz": {"name": "disub_sobkz", "description": "Special stock indicator for subcontracting", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "disub_vbeln": {"name": "disub_vbeln", "description": "Sales order for subcontract", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "dpamt": {"name": "dpamt", "description": "Down payment amount", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "dpdat": {"name": "dpdat", "description": "Down payment date", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "dppct": {"name": "dppct", "description": "Down payment percentage", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "dptyp": {"name": "dptyp", "description": "Down payment category", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "drdat": {"name": "drdat", "description": "Confirmation date", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "druhr": {"name": "druhr", "description": "Confirmation time", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "drunr": {"name": "drunr", "description": "Confirmation number", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "ean11": {"name": "ean11", "description": "International Article Number (EAN/UPC)", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "ebeln": {"name": "ebeln", "description": "Purchasing document number", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "ebelp": {"name": "ebelp", "description": "Item number of purchasing document", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "ebon2": {"name": "ebon2", "description": "Additional bonus indicator 2", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "ebon3": {"name": "ebon3", "description": "Additional bonus indicator 3", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "ebonf": {"name": "ebonf", "description": "Bonus indicator for framework agreements", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "effwr": {"name": "effwr", "description": "Effective order value", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "eglkz": {"name": "eglkz", "description": "Final invoice indicator", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "ehtyp": {"name": "ehtyp", "description": "Purchasing document type (external)", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "eildt": {"name": "eildt", "description": "First delivery date", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "ekkol": {"name": "ekkol", "description": "Purchasing document header copy", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "elikz": {"name": "elikz", "description": "Final delivery indicator", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "ematn": {"name": "ematn", "description": "Material number (vendor)", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "emlif": {"name": "emlif", "description": "Vendor material number", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "emnfr": {"name": "emnfr", "description": "Manufacturer part number", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "empst": {"name": "empst", "description": "Price determination indicator", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "erekz": {"name": "erekz", "description": "Goods receipt indicator", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "etdrk": {"name": "etdrk", "description": "Schedule line blocked", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "etfz1": {"name": "etfz1", "description": "Delivery schedule split 1", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "etfz2": {"name": "etfz2", "description": "Delivery schedule split 2", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "evers": {"name": "evers", "description": "Shipping instructions", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "excpe": {"name": "excpe", "description": "Exception code", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "exlin": {"name": "exlin", "description": "External line number", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "exsnr": {"name": "exsnr", "description": "External serial number", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "ext_rfx_item": {"name": "ext_rfx_item", "description": "External bid invitation item", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "ext_rfx_number": {"name": "ext_rfx_number", "description": "External bid invitation number", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "ext_rfx_system": {"name": "ext_rfx_system", "description": "Source system for bid invitation", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "fabkz": {"name": "fabkz", "description": "Disposal indicator", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "ffzhi": {"name": "ffzhi", "description": "Free goods quantity", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "fipos": {"name": "fipos", "description": "Commitment item", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "fiscal_incentive": {"name": "fiscal_incentive", "description": "Fiscal incentive indicator", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "fiscal_incentive_id": {"name": "fiscal_incentive_id", "description": "Fiscal incentive ID", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "fistl": {"name": "fistl", "description": "Funds center", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "fixmg": {"name": "fixmg", "description": "Fixed quantity", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "fkber": {"name": "fkber", "description": "Functional area", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "fls_rsto": {"name": "fls_rsto", "description": "Release strategy origin", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "fmfgus_key": {"name": "fmfgus_key", "description": "FM key for U.S. federal government", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "fplnr": {"name": "fplnr", "description": "Maintenance plan", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "fsh_atp_date": {"name": "fsh_atp_date", "description": "Fashion ATP date", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "fsh_collection": {"name": "fsh_collection", "description": "Fashion collection", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "fsh_grid_cond_rec": {"name": "fsh_grid_cond_rec", "description": "Fashion grid condition record", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "fsh_item": {"name": "fsh_item", "description": "Fashion item number", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "fsh_item_group": {"name": "fsh_item_group", "description": "Fashion item group", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "fsh_psm_pfm_split": {"name": "fsh_psm_pfm_split", "description": "Budget split for fashion", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "fsh_season": {"name": "fsh_season", "description": "Fashion season", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "fsh_season_year": {"name": "fsh_season_year", "description": "Fashion season year", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "fsh_ss": {"name": "fsh_ss", "description": "Fashion season status", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "fsh_theme": {"name": "fsh_theme", "description": "Fashion theme", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "fsh_transaction": {"name": "fsh_transaction", "description": "Fashion transaction type", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "fsh_vas_prnt_id": {"name": "fsh_vas_prnt_id", "description": "VAS parent item ID", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "fsh_vas_rel": {"name": "fsh_vas_rel", "description": "VAS relevance indicator", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "geber": {"name": "geber", "description": "Fund", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "gewei": {"name": "gewei", "description": "Unit of weight", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "gnetwr": {"name": "gnetwr", "description": "Net order value", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "grant_nbr": {"name": "grant_nbr", "description": "Grant", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "handoverloc": {"name": "handoverloc", "description": "Handover location", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "hvr_change_time": {"name": "hvr_change_time", "description": "HVR change timestamp", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "hvr_is_deleted": {"name": "hvr_is_deleted", "description": "HVR deletion flag", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "idnlf": {"name": "idnlf", "description": "International vendor number", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "inco1": {"name": "inco1", "description": "Incoterms (Part 1)", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "inco2": {"name": "inco2", "description": "Incoterms (Part 2)", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "inco2_l": {"name": "inco2_l", "description": "Incoterms long text 2", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "inco3_l": {"name": "inco3_l", "description": "Incoterms long text 3", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "infnr": {"name": "infnr", "description": "Info record number", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "insmk": {"name": "insmk", "description": "Stock type", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "insnc": {"name": "insnc", "description": "Inspection control indicator", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "iprkz": {"name": "iprkz", "description": "Interest indicator", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "itcons": {"name": "itcons", "description": "Consignment indicator", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "iuid_relevant": {"name": "iuid_relevant", "description": "UID-relevant item", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "j_1aidatep": {"name": "j_1aidatep", "description": "Excise invoice date", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "j_1aindxp": {"name": "j_1aindxp", "description": "Excise indicator", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "j_1bindust": {"name": "j_1bindust", "description": "Industry type", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "j_1bmatorg": {"name": "j_1bmatorg", "description": "Material origin", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "j_1bmatuse": {"name": "j_1bmatuse", "description": "Material usage", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "j_1bnbm": {"name": "j_1bnbm", "description": "Excise number", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "j_1bownpro": {"name": "j_1bownpro", "description": "Own process indicator", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "kanba": {"name": "kanba", "description": "Kanban indicator", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "kblnr": {"name": "kblnr", "description": "Document number for earmarked funds", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "kblpos": {"name": "kblpos", "description": "Document item for earmarked funds", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "knttp": {"name": "knttp", "description": "Account assignment category", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "ko_gsber": {"name": "ko_gsber", "description": "Partner business area", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "ko_pargb": {"name": "ko_pargb", "description": "Partner business area (alternate)", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "ko_pprctr": {"name": "ko_pprctr", "description": "Partner profit center", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "ko_prctr": {"name": "ko_prctr", "description": "Profit center", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "kolif": {"name": "kolif", "description": "Subcontracting vendor", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "konnr": {"name": "konnr", "description": "Agreement number", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "ktmng": {"name": "ktmng", "description": "Target quantity", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "ktpnr": {"name": "ktpnr", "description": "Subcontracting number", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "kunnr": {"name": "kunnr", "description": "Customer number", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "kzabs": {"name": "kzabs", "description": "Delivery completed indicator", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "kzbws": {"name": "kzbws", "description": "Value not deductible", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "kzfme": {"name": "kzfme", "description": "Indicator for FM assignment", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "kzkfg": {"name": "kzkfg", "description": "Configurable material", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "kzstu": {"name": "kzstu", "description": "Batch split indicator", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "kztlf": {"name": "kztlf", "description": "Indicator third-party order", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "kzvbr": {"name": "kzvbr", "description": "Bill of materials explosion", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "kzwi1": {"name": "kzwi1", "description": "Subtotal 1", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "kzwi2": {"name": "kzwi2", "description": "Subtotal 2", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "kzwi3": {"name": "kzwi3", "description": "Subtotal 3", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "kzwi4": {"name": "kzwi4", "description": "Subtotal 4", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "kzwi5": {"name": "kzwi5", "description": "Subtotal 5", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "kzwi6": {"name": "kzwi6", "description": "Subtotal 6", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "labnr": {"name": "labnr", "description": "Storage bin", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "lblkz": {"name": "lblkz", "description": "Labeling indicator", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "lebre": {"name": "lebre", "description": "GR-based invoice verification", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "lewed": {"name": "lewed", "description": "Goods receipt indicator", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "lfret": {"name": "lfret", "description": "Returns indicator", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "lgort": {"name": "lgort", "description": "Storage location", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "lmein": {"name": "lmein", "description": "Delivery unit", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "loekz": {"name": "loekz", "description": "Deletion indicator", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "ltsnr": {"name": "ltsnr", "description": "Vendor subrange", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "mahn1": {"name": "mahn1", "description": "Reminder level 1", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "mahn2": {"name": "mahn2", "description": "Reminder level 2", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "mahn3": {"name": "mahn3", "description": "Reminder level 3", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "mahnz": {"name": "mahnz", "description": "Number of reminders", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "mandt": {"name": "mandt", "description": "Client", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "manual_tc_reason": {"name": "manual_tc_reason", "description": "Manual tax code reason", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "matkl": {"name": "matkl", "description": "Material group", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "matnr": {"name": "matnr", "description": "Material number", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "meins": {"name": "meins", "description": "Order unit", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "menge": {"name": "menge", "description": "Quantity", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "meprf": {"name": "meprf", "description": "Pricing reference material", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "mfrgr": {"name": "mfrgr", "description": "Material freight group", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "mfrnr": {"name": "mfrnr", "description": "Manufacturer number", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "mfrpn": {"name": "mfrpn", "description": "Manufacturer part number", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "mfzhi": {"name": "mfzhi", "description": "Free goods quantity", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "mhdrz": {"name": "mhdrz", "description": "Minimum remaining shelf life", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "mlmaa": {"name": "mlmaa", "description": "Material ledger indicator", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "mprof": {"name": "mprof", "description": "MRP profile", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "mrpind": {"name": "mrpind", "description": "MRP indicator", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "mtart": {"name": "mtart", "description": "Material type", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "mwskz": {"name": "mwskz", "description": "Tax code", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "navnw": {"name": "navnw", "description": "Net invoice value", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "netpr": {"name": "netpr", "description": "Net price", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "netwr": {"name": "netwr", "description": "Net order value", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "nfabd": {"name": "nfabd", "description": "Planned delivery date", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "nlabd": {"name": "nlabd", "description": "Next delivery date", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "notkz": {"name": "notkz", "description": "Non-stock material indicator", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "novet": {"name": "novet", "description": "No GR-based invoice verification", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "nrfhg": {"name": "nrfhg", "description": "Sequential number of account assignment", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "ntgew": {"name": "ntgew", "description": "Net weight", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "oia_baselo": {"name": "oia_baselo", "description": "Base location for OIA", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "oia_ipmvat": {"name": "oia_ipmvat", "description": "IPM VAT indicator", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "oia_spltiv": {"name": "oia_spltiv", "description": "Invoice split indicator", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "oibasprod": {"name": "oibasprod", "description": "OIA base product", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "oic_adestn": {"name": "oic_adestn", "description": "Destination address", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "oic_aorgin": {"name": "oic_aorgin", "description": "Origin address", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "oic_dcityc": {"name": "oic_dcityc", "description": "Destination city code", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "oic_dcounc": {"name": "oic_dcounc", "description": "Destination country code", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "oic_dland1": {"name": "oic_dland1", "description": "Destination country", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "oic_dregio": {"name": "oic_dregio", "description": "Destination region", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "oic_lifnr": {"name": "oic_lifnr", "description": "Vendor number for OIC", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "oic_mot": {"name": "oic_mot", "description": "Mode of transport", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "oic_ocityc": {"name": "oic_ocityc", "description": "Origin city code", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "oic_ocounc": {"name": "oic_ocounc", "description": "Origin country code", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "oic_oland1": {"name": "oic_oland1", "description": "Origin country", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "oic_oregio": {"name": "oic_oregio", "description": "Origin region", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "oic_pbatch": {"name": "oic_pbatch", "description": "Planned batch", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "oic_pdestn": {"name": "oic_pdestn", "description": "Planned destination", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "oic_porgin": {"name": "oic_porgin", "description": "Planned origin", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "oic_ptrip": {"name": "oic_ptrip", "description": "Planned trip ID", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "oic_truckn": {"name": "oic_truckn", "description": "Truck number", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "oicertf1": {"name": "oicertf1", "description": "OI certificate 1", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "oicertf1_gi": {"name": "oicertf1_gi", "description": "OI certificate 1 GI", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "oid_extbol": {"name": "oid_extbol", "description": "External bill of lading", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "oid_miscdl": {"name": "oid_miscdl", "description": "Miscellaneous delivery", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "oidatfm1": {"name": "oidatfm1", "description": "Date from OI", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "oidatfm1_gi": {"name": "oidatfm1_gi", "description": "Date from OI GI", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "oidatto1": {"name": "oidatto1", "description": "Date to OI", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "oidatto1_gi": {"name": "oidatto1_gi", "description": "Date to OI GI", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "oiedbal": {"name": "oiedbal", "description": "Opening inventory balance", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "oiedbal_gi": {"name": "oiedbal_gi", "description": "Opening inventory balance GI", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "oiedbalm": {"name": "oiedbalm", "description": "Opening measured balance", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "oiedbalm_gi": {"name": "oiedbalm_gi", "description": "Opening measured balance GI", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "oiedok": {"name": "oiedok", "description": "Document for OI", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "oiedok_gi": {"name": "oiedok_gi", "description": "Document for OI GI", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "oiexgnum": {"name": "oiexgnum", "description": "Exchange group number", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "oiexgtyp": {"name": "oiexgtyp", "description": "Exchange type", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "oiextnr": {"name": "oiextnr", "description": "External number", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "oifeech": {"name": "oifeech", "description": "Fee charge", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "oifeedt": {"name": "oifeedt", "description": "Fee date", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "oifeetot": {"name": "oifeetot", "description": "Total fee", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "oiferp": {"name": "oiferp", "description": "ERP fee ID", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "oiftind": {"name": "oiftind", "description": "Freight indicator", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "oighndl": {"name": "oighndl", "description": "Handling type", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "oih_folqty": {"name": "oih_folqty", "description": "Follow-on quantity", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "oih_folqty_gi": {"name": "oih_folqty_gi", "description": "Follow-on quantity GI", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "oih_lcfol": {"name": "oih_lcfol", "description": "Local follow-on indicator", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "oih_lcfol_gi": {"name": "oih_lcfol_gi", "description": "Local follow-on indicator GI", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "oih_licin": {"name": "oih_licin", "description": "License in", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "oih_licin_gi": {"name": "oih_licin_gi", "description": "License in GI", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "oih_lictp": {"name": "oih_lictp", "description": "License type", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "oih_lictp_gi": {"name": "oih_lictp_gi", "description": "License type GI", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "oihantyp": {"name": "oihantyp", "description": "Handling type", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "oihantyp_gi": {"name": "oihantyp_gi", "description": "Handling type GI", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "oiinex": {"name": "oiinex", "description": "Include/exclude indicator", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "oiinex_gi": {"name": "oiinex_gi", "description": "Include/exclude GI", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "oiitmnr": {"name": "oiitmnr", "description": "Item number", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "oimatcyc": {"name": "oimatcyc", "description": "Material cycle", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "oinetcyc": {"name": "oinetcyc", "description": "Netting cycle", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "oioilcon": {"name": "oioilcon", "description": "Oil content", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "oipipeval": {"name": "oipipeval", "description": "Pipeline value", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "oipricie": {"name": "oipricie", "description": "Price internal/external", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "oipriop": {"name": "oipriop", "description": "Pricing option", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "oisbrel": {"name": "oisbrel", "description": "Subsequent billing release", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "oitaxcon": {"name": "oitaxcon", "description": "Tax condition", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "oitaxfrom": {"name": "oitaxfrom", "description": "Tax origin", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "oitaxgrp": {"name": "oitaxgrp", "description": "Tax group", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "oitaxgrp_gi": {"name": "oitaxgrp_gi", "description": "Tax group GI", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "oitaxto": {"name": "oitaxto", "description": "Tax destination", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "oitrind": {"name": "oitrind", "description": "Transport indicator", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "oitrkjr": {"name": "oitrkjr", "description": "Transport key junior", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "oitrknr": {"name": "oitrknr", "description": "Transport key number", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "oitxcon1": {"name": "oitxcon1", "description": "Tax condition 1", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "oitxcon2": {"name": "oitxcon2", "description": "Tax condition 2", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "oitxcon3": {"name": "oitxcon3", "description": "Tax condition 3", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "oitxcon4": {"name": "oitxcon4", "description": "Tax condition 4", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "oitxcon5": {"name": "oitxcon5", "description": "Tax condition 5", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "oitxcon6": {"name": "oitxcon6", "description": "Tax condition 6", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "oiumbar": {"name": "oiumbar", "description": "Measured quantity unit", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "oivatf": {"name": "oivatf", "description": "VAT flag", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "oivath": {"name": "oivath", "description": "VAT handling", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "packno": {"name": "packno", "description": "Package number", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "peinh": {"name": "peinh", "description": "Price unit", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "plifz": {"name": "plifz", "description": "Planned delivery time", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "pol_id": {"name": "pol_id", "description": "Purchasing order list ID", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "prdat": {"name": "prdat", "description": "Price determination date", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "prio_req": {"name": "prio_req", "description": "Requirement priority", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "prio_urg": {"name": "prio_urg", "description": "Urgency priority", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "prsdr": {"name": "prsdr", "description": "Price date category", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "pstyp": {"name": "pstyp", "description": "Item category", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "punei": {"name": "punei", "description": "Price unit for order", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "put_back": {"name": "put_back", "description": "Put-back indicator", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "rdprf": {"name": "rdprf", "description": "Rounding profile", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "reason_code": {"name": "reason_code", "description": "Rejection reason code", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "ref_item": {"name": "ref_item", "description": "Reference item", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "refsite": {"name": "refsite", "description": "Reference site", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "repos": {"name": "repos", "description": "Repositioning indicator", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "reslo": {"name": "reslo", "description": "Reservation location", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "retpc": {"name": "retpc", "description": "Returns percentage", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "retpo": {"name": "retpo", "description": "Returns indicator", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "revlv": {"name": "revlv", "description": "Revision level", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "saisj": {"name": "saisj", "description": "Season year", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "saiso": {"name": "saiso", "description": "Season", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "satnr": {"name": "satnr", "description": "Cross-plant configuration", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "schpr": {"name": "schpr", "description": "Schedule margin key", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "sernp": {"name": "sernp", "description": "Serial number profile", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "serru": {"name": "serru", "description": "Serial number requirement", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "sf_txjcd": {"name": "sf_txjcd", "description": "SAP Fieldglass tax jurisdiction", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "sgt_rcat": {"name": "sgt_rcat", "description": "Segmentation requirement category", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "sgt_scat": {"name": "sgt_scat", "description": "Segmentation category", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "sikgr": {"name": "sikgr", "description": "Account assignment group", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "sktof": {"name": "sktof", "description": "Cash discount indicator", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "sobkz": {"name": "sobkz", "description": "Special stock indicator", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "source_id": {"name": "source_id", "description": "Source ID", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "source_key": {"name": "source_key", "description": "Source key", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "spe_abgru": {"name": "spe_abgru", "description": "Reason for rejection (supplier)", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "spe_chng_sys": {"name": "spe_chng_sys", "description": "Change system", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "spe_cq_ctrltype": {"name": "spe_cq_ctrltype", "description": "Control type for batch", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "spe_cq_nocq": {"name": "spe_cq_nocq", "description": "No batch determination", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "spe_crm_fkrel": {"name": "spe_crm_fkrel", "description": "CRM follow-up reference", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "spe_crm_ref_item": {"name": "spe_crm_ref_item", "description": "CRM reference item", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "spe_crm_ref_so": {"name": "spe_crm_ref_so", "description": "CRM reference sales order", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "spe_crm_so": {"name": "spe_crm_so", "description": "CRM sales order", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "spe_crm_so_item": {"name": "spe_crm_so_item", "description": "CRM sales order item", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "spe_ewm_dtc": {"name": "spe_ewm_dtc", "description": "EWM delivery type control", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "spe_insmk_src": {"name": "spe_insmk_src", "description": "Stock type from source", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "spinf": {"name": "spinf", "description": "Info record update", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "srm_contract_id": {"name": "srm_contract_id", "description": "SRM contract ID", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "srm_contract_itm": {"name": "srm_contract_itm", "description": "SRM contract item", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "srv_bas_com": {"name": "srv_bas_com", "description": "Service-based component", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "ssqss": {"name": "ssqss", "description": "Subsequence number", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "stafo": {"name": "stafo", "description": "Status for follow-on documents", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "stapo": {"name": "stapo", "description": "Status of PO item", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "statu": {"name": "statu", "description": "Status", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "status": {"name": "status", "description": "Item status", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "tax_subject_st": {"name": "tax_subject_st", "description": "Tax subject status", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "tc_aut_det": {"name": "tc_aut_det", "description": "Tax code auto determination", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "techs": {"name": "techs", "description": "Technical spec reference", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "trmrisk_relevant": {"name": "trmrisk_relevant", "description": "Treasury risk-relevant", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "twrkz": {"name": "twrkz", "description": "Planning plant", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "txjcd": {"name": "txjcd", "description": "Tax jurisdiction code", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "txz01": {"name": "txz01", "description": "Item text", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "tzonrc": {"name": "tzonrc", "description": "Time zone rule code", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "uebpo": {"name": "uebpo", "description": "Overdelivery tolerance", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "uebtk": {"name": "uebtk", "description": "Unlimited overdelivery", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "uebto": {"name": "uebto", "description": "Overdelivery limit", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "umren": {"name": "umren", "description": "Conversion denominator", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "umrez": {"name": "umrez", "description": "Conversion numerator", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "umsok": {"name": "umsok", "description": "Stock transfer", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "untto": {"name": "untto", "description": "Quantity in unit of issue", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "uptyp": {"name": "uptyp", "description": "Update type", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "upvor": {"name": "upvor", "description": "Planned delivery schedule", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "usequ": {"name": "usequ", "description": "Sequence number", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "voleh": {"name": "voleh", "description": "Volume unit", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "volum": {"name": "volum", "description": "Volume", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "vorab": {"name": "vorab", "description": "Advance delivery allowed", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "vrtkz": {"name": "vrtkz", "description": "Distribution indicator", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "vsart": {"name": "vsart", "description": "Shipping type", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "wabwe": {"name": "wabwe", "description": "Goods receipt indicator", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "webaz": {"name": "webaz", "description": "GR quantity posted", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "webre": {"name": "webre", "description": "Invoice receipt expected", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "weora": {"name": "weora", "description": "Time of goods receipt", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "wepos": {"name": "wepos", "description": "Goods receipt processed", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "werks": {"name": "werks", "description": "Plant", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "weunb": {"name": "weunb", "description": "Goods receipt non-valuated", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "wrf_charstc1": {"name": "wrf_charstc1", "description": "Retail characteristic 1", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "wrf_charstc2": {"name": "wrf_charstc2", "description": "Retail characteristic 2", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "wrf_charstc3": {"name": "wrf_charstc3", "description": "Retail characteristic 3", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "xconditions": {"name": "xconditions", "description": "Conditions exist", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "xersy": {"name": "xersy", "description": "Evaluated receipt settlement", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "xoblr": {"name": "xoblr", "description": "Obligation relevant", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "zgtyp": {"name": "zgtyp", "description": "Payment type", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "zwert": {"name": "zwert", "description": "Value", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": "_fivetran_synced", "loaded_at_query": null, "meta": {}, "tags": []}, "patch_path": null, "unrendered_config": {"loaded_at_field": "_fivetran_synced", "enabled": true, "loaded_at_query": null, "meta": {}, "tags": []}, "relation_name": "\"postgres\".\"public\".\"sap_ekpo_data\"", "created_at": 1756850331.8562553, "unrendered_database": "{% if target.type != 'spark' %}{{ var('sap_database', target.database) }}{% endif %}", "unrendered_schema": "{{ var('sap_schema', 'sap') }}", "doc_blocks": []}, "source.sap.sap.faglflexa": {"database": "postgres", "schema": "public", "name": "faglflexa", "resource_type": "source", "package_name": "sap", "path": "models/staging/src_sap.yml", "original_file_path": "models/staging/src_sap.yml", "unique_id": "source.sap.sap.faglflexa", "fqn": ["sap", "staging", "sap", "faglflexa"], "source_name": "sap", "source_description": "", "loader": "fivetran", "identifier": "sap_faglflexa_data", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": "_fivetran_synced", "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "General ledger (Actual line items)", "columns": {"_fivetran_deleted": {"name": "_fivetran_deleted", "description": "Fivetran deletion marker", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "_fivetran_rowid": {"name": "_fivetran_rowid", "description": "Fivetran unique row ID", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "_fivetran_synced": {"name": "_fivetran_synced", "description": "Fivetran sync timestamp", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "activ": {"name": "activ", "description": "FI-SL business transaction", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "awtyp": {"name": "awtyp", "description": "Reference transaction", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "belnr": {"name": "belnr", "description": "Accounting document number", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "bschl": {"name": "bschl", "description": "Posting key", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "bstat": {"name": "bstat", "description": "Document status", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "budat": {"name": "budat", "description": "Posting date in the document", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "buzei": {"name": "buzei", "description": "Number of line item within accounting document", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "cost_elem": {"name": "cost_elem", "description": "Cost element", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "docln": {"name": "docln", "description": "Six-character posting item for ledger", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "docnr": {"name": "docnr", "description": "Accounting document number", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "drcrk": {"name": "drcrk", "description": "Debt/credit indicator", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "gjahr": {"name": "gjahr", "description": "Fiscal year", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "hsl": {"name": "hsl", "description": "Value in local currency", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "kokrs": {"name": "kokrs", "description": "Controlling area", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "ksl": {"name": "ksl", "description": "Value in group currency", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "linetype": {"name": "linetype", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "logsys": {"name": "logsys", "description": "Logical system", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "msl": {"name": "msl", "description": "Quantity", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "osl": {"name": "osl", "description": "Value in another currency", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "poper": {"name": "poper", "description": "Posting period", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "pprctr": {"name": "pprctr", "description": "Partner profit center", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "prctr": {"name": "prctr", "description": "Profit center", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "psegment": {"name": "psegment", "description": "Partner segment for segmental reporting", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "racct": {"name": "racct", "description": "Account number", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "rassc": {"name": "rassc", "description": "Company id of trading partner", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "rbukrs": {"name": "rbukrs", "description": "Company code", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "rbusa": {"name": "rbusa", "description": "Business area", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "rclnt": {"name": "rclnt", "description": "Client", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "rcntr": {"name": "rcntr", "description": "Cost center", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "rfarea": {"name": "rfarea", "description": "Functional area", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "rldnr": {"name": "rldnr", "description": "Ledger in genral ledger accounting", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "rmvct": {"name": "rmvct", "description": "Transaction type", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "rrcty": {"name": "rrcty", "description": "Record type", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "rtcur": {"name": "rtcur", "description": "Currency key", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "runit": {"name": "runit", "description": "Base unit of measure", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "rvers": {"name": "rvers", "description": "Version", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "rwcur": {"name": "rwcur", "description": "Currency key of the original transaction currency", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "ryear": {"name": "ryear", "description": "Fiscal year", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "sbusa": {"name": "sbusa", "description": "Trading partner's business area", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "scntr": {"name": "scntr", "description": "Sender cost center", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "segment": {"name": "segment", "description": "Segment for segmental reporting", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "sfarea": {"name": "sfarea", "description": "Partner functional area", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "timestamp": {"name": "timestamp", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "tsl": {"name": "tsl", "description": "Value in transaction currency", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "usnam": {"name": "usnam", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "wsl": {"name": "wsl", "description": "Value in original transaction currency", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "xsplitmod": {"name": "xsplitmod", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "zzspreg": {"name": "zzspreg", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": "_fivetran_synced", "loaded_at_query": null, "meta": {}, "tags": []}, "patch_path": null, "unrendered_config": {"loaded_at_field": "_fivetran_synced", "enabled": true, "loaded_at_query": null, "meta": {}, "tags": []}, "relation_name": "\"postgres\".\"public\".\"sap_faglflexa_data\"", "created_at": 1756850331.8570688, "unrendered_database": "{% if target.type != 'spark' %}{{ var('sap_database', target.database) }}{% endif %}", "unrendered_schema": "{{ var('sap_schema', 'sap') }}", "doc_blocks": []}, "source.sap.sap.faglflext": {"database": "postgres", "schema": "public", "name": "faglflext", "resource_type": "source", "package_name": "sap", "path": "models/staging/src_sap.yml", "original_file_path": "models/staging/src_sap.yml", "unique_id": "source.sap.sap.faglflext", "fqn": ["sap", "staging", "sap", "faglflext"], "source_name": "sap", "source_description": "", "loader": "fivetran", "identifier": "sap_faglflext_data", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": "_fivetran_synced", "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "General ledger (Totals)", "columns": {"_fivetran_deleted": {"name": "_fivetran_deleted", "description": "Fivetran deletion marker", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "_fivetran_rowid": {"name": "_fivetran_rowid", "description": "Fivetran unique row ID", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "_fivetran_synced": {"name": "_fivetran_synced", "description": "Fivetran sync timestamp", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "activ": {"name": "activ", "description": "FI-SL business transaction", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "awtyp": {"name": "awtyp", "description": "Reference transaction", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "cost_elem": {"name": "cost_elem", "description": "Cost element", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "drcrk": {"name": "drcrk", "description": "Debit/credit indicator", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "hsl01": {"name": "hsl01", "description": "Total of transactions of the period in local currency", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "hsl02": {"name": "hsl02", "description": "Total of transactions of the period in local currency", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "hsl03": {"name": "hsl03", "description": "Total of transactions of the period in local currency", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "hsl04": {"name": "hsl04", "description": "Total of transactions of the period in local currency", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "hsl05": {"name": "hsl05", "description": "Total of transactions of the period in local currency", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "hsl06": {"name": "hsl06", "description": "Total of transactions of the period in local currency", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "hsl07": {"name": "hsl07", "description": "Total of transactions of the period in local currency", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "hsl08": {"name": "hsl08", "description": "Total of transactions of the period in local currency", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "hsl09": {"name": "hsl09", "description": "Total of transactions of the period in local currency", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "hsl10": {"name": "hsl10", "description": "Total of transactions of the period in local currency", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "hsl11": {"name": "hsl11", "description": "Total of transactions of the period in local currency", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "hsl12": {"name": "hsl12", "description": "Total of transactions of the period in local currency", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "hsl13": {"name": "hsl13", "description": "Total of transactions of the period in local currency", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "hsl14": {"name": "hsl14", "description": "Total of transactions of the period in local currency", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "hsl15": {"name": "hsl15", "description": "Total of transactions of the period in local currency", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "hsl16": {"name": "hsl16", "description": "Total of transactions of the period in local currency", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "hslvt": {"name": "hslvt", "description": "Balance carried forward in local currency", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "kokrs": {"name": "kokrs", "description": "Controlling area", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "ksl01": {"name": "ksl01", "description": "Total of transactions of the period in group currency", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "ksl02": {"name": "ksl02", "description": "Total of transactions of the period in group currency", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "ksl03": {"name": "ksl03", "description": "Total of transactions of the period in group currency", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "ksl04": {"name": "ksl04", "description": "Total of transactions of the period in group currency", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "ksl05": {"name": "ksl05", "description": "Total of transactions of the period in group currency", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "ksl06": {"name": "ksl06", "description": "Total of transactions of the period in group currency", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "ksl07": {"name": "ksl07", "description": "Total of transactions of the period in group currency", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "ksl08": {"name": "ksl08", "description": "Total of transactions of the period in group currency", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "ksl09": {"name": "ksl09", "description": "Total of transactions of the period in group currency", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "ksl10": {"name": "ksl10", "description": "Total of transactions of the period in group currency", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "ksl11": {"name": "ksl11", "description": "Total of transactions of the period in group currency", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "ksl12": {"name": "ksl12", "description": "Total of transactions of the period in group currency", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "ksl13": {"name": "ksl13", "description": "Total of transactions of the period in group currency", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "ksl14": {"name": "ksl14", "description": "Total of transactions of the period in group currency", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "ksl15": {"name": "ksl15", "description": "Total of transactions of the period in group currency", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "ksl16": {"name": "ksl16", "description": "Total of transactions of the period in group currency", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "kslvt": {"name": "kslvt", "description": "Balance carried forward in group currency", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "logsys": {"name": "logsys", "description": "Logical system", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "msl01": {"name": "msl01", "description": "Total of transactions of the period in index-based currency", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "msl02": {"name": "msl02", "description": "Total of transactions of the period in index-based currency", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "msl03": {"name": "msl03", "description": "Total of transactions of the period in index-based currency", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "msl04": {"name": "msl04", "description": "Total of transactions of the period in index-based currency", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "msl05": {"name": "msl05", "description": "Total of transactions of the period in index-based currency", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "msl06": {"name": "msl06", "description": "Total of transactions of the period in index-based currency", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "msl07": {"name": "msl07", "description": "Total of transactions of the period in index-based currency", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "msl08": {"name": "msl08", "description": "Total of transactions of the period in index-based currency", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "msl09": {"name": "msl09", "description": "Total of transactions of the period in index-based currency", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "msl10": {"name": "msl10", "description": "Total of transactions of the period in index-based currency", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "msl11": {"name": "msl11", "description": "Total of transactions of the period in index-based currency", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "msl12": {"name": "msl12", "description": "Total of transactions of the period in index-based currency", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "msl13": {"name": "msl13", "description": "Total of transactions of the period in index-based currency", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "msl14": {"name": "msl14", "description": "Total of transactions of the period in index-based currency", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "msl15": {"name": "msl15", "description": "Total of transactions of the period in index-based currency", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "msl16": {"name": "msl16", "description": "Total of transactions of the period in index-based currency", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "mslvt": {"name": "mslvt", "description": "Balance carried forward in index-based currency", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "objnr00": {"name": "objnr00", "description": "Object number for table group", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "objnr01": {"name": "objnr01", "description": "Object number for table group", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "objnr02": {"name": "objnr02", "description": "Object number for table group", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "objnr03": {"name": "objnr03", "description": "Object number for table group", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "objnr04": {"name": "objnr04", "description": "Object number for table group", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "objnr05": {"name": "objnr05", "description": "Object number for table group", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "objnr06": {"name": "objnr06", "description": "Object number for table group", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "objnr07": {"name": "objnr07", "description": "Object number for table group", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "objnr08": {"name": "objnr08", "description": "Object number for table group", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "osl01": {"name": "osl01", "description": "Total transactions for the period in the fourth currency", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "osl02": {"name": "osl02", "description": "Total transactions for the period in the fourth currency", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "osl03": {"name": "osl03", "description": "Total transactions for the period in the fourth currency", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "osl04": {"name": "osl04", "description": "Total transactions for the period in the fourth currency", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "osl05": {"name": "osl05", "description": "Total transactions for the period in the fourth currency", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "osl06": {"name": "osl06", "description": "Total transactions for the period in the fourth currency", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "osl07": {"name": "osl07", "description": "Total transactions for the period in the fourth currency", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "osl08": {"name": "osl08", "description": "Total transactions for the period in the fourth currency", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "osl09": {"name": "osl09", "description": "Total transactions for the period in the fourth currency", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "osl10": {"name": "osl10", "description": "Total transactions for the period in the fourth currency", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "osl11": {"name": "osl11", "description": "Total transactions for the period in the fourth currency", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "osl12": {"name": "osl12", "description": "Total transactions for the period in the fourth currency", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "osl13": {"name": "osl13", "description": "Total transactions for the period in the fourth currency", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "osl14": {"name": "osl14", "description": "Total transactions for the period in the fourth currency", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "osl15": {"name": "osl15", "description": "Total transactions for the period in the fourth currency", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "osl16": {"name": "osl16", "description": "Total transactions for the period in the fourth currency", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "oslvt": {"name": "oslvt", "description": "Balance carried forward in fourth currency", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "pprctr": {"name": "pprctr", "description": "Partner profit center", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "prctr": {"name": "prctr", "description": "Profit center", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "psegment": {"name": "psegment", "description": "Partner segment for segmental reporting", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "racct": {"name": "racct", "description": "Account number", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "rassc": {"name": "rassc", "description": "Company id of trading partner", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "rbukrs": {"name": "rbukrs", "description": "Company code", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "rbusa": {"name": "rbusa", "description": "Business area", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "rclnt": {"name": "rclnt", "description": "Client", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "rcntr": {"name": "rcntr", "description": "Cost center", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "rfarea": {"name": "rfarea", "description": "Functional area", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "rldnr": {"name": "rldnr", "description": "Ledger in general ledger accounting", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "rmvct": {"name": "rmvct", "description": "Transaction type", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "rpmax": {"name": "rpmax", "description": "Period", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "rrcty": {"name": "rrcty", "description": "Record type", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "rtcur": {"name": "rtcur", "description": "Currency key", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "runit": {"name": "runit", "description": "Base unit of measure", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "rvers": {"name": "rvers", "description": "Version", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "ryear": {"name": "ryear", "description": "Fiscal year", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "sbusa": {"name": "sbusa", "description": "Trading partner's business area", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "scntr": {"name": "scntr", "description": "Partner cost center", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "segment": {"name": "segment", "description": "Segment for segmental reporting", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "sfarea": {"name": "sfarea", "description": "Partner functional area", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "timestamp": {"name": "timestamp", "description": "Data load timestamp", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "tsl01": {"name": "tsl01", "description": "Total of transactions of the period in transaction currency", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "tsl02": {"name": "tsl02", "description": "Total of transactions of the period in transaction currency", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "tsl03": {"name": "tsl03", "description": "Total of transactions of the period in transaction currency", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "tsl04": {"name": "tsl04", "description": "Total of transactions of the period in transaction currency", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "tsl05": {"name": "tsl05", "description": "Total of transactions of the period in transaction currency", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "tsl06": {"name": "tsl06", "description": "Total of transactions of the period in transaction currency", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "tsl07": {"name": "tsl07", "description": "Total of transactions of the period in transaction currency", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "tsl08": {"name": "tsl08", "description": "Total of transactions of the period in transaction currency", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "tsl09": {"name": "tsl09", "description": "Total of transactions of the period in transaction currency", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "tsl10": {"name": "tsl10", "description": "Total of transactions of the period in transaction currency", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "tsl11": {"name": "tsl11", "description": "Total of transactions of the period in transaction currency", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "tsl12": {"name": "tsl12", "description": "Total of transactions of the period in transaction currency", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "tsl13": {"name": "tsl13", "description": "Total of transactions of the period in transaction currency", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "tsl14": {"name": "tsl14", "description": "Total of transactions of the period in transaction currency", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "tsl15": {"name": "tsl15", "description": "Total of transactions of the period in transaction currency", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "tsl16": {"name": "tsl16", "description": "Total of transactions of the period in transaction currency", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "tslvt": {"name": "tslvt", "description": "Balance carried forward in transaction currency", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "zzspreg": {"name": "zzspreg", "description": "Special region", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": "_fivetran_synced", "loaded_at_query": null, "meta": {}, "tags": []}, "patch_path": null, "unrendered_config": {"loaded_at_field": "_fivetran_synced", "enabled": true, "loaded_at_query": null, "meta": {}, "tags": []}, "relation_name": "\"postgres\".\"public\".\"sap_faglflext_data\"", "created_at": 1756850331.8582203, "unrendered_database": "{% if target.type != 'spark' %}{{ var('sap_database', target.database) }}{% endif %}", "unrendered_schema": "{{ var('sap_schema', 'sap') }}", "doc_blocks": []}, "source.sap.sap.kna1": {"database": "postgres", "schema": "public", "name": "kna1", "resource_type": "source", "package_name": "sap", "path": "models/staging/src_sap.yml", "original_file_path": "models/staging/src_sap.yml", "unique_id": "source.sap.sap.kna1", "fqn": ["sap", "staging", "sap", "kna1"], "source_name": "sap", "source_description": "", "loader": "fivetran", "identifier": "sap_kna1_data", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": "_fivetran_synced", "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "General Data in Customer Master", "columns": {"_fivetran_deleted": {"name": "_fivetran_deleted", "description": "Fivetran deletion marker", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "_fivetran_rowid": {"name": "_fivetran_rowid", "description": "Fivetran unique row ID", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "_fivetran_sap_archived": {"name": "_fivetran_sap_archived", "description": "Fivetran SAP archive marker", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "_fivetran_synced": {"name": "_fivetran_synced", "description": "Fivetran sync timestamp", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "_vso_r_dpoint": {"name": "_vso_r_dpoint", "description": "Rounding point", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "_vso_r_i_no_lyr": {"name": "_vso_r_i_no_lyr", "description": "Layer item number", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "_vso_r_load_pref": {"name": "_vso_r_load_pref", "description": "Loading preference", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "_vso_r_matpal": {"name": "_vso_r_matpal", "description": "Material pallet type", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "_vso_r_one_mat": {"name": "_vso_r_one_mat", "description": "Single material load", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "_vso_r_one_sort": {"name": "_vso_r_one_sort", "description": "Single sort load", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "_vso_r_pal_ul": {"name": "_vso_r_pal_ul", "description": "Pallet unit load", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "_vso_r_palhgt": {"name": "_vso_r_palhgt", "description": "Pallet height", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "_vso_r_pk_mat": {"name": "_vso_r_pk_mat", "description": "Package material", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "_vso_r_uld_side": {"name": "_vso_r_uld_side", "description": "Loading side", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "_xlso_client": {"name": "_xlso_client", "description": "XL system client", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "_xlso_customer": {"name": "_xlso_customer", "description": "XL system customer", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "_xlso_partner": {"name": "_xlso_partner", "description": "XL system partner", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "_xlso_pref_pay": {"name": "_xlso_pref_pay", "description": "XL preferred payment", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "_xlso_sysid": {"name": "_xlso_sysid", "description": "XL system ID", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "adrnr": {"name": "adrnr", "description": "Address number", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "alc": {"name": "alc", "description": "Alternate license classification", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "anred": {"name": "anred", "description": "Title", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "aufsd": {"name": "aufsd", "description": "Sales data authorization group", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "bahne": {"name": "bahne", "description": "Train station", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "bahns": {"name": "bahns", "description": "Train station (ship-to)", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "bbbnr": {"name": "bbbnr", "description": "International location number (part 1)", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "bbsnr": {"name": "bbsnr", "description": "International location number (part 2)", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "begru": {"name": "begru", "description": "Authorization group", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "bubkz": {"name": "bubkz", "description": "Interest calculation flag", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "cassd": {"name": "cassd", "description": "Cash security indicator", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "ccc01": {"name": "ccc01", "description": "Credit card 1", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "ccc02": {"name": "ccc02", "description": "Credit card 2", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "ccc03": {"name": "ccc03", "description": "Credit card 3", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "ccc04": {"name": "ccc04", "description": "Credit card 4", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "cfopc": {"name": "cfopc", "description": "CFO approval code", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "cityc": {"name": "cityc", "description": "City code", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "civve": {"name": "civve", "description": "Civil status", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "cnae": {"name": "cnae", "description": "Economic activity classification", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "comsize": {"name": "comsize", "description": "Company size indicator", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "confs": {"name": "confs", "description": "Confirmation suppression", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "crtn": {"name": "crtn", "description": "Creation time", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "cvp_xblck": {"name": "cvp_xblck", "description": "Business partner block flag", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "datlt": {"name": "datlt", "description": "Date of last transaction", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "dear1": {"name": "dear1", "description": "Form of address 1", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "dear2": {"name": "dear2", "description": "Form of address 2", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "dear3": {"name": "dear3", "description": "Form of address 3", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "dear4": {"name": "dear4", "description": "Form of address 4", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "dear5": {"name": "dear5", "description": "Form of address 5", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "decregpc": {"name": "decregpc", "description": "Declaration region", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "dtams": {"name": "dtams", "description": "Data amended status", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "dtaws": {"name": "dtaws", "description": "Date of address update", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "duefl": {"name": "duefl", "description": "Dunning block", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "duns": {"name": "duns", "description": "D-U-N-S number", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "duns4": {"name": "duns4", "description": "D-U-N-S+4 number", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "ekont": {"name": "ekont", "description": "Account number at vendor", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "erdat": {"name": "erdat", "description": "Record creation date", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "ernam": {"name": "ernam", "description": "Name of person who created object", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "etikg": {"name": "etikg", "description": "Weight unit", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "exabl": {"name": "exabl", "description": "One-time account indicator", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "exp": {"name": "exp", "description": "Export indicator", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "faksd": {"name": "faksd", "description": "Invoice scheduling indicator", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "fee_schedule": {"name": "fee_schedule", "description": "Fee schedule ID", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "fiskn": {"name": "fiskn", "description": "Tax number key", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "fityp": {"name": "fityp", "description": "Business type", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "gform": {"name": "gform", "description": "Legal form", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "hzuor": {"name": "hzuor", "description": "Payment reference", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "icmstaxpay": {"name": "icmstaxpay", "description": "ICMS tax payer flag", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "indtyp": {"name": "indtyp", "description": "Industry type", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "inspatdebi": {"name": "inspatdebi", "description": "Inspection party (debtor)", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "inspbydebi": {"name": "inspbydebi", "description": "Inspected by (debtor)", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "j_1kfrepre": {"name": "j_1kfrepre", "description": "Fiscal representative", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "j_1kftbus": {"name": "j_1kftbus", "description": "Type of business", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "j_1kftind": {"name": "j_1kftind", "description": "Type of industry", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "jmjah": {"name": "jmjah", "description": "Year of last change", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "jmzah": {"name": "jmzah", "description": "Number of changes made", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "katr1": {"name": "katr1", "description": "Attribute 1", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "katr10": {"name": "katr10", "description": "Attribute 10", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "katr2": {"name": "katr2", "description": "Attribute 2", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "katr3": {"name": "katr3", "description": "Attribute 3", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "katr4": {"name": "katr4", "description": "Attribute 4", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "katr5": {"name": "katr5", "description": "Attribute 5", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "katr6": {"name": "katr6", "description": "Attribute 6", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "katr7": {"name": "katr7", "description": "Attribute 7", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "katr8": {"name": "katr8", "description": "Attribute 8", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "katr9": {"name": "katr9", "description": "Attribute 9", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "kdkg1": {"name": "kdkg1", "description": "Customer condition group 1", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "kdkg2": {"name": "kdkg2", "description": "Customer condition group 2", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "kdkg3": {"name": "kdkg3", "description": "Customer condition group 3", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "kdkg4": {"name": "kdkg4", "description": "Customer condition group 4", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "kdkg5": {"name": "kdkg5", "description": "Customer condition group 5", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "knazk": {"name": "knazk", "description": "Reference customer", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "knrza": {"name": "knrza", "description": "Central customer number", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "knurl": {"name": "knurl", "description": "Customer URL", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "konzs": {"name": "konzs", "description": "Consolidation indicator", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "ktocd": {"name": "ktocd", "description": "Account number of head office", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "legalnat": {"name": "legalnat", "description": "Legal nature", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "lifsd": {"name": "lifsd", "description": "Delivery account number", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "locco": {"name": "locco", "description": "Local company code", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "lzone": {"name": "lzone", "description": "Transportation zone", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "mcod1": {"name": "mcod1", "description": "Search term 1", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "mcod2": {"name": "mcod2", "description": "Search term 2", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "mcod3": {"name": "mcod3", "description": "Search term 3", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "milve": {"name": "milve", "description": "Military supply indicator", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "name4": {"name": "name4", "description": "Name 4", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "nodel": {"name": "nodel", "description": "Deletion lock indicator", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "oid_poreqd": {"name": "oid_poreqd", "description": "Purchase order required flag", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "oidrc": {"name": "oidrc", "description": "OID reconciliation flag", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "oipbl": {"name": "oipbl", "description": "OID payment block", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "pmt_office": {"name": "pmt_office", "description": "Payment office", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "psofg": {"name": "psofg", "description": "Fund group", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "psohs": {"name": "psohs", "description": "Fund source", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "psois": {"name": "psois", "description": "Fund indicator", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "pson1": {"name": "pson1", "description": "Fund segment 1", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "pson2": {"name": "pson2", "description": "Fund segment 2", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "pson3": {"name": "pson3", "description": "Fund segment 3", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "psoo1": {"name": "psoo1", "description": "Fund assignment 1", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "psoo2": {"name": "psoo2", "description": "Fund assignment 2", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "psoo3": {"name": "psoo3", "description": "Fund assignment 3", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "psoo4": {"name": "psoo4", "description": "Fund assignment 4", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "psoo5": {"name": "psoo5", "description": "Fund assignment 5", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "psost": {"name": "psost", "description": "Status of fund", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "psotl": {"name": "psotl", "description": "Fund transfer limit", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "psovn": {"name": "psovn", "description": "Fund version", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "rg": {"name": "rg", "description": "Company headquarters", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "rgdate": {"name": "rgdate", "description": "Registration date", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "ric": {"name": "ric", "description": "Retail indicator code", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "rne": {"name": "rne", "description": "Regional economic region", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "rnedate": {"name": "rnedate", "description": "Regional economic date", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "rpmkr": {"name": "rpmkr", "description": "Repricing marker", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "sperr": {"name": "sperr", "description": "Central posting block", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "sperz": {"name": "sperz", "description": "Central deletion indicator", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "stcd4": {"name": "stcd4", "description": "Tax number 4", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "stcd5": {"name": "stcd5", "description": "Tax number 5", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "stcdt": {"name": "stcdt", "description": "Tax type", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "stceg": {"name": "stceg", "description": "VAT registration number", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "stkza": {"name": "stkza", "description": "Indicator (head office)", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "stkzn": {"name": "stkzn", "description": "Indicator (branch)", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "stkzu": {"name": "stkzu", "description": "Indicator (subsidiary)", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "suframa": {"name": "suframa", "description": "SUFRAMA code", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "tdt": {"name": "tdt", "description": "Transportation planning date", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "telbx": {"name": "telbx", "description": "Telebox number", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "telf2": {"name": "telf2", "description": "Second telephone number", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "teltx": {"name": "teltx", "description": "Teletex number", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "telx1": {"name": "telx1", "description": "Telex number", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "txjcd": {"name": "txjcd", "description": "Tax jurisdiction code", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "txlw1": {"name": "txlw1", "description": "Local tax classification 1", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "txlw2": {"name": "txlw2", "description": "Local tax classification 2", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "uf": {"name": "uf", "description": "Federal unit code", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "umjah": {"name": "umjah", "description": "Year of last update", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "umsa1": {"name": "umsa1", "description": "Reason for update", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "umsat": {"name": "umsat", "description": "Date of last update", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "updat": {"name": "updat", "description": "Update date", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "uptim": {"name": "uptim", "description": "Update time", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "uwaer": {"name": "uwaer", "description": "Currency", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "xicms": {"name": "xicms", "description": "ICMS exemption indicator", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "xknza": {"name": "xknza", "description": "Indicator (duplicate customer)", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "xsubt": {"name": "xsubt", "description": "Subcontractor flag", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "xxipi": {"name": "xxipi", "description": "IPI exemption indicator", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "xzemp": {"name": "xzemp", "description": "Temporary customer indicator", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": "_fivetran_synced", "loaded_at_query": null, "meta": {}, "tags": []}, "patch_path": null, "unrendered_config": {"loaded_at_field": "_fivetran_synced", "enabled": true, "loaded_at_query": null, "meta": {}, "tags": []}, "relation_name": "\"postgres\".\"public\".\"sap_kna1_data\"", "created_at": 1756850331.8594885, "unrendered_database": "{% if target.type != 'spark' %}{{ var('sap_database', target.database) }}{% endif %}", "unrendered_schema": "{{ var('sap_schema', 'sap') }}", "doc_blocks": []}, "source.sap.sap.lfa1": {"database": "postgres", "schema": "public", "name": "lfa1", "resource_type": "source", "package_name": "sap", "path": "models/staging/src_sap.yml", "original_file_path": "models/staging/src_sap.yml", "unique_id": "source.sap.sap.lfa1", "fqn": ["sap", "staging", "sap", "lfa1"], "source_name": "sap", "source_description": "", "loader": "fivetran", "identifier": "sap_lfa1_data", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": "_fivetran_synced", "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "Vendor master (General section)", "columns": {"mandt": {"name": "mandt", "description": "Client", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "lifnr": {"name": "lifnr", "description": "Vendor ID", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "land1": {"name": "land1", "description": "Country key", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "name1": {"name": "name1", "description": "Name (line 1)", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "name2": {"name": "name2", "description": "Name (line 2)", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "name3": {"name": "name3", "description": "Name (line 3)", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "name4": {"name": "name4", "description": "Name (line 4)", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "ort01": {"name": "ort01", "description": "City", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "ort02": {"name": "ort02", "description": "District", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "pfach": {"name": "pfach", "description": "PO box", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "pstl2": {"name": "pstl2", "description": "PO box postal code", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "pstlz": {"name": "pstlz", "description": "Postal code", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "regio": {"name": "regio", "description": "Region", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "sortl": {"name": "sortl", "description": "Sort field", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "stras": {"name": "stras", "description": "Street", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "telbx": {"name": "telbx", "description": "Telebox number", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "telf1": {"name": "telf1", "description": "Telephone 1", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "telf2": {"name": "telf2", "description": "Telephone 2", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "telfx": {"name": "telfx", "description": "Fax number", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "teltx": {"name": "teltx", "description": "Teletex number", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "telx1": {"name": "telx1", "description": "Telex number", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "xcpdk": {"name": "xcpdk", "description": "CPD indicator", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "xzemp": {"name": "xzemp", "description": "Temporary vendor indicator", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "vbund": {"name": "vbund", "description": "Company code group", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "fiskn": {"name": "fiskn", "description": "Tax number key", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "spras": {"name": "spras", "description": "Language key", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "stcd1": {"name": "stcd1", "description": "Tax number 1", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "stcd2": {"name": "stcd2", "description": "Tax number 2", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "stkza": {"name": "stkza", "description": "Head office indicator", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "stkzu": {"name": "stkzu", "description": "Subsidiary indicator", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "stceg": {"name": "stceg", "description": "VAT registration number", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "stkzn": {"name": "stkzn", "description": "Branch indicator", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "sperq": {"name": "sperq", "description": "Request block", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "gbort": {"name": "gbort", "description": "Place of birth", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "gbdat": {"name": "gbdat", "description": "Date of birth", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "sexkz": {"name": "sexkz", "description": "Gender key", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "kraus": {"name": "kraus", "description": "Creditor authorization", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "revdb": {"name": "revdb", "description": "Revenue district", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "qssys": {"name": "qssys", "description": "Quality system", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "ktock": {"name": "ktock", "description": "Head office vendor", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "pfort": {"name": "pfort", "description": "Gate", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "werks": {"name": "werks", "description": "Plant", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "ltsna": {"name": "ltsna", "description": "Sub-range", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "werkr": {"name": "werkr", "description": "Place of production", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "plkal": {"name": "plkal", "description": "Pricing procedure", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "duefl": {"name": "duefl", "description": "Dunning block", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "txjcd": {"name": "txjcd", "description": "Tax jurisdiction", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "sperz": {"name": "sperz", "description": "Central deletion flag", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "scacd": {"name": "scacd", "description": "Service agent ID", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "sfrgr": {"name": "sfrgr", "description": "Freight group", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "lzone": {"name": "lzone", "description": "Transport zone", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "xlfza": {"name": "xlfza", "description": "Tax exemption flag", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "dlgrp": {"name": "dlgrp", "description": "Deletion group", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "fityp": {"name": "fityp", "description": "Business type", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "stcdt": {"name": "stcdt", "description": "Tax type", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "regss": {"name": "regss", "description": "Region segment", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "actss": {"name": "actss", "description": "Activity status", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "stcd3": {"name": "stcd3", "description": "Tax number 3", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "stcd4": {"name": "stcd4", "description": "Tax number 4", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "stcd5": {"name": "stcd5", "description": "Tax number 5", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "ipisp": {"name": "ipisp", "description": "Insurance provider", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "taxbs": {"name": "taxbs", "description": "Tax base", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "profs": {"name": "profs", "description": "Profession", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "stgdl": {"name": "stgdl", "description": "Staging deadline", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "emnfr": {"name": "emnfr", "description": "Manufacturer number", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "lfurl": {"name": "lfurl", "description": "Vendor URL", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "j_1kfrepre": {"name": "j_1kfrepre", "description": "Fiscal representative", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "j_1kftbus": {"name": "j_1kftbus", "description": "Type of business", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "j_1kftind": {"name": "j_1kftind", "description": "Type of industry", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "confs": {"name": "confs", "description": "Confirmation suppression", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "updat": {"name": "updat", "description": "Update date", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "uptim": {"name": "uptim", "description": "Update time", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "nodel": {"name": "nodel", "description": "Deletion lock", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "qssysdat": {"name": "qssysdat", "description": "Quality system date", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "podkzb": {"name": "podkzb", "description": "POD indicator", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "fisku": {"name": "fisku", "description": "Tax region", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "stenr": {"name": "stenr", "description": "Street number", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "carrier_conf": {"name": "carrier_conf", "description": "Carrier confirmation", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "min_comp": {"name": "min_comp", "description": "Minority company", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "term_li": {"name": "term_li", "description": "Terms of liability", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "crc_num": {"name": "crc_num", "description": "Credit rating number", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "cvp_xblck": {"name": "cvp_xblck", "description": "Vendor block flag", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "rg": {"name": "rg", "description": "Company headquarters", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "exp": {"name": "exp", "description": "Export indicator", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "uf": {"name": "uf", "description": "Federal unit", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "rgdate": {"name": "rgdate", "description": "Registration date", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "ric": {"name": "ric", "description": "Retail code", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "rne": {"name": "rne", "description": "Regional code", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "rnedate": {"name": "rnedate", "description": "Regional date", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "cnae": {"name": "cnae", "description": "Economic activity", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "legalnat": {"name": "legalnat", "description": "Legal nature", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "crtn": {"name": "crtn", "description": "Creation time", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "icmstaxpay": {"name": "icmstaxpay", "description": "ICMS tax payer", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "indtyp": {"name": "indtyp", "description": "Industry type", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "tdt": {"name": "tdt", "description": "Transport plan date", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "comsize": {"name": "comsize", "description": "Company size", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "decregpc": {"name": "decregpc", "description": "Declaration region", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "j_sc_capital": {"name": "j_sc_capital", "description": "Capital", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "j_sc_currency": {"name": "j_sc_currency", "description": "Capital currency", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "alc": {"name": "alc", "description": "License classification", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "pmt_office": {"name": "pmt_office", "description": "Payment office", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "ppa_relevant": {"name": "ppa_relevant", "description": "PPA relevant flag", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "psofg": {"name": "psofg", "description": "Fund group", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "psois": {"name": "psois", "description": "Fund indicator", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "pson1": {"name": "pson1", "description": "Fund segment 1", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "pson2": {"name": "pson2", "description": "Fund segment 2", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "pson3": {"name": "pson3", "description": "Fund segment 3", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "psovn": {"name": "psovn", "description": "Fund version", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "psotl": {"name": "psotl", "description": "Fund transfer limit", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "psohs": {"name": "psohs", "description": "Fund source", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "psost": {"name": "psost", "description": "Fund status", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "transport_chain": {"name": "transport_chain", "description": "Transport chain", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "staging_time": {"name": "staging_time", "description": "Staging time", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "scheduling_type": {"name": "scheduling_type", "description": "Scheduling type", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "submi_relevant": {"name": "submi_relevant", "description": "Subcontracting relevant", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "_fivetran_deleted": {"name": "_fivetran_deleted", "description": "Fivetran deletion marker", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "_fivetran_synced": {"name": "_fivetran_synced", "description": "Fivetran sync timestamp", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "_fivetran_rowid": {"name": "_fivetran_rowid", "description": "Fivetran unique row ID", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "adrnr": {"name": "adrnr", "description": "Address number", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "mcod1": {"name": "mcod1", "description": "Search term 1", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "mcod2": {"name": "mcod2", "description": "Search term 2", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "mcod3": {"name": "mcod3", "description": "Search term 3", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "anred": {"name": "anred", "description": "Title", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "bahns": {"name": "bahns", "description": "Train station", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "bbbnr": {"name": "bbbnr", "description": "Location number (part 1)", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "bbsnr": {"name": "bbsnr", "description": "Location number (part 2)", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "begru": {"name": "begru", "description": "Authorization group", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "brsch": {"name": "brsch", "description": "Industry key", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "bubkz": {"name": "bubkz", "description": "Interest calculation flag", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "datlt": {"name": "datlt", "description": "Last transaction date", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "dtams": {"name": "dtams", "description": "Amendment status", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "dtaws": {"name": "dtaws", "description": "Address update date", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "erdat": {"name": "erdat", "description": "Record creation date", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "ernam": {"name": "ernam", "description": "Created by user", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "esrnr": {"name": "esrnr", "description": "ESR number", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "konzs": {"name": "konzs", "description": "Consolidation indicator", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "ktokk": {"name": "ktokk", "description": "Account group", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "kunnr": {"name": "kunnr", "description": "Customer number", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "lnrza": {"name": "lnrza", "description": "Central vendor number", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "loevm": {"name": "loevm", "description": "Deletion flag", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "sperr": {"name": "sperr", "description": "Central block", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "sperm": {"name": "sperm", "description": "Posting block", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": "_fivetran_synced", "loaded_at_query": null, "meta": {}, "tags": []}, "patch_path": null, "unrendered_config": {"loaded_at_field": "_fivetran_synced", "enabled": true, "loaded_at_query": null, "meta": {}, "tags": []}, "relation_name": "\"postgres\".\"public\".\"sap_lfa1_data\"", "created_at": 1756850331.860604, "unrendered_database": "{% if target.type != 'spark' %}{{ var('sap_database', target.database) }}{% endif %}", "unrendered_schema": "{{ var('sap_schema', 'sap') }}", "doc_blocks": []}, "source.sap.sap.makt": {"database": "postgres", "schema": "public", "name": "makt", "resource_type": "source", "package_name": "sap", "path": "models/staging/src_sap.yml", "original_file_path": "models/staging/src_sap.yml", "unique_id": "source.sap.sap.makt", "fqn": ["sap", "staging", "sap", "makt"], "source_name": "sap", "source_description": "", "loader": "fivetran", "identifier": "sap_makt_data", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": "_fivetran_synced", "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "Material Descriptions", "columns": {"_fivetran_deleted": {"name": "_fivetran_deleted", "description": "Fivetran deletion marker", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "_fivetran_rowid": {"name": "_fivetran_rowid", "description": "Fivetran unique row ID", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "_fivetran_synced": {"name": "_fivetran_synced", "description": "Fivetran sync timestamp", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "maktx": {"name": "maktx", "description": "Material description", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "mandt": {"name": "mandt", "description": "Client", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "matnr": {"name": "matnr", "description": "Material number", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "spras": {"name": "spras", "description": "Language key", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": "_fivetran_synced", "loaded_at_query": null, "meta": {}, "tags": []}, "patch_path": null, "unrendered_config": {"loaded_at_field": "_fivetran_synced", "enabled": true, "loaded_at_query": null, "meta": {}, "tags": []}, "relation_name": "\"postgres\".\"public\".\"sap_makt_data\"", "created_at": 1756850331.8612344, "unrendered_database": "{% if target.type != 'spark' %}{{ var('sap_database', target.database) }}{% endif %}", "unrendered_schema": "{{ var('sap_schema', 'sap') }}", "doc_blocks": []}, "source.sap.sap.mara": {"database": "postgres", "schema": "public", "name": "mara", "resource_type": "source", "package_name": "sap", "path": "models/staging/src_sap.yml", "original_file_path": "models/staging/src_sap.yml", "unique_id": "source.sap.sap.mara", "fqn": ["sap", "staging", "sap", "mara"], "source_name": "sap", "source_description": "", "loader": "fivetran", "identifier": "sap_mara_data", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": "_fivetran_synced", "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "General material data", "columns": {"_accgo_assgd_uom": {"name": "_accgo_assgd_uom", "description": "Assigned unit of measure (Accruals)", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "_bev1_luldegrp": {"name": "_bev1_luldegrp", "description": "Beverage logistics unloading group", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "_bev1_luleinh": {"name": "_bev1_luleinh", "description": "Unloading unit of measure", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "_bev1_nestruccat": {"name": "_bev1_nestruccat", "description": "Beverage structure category", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "_dsd_sl_toltyp": {"name": "_dsd_sl_toltyp", "description": "Tolerance type for settlement", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "_dsd_sv_cnt_grp": {"name": "_dsd_sv_cnt_grp", "description": "Service count group", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "_dsd_vc_group": {"name": "_dsd_vc_group", "description": "Visit control group", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "_fivetran_deleted": {"name": "_fivetran_deleted", "description": "Fivetran deletion marker", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "_fivetran_rowid": {"name": "_fivetran_rowid", "description": "Fivetran unique row ID", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "_fivetran_sap_archived": {"name": "_fivetran_sap_archived", "description": "Fivetran SAP archive marker", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "_fivetran_synced": {"name": "_fivetran_synced", "description": "Fivetran sync timestamp", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "_sttpec_country_ref": {"name": "_sttpec_country_ref", "description": "Country of reference (Product environmental compliance)", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "_sttpec_prdcat": {"name": "_sttpec_prdcat", "description": "Product category (STTPEC)", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "_sttpec_sertype": {"name": "_sttpec_sertype", "description": "Certificate type (STTPEC)", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "_sttpec_syncact": {"name": "_sttpec_syncact", "description": "Synchronization action (STTPEC)", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "_sttpec_syncchg": {"name": "_sttpec_syncchg", "description": "Change type in sync (STTPEC)", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "_sttpec_synctime": {"name": "_sttpec_synctime", "description": "Last sync time (STTPEC)", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "_vso_r_bot_ind": {"name": "_vso_r_bot_ind", "description": "Bottom layer indicator (Retail VSO)", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "_vso_r_kzgvh_ind": {"name": "_vso_r_kzgvh_ind", "description": "Closed packaging indicator (Retail VSO)", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "_vso_r_no_p_gvh": {"name": "_vso_r_no_p_gvh", "description": "No packaging material group (Retail VSO)", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "_vso_r_pal_b_ht": {"name": "_vso_r_pal_b_ht", "description": "Pallet base height (Retail VSO)", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "_vso_r_pal_ind": {"name": "_vso_r_pal_ind", "description": "Pallet indicator (Retail VSO)", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "_vso_r_pal_min_h": {"name": "_vso_r_pal_min_h", "description": "Minimum pallet height (Retail VSO)", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "_vso_r_pal_ovr_d": {"name": "_vso_r_pal_ovr_d", "description": "Pallet overhang depth (Retail VSO)", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "_vso_r_pal_ovr_w": {"name": "_vso_r_pal_ovr_w", "description": "Pallet overhang width (Retail VSO)", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "_vso_r_quan_unit": {"name": "_vso_r_quan_unit", "description": "Quantity unit (Retail VSO)", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "_vso_r_stack_ind": {"name": "_vso_r_stack_ind", "description": "Stackable indicator (Retail VSO)", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "_vso_r_stack_no": {"name": "_vso_r_stack_no", "description": "Maximum stacking number (Retail VSO)", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "_vso_r_tilt_ind": {"name": "_vso_r_tilt_ind", "description": "Tilt indicator (Retail VSO)", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "_vso_r_tol_b_ht": {"name": "_vso_r_tol_b_ht", "description": "Tolerance for base height (Retail VSO)", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "_vso_r_top_ind": {"name": "_vso_r_top_ind", "description": "Top layer indicator (Retail VSO)", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "adprof": {"name": "adprof", "description": "Profile for advertising materials", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "adspc_spc": {"name": "adspc_spc", "description": "Ad space specification", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "allow_pmat_igno": {"name": "allow_pmat_igno", "description": "Allow packaging material ignore flag", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "animal_origin": {"name": "animal_origin", "description": "Indicator (Material of animal origin)", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "anp": {"name": "anp", "description": "Assembly item indicator", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "bbtyp": {"name": "bbtyp", "description": "Base unit type", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "brand_id": {"name": "brand_id", "description": "Brand identification number", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "bstat": {"name": "bstat", "description": "Material status at plant level", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "bwscl": {"name": "bwscl", "description": "Source list requirement", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "cmrel": {"name": "cmrel", "description": "Commodity relevant", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "cobjid": {"name": "cobjid", "description": "Object ID (Product Compliance)", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "color": {"name": "color", "description": "Color description", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "color_atinn": {"name": "color_atinn", "description": "Internal characteristic number for color", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "commodity": {"name": "commodity", "description": "Commodity code", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "cotype": {"name": "cotype", "description": "Configuration type", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "cwqproc": {"name": "cwqproc", "description": "Catch weight processing procedure", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "cwqrel": {"name": "cwqrel", "description": "Catch weight relevance", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "cwqtolgr": {"name": "cwqtolgr", "description": "Catch weight tolerance group", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "dg_pack_status": {"name": "dg_pack_status", "description": "Dangerous goods packaging status", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "fashgrd": {"name": "fashgrd", "description": "Fashion grade", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "fiber_code1": {"name": "fiber_code1", "description": "Fiber code 1", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "fiber_code2": {"name": "fiber_code2", "description": "Fiber code 2", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "fiber_code3": {"name": "fiber_code3", "description": "Fiber code 3", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "fiber_code4": {"name": "fiber_code4", "description": "Fiber code 4", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "fiber_code5": {"name": "fiber_code5", "description": "Fiber code 5", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "fiber_part1": {"name": "fiber_part1", "description": "Fiber content part 1", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "fiber_part2": {"name": "fiber_part2", "description": "Fiber content part 2", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "fiber_part3": {"name": "fiber_part3", "description": "Fiber content part 3", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "fiber_part4": {"name": "fiber_part4", "description": "Fiber content part 4", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "fiber_part5": {"name": "fiber_part5", "description": "Fiber content part 5", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "free_char": {"name": "free_char", "description": "Free characteristics", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "fsh_mg_at1": {"name": "fsh_mg_at1", "description": "Fashion material group attribute 1", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "fsh_mg_at2": {"name": "fsh_mg_at2", "description": "Fashion material group attribute 2", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "fsh_mg_at3": {"name": "fsh_mg_at3", "description": "Fashion material group attribute 3", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "fsh_sc_mid": {"name": "fsh_sc_mid", "description": "Fashion supply chain merchandise category", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "fsh_seaim": {"name": "fsh_seaim", "description": "Fashion season indicator", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "fsh_sealv": {"name": "fsh_sealv", "description": "Fashion season level", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "gds_relevant": {"name": "gds_relevant", "description": "GDS relevant indicator", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "gennr": {"name": "gennr", "description": "Generic material number", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "gtin_variant": {"name": "gtin_variant", "description": "GTIN variant ID", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "hazmat": {"name": "hazmat", "description": "Hazardous material indicator", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "herkl": {"name": "herkl", "description": "Country of origin", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "hndlcode": {"name": "hndlcode", "description": "Handling code", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "hutyp": {"name": "hutyp", "description": "Handling unit type", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "hutyp_dflt": {"name": "hutyp_dflt", "description": "Default HU type", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "imatn": {"name": "imatn", "description": "Material number used by vendor", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "ipmipproduct": {"name": "ipmipproduct", "description": "Intellectual Property-managed product", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "kosch": {"name": "kosch", "description": "Product allocation procedure", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "loglev_reto": {"name": "loglev_reto", "description": "Logistics level for returns", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "logunit": {"name": "logunit", "description": "Logical unit", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "matfi": {"name": "matfi", "description": "Material status for FI", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "maxb": {"name": "maxb", "description": "Maximum length", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "maxc": {"name": "maxc", "description": "Maximum width", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "maxc_tol": {"name": "maxc_tol", "description": "Tolerance for width", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "maxdim_uom": {"name": "maxdim_uom", "description": "Unit of measure for max dimensions", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "maxh": {"name": "maxh", "description": "Maximum height", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "maxl": {"name": "maxl", "description": "Maximum pallet layer", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "medium": {"name": "medium", "description": "Medium type", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "mfrgr": {"name": "mfrgr", "description": "Material freight group", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "mlgut": {"name": "mlgut", "description": "Empties BOM indicator", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "oigroupnam": {"name": "oigroupnam", "description": "OIL group name", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "oihmtxgr": {"name": "oihmtxgr", "description": "OIL material text group", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "oitrind": {"name": "oitrind", "description": "OIL transport indicator", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "packcode": {"name": "packcode", "description": "Packaging code", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "picnum": {"name": "picnum", "description": "Picture number", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "pilferable": {"name": "pilferable", "description": "Pilferable indicator", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "psm_code": {"name": "psm_code", "description": "Product stewardship code", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "ps_smartform": {"name": "ps_smartform", "description": "Smartform for product safety", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "qgrp": {"name": "qgrp", "description": "QM control key", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "qqtime": {"name": "qqtime", "description": "Quarantine time", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "qqtimeuom": {"name": "qqtimeuom", "description": "Quarantine time unit of measure", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "retdelc": {"name": "retdelc", "description": "Returns deletion flag", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "rmatp": {"name": "rmatp", "description": "Relevant for material availability check", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "serial": {"name": "serial", "description": "Serial number profile", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "sgt_covsa": {"name": "sgt_covsa", "description": "Segmentation coverage scenario", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "sgt_csgr": {"name": "sgt_csgr", "description": "Segmentation strategy", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "sgt_rel": {"name": "sgt_rel", "description": "Segmentation relevance", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "sgt_scope": {"name": "sgt_scope", "description": "Segmentation scope", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "sgt_stat": {"name": "sgt_stat", "description": "Segmentation status", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "size1": {"name": "size1", "description": "Size 1 (numeric or text)", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "size1_atinn": {"name": "size1_atinn", "description": "Internal characteristic number for size1", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "size2": {"name": "size2", "description": "Size 2 (numeric or text)", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "size2_atinn": {"name": "size2_atinn", "description": "Internal characteristic number for size2", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "sled_bbd": {"name": "sled_bbd", "description": "Shelf life expiration or best-before date", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "stoff": {"name": "stoff", "description": "Hazardous material number", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "tare_var": {"name": "tare_var", "description": "Variable tare weight indicator", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "textile_comp_ind": {"name": "textile_comp_ind", "description": "Textile composition indicator", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "weora": {"name": "weora", "description": "Time of goods receipt", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "whmatgr": {"name": "whmatgr", "description": "Material group for warehouse mgmt", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "whstc": {"name": "whstc", "description": "Warehouse storage condition", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": "_fivetran_synced", "loaded_at_query": null, "meta": {}, "tags": []}, "patch_path": null, "unrendered_config": {"loaded_at_field": "_fivetran_synced", "enabled": true, "loaded_at_query": null, "meta": {}, "tags": []}, "relation_name": "\"postgres\".\"public\".\"sap_mara_data\"", "created_at": 1756850331.8622873, "unrendered_database": "{% if target.type != 'spark' %}{{ var('sap_database', target.database) }}{% endif %}", "unrendered_schema": "{{ var('sap_schema', 'sap') }}", "doc_blocks": []}, "source.sap.sap.pa0000": {"database": "postgres", "schema": "public", "name": "pa0000", "resource_type": "source", "package_name": "sap", "path": "models/staging/src_sap.yml", "original_file_path": "models/staging/src_sap.yml", "unique_id": "source.sap.sap.pa0000", "fqn": ["sap", "staging", "sap", "pa0000"], "source_name": "sap", "source_description": "", "loader": "fivetran", "identifier": "sap_pa0000_data", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": "_fivetran_synced", "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "HR master record--infotype 0000 (Actions)", "columns": {"_fivetran_deleted": {"name": "_fivetran_deleted", "description": "Fivetran deletion marker", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "_fivetran_rowid": {"name": "_fivetran_rowid", "description": "Fivetran unique row ID", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "_fivetran_synced": {"name": "_fivetran_synced", "description": "Fivetran sync timestamp", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "aedtm": {"name": "aedtm", "description": "Last changed on", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "begda": {"name": "begda", "description": "Start date", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "endda": {"name": "endda", "description": "End date", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "flag1": {"name": "flag1", "description": "Reserved field/Unused field", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "flag2": {"name": "flag2", "description": "Reserved field/Unused field", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "flag3": {"name": "flag3", "description": "Reserved field/Unused field", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "flag4": {"name": "flag4", "description": "Reserved field/Unused field", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "grpvl": {"name": "grpvl", "description": "Grouping value for personnel assignments", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "histo": {"name": "histo", "description": "Historical record flag", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "itbld": {"name": "itbld", "description": "Infotype screen control", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "itxex": {"name": "itxex", "description": "Text exists for infotype", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "mandt": {"name": "mandt", "description": "Client", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "massg": {"name": "massg", "description": "Reason for action", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "massn": {"name": "massn", "description": "Action type", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "objps": {"name": "objps", "description": "Object identification", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "ordex": {"name": "ordex", "description": "Confirmation fields exist", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "pernr": {"name": "pernr", "description": "Personnel number", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "preas": {"name": "preas", "description": "Reason for changing master data", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "refex": {"name": "refex", "description": "Reference fields exist (primary/secondary costs)", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "rese1": {"name": "rese1", "description": "Reserved field/unused field of length 2", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "rese2": {"name": "rese2", "description": "Reserved field/unused field of length 2", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "seqnr": {"name": "seqnr", "description": "Number of infotype record with same key", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "sprps": {"name": "sprps", "description": "Lock indicator for HR master data record", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "stat1": {"name": "stat1", "description": "Customer-specific status", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "stat2": {"name": "stat2", "description": "Employment status", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "stat3": {"name": "stat3", "description": "Special payment status", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "subty": {"name": "subty", "description": "Subtype", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "uname": {"name": "uname", "description": "Name of person who changed object", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": "_fivetran_synced", "loaded_at_query": null, "meta": {}, "tags": []}, "patch_path": null, "unrendered_config": {"loaded_at_field": "_fivetran_synced", "enabled": true, "loaded_at_query": null, "meta": {}, "tags": []}, "relation_name": "\"postgres\".\"public\".\"sap_pa0000_data\"", "created_at": 1756850331.8629932, "unrendered_database": "{% if target.type != 'spark' %}{{ var('sap_database', target.database) }}{% endif %}", "unrendered_schema": "{{ var('sap_schema', 'sap') }}", "doc_blocks": []}, "source.sap.sap.pa0001": {"database": "postgres", "schema": "public", "name": "pa0001", "resource_type": "source", "package_name": "sap", "path": "models/staging/src_sap.yml", "original_file_path": "models/staging/src_sap.yml", "unique_id": "source.sap.sap.pa0001", "fqn": ["sap", "staging", "sap", "pa0001"], "source_name": "sap", "source_description": "", "loader": "fivetran", "identifier": "sap_pa0001_data", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": "_fivetran_synced", "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "HR master record--infotype 0001 (org. assignment)", "columns": {"_fivetran_deleted": {"name": "_fivetran_deleted", "description": "Fivetran deletion marker", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "_fivetran_rowid": {"name": "_fivetran_rowid", "description": "Fivetran unique row ID", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "_fivetran_synced": {"name": "_fivetran_synced", "description": "Fivetran sync timestamp", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "abkrs": {"name": "abkrs", "description": "Payroll area", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "aedtm": {"name": "aedtm", "description": "Changed on", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "ansvh": {"name": "ansvh", "description": "Work contract", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "begda": {"name": "begda", "description": "Start date", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "btrtl": {"name": "btrtl", "description": "Personnel subarea", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "budget_pd": {"name": "budget_pd", "description": "FM--Budget period", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "bukrs": {"name": "bukrs", "description": "Company code", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "ename": {"name": "ename", "description": "Formatted name of employee or applicant", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "endda": {"name": "endda", "description": "End date", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "fistl": {"name": "fistl", "description": "Funds center", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "fkber": {"name": "fkber", "description": "Functional area", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "flag1": {"name": "flag1", "description": "Reserved field/unused field", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "flag2": {"name": "flag2", "description": "Reserved field/unused field", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "flag3": {"name": "flag3", "description": "Reserved field/unused field", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "flag4": {"name": "flag4", "description": "Reserved field/unused field", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "geber": {"name": "geber", "description": "Fund", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "grant_nbr": {"name": "grant_nbr", "description": "Grant", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "grpvl": {"name": "grpvl", "description": "Grouping value for personnel assignments", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "gsber": {"name": "gsber", "description": "Business area", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "histo": {"name": "histo", "description": "Historical record flag", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "itbld": {"name": "itbld", "description": "Infotype screen control", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "itxex": {"name": "itxex", "description": "Text exists for infotype", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "juper": {"name": "juper", "description": "Legal person", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "kokrs": {"name": "kokrs", "description": "Controlling area", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "kostl": {"name": "kostl", "description": "Cost center", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "mandt": {"name": "mandt", "description": "Client", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "mstbr": {"name": "mstbr", "description": "Supervisor area", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "objps": {"name": "objps", "description": "Object identification", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "ordex": {"name": "ordex", "description": "Confirmation fields exist", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "orgeh": {"name": "orgeh", "description": "Organizational unit", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "otype": {"name": "otype", "description": "Object type", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "pernr": {"name": "pernr", "description": "Personnel number", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "persg": {"name": "persg", "description": "Employee group", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "persk": {"name": "persk", "description": "Employee subgroup", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "plans": {"name": "plans", "description": "Position", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "preas": {"name": "preas", "description": "Reason for changing master data", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "refex": {"name": "refex", "description": "Reference fields exist (primary/secondary costs)", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "rese1": {"name": "rese1", "description": "Reserved field/unused field of length 2", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "rese2": {"name": "rese2", "description": "Reserved field/unused field of length 2", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "sacha": {"name": "sacha", "description": "Payroll administrator", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "sachp": {"name": "sachp", "description": "Administrator for HR master data", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "sachz": {"name": "sachz", "description": "Administrator for time recording", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "sbmod": {"name": "sbmod", "description": "Administrator group", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "seqnr": {"name": "seqnr", "description": "Number of infotype record with same key", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "sgmnt": {"name": "sgmnt", "description": "Segment for segmental reporting", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "sname": {"name": "sname", "description": "Employee's name (Sortable by LAST NAME FIRST NAME)", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "sprps": {"name": "sprps", "description": "Lock indicator for HR master data record", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "stell": {"name": "stell", "description": "Job", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "subty": {"name": "subty", "description": "Subtype", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "uname": {"name": "uname", "description": "Name of person who changed object", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "vdsk1": {"name": "vdsk1", "description": "Organizational key", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "werks": {"name": "werks", "description": "Personnel area", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": "_fivetran_synced", "loaded_at_query": null, "meta": {}, "tags": []}, "patch_path": null, "unrendered_config": {"loaded_at_field": "_fivetran_synced", "enabled": true, "loaded_at_query": null, "meta": {}, "tags": []}, "relation_name": "\"postgres\".\"public\".\"sap_pa0001_data\"", "created_at": 1756850331.8637948, "unrendered_database": "{% if target.type != 'spark' %}{{ var('sap_database', target.database) }}{% endif %}", "unrendered_schema": "{{ var('sap_schema', 'sap') }}", "doc_blocks": []}, "source.sap.sap.pa0007": {"database": "postgres", "schema": "public", "name": "pa0007", "resource_type": "source", "package_name": "sap", "path": "models/staging/src_sap.yml", "original_file_path": "models/staging/src_sap.yml", "unique_id": "source.sap.sap.pa0007", "fqn": ["sap", "staging", "sap", "pa0007"], "source_name": "sap", "source_description": "", "loader": "fivetran", "identifier": "sap_pa0007_data", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": "_fivetran_synced", "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "HR master record--infotype 0007 (planned working time)", "columns": {"_fivetran_deleted": {"name": "_fivetran_deleted", "description": "Fivetran deletion marker", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "_fivetran_rowid": {"name": "_fivetran_rowid", "description": "Fivetran unique row ID", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "_fivetran_synced": {"name": "_fivetran_synced", "description": "Fivetran sync timestamp", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "aedtm": {"name": "aedtm", "description": "Changed on", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "arbst": {"name": "arbst", "description": "Daily working hours", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "awtyp": {"name": "awtyp", "description": "Reference transaction", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "begda": {"name": "begda", "description": "Start date", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "dysch": {"name": "dysch", "description": "Create daily work schedule dynamically", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "empct": {"name": "empct", "description": "Employment percentage", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "endda": {"name": "endda", "description": "End date", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "flag1": {"name": "flag1", "description": "Reserved field/unused field", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "flag2": {"name": "flag2", "description": "Reserved field/unused field", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "flag3": {"name": "flag3", "description": "Reserved field/unused field", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "flag4": {"name": "flag4", "description": "Reserved field/unused field", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "grpvl": {"name": "grpvl", "description": "Grouping value for personnel assignments", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "histo": {"name": "histo", "description": "Historical record flag", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "itbld": {"name": "itbld", "description": "Infotype screen control", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "itxex": {"name": "itxex", "description": "Text exists for infotype", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "jrstd": {"name": "jrstd", "description": "Annual working hours", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "kztim": {"name": "kztim", "description": "Additional indicator for time management", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "mandt": {"name": "mandt", "description": "Client", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "maxja": {"name": "maxja", "description": "Maximum number of working hours per year", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "maxmo": {"name": "maxmo", "description": "Maximum number of work hours per month", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "maxta": {"name": "maxta", "description": "Maximum number of work hours per day", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "maxwo": {"name": "maxwo", "description": "Maximum number of work hours per week", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "minja": {"name": "minja", "description": "Minimum annual working hours", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "minmo": {"name": "minmo", "description": "Minimum number of work hours per month", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "minta": {"name": "minta", "description": "Minimum number of work hours per day", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "minwo": {"name": "minwo", "description": "Minimum weekly working hours", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "mostd": {"name": "mostd", "description": "Monthly hours", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "objps": {"name": "objps", "description": "Object identification", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "ordex": {"name": "ordex", "description": "Confirmation fields exist", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "pernr": {"name": "pernr", "description": "Personnel number", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "preas": {"name": "preas", "description": "Reason for changing master data", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "refex": {"name": "refex", "description": "Reference fields exist (primary/secondary costs)", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "rese1": {"name": "rese1", "description": "Reserved field/unused field of length 2", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "rese2": {"name": "rese2", "description": "Reserved field/unused field of length 2", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "schkz": {"name": "schkz", "description": "Work schedule rule", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "seqnr": {"name": "seqnr", "description": "Number of infotype record with same key", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "sprps": {"name": "sprps", "description": "Lock indicator for HR master data record", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "subty": {"name": "subty", "description": "Subtype", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "teilk": {"name": "teilk", "description": "Indicator part-time employee", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "uname": {"name": "uname", "description": "Name of person who changed objects", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "wkwdy": {"name": "wkwdy", "description": "Weekly workdays", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "wostd": {"name": "wostd", "description": "Hours per week", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "wweek": {"name": "wweek", "description": "Working week", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "zterf": {"name": "zterf", "description": "Employee time management status", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": "_fivetran_synced", "loaded_at_query": null, "meta": {}, "tags": []}, "patch_path": null, "unrendered_config": {"loaded_at_field": "_fivetran_synced", "enabled": true, "loaded_at_query": null, "meta": {}, "tags": []}, "relation_name": "\"postgres\".\"public\".\"sap_pa0007_data\"", "created_at": 1756850331.8649852, "unrendered_database": "{% if target.type != 'spark' %}{{ var('sap_database', target.database) }}{% endif %}", "unrendered_schema": "{{ var('sap_schema', 'sap') }}", "doc_blocks": []}, "source.sap.sap.pa0008": {"database": "postgres", "schema": "public", "name": "pa0008", "resource_type": "source", "package_name": "sap", "path": "models/staging/src_sap.yml", "original_file_path": "models/staging/src_sap.yml", "unique_id": "source.sap.sap.pa0008", "fqn": ["sap", "staging", "sap", "pa0008"], "source_name": "sap", "source_description": "", "loader": "fivetran", "identifier": "sap_pa0008_data", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": "_fivetran_synced", "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "HR master record--infotype 0008 (basic pay)", "columns": {"_fivetran_deleted": {"name": "_fivetran_deleted", "description": "Fivetran deletion marker", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "_fivetran_rowid": {"name": "_fivetran_rowid", "description": "Fivetran unique row ID", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "_fivetran_synced": {"name": "_fivetran_synced", "description": "Fivetran sync timestamp", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "aedtm": {"name": "aedtm", "description": "Changed on", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "ancur": {"name": "ancur", "description": "Currency key for annual salary", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "ansal": {"name": "ansal", "description": "Annual salary", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "anz01": {"name": "anz01", "description": "Number/unit", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "anz02": {"name": "anz02", "description": "Number/unit", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "anz03": {"name": "anz03", "description": "Number/unit", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "anz04": {"name": "anz04", "description": "Number/unit", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "anz05": {"name": "anz05", "description": "Number/unit", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "anz06": {"name": "anz06", "description": "Number/unit", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "anz07": {"name": "anz07", "description": "Number/unit", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "anz08": {"name": "anz08", "description": "Number/unit", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "anz09": {"name": "anz09", "description": "Number/unit", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "anz10": {"name": "anz10", "description": "Number/unit", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "anz11": {"name": "anz11", "description": "Number/unit", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "anz12": {"name": "anz12", "description": "Number/unit", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "anz13": {"name": "anz13", "description": "Number/unit", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "anz14": {"name": "anz14", "description": "Number/unit", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "anz15": {"name": "anz15", "description": "Number/unit", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "anz16": {"name": "anz16", "description": "Number/unit", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "anz17": {"name": "anz17", "description": "Number/unit", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "anz18": {"name": "anz18", "description": "Number/unit", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "anz19": {"name": "anz19", "description": "Number/unit", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "anz20": {"name": "anz20", "description": "Number/unit", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "anz21": {"name": "anz21", "description": "Number/unit", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "anz22": {"name": "anz22", "description": "Number/unit", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "anz23": {"name": "anz23", "description": "Number/unit", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "anz24": {"name": "anz24", "description": "Number/unit", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "anz25": {"name": "anz25", "description": "Number/unit", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "anz26": {"name": "anz26", "description": "Number/unit", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "anz27": {"name": "anz27", "description": "Number/unit", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "anz28": {"name": "anz28", "description": "Number/unit", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "anz29": {"name": "anz29", "description": "Number/unit", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "anz30": {"name": "anz30", "description": "Number/unit", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "anz31": {"name": "anz31", "description": "Number/unit", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "anz32": {"name": "anz32", "description": "Number/unit", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "anz33": {"name": "anz33", "description": "Number/unit", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "anz34": {"name": "anz34", "description": "Number/unit", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "anz35": {"name": "anz35", "description": "Number/unit", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "anz36": {"name": "anz36", "description": "Number/unit", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "anz37": {"name": "anz37", "description": "Number/unit", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "anz38": {"name": "anz38", "description": "Number/unit", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "anz39": {"name": "anz39", "description": "Number/unit", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "anz40": {"name": "anz40", "description": "Number/unit", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "begda": {"name": "begda", "description": "Start date", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "bet01": {"name": "bet01", "description": "Wage type amount for payments", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "bet02": {"name": "bet02", "description": "Wage type amount for payments", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "bet03": {"name": "bet03", "description": "Wage type amount for payments", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "bet04": {"name": "bet04", "description": "Wage type amount for payments", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "bet05": {"name": "bet05", "description": "Wage type amount for payments", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "bet06": {"name": "bet06", "description": "Wage type amount for payments", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "bet07": {"name": "bet07", "description": "Wage type amount for payments", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "bet08": {"name": "bet08", "description": "Wage type amount for payments", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "bet09": {"name": "bet09", "description": "Wage type amount for payments", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "bet10": {"name": "bet10", "description": "Wage type amount for payments", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "bet11": {"name": "bet11", "description": "Wage type amount for payments", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "bet12": {"name": "bet12", "description": "Wage type amount for payments", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "bet13": {"name": "bet13", "description": "Wage type amount for payments", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "bet14": {"name": "bet14", "description": "Wage type amount for payments", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "bet15": {"name": "bet15", "description": "Wage type amount for payments", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "bet16": {"name": "bet16", "description": "Wage type amount for payments", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "bet17": {"name": "bet17", "description": "Wage type amount for payments", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "bet18": {"name": "bet18", "description": "Wage type amount for payments", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "bet19": {"name": "bet19", "description": "Wage type amount for payments", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "bet20": {"name": "bet20", "description": "Wage type amount for payments", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "bet21": {"name": "bet21", "description": "Wage type amount for payments", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "bet22": {"name": "bet22", "description": "Wage type amount for payments", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "bet23": {"name": "bet23", "description": "Wage type amount for payments", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "bet24": {"name": "bet24", "description": "Wage type amount for payments", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "bet25": {"name": "bet25", "description": "Wage type amount for payments", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "bet26": {"name": "bet26", "description": "Wage type amount for payments", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "bet27": {"name": "bet27", "description": "Wage type amount for payments", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "bet28": {"name": "bet28", "description": "Wage type amount for payments", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "bet29": {"name": "bet29", "description": "Wage type amount for payments", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "bet30": {"name": "bet30", "description": "Wage type amount for payments", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "bet31": {"name": "bet31", "description": "Wage type amount for payments", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "bet32": {"name": "bet32", "description": "Wage type amount for payments", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "bet33": {"name": "bet33", "description": "Wage type amount for payments", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "bet34": {"name": "bet34", "description": "Wage type amount for payments", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "bet35": {"name": "bet35", "description": "Wage type amount for payments", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "bet36": {"name": "bet36", "description": "Wage type amount for payments", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "bet37": {"name": "bet37", "description": "Wage type amount for payments", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "bet38": {"name": "bet38", "description": "Wage type amount for payments", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "bet39": {"name": "bet39", "description": "Wage type amount for payments", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "bet40": {"name": "bet40", "description": "Wage type amount for payments", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "bsgrd": {"name": "bsgrd", "description": "Capacity utilization level", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "cpind": {"name": "cpind", "description": "Planned compensation type", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "divgv": {"name": "divgv", "description": "Working hours per payroll period", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "ein01": {"name": "ein01", "description": "Time/measurement unit", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "ein02": {"name": "ein02", "description": "Time/measurement unit", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "ein03": {"name": "ein03", "description": "Time/measurement unit", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "ein04": {"name": "ein04", "description": "Time/measurement unit", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "ein05": {"name": "ein05", "description": "Time/measurement unit", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "ein06": {"name": "ein06", "description": "Time/measurement unit", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "ein07": {"name": "ein07", "description": "Time/measurement unit", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "ein08": {"name": "ein08", "description": "Time/measurement unit", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "ein09": {"name": "ein09", "description": "Time/measurement unit", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "ein10": {"name": "ein10", "description": "Time/measurement unit", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "ein11": {"name": "ein11", "description": "Time/measurement unit", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "ein12": {"name": "ein12", "description": "Time/measurement unit", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "ein13": {"name": "ein13", "description": "Time/measurement unit", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "ein14": {"name": "ein14", "description": "Time/measurement unit", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "ein15": {"name": "ein15", "description": "Time/measurement unit", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "ein16": {"name": "ein16", "description": "Time/measurement unit", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "ein17": {"name": "ein17", "description": "Time/measurement unit", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "ein18": {"name": "ein18", "description": "Time/measurement unit", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "ein19": {"name": "ein19", "description": "Time/measurement unit", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "ein20": {"name": "ein20", "description": "Time/measurement unit", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "ein21": {"name": "ein21", "description": "Time/measurement unit", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "ein22": {"name": "ein22", "description": "Time/measurement unit", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "ein23": {"name": "ein23", "description": "Time/measurement unit", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "ein24": {"name": "ein24", "description": "Time/measurement unit", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "ein25": {"name": "ein25", "description": "Time/measurement unit", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "ein26": {"name": "ein26", "description": "Time/measurement unit", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "ein27": {"name": "ein27", "description": "Time/measurement unit", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "ein28": {"name": "ein28", "description": "Time/measurement unit", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "ein29": {"name": "ein29", "description": "Time/measurement unit", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "ein30": {"name": "ein30", "description": "Time/measurement unit", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "ein31": {"name": "ein31", "description": "Time/measurement unit", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "ein32": {"name": "ein32", "description": "Time/measurement unit", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "ein33": {"name": "ein33", "description": "Time/measurement unit", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "ein34": {"name": "ein34", "description": "Time/measurement unit", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "ein35": {"name": "ein35", "description": "Time/measurement unit", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "ein36": {"name": "ein36", "description": "Time/measurement unit", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "ein37": {"name": "ein37", "description": "Time/measurement unit", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "ein38": {"name": "ein38", "description": "Time/measurement unit", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "ein39": {"name": "ein39", "description": "Time/measurement unit", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "ein40": {"name": "ein40", "description": "Time/measurement unit", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "endda": {"name": "endda", "description": "End date", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "falgk": {"name": "falgk", "description": "Case group catalog", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "falgr": {"name": "falgr", "description": "Case group", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "flag1": {"name": "flag1", "description": "Reserved field/unused field", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "flag2": {"name": "flag2", "description": "Reserved field/unused field", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "flag3": {"name": "flag3", "description": "Reserved field/unused field", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "flag4": {"name": "flag4", "description": "Reserved field/unused field", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "flaga": {"name": "flaga", "description": "General flag", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "grpvl": {"name": "grpvl", "description": "Grouping value for personnel assignments", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "histo": {"name": "histo", "description": "Historical record flag", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "ind01": {"name": "ind01", "description": "Indicator for indirect valuation", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "ind02": {"name": "ind02", "description": "Indicator for indirect valuation", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "ind03": {"name": "ind03", "description": "Indicator for indirect valuation", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "ind04": {"name": "ind04", "description": "Indicator for indirect valuation", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "ind05": {"name": "ind05", "description": "Indicator for indirect valuation", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "ind06": {"name": "ind06", "description": "Indicator for indirect valuation", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "ind07": {"name": "ind07", "description": "Indicator for indirect valuation", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "ind08": {"name": "ind08", "description": "Indicator for indirect valuation", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "ind09": {"name": "ind09", "description": "Indicator for indirect valuation", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "ind10": {"name": "ind10", "description": "Indicator for indirect valuation", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "ind11": {"name": "ind11", "description": "Indicator for indirect valuation", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "ind12": {"name": "ind12", "description": "Indicator for indirect valuation", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "ind13": {"name": "ind13", "description": "Indicator for indirect valuation", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "ind14": {"name": "ind14", "description": "Indicator for indirect valuation", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "ind15": {"name": "ind15", "description": "Indicator for indirect valuation", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "ind16": {"name": "ind16", "description": "Indicator for indirect valuation", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "ind17": {"name": "ind17", "description": "Indicator for indirect valuation", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "ind18": {"name": "ind18", "description": "Indicator for indirect valuation", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "ind19": {"name": "ind19", "description": "Indicator for indirect valuation", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "ind20": {"name": "ind20", "description": "Indicator for indirect valuation", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "ind21": {"name": "ind21", "description": "Indicator for indirect valuation", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "ind22": {"name": "ind22", "description": "Indicator for indirect valuation", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "ind23": {"name": "ind23", "description": "Indicator for indirect valuation", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "ind24": {"name": "ind24", "description": "Indicator for indirect valuation", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "ind25": {"name": "ind25", "description": "Indicator for indirect valuation", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "ind26": {"name": "ind26", "description": "Indicator for indirect valuation", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "ind27": {"name": "ind27", "description": "Indicator for indirect valuation", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "ind28": {"name": "ind28", "description": "Indicator for indirect valuation", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "ind29": {"name": "ind29", "description": "Indicator for indirect valuation", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "ind30": {"name": "ind30", "description": "Indicator for indirect valuation", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "ind31": {"name": "ind31", "description": "Indicator for indirect valuation", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "ind32": {"name": "ind32", "description": "Indicator for indirect valuation", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "ind33": {"name": "ind33", "description": "Indicator for indirect valuation", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "ind34": {"name": "ind34", "description": "Indicator for indirect valuation", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "ind35": {"name": "ind35", "description": "Indicator for indirect valuation", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "ind36": {"name": "ind36", "description": "Indicator for indirect valuation", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "ind37": {"name": "ind37", "description": "Indicator for indirect valuation", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "ind38": {"name": "ind38", "description": "Indicator for indirect valuation", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "ind39": {"name": "ind39", "description": "Indicator for indirect valuation", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "ind40": {"name": "ind40", "description": "Indicator for indirect valuation", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "itbld": {"name": "itbld", "description": "Infotype screen control", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "itxex": {"name": "itxex", "description": "Text exists for infotype", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "lga01": {"name": "lga01", "description": "Wage type", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "lga02": {"name": "lga02", "description": "Wage type", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "lga03": {"name": "lga03", "description": "Wage type", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "lga04": {"name": "lga04", "description": "Wage type", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "lga05": {"name": "lga05", "description": "Wage type", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "lga06": {"name": "lga06", "description": "Wage type", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "lga07": {"name": "lga07", "description": "Wage type", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "lga08": {"name": "lga08", "description": "Wage type", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "lga09": {"name": "lga09", "description": "Wage type", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "lga10": {"name": "lga10", "description": "Wage type", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "lga11": {"name": "lga11", "description": "Wage type", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "lga12": {"name": "lga12", "description": "Wage type", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "lga13": {"name": "lga13", "description": "Wage type", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "lga14": {"name": "lga14", "description": "Wage type", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "lga15": {"name": "lga15", "description": "Wage type", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "lga16": {"name": "lga16", "description": "Wage type", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "lga17": {"name": "lga17", "description": "Wage type", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "lga18": {"name": "lga18", "description": "Wage type", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "lga19": {"name": "lga19", "description": "Wage type", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "lga20": {"name": "lga20", "description": "Wage type", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "lga21": {"name": "lga21", "description": "Wage type", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "lga22": {"name": "lga22", "description": "Wage type", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "lga23": {"name": "lga23", "description": "Wage type", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "lga24": {"name": "lga24", "description": "Wage type", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "lga25": {"name": "lga25", "description": "Wage type", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "lga26": {"name": "lga26", "description": "Wage type", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "lga27": {"name": "lga27", "description": "Wage type", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "lga28": {"name": "lga28", "description": "Wage type", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "lga29": {"name": "lga29", "description": "Wage type", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "lga30": {"name": "lga30", "description": "Wage type", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "lga31": {"name": "lga31", "description": "Wage type", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "lga32": {"name": "lga32", "description": "Wage type", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "lga33": {"name": "lga33", "description": "Wage type", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "lga34": {"name": "lga34", "description": "Wage type", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "lga35": {"name": "lga35", "description": "Wage type", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "lga36": {"name": "lga36", "description": "Wage type", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "lga37": {"name": "lga37", "description": "Wage type", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "lga38": {"name": "lga38", "description": "Wage type", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "lga39": {"name": "lga39", "description": "Wage type", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "lga40": {"name": "lga40", "description": "Wage type", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "mandt": {"name": "mandt", "description": "Client", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "objps": {"name": "objps", "description": "Object identification", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "opk01": {"name": "opk01", "description": "Operation indicator for wage types", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "opk02": {"name": "opk02", "description": "Operation indicator for wage types", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "opk03": {"name": "opk03", "description": "Operation indicator for wage types", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "opk04": {"name": "opk04", "description": "Operation indicator for wage types", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "opk05": {"name": "opk05", "description": "Operation indicator for wage types", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "opk06": {"name": "opk06", "description": "Operation indicator for wage types", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "opk07": {"name": "opk07", "description": "Operation indicator for wage types", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "opk08": {"name": "opk08", "description": "Operation indicator for wage types", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "opk09": {"name": "opk09", "description": "Operation indicator for wage types", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "opk10": {"name": "opk10", "description": "Operation indicator for wage types", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "opk11": {"name": "opk11", "description": "Operation indicator for wage types", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "opk12": {"name": "opk12", "description": "Operation indicator for wage types", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "opk13": {"name": "opk13", "description": "Operation indicator for wage types", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "opk14": {"name": "opk14", "description": "Operation indicator for wage types", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "opk15": {"name": "opk15", "description": "Operation indicator for wage types", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "opk16": {"name": "opk16", "description": "Operation indicator for wage types", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "opk17": {"name": "opk17", "description": "Operation indicator for wage types", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "opk18": {"name": "opk18", "description": "Operation indicator for wage types", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "opk19": {"name": "opk19", "description": "Operation indicator for wage types", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "opk20": {"name": "opk20", "description": "Operation indicator for wage types", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "opk21": {"name": "opk21", "description": "Operation indicator for wage types", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "opk22": {"name": "opk22", "description": "Operation indicator for wage types", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "opk23": {"name": "opk23", "description": "Operation indicator for wage types", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "opk24": {"name": "opk24", "description": "Operation indicator for wage types", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "opk25": {"name": "opk25", "description": "Operation indicator for wage types", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "opk26": {"name": "opk26", "description": "Operation indicator for wage types", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "opk27": {"name": "opk27", "description": "Operation indicator for wage types", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "opk28": {"name": "opk28", "description": "Operation indicator for wage types", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "opk29": {"name": "opk29", "description": "Operation indicator for wage types", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "opk30": {"name": "opk30", "description": "Operation indicator for wage types", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "opk31": {"name": "opk31", "description": "Operation indicator for wage types", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "opk32": {"name": "opk32", "description": "Operation indicator for wage types", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "opk33": {"name": "opk33", "description": "Operation indicator for wage types", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "opk34": {"name": "opk34", "description": "Operation indicator for wage types", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "opk35": {"name": "opk35", "description": "Operation indicator for wage types", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "opk36": {"name": "opk36", "description": "Operation indicator for wage types", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "opk37": {"name": "opk37", "description": "Operation indicator for wage types", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "opk38": {"name": "opk38", "description": "Operation indicator for wage types", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "opk39": {"name": "opk39", "description": "Operation indicator for wage types", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "opk40": {"name": "opk40", "description": "Operation indicator for wage types", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "ordex": {"name": "ordex", "description": "Confirmation fields exist", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "orzst": {"name": "orzst", "description": "Cost of living allowance level", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "partn": {"name": "partn", "description": "Partnership", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "pernr": {"name": "pernr", "description": "Personnel number", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "preas": {"name": "preas", "description": "Reason for changing master data", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "refex": {"name": "refex", "description": "Reference fields exist (primary/secondary costs)", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "rese1": {"name": "rese1", "description": "Reserved field/unused field of length 2", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "rese2": {"name": "rese2", "description": "Reserved field/unused field of length 2", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "seqnr": {"name": "seqnr", "description": "Number of infotype record with same key", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "sprps": {"name": "sprps", "description": "Lock indicator for HR master data record", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "stvor": {"name": "stvor", "description": "Date of next increase", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "subty": {"name": "subty", "description": "Subtype", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "trfar": {"name": "trfar", "description": "Pay scale type", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "trfgb": {"name": "trfgb", "description": "Pay scale area", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "trfgr": {"name": "trfgr", "description": "Pay scale group", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "trfst": {"name": "trfst", "description": "Pay scale level", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "uname": {"name": "uname", "description": "Name of person who changed object", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "vglgb": {"name": "vglgb", "description": "Comparison pay scale area", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "vglgr": {"name": "vglgr", "description": "Comparison pay scale group", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "vglst": {"name": "vglst", "description": "Comparison pay scale level", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "vglsv": {"name": "vglsv", "description": "Date of next increase", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "vglta": {"name": "vglta", "description": "Comparison pay scale type", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "waers": {"name": "waers", "description": "Currency key", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": "_fivetran_synced", "loaded_at_query": null, "meta": {}, "tags": []}, "patch_path": null, "unrendered_config": {"loaded_at_field": "_fivetran_synced", "enabled": true, "loaded_at_query": null, "meta": {}, "tags": []}, "relation_name": "\"postgres\".\"public\".\"sap_pa0008_data\"", "created_at": 1756850331.8667176, "unrendered_database": "{% if target.type != 'spark' %}{{ var('sap_database', target.database) }}{% endif %}", "unrendered_schema": "{{ var('sap_schema', 'sap') }}", "doc_blocks": []}, "source.sap.sap.pa0031": {"database": "postgres", "schema": "public", "name": "pa0031", "resource_type": "source", "package_name": "sap", "path": "models/staging/src_sap.yml", "original_file_path": "models/staging/src_sap.yml", "unique_id": "source.sap.sap.pa0031", "fqn": ["sap", "staging", "sap", "pa0031"], "source_name": "sap", "source_description": "", "loader": "fivetran", "identifier": "sap_pa0031_data", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": "_fivetran_synced", "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "HR master record--infotype 0031 (Reference personnel numbers)", "columns": {"_fivetran_deleted": {"name": "_fivetran_deleted", "description": "Fivetran deletion marker", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "_fivetran_rowid": {"name": "_fivetran_rowid", "description": "Fivetran unique row ID", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "_fivetran_synced": {"name": "_fivetran_synced", "description": "Fivetran sync timestamp", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "aedtm": {"name": "aedtm", "description": "Changed on", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "begda": {"name": "begda", "description": "Start date", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "endda": {"name": "endda", "description": "End date", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "flag1": {"name": "flag1", "description": "Reserved field/unused field", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "flag2": {"name": "flag2", "description": "Reserved field/unused field", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "flag3": {"name": "flag3", "description": "Reserved field/unused field", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "flag4": {"name": "flag4", "description": "Reserved field/unused field", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "grpvl": {"name": "grpvl", "description": "Grouping value for personnel assignments", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "histo": {"name": "histo", "description": "Historical record flag", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "itbld": {"name": "itbld", "description": "Infotype screen control", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "itxex": {"name": "itxex", "description": "Text exists for infotype", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "mandt": {"name": "mandt", "description": "Client", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "objps": {"name": "objps", "description": "Object information", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "ordex": {"name": "ordex", "description": "Confirmation fields exist", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "pernr": {"name": "pernr", "description": "Personnel number", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "preas": {"name": "preas", "description": "Reason for changing master data", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "refex": {"name": "refex", "description": "Reference fields exist", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "rese1": {"name": "rese1", "description": "Reserved field/unused field of length 2", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "rese2": {"name": "rese2", "description": "Reserved field/unused field of length 2", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "rfp01": {"name": "rfp01", "description": "Reference personnel number", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "rfp02": {"name": "rfp02", "description": "Reference personnel number", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "rfp03": {"name": "rfp03", "description": "Reference personnel number", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "rfp04": {"name": "rfp04", "description": "Reference personnel number", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "rfp05": {"name": "rfp05", "description": "Reference personnel number", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "rfp06": {"name": "rfp06", "description": "Reference personnel number", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "rfp07": {"name": "rfp07", "description": "Reference personnel number", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "rfp08": {"name": "rfp08", "description": "Reference personnel number", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "rfp09": {"name": "rfp09", "description": "Reference personnel number", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "rfp10": {"name": "rfp10", "description": "Reference personnel number", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "rfp11": {"name": "rfp11", "description": "Reference personnel number", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "rfp12": {"name": "rfp12", "description": "Reference personnel number", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "rfp13": {"name": "rfp13", "description": "Reference personnel number", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "rfp14": {"name": "rfp14", "description": "Reference personnel number", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "rfp15": {"name": "rfp15", "description": "Reference personnel number", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "rfp16": {"name": "rfp16", "description": "Reference personnel number", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "rfp17": {"name": "rfp17", "description": "Reference personnel number", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "rfp18": {"name": "rfp18", "description": "Reference personnel number", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "rfp19": {"name": "rfp19", "description": "Reference personnel number", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "rfp20": {"name": "rfp20", "description": "Reference personnel number", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "seqnr": {"name": "seqnr", "description": "Number of infotype record with same key", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "sprps": {"name": "sprps", "description": "Lock indicator for HR master data record", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "subty": {"name": "subty", "description": "Subtype", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "uname": {"name": "uname", "description": "Name of person who changed object", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": "_fivetran_synced", "loaded_at_query": null, "meta": {}, "tags": []}, "patch_path": null, "unrendered_config": {"loaded_at_field": "_fivetran_synced", "enabled": true, "loaded_at_query": null, "meta": {}, "tags": []}, "relation_name": "\"postgres\".\"public\".\"sap_pa0031_data\"", "created_at": 1756850331.867516, "unrendered_database": "{% if target.type != 'spark' %}{{ var('sap_database', target.database) }}{% endif %}", "unrendered_schema": "{{ var('sap_schema', 'sap') }}", "doc_blocks": []}, "source.sap.sap.ska1": {"database": "postgres", "schema": "public", "name": "ska1", "resource_type": "source", "package_name": "sap", "path": "models/staging/src_sap.yml", "original_file_path": "models/staging/src_sap.yml", "unique_id": "source.sap.sap.ska1", "fqn": ["sap", "staging", "sap", "ska1"], "source_name": "sap", "source_description": "", "loader": "fivetran", "identifier": "sap_ska1_data", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": "_fivetran_synced", "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "G/L Account Master (Chart of Accounts)", "columns": {"_fivetran_deleted": {"name": "_fivetran_deleted", "description": "Fivetran deletion marker", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "_fivetran_rowid": {"name": "_fivetran_rowid", "description": "Fivetran unique row ID", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "_fivetran_synced": {"name": "_fivetran_synced", "description": "Fivetran sync timestamp", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "bilkt": {"name": "bilkt", "description": "Group account number", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "erdat": {"name": "erdat", "description": "Date on which the record was created", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "ernam": {"name": "ernam", "description": "Name of person who created the object", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "func_area": {"name": "func_area", "description": "Functional area", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "gvtyp": {"name": "gvtyp", "description": "P&L statement account type", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "ktoks": {"name": "ktoks", "description": "G/L account group", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "ktopl": {"name": "ktopl", "description": "Chart of accounts", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "mandt": {"name": "mandt", "description": "Client", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "mcod1": {"name": "mcod1", "description": "Search term 1", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "mustr": {"name": "mustr", "description": "Number of the sample account", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "sakan": {"name": "sakan", "description": "G/L account number, significant length", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "saknr": {"name": "saknr", "description": "G/L account number", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "vbund": {"name": "vbund", "description": "Company id of tradiing partner", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "xbilk": {"name": "xbilk", "description": "Indicator (account is a balance sheet account?)", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "xloev": {"name": "xloev", "description": "Indicator (account marked for deletion?)", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "xspea": {"name": "xspea", "description": "Indicator (account is blocked for creation?)", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "xspeb": {"name": "xspeb", "description": "Indicator (Is account blocked for posting?)", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "xspep": {"name": "xspep", "description": "Indicator (Account blocked for planning?)", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": "_fivetran_synced", "loaded_at_query": null, "meta": {}, "tags": []}, "patch_path": null, "unrendered_config": {"loaded_at_field": "_fivetran_synced", "enabled": true, "loaded_at_query": null, "meta": {}, "tags": []}, "relation_name": "\"postgres\".\"public\".\"sap_ska1_data\"", "created_at": 1756850331.868198, "unrendered_database": "{% if target.type != 'spark' %}{{ var('sap_database', target.database) }}{% endif %}", "unrendered_schema": "{{ var('sap_schema', 'sap') }}", "doc_blocks": []}, "source.sap.sap.t001": {"database": "postgres", "schema": "public", "name": "t001", "resource_type": "source", "package_name": "sap", "path": "models/staging/src_sap.yml", "original_file_path": "models/staging/src_sap.yml", "unique_id": "source.sap.sap.t001", "fqn": ["sap", "staging", "sap", "t001"], "source_name": "sap", "source_description": "", "loader": "fivetran", "identifier": "sap_t001_data", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": "_fivetran_synced", "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "Company codes", "columns": {"_fivetran_deleted": {"name": "_fivetran_deleted", "description": "Fivetran deletion marker", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "_fivetran_sap_archived": {"name": "_fivetran_sap_archived", "description": "Fivetran SAP archive marker", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "_fivetran_synced": {"name": "_fivetran_synced", "description": "Fivetran sync timestamp", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "adrnr": {"name": "adrnr", "description": "Address number", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "bapovar": {"name": "bapovar", "description": "BAPI variant for company code", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "bukrs": {"name": "bukrs", "description": "Company code", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "butxt": {"name": "butxt", "description": "Company name", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "bukrs_glob": {"name": "bukrs_glob", "description": "Global company code", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "buvar": {"name": "buvar", "description": "Posting period variant", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "dkweg": {"name": "dkweg", "description": "Payment methods permitted", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "dtamtc": {"name": "dtamtc", "description": "Automatic tax calculation procedure", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "dtaxr": {"name": "dtaxr", "description": "Tax reporting country", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "dtprov": {"name": "dtprov", "description": "Withholding tax provider", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "dttaxc": {"name": "dttaxc", "description": "Withholding tax code", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "dttdsp": {"name": "dttdsp", "description": "Display withholding tax data", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "ebukr": {"name": "ebukr", "description": "Central company code", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "fdbuk": {"name": "fdbuk", "description": "Head office company code", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "fikrs": {"name": "fikrs", "description": "Financial management area", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "fm_derive_acc": {"name": "fm_derive_acc", "description": "FM derive account assignment", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "fmhrdate": {"name": "fmhrdate", "description": "Date for FM budget check", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "fstva": {"name": "fstva", "description": "Financial statement version", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "fstvare": {"name": "fstvare", "description": "Financial statement version (retirement)", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "impda": {"name": "impda", "description": "Import date", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "infmt": {"name": "infmt", "description": "Invoice format key", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "kkber": {"name": "kkber", "description": "Credit control area", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "kokfi": {"name": "kokfi", "description": "FI system indicator", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "kopim": {"name": "kopim", "description": "Payment methods copied", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "ktop2": {"name": "ktop2", "description": "Alternative chart of accounts", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "ktopl": {"name": "ktopl", "description": "Chart of accounts", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "land1": {"name": "land1", "description": "Country key", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "mandt": {"name": "mandt", "description": "Client", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "mregl": {"name": "mregl", "description": "Tax reporting country for EU", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "mwska": {"name": "mwska", "description": "Default tax code for sales", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "mwskv": {"name": "mwskv", "description": "Default tax code for purchases", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "offsacct": {"name": "offsacct", "description": "Offset account", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "opvar": {"name": "opvar", "description": "Open item clearing variant", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "ort01": {"name": "ort01", "description": "City", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "periv": {"name": "periv", "description": "Fiscal year variant", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "pp_pdate": {"name": "pp_pdate", "description": "Planned posting date", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "pst_per_var": {"name": "pst_per_var", "description": "Posting period variant", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "rcomp": {"name": "rcomp", "description": "Company", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "spras": {"name": "spras", "description": "Language key", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "stceg": {"name": "stceg", "description": "VAT registration number", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "surccm": {"name": "surccm", "description": "Surrogate company code mapping", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "txjcd": {"name": "txjcd", "description": "Tax jurisdiction code", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "txkrs": {"name": "txkrs", "description": "Currency translation key", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "umkrs": {"name": "umkrs", "description": "Intercompany clearing account", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "waabw": {"name": "waabw", "description": "Default exchange rate type", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "waers": {"name": "waers", "description": "Currency key", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "wfvar": {"name": "wfvar", "description": "Workflow variant", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "wt_newwt": {"name": "wt_newwt", "description": "Withholding tax changeover indicator", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "xbbba": {"name": "xbbba", "description": "Business area is mandatory", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "xbbbe": {"name": "xbbbe", "description": "Business area derived from profit center", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "xbbbf": {"name": "xbbbf", "description": "Derivation of business area from plant", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "xbbko": {"name": "xbbko", "description": "Business area derived from cost object", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "xbbsc": {"name": "xbbsc", "description": "Business area derived from sales order", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "xcession": {"name": "xcession", "description": "Tax-exempt company indicator", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "xcos": {"name": "xcos", "description": "Cost of sales accounting active", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "xcovr": {"name": "xcovr", "description": "Commitment item is required", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "xeink": {"name": "xeink", "description": "Purchasing data maintained", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "xextb": {"name": "xextb", "description": "External business partner required", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "xfdis": {"name": "xfdis", "description": "Discount is fixed", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "xfdmm": {"name": "xfdmm", "description": "Materials management active", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "xfdsd": {"name": "xfdsd", "description": "Sales and distribution active", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "xfmca": {"name": "xfmca", "description": "FM active (cash-based)", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "xfmcb": {"name": "xfmcb", "description": "FM active (budget-based)", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "xfmco": {"name": "xfmco", "description": "FM active (commitment-based)", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "xgjrv": {"name": "xgjrv", "description": "Journal voucher active", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "xgsbe": {"name": "xgsbe", "description": "Business area financials active", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "xjvaa": {"name": "xjvaa", "description": "JV accounting active", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "xkdft": {"name": "xkdft", "description": "Default tax indicator", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "xkkbi": {"name": "xkkbi", "description": "Credit management active", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "xmwsn": {"name": "xmwsn", "description": "New tax procedure active", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "xnegp": {"name": "xnegp", "description": "Negative postings allowed", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "xprod": {"name": "xprod", "description": "Product costing active", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "xskfn": {"name": "xskfn", "description": "Reconciliation accounts required", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "xslta": {"name": "xslta", "description": "SLA transfer active", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "xsplt": {"name": "xsplt", "description": "Document splitting active", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "xstdt": {"name": "xstdt", "description": "Statistics date usage", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "xvalv": {"name": "xvalv", "description": "Use valuation view", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "xvatdate": {"name": "xvatdate", "description": "VAT date active", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "xvvwa": {"name": "xvvwa", "description": "Vendor withholding tax active", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": "_fivetran_synced", "loaded_at_query": null, "meta": {}, "tags": []}, "patch_path": null, "unrendered_config": {"loaded_at_field": "_fivetran_synced", "enabled": true, "loaded_at_query": null, "meta": {}, "tags": []}, "relation_name": "\"postgres\".\"public\".\"sap_t001_data\"", "created_at": 1756850331.8691323, "unrendered_database": "{% if target.type != 'spark' %}{{ var('sap_database', target.database) }}{% endif %}", "unrendered_schema": "{{ var('sap_schema', 'sap') }}", "doc_blocks": []}, "source.sap.sap.t001w": {"database": "postgres", "schema": "public", "name": "t001w", "resource_type": "source", "package_name": "sap", "path": "models/staging/src_sap.yml", "original_file_path": "models/staging/src_sap.yml", "unique_id": "source.sap.sap.t001w", "fqn": ["sap", "staging", "sap", "t001w"], "source_name": "sap", "source_description": "", "loader": "fivetran", "identifier": "sap_t001w_data", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": "_fivetran_synced", "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "Plants/Branches", "columns": {"achvm": {"name": "achvm", "description": "Material status in plant", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "adrnr": {"name": "adrnr", "description": "Address number", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "awsls": {"name": "awsls", "description": "Sales organization distribution channel", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "bapovar": {"name": "bapovar", "description": "BAPI variant for plant", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "bedpl": {"name": "bedpl", "description": "MRP area", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "betol": {"name": "betol", "description": "Tolerance group", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "bukrs": {"name": "bukrs", "description": "Company code", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "bukrs_glob": {"name": "bukrs_glob", "description": "Global company code", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "butxt": {"name": "butxt", "description": "Company name", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "buvar": {"name": "buvar", "description": "Posting period variant", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "bwkey": {"name": "bwkey", "description": "Valuation area", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "bzirk": {"name": "bzirk", "description": "Sales district", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "bzqhl": {"name": "bzqhl", "description": "Plant-specific rounding profile", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "chazv": {"name": "chazv", "description": "Batch status for plant", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "chazv_old": {"name": "chazv_old", "description": "Old batch status", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "cityc": {"name": "cityc", "description": "City code", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "counc": {"name": "counc", "description": "County code", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "dep_store": {"name": "dep_store", "description": "Store department indicator", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "dkweg": {"name": "dkweg", "description": "Payment method allowed", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "dtamtc": {"name": "dtamtc", "description": "Automatic tax determination", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "dtaxr": {"name": "dtaxr", "description": "Tax region", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "dtprov": {"name": "dtprov", "description": "Withholding tax provider", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "dttaxc": {"name": "dttaxc", "description": "Withholding tax code", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "dttdsp": {"name": "dttdsp", "description": "Display withholding tax data", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "dvsart": {"name": "dvsart", "description": "Document category", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "ebukr": {"name": "ebukr", "description": "Central company code", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "ekorg": {"name": "ekorg", "description": "Purchasing organization", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "fabkl": {"name": "fabkl", "description": "Factory calendar", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "fdbuk": {"name": "fdbuk", "description": "Head office company code", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "fikrs": {"name": "fikrs", "description": "Financial management area", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "fm_derive_acc": {"name": "fm_derive_acc", "description": "FM derive account assignment", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "fmhrdate": {"name": "fmhrdate", "description": "Budget check date", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "fprfw": {"name": "fprfw", "description": "Pricing profile for warehouse", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "fsh_bom_maintenance": {"name": "fsh_bom_maintenance", "description": "Fashion BOM maintenance", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "fsh_mg_arun_req": {"name": "fsh_mg_arun_req", "description": "ARUN requirement for fashion allocation", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "fsh_seaim": {"name": "fsh_seaim", "description": "Fashion season indicator", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "fstva": {"name": "fstva", "description": "Financial statement version", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "fstvare": {"name": "fstvare", "description": "Financial statement version for reporting", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "hvr_change_time": {"name": "hvr_change_time", "description": "HVR change timestamp", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "hvr_is_deleted": {"name": "hvr_is_deleted", "description": "HVR deletion flag", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "impda": {"name": "impda", "description": "Import date", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "infmt": {"name": "infmt", "description": "Invoice format", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "iwerk": {"name": "iwerk", "description": "Maintenance planning plant", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "j_1bbranch": {"name": "j_1bbranch", "description": "Branch for Brazil localization", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "kkber": {"name": "kkber", "description": "Credit control area", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "kkowk": {"name": "kkowk", "description": "Order type", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "kokfi": {"name": "kokfi", "description": "FI indicator", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "kopim": {"name": "kopim", "description": "Payment methods copied", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "kordb": {"name": "kordb", "description": "Order backlog", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "ktop2": {"name": "ktop2", "description": "Alternative chart of accounts", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "ktopl": {"name": "ktopl", "description": "Chart of accounts", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "kunnr": {"name": "kunnr", "description": "Customer number", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "land1": {"name": "land1", "description": "Country key", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "let01": {"name": "let01", "description": "Indicator for letter 1", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "let02": {"name": "let02", "description": "Indicator for letter 2", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "let03": {"name": "let03", "description": "Indicator for letter 3", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "lifnr": {"name": "lifnr", "description": "Vendor number", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "mgvlareval": {"name": "mgvlareval", "description": "Legal valuation update indicator", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "mgvlaupd": {"name": "mgvlaupd", "description": "Material group valuation update", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "mgvupd": {"name": "mgvupd", "description": "Material valuation update indicator", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "misch": {"name": "misch", "description": "Mixed storage indicator", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "mregl": {"name": "mregl", "description": "EU tax reporting country", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "mwska": {"name": "mwska", "description": "Default sales tax code", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "mwskv": {"name": "mwskv", "description": "Default purchase tax code", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "name1": {"name": "name1", "description": "Plant name 1", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "name2": {"name": "name2", "description": "Plant name 2", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "nodetype": {"name": "nodetype", "description": "Node type", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "nschema": {"name": "nschema", "description": "Pricing procedure schema", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "offsacct": {"name": "offsacct", "description": "Offset account", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "oihcredipi": {"name": "oihcredipi", "description": "Credit indicator for OIL", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "oihvtype": {"name": "oihvtype", "description": "Handling unit type (OIL)", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "oilival": {"name": "oilival", "description": "OIL inbound valuation indicator", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "opvar": {"name": "opvar", "description": "Open item management variant", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "ort01": {"name": "ort01", "description": "City", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "periv": {"name": "periv", "description": "Fiscal year variant", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "pfach": {"name": "pfach", "description": "PO Box", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "pkosa": {"name": "pkosa", "description": "Planning strategy group", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "pp_pdate": {"name": "pp_pdate", "description": "Planned posting date", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "pst_per_var": {"name": "pst_per_var", "description": "Posting period variant", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "pstlz": {"name": "pstlz", "description": "Postal code", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "rcomp": {"name": "rcomp", "description": "Company", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "regio": {"name": "regio", "description": "Region (state/province)", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "sourcing": {"name": "sourcing", "description": "Sourcing indicator", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "spart": {"name": "spart", "description": "Division", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "spras": {"name": "spras", "description": "Language key", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "stceg": {"name": "stceg", "description": "VAT registration number", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "storetype": {"name": "storetype", "description": "Store type", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "stras": {"name": "stras", "description": "Street and house number", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "surccm": {"name": "surccm", "description": "Surrogate company code mapping", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "taxiw": {"name": "taxiw", "description": "Tax indicator for plant", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "txjcd": {"name": "txjcd", "description": "Tax jurisdiction code", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "txkrs": {"name": "txkrs", "description": "Currency translation key", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "txnam_ma1": {"name": "txnam_ma1", "description": "Tax name master 1", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "txnam_ma2": {"name": "txnam_ma2", "description": "Tax name master 2", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "txnam_ma3": {"name": "txnam_ma3", "description": "Tax name master 3", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "umkrs": {"name": "umkrs", "description": "Intercompany clearing indicator", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "vkorg": {"name": "vkorg", "description": "Sales organization", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "vlfkz": {"name": "vlfkz", "description": "Delivery split indicator", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "vstel": {"name": "vstel", "description": "Shipping point", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "vtbfi": {"name": "vtbfi", "description": "Treasury company indicator", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "vtweg": {"name": "vtweg", "description": "Distribution channel", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "waabw": {"name": "waabw", "description": "Default exchange rate type", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "waers": {"name": "waers", "description": "Currency key", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "wfvar": {"name": "wfvar", "description": "Workflow variant", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "wksop": {"name": "wksop", "description": "Store opening planning profile", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "wt_newwt": {"name": "wt_newwt", "description": "New withholding tax indicator", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "xbbba": {"name": "xbbba", "description": "Business area is mandatory", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "xbbbe": {"name": "xbbbe", "description": "Business area from plant", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "xbbbf": {"name": "xbbbf", "description": "Business area from profit center", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "xbbko": {"name": "xbbko", "description": "Business area from cost object", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "xbbsc": {"name": "xbbsc", "description": "Business area from sales order", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "xcession": {"name": "xcession", "description": "Tax exemption indicator", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "xcos": {"name": "xcos", "description": "Cost of sales accounting active", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "xcovr": {"name": "xcovr", "description": "Commitment item required", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "xeink": {"name": "xeink", "description": "Purchasing active", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "xextb": {"name": "xextb", "description": "External business partner required", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "xfdis": {"name": "xfdis", "description": "Fixed discount allowed", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "xfdmm": {"name": "xfdmm", "description": "Materials management active", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "xfdsd": {"name": "xfdsd", "description": "Sales and distribution active", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "xfmca": {"name": "xfmca", "description": "Funds management (cash-based)", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "xfmcb": {"name": "xfmcb", "description": "Funds management (budget-based)", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "xfmco": {"name": "xfmco", "description": "Funds management (commitment-based)", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "xgjrv": {"name": "xgjrv", "description": "Journal voucher active", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "xgsbe": {"name": "xgsbe", "description": "Business area financials active", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "xjvaa": {"name": "xjvaa", "description": "Joint venture accounting active", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "xkdft": {"name": "xkdft", "description": "Default tax indicator", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "xkkbi": {"name": "xkkbi", "description": "Credit management active", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "xmwsn": {"name": "xmwsn", "description": "New tax procedure active", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "xnegp": {"name": "xnegp", "description": "Negative postings allowed", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "xprod": {"name": "xprod", "description": "Product costing active", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "xskfn": {"name": "xskfn", "description": "Reconciliation account required", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "xslta": {"name": "xslta", "description": "SLA transfer active", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "xsplt": {"name": "xsplt", "description": "Document splitting active", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "xstdt": {"name": "xstdt", "description": "Use statistics date", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "xvalv": {"name": "xvalv", "description": "Use valuation view", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "xvatdate": {"name": "xvatdate", "description": "VAT date active", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "xvvwa": {"name": "xvvwa", "description": "Vendor withholding tax active", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "zone1": {"name": "zone1", "description": "Zone key", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": "_fivetran_synced", "loaded_at_query": null, "meta": {}, "tags": []}, "patch_path": null, "unrendered_config": {"loaded_at_field": "_fivetran_synced", "enabled": true, "loaded_at_query": null, "meta": {}, "tags": []}, "relation_name": "\"postgres\".\"public\".\"sap_t001w_data\"", "created_at": 1756850331.8702953, "unrendered_database": "{% if target.type != 'spark' %}{{ var('sap_database', target.database) }}{% endif %}", "unrendered_schema": "{{ var('sap_schema', 'sap') }}", "doc_blocks": []}, "source.sap.sap.t024": {"database": "postgres", "schema": "public", "name": "t024", "resource_type": "source", "package_name": "sap", "path": "models/staging/src_sap.yml", "original_file_path": "models/staging/src_sap.yml", "unique_id": "source.sap.sap.t024", "fqn": ["sap", "staging", "sap", "t024"], "source_name": "sap", "source_description": "", "loader": "fivetran", "identifier": "sap_t024_data", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": "_fivetran_synced", "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "Purchasing groups", "columns": {"_fivetran_deleted": {"name": "_fivetran_deleted", "description": "Fivetran deletion marker", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "_fivetran_rowid": {"name": "_fivetran_rowid", "description": "Fivetran unique row ID", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "_fivetran_sap_archived": {"name": "_fivetran_sap_archived", "description": "Fivetran SAP archive marker", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "_fivetran_synced": {"name": "_fivetran_synced", "description": "Fivetran sync timestamp", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "ekgrp": {"name": "ekgrp", "description": "Purchasing group", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "eknam": {"name": "eknam", "description": "Name of purchasing group", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "ektel": {"name": "ektel", "description": "Telephone number", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "ldest": {"name": "ldest", "description": "Logical destination", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "mandt": {"name": "mandt", "description": "Client", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "smtp_addr": {"name": "smtp_addr", "description": "Email address", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "tel_extens": {"name": "tel_extens", "description": "Telephone extension", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "tel_number": {"name": "tel_number", "description": "Telephone number", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "telfx": {"name": "telfx", "description": "Fax number", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": "_fivetran_synced", "loaded_at_query": null, "meta": {}, "tags": []}, "patch_path": null, "unrendered_config": {"loaded_at_field": "_fivetran_synced", "enabled": true, "loaded_at_query": null, "meta": {}, "tags": []}, "relation_name": "\"postgres\".\"public\".\"sap_t024_data\"", "created_at": 1756850331.8709433, "unrendered_database": "{% if target.type != 'spark' %}{{ var('sap_database', target.database) }}{% endif %}", "unrendered_schema": "{{ var('sap_schema', 'sap') }}", "doc_blocks": []}, "source.sap.sap.t024e": {"database": "postgres", "schema": "public", "name": "t024e", "resource_type": "source", "package_name": "sap", "path": "models/staging/src_sap.yml", "original_file_path": "models/staging/src_sap.yml", "unique_id": "source.sap.sap.t024e", "fqn": ["sap", "staging", "sap", "t024e"], "source_name": "sap", "source_description": "", "loader": "fivetran", "identifier": "sap_t024e_data", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": "_fivetran_synced", "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "Purchasing organization text", "columns": {"ekorg": {"name": "ekorg", "description": "Purchasing organization", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "mandt": {"name": "mandt", "description": "Client", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "ekotx": {"name": "ekotx", "description": "Description of the purchasing organization", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "txfus": {"name": "txfus", "description": "Function for text determination", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "txgru": {"name": "txgru", "description": "Text group", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "bpeff": {"name": "bpeff", "description": "Effective date of text", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "txkop": {"name": "txkop", "description": "Copying rule for text", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "kalse": {"name": "kalse", "description": "Access sequence number", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "txadr": {"name": "txadr", "description": "Text address number", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "mkals": {"name": "mkals", "description": "Sequence for access", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "bukrs": {"name": "bukrs", "description": "Company code", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "bukrs_ntr": {"name": "bukrs_ntr", "description": "Company code description (non-translation ready)", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "_fivetran_deleted": {"name": "_fivetran_deleted", "description": "Fivetran deletion marker", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "_fivetran_synced": {"name": "_fivetran_synced", "description": "Fivetran sync timestamp", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "_fivetran_sap_archived": {"name": "_fivetran_sap_archived", "description": "Fivetran SAP archive marker", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": "_fivetran_synced", "loaded_at_query": null, "meta": {}, "tags": []}, "patch_path": null, "unrendered_config": {"loaded_at_field": "_fivetran_synced", "enabled": true, "loaded_at_query": null, "meta": {}, "tags": []}, "relation_name": "\"postgres\".\"public\".\"sap_t024e_data\"", "created_at": 1756850331.8716094, "unrendered_database": "{% if target.type != 'spark' %}{{ var('sap_database', target.database) }}{% endif %}", "unrendered_schema": "{{ var('sap_schema', 'sap') }}", "doc_blocks": []}, "source.sap.sap.t134": {"database": "postgres", "schema": "public", "name": "t134", "resource_type": "source", "package_name": "sap", "path": "models/staging/src_sap.yml", "original_file_path": "models/staging/src_sap.yml", "unique_id": "source.sap.sap.t134", "fqn": ["sap", "staging", "sap", "t134"], "source_name": "sap", "source_description": "", "loader": "fivetran", "identifier": "sap_t134_data", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": "_fivetran_synced", "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "Material types", "columns": {"_fivetran_deleted": {"name": "_fivetran_deleted", "description": "Fivetran deletion marker", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "_fivetran_rowid": {"name": "_fivetran_rowid", "description": "Fivetran unique row ID", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "_fivetran_synced": {"name": "_fivetran_synced", "description": "Fivetran sync timestamp", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "aranz": {"name": "aranz", "description": "Layout indicator for material master", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "ardel": {"name": "ardel", "description": "Flag for deletion of layout", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "begru": {"name": "begru", "description": "Authorization group", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "bsext": {"name": "bsext", "description": "External number assignment allowed", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "bsint": {"name": "bsint", "description": "Internal number assignment allowed", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "cchis": {"name": "cchis", "description": "Change document indicator", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "chneu": {"name": "chneu", "description": "Indicator (New entries allowed)", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "class": {"name": "class", "description": "Material type class", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "ctype": {"name": "ctype", "description": "Classification type", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "ekalr": {"name": "ekalr", "description": "Costing indicator", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "envop": {"name": "envop", "description": "Environmentally relevant", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "flref": {"name": "flref", "description": "Material type references another", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "hvr_change_time": {"name": "hvr_change_time", "description": "HVR change timestamp", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "hvr_is_deleted": {"name": "hvr_is_deleted", "description": "HVR deletion flag", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "izust": {"name": "izust", "description": "Status for inventory management", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "kkref": {"name": "kkref", "description": "Reference key for variant configuration", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "kzgrp": {"name": "kzgrp", "description": "Group material type", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "kzkfg": {"name": "kzkfg", "description": "Configurable material indicator", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "kzmpn": {"name": "kzmpn", "description": "Manufacturer part number allowed", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "kzpip": {"name": "kzpip", "description": "Pipeline material indicator", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "kzprc": {"name": "kzprc", "description": "Pricing allowed indicator", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "kzrac": {"name": "kzrac", "description": "Returnable packaging indicator", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "kzvpr": {"name": "kzvpr", "description": "Valuation allowed indicator", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "mandt": {"name": "mandt", "description": "Client", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "mbref": {"name": "mbref", "description": "Material type reference", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "mstae": {"name": "mstae", "description": "Cross-plant material status", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "mtart": {"name": "mtart", "description": "Material type", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "mtref": {"name": "mtref", "description": "Reference material type", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "numke": {"name": "numke", "description": "External number range key", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "numki": {"name": "numki", "description": "Internal number range key", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "prdru": {"name": "prdru", "description": "Period indicator for price determination", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "pstat": {"name": "pstat", "description": "Maintenance status", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "vmtpo": {"name": "vmtpo", "description": "Group material type for variants", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "vnumke": {"name": "vnumke", "description": "External number range (variant)", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "vnumki": {"name": "vnumki", "description": "Internal number range (variant)", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "vprsv": {"name": "vprsv", "description": "Price control indicator", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "vtype": {"name": "vtype", "description": "Variant type", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "wmakg": {"name": "wmakg", "description": "Weight unit group", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": "_fivetran_synced", "loaded_at_query": null, "meta": {}, "tags": []}, "patch_path": null, "unrendered_config": {"loaded_at_field": "_fivetran_synced", "enabled": true, "loaded_at_query": null, "meta": {}, "tags": []}, "relation_name": "\"postgres\".\"public\".\"sap_t134_data\"", "created_at": 1756850331.8723705, "unrendered_database": "{% if target.type != 'spark' %}{{ var('sap_database', target.database) }}{% endif %}", "unrendered_schema": "{{ var('sap_schema', 'sap') }}", "doc_blocks": []}, "source.sap.sap.t134t": {"database": "postgres", "schema": "public", "name": "t134t", "resource_type": "source", "package_name": "sap", "path": "models/staging/src_sap.yml", "original_file_path": "models/staging/src_sap.yml", "unique_id": "source.sap.sap.t134t", "fqn": ["sap", "staging", "sap", "t134t"], "source_name": "sap", "source_description": "", "loader": "fivetran", "identifier": "sap_t134t_data", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": "_fivetran_synced", "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "Material type descriptions", "columns": {"_fivetran_deleted": {"name": "_fivetran_deleted", "description": "Fivetran deletion marker", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "_fivetran_rowid": {"name": "_fivetran_rowid", "description": "Fivetran unique row ID", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "_fivetran_synced": {"name": "_fivetran_synced", "description": "Fivetran sync timestamp", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "mandt": {"name": "mandt", "description": "Client", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "mtart": {"name": "mtart", "description": "Material type", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "mtbez": {"name": "mtbez", "description": "Description of material type", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "spras": {"name": "spras", "description": "Language key", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": "_fivetran_synced", "loaded_at_query": null, "meta": {}, "tags": []}, "patch_path": null, "unrendered_config": {"loaded_at_field": "_fivetran_synced", "enabled": true, "loaded_at_query": null, "meta": {}, "tags": []}, "relation_name": "\"postgres\".\"public\".\"sap_t134t_data\"", "created_at": 1756850331.8730555, "unrendered_database": "{% if target.type != 'spark' %}{{ var('sap_database', target.database) }}{% endif %}", "unrendered_schema": "{{ var('sap_schema', 'sap') }}", "doc_blocks": []}, "source.sap.sap.t161": {"database": "postgres", "schema": "public", "name": "t161", "resource_type": "source", "package_name": "sap", "path": "models/staging/src_sap.yml", "original_file_path": "models/staging/src_sap.yml", "unique_id": "source.sap.sap.t161", "fqn": ["sap", "staging", "sap", "t161"], "source_name": "sap", "source_description": "", "loader": "fivetran", "identifier": "sap_t161_data", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": "_fivetran_synced", "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "Purchasing document types", "columns": {"_fivetran_deleted": {"name": "_fivetran_deleted", "description": "Fivetran deletion marker", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "_fivetran_rowid": {"name": "_fivetran_rowid", "description": "Fivetran unique row ID", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "_fivetran_synced": {"name": "_fivetran_synced", "description": "Fivetran sync timestamp", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "_sapmp_atnam": {"name": "_sapmp_atnam", "description": "SAP MP attribute name", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "_sapmp_ceact": {"name": "_sapmp_ceact", "description": "SAP MP change evaluation active", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "_sapmp_gauf": {"name": "_sapmp_gauf", "description": "SAP MP default value indicator", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "_sapmp_pausw": {"name": "_sapmp_pausw", "description": "SAP MP pause switch", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "_sapmp_pdact": {"name": "_sapmp_pdact", "description": "SAP MP document active", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "_sapmp_pprot": {"name": "_sapmp_pprot", "description": "SAP MP processing type", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "_sapmp_puser": {"name": "_sapmp_puser", "description": "SAP MP user field", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "abgebot": {"name": "abgebot", "description": "Quotation indicator", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "abvor": {"name": "abvor", "description": "Quotation required before order", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "ar_object": {"name": "ar_object", "description": "Archiving object", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "brefn": {"name": "brefn", "description": "Reference profile for external system", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "bsakz": {"name": "bsakz", "description": "Collective number indicator", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "bsart": {"name": "bsart", "description": "Document type", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "bstyp": {"name": "bstyp", "description": "Document category", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "cp_aktive": {"name": "cp_aktive", "description": "Central contract active", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "cptype": {"name": "cptype", "description": "Central contract type", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "fls_rsto": {"name": "fls_rsto", "description": "Release strategy origin", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "fsh_dpr_detpro": {"name": "fsh_dpr_detpro", "description": "Detail profile for demand prioritization", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "fsh_excl_return": {"name": "fsh_excl_return", "description": "Exclude returns indicator", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "fsh_po_idoc": {"name": "fsh_po_idoc", "description": "Fashion PO outbound IDoc active", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "fsh_var_kalsm": {"name": "fsh_var_kalsm", "description": "Pricing procedure for variants", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "fsh_vas_act": {"name": "fsh_vas_act", "description": "Value-added services active", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "fsh_vas_del": {"name": "fsh_vas_del", "description": "VAS delivery mode", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "fsh_vas_detdt": {"name": "fsh_vas_detdt", "description": "VAS determination date", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "fsh_vas_kalsm": {"name": "fsh_vas_kalsm", "description": "VAS pricing procedure", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "gsfrg": {"name": "gsfrg", "description": "Release group", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "hityp": {"name": "hityp", "description": "History type", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "hvr_change_time": {"name": "hvr_change_time", "description": "HVR change timestamp", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "hvr_is_deleted": {"name": "hvr_is_deleted", "description": "HVR deletion flag", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "koako": {"name": "koako", "description": "Account assignment mandatory", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "koett": {"name": "koett", "description": "Item category mandatory", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "kornr": {"name": "kornr", "description": "Reference document number", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "kzale": {"name": "kzale", "description": "Collective agreement allowed", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "lphis": {"name": "lphis", "description": "Change history required", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "mandt": {"name": "mandt", "description": "Client", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "mill_omkz": {"name": "mill_omkz", "description": "Industry solution flag (Mill)", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "msr_active": {"name": "msr_active", "description": "MSR active flag", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "numka": {"name": "numka", "description": "Number range for internal assignment", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "numkc": {"name": "numkc", "description": "Number range for contract", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "numke": {"name": "numke", "description": "Number range for external assignment", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "numki": {"name": "numki", "description": "Number range for inquiries", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "oicsegi": {"name": "oicsegi", "description": "OIL segment indicator", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "oirfqreq": {"name": "oirfqreq", "description": "RFQ required indicator", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "pargr": {"name": "pargr", "description": "Partner role group", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "pincr": {"name": "pincr", "description": "Price increase indicator", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "rdp_profile": {"name": "rdp_profile", "description": "RDP profile", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "refba": {"name": "refba", "description": "Reference purchase doc type", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "shenq": {"name": "shenq", "description": "Incompletion check indicator", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "stafo": {"name": "stafo", "description": "Follow-on doc status", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "stako": {"name": "stako", "description": "Header status", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "tolsl": {"name": "tolsl", "description": "Tolerance key for limit", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "umlif": {"name": "umlif", "description": "Goods recipient required", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "upinc": {"name": "upinc", "description": "Update indicator", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "variante": {"name": "variante", "description": "Variant control", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "wrf_enable_dateline": {"name": "wrf_enable_dateline", "description": "Enable dateline function", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "wvvkz": {"name": "wvvkz", "description": "Shipping instruction", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "xlokz": {"name": "xlokz", "description": "Delivery block indicator", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": "_fivetran_synced", "loaded_at_query": null, "meta": {}, "tags": []}, "patch_path": null, "unrendered_config": {"loaded_at_field": "_fivetran_synced", "enabled": true, "loaded_at_query": null, "meta": {}, "tags": []}, "relation_name": "\"postgres\".\"public\".\"sap_t161_data\"", "created_at": 1756850331.8739235, "unrendered_database": "{% if target.type != 'spark' %}{{ var('sap_database', target.database) }}{% endif %}", "unrendered_schema": "{{ var('sap_schema', 'sap') }}", "doc_blocks": []}, "source.sap.sap.t161t": {"database": "postgres", "schema": "public", "name": "t161t", "resource_type": "source", "package_name": "sap", "path": "models/staging/src_sap.yml", "original_file_path": "models/staging/src_sap.yml", "unique_id": "source.sap.sap.t161t", "fqn": ["sap", "staging", "sap", "t161t"], "source_name": "sap", "source_description": "", "loader": "fivetran", "identifier": "sap_t161t_data", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": "_fivetran_synced", "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "Purchasing doc type texts", "columns": {"_fivetran_deleted": {"name": "_fivetran_deleted", "description": "Fivetran deletion marker", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "_fivetran_rowid": {"name": "_fivetran_rowid", "description": "Fivetran unique row ID", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "_fivetran_synced": {"name": "_fivetran_synced", "description": "Fivetran sync timestamp", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "batxt": {"name": "batxt", "description": "Description", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "bsart": {"name": "bsart", "description": "Document type", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "bstyp": {"name": "bstyp", "description": "Document category", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "mandt": {"name": "mandt", "description": "Client", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "spras": {"name": "spras", "description": "Language key", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": "_fivetran_synced", "loaded_at_query": null, "meta": {}, "tags": []}, "patch_path": null, "unrendered_config": {"loaded_at_field": "_fivetran_synced", "enabled": true, "loaded_at_query": null, "meta": {}, "tags": []}, "relation_name": "\"postgres\".\"public\".\"sap_t161t_data\"", "created_at": 1756850331.87454, "unrendered_database": "{% if target.type != 'spark' %}{{ var('sap_database', target.database) }}{% endif %}", "unrendered_schema": "{{ var('sap_schema', 'sap') }}", "doc_blocks": []}, "source.sap.sap.t503": {"database": "postgres", "schema": "public", "name": "t503", "resource_type": "source", "package_name": "sap", "path": "models/staging/src_sap.yml", "original_file_path": "models/staging/src_sap.yml", "unique_id": "source.sap.sap.t503", "fqn": ["sap", "staging", "sap", "t503"], "source_name": "sap", "source_description": "", "loader": "fivetran", "identifier": "sap_t503_data", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": "_fivetran_synced", "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "Employee group/subgroup", "columns": {"_fivetran_deleted": {"name": "_fivetran_deleted", "description": "Fivetran deletion marker", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "_fivetran_rowid": {"name": "_fivetran_rowid", "description": "Fivetran unique row ID", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "_fivetran_synced": {"name": "_fivetran_synced", "description": "Fivetran sync timestamp", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "abart": {"name": "abart", "description": "Employee subgroup grouping for personnel calculation rule", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "abtyp": {"name": "abtyp", "description": "Employee subgroup grouping for primary wage tpyes", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "aksta": {"name": "aksta", "description": "Activity status", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "ansta": {"name": "ansta", "description": "Employment status", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "antyp": {"name": "antyp", "description": "Employee category", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "austa": {"name": "austa", "description": "Training status", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "burkz": {"name": "burkz", "description": "Employee subgroup grouping for appraisal", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "inwid": {"name": "inwid", "description": "Participation in incentive wages", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "konty": {"name": "konty", "description": "Employee subgroup grouping for time quota types", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "mandt": {"name": "mandt", "description": "Client", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "molga": {"name": "molga", "description": "Reserved field/unused field of length 2", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "persg": {"name": "persg", "description": "Employee group", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "persk": {"name": "persk", "description": "Employee subgroup", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "trfkz": {"name": "trfkz", "description": "ES grouping for collective agreement provision", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "typsz": {"name": "typsz", "description": "Single-character indicator", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "zeity": {"name": "zeity", "description": "Employee subgroup grouping for work schedules", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": "_fivetran_synced", "loaded_at_query": null, "meta": {}, "tags": []}, "patch_path": null, "unrendered_config": {"loaded_at_field": "_fivetran_synced", "enabled": true, "loaded_at_query": null, "meta": {}, "tags": []}, "relation_name": "\"postgres\".\"public\".\"sap_t503_data\"", "created_at": 1756850331.875236, "unrendered_database": "{% if target.type != 'spark' %}{{ var('sap_database', target.database) }}{% endif %}", "unrendered_schema": "{{ var('sap_schema', 'sap') }}", "doc_blocks": []}, "source.sap.sap.t880": {"database": "postgres", "schema": "public", "name": "t880", "resource_type": "source", "package_name": "sap", "path": "models/staging/src_sap.yml", "original_file_path": "models/staging/src_sap.yml", "unique_id": "source.sap.sap.t880", "fqn": ["sap", "staging", "sap", "t880"], "source_name": "sap", "source_description": "", "loader": "fivetran", "identifier": "sap_t880_data", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": "_fivetran_synced", "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "Global company data (for KONS Ledger)", "columns": {"_fivetran_deleted": {"name": "_fivetran_deleted", "description": "Fivetran deletion marker", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "_fivetran_rowid": {"name": "_fivetran_rowid", "description": "Fivetran unique row ID", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "_fivetran_synced": {"name": "_fivetran_synced", "description": "Fivetran sync timestamp", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "city": {"name": "city", "description": "City", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "cntry": {"name": "cntry", "description": "Country key", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "curr": {"name": "curr", "description": "Currency key", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "glsip": {"name": "glsip", "description": "Global ledger posting indicator", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "indpo": {"name": "indpo", "description": "Indicator purchase order relevant", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "langu": {"name": "langu", "description": "Language key", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "lccomp": {"name": "lccomp", "description": "Local company number", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "mandt": {"name": "mandt", "description": "Client", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "mclnt": {"name": "mclnt", "description": "Client in local company", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "mcomp": {"name": "mcomp", "description": "Consolidated company number", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "modcp": {"name": "modcp", "description": "Consolidation module", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "name1": {"name": "name1", "description": "Company name", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "name2": {"name": "name2", "description": "Company name 2", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "pobox": {"name": "pobox", "description": "PO box", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "pstlc": {"name": "pstlc", "description": "Postal code", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "rcomp": {"name": "rcomp", "description": "Company", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "resta": {"name": "resta", "description": "Region/state", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "rform": {"name": "rform", "description": "Legal form", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "stret": {"name": "stret", "description": "Street", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "strt2": {"name": "strt2", "description": "Street 2", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "zweig": {"name": "zweig", "description": "Branch number", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": "_fivetran_synced", "loaded_at_query": null, "meta": {}, "tags": []}, "patch_path": null, "unrendered_config": {"loaded_at_field": "_fivetran_synced", "enabled": true, "loaded_at_query": null, "meta": {}, "tags": []}, "relation_name": "\"postgres\".\"public\".\"sap_t880_data\"", "created_at": 1756850331.8759456, "unrendered_database": "{% if target.type != 'spark' %}{{ var('sap_database', target.database) }}{% endif %}", "unrendered_schema": "{{ var('sap_schema', 'sap') }}", "doc_blocks": []}, "source.sap.sap.tvag": {"database": "postgres", "schema": "public", "name": "tvag", "resource_type": "source", "package_name": "sap", "path": "models/staging/src_sap.yml", "original_file_path": "models/staging/src_sap.yml", "unique_id": "source.sap.sap.tvag", "fqn": ["sap", "staging", "sap", "tvag"], "source_name": "sap", "source_description": "", "loader": "fivetran", "identifier": "sap_tvag_data", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": "_fivetran_synced", "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "Sales document rejection reasons", "columns": {"_fivetran_deleted": {"name": "_fivetran_deleted", "description": "Fivetran deletion marker", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "_fivetran_rowid": {"name": "_fivetran_rowid", "description": "Fivetran unique row ID", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "_fivetran_synced": {"name": "_fivetran_synced", "description": "Fivetran sync timestamp", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "abgru": {"name": "abgru", "description": "Reason code", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "dragr": {"name": "dragr", "description": "Item is relevant for delivery scheduling", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "ep_off": {"name": "ep_off", "description": "EDI partner-specific flag", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "fk_erl": {"name": "fk_erl", "description": "Billing block active", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "fsh_pqr_spec": {"name": "fsh_pqr_spec", "description": "PQR specification (Fashion)", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "hvr_change_time": {"name": "hvr_change_time", "description": "HVR change timestamp", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "hvr_is_deleted": {"name": "hvr_is_deleted", "description": "HVR deletion flag", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "kowrr": {"name": "kowrr", "description": "Net value relevant", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "mandt": {"name": "mandt", "description": "Client", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": "_fivetran_synced", "loaded_at_query": null, "meta": {}, "tags": []}, "patch_path": null, "unrendered_config": {"loaded_at_field": "_fivetran_synced", "enabled": true, "loaded_at_query": null, "meta": {}, "tags": []}, "relation_name": "\"postgres\".\"public\".\"sap_tvag_data\"", "created_at": 1756850331.876587, "unrendered_database": "{% if target.type != 'spark' %}{{ var('sap_database', target.database) }}{% endif %}", "unrendered_schema": "{{ var('sap_schema', 'sap') }}", "doc_blocks": []}, "source.sap.sap.tvagt": {"database": "postgres", "schema": "public", "name": "tvagt", "resource_type": "source", "package_name": "sap", "path": "models/staging/src_sap.yml", "original_file_path": "models/staging/src_sap.yml", "unique_id": "source.sap.sap.tvagt", "fqn": ["sap", "staging", "sap", "tvagt"], "source_name": "sap", "source_description": "", "loader": "fivetran", "identifier": "sap_tvagt_data", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": "_fivetran_synced", "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "Rejection reason texts", "columns": {"_fivetran_deleted": {"name": "_fivetran_deleted", "description": "Fivetran deletion marker", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "_fivetran_rowid": {"name": "_fivetran_rowid", "description": "Fivetran unique row ID", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "_fivetran_synced": {"name": "_fivetran_synced", "description": "Fivetran sync timestamp", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "abgru": {"name": "abgru", "description": "Reason code", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "bezei": {"name": "bezei", "description": "Description", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "mandt": {"name": "mandt", "description": "Client", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "spras": {"name": "spras", "description": "Language key", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": "_fivetran_synced", "loaded_at_query": null, "meta": {}, "tags": []}, "patch_path": null, "unrendered_config": {"loaded_at_field": "_fivetran_synced", "enabled": true, "loaded_at_query": null, "meta": {}, "tags": []}, "relation_name": "\"postgres\".\"public\".\"sap_tvagt_data\"", "created_at": 1756850331.8772237, "unrendered_database": "{% if target.type != 'spark' %}{{ var('sap_database', target.database) }}{% endif %}", "unrendered_schema": "{{ var('sap_schema', 'sap') }}", "doc_blocks": []}, "source.sap.sap.vbak": {"database": "postgres", "schema": "public", "name": "vbak", "resource_type": "source", "package_name": "sap", "path": "models/staging/src_sap.yml", "original_file_path": "models/staging/src_sap.yml", "unique_id": "source.sap.sap.vbak", "fqn": ["sap", "staging", "sap", "vbak"], "source_name": "sap", "source_description": "", "loader": "fivetran", "identifier": "sap_vbak_data", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": "_fivetran_synced", "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "Sales document header data", "columns": {"_dataaging": {"name": "_dataaging", "description": "Data aging timestamp", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "_fivetran_deleted": {"name": "_fivetran_deleted", "description": "Fivetran deletion marker", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "_fivetran_sap_archived": {"name": "_fivetran_sap_archived", "description": "Fivetran SAP archive marker", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "_fivetran_synced": {"name": "_fivetran_synced", "description": "Fivetran sync timestamp", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "_xlso_catalog_id": {"name": "_xlso_catalog_id", "description": "XL system catalog ID", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "_xlso_payment_op": {"name": "_xlso_payment_op", "description": "XL system payment option", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "_xlso_so_vald_fm": {"name": "_xlso_so_vald_fm", "description": "XL system SO valid from", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "_xlso_so_vald_to": {"name": "_xlso_so_vald_to", "description": "XL system SO valid to", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "_xlso_trans_ctxt": {"name": "_xlso_trans_ctxt", "description": "XL system transaction context", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "_xlso_variant_id": {"name": "_xlso_variant_id", "description": "XL system variant ID", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "abdis": {"name": "abdis", "description": "Reason for rejection of the quotation", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "abhob": {"name": "abhob", "description": "Requested quantity already delivered", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "abhod": {"name": "abhod", "description": "Date of first partial delivery", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "abhov": {"name": "abhov", "description": "Volume delivered so far", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "abruf_part": {"name": "abruf_part", "description": "Partial delivery call-off", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "abrvw": {"name": "abrvw", "description": "Usage indicator", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "aedat": {"name": "aedat", "description": "Last change date", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "agrzr": {"name": "agrzr", "description": "Agreement number", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "amtbl": {"name": "amtbl", "description": "Billed amount", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "angdt": {"name": "angdt", "description": "Quotation date", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "auart": {"name": "auart", "description": "Sales document type", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "audat": {"name": "audat", "description": "Document date", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "aufnr": {"name": "aufnr", "description": "Order number", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "augru": {"name": "augru", "description": "Order reason", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "autlf": {"name": "autlf", "description": "Complete delivery defined for all items", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "awahr": {"name": "awahr", "description": "Probability of the quotation", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "betc": {"name": "betc", "description": "Tax base code", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "bname": {"name": "bname", "description": "Name of person who created the document", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "bnddt": {"name": "bnddt", "description": "Bid invitation deadline", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "bpn": {"name": "bpn", "description": "Bid project number", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "bsark": {"name": "bsark", "description": "Purchase order type", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "bstdk": {"name": "bstdk", "description": "Purchase order date", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "bstnk": {"name": "bstnk", "description": "Customer purchase order number", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "bstzd": {"name": "bstzd", "description": "Customer purchase order date", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "bukrs_vf": {"name": "bukrs_vf", "description": "Company code for billing", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "cancel_allow": {"name": "cancel_allow", "description": "Cancellation allowed indicator", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "cmfre": {"name": "cmfre", "description": "Credit management Released", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "cmngv": {"name": "cmngv", "description": "Credit management Total value", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "cmnup": {"name": "cmnup", "description": "Credit management Not yet posted value", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "cmwae": {"name": "cmwae", "description": "Credit management Currency", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "cont_dg": {"name": "cont_dg", "description": "Dangerous goods document number", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "crm_guid": {"name": "crm_guid", "description": "CRM GUID for sales document", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "ctlpc": {"name": "ctlpc", "description": "Pricing control", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "dat_fzau": {"name": "dat_fzau", "description": "Date of customer confirmation", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "enqueue_grp": {"name": "enqueue_grp", "description": "Lock group", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "erdat": {"name": "erdat", "description": "Created on", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "ernam": {"name": "ernam", "description": "Created by", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "erzet": {"name": "erzet", "description": "Time of creation", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "faksk": {"name": "faksk", "description": "Billing block at header level", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "fkara": {"name": "fkara", "description": "Billing type", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "fmbdat": {"name": "fmbdat", "description": "Date for fund commitment", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "fsh_candate": {"name": "fsh_candate", "description": "Cancellation date (Fashion)", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "fsh_cq_check": {"name": "fsh_cq_check", "description": "Check quantity (Fashion)", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "fsh_kvgr10": {"name": "fsh_kvgr10", "description": "Customer group 10 (Fashion)", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "fsh_kvgr6": {"name": "fsh_kvgr6", "description": "Customer group 6 (Fashion)", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "fsh_kvgr7": {"name": "fsh_kvgr7", "description": "Customer group 7 (Fashion)", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "fsh_kvgr8": {"name": "fsh_kvgr8", "description": "Customer group 8 (Fashion)", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "fsh_kvgr9": {"name": "fsh_kvgr9", "description": "Customer group 9 (Fashion)", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "fsh_os_stg_change": {"name": "fsh_os_stg_change", "description": "One-step staging change (Fashion)", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "fsh_rereg": {"name": "fsh_rereg", "description": "Reregistration status (Fashion)", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "fsh_ss": {"name": "fsh_ss", "description": "Season indicator (Fashion)", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "fsh_transaction": {"name": "fsh_transaction", "description": "Fashion transaction type", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "fsh_vas_cg": {"name": "fsh_vas_cg", "description": "VAS customer group (Fashion)", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "fsh_vrsn_status": {"name": "fsh_vrsn_status", "description": "Version status (Fashion)", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "grupp": {"name": "grupp", "description": "Credit control area group", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "gsber": {"name": "gsber", "description": "Business area", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "gskst": {"name": "gskst", "description": "Profit center", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "guebg": {"name": "guebg", "description": "Valid-from date", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "gueen": {"name": "gueen", "description": "Valid-to date", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "gwldt": {"name": "gwldt", "description": "Valid-to date (billing document)", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "handle": {"name": "handle", "description": "System handle for record", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "handoverloc": {"name": "handoverloc", "description": "Handover location", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "hb_cont_reason": {"name": "hb_cont_reason", "description": "Header condition control reason", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "hb_expdate": {"name": "hb_expdate", "description": "Header expiration date", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "hb_resdate": {"name": "hb_resdate", "description": "Header reservation date", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "hityp_pr": {"name": "hityp_pr", "description": "Item type proposal", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "ihrez": {"name": "ihrez", "description": "Customer reference", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "kalcd": {"name": "kalcd", "description": "Calculation schema group", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "kalsm": {"name": "kalsm", "description": "Pricing procedure", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "kalsm_ch": {"name": "kalsm_ch", "description": "Changed pricing procedure", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "kkber": {"name": "kkber", "description": "Credit control area", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "knkli": {"name": "knkli", "description": "Credit account", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "knuma": {"name": "knuma", "description": "Agreement number", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "knumv": {"name": "knumv", "description": "Condition number", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "kokrs": {"name": "kokrs", "description": "Controlling area", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "kostl": {"name": "kostl", "description": "Cost center", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "ktext": {"name": "ktext", "description": "Header text", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "kunnr": {"name": "kunnr", "description": "Sold-to party", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "kurst": {"name": "kurst", "description": "Exchange rate type", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "kvgr1": {"name": "kvgr1", "description": "Customer group 1", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "kvgr2": {"name": "kvgr2", "description": "Customer group 2", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "kvgr3": {"name": "kvgr3", "description": "Customer group 3", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "kvgr4": {"name": "kvgr4", "description": "Customer group 4", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "kvgr5": {"name": "kvgr5", "description": "Customer group 5", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "landtx": {"name": "landtx", "description": "Country of destination", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "lifsk": {"name": "lifsk", "description": "Delivery block (header)", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "logsysb": {"name": "logsysb", "description": "Logical system (billing)", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "mahdt": {"name": "mahdt", "description": "Dunning date", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "mahza": {"name": "mahza", "description": "Dunning level", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "mandt": {"name": "mandt", "description": "Client", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "mill_appl_id": {"name": "mill_appl_id", "description": "Mill product application ID", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "mod_allow": {"name": "mod_allow", "description": "Modification allowed", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "msr_id": {"name": "msr_id", "description": "MSR process ID", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "mtlaur": {"name": "mtlaur", "description": "Material availability date", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "multi": {"name": "multi", "description": "Multi-step shipping indicator", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "netwr": {"name": "netwr", "description": "Net value of the order", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "objnr": {"name": "objnr", "description": "Object number", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "pay_method": {"name": "pay_method", "description": "Payment method", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "phase": {"name": "phase", "description": "Project phase", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "proli": {"name": "proli", "description": "Project profile", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "ps_psp_pnr": {"name": "ps_psp_pnr", "description": "WBS element", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "psm_budat": {"name": "psm_budat", "description": "Budget date (Public Sector)", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "qmnum": {"name": "qmnum", "description": "Notification number", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "rep_freq": {"name": "rep_freq", "description": "Reporting frequency", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "rplnr": {"name": "rplnr", "description": "Replenishment order number", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "sbgrp": {"name": "sbgrp", "description": "Product hierarchy group", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "scheme_grp": {"name": "scheme_grp", "description": "Pricing scheme group", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "smenr": {"name": "smenr", "description": "Sales employee number", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "spart": {"name": "spart", "description": "Division", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "sppaym": {"name": "sppaym", "description": "Special payment agreement", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "stafo": {"name": "stafo", "description": "Follow-up document status", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "stage": {"name": "stage", "description": "Stage in approval workflow", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "stceg_l": {"name": "stceg_l", "description": "VAT registration number", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "stwae": {"name": "stwae", "description": "Statistics currency", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "submi": {"name": "submi", "description": "Subcontracting indicator", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "swenr": {"name": "swenr", "description": "Warranty number", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "tas": {"name": "tas", "description": "Task list type", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "taxk1": {"name": "taxk1", "description": "Tax classification 1", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "taxk2": {"name": "taxk2", "description": "Tax classification 2", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "taxk3": {"name": "taxk3", "description": "Tax classification 3", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "taxk4": {"name": "taxk4", "description": "Tax classification 4", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "taxk5": {"name": "taxk5", "description": "Tax classification 5", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "taxk6": {"name": "taxk6", "description": "Tax classification 6", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "taxk7": {"name": "taxk7", "description": "Tax classification 7", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "taxk8": {"name": "taxk8", "description": "Tax classification 8", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "taxk9": {"name": "taxk9", "description": "Tax classification 9", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "telf1": {"name": "telf1", "description": "Telephone number", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "tm_ctrl_key": {"name": "tm_ctrl_key", "description": "Transportation planning point", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "trvog": {"name": "trvog", "description": "Transaction group", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "upd_tmstmp": {"name": "upd_tmstmp", "description": "Update timestamp", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "vbeln": {"name": "vbeln", "description": "Sales document number", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "vbeln_grp": {"name": "vbeln_grp", "description": "Grouping sales document", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "vbkla": {"name": "vbkla", "description": "Order probability", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "vbklt": {"name": "vbklt", "description": "Texts for order probability", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "vbtyp": {"name": "vbtyp", "description": "Document category in sales", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "vdatu": {"name": "vdatu", "description": "Requested delivery date", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "vgbel": {"name": "vgbel", "description": "Document number of the reference", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "vgtyp": {"name": "vgtyp", "description": "Document category of the reference", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "vkbur": {"name": "vkbur", "description": "Sales office", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "vkgrp": {"name": "vkgrp", "description": "Sales group", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "vkorg": {"name": "vkorg", "description": "Sales organization", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "vprgr": {"name": "vprgr", "description": "Pricing group", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "vsbed": {"name": "vsbed", "description": "Shipping conditions", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "vsnmr_v": {"name": "vsnmr_v", "description": "Version number", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "vtweg": {"name": "vtweg", "description": "Distribution channel", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "vzeit": {"name": "vzeit", "description": "Time of delivery", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "waerk": {"name": "waerk", "description": "Document currency", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "wtysc_clm_hdr": {"name": "wtysc_clm_hdr", "description": "Warranty claim header", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "xblnr": {"name": "xblnr", "description": "Reference document number", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "xegdr": {"name": "xegdr", "description": "External GUID reference", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "zuonr": {"name": "zuonr", "description": "Assignment number", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": "_fivetran_synced", "loaded_at_query": null, "meta": {}, "tags": []}, "patch_path": null, "unrendered_config": {"loaded_at_field": "_fivetran_synced", "enabled": true, "loaded_at_query": null, "meta": {}, "tags": []}, "relation_name": "\"postgres\".\"public\".\"sap_vbak_data\"", "created_at": 1756850331.8789358, "unrendered_database": "{% if target.type != 'spark' %}{{ var('sap_database', target.database) }}{% endif %}", "unrendered_schema": "{{ var('sap_schema', 'sap') }}", "doc_blocks": []}, "source.sap.sap.vbap": {"database": "postgres", "schema": "public", "name": "vbap", "resource_type": "source", "package_name": "sap", "path": "models/staging/src_sap.yml", "original_file_path": "models/staging/src_sap.yml", "unique_id": "source.sap.sap.vbap", "fqn": ["sap", "staging", "sap", "vbap"], "source_name": "sap", "source_description": "", "loader": "fivetran", "identifier": "sap_vbap_data", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": "_fivetran_synced", "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "Sales document item data", "columns": {"_accgo_is_co_rel": {"name": "_accgo_is_co_rel", "description": "CO-relevant indicator (Accruals)", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "_accgo_tx_p": {"name": "_accgo_tx_p", "description": "Accruals tax percentage", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "_bev1_srfund": {"name": "_bev1_srfund", "description": "Beverage-specific fund indicator", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "_dataaging": {"name": "_dataaging", "description": "Data aging timestamp", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "_fivetran_deleted": {"name": "_fivetran_deleted", "description": "Fivetran deletion marker", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "_fivetran_sap_archived": {"name": "_fivetran_sap_archived", "description": "Fivetran SAP archive marker", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "_fivetran_synced": {"name": "_fivetran_synced", "description": "Fivetran sync timestamp", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "_slce_inst_guid": {"name": "_slce_inst_guid", "description": "Solution configuration instance GUID", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "_slce_single_conf_done": {"name": "_slce_single_conf_done", "description": "Single configuration completed", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "_slce_single_conf_reqired": {"name": "_slce_single_conf_reqired", "description": "Single configuration required", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "_slce_sol_cuobj": {"name": "_slce_sol_cuobj", "description": "Solution configuration object number", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "_slce_sol_ext_guid": {"name": "_slce_sol_ext_guid", "description": "Solution external GUID", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "_slce_sol_matnr": {"name": "_slce_sol_matnr", "description": "Solution material number", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "_slce_sol_posnr": {"name": "_slce_sol_posnr", "description": "Solution item number", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "_xlso_course_bda": {"name": "_xlso_course_bda", "description": "XL course begin date", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "_xlso_course_eda": {"name": "_xlso_course_eda", "description": "XL course end date", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "_xlso_course_id": {"name": "_xlso_course_id", "description": "XL course ID", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "abdat": {"name": "abdat", "description": "Delivery date", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "abfor": {"name": "abfor", "description": "Schedule line date (initial)", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "abges": {"name": "abges", "description": "Quantity confirmed by availability check", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "abgrs": {"name": "abgrs", "description": "Reason for rejection", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "abgru": {"name": "abgru", "description": "Rejection reason", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "ablfz": {"name": "ablfz", "description": "Partial delivery allowed", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "absfz": {"name": "absfz", "description": "Maximum partial deliveries", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "aedat": {"name": "aedat", "description": "Last change date", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "antlf": {"name": "antlf", "description": "Number of partial deliveries", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "anzsn": {"name": "anzsn", "description": "Number of serial numbers", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "aplzl_oaa": {"name": "aplzl_oaa", "description": "Routing line number (OAA)", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "aplzl_olc": {"name": "aplzl_olc", "description": "Routing line number (OLC)", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "arktx": {"name": "arktx", "description": "Short text for sales order item", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "arsnum": {"name": "arsnum", "description": "Scheduling agreement number", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "arspos": {"name": "arspos", "description": "Scheduling agreement item", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "atpkz": {"name": "atpkz", "description": "ATP check indicator", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "aufnr": {"name": "aufnr", "description": "Order number", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "aufpl_oaa": {"name": "aufpl_oaa", "description": "Routing number (OAA)", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "aufpl_olc": {"name": "aufpl_olc", "description": "Routing number (OLC)", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "awahr": {"name": "awahr", "description": "Order probability", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "bedae": {"name": "bedae", "description": "Requirement type", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "berid": {"name": "berid", "description": "MRP area", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "betc": {"name": "betc", "description": "Tax base code", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "bonus": {"name": "bonus", "description": "Bonus indicator", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "bpn": {"name": "bpn", "description": "Bid project number", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "brgew": {"name": "brgew", "description": "Gross weight", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "budget_pd": {"name": "budget_pd", "description": "Budget period", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "bwtar": {"name": "bwtar", "description": "Valuation type", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "bwtex": {"name": "bwtex", "description": "External valuation type", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "cancel_allow": {"name": "cancel_allow", "description": "Cancellation allowed", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "cepok": {"name": "cepok", "description": "Order confirmation partner", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "charg": {"name": "charg", "description": "Batch number", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "chmvs": {"name": "chmvs", "description": "Batch split indicator", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "chspl": {"name": "chspl", "description": "Split delivery indicator", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "clint": {"name": "clint", "description": "Classification internal number", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "cmeth": {"name": "cmeth", "description": "Costing method", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "cmkua": {"name": "cmkua", "description": "Credit management check at item level", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "cmpnt": {"name": "cmpnt", "description": "Component item indicator", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "cmpre": {"name": "cmpre", "description": "Comparative quantity", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "cmpre_flt": {"name": "cmpre_flt", "description": "Float-based comparison quantity", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "cmtfg": {"name": "cmtfg", "description": "Configuration strategy", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "cpd_updat": {"name": "cpd_updat", "description": "Update indicator for CPD item", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "cuobj": {"name": "cuobj", "description": "Configuration object number", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "cuobj_ch": {"name": "cuobj_ch", "description": "Changed configuration object", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "ean11": {"name": "ean11", "description": "International Article Number (EAN/UPC)", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "eannr": {"name": "eannr", "description": "European Article Number", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "erdat": {"name": "erdat", "description": "Creation date", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "erlre": {"name": "erlre", "description": "Final delivery indicator", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "ernam": {"name": "ernam", "description": "Created by", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "erzet": {"name": "erzet", "description": "Time of entry", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "exart": {"name": "exart", "description": "Export/import type", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "faksp": {"name": "faksp", "description": "Billing block for item", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "ferc_ind": {"name": "ferc_ind", "description": "Federal Energy Reg Commission indicator", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "fiscal_incentive": {"name": "fiscal_incentive", "description": "Fiscal incentive indicator", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "fiscal_incentive_id": {"name": "fiscal_incentive_id", "description": "Fiscal incentive ID", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "fistl": {"name": "fistl", "description": "Funds center", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "fixmg": {"name": "fixmg", "description": "Fixed quantity", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "fkber": {"name": "fkber", "description": "Functional area", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "fkrel": {"name": "fkrel", "description": "Relevant for billing", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "fmeng": {"name": "fmeng", "description": "Confirmed quantity", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "fmfgus_key": {"name": "fmfgus_key", "description": "FM federal government US key", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "fonds": {"name": "fonds", "description": "Fund", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "fsh_candate": {"name": "fsh_candate", "description": "Fashion cancellation date", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "fsh_collection": {"name": "fsh_collection", "description": "Fashion collection", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "fsh_crsd": {"name": "fsh_crsd", "description": "Creation strategy", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "fsh_grid_cond_rec": {"name": "fsh_grid_cond_rec", "description": "Grid condition record (Fashion)", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "fsh_item": {"name": "fsh_item", "description": "Fashion item number", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "fsh_item_group": {"name": "fsh_item_group", "description": "Fashion item group", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "fsh_pqr_uepos": {"name": "fsh_pqr_uepos", "description": "Parent item for PQR", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "fsh_psm_pfm_split": {"name": "fsh_psm_pfm_split", "description": "Budget split for fashion items", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "fsh_searef": {"name": "fsh_searef", "description": "Season reference", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "fsh_season": {"name": "fsh_season", "description": "Fashion season", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "fsh_season_year": {"name": "fsh_season_year", "description": "Fashion season year", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "fsh_theme": {"name": "fsh_theme", "description": "Fashion theme", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "fsh_transaction": {"name": "fsh_transaction", "description": "Fashion transaction type", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "fsh_vas_prnt_id": {"name": "fsh_vas_prnt_id", "description": "Parent VAS item", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "fsh_vas_rel": {"name": "fsh_vas_rel", "description": "VAS relevance indicator", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "fsh_vasref": {"name": "fsh_vasref", "description": "VAS reference ID", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "gewei": {"name": "gewei", "description": "Weight unit", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "grant_nbr": {"name": "grant_nbr", "description": "Grant number", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "grkor": {"name": "grkor", "description": "Group counter", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "grpos": {"name": "grpos", "description": "Group position", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "gsber": {"name": "gsber", "description": "Business area", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "handoverdate": {"name": "handoverdate", "description": "Handover date to shipper", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "handoverloc": {"name": "handoverloc", "description": "Handover location", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "handovertime": {"name": "handovertime", "description": "Handover time", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "iuid_relevant": {"name": "iuid_relevant", "description": "Indicator for IUID relevance", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "j_1bcfop": {"name": "j_1bcfop", "description": "Brazilian CFOP code", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "j_1btaxlw1": {"name": "j_1btaxlw1", "description": "Local tax classification 1", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "j_1btaxlw2": {"name": "j_1btaxlw2", "description": "Local tax classification 2", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "j_1btaxlw3": {"name": "j_1btaxlw3", "description": "Local tax classification 3", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "j_1btaxlw4": {"name": "j_1btaxlw4", "description": "Local tax classification 4", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "j_1btaxlw5": {"name": "j_1btaxlw5", "description": "Local tax classification 5", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "j_1btxsdc": {"name": "j_1btxsdc", "description": "Substitui\u00e7\u00e3o tribut\u00e1ria code (Brazil)", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "kalnr": {"name": "kalnr", "description": "Internal number for conditions", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "kalsm_k": {"name": "kalsm_k", "description": "Pricing procedure for item", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "kalvar": {"name": "kalvar", "description": "Calculation variant", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "kannr": {"name": "kannr", "description": "Quantity contract number", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "kbmeng": {"name": "kbmeng", "description": "Cumulative confirmed quantity", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "kbver": {"name": "kbver", "description": "Condition record version", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "kdmat": {"name": "kdmat", "description": "Customer material number", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "kever": {"name": "kever", "description": "Version number of costing", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "klmeng": {"name": "klmeng", "description": "Target quantity", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "klvar": {"name": "klvar", "description": "Variant configuration version", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "kmein": {"name": "kmein", "description": "Target quantity unit", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "kmpmg": {"name": "kmpmg", "description": "Cumulative quantity delivered", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "knttp": {"name": "knttp", "description": "Account assignment category", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "knuma_ag": {"name": "knuma_ag", "description": "Agreement item number", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "knuma_pi": {"name": "knuma_pi", "description": "Pricing item number", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "knumh": {"name": "knumh", "description": "Condition record number", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "kondm": {"name": "kondm", "description": "Material group 1", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "kosch": {"name": "kosch", "description": "Product allocation procedure", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "kostl": {"name": "kostl", "description": "Cost center", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "koupd": {"name": "koupd", "description": "Last configuration update", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "kowrr": {"name": "kowrr", "description": "Statistical value", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "kpein": {"name": "kpein", "description": "Pricing unit", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "ktgrm": {"name": "ktgrm", "description": "Tax classification", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "kwmeng": {"name": "kwmeng", "description": "Order quantity", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "kzbws": {"name": "kzbws", "description": "Value not deductible", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "kzfme": {"name": "kzfme", "description": "Indicator for FM assignment", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "kztlf": {"name": "kztlf", "description": "Third-party order processing", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "kzvbr": {"name": "kzvbr", "description": "Relevant for rebate processing", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "kzwi1": {"name": "kzwi1", "description": "Subtotal 1", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "kzwi2": {"name": "kzwi2", "description": "Subtotal 2", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "kzwi3": {"name": "kzwi3", "description": "Subtotal 3", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "kzwi4": {"name": "kzwi4", "description": "Subtotal 4", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "kzwi5": {"name": "kzwi5", "description": "Subtotal 5", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "kzwi6": {"name": "kzwi6", "description": "Subtotal 6", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "lfmng": {"name": "lfmng", "description": "Quantity already delivered", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "lfrel": {"name": "lfrel", "description": "Schedule line relevant for delivery", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "lgort": {"name": "lgort", "description": "Storage location", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "logsys_ext": {"name": "logsys_ext", "description": "External logical system", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "lprio": {"name": "lprio", "description": "Delivery priority", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "lsmeng": {"name": "lsmeng", "description": "Cumulative open quantity", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "lstanr": {"name": "lstanr", "description": "Standard BOM item number", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "magrv": {"name": "magrv", "description": "Material group for packaging", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "mandt": {"name": "mandt", "description": "Client", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "manual_tc_reason": {"name": "manual_tc_reason", "description": "Manual tax code reason", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "matkl": {"name": "matkl", "description": "Material group", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "matnr": {"name": "matnr", "description": "Material number", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "matwa": {"name": "matwa", "description": "Material entered", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "meins": {"name": "meins", "description": "Base unit of measure", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "mfrgr": {"name": "mfrgr", "description": "Material freight group", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "mill_se_gposn": {"name": "mill_se_gposn", "description": "General position number (Mill)", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "mod_allow": {"name": "mod_allow", "description": "Modification allowed", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "mprok": {"name": "mprok", "description": "Product allocation indicator", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "msr_approv_block": {"name": "msr_approv_block", "description": "MSR approval block indicator", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "msr_refund_code": {"name": "msr_refund_code", "description": "MSR refund code", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "msr_ret_reason": {"name": "msr_ret_reason", "description": "MSR return reason", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "mtvfp": {"name": "mtvfp", "description": "Availability check rule", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "mvgr1": {"name": "mvgr1", "description": "Material group 1", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "mvgr2": {"name": "mvgr2", "description": "Material group 2", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "mvgr3": {"name": "mvgr3", "description": "Material group 3", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "mvgr4": {"name": "mvgr4", "description": "Material group 4", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "mvgr5": {"name": "mvgr5", "description": "Material group 5", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "mwsbp": {"name": "mwsbp", "description": "Tax amount in pricing currency", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "nachl": {"name": "nachl", "description": "Subsequent function indicator", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "netpr": {"name": "netpr", "description": "Net price", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "netwr": {"name": "netwr", "description": "Net value", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "nrab_knumh": {"name": "nrab_knumh", "description": "Condition record number (manual discount)", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "ntgew": {"name": "ntgew", "description": "Net weight", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "objnr": {"name": "objnr", "description": "Object number", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "paobjnr": {"name": "paobjnr", "description": "Profitability segment number", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "pargb": {"name": "pargb", "description": "Partner business area", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "pay_method": {"name": "pay_method", "description": "Payment method", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "pctrf": {"name": "pctrf", "description": "Profit center transfer indicator", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "plavo": {"name": "plavo", "description": "Planned order indicator", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "pmatn": {"name": "pmatn", "description": "Pricing reference material", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "posar": {"name": "posar", "description": "Order type", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "posex": {"name": "posex", "description": "External item number", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "posnr": {"name": "posnr", "description": "Sales document item number", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "posnv": {"name": "posnv", "description": "Sub-item number", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "prbme": {"name": "prbme", "description": "Pricing unit of measure", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "prctr": {"name": "prctr", "description": "Profit center", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "prefe": {"name": "prefe", "description": "Preference indicator", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "prodh": {"name": "prodh", "description": "Product hierarchy", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "prosa": {"name": "prosa", "description": "Order probability", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "provg": {"name": "provg", "description": "Promotion ID", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "prs_objnr": {"name": "prs_objnr", "description": "Object number for condition pricing", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "prs_sd_spsnr": {"name": "prs_sd_spsnr", "description": "Sales-specific price source", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "prs_work_period": {"name": "prs_work_period", "description": "Pricing work period", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "prsok": {"name": "prsok", "description": "Pricing ok flag", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "ps_psp_pnr": {"name": "ps_psp_pnr", "description": "WBS element", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "pstyv": {"name": "pstyv", "description": "Item category", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "rep_freq": {"name": "rep_freq", "description": "Replenishment frequency", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "revacc_refid": {"name": "revacc_refid", "description": "Reference ID for revenue recognition", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "revacc_reftype": {"name": "revacc_reftype", "description": "Reference type for revenue recognition", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "rkfkf": {"name": "rkfkf", "description": "Billing relevance", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "route": {"name": "route", "description": "Route", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "serail": {"name": "serail", "description": "Serial number profile", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "sernr": {"name": "sernr", "description": "Serial number", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "sgt_rcat": {"name": "sgt_rcat", "description": "Segmentation requirement category", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "shkzg": {"name": "shkzg", "description": "Debit/credit indicator", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "skopf": {"name": "skopf", "description": "Pricing copy indicator", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "sktof": {"name": "sktof", "description": "Cash discount indicator", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "sloctype": {"name": "sloctype", "description": "Storage location type", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "smeng": {"name": "smeng", "description": "Confirmed quantity", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "sobkz": {"name": "sobkz", "description": "Special stock indicator", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "spart": {"name": "spart", "description": "Division", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "spcsto": {"name": "spcsto", "description": "Special stock", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "sposn": {"name": "sposn", "description": "BOM sub-item number", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "stadat": {"name": "stadat", "description": "Start date", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "stafo": {"name": "stafo", "description": "Follow-on document status", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "stcur": {"name": "stcur", "description": "Statistics currency", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "stdat": {"name": "stdat", "description": "Statistics date", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "stkey": {"name": "stkey", "description": "Key for product hierarchy statistics", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "stlkn": {"name": "stlkn", "description": "BOM item node number", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "stlnr": {"name": "stlnr", "description": "BOM number", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "stlty": {"name": "stlty", "description": "BOM category", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "stman": {"name": "stman", "description": "Manual BOM entry indicator", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "stockloc": {"name": "stockloc", "description": "Stock location", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "stpos": {"name": "stpos", "description": "BOM item number", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "stpoz": {"name": "stpoz", "description": "BOM sub-item number", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "sugrd": {"name": "sugrd", "description": "Reason for goods movement", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "sumbd": {"name": "sumbd", "description": "Total confirmed quantity", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "tas": {"name": "tas", "description": "Transportation scheduling agreement", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "tax_subject_st": {"name": "tax_subject_st", "description": "Tax subject status", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "taxm1": {"name": "taxm1", "description": "Tax indicator 1", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "taxm2": {"name": "taxm2", "description": "Tax indicator 2", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "taxm3": {"name": "taxm3", "description": "Tax indicator 3", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "taxm4": {"name": "taxm4", "description": "Tax indicator 4", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "taxm5": {"name": "taxm5", "description": "Tax indicator 5", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "taxm6": {"name": "taxm6", "description": "Tax indicator 6", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "taxm7": {"name": "taxm7", "description": "Tax indicator 7", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "taxm8": {"name": "taxm8", "description": "Tax indicator 8", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "taxm9": {"name": "taxm9", "description": "Tax indicator 9", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "tc_aut_det": {"name": "tc_aut_det", "description": "Automatic tax code determination", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "techs": {"name": "techs", "description": "Technical specification", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "trmrisk_relevant": {"name": "trmrisk_relevant", "description": "Treasury risk relevance indicator", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "uebtk": {"name": "uebtk", "description": "Unlimited overdelivery allowed", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "uebto": {"name": "uebto", "description": "Overdelivery tolerance", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "uepos": {"name": "uepos", "description": "Higher-level item", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "uepvw": {"name": "uepvw", "description": "Item usage", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "ukonm": {"name": "ukonm", "description": "Rounding profile", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "umref": {"name": "umref", "description": "Reference document number for transfer", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "umvkn": {"name": "umvkn", "description": "Supplying sales organization", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "umvkz": {"name": "umvkz", "description": "Supplying distribution channel", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "umzin": {"name": "umzin", "description": "Conversion denominator", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "umziz": {"name": "umziz", "description": "Conversion numerator", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "untto": {"name": "untto", "description": "Delivery quantity", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "upflu": {"name": "upflu", "description": "Indicator updated from forecast", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "upmat": {"name": "upmat", "description": "Upper-level material number", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "vbeaf": {"name": "vbeaf", "description": "Confirmed schedule lines quantity", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "vbeav": {"name": "vbeav", "description": "Cumulative open quantity", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "vbeln": {"name": "vbeln", "description": "Sales document number", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "vbelv": {"name": "vbelv", "description": "Preceding document", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "vgbel": {"name": "vgbel", "description": "Reference document number", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "vgpos": {"name": "vgpos", "description": "Reference item number", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "vgref": {"name": "vgref", "description": "Reference usage", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "vgtyp": {"name": "vgtyp", "description": "Document category of reference", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "vkaus": {"name": "vkaus", "description": "Sales document reason", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "vkgru": {"name": "vkgru", "description": "Responsible sales group", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "voleh": {"name": "voleh", "description": "Volume unit", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "volum": {"name": "volum", "description": "Volume", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "voref": {"name": "voref", "description": "Order reference", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "vpmat": {"name": "vpmat", "description": "Pricing material number", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "vpwrk": {"name": "vpwrk", "description": "Supplying plant", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "vpzuo": {"name": "vpzuo", "description": "Assignment number", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "vrkme": {"name": "vrkme", "description": "Sales unit", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "vstel": {"name": "vstel", "description": "Shipping point", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "waerk": {"name": "waerk", "description": "Document currency", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "wavwr": {"name": "wavwr", "description": "Total value of goods", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "werks": {"name": "werks", "description": "Plant", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "wgru1": {"name": "wgru1", "description": "Pricing group 1", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "wgru2": {"name": "wgru2", "description": "Pricing group 2", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "wktnr": {"name": "wktnr", "description": "Value contract number", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "wktps": {"name": "wktps", "description": "Value contract item", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "wrf_charstc1": {"name": "wrf_charstc1", "description": "Retail characteristic 1", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "wrf_charstc2": {"name": "wrf_charstc2", "description": "Retail characteristic 2", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "wrf_charstc3": {"name": "wrf_charstc3", "description": "Retail characteristic 3", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "wtysc_clmitem": {"name": "wtysc_clmitem", "description": "Warranty claim item", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "xchar": {"name": "xchar", "description": "Batch management requirement indicator", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "xchpf": {"name": "xchpf", "description": "Batch management indicator", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "z_prs_bill_flag": {"name": "z_prs_bill_flag", "description": "Billing flag (custom)", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "z_prs_chargelevl": {"name": "z_prs_chargelevl", "description": "Charge level (custom)", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "z_prs_country": {"name": "z_prs_country", "description": "Country indicator (custom)", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "z_prs_offshore": {"name": "z_prs_offshore", "description": "Offshore flag (custom)", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "zieme": {"name": "zieme", "description": "Custom unit of measure", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "zmeng": {"name": "zmeng", "description": "Cumulative order quantity", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "zschl_k": {"name": "zschl_k", "description": "Condition type key (custom)", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "zwert": {"name": "zwert", "description": "Value for custom field", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "zzdea_license": {"name": "zzdea_license", "description": "DEA license number", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "zzdea_schedule": {"name": "zzdea_schedule", "description": "DEA schedule", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": "_fivetran_synced", "loaded_at_query": null, "meta": {}, "tags": []}, "patch_path": null, "unrendered_config": {"loaded_at_field": "_fivetran_synced", "enabled": true, "loaded_at_query": null, "meta": {}, "tags": []}, "relation_name": "\"postgres\".\"public\".\"sap_vbap_data\"", "created_at": 1756850331.9856474, "unrendered_database": "{% if target.type != 'spark' %}{{ var('sap_database', target.database) }}{% endif %}", "unrendered_schema": "{{ var('sap_schema', 'sap') }}", "doc_blocks": []}, "source.sap.sap.vbuk": {"database": "postgres", "schema": "public", "name": "vbuk", "resource_type": "source", "package_name": "sap", "path": "models/staging/src_sap.yml", "original_file_path": "models/staging/src_sap.yml", "unique_id": "source.sap.sap.vbuk", "fqn": ["sap", "staging", "sap", "vbuk"], "source_name": "sap", "source_description": "", "loader": "fivetran", "identifier": "sap_vbuk_data", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": "_fivetran_synced", "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "Sales document status (header)", "columns": {"_fivetran_deleted": {"name": "_fivetran_deleted", "description": "Fivetran deletion marker", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "_fivetran_rowid": {"name": "_fivetran_rowid", "description": "Fivetran unique row ID", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "_fivetran_synced": {"name": "_fivetran_synced", "description": "Fivetran sync timestamp", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "abstk": {"name": "abstk", "description": "Rejection status", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "aedat": {"name": "aedat", "description": "Last change date", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "bestk": {"name": "bestk", "description": "Purchase order status", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "block": {"name": "block", "description": "General blocking reason", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "buchk": {"name": "buchk", "description": "Accounting status", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "cmgst": {"name": "cmgst", "description": "Overall credit check status", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "cmps0": {"name": "cmps0", "description": "Credit check static check", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "cmps1": {"name": "cmps1", "description": "Credit check days sales outstanding", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "cmps2": {"name": "cmps2", "description": "Credit check oldest open item", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "cmps_cm": {"name": "cmps_cm", "description": "Credit check credit master data", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "cmps_te": {"name": "cmps_te", "description": "Credit check terms of payment", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "cmpsa": {"name": "cmpsa", "description": "Credit check component A", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "cmpsb": {"name": "cmpsb", "description": "Credit check component B", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "cmpsc": {"name": "cmpsc", "description": "Credit check component C", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "cmpsd": {"name": "cmpsd", "description": "Credit check component D", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "cmpse": {"name": "cmpse", "description": "Credit check component E", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "cmpsf": {"name": "cmpsf", "description": "Credit check component F", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "cmpsg": {"name": "cmpsg", "description": "Credit check component G", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "cmpsh": {"name": "cmpsh", "description": "Credit check component H", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "cmpsi": {"name": "cmpsi", "description": "Credit check component I", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "cmpsj": {"name": "cmpsj", "description": "Credit check component J", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "cmpsk": {"name": "cmpsk", "description": "Credit check component K", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "cmpsl": {"name": "cmpsl", "description": "Credit check component L", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "cmpsm": {"name": "cmpsm", "description": "Credit check component M", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "costa": {"name": "costa", "description": "Costing status", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "dcstk": {"name": "dcstk", "description": "Document completeness status", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "fkivk": {"name": "fkivk", "description": "Invoicing plan status", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "fksak": {"name": "fksak", "description": "Billing document creation status", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "fkstk": {"name": "fkstk", "description": "Billing status", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "fmstk": {"name": "fmstk", "description": "Funds management status", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "fsh_ar_stat_hdr": {"name": "fsh_ar_stat_hdr", "description": "Fashion AR status header", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "fsstk": {"name": "fsstk", "description": "Financial document status", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "gbstk": {"name": "gbstk", "description": "Overall processing status", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "hdall": {"name": "hdall", "description": "Header fully delivered", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "hdals": {"name": "hdals", "description": "Header partially delivered", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "hvr_change_time": {"name": "hvr_change_time", "description": "HVR change timestamp", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "hvr_is_deleted": {"name": "hvr_is_deleted", "description": "HVR deletion flag", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "koquk": {"name": "koquk", "description": "Configuration status", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "kostk": {"name": "kostk", "description": "Cost estimate status", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "lfgsk": {"name": "lfgsk", "description": "Delivery status", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "lfstk": {"name": "lfstk", "description": "Delivery status of item", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "lsstk": {"name": "lsstk", "description": "Picking status", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "lvstk": {"name": "lvstk", "description": "Goods movement status", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "mandt": {"name": "mandt", "description": "Client", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "manek": {"name": "manek", "description": "Manual credit check indicator", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "pdstk": {"name": "pdstk", "description": "Pricing document status", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "pkstk": {"name": "pkstk", "description": "Picking confirmation status", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "relik": {"name": "relik", "description": "Release indicator", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "rfgsk": {"name": "rfgsk", "description": "Reference document status", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "rfstk": {"name": "rfstk", "description": "Reference billing status", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "rrsta": {"name": "rrsta", "description": "Returns status", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "saprl": {"name": "saprl", "description": "Release status", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "spe_tmpid": {"name": "spe_tmpid", "description": "Temporary document ID", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "spstg": {"name": "spstg", "description": "Shipping status", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "trsta": {"name": "trsta", "description": "Transportation status", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "uvall": {"name": "uvall", "description": "Fully billed", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "uvals": {"name": "uvals", "description": "Partially billed", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "uvfak": {"name": "uvfak", "description": "Billing block indicator", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "uvfas": {"name": "uvfas", "description": "Partial billing block", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "uvgek": {"name": "uvgek", "description": "Rebate agreement status", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "uvk01": {"name": "uvk01", "description": "User status 01", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "uvk02": {"name": "uvk02", "description": "User status 02", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "uvk03": {"name": "uvk03", "description": "User status 03", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "uvk04": {"name": "uvk04", "description": "User status 04", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "uvk05": {"name": "uvk05", "description": "User status 05", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "uvpak": {"name": "uvpak", "description": "Packing status", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "uvpas": {"name": "uvpas", "description": "Packing partial status", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "uvpik": {"name": "uvpik", "description": "Picking status", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "uvpis": {"name": "uvpis", "description": "Picking partial status", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "uvprs": {"name": "uvprs", "description": "Pricing status", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "uvs01": {"name": "uvs01", "description": "Custom status 01", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "uvs02": {"name": "uvs02", "description": "Custom status 02", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "uvs03": {"name": "uvs03", "description": "Custom status 03", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "uvs04": {"name": "uvs04", "description": "Custom status 04", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "uvs05": {"name": "uvs05", "description": "Custom status 05", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "uvvlk": {"name": "uvvlk", "description": "Delivery status (fully delivered)", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "uvvls": {"name": "uvvls", "description": "Delivery status (partially delivered)", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "uvwak": {"name": "uvwak", "description": "Goods issue status", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "uvwas": {"name": "uvwas", "description": "Partial goods issue status", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "vbeln": {"name": "vbeln", "description": "Sales document number", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "vbobj": {"name": "vbobj", "description": "Object type", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "vbtyp": {"name": "vbtyp", "description": "Sales document category", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "vbtyp_ext": {"name": "vbtyp_ext", "description": "External document category", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "vestk": {"name": "vestk", "description": "Shipping status", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "vlstk": {"name": "vlstk", "description": "Delivery status", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "wbstk": {"name": "wbstk", "description": "Goods issue status", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": "_fivetran_synced", "loaded_at_query": null, "meta": {}, "tags": []}, "patch_path": null, "unrendered_config": {"loaded_at_field": "_fivetran_synced", "enabled": true, "loaded_at_query": null, "meta": {}, "tags": []}, "relation_name": "\"postgres\".\"public\".\"sap_vbuk_data\"", "created_at": 1756850331.9868615, "unrendered_database": "{% if target.type != 'spark' %}{{ var('sap_database', target.database) }}{% endif %}", "unrendered_schema": "{{ var('sap_schema', 'sap') }}", "doc_blocks": []}, "source.sap.sap.vbup": {"database": "postgres", "schema": "public", "name": "vbup", "resource_type": "source", "package_name": "sap", "path": "models/staging/src_sap.yml", "original_file_path": "models/staging/src_sap.yml", "unique_id": "source.sap.sap.vbup", "fqn": ["sap", "staging", "sap", "vbup"], "source_name": "sap", "source_description": "", "loader": "fivetran", "identifier": "sap_vbup_data", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": "_fivetran_synced", "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "Sales document status (item level)", "columns": {"_fivetran_deleted": {"name": "_fivetran_deleted", "description": "Fivetran deletion marker", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "_fivetran_sap_archived": {"name": "_fivetran_sap_archived", "description": "Fivetran SAP archive marker", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "_fivetran_synced": {"name": "_fivetran_synced", "description": "Fivetran sync timestamp", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "absta": {"name": "absta", "description": "Rejection status for item", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "besta": {"name": "besta", "description": "Purchase order status (item)", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "cmppi": {"name": "cmppi", "description": "Credit check static limit (item)", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "cmppj": {"name": "cmppj", "description": "Credit check terms of payment (item)", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "costa": {"name": "costa", "description": "Costing status (item)", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "dcsta": {"name": "dcsta", "description": "Document completeness status", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "fkivp": {"name": "fkivp", "description": "Billing plan status (item)", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "fksaa": {"name": "fksaa", "description": "Billing block (item)", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "fksta": {"name": "fksta", "description": "Billing status (item)", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "fsh_ar_stat_itm": {"name": "fsh_ar_stat_itm", "description": "Fashion AR status at item level", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "fssta": {"name": "fssta", "description": "Financial document status (item)", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "gbsta": {"name": "gbsta", "description": "Overall processing status (item)", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "hdall": {"name": "hdall", "description": "Item fully delivered", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "koqua": {"name": "koqua", "description": "Configuration status (item)", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "kosta": {"name": "kosta", "description": "Cost estimate status (item)", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "lfgsa": {"name": "lfgsa", "description": "Delivery status (item)", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "lfsta": {"name": "lfsta", "description": "Delivery status of item", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "lssta": {"name": "lssta", "description": "Picking status (item)", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "ltsps": {"name": "ltsps", "description": "Last transportation scheduling status", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "lvsta": {"name": "lvsta", "description": "Goods movement status (item)", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "mandt": {"name": "mandt", "description": "Client", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "manek": {"name": "manek", "description": "Manual credit check indicator (item)", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "mill_vs_vssta": {"name": "mill_vs_vssta", "description": "Mill-specific item status", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "pdsta": {"name": "pdsta", "description": "Pricing document status (item)", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "pksta": {"name": "pksta", "description": "Picking status", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "posnr": {"name": "posnr", "description": "Sales document item number", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "rfgsa": {"name": "rfgsa", "description": "Reference document status (item)", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "rfsta": {"name": "rfsta", "description": "Reference billing status (item)", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "rrsta": {"name": "rrsta", "description": "Returns status (item)", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "uvall": {"name": "uvall", "description": "Fully billed (item)", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "uvfak": {"name": "uvfak", "description": "Billing block indicator (item)", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "uvp01": {"name": "uvp01", "description": "User status 01", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "uvp02": {"name": "uvp02", "description": "User status 02", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "uvp03": {"name": "uvp03", "description": "User status 03", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "uvp04": {"name": "uvp04", "description": "User status 04", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "uvp05": {"name": "uvp05", "description": "User status 05", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "uvpak": {"name": "uvpak", "description": "Packing status (item)", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "uvpik": {"name": "uvpik", "description": "Picking status (item)", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "uvprs": {"name": "uvprs", "description": "Pricing status (item)", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "uvvlk": {"name": "uvvlk", "description": "Delivery status (fully delivered, item)", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "uvwak": {"name": "uvwak", "description": "Goods issue status (item)", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "vbeln": {"name": "vbeln", "description": "Sales document number", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "vlstp": {"name": "vlstp", "description": "Delivery status (partial)", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "wbsta": {"name": "wbsta", "description": "Goods issue status (item)", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": "_fivetran_synced", "loaded_at_query": null, "meta": {}, "tags": []}, "patch_path": null, "unrendered_config": {"loaded_at_field": "_fivetran_synced", "enabled": true, "loaded_at_query": null, "meta": {}, "tags": []}, "relation_name": "\"postgres\".\"public\".\"sap_vbup_data\"", "created_at": 1756850331.9877307, "unrendered_database": "{% if target.type != 'spark' %}{{ var('sap_database', target.database) }}{% endif %}", "unrendered_schema": "{{ var('sap_schema', 'sap') }}", "doc_blocks": []}}, "macros": {"macro.dbt_postgres.postgres__create_table_as": {"name": "postgres__create_table_as", "resource_type": "macro", "package_name": "dbt_postgres", "path": "macros/adapters.sql", "original_file_path": "macros/adapters.sql", "unique_id": "macro.dbt_postgres.postgres__create_table_as", "macro_sql": "{% macro postgres__create_table_as(temporary, relation, sql) -%}\n  {%- set unlogged = config.get('unlogged', default=false) -%}\n  {%- set sql_header = config.get('sql_header', none) -%}\n\n  {{ sql_header if sql_header is not none }}\n\n  create {% if temporary -%}\n    temporary\n  {%- elif unlogged -%}\n    unlogged\n  {%- endif %} table {{ relation }}\n  {% set contract_config = config.get('contract') %}\n  {% if contract_config.enforced %}\n    {{ get_assert_columns_equivalent(sql) }}\n  {% endif -%}\n  {% if contract_config.enforced and (not temporary) -%}\n      {{ get_table_columns_and_constraints() }} ;\n    insert into {{ relation }} (\n      {{ adapter.dispatch('get_column_names', 'dbt')() }}\n    )\n    {%- set sql = get_select_subquery(sql) %}\n  {% else %}\n    as\n  {% endif %}\n  (\n    {{ sql }}\n  );\n{%- endmacro %}", "depends_on": {"macros": ["macro.dbt.get_assert_columns_equivalent", "macro.dbt.get_table_columns_and_constraints", "macro.dbt.default__get_column_names", "macro.dbt.get_select_subquery"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1756850322.926827, "supported_languages": null}, "macro.dbt_postgres.postgres__get_create_index_sql": {"name": "postgres__get_create_index_sql", "resource_type": "macro", "package_name": "dbt_postgres", "path": "macros/adapters.sql", "original_file_path": "macros/adapters.sql", "unique_id": "macro.dbt_postgres.postgres__get_create_index_sql", "macro_sql": "{% macro postgres__get_create_index_sql(relation, index_dict) -%}\n  {%- set index_config = adapter.parse_index(index_dict) -%}\n  {%- set comma_separated_columns = \", \".join(index_config.columns) -%}\n  {%- set index_name = index_config.render(relation) -%}\n\n  create {% if index_config.unique -%}\n    unique\n  {%- endif %} index if not exists\n  \"{{ index_name }}\"\n  on {{ relation }} {% if index_config.type -%}\n    using {{ index_config.type }}\n  {%- endif %}\n  ({{ comma_separated_columns }})\n{%- endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1756850322.927827, "supported_languages": null}, "macro.dbt_postgres.postgres__create_schema": {"name": "postgres__create_schema", "resource_type": "macro", "package_name": "dbt_postgres", "path": "macros/adapters.sql", "original_file_path": "macros/adapters.sql", "unique_id": "macro.dbt_postgres.postgres__create_schema", "macro_sql": "{% macro postgres__create_schema(relation) -%}\n  {% if relation.database -%}\n    {{ adapter.verify_database(relation.database) }}\n  {%- endif -%}\n  {%- call statement('create_schema') -%}\n    create schema if not exists {{ relation.without_identifier().include(database=False) }}\n  {%- endcall -%}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.statement"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1756850322.9284437, "supported_languages": null}, "macro.dbt_postgres.postgres__drop_schema": {"name": "postgres__drop_schema", "resource_type": "macro", "package_name": "dbt_postgres", "path": "macros/adapters.sql", "original_file_path": "macros/adapters.sql", "unique_id": "macro.dbt_postgres.postgres__drop_schema", "macro_sql": "{% macro postgres__drop_schema(relation) -%}\n  {% if relation.database -%}\n    {{ adapter.verify_database(relation.database) }}\n  {%- endif -%}\n  {%- call statement('drop_schema') -%}\n    drop schema if exists {{ relation.without_identifier().include(database=False) }} cascade\n  {%- endcall -%}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.statement"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1756850322.9290721, "supported_languages": null}, "macro.dbt_postgres.postgres__get_columns_in_relation": {"name": "postgres__get_columns_in_relation", "resource_type": "macro", "package_name": "dbt_postgres", "path": "macros/adapters.sql", "original_file_path": "macros/adapters.sql", "unique_id": "macro.dbt_postgres.postgres__get_columns_in_relation", "macro_sql": "{% macro postgres__get_columns_in_relation(relation) -%}\n  {% call statement('get_columns_in_relation', fetch_result=True) %}\n      select\n          column_name,\n          data_type,\n          character_maximum_length,\n          numeric_precision,\n          numeric_scale\n\n      from {{ relation.information_schema('columns') }}\n      where table_name = '{{ relation.identifier }}'\n        {% if relation.schema %}\n        and table_schema = '{{ relation.schema }}'\n        {% endif %}\n      order by ordinal_position\n\n  {% endcall %}\n  {% set table = load_result('get_columns_in_relation').table %}\n  {{ return(sql_convert_columns_in_relation(table)) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.statement", "macro.dbt.sql_convert_columns_in_relation"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1756850322.9299726, "supported_languages": null}, "macro.dbt_postgres.postgres__list_relations_without_caching": {"name": "postgres__list_relations_without_caching", "resource_type": "macro", "package_name": "dbt_postgres", "path": "macros/adapters.sql", "original_file_path": "macros/adapters.sql", "unique_id": "macro.dbt_postgres.postgres__list_relations_without_caching", "macro_sql": "{% macro postgres__list_relations_without_caching(schema_relation) %}\n  {% call statement('list_relations_without_caching', fetch_result=True) -%}\n    select\n      '{{ schema_relation.database }}' as database,\n      tablename as name,\n      schemaname as schema,\n      'table' as type\n    from pg_tables\n    where schemaname ilike '{{ schema_relation.schema }}'\n    union all\n    select\n      '{{ schema_relation.database }}' as database,\n      viewname as name,\n      schemaname as schema,\n      'view' as type\n    from pg_views\n    where schemaname ilike '{{ schema_relation.schema }}'\n    union all\n    select\n      '{{ schema_relation.database }}' as database,\n      matviewname as name,\n      schemaname as schema,\n      'materialized_view' as type\n    from pg_matviews\n    where schemaname ilike '{{ schema_relation.schema }}'\n  {% endcall %}\n  {{ return(load_result('list_relations_without_caching').table) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.statement"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1756850322.9308007, "supported_languages": null}, "macro.dbt_postgres.postgres__information_schema_name": {"name": "postgres__information_schema_name", "resource_type": "macro", "package_name": "dbt_postgres", "path": "macros/adapters.sql", "original_file_path": "macros/adapters.sql", "unique_id": "macro.dbt_postgres.postgres__information_schema_name", "macro_sql": "{% macro postgres__information_schema_name(database) -%}\n  {% if database_name -%}\n    {{ adapter.verify_database(database_name) }}\n  {%- endif -%}\n  information_schema\n{%- endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1756850322.9311476, "supported_languages": null}, "macro.dbt_postgres.postgres__list_schemas": {"name": "postgres__list_schemas", "resource_type": "macro", "package_name": "dbt_postgres", "path": "macros/adapters.sql", "original_file_path": "macros/adapters.sql", "unique_id": "macro.dbt_postgres.postgres__list_schemas", "macro_sql": "{% macro postgres__list_schemas(database) %}\n  {% if database -%}\n    {{ adapter.verify_database(database) }}\n  {%- endif -%}\n  {% call statement('list_schemas', fetch_result=True, auto_begin=False) %}\n    select distinct nspname from pg_namespace\n  {% endcall %}\n  {{ return(load_result('list_schemas').table) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.statement"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1756850322.9318116, "supported_languages": null}, "macro.dbt_postgres.postgres__check_schema_exists": {"name": "postgres__check_schema_exists", "resource_type": "macro", "package_name": "dbt_postgres", "path": "macros/adapters.sql", "original_file_path": "macros/adapters.sql", "unique_id": "macro.dbt_postgres.postgres__check_schema_exists", "macro_sql": "{% macro postgres__check_schema_exists(information_schema, schema) -%}\n  {% if information_schema.database -%}\n    {{ adapter.verify_database(information_schema.database) }}\n  {%- endif -%}\n  {% call statement('check_schema_exists', fetch_result=True, auto_begin=False) %}\n    select count(*) from pg_namespace where nspname = '{{ schema }}'\n  {% endcall %}\n  {{ return(load_result('check_schema_exists').table) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.statement"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1756850322.9325294, "supported_languages": null}, "macro.dbt_postgres.postgres__make_relation_with_suffix": {"name": "postgres__make_relation_with_suffix", "resource_type": "macro", "package_name": "dbt_postgres", "path": "macros/adapters.sql", "original_file_path": "macros/adapters.sql", "unique_id": "macro.dbt_postgres.postgres__make_relation_with_suffix", "macro_sql": "{% macro postgres__make_relation_with_suffix(base_relation, suffix, dstring) %}\n    {% if dstring %}\n      {% set dt = modules.datetime.datetime.now() %}\n      {% set dtstring = dt.strftime(\"%H%M%S%f\") %}\n      {% set suffix = suffix ~ dtstring %}\n    {% endif %}\n    {% set suffix_length = suffix|length %}\n    {% set relation_max_name_length = base_relation.relation_max_name_length() %}\n    {% if suffix_length > relation_max_name_length %}\n        {% do exceptions.raise_compiler_error('Relation suffix is too long (' ~ suffix_length ~ ' characters). Maximum length is ' ~ relation_max_name_length ~ ' characters.') %}\n    {% endif %}\n    {% set identifier = base_relation.identifier[:relation_max_name_length - suffix_length] ~ suffix %}\n\n    {{ return(base_relation.incorporate(path={\"identifier\": identifier })) }}\n\n  {% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1756850322.9340956, "supported_languages": null}, "macro.dbt_postgres.postgres__make_intermediate_relation": {"name": "postgres__make_intermediate_relation", "resource_type": "macro", "package_name": "dbt_postgres", "path": "macros/adapters.sql", "original_file_path": "macros/adapters.sql", "unique_id": "macro.dbt_postgres.postgres__make_intermediate_relation", "macro_sql": "{% macro postgres__make_intermediate_relation(base_relation, suffix) %}\n    {{ return(postgres__make_relation_with_suffix(base_relation, suffix, dstring=False)) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt_postgres.postgres__make_relation_with_suffix"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1756850322.9344697, "supported_languages": null}, "macro.dbt_postgres.postgres__make_temp_relation": {"name": "postgres__make_temp_relation", "resource_type": "macro", "package_name": "dbt_postgres", "path": "macros/adapters.sql", "original_file_path": "macros/adapters.sql", "unique_id": "macro.dbt_postgres.postgres__make_temp_relation", "macro_sql": "{% macro postgres__make_temp_relation(base_relation, suffix) %}\n    {% set temp_relation = postgres__make_relation_with_suffix(base_relation, suffix, dstring=True) %}\n    {{ return(temp_relation.incorporate(path={\"schema\": none,\n                                              \"database\": none})) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt_postgres.postgres__make_relation_with_suffix"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1756850322.9351044, "supported_languages": null}, "macro.dbt_postgres.postgres__make_backup_relation": {"name": "postgres__make_backup_relation", "resource_type": "macro", "package_name": "dbt_postgres", "path": "macros/adapters.sql", "original_file_path": "macros/adapters.sql", "unique_id": "macro.dbt_postgres.postgres__make_backup_relation", "macro_sql": "{% macro postgres__make_backup_relation(base_relation, backup_relation_type, suffix) %}\n    {% set backup_relation = postgres__make_relation_with_suffix(base_relation, suffix, dstring=False) %}\n    {{ return(backup_relation.incorporate(type=backup_relation_type)) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt_postgres.postgres__make_relation_with_suffix"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1756850322.9356234, "supported_languages": null}, "macro.dbt_postgres.postgres_escape_comment": {"name": "postgres_escape_comment", "resource_type": "macro", "package_name": "dbt_postgres", "path": "macros/adapters.sql", "original_file_path": "macros/adapters.sql", "unique_id": "macro.dbt_postgres.postgres_escape_comment", "macro_sql": "{% macro postgres_escape_comment(comment) -%}\n  {% if comment is not string %}\n    {% do exceptions.raise_compiler_error('cannot escape a non-string: ' ~ comment) %}\n  {% endif %}\n  {%- set magic = '$dbt_comment_literal_block$' -%}\n  {%- if magic in comment -%}\n    {%- do exceptions.raise_compiler_error('The string ' ~ magic ~ ' is not allowed in comments.') -%}\n  {%- endif -%}\n  {{ magic }}{{ comment }}{{ magic }}\n{%- endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1756850322.9364653, "supported_languages": null}, "macro.dbt_postgres.postgres__alter_relation_comment": {"name": "postgres__alter_relation_comment", "resource_type": "macro", "package_name": "dbt_postgres", "path": "macros/adapters.sql", "original_file_path": "macros/adapters.sql", "unique_id": "macro.dbt_postgres.postgres__alter_relation_comment", "macro_sql": "{% macro postgres__alter_relation_comment(relation, comment) %}\n  {% set escaped_comment = postgres_escape_comment(comment) %}\n  {% if relation.type == 'materialized_view' -%}\n    {% set relation_type = \"materialized view\" %}\n  {%- else -%}\n    {%- set relation_type = relation.type -%}\n  {%- endif -%}\n  comment on {{ relation_type }} {{ relation }} is {{ escaped_comment }};\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt_postgres.postgres_escape_comment"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1756850322.9373088, "supported_languages": null}, "macro.dbt_postgres.postgres__alter_column_comment": {"name": "postgres__alter_column_comment", "resource_type": "macro", "package_name": "dbt_postgres", "path": "macros/adapters.sql", "original_file_path": "macros/adapters.sql", "unique_id": "macro.dbt_postgres.postgres__alter_column_comment", "macro_sql": "{% macro postgres__alter_column_comment(relation, column_dict) %}\n  {% set existing_columns = adapter.get_columns_in_relation(relation) | map(attribute=\"name\") | list %}\n  {% for column_name in column_dict if (column_name in existing_columns) %}\n    {% set comment = column_dict[column_name]['description'] %}\n    {% set escaped_comment = postgres_escape_comment(comment) %}\n    comment on column {{ relation }}.{{ adapter.quote(column_name) if column_dict[column_name]['quote'] else column_name }} is {{ escaped_comment }};\n  {% endfor %}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt_postgres.postgres_escape_comment"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1756850322.9384437, "supported_languages": null}, "macro.dbt_postgres.postgres__get_show_grant_sql": {"name": "postgres__get_show_grant_sql", "resource_type": "macro", "package_name": "dbt_postgres", "path": "macros/adapters.sql", "original_file_path": "macros/adapters.sql", "unique_id": "macro.dbt_postgres.postgres__get_show_grant_sql", "macro_sql": "\n\n{%- macro postgres__get_show_grant_sql(relation) -%}\n  select grantee, privilege_type\n  from {{ relation.information_schema('role_table_grants') }}\n      where grantor = current_role\n        and grantee != current_role\n        and table_schema = '{{ relation.schema }}'\n        and table_name = '{{ relation.identifier }}'\n{%- endmacro -%}\n\n", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1756850322.9388533, "supported_languages": null}, "macro.dbt_postgres.postgres__copy_grants": {"name": "postgres__copy_grants", "resource_type": "macro", "package_name": "dbt_postgres", "path": "macros/adapters.sql", "original_file_path": "macros/adapters.sql", "unique_id": "macro.dbt_postgres.postgres__copy_grants", "macro_sql": "{% macro postgres__copy_grants() %}\n    {{ return(False) }}\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1756850322.9390886, "supported_languages": null}, "macro.dbt_postgres.postgres__get_show_indexes_sql": {"name": "postgres__get_show_indexes_sql", "resource_type": "macro", "package_name": "dbt_postgres", "path": "macros/adapters.sql", "original_file_path": "macros/adapters.sql", "unique_id": "macro.dbt_postgres.postgres__get_show_indexes_sql", "macro_sql": "{% macro postgres__get_show_indexes_sql(relation) %}\n    select\n        i.relname                                   as name,\n        m.amname                                    as method,\n        ix.indisunique                              as \"unique\",\n        array_to_string(array_agg(a.attname), ',')  as column_names\n    from pg_index ix\n    join pg_class i\n        on i.oid = ix.indexrelid\n    join pg_am m\n        on m.oid=i.relam\n    join pg_class t\n        on t.oid = ix.indrelid\n    join pg_namespace n\n        on n.oid = t.relnamespace\n    join pg_attribute a\n        on a.attrelid = t.oid\n        and a.attnum = ANY(ix.indkey)\n    where t.relname = '{{ relation.identifier }}'\n      and n.nspname = '{{ relation.schema }}'\n      and t.relkind in ('r', 'm')\n    group by 1, 2, 3\n    order by 1, 2, 3\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1756850322.9394178, "supported_languages": null}, "macro.dbt_postgres.postgres__get_drop_index_sql": {"name": "postgres__get_drop_index_sql", "resource_type": "macro", "package_name": "dbt_postgres", "path": "macros/adapters.sql", "original_file_path": "macros/adapters.sql", "unique_id": "macro.dbt_postgres.postgres__get_drop_index_sql", "macro_sql": "\n\n\n{%- macro postgres__get_drop_index_sql(relation, index_name) -%}\n    drop index if exists \"{{ relation.schema }}\".\"{{ index_name }}\"\n{%- endmacro -%}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1756850322.9396942, "supported_languages": null}, "macro.dbt_postgres.postgres__get_relations": {"name": "postgres__get_relations", "resource_type": "macro", "package_name": "dbt_postgres", "path": "macros/relations.sql", "original_file_path": "macros/relations.sql", "unique_id": "macro.dbt_postgres.postgres__get_relations", "macro_sql": "{% macro postgres__get_relations() -%}\n\n  {#\n      -- in pg_depend, objid is the dependent, refobjid is the referenced object\n      --  > a pg_depend entry indicates that the referenced object cannot be\n      --  > dropped without also dropping the dependent object.\n  #}\n\n  {%- call statement('relations', fetch_result=True) -%}\n    with relation as (\n        select\n            pg_rewrite.ev_class as class,\n            pg_rewrite.oid as id\n        from pg_rewrite\n    ),\n    class as (\n        select\n            oid as id,\n            relname as name,\n            relnamespace as schema,\n            relkind as kind\n        from pg_class\n    ),\n    dependency as (\n        select distinct\n            pg_depend.objid as id,\n            pg_depend.refobjid as ref\n        from pg_depend\n    ),\n    schema as (\n        select\n            pg_namespace.oid as id,\n            pg_namespace.nspname as name\n        from pg_namespace\n        where nspname != 'information_schema' and nspname not like 'pg\\_%'\n    ),\n    referenced as (\n        select\n            relation.id AS id,\n            referenced_class.name ,\n            referenced_class.schema ,\n            referenced_class.kind\n        from relation\n        join class as referenced_class on relation.class=referenced_class.id\n        where referenced_class.kind in ('r', 'v', 'm')\n    ),\n    relationships as (\n        select\n            referenced.name as referenced_name,\n            referenced.schema as referenced_schema_id,\n            dependent_class.name as dependent_name,\n            dependent_class.schema as dependent_schema_id,\n            referenced.kind as kind\n        from referenced\n        join dependency on referenced.id=dependency.id\n        join class as dependent_class on dependency.ref=dependent_class.id\n        where\n            (referenced.name != dependent_class.name or\n             referenced.schema != dependent_class.schema)\n    )\n\n    select\n        referenced_schema.name as referenced_schema,\n        relationships.referenced_name as referenced_name,\n        dependent_schema.name as dependent_schema,\n        relationships.dependent_name as dependent_name\n    from relationships\n    join schema as dependent_schema on relationships.dependent_schema_id=dependent_schema.id\n    join schema as referenced_schema on relationships.referenced_schema_id=referenced_schema.id\n    group by referenced_schema, referenced_name, dependent_schema, dependent_name\n    order by referenced_schema, referenced_name, dependent_schema, dependent_name;\n\n  {%- endcall -%}\n\n  {{ return(load_result('relations').table) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.statement"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1756850322.940698, "supported_languages": null}, "macro.dbt_postgres.postgres_get_relations": {"name": "postgres_get_relations", "resource_type": "macro", "package_name": "dbt_postgres", "path": "macros/relations.sql", "original_file_path": "macros/relations.sql", "unique_id": "macro.dbt_postgres.postgres_get_relations", "macro_sql": "{% macro postgres_get_relations() %}\n  {{ return(postgres__get_relations()) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt_postgres.postgres__get_relations"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1756850322.9409714, "supported_languages": null}, "macro.dbt_postgres.postgres__get_catalog_relations": {"name": "postgres__get_catalog_relations", "resource_type": "macro", "package_name": "dbt_postgres", "path": "macros/catalog.sql", "original_file_path": "macros/catalog.sql", "unique_id": "macro.dbt_postgres.postgres__get_catalog_relations", "macro_sql": "{% macro postgres__get_catalog_relations(information_schema, relations) -%}\n  {%- call statement('catalog', fetch_result=True) -%}\n\n    {#\n      If the user has multiple databases set and the first one is wrong, this will fail.\n      But we won't fail in the case where there are multiple quoting-difference-only dbs, which is better.\n    #}\n    {% set database = information_schema.database %}\n    {{ adapter.verify_database(database) }}\n\n    select\n        '{{ database }}' as table_database,\n        sch.nspname as table_schema,\n        tbl.relname as table_name,\n        case tbl.relkind\n            when 'v' then 'VIEW'\n            when 'm' then 'MATERIALIZED VIEW'\n            else 'BASE TABLE'\n        end as table_type,\n        tbl_desc.description as table_comment,\n        col.attname as column_name,\n        col.attnum as column_index,\n        pg_catalog.format_type(col.atttypid, col.atttypmod) as column_type,\n        col_desc.description as column_comment,\n        pg_get_userbyid(tbl.relowner) as table_owner\n\n    from pg_catalog.pg_namespace sch\n    join pg_catalog.pg_class tbl on tbl.relnamespace = sch.oid\n    join pg_catalog.pg_attribute col on col.attrelid = tbl.oid\n    left outer join pg_catalog.pg_description tbl_desc on (tbl_desc.objoid = tbl.oid and tbl_desc.objsubid = 0)\n    left outer join pg_catalog.pg_description col_desc on (col_desc.objoid = tbl.oid and col_desc.objsubid = col.attnum)\n    where (\n      {%- for relation in relations -%}\n        {%- if relation.identifier -%}\n          (upper(sch.nspname) = upper('{{ relation.schema }}') and\n           upper(tbl.relname) = upper('{{ relation.identifier }}'))\n        {%- else-%}\n          upper(sch.nspname) = upper('{{ relation.schema }}')\n        {%- endif -%}\n        {%- if not loop.last %} or {% endif -%}\n      {%- endfor -%}\n    )\n      and not pg_is_other_temp_schema(sch.oid) -- not a temporary schema belonging to another session\n      and tbl.relpersistence in ('p', 'u') -- [p]ermanent table or [u]nlogged table. Exclude [t]emporary tables\n      and tbl.relkind in ('r', 'v', 'f', 'p', 'm') -- o[r]dinary table, [v]iew, [f]oreign table, [p]artitioned table, [m]aterialized view. Other values are [i]ndex, [S]equence, [c]omposite type, [t]OAST table\n      and col.attnum > 0 -- negative numbers are used for system columns such as oid\n      and not col.attisdropped -- column as not been dropped\n\n    order by\n        sch.nspname,\n        tbl.relname,\n        col.attnum\n\n  {%- endcall -%}\n\n  {{ return(load_result('catalog').table) }}\n{%- endmacro %}", "depends_on": {"macros": ["macro.dbt.statement"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1756850322.94281, "supported_languages": null}, "macro.dbt_postgres.postgres__get_catalog": {"name": "postgres__get_catalog", "resource_type": "macro", "package_name": "dbt_postgres", "path": "macros/catalog.sql", "original_file_path": "macros/catalog.sql", "unique_id": "macro.dbt_postgres.postgres__get_catalog", "macro_sql": "{% macro postgres__get_catalog(information_schema, schemas) -%}\n  {%- set relations = [] -%}\n  {%- for schema in schemas -%}\n    {%- set dummy = relations.append({'schema': schema}) -%}\n  {%- endfor -%}\n  {{ return(postgres__get_catalog_relations(information_schema, relations)) }}\n{%- endmacro %}", "depends_on": {"macros": ["macro.dbt_postgres.postgres__get_catalog_relations"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1756850322.9434803, "supported_languages": null}, "macro.dbt_postgres.postgres__current_timestamp": {"name": "postgres__current_timestamp", "resource_type": "macro", "package_name": "dbt_postgres", "path": "macros/timestamps.sql", "original_file_path": "macros/timestamps.sql", "unique_id": "macro.dbt_postgres.postgres__current_timestamp", "macro_sql": "{% macro postgres__current_timestamp() -%}\n    now()\n{%- endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1756850322.9439003, "supported_languages": null}, "macro.dbt_postgres.postgres__snapshot_string_as_time": {"name": "postgres__snapshot_string_as_time", "resource_type": "macro", "package_name": "dbt_postgres", "path": "macros/timestamps.sql", "original_file_path": "macros/timestamps.sql", "unique_id": "macro.dbt_postgres.postgres__snapshot_string_as_time", "macro_sql": "{% macro postgres__snapshot_string_as_time(timestamp) -%}\n    {%- set result = \"'\" ~ timestamp ~ \"'::timestamp without time zone\" -%}\n    {{ return(result) }}\n{%- endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1756850322.94426, "supported_languages": null}, "macro.dbt_postgres.postgres__snapshot_get_time": {"name": "postgres__snapshot_get_time", "resource_type": "macro", "package_name": "dbt_postgres", "path": "macros/timestamps.sql", "original_file_path": "macros/timestamps.sql", "unique_id": "macro.dbt_postgres.postgres__snapshot_get_time", "macro_sql": "{% macro postgres__snapshot_get_time() -%}\n  {{ current_timestamp() }}::timestamp without time zone\n{%- endmacro %}", "depends_on": {"macros": ["macro.dbt.current_timestamp"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1756850322.9444838, "supported_languages": null}, "macro.dbt_postgres.postgres__current_timestamp_backcompat": {"name": "postgres__current_timestamp_backcompat", "resource_type": "macro", "package_name": "dbt_postgres", "path": "macros/timestamps.sql", "original_file_path": "macros/timestamps.sql", "unique_id": "macro.dbt_postgres.postgres__current_timestamp_backcompat", "macro_sql": "{% macro postgres__current_timestamp_backcompat() %}\n    current_timestamp::{{ type_timestamp() }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.type_timestamp"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1756850322.9447002, "supported_languages": null}, "macro.dbt_postgres.postgres__current_timestamp_in_utc_backcompat": {"name": "postgres__current_timestamp_in_utc_backcompat", "resource_type": "macro", "package_name": "dbt_postgres", "path": "macros/timestamps.sql", "original_file_path": "macros/timestamps.sql", "unique_id": "macro.dbt_postgres.postgres__current_timestamp_in_utc_backcompat", "macro_sql": "{% macro postgres__current_timestamp_in_utc_backcompat() %}\n    (current_timestamp at time zone 'utc')::{{ type_timestamp() }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.type_timestamp"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1756850322.944938, "supported_languages": null}, "macro.dbt_postgres.postgres__any_value": {"name": "postgres__any_value", "resource_type": "macro", "package_name": "dbt_postgres", "path": "macros/utils/any_value.sql", "original_file_path": "macros/utils/any_value.sql", "unique_id": "macro.dbt_postgres.postgres__any_value", "macro_sql": "{% macro postgres__any_value(expression) -%}\n\n    min({{ expression }})\n\n{%- endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1756850322.9452357, "supported_languages": null}, "macro.dbt_postgres.postgres__split_part": {"name": "postgres__split_part", "resource_type": "macro", "package_name": "dbt_postgres", "path": "macros/utils/split_part.sql", "original_file_path": "macros/utils/split_part.sql", "unique_id": "macro.dbt_postgres.postgres__split_part", "macro_sql": "{% macro postgres__split_part(string_text, delimiter_text, part_number) %}\n\n  {% if part_number >= 0 %}\n    {{ dbt.default__split_part(string_text, delimiter_text, part_number) }}\n  {% else %}\n    {{ dbt._split_part_negative(string_text, delimiter_text, part_number) }}\n  {% endif %}\n\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.default__split_part", "macro.dbt._split_part_negative"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1756850322.9460278, "supported_languages": null}, "macro.dbt_postgres.postgres__last_day": {"name": "postgres__last_day", "resource_type": "macro", "package_name": "dbt_postgres", "path": "macros/utils/last_day.sql", "original_file_path": "macros/utils/last_day.sql", "unique_id": "macro.dbt_postgres.postgres__last_day", "macro_sql": "{% macro postgres__last_day(date, datepart) -%}\n\n    {%- if datepart == 'quarter' -%}\n    -- postgres dateadd does not support quarter interval.\n    cast(\n        {{dbt.dateadd('day', '-1',\n        dbt.dateadd('month', '3', dbt.date_trunc(datepart, date))\n        )}}\n        as date)\n    {%- else -%}\n    {{dbt.default_last_day(date, datepart)}}\n    {%- endif -%}\n\n{%- endmacro %}", "depends_on": {"macros": ["macro.dbt.dateadd", "macro.dbt.date_trunc", "macro.dbt.default_last_day"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1756850322.9469502, "supported_languages": null}, "macro.dbt_postgres.postgres__listagg": {"name": "postgres__listagg", "resource_type": "macro", "package_name": "dbt_postgres", "path": "macros/utils/listagg.sql", "original_file_path": "macros/utils/listagg.sql", "unique_id": "macro.dbt_postgres.postgres__listagg", "macro_sql": "{% macro postgres__listagg(measure, delimiter_text, order_by_clause, limit_num) -%}\n\n    {% if limit_num -%}\n    array_to_string(\n        (array_agg(\n            {{ measure }}\n            {% if order_by_clause -%}\n            {{ order_by_clause }}\n            {%- endif %}\n        ))[1:{{ limit_num }}],\n        {{ delimiter_text }}\n        )\n    {%- else %}\n    string_agg(\n        {{ measure }},\n        {{ delimiter_text }}\n        {% if order_by_clause -%}\n        {{ order_by_clause }}\n        {%- endif %}\n        )\n    {%- endif %}\n\n{%- endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1756850322.9479482, "supported_languages": null}, "macro.dbt_postgres.postgres__dateadd": {"name": "postgres__dateadd", "resource_type": "macro", "package_name": "dbt_postgres", "path": "macros/utils/dateadd.sql", "original_file_path": "macros/utils/dateadd.sql", "unique_id": "macro.dbt_postgres.postgres__dateadd", "macro_sql": "{% macro postgres__dateadd(datepart, interval, from_date_or_timestamp) %}\n\n    {{ from_date_or_timestamp }} + ((interval '1 {{ datepart }}') * ({{ interval }}))\n\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1756850322.9483554, "supported_languages": null}, "macro.dbt_postgres.postgres__datediff": {"name": "postgres__datediff", "resource_type": "macro", "package_name": "dbt_postgres", "path": "macros/utils/datediff.sql", "original_file_path": "macros/utils/datediff.sql", "unique_id": "macro.dbt_postgres.postgres__datediff", "macro_sql": "{% macro postgres__datediff(first_date, second_date, datepart) -%}\n\n    {% if datepart == 'year' %}\n        (date_part('year', ({{second_date}})::date) - date_part('year', ({{first_date}})::date))\n    {% elif datepart == 'quarter' %}\n        ({{ datediff(first_date, second_date, 'year') }} * 4 + date_part('quarter', ({{second_date}})::date) - date_part('quarter', ({{first_date}})::date))\n    {% elif datepart == 'month' %}\n        ({{ datediff(first_date, second_date, 'year') }} * 12 + date_part('month', ({{second_date}})::date) - date_part('month', ({{first_date}})::date))\n    {% elif datepart == 'day' %}\n        (({{second_date}})::date - ({{first_date}})::date)\n    {% elif datepart == 'week' %}\n        ({{ datediff(first_date, second_date, 'day') }} / 7 + case\n            when date_part('dow', ({{first_date}})::timestamp) <= date_part('dow', ({{second_date}})::timestamp) then\n                case when {{first_date}} <= {{second_date}} then 0 else -1 end\n            else\n                case when {{first_date}} <= {{second_date}} then 1 else 0 end\n        end)\n    {% elif datepart == 'hour' %}\n        ({{ datediff(first_date, second_date, 'day') }} * 24 + date_part('hour', ({{second_date}})::timestamp) - date_part('hour', ({{first_date}})::timestamp))\n    {% elif datepart == 'minute' %}\n        ({{ datediff(first_date, second_date, 'hour') }} * 60 + date_part('minute', ({{second_date}})::timestamp) - date_part('minute', ({{first_date}})::timestamp))\n    {% elif datepart == 'second' %}\n        ({{ datediff(first_date, second_date, 'minute') }} * 60 + floor(date_part('second', ({{second_date}})::timestamp)) - floor(date_part('second', ({{first_date}})::timestamp)))\n    {% elif datepart == 'millisecond' %}\n        ({{ datediff(first_date, second_date, 'minute') }} * 60000 + floor(date_part('millisecond', ({{second_date}})::timestamp)) - floor(date_part('millisecond', ({{first_date}})::timestamp)))\n    {% elif datepart == 'microsecond' %}\n        ({{ datediff(first_date, second_date, 'minute') }} * 60000000 + floor(date_part('microsecond', ({{second_date}})::timestamp)) - floor(date_part('microsecond', ({{first_date}})::timestamp)))\n    {% else %}\n        {{ exceptions.raise_compiler_error(\"Unsupported datepart for macro datediff in postgres: {!r}\".format(datepart)) }}\n    {% endif %}\n\n{%- endmacro %}", "depends_on": {"macros": ["macro.dbt.datediff"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1756850322.952275, "supported_languages": null}, "macro.dbt_postgres.postgres__snapshot_merge_sql": {"name": "postgres__snapshot_merge_sql", "resource_type": "macro", "package_name": "dbt_postgres", "path": "macros/materializations/snapshot_merge.sql", "original_file_path": "macros/materializations/snapshot_merge.sql", "unique_id": "macro.dbt_postgres.postgres__snapshot_merge_sql", "macro_sql": "{% macro postgres__snapshot_merge_sql(target, source, insert_cols) -%}\n    {%- set insert_cols_csv = insert_cols | join(', ') -%}\n\n    {%- set columns = config.get(\"snapshot_table_column_names\") or get_snapshot_table_column_names() -%}\n\n    update {{ target }}\n    set {{ columns.dbt_valid_to }} = DBT_INTERNAL_SOURCE.{{ columns.dbt_valid_to }}\n    from {{ source }} as DBT_INTERNAL_SOURCE\n    where DBT_INTERNAL_SOURCE.{{ columns.dbt_scd_id }}::text = {{ target }}.{{ columns.dbt_scd_id }}::text\n      and DBT_INTERNAL_SOURCE.dbt_change_type::text in ('update'::text, 'delete'::text)\n      {% if config.get(\"dbt_valid_to_current\") %}\n        and ({{ target }}.{{ columns.dbt_valid_to }} = {{ config.get('dbt_valid_to_current') }} or {{ target }}.{{ columns.dbt_valid_to }} is null);\n      {% else %}\n        and {{ target }}.{{ columns.dbt_valid_to }} is null;\n      {% endif %}\n\n\n    insert into {{ target }} ({{ insert_cols_csv }})\n    select {% for column in insert_cols -%}\n        DBT_INTERNAL_SOURCE.{{ column }} {%- if not loop.last %}, {%- endif %}\n    {%- endfor %}\n    from {{ source }} as DBT_INTERNAL_SOURCE\n    where DBT_INTERNAL_SOURCE.dbt_change_type::text = 'insert'::text;\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.get_snapshot_table_column_names"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1756850322.954416, "supported_languages": null}, "macro.dbt_postgres.postgres__get_incremental_default_sql": {"name": "postgres__get_incremental_default_sql", "resource_type": "macro", "package_name": "dbt_postgres", "path": "macros/materializations/incremental_strategies.sql", "original_file_path": "macros/materializations/incremental_strategies.sql", "unique_id": "macro.dbt_postgres.postgres__get_incremental_default_sql", "macro_sql": "{% macro postgres__get_incremental_default_sql(arg_dict) %}\n\n  {% if arg_dict[\"unique_key\"] %}\n    {% do return(get_incremental_delete_insert_sql(arg_dict)) %}\n  {% else %}\n    {% do return(get_incremental_append_sql(arg_dict)) %}\n  {% endif %}\n\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.get_incremental_delete_insert_sql", "macro.dbt.get_incremental_append_sql"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1756850322.9552655, "supported_languages": null}, "macro.dbt_postgres.postgres__get_incremental_microbatch_sql": {"name": "postgres__get_incremental_microbatch_sql", "resource_type": "macro", "package_name": "dbt_postgres", "path": "macros/materializations/incremental_strategies.sql", "original_file_path": "macros/materializations/incremental_strategies.sql", "unique_id": "macro.dbt_postgres.postgres__get_incremental_microbatch_sql", "macro_sql": "{% macro postgres__get_incremental_microbatch_sql(arg_dict) %}\n\n  {% if arg_dict[\"unique_key\"] %}\n    {% do return(adapter.dispatch('get_incremental_merge_sql', 'dbt')(arg_dict)) %}\n  {% else %}\n    {{ exceptions.raise_compiler_error(\"dbt-postgres 'microbatch' requires a `unique_key` config\") }}\n  {% endif %}\n\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.get_incremental_merge_sql", "macro.dbt.default__get_incremental_merge_sql"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1756850322.9559135, "supported_languages": null}, "macro.dbt_postgres.postgres__get_rename_view_sql": {"name": "postgres__get_rename_view_sql", "resource_type": "macro", "package_name": "dbt_postgres", "path": "macros/relations/view/rename.sql", "original_file_path": "macros/relations/view/rename.sql", "unique_id": "macro.dbt_postgres.postgres__get_rename_view_sql", "macro_sql": "{% macro postgres__get_rename_view_sql(relation, new_name) %}\n    alter view {{ relation }} rename to {{ new_name }}\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1756850322.9562602, "supported_languages": null}, "macro.dbt_postgres.postgres__drop_view": {"name": "postgres__drop_view", "resource_type": "macro", "package_name": "dbt_postgres", "path": "macros/relations/view/drop.sql", "original_file_path": "macros/relations/view/drop.sql", "unique_id": "macro.dbt_postgres.postgres__drop_view", "macro_sql": "{% macro postgres__drop_view(relation) -%}\n    drop view if exists {{ relation }} cascade\n{%- endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1756850322.9565322, "supported_languages": null}, "macro.dbt_postgres.postgres__get_replace_view_sql": {"name": "postgres__get_replace_view_sql", "resource_type": "macro", "package_name": "dbt_postgres", "path": "macros/relations/view/replace.sql", "original_file_path": "macros/relations/view/replace.sql", "unique_id": "macro.dbt_postgres.postgres__get_replace_view_sql", "macro_sql": "{% macro postgres__get_replace_view_sql(relation, sql) -%}\n\n    {%- set sql_header = config.get('sql_header', none) -%}\n    {{ sql_header if sql_header is not none }}\n\n    create or replace view {{ relation }}\n        {% set contract_config = config.get('contract') %}\n        {% if contract_config.enforced %}\n            {{ get_assert_columns_equivalent(sql) }}\n        {%- endif %}\n    as (\n        {{ sql }}\n    );\n\n{%- endmacro %}", "depends_on": {"macros": ["macro.dbt.get_assert_columns_equivalent"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1756850322.9575224, "supported_languages": null}, "macro.dbt_postgres.postgres__refresh_materialized_view": {"name": "postgres__refresh_materialized_view", "resource_type": "macro", "package_name": "dbt_postgres", "path": "macros/relations/materialized_view/refresh.sql", "original_file_path": "macros/relations/materialized_view/refresh.sql", "unique_id": "macro.dbt_postgres.postgres__refresh_materialized_view", "macro_sql": "{% macro postgres__refresh_materialized_view(relation) %}\n    refresh materialized view {{ relation }}\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1756850322.9578207, "supported_languages": null}, "macro.dbt_postgres.postgres__get_rename_materialized_view_sql": {"name": "postgres__get_rename_materialized_view_sql", "resource_type": "macro", "package_name": "dbt_postgres", "path": "macros/relations/materialized_view/rename.sql", "original_file_path": "macros/relations/materialized_view/rename.sql", "unique_id": "macro.dbt_postgres.postgres__get_rename_materialized_view_sql", "macro_sql": "{% macro postgres__get_rename_materialized_view_sql(relation, new_name) %}\n    alter materialized view {{ relation }} rename to {{ new_name }}\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1756850322.9581578, "supported_languages": null}, "macro.dbt_postgres.postgres__describe_materialized_view": {"name": "postgres__describe_materialized_view", "resource_type": "macro", "package_name": "dbt_postgres", "path": "macros/relations/materialized_view/describe.sql", "original_file_path": "macros/relations/materialized_view/describe.sql", "unique_id": "macro.dbt_postgres.postgres__describe_materialized_view", "macro_sql": "{% macro postgres__describe_materialized_view(relation) %}\n    -- for now just get the indexes, we don't need the name or the query yet\n    {% set _indexes = run_query(get_show_indexes_sql(relation)) %}\n    {% do return({'indexes': _indexes}) %}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.run_query", "macro.dbt.get_show_indexes_sql"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1756850322.9587204, "supported_languages": null}, "macro.dbt_postgres.postgres__get_create_materialized_view_as_sql": {"name": "postgres__get_create_materialized_view_as_sql", "resource_type": "macro", "package_name": "dbt_postgres", "path": "macros/relations/materialized_view/create.sql", "original_file_path": "macros/relations/materialized_view/create.sql", "unique_id": "macro.dbt_postgres.postgres__get_create_materialized_view_as_sql", "macro_sql": "{% macro postgres__get_create_materialized_view_as_sql(relation, sql) %}\n    create materialized view if not exists {{ relation }} as {{ sql }};\n\n    {% for _index_dict in config.get('indexes', []) -%}\n        {{- get_create_index_sql(relation, _index_dict) -}}{{ ';' if not loop.last else \"\" }}\n    {%- endfor -%}\n\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.get_create_index_sql"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1756850322.959534, "supported_languages": null}, "macro.dbt_postgres.postgres__get_alter_materialized_view_as_sql": {"name": "postgres__get_alter_materialized_view_as_sql", "resource_type": "macro", "package_name": "dbt_postgres", "path": "macros/relations/materialized_view/alter.sql", "original_file_path": "macros/relations/materialized_view/alter.sql", "unique_id": "macro.dbt_postgres.postgres__get_alter_materialized_view_as_sql", "macro_sql": "{% macro postgres__get_alter_materialized_view_as_sql(\n    relation,\n    configuration_changes,\n    sql,\n    existing_relation,\n    backup_relation,\n    intermediate_relation\n) %}\n\n    -- apply a full refresh immediately if needed\n    {% if configuration_changes.requires_full_refresh %}\n\n        {{ get_replace_sql(existing_relation, relation, sql) }}\n\n    -- otherwise apply individual changes as needed\n    {% else %}\n\n        {{ postgres__update_indexes_on_materialized_view(relation, configuration_changes.indexes) }}\n\n    {%- endif -%}\n\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.get_replace_sql", "macro.dbt_postgres.postgres__update_indexes_on_materialized_view"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1756850322.960564, "supported_languages": null}, "macro.dbt_postgres.postgres__update_indexes_on_materialized_view": {"name": "postgres__update_indexes_on_materialized_view", "resource_type": "macro", "package_name": "dbt_postgres", "path": "macros/relations/materialized_view/alter.sql", "original_file_path": "macros/relations/materialized_view/alter.sql", "unique_id": "macro.dbt_postgres.postgres__update_indexes_on_materialized_view", "macro_sql": "\n\n\n{%- macro postgres__update_indexes_on_materialized_view(relation, index_changes) -%}\n    {{- log(\"Applying UPDATE INDEXES to: \" ~ relation) -}}\n\n    {%- for _index_change in index_changes -%}\n        {%- set _index = _index_change.context -%}\n\n        {%- if _index_change.action == \"drop\" -%}\n\n            {{ postgres__get_drop_index_sql(relation, _index.name) }}\n\n        {%- elif _index_change.action == \"create\" -%}\n\n            {{ postgres__get_create_index_sql(relation, _index.as_node_config) }}\n\n        {%- endif -%}\n\t{{ ';' if not loop.last else \"\" }}\n\n    {%- endfor -%}\n\n{%- endmacro -%}\n\n\n", "depends_on": {"macros": ["macro.dbt_postgres.postgres__get_drop_index_sql", "macro.dbt_postgres.postgres__get_create_index_sql"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1756850322.9615724, "supported_languages": null}, "macro.dbt_postgres.postgres__get_materialized_view_configuration_changes": {"name": "postgres__get_materialized_view_configuration_changes", "resource_type": "macro", "package_name": "dbt_postgres", "path": "macros/relations/materialized_view/alter.sql", "original_file_path": "macros/relations/materialized_view/alter.sql", "unique_id": "macro.dbt_postgres.postgres__get_materialized_view_configuration_changes", "macro_sql": "{% macro postgres__get_materialized_view_configuration_changes(existing_relation, new_config) %}\n    {% set _existing_materialized_view = postgres__describe_materialized_view(existing_relation) %}\n    {% set _configuration_changes = existing_relation.get_materialized_view_config_change_collection(_existing_materialized_view, new_config.model) %}\n    {% do return(_configuration_changes) %}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt_postgres.postgres__describe_materialized_view"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1756850322.9621532, "supported_languages": null}, "macro.dbt_postgres.postgres__drop_materialized_view": {"name": "postgres__drop_materialized_view", "resource_type": "macro", "package_name": "dbt_postgres", "path": "macros/relations/materialized_view/drop.sql", "original_file_path": "macros/relations/materialized_view/drop.sql", "unique_id": "macro.dbt_postgres.postgres__drop_materialized_view", "macro_sql": "{% macro postgres__drop_materialized_view(relation) -%}\n    drop materialized view if exists {{ relation }} cascade\n{%- endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1756850322.9624357, "supported_languages": null}, "macro.dbt_postgres.postgres__get_rename_table_sql": {"name": "postgres__get_rename_table_sql", "resource_type": "macro", "package_name": "dbt_postgres", "path": "macros/relations/table/rename.sql", "original_file_path": "macros/relations/table/rename.sql", "unique_id": "macro.dbt_postgres.postgres__get_rename_table_sql", "macro_sql": "{% macro postgres__get_rename_table_sql(relation, new_name) %}\n    alter table {{ relation }} rename to {{ new_name }}\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1756850322.9627852, "supported_languages": null}, "macro.dbt_postgres.postgres__drop_table": {"name": "postgres__drop_table", "resource_type": "macro", "package_name": "dbt_postgres", "path": "macros/relations/table/drop.sql", "original_file_path": "macros/relations/table/drop.sql", "unique_id": "macro.dbt_postgres.postgres__drop_table", "macro_sql": "{% macro postgres__drop_table(relation) -%}\n    drop table if exists {{ relation }} cascade\n{%- endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1756850322.9630687, "supported_languages": null}, "macro.dbt_postgres.postgres__get_replace_table_sql": {"name": "postgres__get_replace_table_sql", "resource_type": "macro", "package_name": "dbt_postgres", "path": "macros/relations/table/replace.sql", "original_file_path": "macros/relations/table/replace.sql", "unique_id": "macro.dbt_postgres.postgres__get_replace_table_sql", "macro_sql": "{% macro postgres__get_replace_table_sql(relation, sql) -%}\n\n    {%- set sql_header = config.get('sql_header', none) -%}\n    {{ sql_header if sql_header is not none }}\n\n    create or replace table {{ relation }}\n        {% set contract_config = config.get('contract') %}\n        {% if contract_config.enforced %}\n            {{ get_assert_columns_equivalent(sql) }}\n            {{ get_table_columns_and_constraints() }}\n            {%- set sql = get_select_subquery(sql) %}\n        {% endif %}\n    as (\n        {{ sql }}\n    );\n\n{%- endmacro %}", "depends_on": {"macros": ["macro.dbt.get_assert_columns_equivalent", "macro.dbt.get_table_columns_and_constraints", "macro.dbt.get_select_subquery"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1756850322.9643655, "supported_languages": null}, "macro.dbt.alter_column_comment": {"name": "alter_column_comment", "resource_type": "macro", "package_name": "dbt", "path": "macros/adapters/persist_docs.sql", "original_file_path": "macros/adapters/persist_docs.sql", "unique_id": "macro.dbt.alter_column_comment", "macro_sql": "{% macro alter_column_comment(relation, column_dict) -%}\n  {{ return(adapter.dispatch('alter_column_comment', 'dbt')(relation, column_dict)) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt_postgres.postgres__alter_column_comment"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1756850322.965167, "supported_languages": null}, "macro.dbt.default__alter_column_comment": {"name": "default__alter_column_comment", "resource_type": "macro", "package_name": "dbt", "path": "macros/adapters/persist_docs.sql", "original_file_path": "macros/adapters/persist_docs.sql", "unique_id": "macro.dbt.default__alter_column_comment", "macro_sql": "{% macro default__alter_column_comment(relation, column_dict) -%}\n  {{ exceptions.raise_not_implemented(\n    'alter_column_comment macro not implemented for adapter '+adapter.type()) }}\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1756850322.965496, "supported_languages": null}, "macro.dbt.alter_relation_comment": {"name": "alter_relation_comment", "resource_type": "macro", "package_name": "dbt", "path": "macros/adapters/persist_docs.sql", "original_file_path": "macros/adapters/persist_docs.sql", "unique_id": "macro.dbt.alter_relation_comment", "macro_sql": "{% macro alter_relation_comment(relation, relation_comment) -%}\n  {{ return(adapter.dispatch('alter_relation_comment', 'dbt')(relation, relation_comment)) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt_postgres.postgres__alter_relation_comment"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1756850322.965913, "supported_languages": null}, "macro.dbt.default__alter_relation_comment": {"name": "default__alter_relation_comment", "resource_type": "macro", "package_name": "dbt", "path": "macros/adapters/persist_docs.sql", "original_file_path": "macros/adapters/persist_docs.sql", "unique_id": "macro.dbt.default__alter_relation_comment", "macro_sql": "{% macro default__alter_relation_comment(relation, relation_comment) -%}\n  {{ exceptions.raise_not_implemented(\n    'alter_relation_comment macro not implemented for adapter '+adapter.type()) }}\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1756850322.9662383, "supported_languages": null}, "macro.dbt.persist_docs": {"name": "persist_docs", "resource_type": "macro", "package_name": "dbt", "path": "macros/adapters/persist_docs.sql", "original_file_path": "macros/adapters/persist_docs.sql", "unique_id": "macro.dbt.persist_docs", "macro_sql": "{% macro persist_docs(relation, model, for_relation=true, for_columns=true) -%}\n  {{ return(adapter.dispatch('persist_docs', 'dbt')(relation, model, for_relation, for_columns)) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.default__persist_docs"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1756850322.9667373, "supported_languages": null}, "macro.dbt.default__persist_docs": {"name": "default__persist_docs", "resource_type": "macro", "package_name": "dbt", "path": "macros/adapters/persist_docs.sql", "original_file_path": "macros/adapters/persist_docs.sql", "unique_id": "macro.dbt.default__persist_docs", "macro_sql": "{% macro default__persist_docs(relation, model, for_relation, for_columns) -%}\n  {% if for_relation and config.persist_relation_docs() and model.description %}\n    {% do run_query(alter_relation_comment(relation, model.description)) %}\n  {% endif %}\n\n  {% if for_columns and config.persist_column_docs() and model.columns %}\n    {% do run_query(alter_column_comment(relation, model.columns)) %}\n  {% endif %}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.run_query", "macro.dbt.alter_relation_comment", "macro.dbt.alter_column_comment"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1756850322.967624, "supported_languages": null}, "macro.dbt.make_intermediate_relation": {"name": "make_intermediate_relation", "resource_type": "macro", "package_name": "dbt", "path": "macros/adapters/relation.sql", "original_file_path": "macros/adapters/relation.sql", "unique_id": "macro.dbt.make_intermediate_relation", "macro_sql": "{% macro make_intermediate_relation(base_relation, suffix='__dbt_tmp') %}\n  {{ return(adapter.dispatch('make_intermediate_relation', 'dbt')(base_relation, suffix)) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt_postgres.postgres__make_intermediate_relation"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1756850322.9689305, "supported_languages": null}, "macro.dbt.default__make_intermediate_relation": {"name": "default__make_intermediate_relation", "resource_type": "macro", "package_name": "dbt", "path": "macros/adapters/relation.sql", "original_file_path": "macros/adapters/relation.sql", "unique_id": "macro.dbt.default__make_intermediate_relation", "macro_sql": "{% macro default__make_intermediate_relation(base_relation, suffix) %}\n    {{ return(default__make_temp_relation(base_relation, suffix)) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.default__make_temp_relation"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1756850322.969251, "supported_languages": null}, "macro.dbt.make_temp_relation": {"name": "make_temp_relation", "resource_type": "macro", "package_name": "dbt", "path": "macros/adapters/relation.sql", "original_file_path": "macros/adapters/relation.sql", "unique_id": "macro.dbt.make_temp_relation", "macro_sql": "{% macro make_temp_relation(base_relation, suffix='__dbt_tmp') %}\n  {#-- This ensures microbatch batches get unique temp relations to avoid clobbering --#}\n  {% if suffix == '__dbt_tmp' and model.batch %}\n    {% set suffix = suffix ~ '_' ~ model.batch.id %}\n  {% endif %}\n\n  {{ return(adapter.dispatch('make_temp_relation', 'dbt')(base_relation, suffix)) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt_postgres.postgres__make_temp_relation"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1756850322.969988, "supported_languages": null}, "macro.dbt.default__make_temp_relation": {"name": "default__make_temp_relation", "resource_type": "macro", "package_name": "dbt", "path": "macros/adapters/relation.sql", "original_file_path": "macros/adapters/relation.sql", "unique_id": "macro.dbt.default__make_temp_relation", "macro_sql": "{% macro default__make_temp_relation(base_relation, suffix) %}\n    {%- set temp_identifier = base_relation.identifier ~ suffix -%}\n    {%- set temp_relation = base_relation.incorporate(\n                                path={\"identifier\": temp_identifier}) -%}\n\n    {{ return(temp_relation) }}\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1756850322.9705346, "supported_languages": null}, "macro.dbt.make_backup_relation": {"name": "make_backup_relation", "resource_type": "macro", "package_name": "dbt", "path": "macros/adapters/relation.sql", "original_file_path": "macros/adapters/relation.sql", "unique_id": "macro.dbt.make_backup_relation", "macro_sql": "{% macro make_backup_relation(base_relation, backup_relation_type, suffix='__dbt_backup') %}\n    {{ return(adapter.dispatch('make_backup_relation', 'dbt')(base_relation, backup_relation_type, suffix)) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt_postgres.postgres__make_backup_relation"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1756850322.9710095, "supported_languages": null}, "macro.dbt.default__make_backup_relation": {"name": "default__make_backup_relation", "resource_type": "macro", "package_name": "dbt", "path": "macros/adapters/relation.sql", "original_file_path": "macros/adapters/relation.sql", "unique_id": "macro.dbt.default__make_backup_relation", "macro_sql": "{% macro default__make_backup_relation(base_relation, backup_relation_type, suffix) %}\n    {%- set backup_identifier = base_relation.identifier ~ suffix -%}\n    {%- set backup_relation = base_relation.incorporate(\n                                  path={\"identifier\": backup_identifier},\n                                  type=backup_relation_type\n    ) -%}\n    {{ return(backup_relation) }}\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1756850322.9716055, "supported_languages": null}, "macro.dbt.truncate_relation": {"name": "truncate_relation", "resource_type": "macro", "package_name": "dbt", "path": "macros/adapters/relation.sql", "original_file_path": "macros/adapters/relation.sql", "unique_id": "macro.dbt.truncate_relation", "macro_sql": "{% macro truncate_relation(relation) -%}\n  {{ return(adapter.dispatch('truncate_relation', 'dbt')(relation)) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.default__truncate_relation"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1756850322.9719768, "supported_languages": null}, "macro.dbt.default__truncate_relation": {"name": "default__truncate_relation", "resource_type": "macro", "package_name": "dbt", "path": "macros/adapters/relation.sql", "original_file_path": "macros/adapters/relation.sql", "unique_id": "macro.dbt.default__truncate_relation", "macro_sql": "{% macro default__truncate_relation(relation) -%}\n  {% call statement('truncate_relation') -%}\n    truncate table {{ relation.render() }}\n  {%- endcall %}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.statement"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1756850322.9723296, "supported_languages": null}, "macro.dbt.get_or_create_relation": {"name": "get_or_create_relation", "resource_type": "macro", "package_name": "dbt", "path": "macros/adapters/relation.sql", "original_file_path": "macros/adapters/relation.sql", "unique_id": "macro.dbt.get_or_create_relation", "macro_sql": "{% macro get_or_create_relation(database, schema, identifier, type) -%}\n  {{ return(adapter.dispatch('get_or_create_relation', 'dbt')(database, schema, identifier, type)) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.default__get_or_create_relation"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1756850322.972819, "supported_languages": null}, "macro.dbt.default__get_or_create_relation": {"name": "default__get_or_create_relation", "resource_type": "macro", "package_name": "dbt", "path": "macros/adapters/relation.sql", "original_file_path": "macros/adapters/relation.sql", "unique_id": "macro.dbt.default__get_or_create_relation", "macro_sql": "{% macro default__get_or_create_relation(database, schema, identifier, type) %}\n  {%- set target_relation = adapter.get_relation(database=database, schema=schema, identifier=identifier) %}\n\n  {% if target_relation %}\n    {% do return([true, target_relation]) %}\n  {% endif %}\n\n  {%- set new_relation = api.Relation.create(\n      database=database,\n      schema=schema,\n      identifier=identifier,\n      type=type\n  ) -%}\n  {% do return([false, new_relation]) %}\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1756850322.9739895, "supported_languages": null}, "macro.dbt.load_cached_relation": {"name": "load_cached_relation", "resource_type": "macro", "package_name": "dbt", "path": "macros/adapters/relation.sql", "original_file_path": "macros/adapters/relation.sql", "unique_id": "macro.dbt.load_cached_relation", "macro_sql": "{% macro load_cached_relation(relation) %}\n  {% do return(adapter.get_relation(\n    database=relation.database,\n    schema=relation.schema,\n    identifier=relation.identifier\n  )) -%}\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1756850322.9744117, "supported_languages": null}, "macro.dbt.load_relation": {"name": "load_relation", "resource_type": "macro", "package_name": "dbt", "path": "macros/adapters/relation.sql", "original_file_path": "macros/adapters/relation.sql", "unique_id": "macro.dbt.load_relation", "macro_sql": "{% macro load_relation(relation) %}\n    {{ return(load_cached_relation(relation)) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.load_cached_relation"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1756850322.9746828, "supported_languages": null}, "macro.dbt.copy_grants": {"name": "copy_grants", "resource_type": "macro", "package_name": "dbt", "path": "macros/adapters/apply_grants.sql", "original_file_path": "macros/adapters/apply_grants.sql", "unique_id": "macro.dbt.copy_grants", "macro_sql": "{% macro copy_grants() %}\n    {{ return(adapter.dispatch('copy_grants', 'dbt')()) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt_postgres.postgres__copy_grants"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1756850322.976654, "supported_languages": null}, "macro.dbt.default__copy_grants": {"name": "default__copy_grants", "resource_type": "macro", "package_name": "dbt", "path": "macros/adapters/apply_grants.sql", "original_file_path": "macros/adapters/apply_grants.sql", "unique_id": "macro.dbt.default__copy_grants", "macro_sql": "{% macro default__copy_grants() %}\n    {{ return(True) }}\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1756850322.976906, "supported_languages": null}, "macro.dbt.support_multiple_grantees_per_dcl_statement": {"name": "support_multiple_grantees_per_dcl_statement", "resource_type": "macro", "package_name": "dbt", "path": "macros/adapters/apply_grants.sql", "original_file_path": "macros/adapters/apply_grants.sql", "unique_id": "macro.dbt.support_multiple_grantees_per_dcl_statement", "macro_sql": "{% macro support_multiple_grantees_per_dcl_statement() %}\n    {{ return(adapter.dispatch('support_multiple_grantees_per_dcl_statement', 'dbt')()) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.default__support_multiple_grantees_per_dcl_statement"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1756850322.977227, "supported_languages": null}, "macro.dbt.default__support_multiple_grantees_per_dcl_statement": {"name": "default__support_multiple_grantees_per_dcl_statement", "resource_type": "macro", "package_name": "dbt", "path": "macros/adapters/apply_grants.sql", "original_file_path": "macros/adapters/apply_grants.sql", "unique_id": "macro.dbt.default__support_multiple_grantees_per_dcl_statement", "macro_sql": "\n\n{%- macro default__support_multiple_grantees_per_dcl_statement() -%}\n    {{ return(True) }}\n{%- endmacro -%}\n\n\n", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1756850322.9774487, "supported_languages": null}, "macro.dbt.should_revoke": {"name": "should_revoke", "resource_type": "macro", "package_name": "dbt", "path": "macros/adapters/apply_grants.sql", "original_file_path": "macros/adapters/apply_grants.sql", "unique_id": "macro.dbt.should_revoke", "macro_sql": "{% macro should_revoke(existing_relation, full_refresh_mode=True) %}\n\n    {% if not existing_relation %}\n        {#-- The table doesn't already exist, so no grants to copy over --#}\n        {{ return(False) }}\n    {% elif full_refresh_mode %}\n        {#-- The object is being REPLACED -- whether grants are copied over depends on the value of user config --#}\n        {{ return(copy_grants()) }}\n    {% else %}\n        {#-- The table is being merged/upserted/inserted -- grants will be carried over --#}\n        {{ return(True) }}\n    {% endif %}\n\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.copy_grants"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1756850322.9781146, "supported_languages": null}, "macro.dbt.get_show_grant_sql": {"name": "get_show_grant_sql", "resource_type": "macro", "package_name": "dbt", "path": "macros/adapters/apply_grants.sql", "original_file_path": "macros/adapters/apply_grants.sql", "unique_id": "macro.dbt.get_show_grant_sql", "macro_sql": "{% macro get_show_grant_sql(relation) %}\n    {{ return(adapter.dispatch(\"get_show_grant_sql\", \"dbt\")(relation)) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt_postgres.postgres__get_show_grant_sql"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1756850322.9784737, "supported_languages": null}, "macro.dbt.default__get_show_grant_sql": {"name": "default__get_show_grant_sql", "resource_type": "macro", "package_name": "dbt", "path": "macros/adapters/apply_grants.sql", "original_file_path": "macros/adapters/apply_grants.sql", "unique_id": "macro.dbt.default__get_show_grant_sql", "macro_sql": "{% macro default__get_show_grant_sql(relation) %}\n    show grants on {{ relation.render() }}\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1756850322.9787076, "supported_languages": null}, "macro.dbt.get_grant_sql": {"name": "get_grant_sql", "resource_type": "macro", "package_name": "dbt", "path": "macros/adapters/apply_grants.sql", "original_file_path": "macros/adapters/apply_grants.sql", "unique_id": "macro.dbt.get_grant_sql", "macro_sql": "{% macro get_grant_sql(relation, privilege, grantees) %}\n    {{ return(adapter.dispatch('get_grant_sql', 'dbt')(relation, privilege, grantees)) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.default__get_grant_sql"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1756850322.9791481, "supported_languages": null}, "macro.dbt.default__get_grant_sql": {"name": "default__get_grant_sql", "resource_type": "macro", "package_name": "dbt", "path": "macros/adapters/apply_grants.sql", "original_file_path": "macros/adapters/apply_grants.sql", "unique_id": "macro.dbt.default__get_grant_sql", "macro_sql": "\n\n{%- macro default__get_grant_sql(relation, privilege, grantees) -%}\n    grant {{ privilege }} on {{ relation.render() }} to {{ grantees | join(', ') }}\n{%- endmacro -%}\n\n\n", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1756850322.9795387, "supported_languages": null}, "macro.dbt.get_revoke_sql": {"name": "get_revoke_sql", "resource_type": "macro", "package_name": "dbt", "path": "macros/adapters/apply_grants.sql", "original_file_path": "macros/adapters/apply_grants.sql", "unique_id": "macro.dbt.get_revoke_sql", "macro_sql": "{% macro get_revoke_sql(relation, privilege, grantees) %}\n    {{ return(adapter.dispatch('get_revoke_sql', 'dbt')(relation, privilege, grantees)) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.default__get_revoke_sql"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1756850322.979993, "supported_languages": null}, "macro.dbt.default__get_revoke_sql": {"name": "default__get_revoke_sql", "resource_type": "macro", "package_name": "dbt", "path": "macros/adapters/apply_grants.sql", "original_file_path": "macros/adapters/apply_grants.sql", "unique_id": "macro.dbt.default__get_revoke_sql", "macro_sql": "\n\n{%- macro default__get_revoke_sql(relation, privilege, grantees) -%}\n    revoke {{ privilege }} on {{ relation.render() }} from {{ grantees | join(', ') }}\n{%- endmacro -%}\n\n\n", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1756850322.9803917, "supported_languages": null}, "macro.dbt.get_dcl_statement_list": {"name": "get_dcl_statement_list", "resource_type": "macro", "package_name": "dbt", "path": "macros/adapters/apply_grants.sql", "original_file_path": "macros/adapters/apply_grants.sql", "unique_id": "macro.dbt.get_dcl_statement_list", "macro_sql": "{% macro get_dcl_statement_list(relation, grant_config, get_dcl_macro) %}\n    {{ return(adapter.dispatch('get_dcl_statement_list', 'dbt')(relation, grant_config, get_dcl_macro)) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.default__get_dcl_statement_list"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1756850322.9808402, "supported_languages": null}, "macro.dbt.default__get_dcl_statement_list": {"name": "default__get_dcl_statement_list", "resource_type": "macro", "package_name": "dbt", "path": "macros/adapters/apply_grants.sql", "original_file_path": "macros/adapters/apply_grants.sql", "unique_id": "macro.dbt.default__get_dcl_statement_list", "macro_sql": "\n\n{%- macro default__get_dcl_statement_list(relation, grant_config, get_dcl_macro) -%}\n    {#\n      -- Unpack grant_config into specific privileges and the set of users who need them granted/revoked.\n      -- Depending on whether this database supports multiple grantees per statement, pass in the list of\n      -- all grantees per privilege, or (if not) template one statement per privilege-grantee pair.\n      -- `get_dcl_macro` will be either `get_grant_sql` or `get_revoke_sql`\n    #}\n    {%- set dcl_statements = [] -%}\n    {%- for privilege, grantees in grant_config.items() %}\n        {%- if support_multiple_grantees_per_dcl_statement() and grantees -%}\n          {%- set dcl = get_dcl_macro(relation, privilege, grantees) -%}\n          {%- do dcl_statements.append(dcl) -%}\n        {%- else -%}\n          {%- for grantee in grantees -%}\n              {% set dcl = get_dcl_macro(relation, privilege, [grantee]) %}\n              {%- do dcl_statements.append(dcl) -%}\n          {% endfor -%}\n        {%- endif -%}\n    {%- endfor -%}\n    {{ return(dcl_statements) }}\n{%- endmacro %}", "depends_on": {"macros": ["macro.dbt.support_multiple_grantees_per_dcl_statement"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1756850322.9821277, "supported_languages": null}, "macro.dbt.call_dcl_statements": {"name": "call_dcl_statements", "resource_type": "macro", "package_name": "dbt", "path": "macros/adapters/apply_grants.sql", "original_file_path": "macros/adapters/apply_grants.sql", "unique_id": "macro.dbt.call_dcl_statements", "macro_sql": "{% macro call_dcl_statements(dcl_statement_list) %}\n    {{ return(adapter.dispatch(\"call_dcl_statements\", \"dbt\")(dcl_statement_list)) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.default__call_dcl_statements"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1756850322.982489, "supported_languages": null}, "macro.dbt.default__call_dcl_statements": {"name": "default__call_dcl_statements", "resource_type": "macro", "package_name": "dbt", "path": "macros/adapters/apply_grants.sql", "original_file_path": "macros/adapters/apply_grants.sql", "unique_id": "macro.dbt.default__call_dcl_statements", "macro_sql": "{% macro default__call_dcl_statements(dcl_statement_list) %}\n    {#\n      -- By default, supply all grant + revoke statements in a single semicolon-separated block,\n      -- so that they're all processed together.\n\n      -- Some databases do not support this. Those adapters will need to override this macro\n      -- to run each statement individually.\n    #}\n    {% call statement('grants') %}\n        {% for dcl_statement in dcl_statement_list %}\n            {{ dcl_statement }};\n        {% endfor %}\n    {% endcall %}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.statement"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1756850322.9830263, "supported_languages": null}, "macro.dbt.apply_grants": {"name": "apply_grants", "resource_type": "macro", "package_name": "dbt", "path": "macros/adapters/apply_grants.sql", "original_file_path": "macros/adapters/apply_grants.sql", "unique_id": "macro.dbt.apply_grants", "macro_sql": "{% macro apply_grants(relation, grant_config, should_revoke) %}\n    {{ return(adapter.dispatch(\"apply_grants\", \"dbt\")(relation, grant_config, should_revoke)) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.default__apply_grants"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1756850322.9834898, "supported_languages": null}, "macro.dbt.default__apply_grants": {"name": "default__apply_grants", "resource_type": "macro", "package_name": "dbt", "path": "macros/adapters/apply_grants.sql", "original_file_path": "macros/adapters/apply_grants.sql", "unique_id": "macro.dbt.default__apply_grants", "macro_sql": "{% macro default__apply_grants(relation, grant_config, should_revoke=True) %}\n    {#-- If grant_config is {} or None, this is a no-op --#}\n    {% if grant_config %}\n        {% if should_revoke %}\n            {#-- We think previous grants may have carried over --#}\n            {#-- Show current grants and calculate diffs --#}\n            {% set current_grants_table = run_query(get_show_grant_sql(relation)) %}\n            {% set current_grants_dict = adapter.standardize_grants_dict(current_grants_table) %}\n            {% set needs_granting = diff_of_two_dicts(grant_config, current_grants_dict) %}\n            {% set needs_revoking = diff_of_two_dicts(current_grants_dict, grant_config) %}\n            {% if not (needs_granting or needs_revoking) %}\n                {{ log('On ' ~ relation.render() ~': All grants are in place, no revocation or granting needed.')}}\n            {% endif %}\n        {% else %}\n            {#-- We don't think there's any chance of previous grants having carried over. --#}\n            {#-- Jump straight to granting what the user has configured. --#}\n            {% set needs_revoking = {} %}\n            {% set needs_granting = grant_config %}\n        {% endif %}\n        {% if needs_granting or needs_revoking %}\n            {% set revoke_statement_list = get_dcl_statement_list(relation, needs_revoking, get_revoke_sql) %}\n            {% set grant_statement_list = get_dcl_statement_list(relation, needs_granting, get_grant_sql) %}\n            {% set dcl_statement_list = revoke_statement_list + grant_statement_list %}\n            {% if dcl_statement_list %}\n                {{ call_dcl_statements(dcl_statement_list) }}\n            {% endif %}\n        {% endif %}\n    {% endif %}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.run_query", "macro.dbt.get_show_grant_sql", "macro.dbt.get_dcl_statement_list", "macro.dbt.call_dcl_statements"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1756850322.985856, "supported_languages": null}, "macro.dbt.validate_sql": {"name": "validate_sql", "resource_type": "macro", "package_name": "dbt", "path": "macros/adapters/validate_sql.sql", "original_file_path": "macros/adapters/validate_sql.sql", "unique_id": "macro.dbt.validate_sql", "macro_sql": "{% macro validate_sql(sql) -%}\n  {{ return(adapter.dispatch('validate_sql', 'dbt')(sql)) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.default__validate_sql"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1756850322.9864097, "supported_languages": null}, "macro.dbt.default__validate_sql": {"name": "default__validate_sql", "resource_type": "macro", "package_name": "dbt", "path": "macros/adapters/validate_sql.sql", "original_file_path": "macros/adapters/validate_sql.sql", "unique_id": "macro.dbt.default__validate_sql", "macro_sql": "{% macro default__validate_sql(sql) -%}\n  {% call statement('validate_sql') -%}\n    explain {{ sql }}\n  {% endcall %}\n  {{ return(load_result('validate_sql')) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.statement"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1756850322.9868631, "supported_languages": null}, "macro.dbt.get_create_index_sql": {"name": "get_create_index_sql", "resource_type": "macro", "package_name": "dbt", "path": "macros/adapters/indexes.sql", "original_file_path": "macros/adapters/indexes.sql", "unique_id": "macro.dbt.get_create_index_sql", "macro_sql": "{% macro get_create_index_sql(relation, index_dict) -%}\n  {{ return(adapter.dispatch('get_create_index_sql', 'dbt')(relation, index_dict)) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt_postgres.postgres__get_create_index_sql"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1756850322.987739, "supported_languages": null}, "macro.dbt.default__get_create_index_sql": {"name": "default__get_create_index_sql", "resource_type": "macro", "package_name": "dbt", "path": "macros/adapters/indexes.sql", "original_file_path": "macros/adapters/indexes.sql", "unique_id": "macro.dbt.default__get_create_index_sql", "macro_sql": "{% macro default__get_create_index_sql(relation, index_dict) -%}\n  {% do return(None) %}\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1756850322.9880419, "supported_languages": null}, "macro.dbt.create_indexes": {"name": "create_indexes", "resource_type": "macro", "package_name": "dbt", "path": "macros/adapters/indexes.sql", "original_file_path": "macros/adapters/indexes.sql", "unique_id": "macro.dbt.create_indexes", "macro_sql": "{% macro create_indexes(relation) -%}\n  {{ adapter.dispatch('create_indexes', 'dbt')(relation) }}\n{%- endmacro %}", "depends_on": {"macros": ["macro.dbt.default__create_indexes"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1756850322.9883807, "supported_languages": null}, "macro.dbt.default__create_indexes": {"name": "default__create_indexes", "resource_type": "macro", "package_name": "dbt", "path": "macros/adapters/indexes.sql", "original_file_path": "macros/adapters/indexes.sql", "unique_id": "macro.dbt.default__create_indexes", "macro_sql": "{% macro default__create_indexes(relation) -%}\n  {%- set _indexes = config.get('indexes', default=[]) -%}\n\n  {% for _index_dict in _indexes %}\n    {% set create_index_sql = get_create_index_sql(relation, _index_dict) %}\n    {% if create_index_sql %}\n      {% do run_query(create_index_sql) %}\n    {% endif %}\n  {% endfor %}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.get_create_index_sql", "macro.dbt.run_query"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1756850322.9891613, "supported_languages": null}, "macro.dbt.get_drop_index_sql": {"name": "get_drop_index_sql", "resource_type": "macro", "package_name": "dbt", "path": "macros/adapters/indexes.sql", "original_file_path": "macros/adapters/indexes.sql", "unique_id": "macro.dbt.get_drop_index_sql", "macro_sql": "{% macro get_drop_index_sql(relation, index_name) -%}\n    {{ adapter.dispatch('get_drop_index_sql', 'dbt')(relation, index_name) }}\n{%- endmacro %}", "depends_on": {"macros": ["macro.dbt_postgres.postgres__get_drop_index_sql"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1756850322.9895194, "supported_languages": null}, "macro.dbt.default__get_drop_index_sql": {"name": "default__get_drop_index_sql", "resource_type": "macro", "package_name": "dbt", "path": "macros/adapters/indexes.sql", "original_file_path": "macros/adapters/indexes.sql", "unique_id": "macro.dbt.default__get_drop_index_sql", "macro_sql": "{% macro default__get_drop_index_sql(relation, index_name) -%}\n    {{ exceptions.raise_compiler_error(\"`get_drop_index_sql has not been implemented for this adapter.\") }}\n{%- endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1756850322.989802, "supported_languages": null}, "macro.dbt.get_show_indexes_sql": {"name": "get_show_indexes_sql", "resource_type": "macro", "package_name": "dbt", "path": "macros/adapters/indexes.sql", "original_file_path": "macros/adapters/indexes.sql", "unique_id": "macro.dbt.get_show_indexes_sql", "macro_sql": "{% macro get_show_indexes_sql(relation) -%}\n    {{ adapter.dispatch('get_show_indexes_sql', 'dbt')(relation) }}\n{%- endmacro %}", "depends_on": {"macros": ["macro.dbt_postgres.postgres__get_show_indexes_sql"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1756850322.9901137, "supported_languages": null}, "macro.dbt.default__get_show_indexes_sql": {"name": "default__get_show_indexes_sql", "resource_type": "macro", "package_name": "dbt", "path": "macros/adapters/indexes.sql", "original_file_path": "macros/adapters/indexes.sql", "unique_id": "macro.dbt.default__get_show_indexes_sql", "macro_sql": "{% macro default__get_show_indexes_sql(relation) -%}\n    {{ exceptions.raise_compiler_error(\"`get_show_indexes_sql has not been implemented for this adapter.\") }}\n{%- endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1756850322.9903598, "supported_languages": null}, "macro.dbt.get_catalog_relations": {"name": "get_catalog_relations", "resource_type": "macro", "package_name": "dbt", "path": "macros/adapters/metadata.sql", "original_file_path": "macros/adapters/metadata.sql", "unique_id": "macro.dbt.get_catalog_relations", "macro_sql": "{% macro get_catalog_relations(information_schema, relations) -%}\n  {{ return(adapter.dispatch('get_catalog_relations', 'dbt')(information_schema, relations)) }}\n{%- endmacro %}", "depends_on": {"macros": ["macro.dbt_postgres.postgres__get_catalog_relations"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1756850322.9918976, "supported_languages": null}, "macro.dbt.default__get_catalog_relations": {"name": "default__get_catalog_relations", "resource_type": "macro", "package_name": "dbt", "path": "macros/adapters/metadata.sql", "original_file_path": "macros/adapters/metadata.sql", "unique_id": "macro.dbt.default__get_catalog_relations", "macro_sql": "{% macro default__get_catalog_relations(information_schema, relations) -%}\n  {% set typename = adapter.type() %}\n  {% set msg -%}\n    get_catalog_relations not implemented for {{ typename }}\n  {%- endset %}\n\n  {{ exceptions.raise_compiler_error(msg) }}\n{%- endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1756850322.9923952, "supported_languages": null}, "macro.dbt.get_catalog": {"name": "get_catalog", "resource_type": "macro", "package_name": "dbt", "path": "macros/adapters/metadata.sql", "original_file_path": "macros/adapters/metadata.sql", "unique_id": "macro.dbt.get_catalog", "macro_sql": "{% macro get_catalog(information_schema, schemas) -%}\n  {{ return(adapter.dispatch('get_catalog', 'dbt')(information_schema, schemas)) }}\n{%- endmacro %}", "depends_on": {"macros": ["macro.dbt_postgres.postgres__get_catalog"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1756850322.9927986, "supported_languages": null}, "macro.dbt.default__get_catalog": {"name": "default__get_catalog", "resource_type": "macro", "package_name": "dbt", "path": "macros/adapters/metadata.sql", "original_file_path": "macros/adapters/metadata.sql", "unique_id": "macro.dbt.default__get_catalog", "macro_sql": "{% macro default__get_catalog(information_schema, schemas) -%}\n\n  {% set typename = adapter.type() %}\n  {% set msg -%}\n    get_catalog not implemented for {{ typename }}\n  {%- endset %}\n\n  {{ exceptions.raise_compiler_error(msg) }}\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1756850322.9933012, "supported_languages": null}, "macro.dbt.information_schema_name": {"name": "information_schema_name", "resource_type": "macro", "package_name": "dbt", "path": "macros/adapters/metadata.sql", "original_file_path": "macros/adapters/metadata.sql", "unique_id": "macro.dbt.information_schema_name", "macro_sql": "{% macro information_schema_name(database) %}\n  {{ return(adapter.dispatch('information_schema_name', 'dbt')(database)) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt_postgres.postgres__information_schema_name"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1756850322.9936857, "supported_languages": null}, "macro.dbt.default__information_schema_name": {"name": "default__information_schema_name", "resource_type": "macro", "package_name": "dbt", "path": "macros/adapters/metadata.sql", "original_file_path": "macros/adapters/metadata.sql", "unique_id": "macro.dbt.default__information_schema_name", "macro_sql": "{% macro default__information_schema_name(database) -%}\n  {%- if database -%}\n    {{ database }}.INFORMATION_SCHEMA\n  {%- else -%}\n    INFORMATION_SCHEMA\n  {%- endif -%}\n{%- endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1756850322.9940205, "supported_languages": null}, "macro.dbt.list_schemas": {"name": "list_schemas", "resource_type": "macro", "package_name": "dbt", "path": "macros/adapters/metadata.sql", "original_file_path": "macros/adapters/metadata.sql", "unique_id": "macro.dbt.list_schemas", "macro_sql": "{% macro list_schemas(database) -%}\n  {{ return(adapter.dispatch('list_schemas', 'dbt')(database)) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt_postgres.postgres__list_schemas"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1756850322.9943745, "supported_languages": null}, "macro.dbt.default__list_schemas": {"name": "default__list_schemas", "resource_type": "macro", "package_name": "dbt", "path": "macros/adapters/metadata.sql", "original_file_path": "macros/adapters/metadata.sql", "unique_id": "macro.dbt.default__list_schemas", "macro_sql": "{% macro default__list_schemas(database) -%}\n  {% set sql %}\n    select distinct schema_name\n    from {{ information_schema_name(database) }}.SCHEMATA\n    where catalog_name ilike '{{ database }}'\n  {% endset %}\n  {{ return(run_query(sql)) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.information_schema_name", "macro.dbt.run_query"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1756850322.994967, "supported_languages": null}, "macro.dbt.check_schema_exists": {"name": "check_schema_exists", "resource_type": "macro", "package_name": "dbt", "path": "macros/adapters/metadata.sql", "original_file_path": "macros/adapters/metadata.sql", "unique_id": "macro.dbt.check_schema_exists", "macro_sql": "{% macro check_schema_exists(information_schema, schema) -%}\n  {{ return(adapter.dispatch('check_schema_exists', 'dbt')(information_schema, schema)) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt_postgres.postgres__check_schema_exists"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1756850322.9953551, "supported_languages": null}, "macro.dbt.default__check_schema_exists": {"name": "default__check_schema_exists", "resource_type": "macro", "package_name": "dbt", "path": "macros/adapters/metadata.sql", "original_file_path": "macros/adapters/metadata.sql", "unique_id": "macro.dbt.default__check_schema_exists", "macro_sql": "{% macro default__check_schema_exists(information_schema, schema) -%}\n  {% set sql -%}\n        select count(*)\n        from {{ information_schema.replace(information_schema_view='SCHEMATA') }}\n        where catalog_name='{{ information_schema.database }}'\n          and schema_name='{{ schema }}'\n  {%- endset %}\n  {{ return(run_query(sql)) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.replace", "macro.dbt.run_query"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1756850322.9959497, "supported_languages": null}, "macro.dbt.list_relations_without_caching": {"name": "list_relations_without_caching", "resource_type": "macro", "package_name": "dbt", "path": "macros/adapters/metadata.sql", "original_file_path": "macros/adapters/metadata.sql", "unique_id": "macro.dbt.list_relations_without_caching", "macro_sql": "{% macro list_relations_without_caching(schema_relation) %}\n  {{ return(adapter.dispatch('list_relations_without_caching', 'dbt')(schema_relation)) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt_postgres.postgres__list_relations_without_caching"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1756850322.9963043, "supported_languages": null}, "macro.dbt.default__list_relations_without_caching": {"name": "default__list_relations_without_caching", "resource_type": "macro", "package_name": "dbt", "path": "macros/adapters/metadata.sql", "original_file_path": "macros/adapters/metadata.sql", "unique_id": "macro.dbt.default__list_relations_without_caching", "macro_sql": "{% macro default__list_relations_without_caching(schema_relation) %}\n  {{ exceptions.raise_not_implemented(\n    'list_relations_without_caching macro not implemented for adapter '+adapter.type()) }}\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1756850322.9966116, "supported_languages": null}, "macro.dbt.get_catalog_for_single_relation": {"name": "get_catalog_for_single_relation", "resource_type": "macro", "package_name": "dbt", "path": "macros/adapters/metadata.sql", "original_file_path": "macros/adapters/metadata.sql", "unique_id": "macro.dbt.get_catalog_for_single_relation", "macro_sql": "{% macro get_catalog_for_single_relation(relation) %}\n  {{ return(adapter.dispatch('get_catalog_for_single_relation', 'dbt')(relation)) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.default__get_catalog_for_single_relation"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1756850322.9969797, "supported_languages": null}, "macro.dbt.default__get_catalog_for_single_relation": {"name": "default__get_catalog_for_single_relation", "resource_type": "macro", "package_name": "dbt", "path": "macros/adapters/metadata.sql", "original_file_path": "macros/adapters/metadata.sql", "unique_id": "macro.dbt.default__get_catalog_for_single_relation", "macro_sql": "{% macro default__get_catalog_for_single_relation(relation) %}\n  {{ exceptions.raise_not_implemented(\n    'get_catalog_for_single_relation macro not implemented for adapter '+adapter.type()) }}\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1756850322.9972866, "supported_languages": null}, "macro.dbt.get_relations": {"name": "get_relations", "resource_type": "macro", "package_name": "dbt", "path": "macros/adapters/metadata.sql", "original_file_path": "macros/adapters/metadata.sql", "unique_id": "macro.dbt.get_relations", "macro_sql": "{% macro get_relations() %}\n  {{ return(adapter.dispatch('get_relations', 'dbt')()) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt_postgres.postgres__get_relations"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1756850322.9975975, "supported_languages": null}, "macro.dbt.default__get_relations": {"name": "default__get_relations", "resource_type": "macro", "package_name": "dbt", "path": "macros/adapters/metadata.sql", "original_file_path": "macros/adapters/metadata.sql", "unique_id": "macro.dbt.default__get_relations", "macro_sql": "{% macro default__get_relations() %}\n  {{ exceptions.raise_not_implemented(\n    'get_relations macro not implemented for adapter '+adapter.type()) }}\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1756850322.9979033, "supported_languages": null}, "macro.dbt.get_relation_last_modified": {"name": "get_relation_last_modified", "resource_type": "macro", "package_name": "dbt", "path": "macros/adapters/metadata.sql", "original_file_path": "macros/adapters/metadata.sql", "unique_id": "macro.dbt.get_relation_last_modified", "macro_sql": "{% macro get_relation_last_modified(information_schema, relations) %}\n  {{ return(adapter.dispatch('get_relation_last_modified', 'dbt')(information_schema, relations)) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.default__get_relation_last_modified"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1756850322.9982896, "supported_languages": null}, "macro.dbt.default__get_relation_last_modified": {"name": "default__get_relation_last_modified", "resource_type": "macro", "package_name": "dbt", "path": "macros/adapters/metadata.sql", "original_file_path": "macros/adapters/metadata.sql", "unique_id": "macro.dbt.default__get_relation_last_modified", "macro_sql": "{% macro default__get_relation_last_modified(information_schema, relations) %}\n  {{ exceptions.raise_not_implemented(\n    'get_relation_last_modified macro not implemented for adapter ' + adapter.type()) }}\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1756850322.998618, "supported_languages": null}, "macro.dbt.create_schema": {"name": "create_schema", "resource_type": "macro", "package_name": "dbt", "path": "macros/adapters/schema.sql", "original_file_path": "macros/adapters/schema.sql", "unique_id": "macro.dbt.create_schema", "macro_sql": "{% macro create_schema(relation) -%}\n  {{ adapter.dispatch('create_schema', 'dbt')(relation) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt_postgres.postgres__create_schema"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1756850322.9992373, "supported_languages": null}, "macro.dbt.default__create_schema": {"name": "default__create_schema", "resource_type": "macro", "package_name": "dbt", "path": "macros/adapters/schema.sql", "original_file_path": "macros/adapters/schema.sql", "unique_id": "macro.dbt.default__create_schema", "macro_sql": "{% macro default__create_schema(relation) -%}\n  {%- call statement('create_schema') -%}\n    create schema if not exists {{ relation.without_identifier() }}\n  {% endcall %}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.statement"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1756850322.9995944, "supported_languages": null}, "macro.dbt.drop_schema": {"name": "drop_schema", "resource_type": "macro", "package_name": "dbt", "path": "macros/adapters/schema.sql", "original_file_path": "macros/adapters/schema.sql", "unique_id": "macro.dbt.drop_schema", "macro_sql": "{% macro drop_schema(relation) -%}\n  {{ adapter.dispatch('drop_schema', 'dbt')(relation) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt_postgres.postgres__drop_schema"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1756850322.999928, "supported_languages": null}, "macro.dbt.default__drop_schema": {"name": "default__drop_schema", "resource_type": "macro", "package_name": "dbt", "path": "macros/adapters/schema.sql", "original_file_path": "macros/adapters/schema.sql", "unique_id": "macro.dbt.default__drop_schema", "macro_sql": "{% macro default__drop_schema(relation) -%}\n  {%- call statement('drop_schema') -%}\n    drop schema if exists {{ relation.without_identifier() }} cascade\n  {% endcall %}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.statement"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1756850323.0002854, "supported_languages": null}, "macro.dbt.collect_freshness": {"name": "collect_freshness", "resource_type": "macro", "package_name": "dbt", "path": "macros/adapters/freshness.sql", "original_file_path": "macros/adapters/freshness.sql", "unique_id": "macro.dbt.collect_freshness", "macro_sql": "{% macro collect_freshness(source, loaded_at_field, filter) %}\n  {{ return(adapter.dispatch('collect_freshness', 'dbt')(source, loaded_at_field, filter))}}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.default__collect_freshness"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1756850323.0011559, "supported_languages": null}, "macro.dbt.default__collect_freshness": {"name": "default__collect_freshness", "resource_type": "macro", "package_name": "dbt", "path": "macros/adapters/freshness.sql", "original_file_path": "macros/adapters/freshness.sql", "unique_id": "macro.dbt.default__collect_freshness", "macro_sql": "{% macro default__collect_freshness(source, loaded_at_field, filter) %}\n  {% call statement('collect_freshness', fetch_result=True, auto_begin=False) -%}\n    select\n      max({{ loaded_at_field }}) as max_loaded_at,\n      {{ current_timestamp() }} as snapshotted_at\n    from {{ source }}\n    {% if filter %}\n    where {{ filter }}\n    {% endif %}\n  {% endcall %}\n  {{ return(load_result('collect_freshness')) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.statement", "macro.dbt.current_timestamp"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1756850323.0019653, "supported_languages": null}, "macro.dbt.collect_freshness_custom_sql": {"name": "collect_freshness_custom_sql", "resource_type": "macro", "package_name": "dbt", "path": "macros/adapters/freshness.sql", "original_file_path": "macros/adapters/freshness.sql", "unique_id": "macro.dbt.collect_freshness_custom_sql", "macro_sql": "{% macro collect_freshness_custom_sql(source, loaded_at_query) %}\n  {{ return(adapter.dispatch('collect_freshness_custom_sql', 'dbt')(source, loaded_at_query))}}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.default__collect_freshness_custom_sql"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1756850323.00237, "supported_languages": null}, "macro.dbt.default__collect_freshness_custom_sql": {"name": "default__collect_freshness_custom_sql", "resource_type": "macro", "package_name": "dbt", "path": "macros/adapters/freshness.sql", "original_file_path": "macros/adapters/freshness.sql", "unique_id": "macro.dbt.default__collect_freshness_custom_sql", "macro_sql": "{% macro default__collect_freshness_custom_sql(source, loaded_at_query) %}\n  {% call statement('collect_freshness_custom_sql', fetch_result=True, auto_begin=False) -%}\n  with source_query as (\n    {{ loaded_at_query }}\n  )\n  select\n    (select * from source_query) as max_loaded_at,\n    {{ current_timestamp() }} as snapshotted_at\n  {% endcall %}\n  {{ return(load_result('collect_freshness_custom_sql')) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.statement", "macro.dbt.current_timestamp"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1756850323.0029984, "supported_languages": null}, "macro.dbt.get_show_sql": {"name": "get_show_sql", "resource_type": "macro", "package_name": "dbt", "path": "macros/adapters/show.sql", "original_file_path": "macros/adapters/show.sql", "unique_id": "macro.dbt.get_show_sql", "macro_sql": "{% macro get_show_sql(compiled_code, sql_header, limit) -%}\n  {%- if sql_header is not none -%}\n  {{ sql_header }}\n  {%- endif %}\n  {{ get_limit_subquery_sql(compiled_code, limit) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.get_limit_subquery_sql"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1756850323.0037124, "supported_languages": null}, "macro.dbt.get_limit_subquery_sql": {"name": "get_limit_subquery_sql", "resource_type": "macro", "package_name": "dbt", "path": "macros/adapters/show.sql", "original_file_path": "macros/adapters/show.sql", "unique_id": "macro.dbt.get_limit_subquery_sql", "macro_sql": "\n{%- macro get_limit_subquery_sql(sql, limit) -%}\n  {{ adapter.dispatch('get_limit_sql', 'dbt')(sql, limit) }}\n{%- endmacro -%}\n\n", "depends_on": {"macros": ["macro.dbt.default__get_limit_sql"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1756850323.0040932, "supported_languages": null}, "macro.dbt.default__get_limit_sql": {"name": "default__get_limit_sql", "resource_type": "macro", "package_name": "dbt", "path": "macros/adapters/show.sql", "original_file_path": "macros/adapters/show.sql", "unique_id": "macro.dbt.default__get_limit_sql", "macro_sql": "{% macro default__get_limit_sql(sql, limit) %}\n  {{ sql }}\n  {% if limit is not none %}\n  limit {{ limit }}\n  {%- endif -%}\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1756850323.0045848, "supported_languages": null}, "macro.dbt.current_timestamp": {"name": "current_timestamp", "resource_type": "macro", "package_name": "dbt", "path": "macros/adapters/timestamps.sql", "original_file_path": "macros/adapters/timestamps.sql", "unique_id": "macro.dbt.current_timestamp", "macro_sql": "{%- macro current_timestamp() -%}\n    {{ adapter.dispatch('current_timestamp', 'dbt')() }}\n{%- endmacro -%}\n\n", "depends_on": {"macros": ["macro.dbt_postgres.postgres__current_timestamp"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1756850323.0054295, "supported_languages": null}, "macro.dbt.default__current_timestamp": {"name": "default__current_timestamp", "resource_type": "macro", "package_name": "dbt", "path": "macros/adapters/timestamps.sql", "original_file_path": "macros/adapters/timestamps.sql", "unique_id": "macro.dbt.default__current_timestamp", "macro_sql": "{% macro default__current_timestamp() -%}\n  {{ exceptions.raise_not_implemented(\n    'current_timestamp macro not implemented for adapter ' + adapter.type()) }}\n{%- endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1756850323.0057175, "supported_languages": null}, "macro.dbt.snapshot_get_time": {"name": "snapshot_get_time", "resource_type": "macro", "package_name": "dbt", "path": "macros/adapters/timestamps.sql", "original_file_path": "macros/adapters/timestamps.sql", "unique_id": "macro.dbt.snapshot_get_time", "macro_sql": "\n\n{%- macro snapshot_get_time() -%}\n    {{ adapter.dispatch('snapshot_get_time', 'dbt')() }}\n{%- endmacro -%}\n\n", "depends_on": {"macros": ["macro.dbt_postgres.postgres__snapshot_get_time"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1756850323.0060189, "supported_languages": null}, "macro.dbt.default__snapshot_get_time": {"name": "default__snapshot_get_time", "resource_type": "macro", "package_name": "dbt", "path": "macros/adapters/timestamps.sql", "original_file_path": "macros/adapters/timestamps.sql", "unique_id": "macro.dbt.default__snapshot_get_time", "macro_sql": "{% macro default__snapshot_get_time() %}\n    {{ current_timestamp() }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.current_timestamp"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1756850323.0062287, "supported_languages": null}, "macro.dbt.get_snapshot_get_time_data_type": {"name": "get_snapshot_get_time_data_type", "resource_type": "macro", "package_name": "dbt", "path": "macros/adapters/timestamps.sql", "original_file_path": "macros/adapters/timestamps.sql", "unique_id": "macro.dbt.get_snapshot_get_time_data_type", "macro_sql": "{% macro get_snapshot_get_time_data_type() %}\n    {% set snapshot_time = adapter.dispatch('snapshot_get_time', 'dbt')() %}\n    {% set time_data_type_sql = 'select ' ~ snapshot_time ~ ' as dbt_snapshot_time' %}\n    {% set snapshot_time_column_schema = get_column_schema_from_query(time_data_type_sql) %}\n    {% set time_data_type = snapshot_time_column_schema[0].dtype %}\n    {{ return(time_data_type or none) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.snapshot_get_time", "macro.dbt_postgres.postgres__snapshot_get_time", "macro.dbt.get_column_schema_from_query"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1756850323.0070305, "supported_languages": null}, "macro.dbt.current_timestamp_backcompat": {"name": "current_timestamp_backcompat", "resource_type": "macro", "package_name": "dbt", "path": "macros/adapters/timestamps.sql", "original_file_path": "macros/adapters/timestamps.sql", "unique_id": "macro.dbt.current_timestamp_backcompat", "macro_sql": "{% macro current_timestamp_backcompat() %}\n    {{ return(adapter.dispatch('current_timestamp_backcompat', 'dbt')()) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt_postgres.postgres__current_timestamp_backcompat"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1756850323.0073552, "supported_languages": null}, "macro.dbt.default__current_timestamp_backcompat": {"name": "default__current_timestamp_backcompat", "resource_type": "macro", "package_name": "dbt", "path": "macros/adapters/timestamps.sql", "original_file_path": "macros/adapters/timestamps.sql", "unique_id": "macro.dbt.default__current_timestamp_backcompat", "macro_sql": "{% macro default__current_timestamp_backcompat() %}\n    current_timestamp::timestamp\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1756850323.0075092, "supported_languages": null}, "macro.dbt.current_timestamp_in_utc_backcompat": {"name": "current_timestamp_in_utc_backcompat", "resource_type": "macro", "package_name": "dbt", "path": "macros/adapters/timestamps.sql", "original_file_path": "macros/adapters/timestamps.sql", "unique_id": "macro.dbt.current_timestamp_in_utc_backcompat", "macro_sql": "{% macro current_timestamp_in_utc_backcompat() %}\n    {{ return(adapter.dispatch('current_timestamp_in_utc_backcompat', 'dbt')()) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt_postgres.postgres__current_timestamp_in_utc_backcompat"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1756850323.0078368, "supported_languages": null}, "macro.dbt.default__current_timestamp_in_utc_backcompat": {"name": "default__current_timestamp_in_utc_backcompat", "resource_type": "macro", "package_name": "dbt", "path": "macros/adapters/timestamps.sql", "original_file_path": "macros/adapters/timestamps.sql", "unique_id": "macro.dbt.default__current_timestamp_in_utc_backcompat", "macro_sql": "{% macro default__current_timestamp_in_utc_backcompat() %}\n    {{ return(adapter.dispatch('current_timestamp_backcompat', 'dbt')()) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.current_timestamp_backcompat", "macro.dbt_postgres.postgres__current_timestamp_backcompat"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1756850323.008156, "supported_languages": null}, "macro.dbt.get_columns_in_relation": {"name": "get_columns_in_relation", "resource_type": "macro", "package_name": "dbt", "path": "macros/adapters/columns.sql", "original_file_path": "macros/adapters/columns.sql", "unique_id": "macro.dbt.get_columns_in_relation", "macro_sql": "{% macro get_columns_in_relation(relation) -%}\n  {{ return(adapter.dispatch('get_columns_in_relation', 'dbt')(relation)) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt_postgres.postgres__get_columns_in_relation"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1756850323.0102484, "supported_languages": null}, "macro.dbt.default__get_columns_in_relation": {"name": "default__get_columns_in_relation", "resource_type": "macro", "package_name": "dbt", "path": "macros/adapters/columns.sql", "original_file_path": "macros/adapters/columns.sql", "unique_id": "macro.dbt.default__get_columns_in_relation", "macro_sql": "{% macro default__get_columns_in_relation(relation) -%}\n  {{ exceptions.raise_not_implemented(\n    'get_columns_in_relation macro not implemented for adapter '+adapter.type()) }}\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1756850323.0105505, "supported_languages": null}, "macro.dbt.sql_convert_columns_in_relation": {"name": "sql_convert_columns_in_relation", "resource_type": "macro", "package_name": "dbt", "path": "macros/adapters/columns.sql", "original_file_path": "macros/adapters/columns.sql", "unique_id": "macro.dbt.sql_convert_columns_in_relation", "macro_sql": "{% macro sql_convert_columns_in_relation(table) -%}\n  {% set columns = [] %}\n  {% for row in table %}\n    {% do columns.append(api.Column(*row)) %}\n  {% endfor %}\n  {{ return(columns) }}\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1756850323.0111523, "supported_languages": null}, "macro.dbt.get_list_of_column_names": {"name": "get_list_of_column_names", "resource_type": "macro", "package_name": "dbt", "path": "macros/adapters/columns.sql", "original_file_path": "macros/adapters/columns.sql", "unique_id": "macro.dbt.get_list_of_column_names", "macro_sql": "\n\n{%- macro get_list_of_column_names(columns) -%}\n  {% set col_names = [] %}\n  {% for col in columns %}\n    {% do col_names.append(col.name) %}\n  {% endfor %}\n  {{ return(col_names) }}\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1756850323.011709, "supported_languages": null}, "macro.dbt.get_empty_subquery_sql": {"name": "get_empty_subquery_sql", "resource_type": "macro", "package_name": "dbt", "path": "macros/adapters/columns.sql", "original_file_path": "macros/adapters/columns.sql", "unique_id": "macro.dbt.get_empty_subquery_sql", "macro_sql": "{% macro get_empty_subquery_sql(select_sql, select_sql_header=none) -%}\n  {{ return(adapter.dispatch('get_empty_subquery_sql', 'dbt')(select_sql, select_sql_header)) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.default__get_empty_subquery_sql"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1756850323.01214, "supported_languages": null}, "macro.dbt.default__get_empty_subquery_sql": {"name": "default__get_empty_subquery_sql", "resource_type": "macro", "package_name": "dbt", "path": "macros/adapters/columns.sql", "original_file_path": "macros/adapters/columns.sql", "unique_id": "macro.dbt.default__get_empty_subquery_sql", "macro_sql": "{% macro default__get_empty_subquery_sql(select_sql, select_sql_header=none) %}\n    {%- if select_sql_header is not none -%}\n    {{ select_sql_header }}\n    {%- endif -%}\n    select * from (\n        {{ select_sql }}\n    ) as __dbt_sbq\n    where false\n    limit 0\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1756850323.0125358, "supported_languages": null}, "macro.dbt.get_empty_schema_sql": {"name": "get_empty_schema_sql", "resource_type": "macro", "package_name": "dbt", "path": "macros/adapters/columns.sql", "original_file_path": "macros/adapters/columns.sql", "unique_id": "macro.dbt.get_empty_schema_sql", "macro_sql": "{% macro get_empty_schema_sql(columns) -%}\n  {{ return(adapter.dispatch('get_empty_schema_sql', 'dbt')(columns)) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.default__get_empty_schema_sql"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1756850323.0129135, "supported_languages": null}, "macro.dbt.default__get_empty_schema_sql": {"name": "default__get_empty_schema_sql", "resource_type": "macro", "package_name": "dbt", "path": "macros/adapters/columns.sql", "original_file_path": "macros/adapters/columns.sql", "unique_id": "macro.dbt.default__get_empty_schema_sql", "macro_sql": "{% macro default__get_empty_schema_sql(columns) %}\n    {%- set col_err = [] -%}\n    {%- set col_naked_numeric = [] -%}\n    select\n    {% for i in columns %}\n      {%- set col = columns[i] -%}\n      {%- if col['data_type'] is not defined -%}\n        {%- do col_err.append(col['name']) -%}\n      {#-- If this column's type is just 'numeric' then it is missing precision/scale, raise a warning --#}\n      {%- elif col['data_type'].strip().lower() in ('numeric', 'decimal', 'number') -%}\n        {%- do col_naked_numeric.append(col['name']) -%}\n      {%- endif -%}\n      {% set col_name = adapter.quote(col['name']) if col.get('quote') else col['name'] %}\n      {{ cast('null', col['data_type']) }} as {{ col_name }}{{ \", \" if not loop.last }}\n    {%- endfor -%}\n    {%- if (col_err | length) > 0 -%}\n      {{ exceptions.column_type_missing(column_names=col_err) }}\n    {%- elif (col_naked_numeric | length) > 0 -%}\n      {{ exceptions.warn(\"Detected columns with numeric type and unspecified precision/scale, this can lead to unintended rounding: \" ~ col_naked_numeric ~ \"`\") }}\n    {%- endif -%}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.cast"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1756850323.015245, "supported_languages": null}, "macro.dbt.get_column_schema_from_query": {"name": "get_column_schema_from_query", "resource_type": "macro", "package_name": "dbt", "path": "macros/adapters/columns.sql", "original_file_path": "macros/adapters/columns.sql", "unique_id": "macro.dbt.get_column_schema_from_query", "macro_sql": "{% macro get_column_schema_from_query(select_sql, select_sql_header=none) -%}\n    {% set columns = [] %}\n    {# -- Using an 'empty subquery' here to get the same schema as the given select_sql statement, without necessitating a data scan.#}\n    {% set sql = get_empty_subquery_sql(select_sql, select_sql_header) %}\n    {% set column_schema = adapter.get_column_schema_from_query(sql) %}\n    {{ return(column_schema) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.get_empty_subquery_sql"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1756850323.0159214, "supported_languages": null}, "macro.dbt.get_columns_in_query": {"name": "get_columns_in_query", "resource_type": "macro", "package_name": "dbt", "path": "macros/adapters/columns.sql", "original_file_path": "macros/adapters/columns.sql", "unique_id": "macro.dbt.get_columns_in_query", "macro_sql": "{% macro get_columns_in_query(select_sql) -%}\n  {{ return(adapter.dispatch('get_columns_in_query', 'dbt')(select_sql)) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.default__get_columns_in_query"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1756850323.0162716, "supported_languages": null}, "macro.dbt.default__get_columns_in_query": {"name": "default__get_columns_in_query", "resource_type": "macro", "package_name": "dbt", "path": "macros/adapters/columns.sql", "original_file_path": "macros/adapters/columns.sql", "unique_id": "macro.dbt.default__get_columns_in_query", "macro_sql": "{% macro default__get_columns_in_query(select_sql) %}\n    {% call statement('get_columns_in_query', fetch_result=True, auto_begin=False) -%}\n        {{ get_empty_subquery_sql(select_sql) }}\n    {% endcall %}\n    {{ return(load_result('get_columns_in_query').table.columns | map(attribute='name') | list) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.statement", "macro.dbt.get_empty_subquery_sql"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1756850323.0169315, "supported_languages": null}, "macro.dbt.alter_column_type": {"name": "alter_column_type", "resource_type": "macro", "package_name": "dbt", "path": "macros/adapters/columns.sql", "original_file_path": "macros/adapters/columns.sql", "unique_id": "macro.dbt.alter_column_type", "macro_sql": "{% macro alter_column_type(relation, column_name, new_column_type) -%}\n  {{ return(adapter.dispatch('alter_column_type', 'dbt')(relation, column_name, new_column_type)) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.default__alter_column_type"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1756850323.0173676, "supported_languages": null}, "macro.dbt.default__alter_column_type": {"name": "default__alter_column_type", "resource_type": "macro", "package_name": "dbt", "path": "macros/adapters/columns.sql", "original_file_path": "macros/adapters/columns.sql", "unique_id": "macro.dbt.default__alter_column_type", "macro_sql": "{% macro default__alter_column_type(relation, column_name, new_column_type) -%}\n  {#\n    1. Create a new column (w/ temp name and correct type)\n    2. Copy data over to it\n    3. Drop the existing column (cascade!)\n    4. Rename the new column to existing column\n  #}\n  {%- set tmp_column = column_name + \"__dbt_alter\" -%}\n\n  {% call statement('alter_column_type') %}\n    alter table {{ relation.render() }} add column {{ adapter.quote(tmp_column) }} {{ new_column_type }};\n    update {{ relation.render() }} set {{ adapter.quote(tmp_column) }} = {{ adapter.quote(column_name) }};\n    alter table {{ relation.render() }} drop column {{ adapter.quote(column_name) }} cascade;\n    alter table {{ relation.render() }} rename column {{ adapter.quote(tmp_column) }} to {{ adapter.quote(column_name) }}\n  {% endcall %}\n\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.statement"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1756850323.0186117, "supported_languages": null}, "macro.dbt.alter_relation_add_remove_columns": {"name": "alter_relation_add_remove_columns", "resource_type": "macro", "package_name": "dbt", "path": "macros/adapters/columns.sql", "original_file_path": "macros/adapters/columns.sql", "unique_id": "macro.dbt.alter_relation_add_remove_columns", "macro_sql": "{% macro alter_relation_add_remove_columns(relation, add_columns = none, remove_columns = none) -%}\n  {{ return(adapter.dispatch('alter_relation_add_remove_columns', 'dbt')(relation, add_columns, remove_columns)) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.default__alter_relation_add_remove_columns"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1756850323.0191102, "supported_languages": null}, "macro.dbt.default__alter_relation_add_remove_columns": {"name": "default__alter_relation_add_remove_columns", "resource_type": "macro", "package_name": "dbt", "path": "macros/adapters/columns.sql", "original_file_path": "macros/adapters/columns.sql", "unique_id": "macro.dbt.default__alter_relation_add_remove_columns", "macro_sql": "{% macro default__alter_relation_add_remove_columns(relation, add_columns, remove_columns) %}\n\n  {% if add_columns is none %}\n    {% set add_columns = [] %}\n  {% endif %}\n  {% if remove_columns is none %}\n    {% set remove_columns = [] %}\n  {% endif %}\n\n  {% set sql -%}\n\n     alter {{ relation.type }} {{ relation.render() }}\n\n            {% for column in add_columns %}\n               add column {{ column.quoted }} {{ column.data_type }}{{ ',' if not loop.last }}\n            {% endfor %}{{ ',' if add_columns and remove_columns }}\n\n            {% for column in remove_columns %}\n                drop column {{ column.quoted }}{{ ',' if not loop.last }}\n            {% endfor %}\n\n  {%- endset -%}\n\n  {% do run_query(sql) %}\n\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.run_query"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1756850323.02061, "supported_languages": null}, "macro.dbt.concat": {"name": "concat", "resource_type": "macro", "package_name": "dbt", "path": "macros/utils/concat.sql", "original_file_path": "macros/utils/concat.sql", "unique_id": "macro.dbt.concat", "macro_sql": "{% macro concat(fields) -%}\n  {{ return(adapter.dispatch('concat', 'dbt')(fields)) }}\n{%- endmacro %}", "depends_on": {"macros": ["macro.dbt.default__concat"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1756850323.0211153, "supported_languages": null}, "macro.dbt.default__concat": {"name": "default__concat", "resource_type": "macro", "package_name": "dbt", "path": "macros/utils/concat.sql", "original_file_path": "macros/utils/concat.sql", "unique_id": "macro.dbt.default__concat", "macro_sql": "{% macro default__concat(fields) -%}\n    {{ fields|join(' || ') }}\n{%- endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1756850323.021363, "supported_languages": null}, "macro.dbt.any_value": {"name": "any_value", "resource_type": "macro", "package_name": "dbt", "path": "macros/utils/any_value.sql", "original_file_path": "macros/utils/any_value.sql", "unique_id": "macro.dbt.any_value", "macro_sql": "{% macro any_value(expression) -%}\n    {{ return(adapter.dispatch('any_value', 'dbt') (expression)) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt_postgres.postgres__any_value"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1756850323.0218463, "supported_languages": null}, "macro.dbt.default__any_value": {"name": "default__any_value", "resource_type": "macro", "package_name": "dbt", "path": "macros/utils/any_value.sql", "original_file_path": "macros/utils/any_value.sql", "unique_id": "macro.dbt.default__any_value", "macro_sql": "{% macro default__any_value(expression) -%}\n\n    any_value({{ expression }})\n\n{%- endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1756850323.022056, "supported_languages": null}, "macro.dbt.split_part": {"name": "split_part", "resource_type": "macro", "package_name": "dbt", "path": "macros/utils/split_part.sql", "original_file_path": "macros/utils/split_part.sql", "unique_id": "macro.dbt.split_part", "macro_sql": "{% macro split_part(string_text, delimiter_text, part_number) %}\n  {{ return(adapter.dispatch('split_part', 'dbt') (string_text, delimiter_text, part_number)) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt_postgres.postgres__split_part"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1756850323.0227215, "supported_languages": null}, "macro.dbt.default__split_part": {"name": "default__split_part", "resource_type": "macro", "package_name": "dbt", "path": "macros/utils/split_part.sql", "original_file_path": "macros/utils/split_part.sql", "unique_id": "macro.dbt.default__split_part", "macro_sql": "{% macro default__split_part(string_text, delimiter_text, part_number) %}\n\n    split_part(\n        {{ string_text }},\n        {{ delimiter_text }},\n        {{ part_number }}\n        )\n\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1756850323.0230591, "supported_languages": null}, "macro.dbt._split_part_negative": {"name": "_split_part_negative", "resource_type": "macro", "package_name": "dbt", "path": "macros/utils/split_part.sql", "original_file_path": "macros/utils/split_part.sql", "unique_id": "macro.dbt._split_part_negative", "macro_sql": "{% macro _split_part_negative(string_text, delimiter_text, part_number) %}\n\n    split_part(\n        {{ string_text }},\n        {{ delimiter_text }},\n          length({{ string_text }})\n          - length(\n              replace({{ string_text }},  {{ delimiter_text }}, '')\n          ) + 2 + {{ part_number }}\n        )\n\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1756850323.0234864, "supported_languages": null}, "macro.dbt.bool_or": {"name": "bool_or", "resource_type": "macro", "package_name": "dbt", "path": "macros/utils/bool_or.sql", "original_file_path": "macros/utils/bool_or.sql", "unique_id": "macro.dbt.bool_or", "macro_sql": "{% macro bool_or(expression) -%}\n    {{ return(adapter.dispatch('bool_or', 'dbt') (expression)) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.default__bool_or"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1756850323.0239751, "supported_languages": null}, "macro.dbt.default__bool_or": {"name": "default__bool_or", "resource_type": "macro", "package_name": "dbt", "path": "macros/utils/bool_or.sql", "original_file_path": "macros/utils/bool_or.sql", "unique_id": "macro.dbt.default__bool_or", "macro_sql": "{% macro default__bool_or(expression) -%}\n\n    bool_or({{ expression }})\n\n{%- endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1756850323.0241852, "supported_languages": null}, "macro.dbt.escape_single_quotes": {"name": "escape_single_quotes", "resource_type": "macro", "package_name": "dbt", "path": "macros/utils/escape_single_quotes.sql", "original_file_path": "macros/utils/escape_single_quotes.sql", "unique_id": "macro.dbt.escape_single_quotes", "macro_sql": "{% macro escape_single_quotes(expression) %}\n      {{ return(adapter.dispatch('escape_single_quotes', 'dbt') (expression)) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.default__escape_single_quotes"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1756850323.0246782, "supported_languages": null}, "macro.dbt.default__escape_single_quotes": {"name": "default__escape_single_quotes", "resource_type": "macro", "package_name": "dbt", "path": "macros/utils/escape_single_quotes.sql", "original_file_path": "macros/utils/escape_single_quotes.sql", "unique_id": "macro.dbt.default__escape_single_quotes", "macro_sql": "{% macro default__escape_single_quotes(expression) -%}\n{{ expression | replace(\"'\",\"''\") }}\n{%- endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1756850323.0249777, "supported_languages": null}, "macro.dbt.right": {"name": "right", "resource_type": "macro", "package_name": "dbt", "path": "macros/utils/right.sql", "original_file_path": "macros/utils/right.sql", "unique_id": "macro.dbt.right", "macro_sql": "{% macro right(string_text, length_expression) -%}\n    {{ return(adapter.dispatch('right', 'dbt') (string_text, length_expression)) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.default__right"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1756850323.0255022, "supported_languages": null}, "macro.dbt.default__right": {"name": "default__right", "resource_type": "macro", "package_name": "dbt", "path": "macros/utils/right.sql", "original_file_path": "macros/utils/right.sql", "unique_id": "macro.dbt.default__right", "macro_sql": "{% macro default__right(string_text, length_expression) %}\n\n    right(\n        {{ string_text }},\n        {{ length_expression }}\n    )\n\n{%- endmacro -%}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1756850323.0257862, "supported_languages": null}, "macro.dbt.array_concat": {"name": "array_concat", "resource_type": "macro", "package_name": "dbt", "path": "macros/utils/array_concat.sql", "original_file_path": "macros/utils/array_concat.sql", "unique_id": "macro.dbt.array_concat", "macro_sql": "{% macro array_concat(array_1, array_2) -%}\n  {{ return(adapter.dispatch('array_concat', 'dbt')(array_1, array_2)) }}\n{%- endmacro %}", "depends_on": {"macros": ["macro.dbt.default__array_concat"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1756850323.0263011, "supported_languages": null}, "macro.dbt.default__array_concat": {"name": "default__array_concat", "resource_type": "macro", "package_name": "dbt", "path": "macros/utils/array_concat.sql", "original_file_path": "macros/utils/array_concat.sql", "unique_id": "macro.dbt.default__array_concat", "macro_sql": "{% macro default__array_concat(array_1, array_2) -%}\n    array_cat({{ array_1 }}, {{ array_2 }})\n{%- endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1756850323.02691, "supported_languages": null}, "macro.dbt.length": {"name": "length", "resource_type": "macro", "package_name": "dbt", "path": "macros/utils/length.sql", "original_file_path": "macros/utils/length.sql", "unique_id": "macro.dbt.length", "macro_sql": "{% macro length(expression) -%}\n    {{ return(adapter.dispatch('length', 'dbt') (expression)) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.default__length"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1756850323.0273726, "supported_languages": null}, "macro.dbt.default__length": {"name": "default__length", "resource_type": "macro", "package_name": "dbt", "path": "macros/utils/length.sql", "original_file_path": "macros/utils/length.sql", "unique_id": "macro.dbt.default__length", "macro_sql": "{% macro default__length(expression) %}\n\n    length(\n        {{ expression }}\n    )\n\n{%- endmacro -%}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1756850323.027578, "supported_languages": null}, "macro.dbt.hash": {"name": "hash", "resource_type": "macro", "package_name": "dbt", "path": "macros/utils/hash.sql", "original_file_path": "macros/utils/hash.sql", "unique_id": "macro.dbt.hash", "macro_sql": "{% macro hash(field) -%}\n  {{ return(adapter.dispatch('hash', 'dbt') (field)) }}\n{%- endmacro %}", "depends_on": {"macros": ["macro.dbt.default__hash"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1756850323.028057, "supported_languages": null}, "macro.dbt.default__hash": {"name": "default__hash", "resource_type": "macro", "package_name": "dbt", "path": "macros/utils/hash.sql", "original_file_path": "macros/utils/hash.sql", "unique_id": "macro.dbt.default__hash", "macro_sql": "{% macro default__hash(field) -%}\n    md5(cast({{ field }} as {{ api.Column.translate_type('string') }}))\n{%- endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1756850323.0283582, "supported_languages": null}, "macro.dbt.last_day": {"name": "last_day", "resource_type": "macro", "package_name": "dbt", "path": "macros/utils/last_day.sql", "original_file_path": "macros/utils/last_day.sql", "unique_id": "macro.dbt.last_day", "macro_sql": "{% macro last_day(date, datepart) %}\n  {{ return(adapter.dispatch('last_day', 'dbt') (date, datepart)) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt_postgres.postgres__last_day"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1756850323.0289438, "supported_languages": null}, "macro.dbt.default_last_day": {"name": "default_last_day", "resource_type": "macro", "package_name": "dbt", "path": "macros/utils/last_day.sql", "original_file_path": "macros/utils/last_day.sql", "unique_id": "macro.dbt.default_last_day", "macro_sql": "\n\n{%- macro default_last_day(date, datepart) -%}\n    cast(\n        {{dbt.dateadd('day', '-1',\n        dbt.dateadd(datepart, '1', dbt.date_trunc(datepart, date))\n        )}}\n        as date)\n{%- endmacro -%}\n\n", "depends_on": {"macros": ["macro.dbt.dateadd", "macro.dbt.date_trunc"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1756850323.0294344, "supported_languages": null}, "macro.dbt.default__last_day": {"name": "default__last_day", "resource_type": "macro", "package_name": "dbt", "path": "macros/utils/last_day.sql", "original_file_path": "macros/utils/last_day.sql", "unique_id": "macro.dbt.default__last_day", "macro_sql": "{% macro default__last_day(date, datepart) -%}\n    {{dbt.default_last_day(date, datepart)}}\n{%- endmacro %}", "depends_on": {"macros": ["macro.dbt.default_last_day"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1756850323.0297196, "supported_languages": null}, "macro.dbt.except": {"name": "except", "resource_type": "macro", "package_name": "dbt", "path": "macros/utils/except.sql", "original_file_path": "macros/utils/except.sql", "unique_id": "macro.dbt.except", "macro_sql": "{% macro except() %}\n  {{ return(adapter.dispatch('except', 'dbt')()) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.default__except"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1756850323.0301557, "supported_languages": null}, "macro.dbt.default__except": {"name": "default__except", "resource_type": "macro", "package_name": "dbt", "path": "macros/utils/except.sql", "original_file_path": "macros/utils/except.sql", "unique_id": "macro.dbt.default__except", "macro_sql": "{% macro default__except() %}\n\n    except\n\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1756850323.0303104, "supported_languages": null}, "macro.dbt.cast_bool_to_text": {"name": "cast_bool_to_text", "resource_type": "macro", "package_name": "dbt", "path": "macros/utils/cast_bool_to_text.sql", "original_file_path": "macros/utils/cast_bool_to_text.sql", "unique_id": "macro.dbt.cast_bool_to_text", "macro_sql": "{% macro cast_bool_to_text(field) %}\n  {{ adapter.dispatch('cast_bool_to_text', 'dbt') (field) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.default__cast_bool_to_text"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1756850323.0307508, "supported_languages": null}, "macro.dbt.default__cast_bool_to_text": {"name": "default__cast_bool_to_text", "resource_type": "macro", "package_name": "dbt", "path": "macros/utils/cast_bool_to_text.sql", "original_file_path": "macros/utils/cast_bool_to_text.sql", "unique_id": "macro.dbt.default__cast_bool_to_text", "macro_sql": "{% macro default__cast_bool_to_text(field) %}\n    cast({{ field }} as {{ api.Column.translate_type('string') }})\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1756850323.031073, "supported_languages": null}, "macro.dbt.date": {"name": "date", "resource_type": "macro", "package_name": "dbt", "path": "macros/utils/date.sql", "original_file_path": "macros/utils/date.sql", "unique_id": "macro.dbt.date", "macro_sql": "{% macro date(year, month, day) %}\n  {{ return(adapter.dispatch('date', 'dbt') (year, month, day)) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.default__date"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1756850323.0316527, "supported_languages": null}, "macro.dbt.default__date": {"name": "default__date", "resource_type": "macro", "package_name": "dbt", "path": "macros/utils/date.sql", "original_file_path": "macros/utils/date.sql", "unique_id": "macro.dbt.default__date", "macro_sql": "{% macro default__date(year, month, day) -%}\n    {%- set dt = modules.datetime.date(year, month, day) -%}\n    {%- set iso_8601_formatted_date = dt.strftime('%Y-%m-%d') -%}\n    to_date('{{ iso_8601_formatted_date }}', 'YYYY-MM-DD')\n{%- endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1756850323.0322058, "supported_languages": null}, "macro.dbt.intersect": {"name": "intersect", "resource_type": "macro", "package_name": "dbt", "path": "macros/utils/intersect.sql", "original_file_path": "macros/utils/intersect.sql", "unique_id": "macro.dbt.intersect", "macro_sql": "{% macro intersect() %}\n  {{ return(adapter.dispatch('intersect', 'dbt')()) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.default__intersect"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1756850323.0326235, "supported_languages": null}, "macro.dbt.default__intersect": {"name": "default__intersect", "resource_type": "macro", "package_name": "dbt", "path": "macros/utils/intersect.sql", "original_file_path": "macros/utils/intersect.sql", "unique_id": "macro.dbt.default__intersect", "macro_sql": "{% macro default__intersect() %}\n\n    intersect\n\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1756850323.032789, "supported_languages": null}, "macro.dbt.position": {"name": "position", "resource_type": "macro", "package_name": "dbt", "path": "macros/utils/position.sql", "original_file_path": "macros/utils/position.sql", "unique_id": "macro.dbt.position", "macro_sql": "{% macro position(substring_text, string_text) -%}\n    {{ return(adapter.dispatch('position', 'dbt') (substring_text, string_text)) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.default__position"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1756850323.0333, "supported_languages": null}, "macro.dbt.default__position": {"name": "default__position", "resource_type": "macro", "package_name": "dbt", "path": "macros/utils/position.sql", "original_file_path": "macros/utils/position.sql", "unique_id": "macro.dbt.default__position", "macro_sql": "{% macro default__position(substring_text, string_text) %}\n\n    position(\n        {{ substring_text }} in {{ string_text }}\n    )\n\n{%- endmacro -%}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1756850323.0335672, "supported_languages": null}, "macro.dbt.safe_cast": {"name": "safe_cast", "resource_type": "macro", "package_name": "dbt", "path": "macros/utils/safe_cast.sql", "original_file_path": "macros/utils/safe_cast.sql", "unique_id": "macro.dbt.safe_cast", "macro_sql": "{% macro safe_cast(field, type) %}\n  {{ return(adapter.dispatch('safe_cast', 'dbt') (field, type)) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.default__safe_cast"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1756850323.0341275, "supported_languages": null}, "macro.dbt.default__safe_cast": {"name": "default__safe_cast", "resource_type": "macro", "package_name": "dbt", "path": "macros/utils/safe_cast.sql", "original_file_path": "macros/utils/safe_cast.sql", "unique_id": "macro.dbt.default__safe_cast", "macro_sql": "{% macro default__safe_cast(field, type) %}\n    {# most databases don't support this function yet\n    so we just need to use cast #}\n    cast({{field}} as {{type}})\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1756850323.0345097, "supported_languages": null}, "macro.dbt.array_append": {"name": "array_append", "resource_type": "macro", "package_name": "dbt", "path": "macros/utils/array_append.sql", "original_file_path": "macros/utils/array_append.sql", "unique_id": "macro.dbt.array_append", "macro_sql": "{% macro array_append(array, new_element) -%}\n  {{ return(adapter.dispatch('array_append', 'dbt')(array, new_element)) }}\n{%- endmacro %}", "depends_on": {"macros": ["macro.dbt.default__array_append"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1756850323.0350468, "supported_languages": null}, "macro.dbt.default__array_append": {"name": "default__array_append", "resource_type": "macro", "package_name": "dbt", "path": "macros/utils/array_append.sql", "original_file_path": "macros/utils/array_append.sql", "unique_id": "macro.dbt.default__array_append", "macro_sql": "{% macro default__array_append(array, new_element) -%}\n    array_append({{ array }}, {{ new_element }})\n{%- endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1756850323.0353098, "supported_languages": null}, "macro.dbt.cast": {"name": "cast", "resource_type": "macro", "package_name": "dbt", "path": "macros/utils/cast.sql", "original_file_path": "macros/utils/cast.sql", "unique_id": "macro.dbt.cast", "macro_sql": "{% macro cast(field, type) %}\n  {{ return(adapter.dispatch('cast', 'dbt') (field, type)) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.default__cast"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1756850323.0358346, "supported_languages": null}, "macro.dbt.default__cast": {"name": "default__cast", "resource_type": "macro", "package_name": "dbt", "path": "macros/utils/cast.sql", "original_file_path": "macros/utils/cast.sql", "unique_id": "macro.dbt.default__cast", "macro_sql": "{% macro default__cast(field, type) %}\n    cast({{field}} as {{type}})\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1756850323.0360978, "supported_languages": null}, "macro.dbt.array_construct": {"name": "array_construct", "resource_type": "macro", "package_name": "dbt", "path": "macros/utils/array_construct.sql", "original_file_path": "macros/utils/array_construct.sql", "unique_id": "macro.dbt.array_construct", "macro_sql": "{% macro array_construct(inputs=[], data_type=api.Column.translate_type('integer')) -%}\n  {{ return(adapter.dispatch('array_construct', 'dbt')(inputs, data_type)) }}\n{%- endmacro %}", "depends_on": {"macros": ["macro.dbt.default__array_construct"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1756850323.0367877, "supported_languages": null}, "macro.dbt.default__array_construct": {"name": "default__array_construct", "resource_type": "macro", "package_name": "dbt", "path": "macros/utils/array_construct.sql", "original_file_path": "macros/utils/array_construct.sql", "unique_id": "macro.dbt.default__array_construct", "macro_sql": "{% macro default__array_construct(inputs, data_type) -%}\n    {% if inputs|length > 0 %}\n    array[ {{ inputs|join(' , ') }} ]\n    {% else %}\n    array[]::{{data_type}}[]\n    {% endif %}\n{%- endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1756850323.0372498, "supported_languages": null}, "macro.dbt.equals": {"name": "equals", "resource_type": "macro", "package_name": "dbt", "path": "macros/utils/equals.sql", "original_file_path": "macros/utils/equals.sql", "unique_id": "macro.dbt.equals", "macro_sql": "{% macro equals(expr1, expr2) %}\n    {{ return(adapter.dispatch('equals', 'dbt') (expr1, expr2)) }}\n{%- endmacro %}", "depends_on": {"macros": ["macro.dbt.default__equals"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1756850323.0378582, "supported_languages": null}, "macro.dbt.default__equals": {"name": "default__equals", "resource_type": "macro", "package_name": "dbt", "path": "macros/utils/equals.sql", "original_file_path": "macros/utils/equals.sql", "unique_id": "macro.dbt.default__equals", "macro_sql": "{% macro default__equals(expr1, expr2) -%}\n{%- if adapter.behavior.enable_truthy_nulls_equals_macro.no_warn %}\n    case when (({{ expr1 }} = {{ expr2 }}) or ({{ expr1 }} is null and {{ expr2 }} is null))\n        then 0\n        else 1\n    end = 0\n{%- else -%}\n    ({{ expr1 }} = {{ expr2 }})\n{%- endif %}\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1756850323.0384214, "supported_languages": null}, "macro.dbt.listagg": {"name": "listagg", "resource_type": "macro", "package_name": "dbt", "path": "macros/utils/listagg.sql", "original_file_path": "macros/utils/listagg.sql", "unique_id": "macro.dbt.listagg", "macro_sql": "{% macro listagg(measure, delimiter_text=\"','\", order_by_clause=none, limit_num=none) -%}\n    {{ return(adapter.dispatch('listagg', 'dbt') (measure, delimiter_text, order_by_clause, limit_num)) }}\n{%- endmacro %}", "depends_on": {"macros": ["macro.dbt_postgres.postgres__listagg"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1756850323.0392458, "supported_languages": null}, "macro.dbt.default__listagg": {"name": "default__listagg", "resource_type": "macro", "package_name": "dbt", "path": "macros/utils/listagg.sql", "original_file_path": "macros/utils/listagg.sql", "unique_id": "macro.dbt.default__listagg", "macro_sql": "{% macro default__listagg(measure, delimiter_text, order_by_clause, limit_num) -%}\n\n    {% if limit_num -%}\n    array_to_string(\n        array_slice(\n            array_agg(\n                {{ measure }}\n            ){% if order_by_clause -%}\n            within group ({{ order_by_clause }})\n            {%- endif %}\n            ,0\n            ,{{ limit_num }}\n        ),\n        {{ delimiter_text }}\n        )\n    {%- else %}\n    listagg(\n        {{ measure }},\n        {{ delimiter_text }}\n        )\n        {% if order_by_clause -%}\n        within group ({{ order_by_clause }})\n        {%- endif %}\n    {%- endif %}\n\n{%- endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1756850323.0400395, "supported_languages": null}, "macro.dbt.type_string": {"name": "type_string", "resource_type": "macro", "package_name": "dbt", "path": "macros/utils/data_types.sql", "original_file_path": "macros/utils/data_types.sql", "unique_id": "macro.dbt.type_string", "macro_sql": "\n\n{%- macro type_string() -%}\n  {{ return(adapter.dispatch('type_string', 'dbt')()) }}\n{%- endmacro -%}\n\n", "depends_on": {"macros": ["macro.dbt.default__type_string"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1756850323.0412874, "supported_languages": null}, "macro.dbt.default__type_string": {"name": "default__type_string", "resource_type": "macro", "package_name": "dbt", "path": "macros/utils/data_types.sql", "original_file_path": "macros/utils/data_types.sql", "unique_id": "macro.dbt.default__type_string", "macro_sql": "{% macro default__type_string() %}\n    {{ return(api.Column.translate_type(\"string\")) }}\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1756850323.0415802, "supported_languages": null}, "macro.dbt.type_timestamp": {"name": "type_timestamp", "resource_type": "macro", "package_name": "dbt", "path": "macros/utils/data_types.sql", "original_file_path": "macros/utils/data_types.sql", "unique_id": "macro.dbt.type_timestamp", "macro_sql": "\n\n{%- macro type_timestamp() -%}\n  {{ return(adapter.dispatch('type_timestamp', 'dbt')()) }}\n{%- endmacro -%}\n\n", "depends_on": {"macros": ["macro.dbt.default__type_timestamp"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1756850323.0419092, "supported_languages": null}, "macro.dbt.default__type_timestamp": {"name": "default__type_timestamp", "resource_type": "macro", "package_name": "dbt", "path": "macros/utils/data_types.sql", "original_file_path": "macros/utils/data_types.sql", "unique_id": "macro.dbt.default__type_timestamp", "macro_sql": "{% macro default__type_timestamp() %}\n    {{ return(api.Column.translate_type(\"timestamp\")) }}\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1756850323.0421972, "supported_languages": null}, "macro.dbt.type_float": {"name": "type_float", "resource_type": "macro", "package_name": "dbt", "path": "macros/utils/data_types.sql", "original_file_path": "macros/utils/data_types.sql", "unique_id": "macro.dbt.type_float", "macro_sql": "\n\n{%- macro type_float() -%}\n  {{ return(adapter.dispatch('type_float', 'dbt')()) }}\n{%- endmacro -%}\n\n", "depends_on": {"macros": ["macro.dbt.default__type_float"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1756850323.0425036, "supported_languages": null}, "macro.dbt.default__type_float": {"name": "default__type_float", "resource_type": "macro", "package_name": "dbt", "path": "macros/utils/data_types.sql", "original_file_path": "macros/utils/data_types.sql", "unique_id": "macro.dbt.default__type_float", "macro_sql": "{% macro default__type_float() %}\n    {{ return(api.Column.translate_type(\"float\")) }}\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1756850323.0428085, "supported_languages": null}, "macro.dbt.type_numeric": {"name": "type_numeric", "resource_type": "macro", "package_name": "dbt", "path": "macros/utils/data_types.sql", "original_file_path": "macros/utils/data_types.sql", "unique_id": "macro.dbt.type_numeric", "macro_sql": "\n\n{%- macro type_numeric() -%}\n  {{ return(adapter.dispatch('type_numeric', 'dbt')()) }}\n{%- endmacro -%}\n\n", "depends_on": {"macros": ["macro.dbt.default__type_numeric"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1756850323.0431228, "supported_languages": null}, "macro.dbt.default__type_numeric": {"name": "default__type_numeric", "resource_type": "macro", "package_name": "dbt", "path": "macros/utils/data_types.sql", "original_file_path": "macros/utils/data_types.sql", "unique_id": "macro.dbt.default__type_numeric", "macro_sql": "{% macro default__type_numeric() %}\n    {{ return(api.Column.numeric_type(\"numeric\", 28, 6)) }}\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1756850323.0435755, "supported_languages": null}, "macro.dbt.type_bigint": {"name": "type_bigint", "resource_type": "macro", "package_name": "dbt", "path": "macros/utils/data_types.sql", "original_file_path": "macros/utils/data_types.sql", "unique_id": "macro.dbt.type_bigint", "macro_sql": "\n\n{%- macro type_bigint() -%}\n  {{ return(adapter.dispatch('type_bigint', 'dbt')()) }}\n{%- endmacro -%}\n\n", "depends_on": {"macros": ["macro.dbt.default__type_bigint"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1756850323.043911, "supported_languages": null}, "macro.dbt.default__type_bigint": {"name": "default__type_bigint", "resource_type": "macro", "package_name": "dbt", "path": "macros/utils/data_types.sql", "original_file_path": "macros/utils/data_types.sql", "unique_id": "macro.dbt.default__type_bigint", "macro_sql": "{% macro default__type_bigint() %}\n    {{ return(api.Column.translate_type(\"bigint\")) }}\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1756850323.044204, "supported_languages": null}, "macro.dbt.type_int": {"name": "type_int", "resource_type": "macro", "package_name": "dbt", "path": "macros/utils/data_types.sql", "original_file_path": "macros/utils/data_types.sql", "unique_id": "macro.dbt.type_int", "macro_sql": "\n\n{%- macro type_int() -%}\n  {{ return(adapter.dispatch('type_int', 'dbt')()) }}\n{%- endmacro -%}\n\n", "depends_on": {"macros": ["macro.dbt.default__type_int"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1756850323.0445118, "supported_languages": null}, "macro.dbt.default__type_int": {"name": "default__type_int", "resource_type": "macro", "package_name": "dbt", "path": "macros/utils/data_types.sql", "original_file_path": "macros/utils/data_types.sql", "unique_id": "macro.dbt.default__type_int", "macro_sql": "{%- macro default__type_int() -%}\n  {{ return(api.Column.translate_type(\"integer\")) }}\n{%- endmacro -%}\n\n", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1756850323.0448086, "supported_languages": null}, "macro.dbt.type_boolean": {"name": "type_boolean", "resource_type": "macro", "package_name": "dbt", "path": "macros/utils/data_types.sql", "original_file_path": "macros/utils/data_types.sql", "unique_id": "macro.dbt.type_boolean", "macro_sql": "\n\n{%- macro type_boolean() -%}\n  {{ return(adapter.dispatch('type_boolean', 'dbt')()) }}\n{%- endmacro -%}\n\n", "depends_on": {"macros": ["macro.dbt.default__type_boolean"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1756850323.0451202, "supported_languages": null}, "macro.dbt.default__type_boolean": {"name": "default__type_boolean", "resource_type": "macro", "package_name": "dbt", "path": "macros/utils/data_types.sql", "original_file_path": "macros/utils/data_types.sql", "unique_id": "macro.dbt.default__type_boolean", "macro_sql": "{%- macro default__type_boolean() -%}\n  {{ return(api.Column.translate_type(\"boolean\")) }}\n{%- endmacro -%}\n\n", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1756850323.0453963, "supported_languages": null}, "macro.dbt.date_trunc": {"name": "date_trunc", "resource_type": "macro", "package_name": "dbt", "path": "macros/utils/date_trunc.sql", "original_file_path": "macros/utils/date_trunc.sql", "unique_id": "macro.dbt.date_trunc", "macro_sql": "{% macro date_trunc(datepart, date) -%}\n  {{ return(adapter.dispatch('date_trunc', 'dbt') (datepart, date)) }}\n{%- endmacro %}", "depends_on": {"macros": ["macro.dbt.default__date_trunc"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1756850323.0459466, "supported_languages": null}, "macro.dbt.default__date_trunc": {"name": "default__date_trunc", "resource_type": "macro", "package_name": "dbt", "path": "macros/utils/date_trunc.sql", "original_file_path": "macros/utils/date_trunc.sql", "unique_id": "macro.dbt.default__date_trunc", "macro_sql": "{% macro default__date_trunc(datepart, date) -%}\n    date_trunc('{{datepart}}', {{date}})\n{%- endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1756850323.046208, "supported_languages": null}, "macro.dbt.get_intervals_between": {"name": "get_intervals_between", "resource_type": "macro", "package_name": "dbt", "path": "macros/utils/date_spine.sql", "original_file_path": "macros/utils/date_spine.sql", "unique_id": "macro.dbt.get_intervals_between", "macro_sql": "{% macro get_intervals_between(start_date, end_date, datepart) -%}\n    {{ return(adapter.dispatch('get_intervals_between', 'dbt')(start_date, end_date, datepart)) }}\n{%- endmacro %}", "depends_on": {"macros": ["macro.dbt.default__get_intervals_between"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1756850323.0472147, "supported_languages": null}, "macro.dbt.default__get_intervals_between": {"name": "default__get_intervals_between", "resource_type": "macro", "package_name": "dbt", "path": "macros/utils/date_spine.sql", "original_file_path": "macros/utils/date_spine.sql", "unique_id": "macro.dbt.default__get_intervals_between", "macro_sql": "{% macro default__get_intervals_between(start_date, end_date, datepart) -%}\n    {%- call statement('get_intervals_between', fetch_result=True) %}\n\n        select {{ dbt.datediff(start_date, end_date, datepart) }}\n\n    {%- endcall -%}\n\n    {%- set value_list = load_result('get_intervals_between') -%}\n\n    {%- if value_list and value_list['data'] -%}\n        {%- set values = value_list['data'] | map(attribute=0) | list %}\n        {{ return(values[0]) }}\n    {%- else -%}\n        {{ return(1) }}\n    {%- endif -%}\n\n{%- endmacro %}", "depends_on": {"macros": ["macro.dbt.statement", "macro.dbt.datediff"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1756850323.048382, "supported_languages": null}, "macro.dbt.date_spine": {"name": "date_spine", "resource_type": "macro", "package_name": "dbt", "path": "macros/utils/date_spine.sql", "original_file_path": "macros/utils/date_spine.sql", "unique_id": "macro.dbt.date_spine", "macro_sql": "{% macro date_spine(datepart, start_date, end_date) %}\n    {{ return(adapter.dispatch('date_spine', 'dbt')(datepart, start_date, end_date)) }}\n{%- endmacro %}", "depends_on": {"macros": ["macro.dbt.default__date_spine"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1756850323.0488422, "supported_languages": null}, "macro.dbt.default__date_spine": {"name": "default__date_spine", "resource_type": "macro", "package_name": "dbt", "path": "macros/utils/date_spine.sql", "original_file_path": "macros/utils/date_spine.sql", "unique_id": "macro.dbt.default__date_spine", "macro_sql": "{% macro default__date_spine(datepart, start_date, end_date) %}\n\n\n    {# call as follows:\n\n    date_spine(\n        \"day\",\n        \"to_date('01/01/2016', 'mm/dd/yyyy')\",\n        \"dbt.dateadd(week, 1, current_date)\"\n    ) #}\n\n\n    with rawdata as (\n\n        {{dbt.generate_series(\n            dbt.get_intervals_between(start_date, end_date, datepart)\n        )}}\n\n    ),\n\n    all_periods as (\n\n        select (\n            {{\n                dbt.dateadd(\n                    datepart,\n                    \"row_number() over (order by 1) - 1\",\n                    start_date\n                )\n            }}\n        ) as date_{{datepart}}\n        from rawdata\n\n    ),\n\n    filtered as (\n\n        select *\n        from all_periods\n        where date_{{datepart}} <= {{ end_date }}\n\n    )\n\n    select * from filtered\n\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.generate_series", "macro.dbt.get_intervals_between", "macro.dbt.dateadd"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1756850323.0495293, "supported_languages": null}, "macro.dbt.get_powers_of_two": {"name": "get_powers_of_two", "resource_type": "macro", "package_name": "dbt", "path": "macros/utils/generate_series.sql", "original_file_path": "macros/utils/generate_series.sql", "unique_id": "macro.dbt.get_powers_of_two", "macro_sql": "{% macro get_powers_of_two(upper_bound) %}\n    {{ return(adapter.dispatch('get_powers_of_two', 'dbt')(upper_bound)) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.default__get_powers_of_two"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1756850323.05037, "supported_languages": null}, "macro.dbt.default__get_powers_of_two": {"name": "default__get_powers_of_two", "resource_type": "macro", "package_name": "dbt", "path": "macros/utils/generate_series.sql", "original_file_path": "macros/utils/generate_series.sql", "unique_id": "macro.dbt.default__get_powers_of_two", "macro_sql": "{% macro default__get_powers_of_two(upper_bound) %}\n\n    {% if upper_bound <= 0 %}\n    {{ exceptions.raise_compiler_error(\"upper bound must be positive\") }}\n    {% endif %}\n\n    {% for _ in range(1, 100) %}\n       {% if upper_bound <= 2 ** loop.index %}{{ return(loop.index) }}{% endif %}\n    {% endfor %}\n\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1756850323.0511672, "supported_languages": null}, "macro.dbt.generate_series": {"name": "generate_series", "resource_type": "macro", "package_name": "dbt", "path": "macros/utils/generate_series.sql", "original_file_path": "macros/utils/generate_series.sql", "unique_id": "macro.dbt.generate_series", "macro_sql": "{% macro generate_series(upper_bound) %}\n    {{ return(adapter.dispatch('generate_series', 'dbt')(upper_bound)) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.default__generate_series"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1756850323.051525, "supported_languages": null}, "macro.dbt.default__generate_series": {"name": "default__generate_series", "resource_type": "macro", "package_name": "dbt", "path": "macros/utils/generate_series.sql", "original_file_path": "macros/utils/generate_series.sql", "unique_id": "macro.dbt.default__generate_series", "macro_sql": "{% macro default__generate_series(upper_bound) %}\n\n    {% set n = dbt.get_powers_of_two(upper_bound) %}\n\n    with p as (\n        select 0 as generated_number union all select 1\n    ), unioned as (\n\n    select\n\n    {% for i in range(n) %}\n    p{{i}}.generated_number * power(2, {{i}})\n    {% if not loop.last %} + {% endif %}\n    {% endfor %}\n    + 1\n    as generated_number\n\n    from\n\n    {% for i in range(n) %}\n    p as p{{i}}\n    {% if not loop.last %} cross join {% endif %}\n    {% endfor %}\n\n    )\n\n    select *\n    from unioned\n    where generated_number <= {{upper_bound}}\n    order by generated_number\n\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.get_powers_of_two"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1756850323.0525136, "supported_languages": null}, "macro.dbt.replace": {"name": "replace", "resource_type": "macro", "package_name": "dbt", "path": "macros/utils/replace.sql", "original_file_path": "macros/utils/replace.sql", "unique_id": "macro.dbt.replace", "macro_sql": "{% macro replace(field, old_chars, new_chars) -%}\n    {{ return(adapter.dispatch('replace', 'dbt') (field, old_chars, new_chars)) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.default__replace"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1756850323.0531125, "supported_languages": null}, "macro.dbt.default__replace": {"name": "default__replace", "resource_type": "macro", "package_name": "dbt", "path": "macros/utils/replace.sql", "original_file_path": "macros/utils/replace.sql", "unique_id": "macro.dbt.default__replace", "macro_sql": "{% macro default__replace(field, old_chars, new_chars) %}\n\n    replace(\n        {{ field }},\n        {{ old_chars }},\n        {{ new_chars }}\n    )\n\n\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1756850323.0534358, "supported_languages": null}, "macro.dbt.dateadd": {"name": "dateadd", "resource_type": "macro", "package_name": "dbt", "path": "macros/utils/dateadd.sql", "original_file_path": "macros/utils/dateadd.sql", "unique_id": "macro.dbt.dateadd", "macro_sql": "{% macro dateadd(datepart, interval, from_date_or_timestamp) %}\n  {{ return(adapter.dispatch('dateadd', 'dbt')(datepart, interval, from_date_or_timestamp)) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt_postgres.postgres__dateadd"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1756850323.0540295, "supported_languages": null}, "macro.dbt.default__dateadd": {"name": "default__dateadd", "resource_type": "macro", "package_name": "dbt", "path": "macros/utils/dateadd.sql", "original_file_path": "macros/utils/dateadd.sql", "unique_id": "macro.dbt.default__dateadd", "macro_sql": "{% macro default__dateadd(datepart, interval, from_date_or_timestamp) %}\n\n    dateadd(\n        {{ datepart }},\n        {{ interval }},\n        {{ from_date_or_timestamp }}\n        )\n\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1756850323.0544703, "supported_languages": null}, "macro.dbt.datediff": {"name": "datediff", "resource_type": "macro", "package_name": "dbt", "path": "macros/utils/datediff.sql", "original_file_path": "macros/utils/datediff.sql", "unique_id": "macro.dbt.datediff", "macro_sql": "{% macro datediff(first_date, second_date, datepart) %}\n  {{ return(adapter.dispatch('datediff', 'dbt')(first_date, second_date, datepart)) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt_postgres.postgres__datediff"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1756850323.0550654, "supported_languages": null}, "macro.dbt.default__datediff": {"name": "default__datediff", "resource_type": "macro", "package_name": "dbt", "path": "macros/utils/datediff.sql", "original_file_path": "macros/utils/datediff.sql", "unique_id": "macro.dbt.default__datediff", "macro_sql": "{% macro default__datediff(first_date, second_date, datepart) -%}\n\n    datediff(\n        {{ datepart }},\n        {{ first_date }},\n        {{ second_date }}\n        )\n\n{%- endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1756850323.0553908, "supported_languages": null}, "macro.dbt.string_literal": {"name": "string_literal", "resource_type": "macro", "package_name": "dbt", "path": "macros/utils/literal.sql", "original_file_path": "macros/utils/literal.sql", "unique_id": "macro.dbt.string_literal", "macro_sql": "{%- macro string_literal(value) -%}\n  {{ return(adapter.dispatch('string_literal', 'dbt') (value)) }}\n{%- endmacro -%}\n\n", "depends_on": {"macros": ["macro.dbt.default__string_literal"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1756850323.0558681, "supported_languages": null}, "macro.dbt.default__string_literal": {"name": "default__string_literal", "resource_type": "macro", "package_name": "dbt", "path": "macros/utils/literal.sql", "original_file_path": "macros/utils/literal.sql", "unique_id": "macro.dbt.default__string_literal", "macro_sql": "{% macro default__string_literal(value) -%}\n    '{{ value }}'\n{%- endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1756850323.056082, "supported_languages": null}, "macro.dbt.convert_datetime": {"name": "convert_datetime", "resource_type": "macro", "package_name": "dbt", "path": "macros/etc/datetime.sql", "original_file_path": "macros/etc/datetime.sql", "unique_id": "macro.dbt.convert_datetime", "macro_sql": "{% macro convert_datetime(date_str, date_fmt) %}\n\n  {% set error_msg -%}\n      The provided partition date '{{ date_str }}' does not match the expected format '{{ date_fmt }}'\n  {%- endset %}\n\n  {% set res = try_or_compiler_error(error_msg, modules.datetime.datetime.strptime, date_str.strip(), date_fmt) %}\n  {{ return(res) }}\n\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1756850323.057437, "supported_languages": null}, "macro.dbt.dates_in_range": {"name": "dates_in_range", "resource_type": "macro", "package_name": "dbt", "path": "macros/etc/datetime.sql", "original_file_path": "macros/etc/datetime.sql", "unique_id": "macro.dbt.dates_in_range", "macro_sql": "{% macro dates_in_range(start_date_str, end_date_str=none, in_fmt=\"%Y%m%d\", out_fmt=\"%Y%m%d\") %}\n    {% set end_date_str = start_date_str if end_date_str is none else end_date_str %}\n\n    {% set start_date = convert_datetime(start_date_str, in_fmt) %}\n    {% set end_date = convert_datetime(end_date_str, in_fmt) %}\n\n    {% set day_count = (end_date - start_date).days %}\n    {% if day_count < 0 %}\n        {% set msg -%}\n            Partition start date is after the end date ({{ start_date }}, {{ end_date }})\n        {%- endset %}\n\n        {{ exceptions.raise_compiler_error(msg, model) }}\n    {% endif %}\n\n    {% set date_list = [] %}\n    {% for i in range(0, day_count + 1) %}\n        {% set the_date = (modules.datetime.timedelta(days=i) + start_date) %}\n        {% if not out_fmt %}\n            {% set _ = date_list.append(the_date) %}\n        {% else %}\n            {% set _ = date_list.append(the_date.strftime(out_fmt)) %}\n        {% endif %}\n    {% endfor %}\n\n    {{ return(date_list) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.convert_datetime"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1756850323.059671, "supported_languages": null}, "macro.dbt.partition_range": {"name": "partition_range", "resource_type": "macro", "package_name": "dbt", "path": "macros/etc/datetime.sql", "original_file_path": "macros/etc/datetime.sql", "unique_id": "macro.dbt.partition_range", "macro_sql": "{% macro partition_range(raw_partition_date, date_fmt='%Y%m%d') %}\n    {% set partition_range = (raw_partition_date | string).split(\",\") %}\n\n    {% if (partition_range | length) == 1 %}\n      {% set start_date = partition_range[0] %}\n      {% set end_date = none %}\n    {% elif (partition_range | length) == 2 %}\n      {% set start_date = partition_range[0] %}\n      {% set end_date = partition_range[1] %}\n    {% else %}\n      {{ exceptions.raise_compiler_error(\"Invalid partition time. Expected format: {Start Date}[,{End Date}]. Got: \" ~ raw_partition_date) }}\n    {% endif %}\n\n    {{ return(dates_in_range(start_date, end_date, in_fmt=date_fmt)) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.dates_in_range"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1756850323.0611954, "supported_languages": null}, "macro.dbt.py_current_timestring": {"name": "py_current_timestring", "resource_type": "macro", "package_name": "dbt", "path": "macros/etc/datetime.sql", "original_file_path": "macros/etc/datetime.sql", "unique_id": "macro.dbt.py_current_timestring", "macro_sql": "{% macro py_current_timestring() %}\n    {% set dt = modules.datetime.datetime.now() %}\n    {% do return(dt.strftime(\"%Y%m%d%H%M%S%f\")) %}\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1756850323.0616374, "supported_languages": null}, "macro.dbt.statement": {"name": "statement", "resource_type": "macro", "package_name": "dbt", "path": "macros/etc/statement.sql", "original_file_path": "macros/etc/statement.sql", "unique_id": "macro.dbt.statement", "macro_sql": "\n{%- macro statement(name=None, fetch_result=False, auto_begin=True, language='sql') -%}\n  {%- if execute: -%}\n    {%- set compiled_code = caller() -%}\n\n    {%- if name == 'main' -%}\n      {{ log('Writing runtime {} for node \"{}\"'.format(language, model['unique_id'])) }}\n      {{ write(compiled_code) }}\n    {%- endif -%}\n    {%- if language == 'sql'-%}\n      {%- set res, table = adapter.execute(compiled_code, auto_begin=auto_begin, fetch=fetch_result) -%}\n    {%- elif language == 'python' -%}\n      {%- set res = submit_python_job(model, compiled_code) -%}\n      {#-- TODO: What should table be for python models? --#}\n      {%- set table = None -%}\n    {%- else -%}\n      {% do exceptions.raise_compiler_error(\"statement macro didn't get supported language\") %}\n    {%- endif -%}\n\n    {%- if name is not none -%}\n      {{ store_result(name, response=res, agate_table=table) }}\n    {%- endif -%}\n\n  {%- endif -%}\n{%- endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1756850323.0640838, "supported_languages": null}, "macro.dbt.noop_statement": {"name": "noop_statement", "resource_type": "macro", "package_name": "dbt", "path": "macros/etc/statement.sql", "original_file_path": "macros/etc/statement.sql", "unique_id": "macro.dbt.noop_statement", "macro_sql": "{% macro noop_statement(name=None, message=None, code=None, rows_affected=None, res=None) -%}\n  {%- set sql = caller() -%}\n\n  {%- if name == 'main' -%}\n    {{ log('Writing runtime SQL for node \"{}\"'.format(model['unique_id'])) }}\n    {{ write(sql) }}\n  {%- endif -%}\n\n  {%- if name is not none -%}\n    {{ store_raw_result(name, message=message, code=code, rows_affected=rows_affected, agate_table=res) }}\n  {%- endif -%}\n\n{%- endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1756850323.0651772, "supported_languages": null}, "macro.dbt.run_query": {"name": "run_query", "resource_type": "macro", "package_name": "dbt", "path": "macros/etc/statement.sql", "original_file_path": "macros/etc/statement.sql", "unique_id": "macro.dbt.run_query", "macro_sql": "{% macro run_query(sql) %}\n  {% call statement(\"run_query_statement\", fetch_result=true, auto_begin=false) %}\n    {{ sql }}\n  {% endcall %}\n\n  {% do return(load_result(\"run_query_statement\").table) %}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.statement"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1756850323.065728, "supported_languages": null}, "macro.dbt.default__test_not_null": {"name": "default__test_not_null", "resource_type": "macro", "package_name": "dbt", "path": "macros/generic_test_sql/not_null.sql", "original_file_path": "macros/generic_test_sql/not_null.sql", "unique_id": "macro.dbt.default__test_not_null", "macro_sql": "{% macro default__test_not_null(model, column_name) %}\n\n{% set column_list = '*' if should_store_failures() else column_name %}\n\nselect {{ column_list }}\nfrom {{ model }}\nwhere {{ column_name }} is null\n\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.should_store_failures"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1756850323.066314, "supported_languages": null}, "macro.dbt.default__test_accepted_values": {"name": "default__test_accepted_values", "resource_type": "macro", "package_name": "dbt", "path": "macros/generic_test_sql/accepted_values.sql", "original_file_path": "macros/generic_test_sql/accepted_values.sql", "unique_id": "macro.dbt.default__test_accepted_values", "macro_sql": "{% macro default__test_accepted_values(model, column_name, values, quote=True) %}\n\nwith all_values as (\n\n    select\n        {{ column_name }} as value_field,\n        count(*) as n_records\n\n    from {{ model }}\n    group by {{ column_name }}\n\n)\n\nselect *\nfrom all_values\nwhere value_field not in (\n    {% for value in values -%}\n        {% if quote -%}\n        '{{ value }}'\n        {%- else -%}\n        {{ value }}\n        {%- endif -%}\n        {%- if not loop.last -%},{%- endif %}\n    {%- endfor %}\n)\n\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1756850323.0673113, "supported_languages": null}, "macro.dbt.default__test_unique": {"name": "default__test_unique", "resource_type": "macro", "package_name": "dbt", "path": "macros/generic_test_sql/unique.sql", "original_file_path": "macros/generic_test_sql/unique.sql", "unique_id": "macro.dbt.default__test_unique", "macro_sql": "{% macro default__test_unique(model, column_name) %}\n\nselect\n    {{ column_name }} as unique_field,\n    count(*) as n_records\n\nfrom {{ model }}\nwhere {{ column_name }} is not null\ngroup by {{ column_name }}\nhaving count(*) > 1\n\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1756850323.0677586, "supported_languages": null}, "macro.dbt.default__test_relationships": {"name": "default__test_relationships", "resource_type": "macro", "package_name": "dbt", "path": "macros/generic_test_sql/relationships.sql", "original_file_path": "macros/generic_test_sql/relationships.sql", "unique_id": "macro.dbt.default__test_relationships", "macro_sql": "{% macro default__test_relationships(model, column_name, to, field) %}\n\nwith child as (\n    select {{ column_name }} as from_field\n    from {{ model }}\n    where {{ column_name }} is not null\n),\n\nparent as (\n    select {{ field }} as to_field\n    from {{ to }}\n)\n\nselect\n    from_field\n\nfrom child\nleft join parent\n    on child.from_field = parent.to_field\n\nwhere parent.to_field is null\n\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1756850323.068317, "supported_languages": null}, "macro.dbt.run_hooks": {"name": "run_hooks", "resource_type": "macro", "package_name": "dbt", "path": "macros/materializations/hooks.sql", "original_file_path": "macros/materializations/hooks.sql", "unique_id": "macro.dbt.run_hooks", "macro_sql": "{% macro run_hooks(hooks, inside_transaction=True) %}\n  {% for hook in hooks | selectattr('transaction', 'equalto', inside_transaction)  %}\n    {% if not inside_transaction and loop.first %}\n      {% call statement(auto_begin=inside_transaction) %}\n        commit;\n      {% endcall %}\n    {% endif %}\n    {% set rendered = render(hook.get('sql')) | trim %}\n    {% if (rendered | length) > 0 %}\n      {% call statement(auto_begin=inside_transaction) %}\n        {{ rendered }}\n      {% endcall %}\n    {% endif %}\n  {% endfor %}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.statement"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1756850323.0699446, "supported_languages": null}, "macro.dbt.make_hook_config": {"name": "make_hook_config", "resource_type": "macro", "package_name": "dbt", "path": "macros/materializations/hooks.sql", "original_file_path": "macros/materializations/hooks.sql", "unique_id": "macro.dbt.make_hook_config", "macro_sql": "{% macro make_hook_config(sql, inside_transaction) %}\n    {{ tojson({\"sql\": sql, \"transaction\": inside_transaction}) }}\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1756850323.0703235, "supported_languages": null}, "macro.dbt.before_begin": {"name": "before_begin", "resource_type": "macro", "package_name": "dbt", "path": "macros/materializations/hooks.sql", "original_file_path": "macros/materializations/hooks.sql", "unique_id": "macro.dbt.before_begin", "macro_sql": "{% macro before_begin(sql) %}\n    {{ make_hook_config(sql, inside_transaction=False) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.make_hook_config"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1756850323.0706072, "supported_languages": null}, "macro.dbt.in_transaction": {"name": "in_transaction", "resource_type": "macro", "package_name": "dbt", "path": "macros/materializations/hooks.sql", "original_file_path": "macros/materializations/hooks.sql", "unique_id": "macro.dbt.in_transaction", "macro_sql": "{% macro in_transaction(sql) %}\n    {{ make_hook_config(sql, inside_transaction=True) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.make_hook_config"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1756850323.0709023, "supported_languages": null}, "macro.dbt.after_commit": {"name": "after_commit", "resource_type": "macro", "package_name": "dbt", "path": "macros/materializations/hooks.sql", "original_file_path": "macros/materializations/hooks.sql", "unique_id": "macro.dbt.after_commit", "macro_sql": "{% macro after_commit(sql) %}\n    {{ make_hook_config(sql, inside_transaction=False) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.make_hook_config"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1756850323.0711818, "supported_languages": null}, "macro.dbt.set_sql_header": {"name": "set_sql_header", "resource_type": "macro", "package_name": "dbt", "path": "macros/materializations/configs.sql", "original_file_path": "macros/materializations/configs.sql", "unique_id": "macro.dbt.set_sql_header", "macro_sql": "{% macro set_sql_header(config) -%}\n  {{ config.set('sql_header', caller()) }}\n{%- endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1756850323.0717328, "supported_languages": null}, "macro.dbt.should_full_refresh": {"name": "should_full_refresh", "resource_type": "macro", "package_name": "dbt", "path": "macros/materializations/configs.sql", "original_file_path": "macros/materializations/configs.sql", "unique_id": "macro.dbt.should_full_refresh", "macro_sql": "{% macro should_full_refresh() %}\n  {% set config_full_refresh = config.get('full_refresh') %}\n  {% if config_full_refresh is none %}\n    {% set config_full_refresh = flags.FULL_REFRESH %}\n  {% endif %}\n  {% do return(config_full_refresh) %}\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1756850323.072337, "supported_languages": null}, "macro.dbt.should_store_failures": {"name": "should_store_failures", "resource_type": "macro", "package_name": "dbt", "path": "macros/materializations/configs.sql", "original_file_path": "macros/materializations/configs.sql", "unique_id": "macro.dbt.should_store_failures", "macro_sql": "{% macro should_store_failures() %}\n  {% set config_store_failures = config.get('store_failures') %}\n  {% if config_store_failures is none %}\n    {% set config_store_failures = flags.STORE_FAILURES %}\n  {% endif %}\n  {% do return(config_store_failures) %}\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1756850323.0729375, "supported_languages": null}, "macro.dbt.snapshot_merge_sql": {"name": "snapshot_merge_sql", "resource_type": "macro", "package_name": "dbt", "path": "macros/materializations/snapshots/snapshot_merge.sql", "original_file_path": "macros/materializations/snapshots/snapshot_merge.sql", "unique_id": "macro.dbt.snapshot_merge_sql", "macro_sql": "{% macro snapshot_merge_sql(target, source, insert_cols) -%}\n  {{ adapter.dispatch('snapshot_merge_sql', 'dbt')(target, source, insert_cols) }}\n{%- endmacro %}", "depends_on": {"macros": ["macro.dbt_postgres.postgres__snapshot_merge_sql"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1756850323.0737126, "supported_languages": null}, "macro.dbt.default__snapshot_merge_sql": {"name": "default__snapshot_merge_sql", "resource_type": "macro", "package_name": "dbt", "path": "macros/materializations/snapshots/snapshot_merge.sql", "original_file_path": "macros/materializations/snapshots/snapshot_merge.sql", "unique_id": "macro.dbt.default__snapshot_merge_sql", "macro_sql": "{% macro default__snapshot_merge_sql(target, source, insert_cols) -%}\n    {%- set insert_cols_csv = insert_cols | join(', ') -%}\n\n    {%- set columns = config.get(\"snapshot_table_column_names\") or get_snapshot_table_column_names() -%}\n\n    merge into {{ target.render() }} as DBT_INTERNAL_DEST\n    using {{ source }} as DBT_INTERNAL_SOURCE\n    on DBT_INTERNAL_SOURCE.{{ columns.dbt_scd_id }} = DBT_INTERNAL_DEST.{{ columns.dbt_scd_id }}\n\n    when matched\n     {% if config.get(\"dbt_valid_to_current\") %}\n\t{% set source_unique_key = (\"DBT_INTERNAL_DEST.\" ~ columns.dbt_valid_to) | trim %}\n\t{% set target_unique_key = config.get('dbt_valid_to_current') | trim %}\n\tand ({{ equals(source_unique_key, target_unique_key) }} or {{ source_unique_key }} is null)\n\n     {% else %}\n       and DBT_INTERNAL_DEST.{{ columns.dbt_valid_to }} is null\n     {% endif %}\n     and DBT_INTERNAL_SOURCE.dbt_change_type in ('update', 'delete')\n        then update\n        set {{ columns.dbt_valid_to }} = DBT_INTERNAL_SOURCE.{{ columns.dbt_valid_to }}\n\n    when not matched\n     and DBT_INTERNAL_SOURCE.dbt_change_type = 'insert'\n        then insert ({{ insert_cols_csv }})\n        values ({{ insert_cols_csv }})\n\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.get_snapshot_table_column_names", "macro.dbt.equals"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1756850323.0755165, "supported_languages": null}, "macro.dbt.materialization_snapshot_default": {"name": "materialization_snapshot_default", "resource_type": "macro", "package_name": "dbt", "path": "macros/materializations/snapshots/snapshot.sql", "original_file_path": "macros/materializations/snapshots/snapshot.sql", "unique_id": "macro.dbt.materialization_snapshot_default", "macro_sql": "{% materialization snapshot, default %}\n\n  {%- set target_table = model.get('alias', model.get('name')) -%}\n\n  {%- set strategy_name = config.get('strategy') -%}\n  {%- set unique_key = config.get('unique_key') %}\n  -- grab current tables grants config for comparision later on\n  {%- set grant_config = config.get('grants') -%}\n\n  {% set target_relation_exists, target_relation = get_or_create_relation(\n          database=model.database,\n          schema=model.schema,\n          identifier=target_table,\n          type='table') -%}\n\n  {%- if not target_relation.is_table -%}\n    {% do exceptions.relation_wrong_type(target_relation, 'table') %}\n  {%- endif -%}\n\n\n  {{ run_hooks(pre_hooks, inside_transaction=False) }}\n\n  {{ run_hooks(pre_hooks, inside_transaction=True) }}\n\n  {% set strategy_macro = strategy_dispatch(strategy_name) %}\n  {# The model['config'] parameter below is no longer used, but passing anyway for compatibility #}\n  {# It was a dictionary of config, instead of the config object from the context #}\n  {% set strategy = strategy_macro(model, \"snapshotted_data\", \"source_data\", model['config'], target_relation_exists) %}\n\n  {% if not target_relation_exists %}\n\n      {% set build_sql = build_snapshot_table(strategy, model['compiled_code']) %}\n      {% set build_or_select_sql = build_sql %}\n      {% set final_sql = create_table_as(False, target_relation, build_sql) %}\n\n  {% else %}\n\n      {% set columns = config.get(\"snapshot_table_column_names\") or get_snapshot_table_column_names() %}\n\n      {{ adapter.assert_valid_snapshot_target_given_strategy(target_relation, columns, strategy) }}\n\n      {% set build_or_select_sql = snapshot_staging_table(strategy, sql, target_relation) %}\n      {% set staging_table = build_snapshot_staging_table(strategy, sql, target_relation) %}\n\n      -- this may no-op if the database does not require column expansion\n      {% do adapter.expand_target_column_types(from_relation=staging_table,\n                                               to_relation=target_relation) %}\n\n      {% set remove_columns = ['dbt_change_type', 'DBT_CHANGE_TYPE', 'dbt_unique_key', 'DBT_UNIQUE_KEY'] %}\n      {% if unique_key | is_list %}\n          {% for key in strategy.unique_key %}\n              {{ remove_columns.append('dbt_unique_key_' + loop.index|string) }}\n              {{ remove_columns.append('DBT_UNIQUE_KEY_' + loop.index|string) }}\n          {% endfor %}\n      {% endif %}\n\n      {% set missing_columns = adapter.get_missing_columns(staging_table, target_relation)\n                                   | rejectattr('name', 'in', remove_columns)\n                                   | list %}\n\n      {% do create_columns(target_relation, missing_columns) %}\n\n      {% set source_columns = adapter.get_columns_in_relation(staging_table)\n                                   | rejectattr('name', 'in', remove_columns)\n                                   | list %}\n\n      {% set quoted_source_columns = [] %}\n      {% for column in source_columns %}\n        {% do quoted_source_columns.append(adapter.quote(column.name)) %}\n      {% endfor %}\n\n      {% set final_sql = snapshot_merge_sql(\n            target = target_relation,\n            source = staging_table,\n            insert_cols = quoted_source_columns\n         )\n      %}\n\n  {% endif %}\n\n\n  {{ check_time_data_types(build_or_select_sql) }}\n\n  {% call statement('main') %}\n      {{ final_sql }}\n  {% endcall %}\n\n  {% set should_revoke = should_revoke(target_relation_exists, full_refresh_mode=False) %}\n  {% do apply_grants(target_relation, grant_config, should_revoke=should_revoke) %}\n\n  {% do persist_docs(target_relation, model) %}\n\n  {% if not target_relation_exists %}\n    {% do create_indexes(target_relation) %}\n  {% endif %}\n\n  {{ run_hooks(post_hooks, inside_transaction=True) }}\n\n  {{ adapter.commit() }}\n\n  {% if staging_table is defined %}\n      {% do post_snapshot(staging_table) %}\n  {% endif %}\n\n  {{ run_hooks(post_hooks, inside_transaction=False) }}\n\n  {{ return({'relations': [target_relation]}) }}\n\n{% endmaterialization %}", "depends_on": {"macros": ["macro.dbt.get_or_create_relation", "macro.dbt.run_hooks", "macro.dbt.strategy_dispatch", "macro.dbt.build_snapshot_table", "macro.dbt.create_table_as", "macro.dbt.get_snapshot_table_column_names", "macro.dbt.snapshot_staging_table", "macro.dbt.build_snapshot_staging_table", "macro.dbt.create_columns", "macro.dbt.snapshot_merge_sql", "macro.dbt.check_time_data_types", "macro.dbt.statement", "macro.dbt.should_revoke", "macro.dbt.apply_grants", "macro.dbt.persist_docs", "macro.dbt.create_indexes", "macro.dbt.post_snapshot"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1756850323.083279, "supported_languages": ["sql"]}, "macro.dbt.strategy_dispatch": {"name": "strategy_dispatch", "resource_type": "macro", "package_name": "dbt", "path": "macros/materializations/snapshots/strategies.sql", "original_file_path": "macros/materializations/snapshots/strategies.sql", "unique_id": "macro.dbt.strategy_dispatch", "macro_sql": "{% macro strategy_dispatch(name) -%}\n{% set original_name = name %}\n  {% if '.' in name %}\n    {% set package_name, name = name.split(\".\", 1) %}\n  {% else %}\n    {% set package_name = none %}\n  {% endif %}\n\n  {% if package_name is none %}\n    {% set package_context = context %}\n  {% elif package_name in context %}\n    {% set package_context = context[package_name] %}\n  {% else %}\n    {% set error_msg %}\n        Could not find package '{{package_name}}', called with '{{original_name}}'\n    {% endset %}\n    {{ exceptions.raise_compiler_error(error_msg | trim) }}\n  {% endif %}\n\n  {%- set search_name = 'snapshot_' ~ name ~ '_strategy' -%}\n\n  {% if search_name not in package_context %}\n    {% set error_msg %}\n        The specified strategy macro '{{name}}' was not found in package '{{ package_name }}'\n    {% endset %}\n    {{ exceptions.raise_compiler_error(error_msg | trim) }}\n  {% endif %}\n  {{ return(package_context[search_name]) }}\n{%- endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1756850323.0872595, "supported_languages": null}, "macro.dbt.snapshot_hash_arguments": {"name": "snapshot_hash_arguments", "resource_type": "macro", "package_name": "dbt", "path": "macros/materializations/snapshots/strategies.sql", "original_file_path": "macros/materializations/snapshots/strategies.sql", "unique_id": "macro.dbt.snapshot_hash_arguments", "macro_sql": "{% macro snapshot_hash_arguments(args) -%}\n  {{ adapter.dispatch('snapshot_hash_arguments', 'dbt')(args) }}\n{%- endmacro %}", "depends_on": {"macros": ["macro.dbt.default__snapshot_hash_arguments"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1756850323.0875974, "supported_languages": null}, "macro.dbt.default__snapshot_hash_arguments": {"name": "default__snapshot_hash_arguments", "resource_type": "macro", "package_name": "dbt", "path": "macros/materializations/snapshots/strategies.sql", "original_file_path": "macros/materializations/snapshots/strategies.sql", "unique_id": "macro.dbt.default__snapshot_hash_arguments", "macro_sql": "{% macro default__snapshot_hash_arguments(args) -%}\n    md5({%- for arg in args -%}\n        coalesce(cast({{ arg }} as varchar ), '')\n        {% if not loop.last %} || '|' || {% endif %}\n    {%- endfor -%})\n{%- endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1756850323.0880523, "supported_languages": null}, "macro.dbt.snapshot_timestamp_strategy": {"name": "snapshot_timestamp_strategy", "resource_type": "macro", "package_name": "dbt", "path": "macros/materializations/snapshots/strategies.sql", "original_file_path": "macros/materializations/snapshots/strategies.sql", "unique_id": "macro.dbt.snapshot_timestamp_strategy", "macro_sql": "{% macro snapshot_timestamp_strategy(node, snapshotted_rel, current_rel, model_config, target_exists) %}\n    {# The model_config parameter is no longer used, but is passed in anyway for compatibility. #}\n    {% set primary_key = config.get('unique_key') %}\n    {% set updated_at = config.get('updated_at') %}\n    {% set hard_deletes = adapter.get_hard_deletes_behavior(config) %}\n    {% set invalidate_hard_deletes = hard_deletes == 'invalidate' %}\n    {% set columns = config.get(\"snapshot_table_column_names\") or get_snapshot_table_column_names() %}\n\n    {#/*\n        The snapshot relation might not have an {{ updated_at }} value if the\n        snapshot strategy is changed from `check` to `timestamp`. We\n        should use a dbt-created column for the comparison in the snapshot\n        table instead of assuming that the user-supplied {{ updated_at }}\n        will be present in the historical data.\n\n        See https://github.com/dbt-labs/dbt-core/issues/2350\n    */ #}\n    {% set row_changed_expr -%}\n        ({{ snapshotted_rel }}.{{ columns.dbt_valid_from }} < {{ current_rel }}.{{ updated_at }})\n    {%- endset %}\n\n    {% set scd_args = api.Relation.scd_args(primary_key, updated_at) %}\n    {% set scd_id_expr = snapshot_hash_arguments(scd_args) %}\n\n    {% do return({\n        \"unique_key\": primary_key,\n        \"updated_at\": updated_at,\n        \"row_changed\": row_changed_expr,\n        \"scd_id\": scd_id_expr,\n        \"invalidate_hard_deletes\": invalidate_hard_deletes,\n        \"hard_deletes\": hard_deletes\n    }) %}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.get_snapshot_table_column_names", "macro.dbt.snapshot_hash_arguments"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1756850323.0899234, "supported_languages": null}, "macro.dbt.snapshot_string_as_time": {"name": "snapshot_string_as_time", "resource_type": "macro", "package_name": "dbt", "path": "macros/materializations/snapshots/strategies.sql", "original_file_path": "macros/materializations/snapshots/strategies.sql", "unique_id": "macro.dbt.snapshot_string_as_time", "macro_sql": "{% macro snapshot_string_as_time(timestamp) -%}\n    {{ adapter.dispatch('snapshot_string_as_time', 'dbt')(timestamp) }}\n{%- endmacro %}", "depends_on": {"macros": ["macro.dbt_postgres.postgres__snapshot_string_as_time"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1756850323.0902467, "supported_languages": null}, "macro.dbt.default__snapshot_string_as_time": {"name": "default__snapshot_string_as_time", "resource_type": "macro", "package_name": "dbt", "path": "macros/materializations/snapshots/strategies.sql", "original_file_path": "macros/materializations/snapshots/strategies.sql", "unique_id": "macro.dbt.default__snapshot_string_as_time", "macro_sql": "{% macro default__snapshot_string_as_time(timestamp) %}\n    {% do exceptions.raise_not_implemented(\n        'snapshot_string_as_time macro not implemented for adapter '+adapter.type()\n    ) %}\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1756850323.0905728, "supported_languages": null}, "macro.dbt.snapshot_check_all_get_existing_columns": {"name": "snapshot_check_all_get_existing_columns", "resource_type": "macro", "package_name": "dbt", "path": "macros/materializations/snapshots/strategies.sql", "original_file_path": "macros/materializations/snapshots/strategies.sql", "unique_id": "macro.dbt.snapshot_check_all_get_existing_columns", "macro_sql": "{% macro snapshot_check_all_get_existing_columns(node, target_exists, check_cols_config) -%}\n    {%- if not target_exists -%}\n        {#-- no table yet -> return whatever the query does --#}\n        {{ return((false, query_columns)) }}\n    {%- endif -%}\n\n    {#-- handle any schema changes --#}\n    {%- set target_relation = adapter.get_relation(database=node.database, schema=node.schema, identifier=node.alias) -%}\n\n    {% if check_cols_config == 'all' %}\n        {%- set query_columns = get_columns_in_query(node['compiled_code']) -%}\n\n    {% elif check_cols_config is iterable and (check_cols_config | length) > 0 %}\n        {#-- query for proper casing/quoting, to support comparison below --#}\n        {%- set select_check_cols_from_target -%}\n            {#-- N.B. The whitespace below is necessary to avoid edge case issue with comments --#}\n            {#-- See: https://github.com/dbt-labs/dbt-core/issues/6781 --#}\n            select {{ check_cols_config | join(', ') }} from (\n                {{ node['compiled_code'] }}\n            ) subq\n        {%- endset -%}\n        {% set query_columns = get_columns_in_query(select_check_cols_from_target) %}\n\n    {% else %}\n        {% do exceptions.raise_compiler_error(\"Invalid value for 'check_cols': \" ~ check_cols_config) %}\n    {% endif %}\n\n    {%- set existing_cols = adapter.get_columns_in_relation(target_relation) | map(attribute = 'name') | list -%}\n    {%- set ns = namespace() -%} {#-- handle for-loop scoping with a namespace --#}\n    {%- set ns.column_added = false -%}\n\n    {%- set intersection = [] -%}\n    {%- for col in query_columns -%}\n        {%- if col in existing_cols -%}\n            {%- do intersection.append(adapter.quote(col)) -%}\n        {%- else -%}\n            {% set ns.column_added = true %}\n        {%- endif -%}\n    {%- endfor -%}\n    {{ return((ns.column_added, intersection)) }}\n{%- endmacro %}", "depends_on": {"macros": ["macro.dbt.get_columns_in_query"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1756850323.0932546, "supported_languages": null}, "macro.dbt.snapshot_check_strategy": {"name": "snapshot_check_strategy", "resource_type": "macro", "package_name": "dbt", "path": "macros/materializations/snapshots/strategies.sql", "original_file_path": "macros/materializations/snapshots/strategies.sql", "unique_id": "macro.dbt.snapshot_check_strategy", "macro_sql": "{% macro snapshot_check_strategy(node, snapshotted_rel, current_rel, model_config, target_exists) %}\n    {# The model_config parameter is no longer used, but is passed in anyway for compatibility. #}\n    {% set check_cols_config = config.get('check_cols') %}\n    {% set primary_key = config.get('unique_key') %}\n    {% set hard_deletes = adapter.get_hard_deletes_behavior(config) %}\n    {% set invalidate_hard_deletes = hard_deletes == 'invalidate' %}\n    {% set updated_at = config.get('updated_at') or snapshot_get_time() %}\n\n    {% set column_added = false %}\n\n    {% set column_added, check_cols = snapshot_check_all_get_existing_columns(node, target_exists, check_cols_config) %}\n\n    {%- set row_changed_expr -%}\n    (\n    {%- if column_added -%}\n        {{ get_true_sql() }}\n    {%- else -%}\n    {%- for col in check_cols -%}\n        {{ snapshotted_rel }}.{{ col }} != {{ current_rel }}.{{ col }}\n        or\n        (\n            (({{ snapshotted_rel }}.{{ col }} is null) and not ({{ current_rel }}.{{ col }} is null))\n            or\n            ((not {{ snapshotted_rel }}.{{ col }} is null) and ({{ current_rel }}.{{ col }} is null))\n        )\n        {%- if not loop.last %} or {% endif -%}\n    {%- endfor -%}\n    {%- endif -%}\n    )\n    {%- endset %}\n\n    {% set scd_args = api.Relation.scd_args(primary_key, updated_at) %}\n    {% set scd_id_expr = snapshot_hash_arguments(scd_args) %}\n\n    {% do return({\n        \"unique_key\": primary_key,\n        \"updated_at\": updated_at,\n        \"row_changed\": row_changed_expr,\n        \"scd_id\": scd_id_expr,\n        \"invalidate_hard_deletes\": invalidate_hard_deletes,\n        \"hard_deletes\": hard_deletes\n    }) %}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.snapshot_get_time", "macro.dbt.snapshot_check_all_get_existing_columns", "macro.dbt.get_true_sql", "macro.dbt.snapshot_hash_arguments"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1756850323.0961134, "supported_languages": null}, "macro.dbt.create_columns": {"name": "create_columns", "resource_type": "macro", "package_name": "dbt", "path": "macros/materializations/snapshots/helpers.sql", "original_file_path": "macros/materializations/snapshots/helpers.sql", "unique_id": "macro.dbt.create_columns", "macro_sql": "{% macro create_columns(relation, columns) %}\n  {{ adapter.dispatch('create_columns', 'dbt')(relation, columns) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.default__create_columns"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1756850323.0999148, "supported_languages": null}, "macro.dbt.default__create_columns": {"name": "default__create_columns", "resource_type": "macro", "package_name": "dbt", "path": "macros/materializations/snapshots/helpers.sql", "original_file_path": "macros/materializations/snapshots/helpers.sql", "unique_id": "macro.dbt.default__create_columns", "macro_sql": "{% macro default__create_columns(relation, columns) %}\n  {% for column in columns %}\n    {% call statement() %}\n      alter table {{ relation.render() }} add column {{ adapter.quote(column.name) }} {{ column.data_type }};\n    {% endcall %}\n  {% endfor %}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.statement"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1756850323.1005392, "supported_languages": null}, "macro.dbt.post_snapshot": {"name": "post_snapshot", "resource_type": "macro", "package_name": "dbt", "path": "macros/materializations/snapshots/helpers.sql", "original_file_path": "macros/materializations/snapshots/helpers.sql", "unique_id": "macro.dbt.post_snapshot", "macro_sql": "{% macro post_snapshot(staging_relation) %}\n  {{ adapter.dispatch('post_snapshot', 'dbt')(staging_relation) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.default__post_snapshot"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1756850323.1008832, "supported_languages": null}, "macro.dbt.default__post_snapshot": {"name": "default__post_snapshot", "resource_type": "macro", "package_name": "dbt", "path": "macros/materializations/snapshots/helpers.sql", "original_file_path": "macros/materializations/snapshots/helpers.sql", "unique_id": "macro.dbt.default__post_snapshot", "macro_sql": "{% macro default__post_snapshot(staging_relation) %}\n    {# no-op #}\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1756850323.1010673, "supported_languages": null}, "macro.dbt.get_true_sql": {"name": "get_true_sql", "resource_type": "macro", "package_name": "dbt", "path": "macros/materializations/snapshots/helpers.sql", "original_file_path": "macros/materializations/snapshots/helpers.sql", "unique_id": "macro.dbt.get_true_sql", "macro_sql": "{% macro get_true_sql() %}\n  {{ adapter.dispatch('get_true_sql', 'dbt')() }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.default__get_true_sql"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1756850323.1013525, "supported_languages": null}, "macro.dbt.default__get_true_sql": {"name": "default__get_true_sql", "resource_type": "macro", "package_name": "dbt", "path": "macros/materializations/snapshots/helpers.sql", "original_file_path": "macros/materializations/snapshots/helpers.sql", "unique_id": "macro.dbt.default__get_true_sql", "macro_sql": "{% macro default__get_true_sql() %}\n    {{ return('TRUE') }}\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1756850323.1015856, "supported_languages": null}, "macro.dbt.snapshot_staging_table": {"name": "snapshot_staging_table", "resource_type": "macro", "package_name": "dbt", "path": "macros/materializations/snapshots/helpers.sql", "original_file_path": "macros/materializations/snapshots/helpers.sql", "unique_id": "macro.dbt.snapshot_staging_table", "macro_sql": "{% macro snapshot_staging_table(strategy, source_sql, target_relation) -%}\n  {{ adapter.dispatch('snapshot_staging_table', 'dbt')(strategy, source_sql, target_relation) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.default__snapshot_staging_table"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1756850323.1019967, "supported_languages": null}, "macro.dbt.get_snapshot_table_column_names": {"name": "get_snapshot_table_column_names", "resource_type": "macro", "package_name": "dbt", "path": "macros/materializations/snapshots/helpers.sql", "original_file_path": "macros/materializations/snapshots/helpers.sql", "unique_id": "macro.dbt.get_snapshot_table_column_names", "macro_sql": "{% macro get_snapshot_table_column_names() %}\n    {{ return({'dbt_valid_to': 'dbt_valid_to', 'dbt_valid_from': 'dbt_valid_from', 'dbt_scd_id': 'dbt_scd_id', 'dbt_updated_at': 'dbt_updated_at', 'dbt_is_deleted': 'dbt_is_deleted'}) }}\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1756850323.102469, "supported_languages": null}, "macro.dbt.default__snapshot_staging_table": {"name": "default__snapshot_staging_table", "resource_type": "macro", "package_name": "dbt", "path": "macros/materializations/snapshots/helpers.sql", "original_file_path": "macros/materializations/snapshots/helpers.sql", "unique_id": "macro.dbt.default__snapshot_staging_table", "macro_sql": "{% macro default__snapshot_staging_table(strategy, source_sql, target_relation) -%}\n    {% set columns = config.get('snapshot_table_column_names') or get_snapshot_table_column_names() %}\n    {% if strategy.hard_deletes == 'new_record' %}\n        {% set new_scd_id = snapshot_hash_arguments([columns.dbt_scd_id, snapshot_get_time()]) %}\n    {% endif %}\n    with snapshot_query as (\n\n        {{ source_sql }}\n\n    ),\n\n    snapshotted_data as (\n\n        select *, {{ unique_key_fields(strategy.unique_key) }}\n        from {{ target_relation }}\n        where\n            {% if config.get('dbt_valid_to_current') %}\n\t\t{% set source_unique_key = columns.dbt_valid_to | trim %}\n\t\t{% set target_unique_key = config.get('dbt_valid_to_current') | trim %}\n\n\t\t{# The exact equals semantics between NULL values depends on the current behavior flag set. Also, update records if the source field is null #}\n                ( {{ equals(source_unique_key, target_unique_key) }} or {{ source_unique_key }} is null )\n            {% else %}\n                {{ columns.dbt_valid_to }} is null\n            {% endif %}\n\n    ),\n\n    insertions_source_data as (\n\n        select *, {{ unique_key_fields(strategy.unique_key) }},\n            {{ strategy.updated_at }} as {{ columns.dbt_updated_at }},\n            {{ strategy.updated_at }} as {{ columns.dbt_valid_from }},\n            {{ get_dbt_valid_to_current(strategy, columns) }},\n            {{ strategy.scd_id }} as {{ columns.dbt_scd_id }}\n\n        from snapshot_query\n    ),\n\n    updates_source_data as (\n\n        select *, {{ unique_key_fields(strategy.unique_key) }},\n            {{ strategy.updated_at }} as {{ columns.dbt_updated_at }},\n            {{ strategy.updated_at }} as {{ columns.dbt_valid_from }},\n            {{ strategy.updated_at }} as {{ columns.dbt_valid_to }}\n\n        from snapshot_query\n    ),\n\n    {%- if strategy.hard_deletes == 'invalidate' or strategy.hard_deletes == 'new_record' %}\n\n    deletes_source_data as (\n\n        select *, {{ unique_key_fields(strategy.unique_key) }}\n        from snapshot_query\n    ),\n    {% endif %}\n\n    insertions as (\n\n        select\n            'insert' as dbt_change_type,\n            source_data.*\n          {%- if strategy.hard_deletes == 'new_record' -%}\n            ,'False' as {{ columns.dbt_is_deleted }}\n          {%- endif %}\n\n        from insertions_source_data as source_data\n        left outer join snapshotted_data\n            on {{ unique_key_join_on(strategy.unique_key, \"snapshotted_data\", \"source_data\") }}\n            where {{ unique_key_is_null(strategy.unique_key, \"snapshotted_data\") }}\n            or ({{ unique_key_is_not_null(strategy.unique_key, \"snapshotted_data\") }} and (\n               {{ strategy.row_changed }} {%- if strategy.hard_deletes == 'new_record' -%} or snapshotted_data.{{ columns.dbt_is_deleted }} = 'True' {% endif %}\n            )\n\n        )\n\n    ),\n\n    updates as (\n\n        select\n            'update' as dbt_change_type,\n            source_data.*,\n            snapshotted_data.{{ columns.dbt_scd_id }}\n          {%- if strategy.hard_deletes == 'new_record' -%}\n            , snapshotted_data.{{ columns.dbt_is_deleted }}\n          {%- endif %}\n\n        from updates_source_data as source_data\n        join snapshotted_data\n            on {{ unique_key_join_on(strategy.unique_key, \"snapshotted_data\", \"source_data\") }}\n        where (\n            {{ strategy.row_changed }}  {%- if strategy.hard_deletes == 'new_record' -%} or snapshotted_data.{{ columns.dbt_is_deleted }} = 'True' {% endif %}\n        )\n    )\n\n    {%- if strategy.hard_deletes == 'invalidate' or strategy.hard_deletes == 'new_record' %}\n    ,\n    deletes as (\n\n        select\n            'delete' as dbt_change_type,\n            source_data.*,\n            {{ snapshot_get_time() }} as {{ columns.dbt_valid_from }},\n            {{ snapshot_get_time() }} as {{ columns.dbt_updated_at }},\n            {{ snapshot_get_time() }} as {{ columns.dbt_valid_to }},\n            snapshotted_data.{{ columns.dbt_scd_id }}\n          {%- if strategy.hard_deletes == 'new_record' -%}\n            , snapshotted_data.{{ columns.dbt_is_deleted }}\n          {%- endif %}\n        from snapshotted_data\n        left join deletes_source_data as source_data\n            on {{ unique_key_join_on(strategy.unique_key, \"snapshotted_data\", \"source_data\") }}\n            where {{ unique_key_is_null(strategy.unique_key, \"source_data\") }}\n\n            {%- if strategy.hard_deletes == 'new_record' %}\n            and not (\n                --avoid updating the record's valid_to if the latest entry is marked as deleted\n                snapshotted_data.{{ columns.dbt_is_deleted }} = 'True'\n                and snapshotted_data.{{ columns.dbt_valid_to }} is null\n            )\n            {%- endif %}\n    )\n    {%- endif %}\n\n    {%- if strategy.hard_deletes == 'new_record' %}\n        {% set snapshotted_cols = get_list_of_column_names(get_columns_in_relation(target_relation)) %}\n        {% set source_sql_cols = get_column_schema_from_query(source_sql) %}\n    ,\n    deletion_records as (\n\n        select\n            'insert' as dbt_change_type,\n            {#\n                If a column has been added to the source it won't yet exist in the\n                snapshotted table so we insert a null value as a placeholder for the column.\n             #}\n            {%- for col in source_sql_cols -%}\n            {%- if col.name in snapshotted_cols -%}\n            snapshotted_data.{{ adapter.quote(col.column) }},\n            {%- else -%}\n            NULL as {{ adapter.quote(col.column) }},\n            {%- endif -%}\n            {% endfor -%}\n            {%- if strategy.unique_key | is_list -%}\n                {%- for key in strategy.unique_key -%}\n            snapshotted_data.{{ key }} as dbt_unique_key_{{ loop.index }},\n                {% endfor -%}\n            {%- else -%}\n            snapshotted_data.dbt_unique_key as dbt_unique_key,\n            {% endif -%}\n            {{ snapshot_get_time() }} as {{ columns.dbt_valid_from }},\n            {{ snapshot_get_time() }} as {{ columns.dbt_updated_at }},\n            snapshotted_data.{{ columns.dbt_valid_to }} as {{ columns.dbt_valid_to }},\n            {{ new_scd_id }} as {{ columns.dbt_scd_id }},\n            'True' as {{ columns.dbt_is_deleted }}\n        from snapshotted_data\n        left join deletes_source_data as source_data\n            on {{ unique_key_join_on(strategy.unique_key, \"snapshotted_data\", \"source_data\") }}\n        where {{ unique_key_is_null(strategy.unique_key, \"source_data\") }}\n        and not (\n            --avoid inserting a new record if the latest one is marked as deleted\n            snapshotted_data.{{ columns.dbt_is_deleted }} = 'True'\n            and snapshotted_data.{{ columns.dbt_valid_to }} is null\n            )\n\n    )\n    {%- endif %}\n\n    select * from insertions\n    union all\n    select * from updates\n    {%- if strategy.hard_deletes == 'invalidate' or strategy.hard_deletes == 'new_record' %}\n    union all\n    select * from deletes\n    {%- endif %}\n    {%- if strategy.hard_deletes == 'new_record' %}\n    union all\n    select * from deletion_records\n    {%- endif %}\n\n\n{%- endmacro %}", "depends_on": {"macros": ["macro.dbt.get_snapshot_table_column_names", "macro.dbt.snapshot_hash_arguments", "macro.dbt.snapshot_get_time", "macro.dbt.unique_key_fields", "macro.dbt.equals", "macro.dbt.get_dbt_valid_to_current", "macro.dbt.unique_key_join_on", "macro.dbt.unique_key_is_null", "macro.dbt.unique_key_is_not_null", "macro.dbt.get_list_of_column_names", "macro.dbt.get_columns_in_relation", "macro.dbt.get_column_schema_from_query"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1756850323.1103613, "supported_languages": null}, "macro.dbt.build_snapshot_table": {"name": "build_snapshot_table", "resource_type": "macro", "package_name": "dbt", "path": "macros/materializations/snapshots/helpers.sql", "original_file_path": "macros/materializations/snapshots/helpers.sql", "unique_id": "macro.dbt.build_snapshot_table", "macro_sql": "{% macro build_snapshot_table(strategy, sql) -%}\n  {{ adapter.dispatch('build_snapshot_table', 'dbt')(strategy, sql) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.default__build_snapshot_table"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1756850323.1107862, "supported_languages": null}, "macro.dbt.default__build_snapshot_table": {"name": "default__build_snapshot_table", "resource_type": "macro", "package_name": "dbt", "path": "macros/materializations/snapshots/helpers.sql", "original_file_path": "macros/materializations/snapshots/helpers.sql", "unique_id": "macro.dbt.default__build_snapshot_table", "macro_sql": "{% macro default__build_snapshot_table(strategy, sql) %}\n    {% set columns = config.get('snapshot_table_column_names') or get_snapshot_table_column_names() %}\n\n    select *,\n        {{ strategy.scd_id }} as {{ columns.dbt_scd_id }},\n        {{ strategy.updated_at }} as {{ columns.dbt_updated_at }},\n        {{ strategy.updated_at }} as {{ columns.dbt_valid_from }},\n        {{ get_dbt_valid_to_current(strategy, columns) }}\n      {%- if strategy.hard_deletes == 'new_record' -%}\n        , 'False' as {{ columns.dbt_is_deleted }}\n      {% endif -%}\n    from (\n        {{ sql }}\n    ) sbq\n\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.get_snapshot_table_column_names", "macro.dbt.get_dbt_valid_to_current"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1756850323.1117904, "supported_languages": null}, "macro.dbt.build_snapshot_staging_table": {"name": "build_snapshot_staging_table", "resource_type": "macro", "package_name": "dbt", "path": "macros/materializations/snapshots/helpers.sql", "original_file_path": "macros/materializations/snapshots/helpers.sql", "unique_id": "macro.dbt.build_snapshot_staging_table", "macro_sql": "{% macro build_snapshot_staging_table(strategy, sql, target_relation) %}\n    {% set temp_relation = make_temp_relation(target_relation) %}\n\n    {% set select = snapshot_staging_table(strategy, sql, target_relation) %}\n\n    {% call statement('build_snapshot_staging_relation') %}\n        {{ create_table_as(True, temp_relation, select) }}\n    {% endcall %}\n\n    {% do return(temp_relation) %}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.make_temp_relation", "macro.dbt.snapshot_staging_table", "macro.dbt.statement", "macro.dbt.create_table_as"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1756850323.1126497, "supported_languages": null}, "macro.dbt.get_updated_at_column_data_type": {"name": "get_updated_at_column_data_type", "resource_type": "macro", "package_name": "dbt", "path": "macros/materializations/snapshots/helpers.sql", "original_file_path": "macros/materializations/snapshots/helpers.sql", "unique_id": "macro.dbt.get_updated_at_column_data_type", "macro_sql": "{% macro get_updated_at_column_data_type(snapshot_sql) %}\n    {% set snapshot_sql_column_schema = get_column_schema_from_query(snapshot_sql) %}\n    {% set dbt_updated_at_data_type = null %}\n    {% set ns = namespace() -%} {#-- handle for-loop scoping with a namespace --#}\n    {% set ns.dbt_updated_at_data_type = null -%}\n    {% for column in snapshot_sql_column_schema %}\n    {%   if ((column.column == 'dbt_updated_at') or (column.column == 'DBT_UPDATED_AT')) %}\n    {%     set ns.dbt_updated_at_data_type = column.dtype %}\n    {%   endif %}\n    {% endfor %}\n    {{ return(ns.dbt_updated_at_data_type or none)  }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.get_column_schema_from_query"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1756850323.1138062, "supported_languages": null}, "macro.dbt.check_time_data_types": {"name": "check_time_data_types", "resource_type": "macro", "package_name": "dbt", "path": "macros/materializations/snapshots/helpers.sql", "original_file_path": "macros/materializations/snapshots/helpers.sql", "unique_id": "macro.dbt.check_time_data_types", "macro_sql": "{% macro check_time_data_types(sql) %}\n  {% set dbt_updated_at_data_type = get_updated_at_column_data_type(sql) %}\n  {% set snapshot_get_time_data_type = get_snapshot_get_time_data_type() %}\n  {% if snapshot_get_time_data_type is not none and dbt_updated_at_data_type is not none and snapshot_get_time_data_type != dbt_updated_at_data_type %}\n  {%   if exceptions.warn_snapshot_timestamp_data_types %}\n  {{     exceptions.warn_snapshot_timestamp_data_types(snapshot_get_time_data_type, dbt_updated_at_data_type) }}\n  {%   endif %}\n  {% endif %}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.get_updated_at_column_data_type", "macro.dbt.get_snapshot_get_time_data_type"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1756850323.114625, "supported_languages": null}, "macro.dbt.get_dbt_valid_to_current": {"name": "get_dbt_valid_to_current", "resource_type": "macro", "package_name": "dbt", "path": "macros/materializations/snapshots/helpers.sql", "original_file_path": "macros/materializations/snapshots/helpers.sql", "unique_id": "macro.dbt.get_dbt_valid_to_current", "macro_sql": "{% macro get_dbt_valid_to_current(strategy, columns) %}\n  {% set dbt_valid_to_current = config.get('dbt_valid_to_current') or \"null\" %}\n  coalesce(nullif({{ strategy.updated_at }}, {{ strategy.updated_at }}), {{dbt_valid_to_current}})\n  as {{ columns.dbt_valid_to }}\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1756850323.1151867, "supported_languages": null}, "macro.dbt.unique_key_fields": {"name": "unique_key_fields", "resource_type": "macro", "package_name": "dbt", "path": "macros/materializations/snapshots/helpers.sql", "original_file_path": "macros/materializations/snapshots/helpers.sql", "unique_id": "macro.dbt.unique_key_fields", "macro_sql": "{% macro unique_key_fields(unique_key) %}\n    {% if unique_key | is_list %}\n        {% for key in unique_key %}\n            {{ key }} as dbt_unique_key_{{ loop.index }}\n            {%- if not loop.last %} , {%- endif %}\n        {% endfor %}\n    {% else %}\n        {{ unique_key }} as dbt_unique_key\n    {% endif %}\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1756850323.1158762, "supported_languages": null}, "macro.dbt.unique_key_join_on": {"name": "unique_key_join_on", "resource_type": "macro", "package_name": "dbt", "path": "macros/materializations/snapshots/helpers.sql", "original_file_path": "macros/materializations/snapshots/helpers.sql", "unique_id": "macro.dbt.unique_key_join_on", "macro_sql": "{% macro unique_key_join_on(unique_key, identifier, from_identifier) %}\n    {% if unique_key | is_list %}\n        {% for key in unique_key %}\n\t    {% set source_unique_key = (identifier ~ \".dbt_unique_key_\" ~ loop.index) | trim %}\n\t    {% set target_unique_key = (from_identifier ~ \".dbt_unique_key_\" ~ loop.index) | trim %}\n\t    {{ equals(source_unique_key, target_unique_key) }}\n            {%- if not loop.last %} and {%- endif %}\n        {% endfor %}\n    {% else %}\n        {{ identifier }}.dbt_unique_key = {{ from_identifier }}.dbt_unique_key\n    {% endif %}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.equals"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1756850323.117008, "supported_languages": null}, "macro.dbt.unique_key_is_null": {"name": "unique_key_is_null", "resource_type": "macro", "package_name": "dbt", "path": "macros/materializations/snapshots/helpers.sql", "original_file_path": "macros/materializations/snapshots/helpers.sql", "unique_id": "macro.dbt.unique_key_is_null", "macro_sql": "{% macro unique_key_is_null(unique_key, identifier) %}\n    {% if unique_key | is_list %}\n        {{ identifier }}.dbt_unique_key_1 is null\n    {% else %}\n        {{ identifier }}.dbt_unique_key is null\n    {% endif %}\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1756850323.11742, "supported_languages": null}, "macro.dbt.unique_key_is_not_null": {"name": "unique_key_is_not_null", "resource_type": "macro", "package_name": "dbt", "path": "macros/materializations/snapshots/helpers.sql", "original_file_path": "macros/materializations/snapshots/helpers.sql", "unique_id": "macro.dbt.unique_key_is_not_null", "macro_sql": "{% macro unique_key_is_not_null(unique_key, identifier) %}\n    {% if unique_key | is_list %}\n        {{ identifier }}.dbt_unique_key_1 is not null\n    {% else %}\n        {{ identifier }}.dbt_unique_key is not null\n    {% endif %}\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1756850323.1178365, "supported_languages": null}, "macro.dbt.materialization_seed_default": {"name": "materialization_seed_default", "resource_type": "macro", "package_name": "dbt", "path": "macros/materializations/seeds/seed.sql", "original_file_path": "macros/materializations/seeds/seed.sql", "unique_id": "macro.dbt.materialization_seed_default", "macro_sql": "{% materialization seed, default %}\n\n  {%- set identifier = model['alias'] -%}\n  {%- set full_refresh_mode = (should_full_refresh()) -%}\n\n  {%- set old_relation = adapter.get_relation(database=database, schema=schema, identifier=identifier) -%}\n\n  {%- set exists_as_table = (old_relation is not none and old_relation.is_table) -%}\n  {%- set exists_as_view = (old_relation is not none and old_relation.is_view) -%}\n\n  {%- set grant_config = config.get('grants') -%}\n  {%- set agate_table = load_agate_table() -%}\n  -- grab current tables grants config for comparison later on\n\n  {%- do store_result('agate_table', response='OK', agate_table=agate_table) -%}\n\n  {{ run_hooks(pre_hooks, inside_transaction=False) }}\n\n  -- `BEGIN` happens here:\n  {{ run_hooks(pre_hooks, inside_transaction=True) }}\n\n  -- build model\n  {% set create_table_sql = \"\" %}\n  {% if exists_as_view %}\n    {{ exceptions.raise_compiler_error(\"Cannot seed to '{}', it is a view\".format(old_relation.render())) }}\n  {% elif exists_as_table %}\n    {% set create_table_sql = reset_csv_table(model, full_refresh_mode, old_relation, agate_table) %}\n  {% else %}\n    {% set create_table_sql = create_csv_table(model, agate_table) %}\n  {% endif %}\n\n  {% set code = 'CREATE' if full_refresh_mode else 'INSERT' %}\n  {% set rows_affected = (agate_table.rows | length) %}\n  {% set sql = load_csv_rows(model, agate_table) %}\n\n  {% call noop_statement('main', code ~ ' ' ~ rows_affected, code, rows_affected) %}\n    {{ get_csv_sql(create_table_sql, sql) }};\n  {% endcall %}\n\n  {% set target_relation = this.incorporate(type='table') %}\n\n  {% set should_revoke = should_revoke(old_relation, full_refresh_mode) %}\n  {% do apply_grants(target_relation, grant_config, should_revoke=should_revoke) %}\n\n  {% do persist_docs(target_relation, model) %}\n\n  {% if full_refresh_mode or not exists_as_table %}\n    {% do create_indexes(target_relation) %}\n  {% endif %}\n\n  {{ run_hooks(post_hooks, inside_transaction=True) }}\n\n  -- `COMMIT` happens here\n  {{ adapter.commit() }}\n\n  {{ run_hooks(post_hooks, inside_transaction=False) }}\n\n  {{ return({'relations': [target_relation]}) }}\n\n{% endmaterialization %}", "depends_on": {"macros": ["macro.dbt.should_full_refresh", "macro.dbt.run_hooks", "macro.dbt.reset_csv_table", "macro.dbt.create_csv_table", "macro.dbt.load_csv_rows", "macro.dbt.noop_statement", "macro.dbt.get_csv_sql", "macro.dbt.should_revoke", "macro.dbt.apply_grants", "macro.dbt.persist_docs", "macro.dbt.create_indexes"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1756850323.122729, "supported_languages": ["sql"]}, "macro.dbt.create_csv_table": {"name": "create_csv_table", "resource_type": "macro", "package_name": "dbt", "path": "macros/materializations/seeds/helpers.sql", "original_file_path": "macros/materializations/seeds/helpers.sql", "unique_id": "macro.dbt.create_csv_table", "macro_sql": "{% macro create_csv_table(model, agate_table) -%}\n  {{ adapter.dispatch('create_csv_table', 'dbt')(model, agate_table) }}\n{%- endmacro %}", "depends_on": {"macros": ["macro.dbt.default__create_csv_table"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1756850323.1245167, "supported_languages": null}, "macro.dbt.default__create_csv_table": {"name": "default__create_csv_table", "resource_type": "macro", "package_name": "dbt", "path": "macros/materializations/seeds/helpers.sql", "original_file_path": "macros/materializations/seeds/helpers.sql", "unique_id": "macro.dbt.default__create_csv_table", "macro_sql": "{% macro default__create_csv_table(model, agate_table) %}\n  {%- set column_override = model['config'].get('column_types', {}) -%}\n  {%- set quote_seed_column = model['config'].get('quote_columns', None) -%}\n\n  {% set sql %}\n    create table {{ this.render() }} (\n        {%- for col_name in agate_table.column_names -%}\n            {%- set inferred_type = adapter.convert_type(agate_table, loop.index0) -%}\n            {%- set type = column_override.get(col_name, inferred_type) -%}\n            {%- set column_name = (col_name | string) -%}\n            {{ adapter.quote_seed_column(column_name, quote_seed_column) }} {{ type }} {%- if not loop.last -%}, {%- endif -%}\n        {%- endfor -%}\n    )\n  {% endset %}\n\n  {% call statement('_') -%}\n    {{ sql }}\n  {%- endcall %}\n\n  {{ return(sql) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.statement"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1756850323.1262665, "supported_languages": null}, "macro.dbt.reset_csv_table": {"name": "reset_csv_table", "resource_type": "macro", "package_name": "dbt", "path": "macros/materializations/seeds/helpers.sql", "original_file_path": "macros/materializations/seeds/helpers.sql", "unique_id": "macro.dbt.reset_csv_table", "macro_sql": "{% macro reset_csv_table(model, full_refresh, old_relation, agate_table) -%}\n  {{ adapter.dispatch('reset_csv_table', 'dbt')(model, full_refresh, old_relation, agate_table) }}\n{%- endmacro %}", "depends_on": {"macros": ["macro.dbt.default__reset_csv_table"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1756850323.1267152, "supported_languages": null}, "macro.dbt.default__reset_csv_table": {"name": "default__reset_csv_table", "resource_type": "macro", "package_name": "dbt", "path": "macros/materializations/seeds/helpers.sql", "original_file_path": "macros/materializations/seeds/helpers.sql", "unique_id": "macro.dbt.default__reset_csv_table", "macro_sql": "{% macro default__reset_csv_table(model, full_refresh, old_relation, agate_table) %}\n    {% set sql = \"\" %}\n    {% if full_refresh %}\n        {{ adapter.drop_relation(old_relation) }}\n        {% set sql = create_csv_table(model, agate_table) %}\n    {% else %}\n        {{ adapter.truncate_relation(old_relation) }}\n        {% set sql = \"truncate table \" ~ old_relation.render() %}\n    {% endif %}\n\n    {{ return(sql) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.create_csv_table"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1756850323.1276777, "supported_languages": null}, "macro.dbt.get_csv_sql": {"name": "get_csv_sql", "resource_type": "macro", "package_name": "dbt", "path": "macros/materializations/seeds/helpers.sql", "original_file_path": "macros/materializations/seeds/helpers.sql", "unique_id": "macro.dbt.get_csv_sql", "macro_sql": "{% macro get_csv_sql(create_or_truncate_sql, insert_sql) %}\n    {{ adapter.dispatch('get_csv_sql', 'dbt')(create_or_truncate_sql, insert_sql) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.default__get_csv_sql"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1756850323.1280675, "supported_languages": null}, "macro.dbt.default__get_csv_sql": {"name": "default__get_csv_sql", "resource_type": "macro", "package_name": "dbt", "path": "macros/materializations/seeds/helpers.sql", "original_file_path": "macros/materializations/seeds/helpers.sql", "unique_id": "macro.dbt.default__get_csv_sql", "macro_sql": "{% macro default__get_csv_sql(create_or_truncate_sql, insert_sql) %}\n    {{ create_or_truncate_sql }};\n    -- dbt seed --\n    {{ insert_sql }}\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1756850323.128337, "supported_languages": null}, "macro.dbt.get_binding_char": {"name": "get_binding_char", "resource_type": "macro", "package_name": "dbt", "path": "macros/materializations/seeds/helpers.sql", "original_file_path": "macros/materializations/seeds/helpers.sql", "unique_id": "macro.dbt.get_binding_char", "macro_sql": "{% macro get_binding_char() -%}\n  {{ adapter.dispatch('get_binding_char', 'dbt')() }}\n{%- endmacro %}", "depends_on": {"macros": ["macro.dbt.default__get_binding_char"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1756850323.128611, "supported_languages": null}, "macro.dbt.default__get_binding_char": {"name": "default__get_binding_char", "resource_type": "macro", "package_name": "dbt", "path": "macros/materializations/seeds/helpers.sql", "original_file_path": "macros/materializations/seeds/helpers.sql", "unique_id": "macro.dbt.default__get_binding_char", "macro_sql": "{% macro default__get_binding_char() %}\n  {{ return('%s') }}\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1756850323.1288602, "supported_languages": null}, "macro.dbt.get_batch_size": {"name": "get_batch_size", "resource_type": "macro", "package_name": "dbt", "path": "macros/materializations/seeds/helpers.sql", "original_file_path": "macros/materializations/seeds/helpers.sql", "unique_id": "macro.dbt.get_batch_size", "macro_sql": "{% macro get_batch_size() -%}\n  {{ return(adapter.dispatch('get_batch_size', 'dbt')()) }}\n{%- endmacro %}", "depends_on": {"macros": ["macro.dbt.default__get_batch_size"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1756850323.1291707, "supported_languages": null}, "macro.dbt.default__get_batch_size": {"name": "default__get_batch_size", "resource_type": "macro", "package_name": "dbt", "path": "macros/materializations/seeds/helpers.sql", "original_file_path": "macros/materializations/seeds/helpers.sql", "unique_id": "macro.dbt.default__get_batch_size", "macro_sql": "{% macro default__get_batch_size() %}\n  {{ return(10000) }}\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1756850323.1294014, "supported_languages": null}, "macro.dbt.get_seed_column_quoted_csv": {"name": "get_seed_column_quoted_csv", "resource_type": "macro", "package_name": "dbt", "path": "macros/materializations/seeds/helpers.sql", "original_file_path": "macros/materializations/seeds/helpers.sql", "unique_id": "macro.dbt.get_seed_column_quoted_csv", "macro_sql": "{% macro get_seed_column_quoted_csv(model, column_names) %}\n  {%- set quote_seed_column = model['config'].get('quote_columns', None) -%}\n    {% set quoted = [] %}\n    {% for col in column_names -%}\n        {%- do quoted.append(adapter.quote_seed_column(col, quote_seed_column)) -%}\n    {%- endfor %}\n\n    {%- set dest_cols_csv = quoted | join(', ') -%}\n    {{ return(dest_cols_csv) }}\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1756850323.1303244, "supported_languages": null}, "macro.dbt.load_csv_rows": {"name": "load_csv_rows", "resource_type": "macro", "package_name": "dbt", "path": "macros/materializations/seeds/helpers.sql", "original_file_path": "macros/materializations/seeds/helpers.sql", "unique_id": "macro.dbt.load_csv_rows", "macro_sql": "{% macro load_csv_rows(model, agate_table) -%}\n  {{ adapter.dispatch('load_csv_rows', 'dbt')(model, agate_table) }}\n{%- endmacro %}", "depends_on": {"macros": ["macro.dbt.default__load_csv_rows"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1756850323.1306822, "supported_languages": null}, "macro.dbt.default__load_csv_rows": {"name": "default__load_csv_rows", "resource_type": "macro", "package_name": "dbt", "path": "macros/materializations/seeds/helpers.sql", "original_file_path": "macros/materializations/seeds/helpers.sql", "unique_id": "macro.dbt.default__load_csv_rows", "macro_sql": "{% macro default__load_csv_rows(model, agate_table) %}\n\n  {% set batch_size = get_batch_size() %}\n\n  {% set cols_sql = get_seed_column_quoted_csv(model, agate_table.column_names) %}\n  {% set bindings = [] %}\n\n  {% set statements = [] %}\n\n  {% for chunk in agate_table.rows | batch(batch_size) %}\n      {% set bindings = [] %}\n\n      {% for row in chunk %}\n          {% do bindings.extend(row) %}\n      {% endfor %}\n\n      {% set sql %}\n          insert into {{ this.render() }} ({{ cols_sql }}) values\n          {% for row in chunk -%}\n              ({%- for column in agate_table.column_names -%}\n                  {{ get_binding_char() }}\n                  {%- if not loop.last%},{%- endif %}\n              {%- endfor -%})\n              {%- if not loop.last%},{%- endif %}\n          {%- endfor %}\n      {% endset %}\n\n      {% do adapter.add_query(sql, bindings=bindings, abridge_sql_log=True) %}\n\n      {% if loop.index0 == 0 %}\n          {% do statements.append(sql) %}\n      {% endif %}\n  {% endfor %}\n\n  {# Return SQL so we can render it out into the compiled files #}\n  {{ return(statements[0]) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.get_batch_size", "macro.dbt.get_seed_column_quoted_csv", "macro.dbt.get_binding_char"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1756850323.1331277, "supported_languages": null}, "macro.dbt.materialization_unit_default": {"name": "materialization_unit_default", "resource_type": "macro", "package_name": "dbt", "path": "macros/materializations/tests/unit.sql", "original_file_path": "macros/materializations/tests/unit.sql", "unique_id": "macro.dbt.materialization_unit_default", "macro_sql": "{%- materialization unit, default -%}\n\n  {% set relations = [] %}\n\n  {% set expected_rows = config.get('expected_rows') %}\n  {% set expected_sql = config.get('expected_sql') %}\n  {% set tested_expected_column_names = expected_rows[0].keys() if (expected_rows | length ) > 0 else get_columns_in_query(sql) %}\n\n  {%- set target_relation = this.incorporate(type='table') -%}\n  {%- set temp_relation = make_temp_relation(target_relation)-%}\n  {% do run_query(get_create_table_as_sql(True, temp_relation, get_empty_subquery_sql(sql))) %}\n  {%- set columns_in_relation = adapter.get_columns_in_relation(temp_relation) -%}\n  {%- set column_name_to_data_types = {} -%}\n  {%- set column_name_to_quoted = {} -%}\n  {%- for column in columns_in_relation -%}\n  {%-   do column_name_to_data_types.update({column.name|lower: column.data_type}) -%}\n  {%-   do column_name_to_quoted.update({column.name|lower: column.quoted}) -%}\n  {%- endfor -%}\n\n  {%- set expected_column_names_quoted = [] -%}\n  {%- for column_name in tested_expected_column_names -%}\n  {%-   do expected_column_names_quoted.append(column_name_to_quoted[column_name|lower]) -%}\n  {%- endfor -%}\n\n  {% if not expected_sql %}\n  {%   set expected_sql = get_expected_sql(expected_rows, column_name_to_data_types, column_name_to_quoted) %}\n  {% endif %}\n  {% set unit_test_sql = get_unit_test_sql(sql, expected_sql, expected_column_names_quoted) %}\n\n  {% call statement('main', fetch_result=True) -%}\n\n    {{ unit_test_sql }}\n\n  {%- endcall %}\n\n  {% do adapter.drop_relation(temp_relation) %}\n\n  {{ return({'relations': relations}) }}\n\n{%- endmaterialization -%}", "depends_on": {"macros": ["macro.dbt.get_columns_in_query", "macro.dbt.make_temp_relation", "macro.dbt.run_query", "macro.dbt.get_create_table_as_sql", "macro.dbt.get_empty_subquery_sql", "macro.dbt.get_expected_sql", "macro.dbt.get_unit_test_sql", "macro.dbt.statement"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1756850323.1367319, "supported_languages": ["sql"]}, "macro.dbt.get_test_sql": {"name": "get_test_sql", "resource_type": "macro", "package_name": "dbt", "path": "macros/materializations/tests/helpers.sql", "original_file_path": "macros/materializations/tests/helpers.sql", "unique_id": "macro.dbt.get_test_sql", "macro_sql": "{% macro get_test_sql(main_sql, fail_calc, warn_if, error_if, limit) -%}\n  {{ adapter.dispatch('get_test_sql', 'dbt')(main_sql, fail_calc, warn_if, error_if, limit) }}\n{%- endmacro %}", "depends_on": {"macros": ["macro.dbt.default__get_test_sql"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1756850323.137784, "supported_languages": null}, "macro.dbt.default__get_test_sql": {"name": "default__get_test_sql", "resource_type": "macro", "package_name": "dbt", "path": "macros/materializations/tests/helpers.sql", "original_file_path": "macros/materializations/tests/helpers.sql", "unique_id": "macro.dbt.default__get_test_sql", "macro_sql": "{% macro default__get_test_sql(main_sql, fail_calc, warn_if, error_if, limit) -%}\n    select\n      {{ fail_calc }} as failures,\n      {{ fail_calc }} {{ warn_if }} as should_warn,\n      {{ fail_calc }} {{ error_if }} as should_error\n    from (\n      {{ main_sql }}\n      {{ \"limit \" ~ limit if limit != none }}\n    ) dbt_internal_test\n{%- endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1756850323.1383848, "supported_languages": null}, "macro.dbt.get_unit_test_sql": {"name": "get_unit_test_sql", "resource_type": "macro", "package_name": "dbt", "path": "macros/materializations/tests/helpers.sql", "original_file_path": "macros/materializations/tests/helpers.sql", "unique_id": "macro.dbt.get_unit_test_sql", "macro_sql": "{% macro get_unit_test_sql(main_sql, expected_fixture_sql, expected_column_names) -%}\n  {{ adapter.dispatch('get_unit_test_sql', 'dbt')(main_sql, expected_fixture_sql, expected_column_names) }}\n{%- endmacro %}", "depends_on": {"macros": ["macro.dbt.default__get_unit_test_sql"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1756850323.138804, "supported_languages": null}, "macro.dbt.default__get_unit_test_sql": {"name": "default__get_unit_test_sql", "resource_type": "macro", "package_name": "dbt", "path": "macros/materializations/tests/helpers.sql", "original_file_path": "macros/materializations/tests/helpers.sql", "unique_id": "macro.dbt.default__get_unit_test_sql", "macro_sql": "{% macro default__get_unit_test_sql(main_sql, expected_fixture_sql, expected_column_names) -%}\n-- Build actual result given inputs\nwith dbt_internal_unit_test_actual as (\n  select\n    {% for expected_column_name in expected_column_names %}{{expected_column_name}}{% if not loop.last -%},{% endif %}{%- endfor -%}, {{ dbt.string_literal(\"actual\") }} as {{ adapter.quote(\"actual_or_expected\") }}\n  from (\n    {{ main_sql }}\n  ) _dbt_internal_unit_test_actual\n),\n-- Build expected result\ndbt_internal_unit_test_expected as (\n  select\n    {% for expected_column_name in expected_column_names %}{{expected_column_name}}{% if not loop.last -%}, {% endif %}{%- endfor -%}, {{ dbt.string_literal(\"expected\") }} as {{ adapter.quote(\"actual_or_expected\") }}\n  from (\n    {{ expected_fixture_sql }}\n  ) _dbt_internal_unit_test_expected\n)\n-- Union actual and expected results\nselect * from dbt_internal_unit_test_actual\nunion all\nselect * from dbt_internal_unit_test_expected\n{%- endmacro %}", "depends_on": {"macros": ["macro.dbt.string_literal"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1756850323.1399877, "supported_languages": null}, "macro.dbt.get_where_subquery": {"name": "get_where_subquery", "resource_type": "macro", "package_name": "dbt", "path": "macros/materializations/tests/where_subquery.sql", "original_file_path": "macros/materializations/tests/where_subquery.sql", "unique_id": "macro.dbt.get_where_subquery", "macro_sql": "{% macro get_where_subquery(relation) -%}\n    {% do return(adapter.dispatch('get_where_subquery', 'dbt')(relation)) %}\n{%- endmacro %}", "depends_on": {"macros": ["macro.dbt.default__get_where_subquery"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1756850323.140598, "supported_languages": null}, "macro.dbt.default__get_where_subquery": {"name": "default__get_where_subquery", "resource_type": "macro", "package_name": "dbt", "path": "macros/materializations/tests/where_subquery.sql", "original_file_path": "macros/materializations/tests/where_subquery.sql", "unique_id": "macro.dbt.default__get_where_subquery", "macro_sql": "{% macro default__get_where_subquery(relation) -%}\n    {% set where = config.get('where', '') %}\n    {% if where %}\n        {%- set filtered -%}\n            (select * from {{ relation }} where {{ where }}) dbt_subquery\n        {%- endset -%}\n        {% do return(filtered) %}\n    {%- else -%}\n        {% do return(relation) %}\n    {%- endif -%}\n{%- endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1756850323.14137, "supported_languages": null}, "macro.dbt.materialization_test_default": {"name": "materialization_test_default", "resource_type": "macro", "package_name": "dbt", "path": "macros/materializations/tests/test.sql", "original_file_path": "macros/materializations/tests/test.sql", "unique_id": "macro.dbt.materialization_test_default", "macro_sql": "{%- materialization test, default -%}\n\n  {% set relations = [] %}\n  {% set limit = config.get('limit') %}\n\n  {% set sql_with_limit %}\n    {{ get_limit_subquery_sql(sql, limit) }}\n  {% endset %}\n\n  {% if should_store_failures() %}\n\n    {% set identifier = model['alias'] %}\n    {% set old_relation = adapter.get_relation(database=database, schema=schema, identifier=identifier) %}\n\n    {% set store_failures_as = config.get('store_failures_as') %}\n    -- if `--store-failures` is invoked via command line and `store_failures_as` is not set,\n    -- config.get('store_failures_as', 'table') returns None, not 'table'\n    {% if store_failures_as == none %}{% set store_failures_as = 'table' %}{% endif %}\n    {% if store_failures_as not in ['table', 'view'] %}\n        {{ exceptions.raise_compiler_error(\n            \"'\" ~ store_failures_as ~ \"' is not a valid value for `store_failures_as`. \"\n            \"Accepted values are: ['ephemeral', 'table', 'view']\"\n        ) }}\n    {% endif %}\n\n    {% set target_relation = api.Relation.create(\n        identifier=identifier, schema=schema, database=database, type=store_failures_as) -%} %}\n\n    {% if old_relation %}\n        {% do adapter.drop_relation(old_relation) %}\n    {% endif %}\n\n    {% call statement(auto_begin=True) %}\n        {{ get_create_sql(target_relation, sql_with_limit) }}\n    {% endcall %}\n\n    {% do relations.append(target_relation) %}\n\n    {# Since the test failures have already been saved to the database, reuse that result rather than querying again #}\n    {% set main_sql %}\n        select *\n        from {{ target_relation }}\n    {% endset %}\n\n    {{ adapter.commit() }}\n\n  {% else %}\n\n      {% set main_sql = sql_with_limit %}\n\n  {% endif %}\n\n  {% set fail_calc = config.get('fail_calc') %}\n  {% set warn_if = config.get('warn_if') %}\n  {% set error_if = config.get('error_if') %}\n\n  {% call statement('main', fetch_result=True) -%}\n\n    {# The limit has already been included above, and we do not want to duplicate it again. We also want to be safe for macro overrides treating `limit` as a required parameter. #}\n    {{ get_test_sql(main_sql, fail_calc, warn_if, error_if, limit=none)}}\n\n  {%- endcall %}\n\n  {{ return({'relations': relations}) }}\n\n{%- endmaterialization -%}", "depends_on": {"macros": ["macro.dbt.get_limit_subquery_sql", "macro.dbt.should_store_failures", "macro.dbt.statement", "macro.dbt.get_create_sql", "macro.dbt.get_test_sql"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1756850323.1458125, "supported_languages": ["sql"]}, "macro.dbt.materialization_materialized_view_default": {"name": "materialization_materialized_view_default", "resource_type": "macro", "package_name": "dbt", "path": "macros/materializations/models/materialized_view.sql", "original_file_path": "macros/materializations/models/materialized_view.sql", "unique_id": "macro.dbt.materialization_materialized_view_default", "macro_sql": "{% materialization materialized_view, default %}\n    {% set existing_relation = load_cached_relation(this) %}\n    {% set target_relation = this.incorporate(type=this.MaterializedView) %}\n    {% set intermediate_relation = make_intermediate_relation(target_relation) %}\n    {% set backup_relation_type = target_relation.MaterializedView if existing_relation is none else existing_relation.type %}\n    {% set backup_relation = make_backup_relation(target_relation, backup_relation_type) %}\n\n    {{ materialized_view_setup(backup_relation, intermediate_relation, pre_hooks) }}\n\n        {% set build_sql = materialized_view_get_build_sql(existing_relation, target_relation, backup_relation, intermediate_relation) %}\n\n        {% if build_sql == '' %}\n            {{ materialized_view_execute_no_op(target_relation) }}\n        {% else %}\n            {{ materialized_view_execute_build_sql(build_sql, existing_relation, target_relation, post_hooks) }}\n        {% endif %}\n\n    {{ materialized_view_teardown(backup_relation, intermediate_relation, post_hooks) }}\n\n    {{ return({'relations': [target_relation]}) }}\n\n{% endmaterialization %}", "depends_on": {"macros": ["macro.dbt.load_cached_relation", "macro.dbt.make_intermediate_relation", "macro.dbt.make_backup_relation", "macro.dbt.materialized_view_setup", "macro.dbt.materialized_view_get_build_sql", "macro.dbt.materialized_view_execute_no_op", "macro.dbt.materialized_view_execute_build_sql", "macro.dbt.materialized_view_teardown"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1756850323.1487632, "supported_languages": ["sql"]}, "macro.dbt.materialized_view_setup": {"name": "materialized_view_setup", "resource_type": "macro", "package_name": "dbt", "path": "macros/materializations/models/materialized_view.sql", "original_file_path": "macros/materializations/models/materialized_view.sql", "unique_id": "macro.dbt.materialized_view_setup", "macro_sql": "{% macro materialized_view_setup(backup_relation, intermediate_relation, pre_hooks) %}\n\n    -- backup_relation and intermediate_relation should not already exist in the database\n    -- it's possible these exist because of a previous run that exited unexpectedly\n    {% set preexisting_backup_relation = load_cached_relation(backup_relation) %}\n    {% set preexisting_intermediate_relation = load_cached_relation(intermediate_relation) %}\n\n    -- drop the temp relations if they exist already in the database\n    {{ drop_relation_if_exists(preexisting_backup_relation) }}\n    {{ drop_relation_if_exists(preexisting_intermediate_relation) }}\n\n    {{ run_hooks(pre_hooks, inside_transaction=False) }}\n\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.load_cached_relation", "macro.dbt.drop_relation_if_exists", "macro.dbt.run_hooks"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1756850323.1495137, "supported_languages": null}, "macro.dbt.materialized_view_teardown": {"name": "materialized_view_teardown", "resource_type": "macro", "package_name": "dbt", "path": "macros/materializations/models/materialized_view.sql", "original_file_path": "macros/materializations/models/materialized_view.sql", "unique_id": "macro.dbt.materialized_view_teardown", "macro_sql": "{% macro materialized_view_teardown(backup_relation, intermediate_relation, post_hooks) %}\n\n    -- drop the temp relations if they exist to leave the database clean for the next run\n    {{ drop_relation_if_exists(backup_relation) }}\n    {{ drop_relation_if_exists(intermediate_relation) }}\n\n    {{ run_hooks(post_hooks, inside_transaction=False) }}\n\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.drop_relation_if_exists", "macro.dbt.run_hooks"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1756850323.1500132, "supported_languages": null}, "macro.dbt.materialized_view_get_build_sql": {"name": "materialized_view_get_build_sql", "resource_type": "macro", "package_name": "dbt", "path": "macros/materializations/models/materialized_view.sql", "original_file_path": "macros/materializations/models/materialized_view.sql", "unique_id": "macro.dbt.materialized_view_get_build_sql", "macro_sql": "{% macro materialized_view_get_build_sql(existing_relation, target_relation, backup_relation, intermediate_relation) %}\n\n    {% set full_refresh_mode = should_full_refresh() %}\n\n    -- determine the scenario we're in: create, full_refresh, alter, refresh data\n    {% if existing_relation is none %}\n        {% set build_sql = get_create_materialized_view_as_sql(target_relation, sql) %}\n    {% elif full_refresh_mode or not existing_relation.is_materialized_view %}\n        {% set build_sql = get_replace_sql(existing_relation, target_relation, sql) %}\n    {% else %}\n\n        -- get config options\n        {% set on_configuration_change = config.get('on_configuration_change') %}\n        {% set configuration_changes = get_materialized_view_configuration_changes(existing_relation, config) %}\n\n        {% if configuration_changes is none %}\n            {% set build_sql = refresh_materialized_view(target_relation) %}\n\n        {% elif on_configuration_change == 'apply' %}\n            {% set build_sql = get_alter_materialized_view_as_sql(target_relation, configuration_changes, sql, existing_relation, backup_relation, intermediate_relation) %}\n        {% elif on_configuration_change == 'continue' %}\n            {% set build_sql = '' %}\n            {{ exceptions.warn(\"Configuration changes were identified and `on_configuration_change` was set to `continue` for `\" ~ target_relation.render() ~ \"`\") }}\n        {% elif on_configuration_change == 'fail' %}\n            {{ exceptions.raise_fail_fast_error(\"Configuration changes were identified and `on_configuration_change` was set to `fail` for `\" ~ target_relation.render() ~ \"`\") }}\n\n        {% else %}\n            -- this only happens if the user provides a value other than `apply`, 'skip', 'fail'\n            {{ exceptions.raise_compiler_error(\"Unexpected configuration scenario\") }}\n\n        {% endif %}\n\n    {% endif %}\n\n    {% do return(build_sql) %}\n\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.should_full_refresh", "macro.dbt.get_create_materialized_view_as_sql", "macro.dbt.get_replace_sql", "macro.dbt.get_materialized_view_configuration_changes", "macro.dbt.refresh_materialized_view", "macro.dbt.get_alter_materialized_view_as_sql"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1756850323.15251, "supported_languages": null}, "macro.dbt.materialized_view_execute_no_op": {"name": "materialized_view_execute_no_op", "resource_type": "macro", "package_name": "dbt", "path": "macros/materializations/models/materialized_view.sql", "original_file_path": "macros/materializations/models/materialized_view.sql", "unique_id": "macro.dbt.materialized_view_execute_no_op", "macro_sql": "{% macro materialized_view_execute_no_op(target_relation) %}\n    {% do store_raw_result(\n        name=\"main\",\n        message=\"skip \" ~ target_relation,\n        code=\"skip\",\n        rows_affected=\"-1\"\n    ) %}\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1756850323.1529725, "supported_languages": null}, "macro.dbt.materialized_view_execute_build_sql": {"name": "materialized_view_execute_build_sql", "resource_type": "macro", "package_name": "dbt", "path": "macros/materializations/models/materialized_view.sql", "original_file_path": "macros/materializations/models/materialized_view.sql", "unique_id": "macro.dbt.materialized_view_execute_build_sql", "macro_sql": "{% macro materialized_view_execute_build_sql(build_sql, existing_relation, target_relation, post_hooks) %}\n\n    -- `BEGIN` happens here:\n    {{ run_hooks(pre_hooks, inside_transaction=True) }}\n\n    {% set grant_config = config.get('grants') %}\n\n    {% call statement(name=\"main\") %}\n        {{ build_sql }}\n    {% endcall %}\n\n    {% set should_revoke = should_revoke(existing_relation, full_refresh_mode=True) %}\n    {% do apply_grants(target_relation, grant_config, should_revoke=should_revoke) %}\n\n    {% do persist_docs(target_relation, model) %}\n\n    {{ run_hooks(post_hooks, inside_transaction=True) }}\n\n    {{ adapter.commit() }}\n\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.run_hooks", "macro.dbt.statement", "macro.dbt.should_revoke", "macro.dbt.apply_grants", "macro.dbt.persist_docs"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1756850323.1542199, "supported_languages": null}, "macro.dbt.materialization_view_default": {"name": "materialization_view_default", "resource_type": "macro", "package_name": "dbt", "path": "macros/materializations/models/view.sql", "original_file_path": "macros/materializations/models/view.sql", "unique_id": "macro.dbt.materialization_view_default", "macro_sql": "{%- materialization view, default -%}\n\n  {%- set existing_relation = load_cached_relation(this) -%}\n  {%- set target_relation = this.incorporate(type='view') -%}\n  {%- set intermediate_relation =  make_intermediate_relation(target_relation) -%}\n\n  -- the intermediate_relation should not already exist in the database; get_relation\n  -- will return None in that case. Otherwise, we get a relation that we can drop\n  -- later, before we try to use this name for the current operation\n  {%- set preexisting_intermediate_relation = load_cached_relation(intermediate_relation) -%}\n  /*\n     This relation (probably) doesn't exist yet. If it does exist, it's a leftover from\n     a previous run, and we're going to try to drop it immediately. At the end of this\n     materialization, we're going to rename the \"existing_relation\" to this identifier,\n     and then we're going to drop it. In order to make sure we run the correct one of:\n       - drop view ...\n       - drop table ...\n\n     We need to set the type of this relation to be the type of the existing_relation, if it exists,\n     or else \"view\" as a sane default if it does not. Note that if the existing_relation does not\n     exist, then there is nothing to move out of the way and subsequentally drop. In that case,\n     this relation will be effectively unused.\n  */\n  {%- set backup_relation_type = 'view' if existing_relation is none else existing_relation.type -%}\n  {%- set backup_relation = make_backup_relation(target_relation, backup_relation_type) -%}\n  -- as above, the backup_relation should not already exist\n  {%- set preexisting_backup_relation = load_cached_relation(backup_relation) -%}\n  -- grab current tables grants config for comparision later on\n  {% set grant_config = config.get('grants') %}\n\n  {{ run_hooks(pre_hooks, inside_transaction=False) }}\n\n  -- drop the temp relations if they exist already in the database\n  {{ drop_relation_if_exists(preexisting_intermediate_relation) }}\n  {{ drop_relation_if_exists(preexisting_backup_relation) }}\n\n  -- `BEGIN` happens here:\n  {{ run_hooks(pre_hooks, inside_transaction=True) }}\n\n  -- build model\n  {% call statement('main') -%}\n    {{ get_create_view_as_sql(intermediate_relation, sql) }}\n  {%- endcall %}\n\n  -- cleanup\n  -- move the existing view out of the way\n  {% if existing_relation is not none %}\n     /* Do the equivalent of rename_if_exists. 'existing_relation' could have been dropped\n        since the variable was first set. */\n    {% set existing_relation = load_cached_relation(existing_relation) %}\n    {% if existing_relation is not none %}\n        {{ adapter.rename_relation(existing_relation, backup_relation) }}\n    {% endif %}\n  {% endif %}\n  {{ adapter.rename_relation(intermediate_relation, target_relation) }}\n\n  {% set should_revoke = should_revoke(existing_relation, full_refresh_mode=True) %}\n  {% do apply_grants(target_relation, grant_config, should_revoke=should_revoke) %}\n\n  {% do persist_docs(target_relation, model) %}\n\n  {{ run_hooks(post_hooks, inside_transaction=True) }}\n\n  {{ adapter.commit() }}\n\n  {{ drop_relation_if_exists(backup_relation) }}\n\n  {{ run_hooks(post_hooks, inside_transaction=False) }}\n\n  {{ return({'relations': [target_relation]}) }}\n\n{%- endmaterialization -%}", "depends_on": {"macros": ["macro.dbt.load_cached_relation", "macro.dbt.make_intermediate_relation", "macro.dbt.make_backup_relation", "macro.dbt.run_hooks", "macro.dbt.drop_relation_if_exists", "macro.dbt.statement", "macro.dbt.get_create_view_as_sql", "macro.dbt.should_revoke", "macro.dbt.apply_grants", "macro.dbt.persist_docs"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1756850323.1581378, "supported_languages": ["sql"]}, "macro.dbt.materialization_table_default": {"name": "materialization_table_default", "resource_type": "macro", "package_name": "dbt", "path": "macros/materializations/models/table.sql", "original_file_path": "macros/materializations/models/table.sql", "unique_id": "macro.dbt.materialization_table_default", "macro_sql": "{% materialization table, default %}\n\n  {%- set existing_relation = load_cached_relation(this) -%}\n  {%- set target_relation = this.incorporate(type='table') %}\n  {%- set intermediate_relation =  make_intermediate_relation(target_relation) -%}\n  -- the intermediate_relation should not already exist in the database; get_relation\n  -- will return None in that case. Otherwise, we get a relation that we can drop\n  -- later, before we try to use this name for the current operation\n  {%- set preexisting_intermediate_relation = load_cached_relation(intermediate_relation) -%}\n  /*\n      See ../view/view.sql for more information about this relation.\n  */\n  {%- set backup_relation_type = 'table' if existing_relation is none else existing_relation.type -%}\n  {%- set backup_relation = make_backup_relation(target_relation, backup_relation_type) -%}\n  -- as above, the backup_relation should not already exist\n  {%- set preexisting_backup_relation = load_cached_relation(backup_relation) -%}\n  -- grab current tables grants config for comparision later on\n  {% set grant_config = config.get('grants') %}\n\n  -- drop the temp relations if they exist already in the database\n  {{ drop_relation_if_exists(preexisting_intermediate_relation) }}\n  {{ drop_relation_if_exists(preexisting_backup_relation) }}\n\n  {{ run_hooks(pre_hooks, inside_transaction=False) }}\n\n  -- `BEGIN` happens here:\n  {{ run_hooks(pre_hooks, inside_transaction=True) }}\n\n  -- build model\n  {% call statement('main') -%}\n    {{ get_create_table_as_sql(False, intermediate_relation, sql) }}\n  {%- endcall %}\n\n  {% do create_indexes(intermediate_relation) %}\n\n  -- cleanup\n  {% if existing_relation is not none %}\n     /* Do the equivalent of rename_if_exists. 'existing_relation' could have been dropped\n        since the variable was first set. */\n    {% set existing_relation = load_cached_relation(existing_relation) %}\n    {% if existing_relation is not none %}\n        {{ adapter.rename_relation(existing_relation, backup_relation) }}\n    {% endif %}\n  {% endif %}\n\n  {{ adapter.rename_relation(intermediate_relation, target_relation) }}\n\n  {{ run_hooks(post_hooks, inside_transaction=True) }}\n\n  {% set should_revoke = should_revoke(existing_relation, full_refresh_mode=True) %}\n  {% do apply_grants(target_relation, grant_config, should_revoke=should_revoke) %}\n\n  {% do persist_docs(target_relation, model) %}\n\n  -- `COMMIT` happens here\n  {{ adapter.commit() }}\n\n  -- finally, drop the existing/backup relation after the commit\n  {{ drop_relation_if_exists(backup_relation) }}\n\n  {{ run_hooks(post_hooks, inside_transaction=False) }}\n\n  {{ return({'relations': [target_relation]}) }}\n{% endmaterialization %}", "depends_on": {"macros": ["macro.dbt.load_cached_relation", "macro.dbt.make_intermediate_relation", "macro.dbt.make_backup_relation", "macro.dbt.drop_relation_if_exists", "macro.dbt.run_hooks", "macro.dbt.statement", "macro.dbt.get_create_table_as_sql", "macro.dbt.create_indexes", "macro.dbt.should_revoke", "macro.dbt.apply_grants", "macro.dbt.persist_docs"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1756850323.1621287, "supported_languages": ["sql"]}, "macro.dbt.materialization_clone_default": {"name": "materialization_clone_default", "resource_type": "macro", "package_name": "dbt", "path": "macros/materializations/models/clone/clone.sql", "original_file_path": "macros/materializations/models/clone/clone.sql", "unique_id": "macro.dbt.materialization_clone_default", "macro_sql": "{%- materialization clone, default -%}\n\n  {%- set relations = {'relations': []} -%}\n\n  {%- if not defer_relation -%}\n      -- nothing to do\n      {{ log(\"No relation found in state manifest for \" ~ model.unique_id, info=True) }}\n      {{ return(relations) }}\n  {%- endif -%}\n\n  {%- set existing_relation = load_cached_relation(this) -%}\n\n  {%- if existing_relation and not flags.FULL_REFRESH -%}\n      -- noop!\n      {{ log(\"Relation \" ~ existing_relation ~ \" already exists\", info=True) }}\n      {{ return(relations) }}\n  {%- endif -%}\n\n  {%- set other_existing_relation = load_cached_relation(defer_relation) -%}\n\n  -- If this is a database that can do zero-copy cloning of tables, and the other relation is a table, then this will be a table\n  -- Otherwise, this will be a view\n\n  {% set can_clone_table = can_clone_table() %}\n\n  {%- if other_existing_relation and other_existing_relation.type == 'table' and can_clone_table -%}\n\n      {%- set target_relation = this.incorporate(type='table') -%}\n      {% if existing_relation is not none and not existing_relation.is_table %}\n        {{ log(\"Dropping relation \" ~ existing_relation.render() ~ \" because it is of type \" ~ existing_relation.type) }}\n        {{ drop_relation_if_exists(existing_relation) }}\n      {% endif %}\n\n      -- as a general rule, data platforms that can clone tables can also do atomic 'create or replace'\n      {% if target_relation.database == defer_relation.database and\n            target_relation.schema == defer_relation.schema and\n            target_relation.identifier == defer_relation.identifier %}\n        {{ log(\"Target relation and defer relation are the same, skipping clone for relation: \" ~ target_relation.render()) }}\n      {% else %}\n        {% call statement('main') %}\n            {{ create_or_replace_clone(target_relation, defer_relation) }}\n        {% endcall %}\n      {% endif %}\n      {% set should_revoke = should_revoke(existing_relation, full_refresh_mode=True) %}\n      {% do apply_grants(target_relation, grant_config, should_revoke=should_revoke) %}\n      {% do persist_docs(target_relation, model) %}\n\n      {{ return({'relations': [target_relation]}) }}\n\n  {%- else -%}\n\n      {%- set target_relation = this.incorporate(type='view') -%}\n\n      -- reuse the view materialization\n      -- TODO: support actual dispatch for materialization macros\n      -- Tracking ticket: https://github.com/dbt-labs/dbt-core/issues/7799\n      {% set search_name = \"materialization_view_\" ~ adapter.type() %}\n      {% if not search_name in context %}\n          {% set search_name = \"materialization_view_default\" %}\n      {% endif %}\n      {% set materialization_macro = context[search_name] %}\n      {% set relations = materialization_macro() %}\n      {{ return(relations) }}\n\n  {%- endif -%}\n\n{%- endmaterialization -%}", "depends_on": {"macros": ["macro.dbt.load_cached_relation", "macro.dbt.can_clone_table", "macro.dbt.drop_relation_if_exists", "macro.dbt.statement", "macro.dbt.create_or_replace_clone", "macro.dbt.should_revoke", "macro.dbt.apply_grants", "macro.dbt.persist_docs"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1756850323.167235, "supported_languages": ["sql"]}, "macro.dbt.create_or_replace_clone": {"name": "create_or_replace_clone", "resource_type": "macro", "package_name": "dbt", "path": "macros/materializations/models/clone/create_or_replace_clone.sql", "original_file_path": "macros/materializations/models/clone/create_or_replace_clone.sql", "unique_id": "macro.dbt.create_or_replace_clone", "macro_sql": "{% macro create_or_replace_clone(this_relation, defer_relation) %}\n    {{ return(adapter.dispatch('create_or_replace_clone', 'dbt')(this_relation, defer_relation)) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.default__create_or_replace_clone"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1756850323.1678267, "supported_languages": null}, "macro.dbt.default__create_or_replace_clone": {"name": "default__create_or_replace_clone", "resource_type": "macro", "package_name": "dbt", "path": "macros/materializations/models/clone/create_or_replace_clone.sql", "original_file_path": "macros/materializations/models/clone/create_or_replace_clone.sql", "unique_id": "macro.dbt.default__create_or_replace_clone", "macro_sql": "{% macro default__create_or_replace_clone(this_relation, defer_relation) %}\n    create or replace table {{ this_relation.render() }} clone {{ defer_relation.render() }}\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1756850323.1681564, "supported_languages": null}, "macro.dbt.can_clone_table": {"name": "can_clone_table", "resource_type": "macro", "package_name": "dbt", "path": "macros/materializations/models/clone/can_clone_table.sql", "original_file_path": "macros/materializations/models/clone/can_clone_table.sql", "unique_id": "macro.dbt.can_clone_table", "macro_sql": "{% macro can_clone_table() %}\n    {{ return(adapter.dispatch('can_clone_table', 'dbt')()) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.default__can_clone_table"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1756850323.168596, "supported_languages": null}, "macro.dbt.default__can_clone_table": {"name": "default__can_clone_table", "resource_type": "macro", "package_name": "dbt", "path": "macros/materializations/models/clone/can_clone_table.sql", "original_file_path": "macros/materializations/models/clone/can_clone_table.sql", "unique_id": "macro.dbt.default__can_clone_table", "macro_sql": "{% macro default__can_clone_table() %}\n    {{ return(False) }}\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1756850323.168843, "supported_languages": null}, "macro.dbt.materialization_incremental_default": {"name": "materialization_incremental_default", "resource_type": "macro", "package_name": "dbt", "path": "macros/materializations/models/incremental/incremental.sql", "original_file_path": "macros/materializations/models/incremental/incremental.sql", "unique_id": "macro.dbt.materialization_incremental_default", "macro_sql": "{% materialization incremental, default -%}\n\n  -- relations\n  {%- set existing_relation = load_cached_relation(this) -%}\n  {%- set target_relation = this.incorporate(type='table') -%}\n  {%- set temp_relation = make_temp_relation(target_relation)-%}\n  {%- set intermediate_relation = make_intermediate_relation(target_relation)-%}\n  {%- set backup_relation_type = 'table' if existing_relation is none else existing_relation.type -%}\n  {%- set backup_relation = make_backup_relation(target_relation, backup_relation_type) -%}\n\n  -- configs\n  {%- set unique_key = config.get('unique_key') -%}\n  {%- set full_refresh_mode = (should_full_refresh()  or existing_relation.is_view) -%}\n  {%- set on_schema_change = incremental_validate_on_schema_change(config.get('on_schema_change'), default='ignore') -%}\n\n  -- the temp_ and backup_ relations should not already exist in the database; get_relation\n  -- will return None in that case. Otherwise, we get a relation that we can drop\n  -- later, before we try to use this name for the current operation. This has to happen before\n  -- BEGIN, in a separate transaction\n  {%- set preexisting_intermediate_relation = load_cached_relation(intermediate_relation)-%}\n  {%- set preexisting_backup_relation = load_cached_relation(backup_relation) -%}\n   -- grab current tables grants config for comparision later on\n  {% set grant_config = config.get('grants') %}\n  {{ drop_relation_if_exists(preexisting_intermediate_relation) }}\n  {{ drop_relation_if_exists(preexisting_backup_relation) }}\n\n  {{ run_hooks(pre_hooks, inside_transaction=False) }}\n\n  -- `BEGIN` happens here:\n  {{ run_hooks(pre_hooks, inside_transaction=True) }}\n\n  {% set to_drop = [] %}\n\n  {% set incremental_strategy = config.get('incremental_strategy') or 'default' %}\n  {% set strategy_sql_macro_func = adapter.get_incremental_strategy_macro(context, incremental_strategy) %}\n\n  {% if existing_relation is none %}\n      {% set build_sql = get_create_table_as_sql(False, target_relation, sql) %}\n      {% set relation_for_indexes = target_relation %}\n  {% elif full_refresh_mode %}\n      {% set build_sql = get_create_table_as_sql(False, intermediate_relation, sql) %}\n      {% set relation_for_indexes = intermediate_relation %}\n      {% set need_swap = true %}\n  {% else %}\n    {% do run_query(get_create_table_as_sql(True, temp_relation, sql)) %}\n    {% set relation_for_indexes = temp_relation %}\n    {% set contract_config = config.get('contract') %}\n    {% if not contract_config or not contract_config.enforced %}\n      {% do adapter.expand_target_column_types(\n               from_relation=temp_relation,\n               to_relation=target_relation) %}\n    {% endif %}\n    {#-- Process schema changes. Returns dict of changes if successful. Use source columns for upserting/merging --#}\n    {% set dest_columns = process_schema_changes(on_schema_change, temp_relation, existing_relation) %}\n    {% if not dest_columns %}\n      {% set dest_columns = adapter.get_columns_in_relation(existing_relation) %}\n    {% endif %}\n\n    {#-- Get the incremental_strategy, the macro to use for the strategy, and build the sql --#}\n    {% set incremental_predicates = config.get('predicates', none) or config.get('incremental_predicates', none) %}\n    {% set strategy_arg_dict = ({'target_relation': target_relation, 'temp_relation': temp_relation, 'unique_key': unique_key, 'dest_columns': dest_columns, 'incremental_predicates': incremental_predicates }) %}\n    {% set build_sql = strategy_sql_macro_func(strategy_arg_dict) %}\n\n  {% endif %}\n\n  {% call statement(\"main\") %}\n      {{ build_sql }}\n  {% endcall %}\n\n  {% if existing_relation is none or existing_relation.is_view or should_full_refresh() %}\n    {% do create_indexes(relation_for_indexes) %}\n  {% endif %}\n\n  {% if need_swap %}\n      {% do adapter.rename_relation(target_relation, backup_relation) %}\n      {% do adapter.rename_relation(intermediate_relation, target_relation) %}\n      {% do to_drop.append(backup_relation) %}\n  {% endif %}\n\n  {% set should_revoke = should_revoke(existing_relation, full_refresh_mode) %}\n  {% do apply_grants(target_relation, grant_config, should_revoke=should_revoke) %}\n\n  {% do persist_docs(target_relation, model) %}\n\n  {{ run_hooks(post_hooks, inside_transaction=True) }}\n\n  -- `COMMIT` happens here\n  {% do adapter.commit() %}\n\n  {% for rel in to_drop %}\n      {% do adapter.drop_relation(rel) %}\n  {% endfor %}\n\n  {{ run_hooks(post_hooks, inside_transaction=False) }}\n\n  {{ return({'relations': [target_relation]}) }}\n\n{%- endmaterialization %}", "depends_on": {"macros": ["macro.dbt.load_cached_relation", "macro.dbt.make_temp_relation", "macro.dbt.make_intermediate_relation", "macro.dbt.make_backup_relation", "macro.dbt.should_full_refresh", "macro.dbt.incremental_validate_on_schema_change", "macro.dbt.drop_relation_if_exists", "macro.dbt.run_hooks", "macro.dbt.get_create_table_as_sql", "macro.dbt.run_query", "macro.dbt.process_schema_changes", "macro.dbt.statement", "macro.dbt.create_indexes", "macro.dbt.should_revoke", "macro.dbt.apply_grants", "macro.dbt.persist_docs"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1756850323.1768486, "supported_languages": ["sql"]}, "macro.dbt.get_quoted_csv": {"name": "get_quoted_csv", "resource_type": "macro", "package_name": "dbt", "path": "macros/materializations/models/incremental/column_helpers.sql", "original_file_path": "macros/materializations/models/incremental/column_helpers.sql", "unique_id": "macro.dbt.get_quoted_csv", "macro_sql": "{% macro get_quoted_csv(column_names) %}\n\n    {% set quoted = [] %}\n    {% for col in column_names -%}\n        {%- do quoted.append(adapter.quote(col)) -%}\n    {%- endfor %}\n\n    {%- set dest_cols_csv = quoted | join(', ') -%}\n    {{ return(dest_cols_csv) }}\n\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1756850323.1784403, "supported_languages": null}, "macro.dbt.diff_columns": {"name": "diff_columns", "resource_type": "macro", "package_name": "dbt", "path": "macros/materializations/models/incremental/column_helpers.sql", "original_file_path": "macros/materializations/models/incremental/column_helpers.sql", "unique_id": "macro.dbt.diff_columns", "macro_sql": "{% macro diff_columns(source_columns, target_columns) %}\n\n  {% set result = [] %}\n  {% set source_names = source_columns | map(attribute = 'column') | list %}\n  {% set target_names = target_columns | map(attribute = 'column') | list %}\n\n   {# --check whether the name attribute exists in the target - this does not perform a data type check #}\n   {% for sc in source_columns %}\n     {% if sc.name not in target_names %}\n        {{ result.append(sc) }}\n     {% endif %}\n   {% endfor %}\n\n  {{ return(result) }}\n\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1756850323.1795459, "supported_languages": null}, "macro.dbt.diff_column_data_types": {"name": "diff_column_data_types", "resource_type": "macro", "package_name": "dbt", "path": "macros/materializations/models/incremental/column_helpers.sql", "original_file_path": "macros/materializations/models/incremental/column_helpers.sql", "unique_id": "macro.dbt.diff_column_data_types", "macro_sql": "{% macro diff_column_data_types(source_columns, target_columns) %}\n\n  {% set result = [] %}\n  {% for sc in source_columns %}\n    {% set tc = target_columns | selectattr(\"name\", \"equalto\", sc.name) | list | first %}\n    {% if tc %}\n      {% if sc.data_type != tc.data_type and not sc.can_expand_to(other_column=tc) %}\n        {{ result.append( { 'column_name': tc.name, 'new_type': sc.data_type } ) }}\n      {% endif %}\n    {% endif %}\n  {% endfor %}\n\n  {{ return(result) }}\n\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1756850323.1808333, "supported_languages": null}, "macro.dbt.get_merge_update_columns": {"name": "get_merge_update_columns", "resource_type": "macro", "package_name": "dbt", "path": "macros/materializations/models/incremental/column_helpers.sql", "original_file_path": "macros/materializations/models/incremental/column_helpers.sql", "unique_id": "macro.dbt.get_merge_update_columns", "macro_sql": "{% macro get_merge_update_columns(merge_update_columns, merge_exclude_columns, dest_columns) %}\n  {{ return(adapter.dispatch('get_merge_update_columns', 'dbt')(merge_update_columns, merge_exclude_columns, dest_columns)) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.default__get_merge_update_columns"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1756850323.1812851, "supported_languages": null}, "macro.dbt.default__get_merge_update_columns": {"name": "default__get_merge_update_columns", "resource_type": "macro", "package_name": "dbt", "path": "macros/materializations/models/incremental/column_helpers.sql", "original_file_path": "macros/materializations/models/incremental/column_helpers.sql", "unique_id": "macro.dbt.default__get_merge_update_columns", "macro_sql": "{% macro default__get_merge_update_columns(merge_update_columns, merge_exclude_columns, dest_columns) %}\n  {%- set default_cols = dest_columns | map(attribute=\"quoted\") | list -%}\n\n  {%- if merge_update_columns and merge_exclude_columns -%}\n    {{ exceptions.raise_compiler_error(\n        'Model cannot specify merge_update_columns and merge_exclude_columns. Please update model to use only one config'\n    )}}\n  {%- elif merge_update_columns -%}\n    {%- set update_columns = merge_update_columns -%}\n  {%- elif merge_exclude_columns -%}\n    {%- set update_columns = [] -%}\n    {%- for column in dest_columns -%}\n      {% if column.column | lower not in merge_exclude_columns | map(\"lower\") | list %}\n        {%- do update_columns.append(column.quoted) -%}\n      {% endif %}\n    {%- endfor -%}\n  {%- else -%}\n    {%- set update_columns = default_cols -%}\n  {%- endif -%}\n\n  {{ return(update_columns) }}\n\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1756850323.182679, "supported_languages": null}, "macro.dbt.incremental_validate_on_schema_change": {"name": "incremental_validate_on_schema_change", "resource_type": "macro", "package_name": "dbt", "path": "macros/materializations/models/incremental/on_schema_change.sql", "original_file_path": "macros/materializations/models/incremental/on_schema_change.sql", "unique_id": "macro.dbt.incremental_validate_on_schema_change", "macro_sql": "{% macro incremental_validate_on_schema_change(on_schema_change, default='ignore') %}\n\n   {% if on_schema_change not in ['sync_all_columns', 'append_new_columns', 'fail', 'ignore'] %}\n\n     {% set log_message = 'Invalid value for on_schema_change (%s) specified. Setting default value of %s.' % (on_schema_change, default) %}\n     {% do log(log_message) %}\n\n     {{ return(default) }}\n\n   {% else %}\n\n     {{ return(on_schema_change) }}\n\n   {% endif %}\n\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1756850323.1849093, "supported_languages": null}, "macro.dbt.check_for_schema_changes": {"name": "check_for_schema_changes", "resource_type": "macro", "package_name": "dbt", "path": "macros/materializations/models/incremental/on_schema_change.sql", "original_file_path": "macros/materializations/models/incremental/on_schema_change.sql", "unique_id": "macro.dbt.check_for_schema_changes", "macro_sql": "{% macro check_for_schema_changes(source_relation, target_relation) %}\n\n  {% set schema_changed = False %}\n\n  {%- set source_columns = adapter.get_columns_in_relation(source_relation) -%}\n  {%- set target_columns = adapter.get_columns_in_relation(target_relation) -%}\n  {%- set source_not_in_target = diff_columns(source_columns, target_columns) -%}\n  {%- set target_not_in_source = diff_columns(target_columns, source_columns) -%}\n\n  {% set new_target_types = diff_column_data_types(source_columns, target_columns) %}\n\n  {% if source_not_in_target != [] %}\n    {% set schema_changed = True %}\n  {% elif target_not_in_source != [] or new_target_types != [] %}\n    {% set schema_changed = True %}\n  {% elif new_target_types != [] %}\n    {% set schema_changed = True %}\n  {% endif %}\n\n  {% set changes_dict = {\n    'schema_changed': schema_changed,\n    'source_not_in_target': source_not_in_target,\n    'target_not_in_source': target_not_in_source,\n    'source_columns': source_columns,\n    'target_columns': target_columns,\n    'new_target_types': new_target_types\n  } %}\n\n  {% set msg %}\n    In {{ target_relation }}:\n        Schema changed: {{ schema_changed }}\n        Source columns not in target: {{ source_not_in_target }}\n        Target columns not in source: {{ target_not_in_source }}\n        New column types: {{ new_target_types }}\n  {% endset %}\n\n  {% do log(msg) %}\n\n  {{ return(changes_dict) }}\n\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.diff_columns", "macro.dbt.diff_column_data_types"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1756850323.1872199, "supported_languages": null}, "macro.dbt.sync_column_schemas": {"name": "sync_column_schemas", "resource_type": "macro", "package_name": "dbt", "path": "macros/materializations/models/incremental/on_schema_change.sql", "original_file_path": "macros/materializations/models/incremental/on_schema_change.sql", "unique_id": "macro.dbt.sync_column_schemas", "macro_sql": "{% macro sync_column_schemas(on_schema_change, target_relation, schema_changes_dict) %}\n\n  {%- set add_to_target_arr = schema_changes_dict['source_not_in_target'] -%}\n\n  {%- if on_schema_change == 'append_new_columns'-%}\n     {%- if add_to_target_arr | length > 0 -%}\n       {%- do alter_relation_add_remove_columns(target_relation, add_to_target_arr, none) -%}\n     {%- endif -%}\n\n  {% elif on_schema_change == 'sync_all_columns' %}\n     {%- set remove_from_target_arr = schema_changes_dict['target_not_in_source'] -%}\n     {%- set new_target_types = schema_changes_dict['new_target_types'] -%}\n\n     {% if add_to_target_arr | length > 0 or remove_from_target_arr | length > 0 %}\n       {%- do alter_relation_add_remove_columns(target_relation, add_to_target_arr, remove_from_target_arr) -%}\n     {% endif %}\n\n     {% if new_target_types != [] %}\n       {% for ntt in new_target_types %}\n         {% set column_name = ntt['column_name'] %}\n         {% set new_type = ntt['new_type'] %}\n         {% do alter_column_type(target_relation, column_name, new_type) %}\n       {% endfor %}\n     {% endif %}\n\n  {% endif %}\n\n  {% set schema_change_message %}\n    In {{ target_relation }}:\n        Schema change approach: {{ on_schema_change }}\n        Columns added: {{ add_to_target_arr }}\n        Columns removed: {{ remove_from_target_arr }}\n        Data types changed: {{ new_target_types }}\n  {% endset %}\n\n  {% do log(schema_change_message) %}\n\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.alter_relation_add_remove_columns", "macro.dbt.alter_column_type"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1756850323.1896136, "supported_languages": null}, "macro.dbt.process_schema_changes": {"name": "process_schema_changes", "resource_type": "macro", "package_name": "dbt", "path": "macros/materializations/models/incremental/on_schema_change.sql", "original_file_path": "macros/materializations/models/incremental/on_schema_change.sql", "unique_id": "macro.dbt.process_schema_changes", "macro_sql": "{% macro process_schema_changes(on_schema_change, source_relation, target_relation) %}\n\n    {% if on_schema_change == 'ignore' %}\n\n     {{ return({}) }}\n\n    {% else %}\n\n      {% set schema_changes_dict = check_for_schema_changes(source_relation, target_relation) %}\n\n      {% if schema_changes_dict['schema_changed'] %}\n\n        {% if on_schema_change == 'fail' %}\n\n          {% set fail_msg %}\n              The source and target schemas on this incremental model are out of sync!\n              They can be reconciled in several ways:\n                - set the `on_schema_change` config to either append_new_columns or sync_all_columns, depending on your situation.\n                - Re-run the incremental model with `full_refresh: True` to update the target schema.\n                - update the schema manually and re-run the process.\n\n              Additional troubleshooting context:\n                 Source columns not in target: {{ schema_changes_dict['source_not_in_target'] }}\n                 Target columns not in source: {{ schema_changes_dict['target_not_in_source'] }}\n                 New column types: {{ schema_changes_dict['new_target_types'] }}\n          {% endset %}\n\n          {% do exceptions.raise_compiler_error(fail_msg) %}\n\n        {# -- unless we ignore, run the sync operation per the config #}\n        {% else %}\n\n          {% do sync_column_schemas(on_schema_change, target_relation, schema_changes_dict) %}\n\n        {% endif %}\n\n      {% endif %}\n\n      {{ return(schema_changes_dict['source_columns']) }}\n\n    {% endif %}\n\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.check_for_schema_changes", "macro.dbt.sync_column_schemas"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1756850323.1912277, "supported_languages": null}, "macro.dbt.get_merge_sql": {"name": "get_merge_sql", "resource_type": "macro", "package_name": "dbt", "path": "macros/materializations/models/incremental/merge.sql", "original_file_path": "macros/materializations/models/incremental/merge.sql", "unique_id": "macro.dbt.get_merge_sql", "macro_sql": "{% macro get_merge_sql(target, source, unique_key, dest_columns, incremental_predicates=none) -%}\n   -- back compat for old kwarg name\n  {% set incremental_predicates = kwargs.get('predicates', incremental_predicates) %}\n  {{ adapter.dispatch('get_merge_sql', 'dbt')(target, source, unique_key, dest_columns, incremental_predicates) }}\n{%- endmacro %}", "depends_on": {"macros": ["macro.dbt.default__get_merge_sql"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1756850323.193235, "supported_languages": null}, "macro.dbt.default__get_merge_sql": {"name": "default__get_merge_sql", "resource_type": "macro", "package_name": "dbt", "path": "macros/materializations/models/incremental/merge.sql", "original_file_path": "macros/materializations/models/incremental/merge.sql", "unique_id": "macro.dbt.default__get_merge_sql", "macro_sql": "{% macro default__get_merge_sql(target, source, unique_key, dest_columns, incremental_predicates=none) -%}\n    {%- set predicates = [] if incremental_predicates is none else [] + incremental_predicates -%}\n    {%- set dest_cols_csv = get_quoted_csv(dest_columns | map(attribute=\"name\")) -%}\n    {%- set merge_update_columns = config.get('merge_update_columns') -%}\n    {%- set merge_exclude_columns = config.get('merge_exclude_columns') -%}\n    {%- set update_columns = get_merge_update_columns(merge_update_columns, merge_exclude_columns, dest_columns) -%}\n    {%- set sql_header = config.get('sql_header', none) -%}\n\n    {% if unique_key %}\n        {% if unique_key is sequence and unique_key is not mapping and unique_key is not string %}\n            {% for key in unique_key %}\n                {% set this_key_match %}\n                    DBT_INTERNAL_SOURCE.{{ key }} = DBT_INTERNAL_DEST.{{ key }}\n                {% endset %}\n                {% do predicates.append(this_key_match) %}\n            {% endfor %}\n        {% else %}\n            {% set source_unique_key = (\"DBT_INTERNAL_SOURCE.\" ~ unique_key) | trim %}\n\t    {% set target_unique_key = (\"DBT_INTERNAL_DEST.\" ~ unique_key) | trim %}\n\t    {% set unique_key_match = equals(source_unique_key, target_unique_key) | trim %}\n            {% do predicates.append(unique_key_match) %}\n        {% endif %}\n    {% else %}\n        {% do predicates.append('FALSE') %}\n    {% endif %}\n\n    {{ sql_header if sql_header is not none }}\n\n    merge into {{ target }} as DBT_INTERNAL_DEST\n        using {{ source }} as DBT_INTERNAL_SOURCE\n        on {{\"(\" ~ predicates | join(\") and (\") ~ \")\"}}\n\n    {% if unique_key %}\n    when matched then update set\n        {% for column_name in update_columns -%}\n            {{ column_name }} = DBT_INTERNAL_SOURCE.{{ column_name }}\n            {%- if not loop.last %}, {%- endif %}\n        {%- endfor %}\n    {% endif %}\n\n    when not matched then insert\n        ({{ dest_cols_csv }})\n    values\n        ({{ dest_cols_csv }})\n\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.get_quoted_csv", "macro.dbt.get_merge_update_columns", "macro.dbt.equals"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1756850323.1965537, "supported_languages": null}, "macro.dbt.get_delete_insert_merge_sql": {"name": "get_delete_insert_merge_sql", "resource_type": "macro", "package_name": "dbt", "path": "macros/materializations/models/incremental/merge.sql", "original_file_path": "macros/materializations/models/incremental/merge.sql", "unique_id": "macro.dbt.get_delete_insert_merge_sql", "macro_sql": "{% macro get_delete_insert_merge_sql(target, source, unique_key, dest_columns, incremental_predicates) -%}\n  {{ adapter.dispatch('get_delete_insert_merge_sql', 'dbt')(target, source, unique_key, dest_columns, incremental_predicates) }}\n{%- endmacro %}", "depends_on": {"macros": ["macro.dbt.default__get_delete_insert_merge_sql"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1756850323.1970701, "supported_languages": null}, "macro.dbt.default__get_delete_insert_merge_sql": {"name": "default__get_delete_insert_merge_sql", "resource_type": "macro", "package_name": "dbt", "path": "macros/materializations/models/incremental/merge.sql", "original_file_path": "macros/materializations/models/incremental/merge.sql", "unique_id": "macro.dbt.default__get_delete_insert_merge_sql", "macro_sql": "{% macro default__get_delete_insert_merge_sql(target, source, unique_key, dest_columns, incremental_predicates) -%}\n\n    {%- set dest_cols_csv = get_quoted_csv(dest_columns | map(attribute=\"name\")) -%}\n\n    {% if unique_key %}\n        {% if unique_key is string %}\n        {% set unique_key = [unique_key] %}\n        {% endif %}\n\n        {%- set unique_key_str = unique_key|join(', ') -%}\n\n        delete from {{ target }} as DBT_INTERNAL_DEST\n        where ({{ unique_key_str }}) in (\n            select distinct {{ unique_key_str }}\n            from {{ source }} as DBT_INTERNAL_SOURCE\n        )\n        {%- if incremental_predicates %}\n            {% for predicate in incremental_predicates %}\n                and {{ predicate }}\n            {% endfor %}\n        {%- endif -%};\n\n    {% endif %}\n\n    insert into {{ target }} ({{ dest_cols_csv }})\n    (\n        select {{ dest_cols_csv }}\n        from {{ source }}\n    )\n\n{%- endmacro %}", "depends_on": {"macros": ["macro.dbt.get_quoted_csv"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1756850323.1984608, "supported_languages": null}, "macro.dbt.get_insert_overwrite_merge_sql": {"name": "get_insert_overwrite_merge_sql", "resource_type": "macro", "package_name": "dbt", "path": "macros/materializations/models/incremental/merge.sql", "original_file_path": "macros/materializations/models/incremental/merge.sql", "unique_id": "macro.dbt.get_insert_overwrite_merge_sql", "macro_sql": "{% macro get_insert_overwrite_merge_sql(target, source, dest_columns, predicates, include_sql_header=false) -%}\n  {{ adapter.dispatch('get_insert_overwrite_merge_sql', 'dbt')(target, source, dest_columns, predicates, include_sql_header) }}\n{%- endmacro %}", "depends_on": {"macros": ["macro.dbt.default__get_insert_overwrite_merge_sql"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1756850323.1989799, "supported_languages": null}, "macro.dbt.default__get_insert_overwrite_merge_sql": {"name": "default__get_insert_overwrite_merge_sql", "resource_type": "macro", "package_name": "dbt", "path": "macros/materializations/models/incremental/merge.sql", "original_file_path": "macros/materializations/models/incremental/merge.sql", "unique_id": "macro.dbt.default__get_insert_overwrite_merge_sql", "macro_sql": "{% macro default__get_insert_overwrite_merge_sql(target, source, dest_columns, predicates, include_sql_header) -%}\n    {#-- The only time include_sql_header is True: --#}\n    {#-- BigQuery + insert_overwrite strategy + \"static\" partitions config --#}\n    {#-- We should consider including the sql header at the materialization level instead --#}\n\n    {%- set predicates = [] if predicates is none else [] + predicates -%}\n    {%- set dest_cols_csv = get_quoted_csv(dest_columns | map(attribute=\"name\")) -%}\n    {%- set sql_header = config.get('sql_header', none) -%}\n\n    {{ sql_header if sql_header is not none and include_sql_header }}\n\n    merge into {{ target }} as DBT_INTERNAL_DEST\n        using {{ source }} as DBT_INTERNAL_SOURCE\n        on FALSE\n\n    when not matched by source\n        {% if predicates %} and {{ predicates | join(' and ') }} {% endif %}\n        then delete\n\n    when not matched then insert\n        ({{ dest_cols_csv }})\n    values\n        ({{ dest_cols_csv }})\n\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.get_quoted_csv"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1756850323.200216, "supported_languages": null}, "macro.dbt.get_incremental_append_sql": {"name": "get_incremental_append_sql", "resource_type": "macro", "package_name": "dbt", "path": "macros/materializations/models/incremental/strategies.sql", "original_file_path": "macros/materializations/models/incremental/strategies.sql", "unique_id": "macro.dbt.get_incremental_append_sql", "macro_sql": "{% macro get_incremental_append_sql(arg_dict) %}\n\n  {{ return(adapter.dispatch('get_incremental_append_sql', 'dbt')(arg_dict)) }}\n\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.default__get_incremental_append_sql"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1756850323.201426, "supported_languages": null}, "macro.dbt.default__get_incremental_append_sql": {"name": "default__get_incremental_append_sql", "resource_type": "macro", "package_name": "dbt", "path": "macros/materializations/models/incremental/strategies.sql", "original_file_path": "macros/materializations/models/incremental/strategies.sql", "unique_id": "macro.dbt.default__get_incremental_append_sql", "macro_sql": "{% macro default__get_incremental_append_sql(arg_dict) %}\n\n  {% do return(get_insert_into_sql(arg_dict[\"target_relation\"], arg_dict[\"temp_relation\"], arg_dict[\"dest_columns\"])) %}\n\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.get_insert_into_sql"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1756850323.2018888, "supported_languages": null}, "macro.dbt.get_incremental_delete_insert_sql": {"name": "get_incremental_delete_insert_sql", "resource_type": "macro", "package_name": "dbt", "path": "macros/materializations/models/incremental/strategies.sql", "original_file_path": "macros/materializations/models/incremental/strategies.sql", "unique_id": "macro.dbt.get_incremental_delete_insert_sql", "macro_sql": "{% macro get_incremental_delete_insert_sql(arg_dict) %}\n\n  {{ return(adapter.dispatch('get_incremental_delete_insert_sql', 'dbt')(arg_dict)) }}\n\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.default__get_incremental_delete_insert_sql"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1756850323.202248, "supported_languages": null}, "macro.dbt.default__get_incremental_delete_insert_sql": {"name": "default__get_incremental_delete_insert_sql", "resource_type": "macro", "package_name": "dbt", "path": "macros/materializations/models/incremental/strategies.sql", "original_file_path": "macros/materializations/models/incremental/strategies.sql", "unique_id": "macro.dbt.default__get_incremental_delete_insert_sql", "macro_sql": "{% macro default__get_incremental_delete_insert_sql(arg_dict) %}\n\n  {% do return(get_delete_insert_merge_sql(arg_dict[\"target_relation\"], arg_dict[\"temp_relation\"], arg_dict[\"unique_key\"], arg_dict[\"dest_columns\"], arg_dict[\"incremental_predicates\"])) %}\n\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.get_delete_insert_merge_sql"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1756850323.2028263, "supported_languages": null}, "macro.dbt.get_incremental_merge_sql": {"name": "get_incremental_merge_sql", "resource_type": "macro", "package_name": "dbt", "path": "macros/materializations/models/incremental/strategies.sql", "original_file_path": "macros/materializations/models/incremental/strategies.sql", "unique_id": "macro.dbt.get_incremental_merge_sql", "macro_sql": "{% macro get_incremental_merge_sql(arg_dict) %}\n\n  {{ return(adapter.dispatch('get_incremental_merge_sql', 'dbt')(arg_dict)) }}\n\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.default__get_incremental_merge_sql"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1756850323.2031803, "supported_languages": null}, "macro.dbt.default__get_incremental_merge_sql": {"name": "default__get_incremental_merge_sql", "resource_type": "macro", "package_name": "dbt", "path": "macros/materializations/models/incremental/strategies.sql", "original_file_path": "macros/materializations/models/incremental/strategies.sql", "unique_id": "macro.dbt.default__get_incremental_merge_sql", "macro_sql": "{% macro default__get_incremental_merge_sql(arg_dict) %}\n\n  {% do return(get_merge_sql(arg_dict[\"target_relation\"], arg_dict[\"temp_relation\"], arg_dict[\"unique_key\"], arg_dict[\"dest_columns\"], arg_dict[\"incremental_predicates\"])) %}\n\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.get_merge_sql"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1756850323.2037187, "supported_languages": null}, "macro.dbt.get_incremental_insert_overwrite_sql": {"name": "get_incremental_insert_overwrite_sql", "resource_type": "macro", "package_name": "dbt", "path": "macros/materializations/models/incremental/strategies.sql", "original_file_path": "macros/materializations/models/incremental/strategies.sql", "unique_id": "macro.dbt.get_incremental_insert_overwrite_sql", "macro_sql": "{% macro get_incremental_insert_overwrite_sql(arg_dict) %}\n\n  {{ return(adapter.dispatch('get_incremental_insert_overwrite_sql', 'dbt')(arg_dict)) }}\n\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.default__get_incremental_insert_overwrite_sql"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1756850323.204086, "supported_languages": null}, "macro.dbt.default__get_incremental_insert_overwrite_sql": {"name": "default__get_incremental_insert_overwrite_sql", "resource_type": "macro", "package_name": "dbt", "path": "macros/materializations/models/incremental/strategies.sql", "original_file_path": "macros/materializations/models/incremental/strategies.sql", "unique_id": "macro.dbt.default__get_incremental_insert_overwrite_sql", "macro_sql": "{% macro default__get_incremental_insert_overwrite_sql(arg_dict) %}\n\n  {% do return(get_insert_overwrite_merge_sql(arg_dict[\"target_relation\"], arg_dict[\"temp_relation\"], arg_dict[\"dest_columns\"], arg_dict[\"incremental_predicates\"])) %}\n\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.get_insert_overwrite_merge_sql"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1756850323.2045732, "supported_languages": null}, "macro.dbt.get_incremental_default_sql": {"name": "get_incremental_default_sql", "resource_type": "macro", "package_name": "dbt", "path": "macros/materializations/models/incremental/strategies.sql", "original_file_path": "macros/materializations/models/incremental/strategies.sql", "unique_id": "macro.dbt.get_incremental_default_sql", "macro_sql": "{% macro get_incremental_default_sql(arg_dict) %}\n\n  {{ return(adapter.dispatch('get_incremental_default_sql', 'dbt')(arg_dict)) }}\n\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt_postgres.postgres__get_incremental_default_sql"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1756850323.2049532, "supported_languages": null}, "macro.dbt.default__get_incremental_default_sql": {"name": "default__get_incremental_default_sql", "resource_type": "macro", "package_name": "dbt", "path": "macros/materializations/models/incremental/strategies.sql", "original_file_path": "macros/materializations/models/incremental/strategies.sql", "unique_id": "macro.dbt.default__get_incremental_default_sql", "macro_sql": "{% macro default__get_incremental_default_sql(arg_dict) %}\n\n  {% do return(get_incremental_append_sql(arg_dict)) %}\n\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.get_incremental_append_sql"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1756850323.2052512, "supported_languages": null}, "macro.dbt.get_incremental_microbatch_sql": {"name": "get_incremental_microbatch_sql", "resource_type": "macro", "package_name": "dbt", "path": "macros/materializations/models/incremental/strategies.sql", "original_file_path": "macros/materializations/models/incremental/strategies.sql", "unique_id": "macro.dbt.get_incremental_microbatch_sql", "macro_sql": "{% macro get_incremental_microbatch_sql(arg_dict) %}\n\n  {{ return(adapter.dispatch('get_incremental_microbatch_sql', 'dbt')(arg_dict)) }}\n\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt_postgres.postgres__get_incremental_microbatch_sql"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1756850323.2056034, "supported_languages": null}, "macro.dbt.default__get_incremental_microbatch_sql": {"name": "default__get_incremental_microbatch_sql", "resource_type": "macro", "package_name": "dbt", "path": "macros/materializations/models/incremental/strategies.sql", "original_file_path": "macros/materializations/models/incremental/strategies.sql", "unique_id": "macro.dbt.default__get_incremental_microbatch_sql", "macro_sql": "{% macro default__get_incremental_microbatch_sql(arg_dict) %}\n\n  {{ exceptions.raise_not_implemented('microbatch materialization strategy not implemented for adapter ' + adapter.type()) }}\n\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1756850323.2060602, "supported_languages": null}, "macro.dbt.get_insert_into_sql": {"name": "get_insert_into_sql", "resource_type": "macro", "package_name": "dbt", "path": "macros/materializations/models/incremental/strategies.sql", "original_file_path": "macros/materializations/models/incremental/strategies.sql", "unique_id": "macro.dbt.get_insert_into_sql", "macro_sql": "{% macro get_insert_into_sql(target_relation, temp_relation, dest_columns) %}\n\n    {%- set dest_cols_csv = get_quoted_csv(dest_columns | map(attribute=\"name\")) -%}\n\n    insert into {{ target_relation }} ({{ dest_cols_csv }})\n    (\n        select {{ dest_cols_csv }}\n        from {{ temp_relation }}\n    )\n\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.get_quoted_csv"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1756850323.206604, "supported_languages": null}, "macro.dbt.is_incremental": {"name": "is_incremental", "resource_type": "macro", "package_name": "dbt", "path": "macros/materializations/models/incremental/is_incremental.sql", "original_file_path": "macros/materializations/models/incremental/is_incremental.sql", "unique_id": "macro.dbt.is_incremental", "macro_sql": "{% macro is_incremental() %}\n    {#-- do not run introspective queries in parsing #}\n    {% if not execute %}\n        {{ return(False) }}\n    {% else %}\n        {% set relation = adapter.get_relation(this.database, this.schema, this.table) %}\n        {{ return(relation is not none\n                  and relation.type == 'table'\n                  and model.config.materialized == 'incremental'\n                  and not should_full_refresh()) }}\n    {% endif %}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.should_full_refresh"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1756850323.2077038, "supported_languages": null}, "macro.dbt.generate_alias_name": {"name": "generate_alias_name", "resource_type": "macro", "package_name": "dbt", "path": "macros/get_custom_name/get_custom_alias.sql", "original_file_path": "macros/get_custom_name/get_custom_alias.sql", "unique_id": "macro.dbt.generate_alias_name", "macro_sql": "{% macro generate_alias_name(custom_alias_name=none, node=none) -%}\n    {% do return(adapter.dispatch('generate_alias_name', 'dbt')(custom_alias_name, node)) %}\n{%- endmacro %}", "depends_on": {"macros": ["macro.dbt.default__generate_alias_name"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1756850323.2084224, "supported_languages": null}, "macro.dbt.default__generate_alias_name": {"name": "default__generate_alias_name", "resource_type": "macro", "package_name": "dbt", "path": "macros/get_custom_name/get_custom_alias.sql", "original_file_path": "macros/get_custom_name/get_custom_alias.sql", "unique_id": "macro.dbt.default__generate_alias_name", "macro_sql": "{% macro default__generate_alias_name(custom_alias_name=none, node=none) -%}\n\n    {%- if custom_alias_name -%}\n\n        {{ custom_alias_name | trim }}\n\n    {%- elif node.version -%}\n\n        {{ return(node.name ~ \"_v\" ~ (node.version | replace(\".\", \"_\"))) }}\n\n    {%- else -%}\n\n        {{ node.name }}\n\n    {%- endif -%}\n\n{%- endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1756850323.209176, "supported_languages": null}, "macro.dbt.generate_database_name": {"name": "generate_database_name", "resource_type": "macro", "package_name": "dbt", "path": "macros/get_custom_name/get_custom_database.sql", "original_file_path": "macros/get_custom_name/get_custom_database.sql", "unique_id": "macro.dbt.generate_database_name", "macro_sql": "{% macro generate_database_name(custom_database_name=none, node=none) -%}\n    {% do return(adapter.dispatch('generate_database_name', 'dbt')(custom_database_name, node)) %}\n{%- endmacro %}", "depends_on": {"macros": ["macro.dbt.default__generate_database_name"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1756850323.2098746, "supported_languages": null}, "macro.dbt.default__generate_database_name": {"name": "default__generate_database_name", "resource_type": "macro", "package_name": "dbt", "path": "macros/get_custom_name/get_custom_database.sql", "original_file_path": "macros/get_custom_name/get_custom_database.sql", "unique_id": "macro.dbt.default__generate_database_name", "macro_sql": "{% macro default__generate_database_name(custom_database_name=none, node=none) -%}\n    {%- set default_database = target.database -%}\n    {%- if custom_database_name is none -%}\n\n        {{ default_database }}\n\n    {%- else -%}\n\n        {{ custom_database_name }}\n\n    {%- endif -%}\n\n{%- endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1756850323.2103753, "supported_languages": null}, "macro.dbt.generate_schema_name": {"name": "generate_schema_name", "resource_type": "macro", "package_name": "dbt", "path": "macros/get_custom_name/get_custom_schema.sql", "original_file_path": "macros/get_custom_name/get_custom_schema.sql", "unique_id": "macro.dbt.generate_schema_name", "macro_sql": "{% macro generate_schema_name(custom_schema_name=none, node=none) -%}\n    {{ return(adapter.dispatch('generate_schema_name', 'dbt')(custom_schema_name, node)) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.default__generate_schema_name"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1756850323.211198, "supported_languages": null}, "macro.dbt.default__generate_schema_name": {"name": "default__generate_schema_name", "resource_type": "macro", "package_name": "dbt", "path": "macros/get_custom_name/get_custom_schema.sql", "original_file_path": "macros/get_custom_name/get_custom_schema.sql", "unique_id": "macro.dbt.default__generate_schema_name", "macro_sql": "{% macro default__generate_schema_name(custom_schema_name, node) -%}\n\n    {%- set default_schema = target.schema -%}\n    {%- if custom_schema_name is none -%}\n\n        {{ default_schema }}\n\n    {%- else -%}\n\n        {{ default_schema }}_{{ custom_schema_name | trim }}\n\n    {%- endif -%}\n\n{%- endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1756850323.2117138, "supported_languages": null}, "macro.dbt.generate_schema_name_for_env": {"name": "generate_schema_name_for_env", "resource_type": "macro", "package_name": "dbt", "path": "macros/get_custom_name/get_custom_schema.sql", "original_file_path": "macros/get_custom_name/get_custom_schema.sql", "unique_id": "macro.dbt.generate_schema_name_for_env", "macro_sql": "{% macro generate_schema_name_for_env(custom_schema_name, node) -%}\n\n    {%- set default_schema = target.schema -%}\n    {%- if target.name == 'prod' and custom_schema_name is not none -%}\n\n        {{ custom_schema_name | trim }}\n\n    {%- else -%}\n\n        {{ default_schema }}\n\n    {%- endif -%}\n\n{%- endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1756850323.2122743, "supported_languages": null}, "macro.dbt.resolve_model_name": {"name": "resolve_model_name", "resource_type": "macro", "package_name": "dbt", "path": "macros/python_model/python.sql", "original_file_path": "macros/python_model/python.sql", "unique_id": "macro.dbt.resolve_model_name", "macro_sql": "{% macro resolve_model_name(input_model_name) %}\n    {{ return(adapter.dispatch('resolve_model_name', 'dbt')(input_model_name)) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.default__resolve_model_name"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1756850323.2135975, "supported_languages": null}, "macro.dbt.default__resolve_model_name": {"name": "default__resolve_model_name", "resource_type": "macro", "package_name": "dbt", "path": "macros/python_model/python.sql", "original_file_path": "macros/python_model/python.sql", "unique_id": "macro.dbt.default__resolve_model_name", "macro_sql": "\n\n{%- macro default__resolve_model_name(input_model_name) -%}\n    {{  input_model_name | string | replace('\"', '\\\"') }}\n{%- endmacro -%}\n\n", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1756850323.213918, "supported_languages": null}, "macro.dbt.build_ref_function": {"name": "build_ref_function", "resource_type": "macro", "package_name": "dbt", "path": "macros/python_model/python.sql", "original_file_path": "macros/python_model/python.sql", "unique_id": "macro.dbt.build_ref_function", "macro_sql": "{% macro build_ref_function(model) %}\n\n    {%- set ref_dict = {} -%}\n    {%- for _ref in model.refs -%}\n        {% set _ref_args = [_ref.get('package'), _ref['name']] if _ref.get('package') else [_ref['name'],] %}\n        {%- set resolved = ref(*_ref_args, v=_ref.get('version')) -%}\n\n        {#\n            We want to get the string of the returned relation by calling .render() in order to skip sample/empty\n            mode rendering logic. However, people override the default ref macro, and often return a string instead\n            of a relation (like the ref macro does by default). Thus, to make sure we dont blow things up, we have\n            to ensure the resolved relation has a .render() method.\n        #}\n        {%- if resolved.render is defined and resolved.render is callable -%}\n            {%- set resolved = resolved.render() -%}\n        {%- endif -%}\n\n        {%- if _ref.get('version') -%}\n            {% do _ref_args.extend([\"v\" ~ _ref['version']]) %}\n        {%- endif -%}\n       {%- do ref_dict.update({_ref_args | join('.'): resolve_model_name(resolved)}) -%}\n    {%- endfor -%}\n\ndef ref(*args, **kwargs):\n    refs = {{ ref_dict | tojson }}\n    key = '.'.join(args)\n    version = kwargs.get(\"v\") or kwargs.get(\"version\")\n    if version:\n        key += f\".v{version}\"\n    dbt_load_df_function = kwargs.get(\"dbt_load_df_function\")\n    return dbt_load_df_function(refs[key])\n\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.resolve_model_name"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1756850323.2157207, "supported_languages": null}, "macro.dbt.build_source_function": {"name": "build_source_function", "resource_type": "macro", "package_name": "dbt", "path": "macros/python_model/python.sql", "original_file_path": "macros/python_model/python.sql", "unique_id": "macro.dbt.build_source_function", "macro_sql": "{% macro build_source_function(model) %}\n\n    {%- set source_dict = {} -%}\n    {%- for _source in model.sources -%}\n        {%- set resolved = source(*_source) -%}\n        {%- do source_dict.update({_source | join('.'): resolve_model_name(resolved)}) -%}\n    {%- endfor -%}\n\ndef source(*args, dbt_load_df_function):\n    sources = {{ source_dict | tojson }}\n    key = '.'.join(args)\n    return dbt_load_df_function(sources[key])\n\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.resolve_model_name"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1756850323.2165143, "supported_languages": null}, "macro.dbt.build_config_dict": {"name": "build_config_dict", "resource_type": "macro", "package_name": "dbt", "path": "macros/python_model/python.sql", "original_file_path": "macros/python_model/python.sql", "unique_id": "macro.dbt.build_config_dict", "macro_sql": "{% macro build_config_dict(model) %}\n    {%- set config_dict = {} -%}\n    {% set config_dbt_used = zip(model.config.config_keys_used, model.config.config_keys_defaults) | list %}\n    {%- for key, default in config_dbt_used -%}\n        {# weird type testing with enum, would be much easier to write this logic in Python! #}\n        {%- if key == \"language\" -%}\n          {%- set value = \"python\" -%}\n        {%- endif -%}\n        {%- set value = model.config.get(key, default) -%}\n        {%- do config_dict.update({key: value}) -%}\n    {%- endfor -%}\nconfig_dict = {{ config_dict }}\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1756850323.217619, "supported_languages": null}, "macro.dbt.py_script_postfix": {"name": "py_script_postfix", "resource_type": "macro", "package_name": "dbt", "path": "macros/python_model/python.sql", "original_file_path": "macros/python_model/python.sql", "unique_id": "macro.dbt.py_script_postfix", "macro_sql": "{% macro py_script_postfix(model) %}\n# This part is user provided model code\n# you will need to copy the next section to run the code\n# COMMAND ----------\n# this part is dbt logic for get ref work, do not modify\n\n{{ build_ref_function(model ) }}\n{{ build_source_function(model ) }}\n{{ build_config_dict(model) }}\n\nclass config:\n    def __init__(self, *args, **kwargs):\n        pass\n\n    @staticmethod\n    def get(key, default=None):\n        return config_dict.get(key, default)\n\nclass this:\n    \"\"\"dbt.this() or dbt.this.identifier\"\"\"\n    database = \"{{ this.database }}\"\n    schema = \"{{ this.schema }}\"\n    identifier = \"{{ this.identifier }}\"\n    {% set this_relation_name = resolve_model_name(this) %}\n    def __repr__(self):\n        return '{{ this_relation_name  }}'\n\n\nclass dbtObj:\n    def __init__(self, load_df_function) -> None:\n        self.source = lambda *args: source(*args, dbt_load_df_function=load_df_function)\n        self.ref = lambda *args, **kwargs: ref(*args, **kwargs, dbt_load_df_function=load_df_function)\n        self.config = config\n        self.this = this()\n        self.is_incremental = {{ is_incremental() }}\n\n# COMMAND ----------\n{{py_script_comment()}}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.build_ref_function", "macro.dbt.build_source_function", "macro.dbt.build_config_dict", "macro.dbt.resolve_model_name", "macro.dbt.is_incremental", "macro.dbt.py_script_comment"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1756850323.2185028, "supported_languages": null}, "macro.dbt.py_script_comment": {"name": "py_script_comment", "resource_type": "macro", "package_name": "dbt", "path": "macros/python_model/python.sql", "original_file_path": "macros/python_model/python.sql", "unique_id": "macro.dbt.py_script_comment", "macro_sql": "{%macro py_script_comment()%}\n{%endmacro%}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1756850323.2186544, "supported_languages": null}, "macro.dbt.get_fixture_sql": {"name": "get_fixture_sql", "resource_type": "macro", "package_name": "dbt", "path": "macros/unit_test_sql/get_fixture_sql.sql", "original_file_path": "macros/unit_test_sql/get_fixture_sql.sql", "unique_id": "macro.dbt.get_fixture_sql", "macro_sql": "{% macro get_fixture_sql(rows, column_name_to_data_types) %}\n-- Fixture for {{ model.name }}\n{% set default_row = {} %}\n\n{%- if not column_name_to_data_types -%}\n{#-- Use defer_relation IFF it is available in the manifest and 'this' is missing from the database --#}\n{%-   set this_or_defer_relation = defer_relation if (defer_relation and not load_relation(this)) else this -%}\n{%-   set columns_in_relation = adapter.get_columns_in_relation(this_or_defer_relation) -%}\n\n{%-   set column_name_to_data_types = {} -%}\n{%-   set column_name_to_quoted = {} -%}\n{%-   for column in columns_in_relation -%}\n\n{#-- This needs to be a case-insensitive comparison --#}\n{%-     do column_name_to_data_types.update({column.name|lower: column.data_type}) -%}\n{%-     do column_name_to_quoted.update({column.name|lower: column.quoted}) -%}\n{%-   endfor -%}\n{%- endif -%}\n\n{%- if not column_name_to_data_types -%}\n    {{ exceptions.raise_compiler_error(\"Not able to get columns for unit test '\" ~ model.name ~ \"' from relation \" ~ this ~ \" because the relation doesn't exist\") }}\n{%- endif -%}\n\n{%- for column_name, column_type in column_name_to_data_types.items() -%}\n    {%- do default_row.update({column_name: (safe_cast(\"null\", column_type) | trim )}) -%}\n{%- endfor -%}\n\n{{ validate_fixture_rows(rows, row_number) }}\n\n{%- for row in rows -%}\n{%-   set formatted_row = format_row(row, column_name_to_data_types) -%}\n{%-   set default_row_copy = default_row.copy() -%}\n{%-   do default_row_copy.update(formatted_row) -%}\nselect\n{%-   for column_name, column_value in default_row_copy.items() %} {{ column_value }} as {{ column_name_to_quoted[column_name] }}{% if not loop.last -%}, {%- endif %}\n{%-   endfor %}\n{%-   if not loop.last %}\nunion all\n{%    endif %}\n{%- endfor -%}\n\n{%- if (rows | length) == 0 -%}\n    select\n    {%- for column_name, column_value in default_row.items() %} {{ column_value }} as {{ column_name_to_quoted[column_name] }}{% if not loop.last -%},{%- endif %}\n    {%- endfor %}\n    limit 0\n{%- endif -%}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.load_relation", "macro.dbt.safe_cast", "macro.dbt.validate_fixture_rows", "macro.dbt.format_row"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1756850323.2236204, "supported_languages": null}, "macro.dbt.get_expected_sql": {"name": "get_expected_sql", "resource_type": "macro", "package_name": "dbt", "path": "macros/unit_test_sql/get_fixture_sql.sql", "original_file_path": "macros/unit_test_sql/get_fixture_sql.sql", "unique_id": "macro.dbt.get_expected_sql", "macro_sql": "{% macro get_expected_sql(rows, column_name_to_data_types, column_name_to_quoted) %}\n\n{%- if (rows | length) == 0 -%}\n    select * from dbt_internal_unit_test_actual\n    limit 0\n{%- else -%}\n{%- for row in rows -%}\n{%- set formatted_row = format_row(row, column_name_to_data_types) -%}\nselect\n{%- for column_name, column_value in formatted_row.items() %} {{ column_value }} as {{ column_name_to_quoted[column_name] }}{% if not loop.last -%}, {%- endif %}\n{%- endfor %}\n{%- if not loop.last %}\nunion all\n{% endif %}\n{%- endfor -%}\n{%- endif -%}\n\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.format_row"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1756850323.2247822, "supported_languages": null}, "macro.dbt.format_row": {"name": "format_row", "resource_type": "macro", "package_name": "dbt", "path": "macros/unit_test_sql/get_fixture_sql.sql", "original_file_path": "macros/unit_test_sql/get_fixture_sql.sql", "unique_id": "macro.dbt.format_row", "macro_sql": "\n\n{%- macro format_row(row, column_name_to_data_types) -%}\n    {#-- generate case-insensitive formatted row --#}\n    {% set formatted_row = {} %}\n    {%- for column_name, column_value in row.items() -%}\n        {% set column_name = column_name|lower %}\n\n        {%- if column_name not in column_name_to_data_types %}\n            {#-- if user-provided row contains column name that relation does not contain, raise an error --#}\n            {% set fixture_name = \"expected output\" if model.resource_type == 'unit_test' else (\"'\" ~ model.name ~ \"'\") %}\n            {{ exceptions.raise_compiler_error(\n                \"Invalid column name: '\" ~ column_name ~ \"' in unit test fixture for \" ~ fixture_name ~ \".\"\n                \"\\nAccepted columns for \" ~ fixture_name ~ \" are: \" ~ (column_name_to_data_types.keys()|list)\n            ) }}\n        {%- endif -%}\n\n        {%- set column_type = column_name_to_data_types[column_name] %}\n\n        {#-- sanitize column_value: wrap yaml strings in quotes, apply cast --#}\n        {%- set column_value_clean = column_value -%}\n        {%- if column_value is string -%}\n            {%- set column_value_clean = dbt.string_literal(dbt.escape_single_quotes(column_value)) -%}\n        {%- elif column_value is none -%}\n            {%- set column_value_clean = 'null' -%}\n        {%- endif -%}\n\n        {%- set row_update = {column_name: safe_cast(column_value_clean, column_type) } -%}\n        {%- do formatted_row.update(row_update) -%}\n    {%- endfor -%}\n    {{ return(formatted_row) }}\n{%- endmacro -%}\n\n", "depends_on": {"macros": ["macro.dbt.string_literal", "macro.dbt.escape_single_quotes", "macro.dbt.safe_cast"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1756850323.2269173, "supported_languages": null}, "macro.dbt.validate_fixture_rows": {"name": "validate_fixture_rows", "resource_type": "macro", "package_name": "dbt", "path": "macros/unit_test_sql/get_fixture_sql.sql", "original_file_path": "macros/unit_test_sql/get_fixture_sql.sql", "unique_id": "macro.dbt.validate_fixture_rows", "macro_sql": "{%- macro validate_fixture_rows(rows, row_number) -%}\n  {{ return(adapter.dispatch('validate_fixture_rows', 'dbt')(rows, row_number)) }}\n{%- endmacro -%}\n\n", "depends_on": {"macros": ["macro.dbt.default__validate_fixture_rows"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1756850323.2273223, "supported_languages": null}, "macro.dbt.default__validate_fixture_rows": {"name": "default__validate_fixture_rows", "resource_type": "macro", "package_name": "dbt", "path": "macros/unit_test_sql/get_fixture_sql.sql", "original_file_path": "macros/unit_test_sql/get_fixture_sql.sql", "unique_id": "macro.dbt.default__validate_fixture_rows", "macro_sql": "{%- macro default__validate_fixture_rows(rows, row_number) -%}\n  {# This is an abstract method for adapter overrides as needed #}\n{%- endmacro -%}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1756850323.227517, "supported_languages": null}, "macro.dbt.get_rename_sql": {"name": "get_rename_sql", "resource_type": "macro", "package_name": "dbt", "path": "macros/relations/rename.sql", "original_file_path": "macros/relations/rename.sql", "unique_id": "macro.dbt.get_rename_sql", "macro_sql": "{%- macro get_rename_sql(relation, new_name) -%}\n    {{- log('Applying RENAME to: ' ~ relation) -}}\n    {{- adapter.dispatch('get_rename_sql', 'dbt')(relation, new_name) -}}\n{%- endmacro -%}\n\n\n", "depends_on": {"macros": ["macro.dbt.default__get_rename_sql"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1756850323.2284286, "supported_languages": null}, "macro.dbt.default__get_rename_sql": {"name": "default__get_rename_sql", "resource_type": "macro", "package_name": "dbt", "path": "macros/relations/rename.sql", "original_file_path": "macros/relations/rename.sql", "unique_id": "macro.dbt.default__get_rename_sql", "macro_sql": "{%- macro default__get_rename_sql(relation, new_name) -%}\n\n    {%- if relation.is_view -%}\n        {{ get_rename_view_sql(relation, new_name) }}\n\n    {%- elif relation.is_table -%}\n        {{ get_rename_table_sql(relation, new_name) }}\n\n    {%- elif relation.is_materialized_view -%}\n        {{ get_rename_materialized_view_sql(relation, new_name) }}\n\n    {%- else -%}\n        {{- exceptions.raise_compiler_error(\"`get_rename_sql` has not been implemented for: \" ~ relation.type ) -}}\n\n    {%- endif -%}\n\n{%- endmacro -%}\n\n\n", "depends_on": {"macros": ["macro.dbt.get_rename_view_sql", "macro.dbt.get_rename_table_sql", "macro.dbt.get_rename_materialized_view_sql"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1756850323.2293446, "supported_languages": null}, "macro.dbt.rename_relation": {"name": "rename_relation", "resource_type": "macro", "package_name": "dbt", "path": "macros/relations/rename.sql", "original_file_path": "macros/relations/rename.sql", "unique_id": "macro.dbt.rename_relation", "macro_sql": "{% macro rename_relation(from_relation, to_relation) -%}\n  {{ return(adapter.dispatch('rename_relation', 'dbt')(from_relation, to_relation)) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.default__rename_relation"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1756850323.229746, "supported_languages": null}, "macro.dbt.default__rename_relation": {"name": "default__rename_relation", "resource_type": "macro", "package_name": "dbt", "path": "macros/relations/rename.sql", "original_file_path": "macros/relations/rename.sql", "unique_id": "macro.dbt.default__rename_relation", "macro_sql": "{% macro default__rename_relation(from_relation, to_relation) -%}\n  {% set target_name = adapter.quote_as_configured(to_relation.identifier, 'identifier') %}\n  {% call statement('rename_relation') -%}\n    alter table {{ from_relation.render() }} rename to {{ target_name }}\n  {%- endcall %}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.statement"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1756850323.2303438, "supported_languages": null}, "macro.dbt.get_rename_intermediate_sql": {"name": "get_rename_intermediate_sql", "resource_type": "macro", "package_name": "dbt", "path": "macros/relations/rename_intermediate.sql", "original_file_path": "macros/relations/rename_intermediate.sql", "unique_id": "macro.dbt.get_rename_intermediate_sql", "macro_sql": "{%- macro get_rename_intermediate_sql(relation) -%}\n    {{- log('Applying RENAME INTERMEDIATE to: ' ~ relation) -}}\n    {{- adapter.dispatch('get_rename_intermediate_sql', 'dbt')(relation) -}}\n{%- endmacro -%}\n\n\n", "depends_on": {"macros": ["macro.dbt.default__get_rename_intermediate_sql"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1756850323.2309465, "supported_languages": null}, "macro.dbt.default__get_rename_intermediate_sql": {"name": "default__get_rename_intermediate_sql", "resource_type": "macro", "package_name": "dbt", "path": "macros/relations/rename_intermediate.sql", "original_file_path": "macros/relations/rename_intermediate.sql", "unique_id": "macro.dbt.default__get_rename_intermediate_sql", "macro_sql": "{%- macro default__get_rename_intermediate_sql(relation) -%}\n\n    -- get the standard intermediate name\n    {% set intermediate_relation = make_intermediate_relation(relation) %}\n\n    {{ get_rename_sql(intermediate_relation, relation.identifier) }}\n\n{%- endmacro -%}", "depends_on": {"macros": ["macro.dbt.make_intermediate_relation", "macro.dbt.get_rename_sql"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1756850323.231348, "supported_languages": null}, "macro.dbt.get_create_intermediate_sql": {"name": "get_create_intermediate_sql", "resource_type": "macro", "package_name": "dbt", "path": "macros/relations/create_intermediate.sql", "original_file_path": "macros/relations/create_intermediate.sql", "unique_id": "macro.dbt.get_create_intermediate_sql", "macro_sql": "{%- macro get_create_intermediate_sql(relation, sql) -%}\n    {{- log('Applying CREATE INTERMEDIATE to: ' ~ relation) -}}\n    {{- adapter.dispatch('get_create_intermediate_sql', 'dbt')(relation, sql) -}}\n{%- endmacro -%}\n\n\n", "depends_on": {"macros": ["macro.dbt.default__get_create_intermediate_sql"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1756850323.2319913, "supported_languages": null}, "macro.dbt.default__get_create_intermediate_sql": {"name": "default__get_create_intermediate_sql", "resource_type": "macro", "package_name": "dbt", "path": "macros/relations/create_intermediate.sql", "original_file_path": "macros/relations/create_intermediate.sql", "unique_id": "macro.dbt.default__get_create_intermediate_sql", "macro_sql": "{%- macro default__get_create_intermediate_sql(relation, sql) -%}\n\n    -- get the standard intermediate name\n    {% set intermediate_relation = make_intermediate_relation(relation) %}\n\n    -- drop any pre-existing intermediate\n    {{ get_drop_sql(intermediate_relation) }};\n\n    {{ get_create_sql(intermediate_relation, sql) }}\n\n{%- endmacro -%}", "depends_on": {"macros": ["macro.dbt.make_intermediate_relation", "macro.dbt.get_drop_sql", "macro.dbt.get_create_sql"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1756850323.2324674, "supported_languages": null}, "macro.dbt.get_create_backup_sql": {"name": "get_create_backup_sql", "resource_type": "macro", "package_name": "dbt", "path": "macros/relations/create_backup.sql", "original_file_path": "macros/relations/create_backup.sql", "unique_id": "macro.dbt.get_create_backup_sql", "macro_sql": "{%- macro get_create_backup_sql(relation) -%}\n    {{- log('Applying CREATE BACKUP to: ' ~ relation) -}}\n    {{- adapter.dispatch('get_create_backup_sql', 'dbt')(relation) -}}\n{%- endmacro -%}\n\n\n", "depends_on": {"macros": ["macro.dbt.default__get_create_backup_sql"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1756850323.2330618, "supported_languages": null}, "macro.dbt.default__get_create_backup_sql": {"name": "default__get_create_backup_sql", "resource_type": "macro", "package_name": "dbt", "path": "macros/relations/create_backup.sql", "original_file_path": "macros/relations/create_backup.sql", "unique_id": "macro.dbt.default__get_create_backup_sql", "macro_sql": "{%- macro default__get_create_backup_sql(relation) -%}\n\n    -- get the standard backup name\n    {% set backup_relation = make_backup_relation(relation, relation.type) %}\n\n    -- drop any pre-existing backup\n    {{ get_drop_sql(backup_relation) }};\n\n    {{ get_rename_sql(relation, backup_relation.identifier) }}\n\n{%- endmacro -%}", "depends_on": {"macros": ["macro.dbt.make_backup_relation", "macro.dbt.get_drop_sql", "macro.dbt.get_rename_sql"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1756850323.2335637, "supported_languages": null}, "macro.dbt.get_create_sql": {"name": "get_create_sql", "resource_type": "macro", "package_name": "dbt", "path": "macros/relations/create.sql", "original_file_path": "macros/relations/create.sql", "unique_id": "macro.dbt.get_create_sql", "macro_sql": "{%- macro get_create_sql(relation, sql) -%}\n    {{- log('Applying CREATE to: ' ~ relation) -}}\n    {{- adapter.dispatch('get_create_sql', 'dbt')(relation, sql) -}}\n{%- endmacro -%}\n\n\n", "depends_on": {"macros": ["macro.dbt.default__get_create_sql"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1756850323.2342718, "supported_languages": null}, "macro.dbt.default__get_create_sql": {"name": "default__get_create_sql", "resource_type": "macro", "package_name": "dbt", "path": "macros/relations/create.sql", "original_file_path": "macros/relations/create.sql", "unique_id": "macro.dbt.default__get_create_sql", "macro_sql": "{%- macro default__get_create_sql(relation, sql) -%}\n\n    {%- if relation.is_view -%}\n        {{ get_create_view_as_sql(relation, sql) }}\n\n    {%- elif relation.is_table -%}\n        {{ get_create_table_as_sql(False, relation, sql) }}\n\n    {%- elif relation.is_materialized_view -%}\n        {{ get_create_materialized_view_as_sql(relation, sql) }}\n\n    {%- else -%}\n        {{- exceptions.raise_compiler_error(\"`get_create_sql` has not been implemented for: \" ~ relation.type ) -}}\n\n    {%- endif -%}\n\n{%- endmacro -%}", "depends_on": {"macros": ["macro.dbt.get_create_view_as_sql", "macro.dbt.get_create_table_as_sql", "macro.dbt.get_create_materialized_view_as_sql"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1756850323.235124, "supported_languages": null}, "macro.dbt.get_drop_sql": {"name": "get_drop_sql", "resource_type": "macro", "package_name": "dbt", "path": "macros/relations/drop.sql", "original_file_path": "macros/relations/drop.sql", "unique_id": "macro.dbt.get_drop_sql", "macro_sql": "{%- macro get_drop_sql(relation) -%}\n    {{- log('Applying DROP to: ' ~ relation) -}}\n    {{- adapter.dispatch('get_drop_sql', 'dbt')(relation) -}}\n{%- endmacro -%}\n\n\n", "depends_on": {"macros": ["macro.dbt.default__get_drop_sql"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1756850323.235956, "supported_languages": null}, "macro.dbt.default__get_drop_sql": {"name": "default__get_drop_sql", "resource_type": "macro", "package_name": "dbt", "path": "macros/relations/drop.sql", "original_file_path": "macros/relations/drop.sql", "unique_id": "macro.dbt.default__get_drop_sql", "macro_sql": "{%- macro default__get_drop_sql(relation) -%}\n\n    {%- if relation.is_view -%}\n        {{ drop_view(relation) }}\n\n    {%- elif relation.is_table -%}\n        {{ drop_table(relation) }}\n\n    {%- elif relation.is_materialized_view -%}\n        {{ drop_materialized_view(relation) }}\n\n    {%- else -%}\n        drop {{ relation.type }} if exists {{ relation.render() }} cascade\n\n    {%- endif -%}\n\n{%- endmacro -%}\n\n\n", "depends_on": {"macros": ["macro.dbt.drop_view", "macro.dbt.drop_table", "macro.dbt.drop_materialized_view"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1756850323.236687, "supported_languages": null}, "macro.dbt.drop_relation": {"name": "drop_relation", "resource_type": "macro", "package_name": "dbt", "path": "macros/relations/drop.sql", "original_file_path": "macros/relations/drop.sql", "unique_id": "macro.dbt.drop_relation", "macro_sql": "{% macro drop_relation(relation) -%}\n    {{ return(adapter.dispatch('drop_relation', 'dbt')(relation)) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.default__drop_relation"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1756850323.2370505, "supported_languages": null}, "macro.dbt.default__drop_relation": {"name": "default__drop_relation", "resource_type": "macro", "package_name": "dbt", "path": "macros/relations/drop.sql", "original_file_path": "macros/relations/drop.sql", "unique_id": "macro.dbt.default__drop_relation", "macro_sql": "{% macro default__drop_relation(relation) -%}\n    {% call statement('drop_relation', auto_begin=False) -%}\n        {{ get_drop_sql(relation) }}\n    {%- endcall %}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.statement", "macro.dbt.get_drop_sql"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1756850323.2374372, "supported_languages": null}, "macro.dbt.drop_relation_if_exists": {"name": "drop_relation_if_exists", "resource_type": "macro", "package_name": "dbt", "path": "macros/relations/drop.sql", "original_file_path": "macros/relations/drop.sql", "unique_id": "macro.dbt.drop_relation_if_exists", "macro_sql": "{% macro drop_relation_if_exists(relation) %}\n  {% if relation is not none %}\n    {{ adapter.drop_relation(relation) }}\n  {% endif %}\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1756850323.237824, "supported_languages": null}, "macro.dbt.drop_schema_named": {"name": "drop_schema_named", "resource_type": "macro", "package_name": "dbt", "path": "macros/relations/schema.sql", "original_file_path": "macros/relations/schema.sql", "unique_id": "macro.dbt.drop_schema_named", "macro_sql": "{% macro drop_schema_named(schema_name) %}\n    {{ return(adapter.dispatch('drop_schema_named', 'dbt') (schema_name)) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.default__drop_schema_named"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1756850323.2384527, "supported_languages": null}, "macro.dbt.default__drop_schema_named": {"name": "default__drop_schema_named", "resource_type": "macro", "package_name": "dbt", "path": "macros/relations/schema.sql", "original_file_path": "macros/relations/schema.sql", "unique_id": "macro.dbt.default__drop_schema_named", "macro_sql": "{% macro default__drop_schema_named(schema_name) %}\n  {% set schema_relation = api.Relation.create(schema=schema_name) %}\n  {{ adapter.drop_schema(schema_relation) }}\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1756850323.2389026, "supported_languages": null}, "macro.dbt.get_replace_sql": {"name": "get_replace_sql", "resource_type": "macro", "package_name": "dbt", "path": "macros/relations/replace.sql", "original_file_path": "macros/relations/replace.sql", "unique_id": "macro.dbt.get_replace_sql", "macro_sql": "{% macro get_replace_sql(existing_relation, target_relation, sql) %}\n    {{- log('Applying REPLACE to: ' ~ existing_relation) -}}\n    {{- adapter.dispatch('get_replace_sql', 'dbt')(existing_relation, target_relation, sql) -}}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.default__get_replace_sql"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1756850323.2399142, "supported_languages": null}, "macro.dbt.default__get_replace_sql": {"name": "default__get_replace_sql", "resource_type": "macro", "package_name": "dbt", "path": "macros/relations/replace.sql", "original_file_path": "macros/relations/replace.sql", "unique_id": "macro.dbt.default__get_replace_sql", "macro_sql": "{% macro default__get_replace_sql(existing_relation, target_relation, sql) %}\n\n    {# /* use a create or replace statement if possible */ #}\n\n    {% set is_replaceable = existing_relation.type == target_relation.type and existing_relation.can_be_replaced %}\n\n    {% if is_replaceable and existing_relation.is_view %}\n        {{ get_replace_view_sql(target_relation, sql) }}\n\n    {% elif is_replaceable and existing_relation.is_table %}\n        {{ get_replace_table_sql(target_relation, sql) }}\n\n    {% elif is_replaceable and existing_relation.is_materialized_view %}\n        {{ get_replace_materialized_view_sql(target_relation, sql) }}\n\n    {# /* a create or replace statement is not possible, so try to stage and/or backup to be safe */ #}\n\n    {# /* create target_relation as an intermediate relation, then swap it out with the existing one using a backup */ #}\n    {%- elif target_relation.can_be_renamed and existing_relation.can_be_renamed -%}\n        {{ get_create_intermediate_sql(target_relation, sql) }};\n        {{ get_create_backup_sql(existing_relation) }};\n        {{ get_rename_intermediate_sql(target_relation) }};\n        {{ get_drop_backup_sql(existing_relation) }}\n\n    {# /* create target_relation as an intermediate relation, then swap it out with the existing one without using a backup */ #}\n    {%- elif target_relation.can_be_renamed -%}\n        {{ get_create_intermediate_sql(target_relation, sql) }};\n        {{ get_drop_sql(existing_relation) }};\n        {{ get_rename_intermediate_sql(target_relation) }}\n\n    {# /* create target_relation in place by first backing up the existing relation */ #}\n    {%- elif existing_relation.can_be_renamed -%}\n        {{ get_create_backup_sql(existing_relation) }};\n        {{ get_create_sql(target_relation, sql) }};\n        {{ get_drop_backup_sql(existing_relation) }}\n\n    {# /* no renaming is allowed, so just drop and create */ #}\n    {%- else -%}\n        {{ get_drop_sql(existing_relation) }};\n        {{ get_create_sql(target_relation, sql) }}\n\n    {%- endif -%}\n\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.get_replace_view_sql", "macro.dbt.get_replace_table_sql", "macro.dbt.get_replace_materialized_view_sql", "macro.dbt.get_create_intermediate_sql", "macro.dbt.get_create_backup_sql", "macro.dbt.get_rename_intermediate_sql", "macro.dbt.get_drop_backup_sql", "macro.dbt.get_drop_sql", "macro.dbt.get_create_sql"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1756850323.2422352, "supported_languages": null}, "macro.dbt.get_drop_backup_sql": {"name": "get_drop_backup_sql", "resource_type": "macro", "package_name": "dbt", "path": "macros/relations/drop_backup.sql", "original_file_path": "macros/relations/drop_backup.sql", "unique_id": "macro.dbt.get_drop_backup_sql", "macro_sql": "{%- macro get_drop_backup_sql(relation) -%}\n    {{- log('Applying DROP BACKUP to: ' ~ relation) -}}\n    {{- adapter.dispatch('get_drop_backup_sql', 'dbt')(relation) -}}\n{%- endmacro -%}\n\n\n", "depends_on": {"macros": ["macro.dbt.default__get_drop_backup_sql"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1756850323.24286, "supported_languages": null}, "macro.dbt.default__get_drop_backup_sql": {"name": "default__get_drop_backup_sql", "resource_type": "macro", "package_name": "dbt", "path": "macros/relations/drop_backup.sql", "original_file_path": "macros/relations/drop_backup.sql", "unique_id": "macro.dbt.default__get_drop_backup_sql", "macro_sql": "{%- macro default__get_drop_backup_sql(relation) -%}\n\n    -- get the standard backup name\n    {% set backup_relation = make_backup_relation(relation, relation.type) %}\n\n    {{ get_drop_sql(backup_relation) }}\n\n{%- endmacro -%}", "depends_on": {"macros": ["macro.dbt.make_backup_relation", "macro.dbt.get_drop_sql"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1756850323.2433145, "supported_languages": null}, "macro.dbt.get_table_columns_and_constraints": {"name": "get_table_columns_and_constraints", "resource_type": "macro", "package_name": "dbt", "path": "macros/relations/column/columns_spec_ddl.sql", "original_file_path": "macros/relations/column/columns_spec_ddl.sql", "unique_id": "macro.dbt.get_table_columns_and_constraints", "macro_sql": "{%- macro get_table_columns_and_constraints() -%}\n  {{ adapter.dispatch('get_table_columns_and_constraints', 'dbt')() }}\n{%- endmacro -%}\n\n", "depends_on": {"macros": ["macro.dbt.default__get_table_columns_and_constraints"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1756850323.2446766, "supported_languages": null}, "macro.dbt.default__get_table_columns_and_constraints": {"name": "default__get_table_columns_and_constraints", "resource_type": "macro", "package_name": "dbt", "path": "macros/relations/column/columns_spec_ddl.sql", "original_file_path": "macros/relations/column/columns_spec_ddl.sql", "unique_id": "macro.dbt.default__get_table_columns_and_constraints", "macro_sql": "{% macro default__get_table_columns_and_constraints() -%}\n  {{ return(table_columns_and_constraints()) }}\n{%- endmacro %}", "depends_on": {"macros": ["macro.dbt.table_columns_and_constraints"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1756850323.244936, "supported_languages": null}, "macro.dbt.table_columns_and_constraints": {"name": "table_columns_and_constraints", "resource_type": "macro", "package_name": "dbt", "path": "macros/relations/column/columns_spec_ddl.sql", "original_file_path": "macros/relations/column/columns_spec_ddl.sql", "unique_id": "macro.dbt.table_columns_and_constraints", "macro_sql": "{% macro table_columns_and_constraints() %}\n  {# loop through user_provided_columns to create DDL with data types and constraints #}\n    {%- set raw_column_constraints = adapter.render_raw_columns_constraints(raw_columns=model['columns']) -%}\n    {%- set raw_model_constraints = adapter.render_raw_model_constraints(raw_constraints=model['constraints']) -%}\n    (\n    {% for c in raw_column_constraints -%}\n      {{ c }}{{ \",\" if not loop.last or raw_model_constraints }}\n    {% endfor %}\n    {% for c in raw_model_constraints -%}\n        {{ c }}{{ \",\" if not loop.last }}\n    {% endfor -%}\n    )\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1756850323.246027, "supported_languages": null}, "macro.dbt.get_assert_columns_equivalent": {"name": "get_assert_columns_equivalent", "resource_type": "macro", "package_name": "dbt", "path": "macros/relations/column/columns_spec_ddl.sql", "original_file_path": "macros/relations/column/columns_spec_ddl.sql", "unique_id": "macro.dbt.get_assert_columns_equivalent", "macro_sql": "\n\n{%- macro get_assert_columns_equivalent(sql) -%}\n  {{ adapter.dispatch('get_assert_columns_equivalent', 'dbt')(sql) }}\n{%- endmacro -%}\n\n", "depends_on": {"macros": ["macro.dbt.default__get_assert_columns_equivalent"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1756850323.2463517, "supported_languages": null}, "macro.dbt.default__get_assert_columns_equivalent": {"name": "default__get_assert_columns_equivalent", "resource_type": "macro", "package_name": "dbt", "path": "macros/relations/column/columns_spec_ddl.sql", "original_file_path": "macros/relations/column/columns_spec_ddl.sql", "unique_id": "macro.dbt.default__get_assert_columns_equivalent", "macro_sql": "{% macro default__get_assert_columns_equivalent(sql) -%}\n  {{ return(assert_columns_equivalent(sql)) }}\n{%- endmacro %}", "depends_on": {"macros": ["macro.dbt.assert_columns_equivalent"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1756850323.2466197, "supported_languages": null}, "macro.dbt.assert_columns_equivalent": {"name": "assert_columns_equivalent", "resource_type": "macro", "package_name": "dbt", "path": "macros/relations/column/columns_spec_ddl.sql", "original_file_path": "macros/relations/column/columns_spec_ddl.sql", "unique_id": "macro.dbt.assert_columns_equivalent", "macro_sql": "{% macro assert_columns_equivalent(sql) %}\n\n  {#-- First ensure the user has defined 'columns' in yaml specification --#}\n  {%- set user_defined_columns = model['columns'] -%}\n  {%- if not user_defined_columns -%}\n      {{ exceptions.raise_contract_error([], []) }}\n  {%- endif -%}\n\n  {#-- Obtain the column schema provided by sql file. #}\n  {%- set sql_file_provided_columns = get_column_schema_from_query(sql, config.get('sql_header', none)) -%}\n  {#--Obtain the column schema provided by the schema file by generating an 'empty schema' query from the model's columns. #}\n  {%- set schema_file_provided_columns = get_column_schema_from_query(get_empty_schema_sql(user_defined_columns)) -%}\n\n  {#-- create dictionaries with name and formatted data type and strings for exception #}\n  {%- set sql_columns = format_columns(sql_file_provided_columns) -%}\n  {%- set yaml_columns = format_columns(schema_file_provided_columns)  -%}\n\n  {%- if sql_columns|length != yaml_columns|length -%}\n    {%- do exceptions.raise_contract_error(yaml_columns, sql_columns) -%}\n  {%- endif -%}\n\n  {%- for sql_col in sql_columns -%}\n    {%- set yaml_col = [] -%}\n    {%- for this_col in yaml_columns -%}\n      {%- if this_col['name'] == sql_col['name'] -%}\n        {%- do yaml_col.append(this_col) -%}\n        {%- break -%}\n      {%- endif -%}\n    {%- endfor -%}\n    {%- if not yaml_col -%}\n      {#-- Column with name not found in yaml #}\n      {%- do exceptions.raise_contract_error(yaml_columns, sql_columns) -%}\n    {%- endif -%}\n    {%- if sql_col['formatted'] != yaml_col[0]['formatted'] -%}\n      {#-- Column data types don't match #}\n      {%- do exceptions.raise_contract_error(yaml_columns, sql_columns) -%}\n    {%- endif -%}\n  {%- endfor -%}\n\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.get_column_schema_from_query", "macro.dbt.get_empty_schema_sql", "macro.dbt.format_columns"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1756850323.2490594, "supported_languages": null}, "macro.dbt.format_columns": {"name": "format_columns", "resource_type": "macro", "package_name": "dbt", "path": "macros/relations/column/columns_spec_ddl.sql", "original_file_path": "macros/relations/column/columns_spec_ddl.sql", "unique_id": "macro.dbt.format_columns", "macro_sql": "{% macro format_columns(columns) %}\n  {% set formatted_columns = [] %}\n  {% for column in columns %}\n    {%- set formatted_column = adapter.dispatch('format_column', 'dbt')(column) -%}\n    {%- do formatted_columns.append(formatted_column) -%}\n  {% endfor %}\n  {{ return(formatted_columns) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.default__format_column"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1756850323.249795, "supported_languages": null}, "macro.dbt.default__format_column": {"name": "default__format_column", "resource_type": "macro", "package_name": "dbt", "path": "macros/relations/column/columns_spec_ddl.sql", "original_file_path": "macros/relations/column/columns_spec_ddl.sql", "unique_id": "macro.dbt.default__format_column", "macro_sql": "{% macro default__format_column(column) -%}\n  {% set data_type = column.dtype %}\n  {% set formatted = column.column.lower() ~ \" \" ~ data_type %}\n  {{ return({'name': column.name, 'data_type': data_type, 'formatted': formatted}) }}\n{%- endmacro -%}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1756850323.250439, "supported_languages": null}, "macro.dbt.get_rename_view_sql": {"name": "get_rename_view_sql", "resource_type": "macro", "package_name": "dbt", "path": "macros/relations/view/rename.sql", "original_file_path": "macros/relations/view/rename.sql", "unique_id": "macro.dbt.get_rename_view_sql", "macro_sql": "{% macro get_rename_view_sql(relation, new_name) %}\n    {{- adapter.dispatch('get_rename_view_sql', 'dbt')(relation, new_name) -}}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt_postgres.postgres__get_rename_view_sql"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1756850323.250966, "supported_languages": null}, "macro.dbt.default__get_rename_view_sql": {"name": "default__get_rename_view_sql", "resource_type": "macro", "package_name": "dbt", "path": "macros/relations/view/rename.sql", "original_file_path": "macros/relations/view/rename.sql", "unique_id": "macro.dbt.default__get_rename_view_sql", "macro_sql": "{% macro default__get_rename_view_sql(relation, new_name) %}\n    {{ exceptions.raise_compiler_error(\n        \"`get_rename_view_sql` has not been implemented for this adapter.\"\n    ) }}\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1756850323.2512565, "supported_languages": null}, "macro.dbt.get_create_view_as_sql": {"name": "get_create_view_as_sql", "resource_type": "macro", "package_name": "dbt", "path": "macros/relations/view/create.sql", "original_file_path": "macros/relations/view/create.sql", "unique_id": "macro.dbt.get_create_view_as_sql", "macro_sql": "{% macro get_create_view_as_sql(relation, sql) -%}\n  {{ adapter.dispatch('get_create_view_as_sql', 'dbt')(relation, sql) }}\n{%- endmacro %}", "depends_on": {"macros": ["macro.dbt.default__get_create_view_as_sql"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1756850323.251956, "supported_languages": null}, "macro.dbt.default__get_create_view_as_sql": {"name": "default__get_create_view_as_sql", "resource_type": "macro", "package_name": "dbt", "path": "macros/relations/view/create.sql", "original_file_path": "macros/relations/view/create.sql", "unique_id": "macro.dbt.default__get_create_view_as_sql", "macro_sql": "{% macro default__get_create_view_as_sql(relation, sql) -%}\n  {{ return(create_view_as(relation, sql)) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.create_view_as"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1756850323.2522733, "supported_languages": null}, "macro.dbt.create_view_as": {"name": "create_view_as", "resource_type": "macro", "package_name": "dbt", "path": "macros/relations/view/create.sql", "original_file_path": "macros/relations/view/create.sql", "unique_id": "macro.dbt.create_view_as", "macro_sql": "{% macro create_view_as(relation, sql) -%}\n  {{ adapter.dispatch('create_view_as', 'dbt')(relation, sql) }}\n{%- endmacro %}", "depends_on": {"macros": ["macro.dbt.default__create_view_as"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1756850323.2526264, "supported_languages": null}, "macro.dbt.default__create_view_as": {"name": "default__create_view_as", "resource_type": "macro", "package_name": "dbt", "path": "macros/relations/view/create.sql", "original_file_path": "macros/relations/view/create.sql", "unique_id": "macro.dbt.default__create_view_as", "macro_sql": "{% macro default__create_view_as(relation, sql) -%}\n  {%- set sql_header = config.get('sql_header', none) -%}\n\n  {{ sql_header if sql_header is not none }}\n  create view {{ relation.render() }}\n    {% set contract_config = config.get('contract') %}\n    {% if contract_config.enforced %}\n      {{ get_assert_columns_equivalent(sql) }}\n    {%- endif %}\n  as (\n    {{ sql }}\n  );\n{%- endmacro %}", "depends_on": {"macros": ["macro.dbt.get_assert_columns_equivalent"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1756850323.2535975, "supported_languages": null}, "macro.dbt.drop_view": {"name": "drop_view", "resource_type": "macro", "package_name": "dbt", "path": "macros/relations/view/drop.sql", "original_file_path": "macros/relations/view/drop.sql", "unique_id": "macro.dbt.drop_view", "macro_sql": "{% macro drop_view(relation) -%}\n    {{- adapter.dispatch('drop_view', 'dbt')(relation) -}}\n{%- endmacro %}", "depends_on": {"macros": ["macro.dbt_postgres.postgres__drop_view"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1756850323.2540865, "supported_languages": null}, "macro.dbt.default__drop_view": {"name": "default__drop_view", "resource_type": "macro", "package_name": "dbt", "path": "macros/relations/view/drop.sql", "original_file_path": "macros/relations/view/drop.sql", "unique_id": "macro.dbt.default__drop_view", "macro_sql": "{% macro default__drop_view(relation) -%}\n    drop view if exists {{ relation.render() }} cascade\n{%- endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1756850323.2543309, "supported_languages": null}, "macro.dbt.get_replace_view_sql": {"name": "get_replace_view_sql", "resource_type": "macro", "package_name": "dbt", "path": "macros/relations/view/replace.sql", "original_file_path": "macros/relations/view/replace.sql", "unique_id": "macro.dbt.get_replace_view_sql", "macro_sql": "{% macro get_replace_view_sql(relation, sql) %}\n    {{- adapter.dispatch('get_replace_view_sql', 'dbt')(relation, sql) -}}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt_postgres.postgres__get_replace_view_sql"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1756850323.255278, "supported_languages": null}, "macro.dbt.default__get_replace_view_sql": {"name": "default__get_replace_view_sql", "resource_type": "macro", "package_name": "dbt", "path": "macros/relations/view/replace.sql", "original_file_path": "macros/relations/view/replace.sql", "unique_id": "macro.dbt.default__get_replace_view_sql", "macro_sql": "{% macro default__get_replace_view_sql(relation, sql) %}\n    {{ exceptions.raise_compiler_error(\n        \"`get_replace_view_sql` has not been implemented for this adapter.\"\n    ) }}\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1756850323.2555683, "supported_languages": null}, "macro.dbt.create_or_replace_view": {"name": "create_or_replace_view", "resource_type": "macro", "package_name": "dbt", "path": "macros/relations/view/replace.sql", "original_file_path": "macros/relations/view/replace.sql", "unique_id": "macro.dbt.create_or_replace_view", "macro_sql": "{% macro create_or_replace_view() %}\n  {%- set identifier = model['alias'] -%}\n\n  {%- set old_relation = adapter.get_relation(database=database, schema=schema, identifier=identifier) -%}\n  {%- set exists_as_view = (old_relation is not none and old_relation.is_view) -%}\n\n  {%- set target_relation = api.Relation.create(\n      identifier=identifier, schema=schema, database=database,\n      type='view') -%}\n  {% set grant_config = config.get('grants') %}\n\n  {{ run_hooks(pre_hooks) }}\n\n  -- If there's a table with the same name and we weren't told to full refresh,\n  -- that's an error. If we were told to full refresh, drop it. This behavior differs\n  -- for Snowflake and BigQuery, so multiple dispatch is used.\n  {%- if old_relation is not none and old_relation.is_table -%}\n    {{ handle_existing_table(should_full_refresh(), old_relation) }}\n  {%- endif -%}\n\n  -- build model\n  {% call statement('main') -%}\n    {{ get_create_view_as_sql(target_relation, sql) }}\n  {%- endcall %}\n\n  {% set should_revoke = should_revoke(exists_as_view, full_refresh_mode=True) %}\n  {% do apply_grants(target_relation, grant_config, should_revoke=should_revoke) %}\n\n  {{ run_hooks(post_hooks) }}\n\n  {{ return({'relations': [target_relation]}) }}\n\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.run_hooks", "macro.dbt.handle_existing_table", "macro.dbt.should_full_refresh", "macro.dbt.statement", "macro.dbt.get_create_view_as_sql", "macro.dbt.should_revoke", "macro.dbt.apply_grants"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1756850323.2576742, "supported_languages": null}, "macro.dbt.handle_existing_table": {"name": "handle_existing_table", "resource_type": "macro", "package_name": "dbt", "path": "macros/relations/view/replace.sql", "original_file_path": "macros/relations/view/replace.sql", "unique_id": "macro.dbt.handle_existing_table", "macro_sql": "{% macro handle_existing_table(full_refresh, old_relation) %}\n    {{ adapter.dispatch('handle_existing_table', 'dbt')(full_refresh, old_relation) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.default__handle_existing_table"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1756850323.2580688, "supported_languages": null}, "macro.dbt.default__handle_existing_table": {"name": "default__handle_existing_table", "resource_type": "macro", "package_name": "dbt", "path": "macros/relations/view/replace.sql", "original_file_path": "macros/relations/view/replace.sql", "unique_id": "macro.dbt.default__handle_existing_table", "macro_sql": "{% macro default__handle_existing_table(full_refresh, old_relation) %}\n    {{ log(\"Dropping relation \" ~ old_relation.render() ~ \" because it is of type \" ~ old_relation.type) }}\n    {{ adapter.drop_relation(old_relation) }}\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1756850323.2585185, "supported_languages": null}, "macro.dbt.refresh_materialized_view": {"name": "refresh_materialized_view", "resource_type": "macro", "package_name": "dbt", "path": "macros/relations/materialized_view/refresh.sql", "original_file_path": "macros/relations/materialized_view/refresh.sql", "unique_id": "macro.dbt.refresh_materialized_view", "macro_sql": "{% macro refresh_materialized_view(relation) %}\n    {{- log('Applying REFRESH to: ' ~ relation) -}}\n    {{- adapter.dispatch('refresh_materialized_view', 'dbt')(relation) -}}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt_postgres.postgres__refresh_materialized_view"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1756850323.2590957, "supported_languages": null}, "macro.dbt.default__refresh_materialized_view": {"name": "default__refresh_materialized_view", "resource_type": "macro", "package_name": "dbt", "path": "macros/relations/materialized_view/refresh.sql", "original_file_path": "macros/relations/materialized_view/refresh.sql", "unique_id": "macro.dbt.default__refresh_materialized_view", "macro_sql": "{% macro default__refresh_materialized_view(relation) %}\n    {{ exceptions.raise_compiler_error(\"`refresh_materialized_view` has not been implemented for this adapter.\") }}\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1756850323.2593575, "supported_languages": null}, "macro.dbt.get_rename_materialized_view_sql": {"name": "get_rename_materialized_view_sql", "resource_type": "macro", "package_name": "dbt", "path": "macros/relations/materialized_view/rename.sql", "original_file_path": "macros/relations/materialized_view/rename.sql", "unique_id": "macro.dbt.get_rename_materialized_view_sql", "macro_sql": "{% macro get_rename_materialized_view_sql(relation, new_name) %}\n    {{- adapter.dispatch('get_rename_materialized_view_sql', 'dbt')(relation, new_name) -}}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt_postgres.postgres__get_rename_materialized_view_sql"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1756850323.2598705, "supported_languages": null}, "macro.dbt.default__get_rename_materialized_view_sql": {"name": "default__get_rename_materialized_view_sql", "resource_type": "macro", "package_name": "dbt", "path": "macros/relations/materialized_view/rename.sql", "original_file_path": "macros/relations/materialized_view/rename.sql", "unique_id": "macro.dbt.default__get_rename_materialized_view_sql", "macro_sql": "{% macro default__get_rename_materialized_view_sql(relation, new_name) %}\n    {{ exceptions.raise_compiler_error(\n        \"`get_rename_materialized_view_sql` has not been implemented for this adapter.\"\n    ) }}\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1756850323.2601547, "supported_languages": null}, "macro.dbt.get_create_materialized_view_as_sql": {"name": "get_create_materialized_view_as_sql", "resource_type": "macro", "package_name": "dbt", "path": "macros/relations/materialized_view/create.sql", "original_file_path": "macros/relations/materialized_view/create.sql", "unique_id": "macro.dbt.get_create_materialized_view_as_sql", "macro_sql": "{% macro get_create_materialized_view_as_sql(relation, sql) -%}\n    {{- adapter.dispatch('get_create_materialized_view_as_sql', 'dbt')(relation, sql) -}}\n{%- endmacro %}", "depends_on": {"macros": ["macro.dbt_postgres.postgres__get_create_materialized_view_as_sql"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1756850323.2606401, "supported_languages": null}, "macro.dbt.default__get_create_materialized_view_as_sql": {"name": "default__get_create_materialized_view_as_sql", "resource_type": "macro", "package_name": "dbt", "path": "macros/relations/materialized_view/create.sql", "original_file_path": "macros/relations/materialized_view/create.sql", "unique_id": "macro.dbt.default__get_create_materialized_view_as_sql", "macro_sql": "{% macro default__get_create_materialized_view_as_sql(relation, sql) -%}\n    {{ exceptions.raise_compiler_error(\n        \"`get_create_materialized_view_as_sql` has not been implemented for this adapter.\"\n    ) }}\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1756850323.260942, "supported_languages": null}, "macro.dbt.get_alter_materialized_view_as_sql": {"name": "get_alter_materialized_view_as_sql", "resource_type": "macro", "package_name": "dbt", "path": "macros/relations/materialized_view/alter.sql", "original_file_path": "macros/relations/materialized_view/alter.sql", "unique_id": "macro.dbt.get_alter_materialized_view_as_sql", "macro_sql": "{% macro get_alter_materialized_view_as_sql(\n    relation,\n    configuration_changes,\n    sql,\n    existing_relation,\n    backup_relation,\n    intermediate_relation\n) %}\n    {{- log('Applying ALTER to: ' ~ relation) -}}\n    {{- adapter.dispatch('get_alter_materialized_view_as_sql', 'dbt')(\n        relation,\n        configuration_changes,\n        sql,\n        existing_relation,\n        backup_relation,\n        intermediate_relation\n    ) -}}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt_postgres.postgres__get_alter_materialized_view_as_sql"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1756850323.261926, "supported_languages": null}, "macro.dbt.default__get_alter_materialized_view_as_sql": {"name": "default__get_alter_materialized_view_as_sql", "resource_type": "macro", "package_name": "dbt", "path": "macros/relations/materialized_view/alter.sql", "original_file_path": "macros/relations/materialized_view/alter.sql", "unique_id": "macro.dbt.default__get_alter_materialized_view_as_sql", "macro_sql": "{% macro default__get_alter_materialized_view_as_sql(\n    relation,\n    configuration_changes,\n    sql,\n    existing_relation,\n    backup_relation,\n    intermediate_relation\n) %}\n    {{ exceptions.raise_compiler_error(\"Materialized views have not been implemented for this adapter.\") }}\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1756850323.2622855, "supported_languages": null}, "macro.dbt.get_materialized_view_configuration_changes": {"name": "get_materialized_view_configuration_changes", "resource_type": "macro", "package_name": "dbt", "path": "macros/relations/materialized_view/alter.sql", "original_file_path": "macros/relations/materialized_view/alter.sql", "unique_id": "macro.dbt.get_materialized_view_configuration_changes", "macro_sql": "{% macro get_materialized_view_configuration_changes(existing_relation, new_config) %}\n    /* {#\n    It's recommended that configuration changes be formatted as follows:\n    {\"<change_category>\": [{\"action\": \"<name>\", \"context\": ...}]}\n\n    For example:\n    {\n        \"indexes\": [\n            {\"action\": \"drop\", \"context\": \"index_abc\"},\n            {\"action\": \"create\", \"context\": {\"columns\": [\"column_1\", \"column_2\"], \"type\": \"hash\", \"unique\": True}},\n        ],\n    }\n\n    Either way, `get_materialized_view_configuration_changes` needs to align with `get_alter_materialized_view_as_sql`.\n    #} */\n    {{- log('Determining configuration changes on: ' ~ existing_relation) -}}\n    {%- do return(adapter.dispatch('get_materialized_view_configuration_changes', 'dbt')(existing_relation, new_config)) -%}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt_postgres.postgres__get_materialized_view_configuration_changes"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1756850323.2628322, "supported_languages": null}, "macro.dbt.default__get_materialized_view_configuration_changes": {"name": "default__get_materialized_view_configuration_changes", "resource_type": "macro", "package_name": "dbt", "path": "macros/relations/materialized_view/alter.sql", "original_file_path": "macros/relations/materialized_view/alter.sql", "unique_id": "macro.dbt.default__get_materialized_view_configuration_changes", "macro_sql": "{% macro default__get_materialized_view_configuration_changes(existing_relation, new_config) %}\n    {{ exceptions.raise_compiler_error(\"Materialized views have not been implemented for this adapter.\") }}\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1756850323.263117, "supported_languages": null}, "macro.dbt.drop_materialized_view": {"name": "drop_materialized_view", "resource_type": "macro", "package_name": "dbt", "path": "macros/relations/materialized_view/drop.sql", "original_file_path": "macros/relations/materialized_view/drop.sql", "unique_id": "macro.dbt.drop_materialized_view", "macro_sql": "{% macro drop_materialized_view(relation) -%}\n    {{- adapter.dispatch('drop_materialized_view', 'dbt')(relation) -}}\n{%- endmacro %}", "depends_on": {"macros": ["macro.dbt_postgres.postgres__drop_materialized_view"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1756850323.2635734, "supported_languages": null}, "macro.dbt.default__drop_materialized_view": {"name": "default__drop_materialized_view", "resource_type": "macro", "package_name": "dbt", "path": "macros/relations/materialized_view/drop.sql", "original_file_path": "macros/relations/materialized_view/drop.sql", "unique_id": "macro.dbt.default__drop_materialized_view", "macro_sql": "{% macro default__drop_materialized_view(relation) -%}\n    drop materialized view if exists {{ relation.render() }} cascade\n{%- endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1756850323.263945, "supported_languages": null}, "macro.dbt.get_replace_materialized_view_sql": {"name": "get_replace_materialized_view_sql", "resource_type": "macro", "package_name": "dbt", "path": "macros/relations/materialized_view/replace.sql", "original_file_path": "macros/relations/materialized_view/replace.sql", "unique_id": "macro.dbt.get_replace_materialized_view_sql", "macro_sql": "{% macro get_replace_materialized_view_sql(relation, sql) %}\n    {{- adapter.dispatch('get_replace_materialized_view_sql', 'dbt')(relation, sql) -}}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.default__get_replace_materialized_view_sql"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1756850323.2644398, "supported_languages": null}, "macro.dbt.default__get_replace_materialized_view_sql": {"name": "default__get_replace_materialized_view_sql", "resource_type": "macro", "package_name": "dbt", "path": "macros/relations/materialized_view/replace.sql", "original_file_path": "macros/relations/materialized_view/replace.sql", "unique_id": "macro.dbt.default__get_replace_materialized_view_sql", "macro_sql": "{% macro default__get_replace_materialized_view_sql(relation, sql) %}\n    {{ exceptions.raise_compiler_error(\n        \"`get_replace_materialized_view_sql` has not been implemented for this adapter.\"\n    ) }}\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1756850323.2647219, "supported_languages": null}, "macro.dbt.get_rename_table_sql": {"name": "get_rename_table_sql", "resource_type": "macro", "package_name": "dbt", "path": "macros/relations/table/rename.sql", "original_file_path": "macros/relations/table/rename.sql", "unique_id": "macro.dbt.get_rename_table_sql", "macro_sql": "{% macro get_rename_table_sql(relation, new_name) %}\n    {{- adapter.dispatch('get_rename_table_sql', 'dbt')(relation, new_name) -}}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt_postgres.postgres__get_rename_table_sql"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1756850323.2652245, "supported_languages": null}, "macro.dbt.default__get_rename_table_sql": {"name": "default__get_rename_table_sql", "resource_type": "macro", "package_name": "dbt", "path": "macros/relations/table/rename.sql", "original_file_path": "macros/relations/table/rename.sql", "unique_id": "macro.dbt.default__get_rename_table_sql", "macro_sql": "{% macro default__get_rename_table_sql(relation, new_name) %}\n    {{ exceptions.raise_compiler_error(\n        \"`get_rename_table_sql` has not been implemented for this adapter.\"\n    ) }}\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1756850323.2655106, "supported_languages": null}, "macro.dbt.get_create_table_as_sql": {"name": "get_create_table_as_sql", "resource_type": "macro", "package_name": "dbt", "path": "macros/relations/table/create.sql", "original_file_path": "macros/relations/table/create.sql", "unique_id": "macro.dbt.get_create_table_as_sql", "macro_sql": "{% macro get_create_table_as_sql(temporary, relation, sql) -%}\n  {{ adapter.dispatch('get_create_table_as_sql', 'dbt')(temporary, relation, sql) }}\n{%- endmacro %}", "depends_on": {"macros": ["macro.dbt.default__get_create_table_as_sql"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1756850323.2666404, "supported_languages": null}, "macro.dbt.default__get_create_table_as_sql": {"name": "default__get_create_table_as_sql", "resource_type": "macro", "package_name": "dbt", "path": "macros/relations/table/create.sql", "original_file_path": "macros/relations/table/create.sql", "unique_id": "macro.dbt.default__get_create_table_as_sql", "macro_sql": "{% macro default__get_create_table_as_sql(temporary, relation, sql) -%}\n  {{ return(create_table_as(temporary, relation, sql)) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.create_table_as"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1756850323.2670157, "supported_languages": null}, "macro.dbt.create_table_as": {"name": "create_table_as", "resource_type": "macro", "package_name": "dbt", "path": "macros/relations/table/create.sql", "original_file_path": "macros/relations/table/create.sql", "unique_id": "macro.dbt.create_table_as", "macro_sql": "{% macro create_table_as(temporary, relation, compiled_code, language='sql') -%}\n  {# backward compatibility for create_table_as that does not support language #}\n  {% if language == \"sql\" %}\n    {{ adapter.dispatch('create_table_as', 'dbt')(temporary, relation, compiled_code)}}\n  {% else %}\n    {{ adapter.dispatch('create_table_as', 'dbt')(temporary, relation, compiled_code, language) }}\n  {% endif %}\n\n{%- endmacro %}", "depends_on": {"macros": ["macro.dbt_postgres.postgres__create_table_as"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1756850323.267862, "supported_languages": null}, "macro.dbt.default__create_table_as": {"name": "default__create_table_as", "resource_type": "macro", "package_name": "dbt", "path": "macros/relations/table/create.sql", "original_file_path": "macros/relations/table/create.sql", "unique_id": "macro.dbt.default__create_table_as", "macro_sql": "{% macro default__create_table_as(temporary, relation, sql) -%}\n  {%- set sql_header = config.get('sql_header', none) -%}\n\n  {{ sql_header if sql_header is not none }}\n\n  create {% if temporary: -%}temporary{%- endif %} table\n    {{ relation.include(database=(not temporary), schema=(not temporary)) }}\n  {% set contract_config = config.get('contract') %}\n  {% if contract_config.enforced and (not temporary) %}\n    {{ get_assert_columns_equivalent(sql) }}\n    {{ get_table_columns_and_constraints() }}\n    {%- set sql = get_select_subquery(sql) %}\n  {% endif %}\n  as (\n    {{ sql }}\n  );\n{%- endmacro %}", "depends_on": {"macros": ["macro.dbt.get_assert_columns_equivalent", "macro.dbt.get_table_columns_and_constraints", "macro.dbt.get_select_subquery"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1756850323.2691844, "supported_languages": null}, "macro.dbt.default__get_column_names": {"name": "default__get_column_names", "resource_type": "macro", "package_name": "dbt", "path": "macros/relations/table/create.sql", "original_file_path": "macros/relations/table/create.sql", "unique_id": "macro.dbt.default__get_column_names", "macro_sql": "{% macro default__get_column_names() %}\n  {#- loop through user_provided_columns to get column names -#}\n    {%- set user_provided_columns = model['columns'] -%}\n    {%- for i in user_provided_columns %}\n      {%- set col = user_provided_columns[i] -%}\n      {%- set col_name = adapter.quote(col['name']) if col.get('quote') else col['name'] -%}\n      {{ col_name }}{{ \", \" if not loop.last }}\n    {%- endfor -%}\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1756850323.270079, "supported_languages": null}, "macro.dbt.get_select_subquery": {"name": "get_select_subquery", "resource_type": "macro", "package_name": "dbt", "path": "macros/relations/table/create.sql", "original_file_path": "macros/relations/table/create.sql", "unique_id": "macro.dbt.get_select_subquery", "macro_sql": "{% macro get_select_subquery(sql) %}\n  {{ return(adapter.dispatch('get_select_subquery', 'dbt')(sql)) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.default__get_select_subquery"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1756850323.2704356, "supported_languages": null}, "macro.dbt.default__get_select_subquery": {"name": "default__get_select_subquery", "resource_type": "macro", "package_name": "dbt", "path": "macros/relations/table/create.sql", "original_file_path": "macros/relations/table/create.sql", "unique_id": "macro.dbt.default__get_select_subquery", "macro_sql": "{% macro default__get_select_subquery(sql) %}\n    select {{ adapter.dispatch('get_column_names', 'dbt')() }}\n    from (\n        {{ sql }}\n    ) as model_subq\n{%- endmacro %}", "depends_on": {"macros": ["macro.dbt.default__get_column_names"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1756850323.2707915, "supported_languages": null}, "macro.dbt.drop_table": {"name": "drop_table", "resource_type": "macro", "package_name": "dbt", "path": "macros/relations/table/drop.sql", "original_file_path": "macros/relations/table/drop.sql", "unique_id": "macro.dbt.drop_table", "macro_sql": "{% macro drop_table(relation) -%}\n    {{- adapter.dispatch('drop_table', 'dbt')(relation) -}}\n{%- endmacro %}", "depends_on": {"macros": ["macro.dbt_postgres.postgres__drop_table"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1756850323.2712545, "supported_languages": null}, "macro.dbt.default__drop_table": {"name": "default__drop_table", "resource_type": "macro", "package_name": "dbt", "path": "macros/relations/table/drop.sql", "original_file_path": "macros/relations/table/drop.sql", "unique_id": "macro.dbt.default__drop_table", "macro_sql": "{% macro default__drop_table(relation) -%}\n    drop table if exists {{ relation.render() }} cascade\n{%- endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1756850323.2714944, "supported_languages": null}, "macro.dbt.get_replace_table_sql": {"name": "get_replace_table_sql", "resource_type": "macro", "package_name": "dbt", "path": "macros/relations/table/replace.sql", "original_file_path": "macros/relations/table/replace.sql", "unique_id": "macro.dbt.get_replace_table_sql", "macro_sql": "{% macro get_replace_table_sql(relation, sql) %}\n    {{- adapter.dispatch('get_replace_table_sql', 'dbt')(relation, sql) -}}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt_postgres.postgres__get_replace_table_sql"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1756850323.2719982, "supported_languages": null}, "macro.dbt.default__get_replace_table_sql": {"name": "default__get_replace_table_sql", "resource_type": "macro", "package_name": "dbt", "path": "macros/relations/table/replace.sql", "original_file_path": "macros/relations/table/replace.sql", "unique_id": "macro.dbt.default__get_replace_table_sql", "macro_sql": "{% macro default__get_replace_table_sql(relation, sql) %}\n    {{ exceptions.raise_compiler_error(\n        \"`get_replace_table_sql` has not been implemented for this adapter.\"\n    ) }}\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1756850323.272281, "supported_languages": null}, "macro.dbt.test_unique": {"name": "test_unique", "resource_type": "macro", "package_name": "dbt", "path": "tests/generic/builtin.sql", "original_file_path": "tests/generic/builtin.sql", "unique_id": "macro.dbt.test_unique", "macro_sql": "{% test unique(model, column_name) %}\n    {% set macro = adapter.dispatch('test_unique', 'dbt') %}\n    {{ macro(model, column_name) }}\n{% endtest %}", "depends_on": {"macros": ["macro.dbt.default__test_unique"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1756850323.273086, "supported_languages": null}, "macro.dbt.test_not_null": {"name": "test_not_null", "resource_type": "macro", "package_name": "dbt", "path": "tests/generic/builtin.sql", "original_file_path": "tests/generic/builtin.sql", "unique_id": "macro.dbt.test_not_null", "macro_sql": "{% test not_null(model, column_name) %}\n    {% set macro = adapter.dispatch('test_not_null', 'dbt') %}\n    {{ macro(model, column_name) }}\n{% endtest %}", "depends_on": {"macros": ["macro.dbt.default__test_not_null"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1756850323.273555, "supported_languages": null}, "macro.dbt.test_accepted_values": {"name": "test_accepted_values", "resource_type": "macro", "package_name": "dbt", "path": "tests/generic/builtin.sql", "original_file_path": "tests/generic/builtin.sql", "unique_id": "macro.dbt.test_accepted_values", "macro_sql": "{% test accepted_values(model, column_name, values, quote=True) %}\n    {% set macro = adapter.dispatch('test_accepted_values', 'dbt') %}\n    {{ macro(model, column_name, values, quote) }}\n{% endtest %}", "depends_on": {"macros": ["macro.dbt.default__test_accepted_values"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1756850323.2742646, "supported_languages": null}, "macro.dbt.test_relationships": {"name": "test_relationships", "resource_type": "macro", "package_name": "dbt", "path": "tests/generic/builtin.sql", "original_file_path": "tests/generic/builtin.sql", "unique_id": "macro.dbt.test_relationships", "macro_sql": "{% test relationships(model, column_name, to, field) %}\n    {% set macro = adapter.dispatch('test_relationships', 'dbt') %}\n    {{ macro(model, column_name, to, field) }}\n{% endtest %}", "depends_on": {"macros": ["macro.dbt.default__test_relationships"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1756850323.2749002, "supported_languages": null}, "macro.fivetran_utils.fill_staging_columns": {"name": "fill_staging_columns", "resource_type": "macro", "package_name": "fivetran_utils", "path": "macros/fill_staging_columns.sql", "original_file_path": "macros/fill_staging_columns.sql", "unique_id": "macro.fivetran_utils.fill_staging_columns", "macro_sql": "{% macro fill_staging_columns(source_columns, staging_columns) -%}\n\n{%- set source_column_names = source_columns|map(attribute='name')|map('lower')|list -%}\n\n{%- for column in staging_columns %}\n    {% if column.name|lower in source_column_names -%}\n        {{ fivetran_utils.quote_column(column) }} as \n        {%- if 'alias' in column %} {{ column.alias }} {% else %} {{ fivetran_utils.quote_column(column) }} {%- endif -%}\n    {%- else -%}\n        cast(null as {{ column.datatype }})\n        {%- if 'alias' in column %} as {{ column.alias }} {% else %} as {{ fivetran_utils.quote_column(column) }} {% endif -%}\n    {%- endif -%}\n    {%- if not loop.last -%} , {% endif -%}\n{% endfor %}\n\n{% endmacro %}", "depends_on": {"macros": ["macro.fivetran_utils.quote_column"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1756850323.2769592, "supported_languages": null}, "macro.fivetran_utils.quote_column": {"name": "quote_column", "resource_type": "macro", "package_name": "fivetran_utils", "path": "macros/fill_staging_columns.sql", "original_file_path": "macros/fill_staging_columns.sql", "unique_id": "macro.fivetran_utils.quote_column", "macro_sql": "{% macro quote_column(column) %}\n    {% if 'quote' in column %}\n        {% if column.quote %}\n            {% if target.type in ('bigquery', 'spark', 'databricks') %}\n            `{{ column.name }}`\n            {% elif target.type == 'snowflake' %}\n            \"{{ column.name | upper }}\"\n            {% else %}\n            \"{{ column.name }}\"\n            {% endif %}\n        {% else %}\n        {{ column.name }}\n        {% endif %}\n    {% else %}\n    {{ column.name }}\n    {% endif %}\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1756850323.2780662, "supported_languages": null}, "macro.fivetran_utils.seed_data_helper": {"name": "seed_data_helper", "resource_type": "macro", "package_name": "fivetran_utils", "path": "macros/seed_data_helper.sql", "original_file_path": "macros/seed_data_helper.sql", "unique_id": "macro.fivetran_utils.seed_data_helper", "macro_sql": "{% macro seed_data_helper(seed_name, warehouses) %}\n\n{% if target.type in warehouses %}\n    {% for w in warehouses %}\n        {% if target.type == w %}\n            {{ return(ref(seed_name ~ \"_\" ~ w ~ \"\")) }}\n        {% endif %}\n    {% endfor %}\n{% else %}\n{{ return(ref(seed_name)) }}\n{% endif %}\n\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1756850323.2791424, "supported_languages": null}, "macro.fivetran_utils.add_dbt_source_relation": {"name": "add_dbt_source_relation", "resource_type": "macro", "package_name": "fivetran_utils", "path": "macros/add_dbt_source_relation.sql", "original_file_path": "macros/add_dbt_source_relation.sql", "unique_id": "macro.fivetran_utils.add_dbt_source_relation", "macro_sql": "{% macro add_dbt_source_relation() %}\n\n{% if var('union_schemas', none) or var('union_databases', none) %}\n, _dbt_source_relation\n{% endif %}\n\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1756850323.279646, "supported_languages": null}, "macro.fivetran_utils.array_agg": {"name": "array_agg", "resource_type": "macro", "package_name": "fivetran_utils", "path": "macros/array_agg.sql", "original_file_path": "macros/array_agg.sql", "unique_id": "macro.fivetran_utils.array_agg", "macro_sql": "{% macro array_agg(field_to_agg) -%}\n\n{{ adapter.dispatch('array_agg', 'fivetran_utils') (field_to_agg) }}\n\n{%- endmacro %}", "depends_on": {"macros": ["macro.fivetran_utils.default__array_agg"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1756850323.2801404, "supported_languages": null}, "macro.fivetran_utils.default__array_agg": {"name": "default__array_agg", "resource_type": "macro", "package_name": "fivetran_utils", "path": "macros/array_agg.sql", "original_file_path": "macros/array_agg.sql", "unique_id": "macro.fivetran_utils.default__array_agg", "macro_sql": "{% macro default__array_agg(field_to_agg) %}\n    array_agg({{ field_to_agg }})\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1756850323.28035, "supported_languages": null}, "macro.fivetran_utils.redshift__array_agg": {"name": "redshift__array_agg", "resource_type": "macro", "package_name": "fivetran_utils", "path": "macros/array_agg.sql", "original_file_path": "macros/array_agg.sql", "unique_id": "macro.fivetran_utils.redshift__array_agg", "macro_sql": "{% macro redshift__array_agg(field_to_agg) %}\n    listagg({{ field_to_agg }}, ',')\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1756850323.2805572, "supported_languages": null}, "macro.fivetran_utils.json_extract": {"name": "json_extract", "resource_type": "macro", "package_name": "fivetran_utils", "path": "macros/json_extract.sql", "original_file_path": "macros/json_extract.sql", "unique_id": "macro.fivetran_utils.json_extract", "macro_sql": "{% macro json_extract(string, string_path) -%}\n\n{{ adapter.dispatch('json_extract', 'fivetran_utils') (string, string_path) }}\n\n{%- endmacro %}", "depends_on": {"macros": ["macro.fivetran_utils.postgres__json_extract"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1756850323.2813199, "supported_languages": null}, "macro.fivetran_utils.default__json_extract": {"name": "default__json_extract", "resource_type": "macro", "package_name": "fivetran_utils", "path": "macros/json_extract.sql", "original_file_path": "macros/json_extract.sql", "unique_id": "macro.fivetran_utils.default__json_extract", "macro_sql": "{% macro default__json_extract(string, string_path) %}\n\n  json_extract_path_text({{string}}, {{ \"'\" ~ string_path ~ \"'\" }} )\n \n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1756850323.281628, "supported_languages": null}, "macro.fivetran_utils.snowflake__json_extract": {"name": "snowflake__json_extract", "resource_type": "macro", "package_name": "fivetran_utils", "path": "macros/json_extract.sql", "original_file_path": "macros/json_extract.sql", "unique_id": "macro.fivetran_utils.snowflake__json_extract", "macro_sql": "{% macro snowflake__json_extract(string, string_path) %}\n\n  json_extract_path_text(try_parse_json( {{string}} ), {{ \"'\" ~ string_path ~ \"'\" }} )\n\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1756850323.2819595, "supported_languages": null}, "macro.fivetran_utils.redshift__json_extract": {"name": "redshift__json_extract", "resource_type": "macro", "package_name": "fivetran_utils", "path": "macros/json_extract.sql", "original_file_path": "macros/json_extract.sql", "unique_id": "macro.fivetran_utils.redshift__json_extract", "macro_sql": "{% macro redshift__json_extract(string, string_path) %}\n\n  case when is_valid_json( {{string}} ) then json_extract_path_text({{string}}, {{ \"'\" ~ string_path ~ \"'\" }} ) else null end\n \n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1756850323.2823017, "supported_languages": null}, "macro.fivetran_utils.bigquery__json_extract": {"name": "bigquery__json_extract", "resource_type": "macro", "package_name": "fivetran_utils", "path": "macros/json_extract.sql", "original_file_path": "macros/json_extract.sql", "unique_id": "macro.fivetran_utils.bigquery__json_extract", "macro_sql": "{% macro bigquery__json_extract(string, string_path) %}\n\n  json_extract_scalar({{string}}, {{ \"'$.\" ~ string_path ~ \"'\" }} )\n\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1756850323.2826066, "supported_languages": null}, "macro.fivetran_utils.postgres__json_extract": {"name": "postgres__json_extract", "resource_type": "macro", "package_name": "fivetran_utils", "path": "macros/json_extract.sql", "original_file_path": "macros/json_extract.sql", "unique_id": "macro.fivetran_utils.postgres__json_extract", "macro_sql": "{% macro postgres__json_extract(string, string_path) %}\n\n  {{string}}::json->>{{\"'\" ~ string_path ~ \"'\" }}\n\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1756850323.282926, "supported_languages": null}, "macro.fivetran_utils.extract_url_parameter": {"name": "extract_url_parameter", "resource_type": "macro", "package_name": "fivetran_utils", "path": "macros/extract_url_parameter.sql", "original_file_path": "macros/extract_url_parameter.sql", "unique_id": "macro.fivetran_utils.extract_url_parameter", "macro_sql": "{% macro extract_url_parameter(field, url_parameter) -%}\n\n{{ adapter.dispatch('extract_url_parameter', 'fivetran_utils') (field, url_parameter) }}\n\n{% endmacro %}", "depends_on": {"macros": ["macro.fivetran_utils.default__extract_url_parameter"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1756850323.2834897, "supported_languages": null}, "macro.fivetran_utils.default__extract_url_parameter": {"name": "default__extract_url_parameter", "resource_type": "macro", "package_name": "fivetran_utils", "path": "macros/extract_url_parameter.sql", "original_file_path": "macros/extract_url_parameter.sql", "unique_id": "macro.fivetran_utils.default__extract_url_parameter", "macro_sql": "{% macro default__extract_url_parameter(field, url_parameter) -%}\n\n{{ dbt_utils.get_url_parameter(field, url_parameter) }}\n\n{%- endmacro %}", "depends_on": {"macros": ["macro.dbt_utils.get_url_parameter"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1756850323.2837965, "supported_languages": null}, "macro.fivetran_utils.spark__extract_url_parameter": {"name": "spark__extract_url_parameter", "resource_type": "macro", "package_name": "fivetran_utils", "path": "macros/extract_url_parameter.sql", "original_file_path": "macros/extract_url_parameter.sql", "unique_id": "macro.fivetran_utils.spark__extract_url_parameter", "macro_sql": "{% macro spark__extract_url_parameter(field, url_parameter) -%}\n\n{%- set formatted_url_parameter = \"'\" + url_parameter + \"=([^&]+)'\" -%}\nnullif(regexp_extract({{ field }}, {{ formatted_url_parameter }}, 1), '')\n\n{%- endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1756850323.2841897, "supported_languages": null}, "macro.fivetran_utils.percentile": {"name": "percentile", "resource_type": "macro", "package_name": "fivetran_utils", "path": "macros/percentile.sql", "original_file_path": "macros/percentile.sql", "unique_id": "macro.fivetran_utils.percentile", "macro_sql": "{% macro percentile(percentile_field, partition_field, percent) -%}\n\n{{ adapter.dispatch('percentile', 'fivetran_utils') (percentile_field, partition_field, percent) }}\n\n{%- endmacro %}", "depends_on": {"macros": ["macro.fivetran_utils.postgres__percentile"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1756850323.2849848, "supported_languages": null}, "macro.fivetran_utils.default__percentile": {"name": "default__percentile", "resource_type": "macro", "package_name": "fivetran_utils", "path": "macros/percentile.sql", "original_file_path": "macros/percentile.sql", "unique_id": "macro.fivetran_utils.default__percentile", "macro_sql": "{% macro default__percentile(percentile_field, partition_field, percent)  %}\n\n    percentile_cont( \n        {{ percent }} )\n        within group ( order by {{ percentile_field }} )\n        over ( partition by {{ partition_field }} )\n\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1756850323.2854292, "supported_languages": null}, "macro.fivetran_utils.redshift__percentile": {"name": "redshift__percentile", "resource_type": "macro", "package_name": "fivetran_utils", "path": "macros/percentile.sql", "original_file_path": "macros/percentile.sql", "unique_id": "macro.fivetran_utils.redshift__percentile", "macro_sql": "{% macro redshift__percentile(percentile_field, partition_field, percent)  %}\n\n    percentile_cont( \n        {{ percent }} )\n        within group ( order by {{ percentile_field }} )\n        over ( partition by {{ partition_field }} )\n\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1756850323.2857609, "supported_languages": null}, "macro.fivetran_utils.bigquery__percentile": {"name": "bigquery__percentile", "resource_type": "macro", "package_name": "fivetran_utils", "path": "macros/percentile.sql", "original_file_path": "macros/percentile.sql", "unique_id": "macro.fivetran_utils.bigquery__percentile", "macro_sql": "{% macro bigquery__percentile(percentile_field, partition_field, percent)  %}\n\n    percentile_cont( \n        {{ percentile_field }}, \n        {{ percent }}) \n        over (partition by {{ partition_field }}    \n        )\n\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1756850323.2861116, "supported_languages": null}, "macro.fivetran_utils.postgres__percentile": {"name": "postgres__percentile", "resource_type": "macro", "package_name": "fivetran_utils", "path": "macros/percentile.sql", "original_file_path": "macros/percentile.sql", "unique_id": "macro.fivetran_utils.postgres__percentile", "macro_sql": "{% macro postgres__percentile(percentile_field, partition_field, percent)  %}\n\n    percentile_cont( \n        {{ percent }} )\n        within group ( order by {{ percentile_field }} )\n    /* have to group by partition field */\n\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1756850323.2864025, "supported_languages": null}, "macro.fivetran_utils.spark__percentile": {"name": "spark__percentile", "resource_type": "macro", "package_name": "fivetran_utils", "path": "macros/percentile.sql", "original_file_path": "macros/percentile.sql", "unique_id": "macro.fivetran_utils.spark__percentile", "macro_sql": "{% macro spark__percentile(percentile_field, partition_field, percent)  %}\n\n    percentile( \n        {{ percentile_field }}, \n        {{ percent }}) \n        over (partition by {{ partition_field }}    \n        )\n\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1756850323.286725, "supported_languages": null}, "macro.fivetran_utils.union_data": {"name": "union_data", "resource_type": "macro", "package_name": "fivetran_utils", "path": "macros/union_data.sql", "original_file_path": "macros/union_data.sql", "unique_id": "macro.fivetran_utils.union_data", "macro_sql": "{%- macro union_data(table_identifier, database_variable, schema_variable, default_database, default_schema, default_variable, union_schema_variable='union_schemas', union_database_variable='union_databases') -%}\n\n{{ adapter.dispatch('union_data', 'fivetran_utils') (\n    table_identifier, \n    database_variable, \n    schema_variable, \n    default_database, \n    default_schema, \n    default_variable,\n    union_schema_variable,\n    union_database_variable\n    ) }}\n\n{%- endmacro -%}\n\n", "depends_on": {"macros": ["macro.fivetran_utils.default__union_data"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1756850323.2888942, "supported_languages": null}, "macro.fivetran_utils.default__union_data": {"name": "default__union_data", "resource_type": "macro", "package_name": "fivetran_utils", "path": "macros/union_data.sql", "original_file_path": "macros/union_data.sql", "unique_id": "macro.fivetran_utils.default__union_data", "macro_sql": "{%- macro default__union_data(\n    table_identifier, \n    database_variable, \n    schema_variable, \n    default_database, \n    default_schema, \n    default_variable,\n    union_schema_variable,\n    union_database_variable\n    ) -%}\n\n{%- if var(union_schema_variable, none) -%}\n\n    {%- set relations = [] -%}\n    \n    {%- if var(union_schema_variable) is string -%}\n    {%- set trimmed = var(union_schema_variable)|trim('[')|trim(']') -%}\n    {%- set schemas = trimmed.split(',')|map('trim',\" \")|map('trim','\"')|map('trim',\"'\") -%}\n    {%- else -%}\n    {%- set schemas = var(union_schema_variable) -%}\n    {%- endif -%}\n\n    {%- for schema in var(union_schema_variable) -%}\n    {%- set relation=adapter.get_relation(\n        database=source(schema, table_identifier).database if var('has_defined_sources', false) else var(database_variable, default_database),\n        schema=source(schema, table_identifier).schema if var('has_defined_sources', false) else schema,\n        identifier=source(schema, table_identifier).identifier if var('has_defined_sources', false) else table_identifier\n    ) -%}\n    \n    {%- set relation_exists=relation is not none -%}\n\n    {%- if relation_exists -%}\n        {%- do relations.append(relation) -%}\n    {%- endif -%}\n\n    {%- endfor -%}\n    \n    {%- if relations != [] -%}\n        {{ dbt_utils.union_relations(relations) }}\n    {%- else -%}\n    {% if execute and not var('fivetran__remove_empty_table_warnings', false) -%}\n    {{ exceptions.warn(\"\\n\\nPlease be aware: The \" ~ table_identifier|upper ~ \" table was not found in your \" ~ default_schema|upper ~ \" schema(s). The Fivetran dbt package will create a completely empty \" ~ table_identifier|upper ~ \" staging model as to not break downstream transformations. To turn off these warnings, set the `fivetran__remove_empty_table_warnings` variable to TRUE (see https://github.com/fivetran/dbt_fivetran_utils/tree/releases/v0.4.latest#union_data-source for details).\\n\") }}\n    {% endif -%}\n    select \n        cast(null as {{ dbt.type_string() }}) as _dbt_source_relation\n    limit 0\n    {%- endif -%}\n\n{%- elif var(union_database_variable, none) -%}\n\n    {%- set relations = [] -%}\n\n    {%- for database in var(union_database_variable) -%}\n    {%- set relation=adapter.get_relation(\n        database=source(schema, table_identifier).database if var('has_defined_sources', false) else database,\n        schema=source(schema, table_identifier).schema if var('has_defined_sources', false) else var(schema_variable, default_schema),\n        identifier=source(schema, table_identifier).identifier if var('has_defined_sources', false) else table_identifier\n    ) -%}\n\n    {%- set relation_exists=relation is not none -%}\n\n    {%- if relation_exists -%}\n        {%- do relations.append(relation) -%}\n    {%- endif -%}\n\n    {%- endfor -%}\n\n    {%- if relations != [] -%}\n        {{ dbt_utils.union_relations(relations) }}\n    {%- else -%}\n    {% if execute and not var('fivetran__remove_empty_table_warnings', false) -%}\n    {{ exceptions.warn(\"\\n\\nPlease be aware: The \" ~ table_identifier|upper ~ \" table was not found in your \" ~ default_schema|upper ~ \" schema(s). The Fivetran dbt package will create a completely empty \" ~ table_identifier|upper ~ \" staging model as to not break downstream transformations. To turn off these warnings, set the `fivetran__remove_empty_table_warnings` variable to TRUE (see https://github.com/fivetran/dbt_fivetran_utils/tree/releases/v0.4.latest#union_data-source for details).\\n\") }}\n    {% endif -%}\n    select \n        cast(null as {{ dbt.type_string() }}) as _dbt_source_relation\n    limit 0\n    {%- endif -%}\n\n{%- else -%}\n    {% set exception_schemas = {\"linkedin_company_pages\": \"linkedin_pages\", \"instagram_business_pages\": \"instagram_business\"} %}\n    {% set relation = namespace(value=\"\") %}\n    {% if default_schema in exception_schemas.keys() %}\n        {% for corrected_schema_name in exception_schemas.items() %}   \n            {% if default_schema in corrected_schema_name %}\n                {# In order for this macro to effectively work within upstream integration tests (mainly used by the Fivetran dbt package maintainers), this identifier variable selection is required to use the macro with different identifier names. #}\n                {% set identifier_var = corrected_schema_name[1] + \"_\" + table_identifier + \"_identifier\"  %}\n                {%- set relation.value=adapter.get_relation(\n                    database=source(corrected_schema_name[1], table_identifier).database,\n                    schema=source(corrected_schema_name[1], table_identifier).schema,\n                    identifier=var(identifier_var, table_identifier)\n                ) -%}\n            {% endif %}\n        {% endfor %}\n    {% else %}\n        {# In order for this macro to effectively work within upstream integration tests (mainly used by the Fivetran dbt package maintainers), this identifier variable selection is required to use the macro with different identifier names. #}\n        {% set identifier_var = default_schema + \"_\" + table_identifier + \"_identifier\"  %}\n        {# Unfortunately the Twitter Organic identifiers were misspelled. As such, we will need to account for this in the model. This will be adjusted in the Twitter Organic package, but to ensure backwards compatibility, this needs to be included. #}\n        {% if var(identifier_var, none) is none %} \n            {% set identifier_var = default_schema + \"_\" + table_identifier + \"_identifer\"  %}\n        {% endif %}\n        {%- set relation.value=adapter.get_relation(\n            database=source(default_schema, table_identifier).database,\n            schema=source(default_schema, table_identifier).schema,\n            identifier=var(identifier_var, table_identifier)\n        ) -%}\n    {% endif %}\n{%- set table_exists=relation.value is not none -%}\n\n{%- if table_exists -%}\n    select * \n    from {{ relation.value }}\n{%- else -%}\n    {% if execute and not var('fivetran__remove_empty_table_warnings', false) -%}\n    {{ exceptions.warn(\"\\n\\nPlease be aware: The \" ~ table_identifier|upper ~ \" table was not found in your \" ~ default_schema|upper ~ \" schema(s). The Fivetran dbt package will create a completely empty \" ~ table_identifier|upper ~ \" staging model as to not break downstream transformations. To turn off these warnings, set the `fivetran__remove_empty_table_warnings` variable to TRUE (see https://github.com/fivetran/dbt_fivetran_utils/tree/releases/v0.4.latest#union_data-source for details).\\n\") }}\n    {% endif -%}\n    select \n        cast(null as {{ dbt.type_string() }}) as _dbt_source_relation\n    limit 0\n{%- endif -%}\n{%- endif -%}\n\n{%- endmacro -%}", "depends_on": {"macros": ["macro.dbt_utils.union_relations", "macro.dbt.type_string"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1756850323.2975156, "supported_languages": null}, "macro.fivetran_utils.string_agg": {"name": "string_agg", "resource_type": "macro", "package_name": "fivetran_utils", "path": "macros/string_agg.sql", "original_file_path": "macros/string_agg.sql", "unique_id": "macro.fivetran_utils.string_agg", "macro_sql": "{% macro string_agg(field_to_agg, delimiter) -%}\n\n{{ adapter.dispatch('string_agg', 'fivetran_utils') (field_to_agg, delimiter) }}\n\n{%- endmacro %}", "depends_on": {"macros": ["macro.fivetran_utils.default__string_agg"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1756850323.298295, "supported_languages": null}, "macro.fivetran_utils.default__string_agg": {"name": "default__string_agg", "resource_type": "macro", "package_name": "fivetran_utils", "path": "macros/string_agg.sql", "original_file_path": "macros/string_agg.sql", "unique_id": "macro.fivetran_utils.default__string_agg", "macro_sql": "{% macro default__string_agg(field_to_agg, delimiter) %}\n    string_agg({{ field_to_agg }}, {{ delimiter }})\n\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1756850323.2985861, "supported_languages": null}, "macro.fivetran_utils.snowflake__string_agg": {"name": "snowflake__string_agg", "resource_type": "macro", "package_name": "fivetran_utils", "path": "macros/string_agg.sql", "original_file_path": "macros/string_agg.sql", "unique_id": "macro.fivetran_utils.snowflake__string_agg", "macro_sql": "{% macro snowflake__string_agg(field_to_agg, delimiter) %}\n    listagg({{ field_to_agg }}, {{ delimiter }})\n\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1756850323.2988722, "supported_languages": null}, "macro.fivetran_utils.redshift__string_agg": {"name": "redshift__string_agg", "resource_type": "macro", "package_name": "fivetran_utils", "path": "macros/string_agg.sql", "original_file_path": "macros/string_agg.sql", "unique_id": "macro.fivetran_utils.redshift__string_agg", "macro_sql": "{% macro redshift__string_agg(field_to_agg, delimiter) %}\n    listagg({{ field_to_agg }}, {{ delimiter }})\n\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1756850323.299138, "supported_languages": null}, "macro.fivetran_utils.spark__string_agg": {"name": "spark__string_agg", "resource_type": "macro", "package_name": "fivetran_utils", "path": "macros/string_agg.sql", "original_file_path": "macros/string_agg.sql", "unique_id": "macro.fivetran_utils.spark__string_agg", "macro_sql": "{% macro spark__string_agg(field_to_agg, delimiter) %}\n    -- collect set will remove duplicates\n    replace(replace(replace(cast( collect_set({{ field_to_agg }}) as string), '[', ''), ']', ''), ', ', {{ delimiter }} )\n\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1756850323.2994094, "supported_languages": null}, "macro.fivetran_utils.union_relations": {"name": "union_relations", "resource_type": "macro", "package_name": "fivetran_utils", "path": "macros/union_relations.sql", "original_file_path": "macros/union_relations.sql", "unique_id": "macro.fivetran_utils.union_relations", "macro_sql": "{%- macro union_relations(relations, aliases=none, column_override=none, include=[], exclude=[], source_column_name=none) -%}\n\n    {%- if exclude and include -%}\n        {{ exceptions.raise_compiler_error(\"Both an exclude and include list were provided to the `union` macro. Only one is allowed\") }}\n    {%- endif -%}\n\n    {#-- Prevent querying of db in parsing mode. This works because this macro does not create any new refs. -#}\n    {%- if not execute %}\n        {{ return('') }}\n    {% endif -%}\n\n    {%- set column_override = column_override if column_override is not none else {} -%}\n    {%- set source_column_name = source_column_name if source_column_name is not none else '_dbt_source_relation' -%}\n\n    {%- set relation_columns = {} -%}\n    {%- set column_superset = {} -%}\n\n    {%- for relation in relations -%}\n\n        {%- do relation_columns.update({relation: []}) -%}\n\n        {%- do dbt_utils._is_relation(relation, 'union_relations') -%}\n        {%- set cols = adapter.get_columns_in_relation(relation) -%}\n        {%- for col in cols -%}\n\n        {#- If an exclude list was provided and the column is in the list, do nothing -#}\n        {%- if exclude and col.column in exclude -%}\n\n        {#- If an include list was provided and the column is not in the list, do nothing -#}\n        {%- elif include and col.column not in include -%}\n\n        {#- Otherwise add the column to the column superset -#}\n        {%- else -%}\n\n            {#- update the list of columns in this relation -#}\n            {%- do relation_columns[relation].append(col.column) -%}\n\n            {%- if col.column in column_superset -%}\n\n                {%- set stored = column_superset[col.column] -%}\n                {%- if col.is_string() and stored.is_string() and col.string_size() > stored.string_size() -%}\n\n                    {%- do column_superset.update({col.column: col}) -%}\n\n                {%- endif %}\n\n            {%- else -%}\n\n                {%- do column_superset.update({col.column: col}) -%}\n\n            {%- endif -%}\n\n        {%- endif -%}\n\n        {%- endfor -%}\n    {%- endfor -%}\n\n    {%- set ordered_column_names = column_superset.keys() -%}\n\n    {%- for relation in relations %}\n\n        (\n            select\n\n                cast({{ dbt.string_literal(relation) }} as {{ dbt.type_string() }}) as {{ source_column_name }},\n                {% for col_name in ordered_column_names -%}\n\n                    {%- set col = column_superset[col_name] %}\n                    {%- set col_type = column_override.get(col.column, col.data_type) %}\n                    {%- set col_name = adapter.quote(col_name) if col_name in relation_columns[relation] else 'null' %}\n                    cast({{ col_name }} as {{ col_type }}) as {{ col.quoted }} {% if not loop.last %},{% endif -%}\n\n                {%- endfor %}\n\n            from {{ aliases[loop.index0] if aliases else relation }}\n        )\n\n        {% if not loop.last -%}\n            union all\n        {% endif -%}\n\n    {%- endfor -%}\n\n{%- endmacro -%}\n\n", "depends_on": {"macros": ["macro.dbt_utils._is_relation", "macro.dbt.string_literal", "macro.dbt.type_string"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1756850323.3048422, "supported_languages": null}, "macro.fivetran_utils.union_tables": {"name": "union_tables", "resource_type": "macro", "package_name": "fivetran_utils", "path": "macros/union_relations.sql", "original_file_path": "macros/union_relations.sql", "unique_id": "macro.fivetran_utils.union_tables", "macro_sql": "{%- macro union_tables(tables, column_override=none, include=[], exclude=[], source_column_name='_dbt_source_table') -%}\n\n    {%- do exceptions.warn(\"Warning: the `union_tables` macro is no longer supported and will be deprecated in a future release of dbt-utils. Use the `union_relations` macro instead\") -%}\n\n    {{ return(dbt_utils.union_relations(tables, column_override, include, exclude, source_column_name)) }}\n\n{%- endmacro -%}", "depends_on": {"macros": ["macro.dbt_utils.union_relations"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1756850323.3056185, "supported_languages": null}, "macro.fivetran_utils.source_relation": {"name": "source_relation", "resource_type": "macro", "package_name": "fivetran_utils", "path": "macros/source_relation.sql", "original_file_path": "macros/source_relation.sql", "unique_id": "macro.fivetran_utils.source_relation", "macro_sql": "{% macro source_relation(union_schema_variable='union_schemas', union_database_variable='union_databases') -%}\n\n{{ adapter.dispatch('source_relation', 'fivetran_utils') (union_schema_variable, union_database_variable) }}\n\n{%- endmacro %}", "depends_on": {"macros": ["macro.fivetran_utils.default__source_relation"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1756850323.3063688, "supported_languages": null}, "macro.fivetran_utils.default__source_relation": {"name": "default__source_relation", "resource_type": "macro", "package_name": "fivetran_utils", "path": "macros/source_relation.sql", "original_file_path": "macros/source_relation.sql", "unique_id": "macro.fivetran_utils.default__source_relation", "macro_sql": "{% macro default__source_relation(union_schema_variable, union_database_variable) %}\n\n{% if var(union_schema_variable, none)  %}\n, case\n    {% for schema in var(union_schema_variable) %}\n    when lower(replace(replace(_dbt_source_relation,'\"',''),'`','')) like '%.{{ schema|lower }}.%' then '{{ schema|lower }}'\n    {% endfor %}\n  end as source_relation\n{% elif var(union_database_variable, none) %}\n, case\n    {% for database in var(union_database_variable) %}\n    when lower(replace(replace(_dbt_source_relation,'\"',''),'`','')) like '%{{ database|lower }}.%' then '{{ database|lower }}'\n    {% endfor %}\n  end as source_relation\n{% else %}\n, cast('' as {{ dbt.type_string() }}) as source_relation\n{% endif %}\n\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.type_string"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1756850323.3074884, "supported_languages": null}, "macro.fivetran_utils.persist_pass_through_columns": {"name": "persist_pass_through_columns", "resource_type": "macro", "package_name": "fivetran_utils", "path": "macros/persist_pass_through_columns.sql", "original_file_path": "macros/persist_pass_through_columns.sql", "unique_id": "macro.fivetran_utils.persist_pass_through_columns", "macro_sql": "{% macro persist_pass_through_columns(pass_through_variable, identifier=none, transform='') %}\n\n{% if var(pass_through_variable, none) %}\n    {% for field in var(pass_through_variable) %}\n        , {{ transform ~ '(' ~ (identifier ~ '.' if identifier else '') ~ (field.alias if field.alias else field.name) ~ ')' }} as {{ field.alias if field.alias else field.name }}\n    {% endfor %}\n{% endif %}\n\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1756850323.308701, "supported_languages": null}, "macro.fivetran_utils.wrap_in_quotes": {"name": "wrap_in_quotes", "resource_type": "macro", "package_name": "fivetran_utils", "path": "macros/wrap_in_quotes.sql", "original_file_path": "macros/wrap_in_quotes.sql", "unique_id": "macro.fivetran_utils.wrap_in_quotes", "macro_sql": "{%- macro wrap_in_quotes(object_to_quote) -%}\n\n{{ return(adapter.dispatch('wrap_in_quotes', 'fivetran_utils')(object_to_quote)) }}\n\n{%- endmacro -%}\n\n", "depends_on": {"macros": ["macro.fivetran_utils.postgres__wrap_in_quotes"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1756850323.3093283, "supported_languages": null}, "macro.fivetran_utils.default__wrap_in_quotes": {"name": "default__wrap_in_quotes", "resource_type": "macro", "package_name": "fivetran_utils", "path": "macros/wrap_in_quotes.sql", "original_file_path": "macros/wrap_in_quotes.sql", "unique_id": "macro.fivetran_utils.default__wrap_in_quotes", "macro_sql": "{%- macro default__wrap_in_quotes(object_to_quote)  -%}\n{# bigquery, spark, databricks #}\n    `{{ object_to_quote }}`\n{%- endmacro -%}\n\n", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1756850323.309555, "supported_languages": null}, "macro.fivetran_utils.snowflake__wrap_in_quotes": {"name": "snowflake__wrap_in_quotes", "resource_type": "macro", "package_name": "fivetran_utils", "path": "macros/wrap_in_quotes.sql", "original_file_path": "macros/wrap_in_quotes.sql", "unique_id": "macro.fivetran_utils.snowflake__wrap_in_quotes", "macro_sql": "{%- macro snowflake__wrap_in_quotes(object_to_quote)  -%}\n    \"{{ object_to_quote | upper }}\"\n{%- endmacro -%}\n\n", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1756850323.3098009, "supported_languages": null}, "macro.fivetran_utils.redshift__wrap_in_quotes": {"name": "redshift__wrap_in_quotes", "resource_type": "macro", "package_name": "fivetran_utils", "path": "macros/wrap_in_quotes.sql", "original_file_path": "macros/wrap_in_quotes.sql", "unique_id": "macro.fivetran_utils.redshift__wrap_in_quotes", "macro_sql": "{%- macro redshift__wrap_in_quotes(object_to_quote)  -%}\n    \"{{ object_to_quote }}\"\n{%- endmacro -%}\n\n", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1756850323.3100142, "supported_languages": null}, "macro.fivetran_utils.postgres__wrap_in_quotes": {"name": "postgres__wrap_in_quotes", "resource_type": "macro", "package_name": "fivetran_utils", "path": "macros/wrap_in_quotes.sql", "original_file_path": "macros/wrap_in_quotes.sql", "unique_id": "macro.fivetran_utils.postgres__wrap_in_quotes", "macro_sql": "{%- macro postgres__wrap_in_quotes(object_to_quote)  -%}\n    \"{{ object_to_quote }}\"\n{%- endmacro -%}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1756850323.3102207, "supported_languages": null}, "macro.fivetran_utils.enabled_vars_one_true": {"name": "enabled_vars_one_true", "resource_type": "macro", "package_name": "fivetran_utils", "path": "macros/enabled_vars_one_true.sql", "original_file_path": "macros/enabled_vars_one_true.sql", "unique_id": "macro.fivetran_utils.enabled_vars_one_true", "macro_sql": "{% macro enabled_vars_one_true(vars) %}\n\n{% for v in vars %}\n    \n    {% if var(v, False) == True %}\n    {{ return(True) }}\n    {% endif %}\n\n{% endfor %}\n\n{{ return(False) }}\n\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1756850323.3109744, "supported_languages": null}, "macro.fivetran_utils.calculated_fields": {"name": "calculated_fields", "resource_type": "macro", "package_name": "fivetran_utils", "path": "macros/calculated_fields.sql", "original_file_path": "macros/calculated_fields.sql", "unique_id": "macro.fivetran_utils.calculated_fields", "macro_sql": "{% macro calculated_fields(variable) -%}\n\n{% if var(variable, none) %}\n    {% for field in var(variable) %}\n        , {{ field.transform_sql }} as {{ field.name }} \n    {% endfor %}\n{% endif %}\n\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1756850323.311658, "supported_languages": null}, "macro.fivetran_utils.try_cast": {"name": "try_cast", "resource_type": "macro", "package_name": "fivetran_utils", "path": "macros/try_cast.sql", "original_file_path": "macros/try_cast.sql", "unique_id": "macro.fivetran_utils.try_cast", "macro_sql": "{% macro try_cast(field, type) %}\n    {{ adapter.dispatch('try_cast', 'fivetran_utils') (field, type) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.fivetran_utils.postgres__try_cast"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1756850323.3126404, "supported_languages": null}, "macro.fivetran_utils.default__try_cast": {"name": "default__try_cast", "resource_type": "macro", "package_name": "fivetran_utils", "path": "macros/try_cast.sql", "original_file_path": "macros/try_cast.sql", "unique_id": "macro.fivetran_utils.default__try_cast", "macro_sql": "{% macro default__try_cast(field, type) %}\n    {# most databases don't support this function yet\n    so we just need to use cast #}\n    cast({{field}} as {{type}})\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1756850323.3129587, "supported_languages": null}, "macro.fivetran_utils.redshift__try_cast": {"name": "redshift__try_cast", "resource_type": "macro", "package_name": "fivetran_utils", "path": "macros/try_cast.sql", "original_file_path": "macros/try_cast.sql", "unique_id": "macro.fivetran_utils.redshift__try_cast", "macro_sql": "{% macro redshift__try_cast(field, type) %}\n{%- if type == 'numeric' -%}\n\n    case\n        when trim({{field}}) ~ '^(0|[1-9][0-9]*)$' then trim({{field}})\n        else null\n    end::{{type}}\n\n{% else %}\n    {{ exceptions.raise_compiler_error(\n            \"non-numeric datatypes are not currently supported\") }}\n\n{% endif %}\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1756850323.313507, "supported_languages": null}, "macro.fivetran_utils.postgres__try_cast": {"name": "postgres__try_cast", "resource_type": "macro", "package_name": "fivetran_utils", "path": "macros/try_cast.sql", "original_file_path": "macros/try_cast.sql", "unique_id": "macro.fivetran_utils.postgres__try_cast", "macro_sql": "{% macro postgres__try_cast(field, type) %}\n{%- if type == 'numeric' -%}\n\n    case\n        when replace(cast({{field}} as varchar),cast(' ' as varchar),cast('' as varchar)) ~ '^(0|[1-9][0-9]*)$' \n        then replace(cast({{field}} as varchar),cast(' ' as varchar),cast('' as varchar))\n        else null\n    end::{{type}}\n\n{% else %}\n    {{ exceptions.raise_compiler_error(\n            \"non-numeric datatypes are not currently supported\") }}\n\n{% endif %}\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1756850323.3140752, "supported_languages": null}, "macro.fivetran_utils.snowflake__try_cast": {"name": "snowflake__try_cast", "resource_type": "macro", "package_name": "fivetran_utils", "path": "macros/try_cast.sql", "original_file_path": "macros/try_cast.sql", "unique_id": "macro.fivetran_utils.snowflake__try_cast", "macro_sql": "{% macro snowflake__try_cast(field, type) %}\n    try_cast(cast({{field}} as varchar) as {{type}})\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1756850323.3143358, "supported_languages": null}, "macro.fivetran_utils.bigquery__try_cast": {"name": "bigquery__try_cast", "resource_type": "macro", "package_name": "fivetran_utils", "path": "macros/try_cast.sql", "original_file_path": "macros/try_cast.sql", "unique_id": "macro.fivetran_utils.bigquery__try_cast", "macro_sql": "{% macro bigquery__try_cast(field, type) %}\n    safe_cast({{field}} as {{type}})\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1756850323.314588, "supported_languages": null}, "macro.fivetran_utils.spark__try_cast": {"name": "spark__try_cast", "resource_type": "macro", "package_name": "fivetran_utils", "path": "macros/try_cast.sql", "original_file_path": "macros/try_cast.sql", "unique_id": "macro.fivetran_utils.spark__try_cast", "macro_sql": "{% macro spark__try_cast(field, type) %}\n    try_cast({{field}} as {{type}})\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1756850323.3148592, "supported_languages": null}, "macro.fivetran_utils.sqlserver__try_cast": {"name": "sqlserver__try_cast", "resource_type": "macro", "package_name": "fivetran_utils", "path": "macros/try_cast.sql", "original_file_path": "macros/try_cast.sql", "unique_id": "macro.fivetran_utils.sqlserver__try_cast", "macro_sql": "{% macro sqlserver__try_cast(field, type) %}\n    try_cast({{field}} as {{type}})\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1756850323.3151119, "supported_languages": null}, "macro.fivetran_utils.drop_schemas_automation": {"name": "drop_schemas_automation", "resource_type": "macro", "package_name": "fivetran_utils", "path": "macros/drop_schemas_automation.sql", "original_file_path": "macros/drop_schemas_automation.sql", "unique_id": "macro.fivetran_utils.drop_schemas_automation", "macro_sql": "{% macro drop_schemas_automation(drop_target_schema=true) %}\n    {{ return(adapter.dispatch('drop_schemas_automation', 'fivetran_utils')(drop_target_schema)) }}\n{%- endmacro %}", "depends_on": {"macros": ["macro.fivetran_utils.default__drop_schemas_automation"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1756850323.3163621, "supported_languages": null}, "macro.fivetran_utils.default__drop_schemas_automation": {"name": "default__drop_schemas_automation", "resource_type": "macro", "package_name": "fivetran_utils", "path": "macros/drop_schemas_automation.sql", "original_file_path": "macros/drop_schemas_automation.sql", "unique_id": "macro.fivetran_utils.default__drop_schemas_automation", "macro_sql": "{% macro default__drop_schemas_automation(drop_target_schema=true) %}\n\n{% set fetch_list_sql %}\n    {% if target.type not in ('databricks', 'spark') %}\n        select schema_name\n        from \n        {{ wrap_in_quotes(target.database) }}.INFORMATION_SCHEMA.SCHEMATA\n        where lower(schema_name) like '{{ target.schema | lower }}{%- if not drop_target_schema -%}_{%- endif -%}%'\n    {% else %}\n        SHOW SCHEMAS LIKE '{{ target.schema }}{%- if not drop_target_schema -%}_{%- endif -%}*'\n    {% endif %}\n{% endset %}\n\n{% set results = run_query(fetch_list_sql) %}\n\n{% if execute %}\n    {% set results_list = results.columns[0].values() %}\n{% else %}\n    {% set results_list = [] %}\n{% endif %}\n\n{% for schema_to_drop in results_list %}\n    {% do adapter.drop_schema(api.Relation.create(database=target.database, schema=schema_to_drop)) %}\n    {{ print('Schema ' ~ schema_to_drop ~ ' successfully dropped from the ' ~ target.database ~ ' database.\\n')}}\n{% endfor %}\n\n{% endmacro %}", "depends_on": {"macros": ["macro.fivetran_utils.wrap_in_quotes", "macro.dbt.run_query"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1756850323.3182957, "supported_languages": null}, "macro.fivetran_utils.max_bool": {"name": "max_bool", "resource_type": "macro", "package_name": "fivetran_utils", "path": "macros/max_bool.sql", "original_file_path": "macros/max_bool.sql", "unique_id": "macro.fivetran_utils.max_bool", "macro_sql": "{% macro max_bool(boolean_field) -%}\n\n{{ adapter.dispatch('max_bool', 'fivetran_utils') (boolean_field) }}\n\n{%- endmacro %}", "depends_on": {"macros": ["macro.fivetran_utils.default__max_bool"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1756850323.3188548, "supported_languages": null}, "macro.fivetran_utils.default__max_bool": {"name": "default__max_bool", "resource_type": "macro", "package_name": "fivetran_utils", "path": "macros/max_bool.sql", "original_file_path": "macros/max_bool.sql", "unique_id": "macro.fivetran_utils.default__max_bool", "macro_sql": "{% macro default__max_bool(boolean_field)  %}\n\n    bool_or( {{ boolean_field }} )\n\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1756850323.3190715, "supported_languages": null}, "macro.fivetran_utils.snowflake__max_bool": {"name": "snowflake__max_bool", "resource_type": "macro", "package_name": "fivetran_utils", "path": "macros/max_bool.sql", "original_file_path": "macros/max_bool.sql", "unique_id": "macro.fivetran_utils.snowflake__max_bool", "macro_sql": "{% macro snowflake__max_bool(boolean_field)  %}\n\n    max( {{ boolean_field }} )\n\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1756850323.3192792, "supported_languages": null}, "macro.fivetran_utils.bigquery__max_bool": {"name": "bigquery__max_bool", "resource_type": "macro", "package_name": "fivetran_utils", "path": "macros/max_bool.sql", "original_file_path": "macros/max_bool.sql", "unique_id": "macro.fivetran_utils.bigquery__max_bool", "macro_sql": "{% macro bigquery__max_bool(boolean_field)  %}\n\n    max( {{ boolean_field }} )\n\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1756850323.319484, "supported_languages": null}, "macro.fivetran_utils.json_parse": {"name": "json_parse", "resource_type": "macro", "package_name": "fivetran_utils", "path": "macros/json_parse.sql", "original_file_path": "macros/json_parse.sql", "unique_id": "macro.fivetran_utils.json_parse", "macro_sql": "{% macro json_parse(string, string_path) -%}\n\n{{ adapter.dispatch('json_parse', 'fivetran_utils') (string, string_path) }}\n\n{%- endmacro %}", "depends_on": {"macros": ["macro.fivetran_utils.postgres__json_parse"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1756850323.320602, "supported_languages": null}, "macro.fivetran_utils.default__json_parse": {"name": "default__json_parse", "resource_type": "macro", "package_name": "fivetran_utils", "path": "macros/json_parse.sql", "original_file_path": "macros/json_parse.sql", "unique_id": "macro.fivetran_utils.default__json_parse", "macro_sql": "{% macro default__json_parse(string, string_path) %}\n\n  json_extract_path_text({{string}}, {%- for s in string_path -%}'{{ s }}'{%- if not loop.last -%},{%- endif -%}{%- endfor -%} )\n\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1756850323.3211055, "supported_languages": null}, "macro.fivetran_utils.redshift__json_parse": {"name": "redshift__json_parse", "resource_type": "macro", "package_name": "fivetran_utils", "path": "macros/json_parse.sql", "original_file_path": "macros/json_parse.sql", "unique_id": "macro.fivetran_utils.redshift__json_parse", "macro_sql": "{% macro redshift__json_parse(string, string_path) %}\n\n  json_extract_path_text({{string}}, {%- for s in string_path -%}'{{ s }}'{%- if not loop.last -%},{%- endif -%}{%- endfor -%} )\n\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1756850323.3215857, "supported_languages": null}, "macro.fivetran_utils.bigquery__json_parse": {"name": "bigquery__json_parse", "resource_type": "macro", "package_name": "fivetran_utils", "path": "macros/json_parse.sql", "original_file_path": "macros/json_parse.sql", "unique_id": "macro.fivetran_utils.bigquery__json_parse", "macro_sql": "{% macro bigquery__json_parse(string, string_path) %}\n\n \n  json_extract_scalar({{string}}, '$.{%- for s in string_path -%}{{ s }}{%- if not loop.last -%}.{%- endif -%}{%- endfor -%} ')\n\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1756850323.3220701, "supported_languages": null}, "macro.fivetran_utils.postgres__json_parse": {"name": "postgres__json_parse", "resource_type": "macro", "package_name": "fivetran_utils", "path": "macros/json_parse.sql", "original_file_path": "macros/json_parse.sql", "unique_id": "macro.fivetran_utils.postgres__json_parse", "macro_sql": "{% macro postgres__json_parse(string, string_path) %}\n\n  {{string}}::json #>> '{ {%- for s in string_path -%}{{ s }}{%- if not loop.last -%},{%- endif -%}{%- endfor -%} }'\n\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1756850323.3225358, "supported_languages": null}, "macro.fivetran_utils.snowflake__json_parse": {"name": "snowflake__json_parse", "resource_type": "macro", "package_name": "fivetran_utils", "path": "macros/json_parse.sql", "original_file_path": "macros/json_parse.sql", "unique_id": "macro.fivetran_utils.snowflake__json_parse", "macro_sql": "{% macro snowflake__json_parse(string, string_path) %}\n\n  parse_json( {{string}} ) {%- for s in string_path -%}{% if s is number %}[{{ s }}]{% else %}['{{ s }}']{% endif %}{%- endfor -%}\n\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1756850323.323076, "supported_languages": null}, "macro.fivetran_utils.spark__json_parse": {"name": "spark__json_parse", "resource_type": "macro", "package_name": "fivetran_utils", "path": "macros/json_parse.sql", "original_file_path": "macros/json_parse.sql", "unique_id": "macro.fivetran_utils.spark__json_parse", "macro_sql": "{% macro spark__json_parse(string, string_path) %}\n\n  {{string}} : {%- for s in string_path -%}{% if s is number %}[{{ s }}]{% else %}['{{ s }}']{% endif %}{%- endfor -%}\n\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1756850323.3235936, "supported_languages": null}, "macro.fivetran_utils.sqlserver__json_parse": {"name": "sqlserver__json_parse", "resource_type": "macro", "package_name": "fivetran_utils", "path": "macros/json_parse.sql", "original_file_path": "macros/json_parse.sql", "unique_id": "macro.fivetran_utils.sqlserver__json_parse", "macro_sql": "{% macro sqlserver__json_parse(string, string_path) %}\n\n  json_value({{string}}, '$.{%- for s in string_path -%}{{ s }}{%- if not loop.last -%}.{%- endif -%}{%- endfor -%} ')\n\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1756850323.3240821, "supported_languages": null}, "macro.fivetran_utils.fill_pass_through_columns": {"name": "fill_pass_through_columns", "resource_type": "macro", "package_name": "fivetran_utils", "path": "macros/fill_pass_through_columns.sql", "original_file_path": "macros/fill_pass_through_columns.sql", "unique_id": "macro.fivetran_utils.fill_pass_through_columns", "macro_sql": "{% macro fill_pass_through_columns(pass_through_variable) %}\n\n{% if var(pass_through_variable) %}\n    {% for field in var(pass_through_variable) %}\n        {% if field is mapping %}\n            {% if field.transform_sql %}\n                , {{ field.transform_sql }} as {{ field.alias if field.alias else field.name }}\n            {% else %}\n                , {{ field.alias if field.alias else field.name }}\n            {% endif %}\n        {% else %}\n        , {{ field }}\n        {% endif %}\n    {% endfor %}\n{% endif %}\n\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1756850323.3254006, "supported_languages": null}, "macro.fivetran_utils.add_pass_through_columns": {"name": "add_pass_through_columns", "resource_type": "macro", "package_name": "fivetran_utils", "path": "macros/add_pass_through_columns.sql", "original_file_path": "macros/add_pass_through_columns.sql", "unique_id": "macro.fivetran_utils.add_pass_through_columns", "macro_sql": "{% macro add_pass_through_columns(base_columns, pass_through_var) %}\n\n  {% if pass_through_var %}\n\n    {% for column in pass_through_var %}\n\n    {% if column is mapping %}\n\n      {% if column.alias %}\n\n        {% do base_columns.append({ \"name\": column.name, \"alias\": column.alias, \"datatype\": column.datatype if column.datatype else dbt.type_string()}) %}\n\n      {% else %}\n\n        {% do base_columns.append({ \"name\": column.name, \"datatype\": column.datatype if column.datatype else dbt.type_string()}) %}\n        \n      {% endif %}\n\n    {% else %}\n\n      {% do base_columns.append({ \"name\": column, \"datatype\": dbt.type_string()}) %}\n\n    {% endif %}\n\n    {% endfor %}\n\n  {% endif %}\n\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.type_string"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1756850323.3274143, "supported_languages": null}, "macro.fivetran_utils.pivot_json_extract": {"name": "pivot_json_extract", "resource_type": "macro", "package_name": "fivetran_utils", "path": "macros/pivot_json_extract.sql", "original_file_path": "macros/pivot_json_extract.sql", "unique_id": "macro.fivetran_utils.pivot_json_extract", "macro_sql": "{% macro pivot_json_extract(string, list_of_properties) %}\n\n{%- for property in list_of_properties -%}\n{%- if property is mapping -%}\nreplace( {{ fivetran_utils.json_extract(string, property.name) }}, '\"', '') as {{ property.alias if property.alias else property.name | replace(' ', '_') | replace('.', '_') | lower }}\n\n{%- else -%}\nreplace( {{ fivetran_utils.json_extract(string, property) }}, '\"', '') as {{ property | replace(' ', '_') | lower }}\n\n{%- endif -%}\n{%- if not loop.last -%},{%- endif %}\n{% endfor -%}\n\n{% endmacro %}", "depends_on": {"macros": ["macro.fivetran_utils.json_extract"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1756850323.328884, "supported_languages": null}, "macro.fivetran_utils.timestamp_diff": {"name": "timestamp_diff", "resource_type": "macro", "package_name": "fivetran_utils", "path": "macros/timestamp_diff.sql", "original_file_path": "macros/timestamp_diff.sql", "unique_id": "macro.fivetran_utils.timestamp_diff", "macro_sql": "{% macro timestamp_diff(first_date, second_date, datepart) %}\n  {{ adapter.dispatch('timestamp_diff', 'fivetran_utils')(first_date, second_date, datepart) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.fivetran_utils.postgres__timestamp_diff"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1756850323.3302715, "supported_languages": null}, "macro.fivetran_utils.default__timestamp_diff": {"name": "default__timestamp_diff", "resource_type": "macro", "package_name": "fivetran_utils", "path": "macros/timestamp_diff.sql", "original_file_path": "macros/timestamp_diff.sql", "unique_id": "macro.fivetran_utils.default__timestamp_diff", "macro_sql": "{% macro default__timestamp_diff(first_date, second_date, datepart) %}\n\n    datediff(\n        {{ datepart }},\n        {{ first_date }},\n        {{ second_date }}\n        )\n\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1756850323.3306017, "supported_languages": null}, "macro.fivetran_utils.redshift__timestamp_diff": {"name": "redshift__timestamp_diff", "resource_type": "macro", "package_name": "fivetran_utils", "path": "macros/timestamp_diff.sql", "original_file_path": "macros/timestamp_diff.sql", "unique_id": "macro.fivetran_utils.redshift__timestamp_diff", "macro_sql": "{% macro redshift__timestamp_diff(first_date, second_date, datepart) %}\n\n    datediff(\n        {{ datepart }},\n        {{ first_date }},\n        {{ second_date }}\n        )\n\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1756850323.330944, "supported_languages": null}, "macro.fivetran_utils.bigquery__timestamp_diff": {"name": "bigquery__timestamp_diff", "resource_type": "macro", "package_name": "fivetran_utils", "path": "macros/timestamp_diff.sql", "original_file_path": "macros/timestamp_diff.sql", "unique_id": "macro.fivetran_utils.bigquery__timestamp_diff", "macro_sql": "{% macro bigquery__timestamp_diff(first_date, second_date, datepart) %}\n\n    timestamp_diff(\n        {{second_date}},\n        {{first_date}},\n        {{datepart}}\n    )\n\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1756850323.3312535, "supported_languages": null}, "macro.fivetran_utils.postgres__timestamp_diff": {"name": "postgres__timestamp_diff", "resource_type": "macro", "package_name": "fivetran_utils", "path": "macros/timestamp_diff.sql", "original_file_path": "macros/timestamp_diff.sql", "unique_id": "macro.fivetran_utils.postgres__timestamp_diff", "macro_sql": "{% macro postgres__timestamp_diff(first_date, second_date, datepart) %}\n\n    {% if datepart == 'year' %}\n        (date_part('year', ({{second_date}})::date) - date_part('year', ({{first_date}})::date))\n    {% elif datepart == 'quarter' %}\n        ({{ dbt.datediff(first_date, second_date, 'year') }} * 4 + date_part('quarter', ({{second_date}})::date) - date_part('quarter', ({{first_date}})::date))\n    {% elif datepart == 'month' %}\n        ({{ dbt.datediff(first_date, second_date, 'year') }} * 12 + date_part('month', ({{second_date}})::date) - date_part('month', ({{first_date}})::date))\n    {% elif datepart == 'day' %}\n        (({{second_date}})::date - ({{first_date}})::date)\n    {% elif datepart == 'week' %}\n        ({{ dbt.datediff(first_date, second_date, 'day') }} / 7 + case\n            when date_part('dow', ({{first_date}})::timestamp) <= date_part('dow', ({{second_date}})::timestamp) then\n                case when {{first_date}} <= {{second_date}} then 0 else -1 end\n            else\n                case when {{first_date}} <= {{second_date}} then 1 else 0 end\n        end)\n    {% elif datepart == 'hour' %}\n        ({{ dbt.datediff(first_date, second_date, 'day') }} * 24 + date_part('hour', ({{second_date}})::timestamp) - date_part('hour', ({{first_date}})::timestamp))\n    {% elif datepart == 'minute' %}\n        ({{ dbt.datediff(first_date, second_date, 'hour') }} * 60 + date_part('minute', ({{second_date}})::timestamp) - date_part('minute', ({{first_date}})::timestamp))\n    {% elif datepart == 'second' %}\n        ({{ dbt.datediff(first_date, second_date, 'minute') }} * 60 + floor(date_part('second', ({{second_date}})::timestamp)) - floor(date_part('second', ({{first_date}})::timestamp)))\n    {% elif datepart == 'millisecond' %}\n        ({{ dbt.datediff(first_date, second_date, 'minute') }} * 60000 + floor(date_part('millisecond', ({{second_date}})::timestamp)) - floor(date_part('millisecond', ({{first_date}})::timestamp)))\n    {% elif datepart == 'microsecond' %}\n        ({{ dbt.datediff(first_date, second_date, 'minute') }} * 60000000 + floor(date_part('microsecond', ({{second_date}})::timestamp)) - floor(date_part('microsecond', ({{first_date}})::timestamp)))\n    {% else %}\n        {{ exceptions.raise_compiler_error(\"Unsupported datepart for macro datediff in postgres: {!r}\".format(datepart)) }}\n    {% endif %}\n\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.datediff"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1756850323.3344517, "supported_languages": null}, "macro.fivetran_utils.snowflake_seed_data": {"name": "snowflake_seed_data", "resource_type": "macro", "package_name": "fivetran_utils", "path": "macros/snowflake_seed_data.sql", "original_file_path": "macros/snowflake_seed_data.sql", "unique_id": "macro.fivetran_utils.snowflake_seed_data", "macro_sql": "{% macro snowflake_seed_data(seed_name) %}\n\n{% if target.type == 'snowflake' %}\n{{ return(ref(seed_name ~ '_snowflake')) }}\n{% else %}\n{{ return(ref(seed_name)) }}\n{% endif %}\n\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1756850323.3351989, "supported_languages": null}, "macro.fivetran_utils.first_value": {"name": "first_value", "resource_type": "macro", "package_name": "fivetran_utils", "path": "macros/first_value.sql", "original_file_path": "macros/first_value.sql", "unique_id": "macro.fivetran_utils.first_value", "macro_sql": "{% macro first_value(first_value_field, partition_field, order_by_field, order=\"asc\") -%}\n\n{{ adapter.dispatch('first_value', 'fivetran_utils') (first_value_field, partition_field, order_by_field, order) }}\n\n{%- endmacro %}", "depends_on": {"macros": ["macro.fivetran_utils.default__first_value"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1756850323.3359447, "supported_languages": null}, "macro.fivetran_utils.default__first_value": {"name": "default__first_value", "resource_type": "macro", "package_name": "fivetran_utils", "path": "macros/first_value.sql", "original_file_path": "macros/first_value.sql", "unique_id": "macro.fivetran_utils.default__first_value", "macro_sql": "{% macro default__first_value(first_value_field, partition_field, order_by_field, order=\"asc\")  %}\n\n    first_value( {{ first_value_field }} ignore nulls ) over (partition by {{ partition_field }} order by {{ order_by_field }} {{ order }} )\n\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1756850323.3363585, "supported_languages": null}, "macro.fivetran_utils.redshift__first_value": {"name": "redshift__first_value", "resource_type": "macro", "package_name": "fivetran_utils", "path": "macros/first_value.sql", "original_file_path": "macros/first_value.sql", "unique_id": "macro.fivetran_utils.redshift__first_value", "macro_sql": "{% macro redshift__first_value(first_value_field, partition_field, order_by_field, order=\"asc\") %}\n\n    first_value( {{ first_value_field }} ignore nulls ) over (partition by {{ partition_field }} order by {{ order_by_field }} {{ order }} , {{ partition_field }} rows unbounded preceding )\n\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1756850323.336814, "supported_languages": null}, "macro.fivetran_utils.fivetran_date_spine": {"name": "fivetran_date_spine", "resource_type": "macro", "package_name": "fivetran_utils", "path": "macros/fivetran_date_spine.sql", "original_file_path": "macros/fivetran_date_spine.sql", "unique_id": "macro.fivetran_utils.fivetran_date_spine", "macro_sql": "{% macro fivetran_date_spine(datepart, start_date, end_date) -%}\n\n{{ return(adapter.dispatch('fivetran_date_spine', 'fivetran_utils') (datepart, start_date, end_date)) }}\n\n{%- endmacro %}", "depends_on": {"macros": ["macro.fivetran_utils.default__fivetran_date_spine"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1756850323.3377829, "supported_languages": null}, "macro.fivetran_utils.default__fivetran_date_spine": {"name": "default__fivetran_date_spine", "resource_type": "macro", "package_name": "fivetran_utils", "path": "macros/fivetran_date_spine.sql", "original_file_path": "macros/fivetran_date_spine.sql", "unique_id": "macro.fivetran_utils.default__fivetran_date_spine", "macro_sql": "{% macro default__fivetran_date_spine(datepart, start_date, end_date) %}\n\n    {{ dbt_utils.date_spine(datepart, start_date, end_date) }}\n        \n{% endmacro %}", "depends_on": {"macros": ["macro.dbt_utils.date_spine"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1756850323.3381298, "supported_languages": null}, "macro.fivetran_utils.sqlserver__fivetran_date_spine": {"name": "sqlserver__fivetran_date_spine", "resource_type": "macro", "package_name": "fivetran_utils", "path": "macros/fivetran_date_spine.sql", "original_file_path": "macros/fivetran_date_spine.sql", "unique_id": "macro.fivetran_utils.sqlserver__fivetran_date_spine", "macro_sql": "{% macro sqlserver__fivetran_date_spine(datepart, start_date, end_date) -%}\n\n    {% set date_spine_query %}\n        with\n\n        l0 as (\n\n            select c\n            from (select 1 union all select 1) as d(c)\n\n        ),\n        l1 as (\n\n            select\n                1 as c\n            from l0 as a\n            cross join l0 as b\n\n        ),\n\n        l2 as (\n\n            select 1 as c\n            from l1 as a\n            cross join l1 as b\n        ),\n\n        l3 as (\n\n            select 1 as c\n            from l2 as a\n            cross join l2 as b\n        ),\n\n        l4 as (\n\n            select 1 as c\n            from l3 as a\n            cross join l3 as b\n        ),\n\n        l5 as (\n\n            select 1 as c\n            from l4 as a\n            cross join l4 as b\n        ),\n\n        nums as (\n\n            select row_number() over (order by (select null)) as rownum\n            from l5\n        ),\n\n        rawdata as (\n\n            select top ({{dbt.datediff(start_date, end_date, datepart)}}) rownum -1 as n\n            from nums\n            order by rownum\n        ),\n\n        all_periods as (\n\n            select (\n                {{\n                    dbt.dateadd(\n                        datepart,\n                        'n',\n                        start_date\n                    )\n                }}\n            ) as date_{{datepart}}\n            from rawdata\n        ),\n\n        filtered as (\n\n            select *\n            from all_periods\n            where date_{{datepart}} <= {{ end_date }}\n\n        )\n\n        select * from filtered\n        order by 1\n\n    {% endset %}\n\n    {% set results = run_query(date_spine_query) %}\n\n    {% if execute %}\n\n        {% set results_list = results.columns[0].values() %}\n    \n    {% else %}\n\n        {% set results_list = [] %}\n\n    {% endif %}\n\n    {%- for date_field in results_list %}\n        select cast('{{ date_field }}' as date) as date_{{datepart}} {{ 'union all ' if not loop.last else '' }}\n    {% endfor -%}\n\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.datediff", "macro.dbt.dateadd", "macro.dbt.run_query"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1756850323.3396728, "supported_languages": null}, "macro.fivetran_utils.collect_freshness": {"name": "collect_freshness", "resource_type": "macro", "package_name": "fivetran_utils", "path": "macros/collect_freshness.sql", "original_file_path": "macros/collect_freshness.sql", "unique_id": "macro.fivetran_utils.collect_freshness", "macro_sql": "{% macro collect_freshness(source, loaded_at_field, filter) %}\n  {{ return(adapter.dispatch('collect_freshness')(source, loaded_at_field, filter))}}\n{% endmacro %}", "depends_on": {"macros": ["macro.fivetran_utils.default__collect_freshness"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1756850323.3405921, "supported_languages": null}, "macro.fivetran_utils.default__collect_freshness": {"name": "default__collect_freshness", "resource_type": "macro", "package_name": "fivetran_utils", "path": "macros/collect_freshness.sql", "original_file_path": "macros/collect_freshness.sql", "unique_id": "macro.fivetran_utils.default__collect_freshness", "macro_sql": "{% macro default__collect_freshness(source, loaded_at_field, filter) %}\n  {% call statement('collect_freshness', fetch_result=True, auto_begin=False) -%}\n\n  {%- set enabled_array = [] -%}\n  {% for node in graph.sources.values() %}\n    {% if node.identifier == source.identifier %}\n      {% if (node.meta['is_enabled'] | default(true)) %}\n        {%- do enabled_array.append(1) -%}\n      {% endif %}\n    {% endif %}\n  {% endfor %}\n  {% set is_enabled = (enabled_array != []) %}\n\n    select\n      {% if is_enabled %}\n      max({{ loaded_at_field }})\n      {% else %} \n      {{ current_timestamp() }} {% endif %} as max_loaded_at,\n      {{ current_timestamp() }} as snapshotted_at\n\n    {% if is_enabled %}\n    from {{ source }}\n      {% if filter %}\n      where {{ filter }}\n      {% endif %}\n    {% endif %}\n\n  {% endcall %}\n\n  {% if dbt_version.split('.') | map('int') | list >= [1, 5, 0]  %}\n    {{ return(load_result('collect_freshness')) }}\n  {% else %}\n    {{ return(load_result('collect_freshness').table) }}\n  {% endif %}\n\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.statement", "macro.dbt.current_timestamp"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1756850323.343054, "supported_languages": null}, "macro.fivetran_utils.dummy_coalesce_value": {"name": "dummy_coalesce_value", "resource_type": "macro", "package_name": "fivetran_utils", "path": "macros/dummy_coalesce_value.sql", "original_file_path": "macros/dummy_coalesce_value.sql", "unique_id": "macro.fivetran_utils.dummy_coalesce_value", "macro_sql": "{% macro dummy_coalesce_value(column) %}\n\n{% set coalesce_value = {\n 'STRING': \"'DUMMY_STRING'\",\n 'BOOLEAN': 'null',\n 'INT': 999999999,\n 'FLOAT': 999999999.99,\n 'TIMESTAMP': 'cast(\"2099-12-31\" as timestamp)',\n 'DATE': 'cast(\"2099-12-31\" as date)',\n} %}\n\n{% if column.is_float() %}\n{{ return(coalesce_value['FLOAT']) }}\n\n{% elif column.is_numeric() %}\n{{ return(coalesce_value['INT']) }}\n\n{% elif column.is_string() %}\n{{ return(coalesce_value['STRING']) }}\n\n{% elif column.data_type|lower == 'boolean' %}\n{{ return(coalesce_value['BOOLEAN']) }}\n\n{% elif 'timestamp' in column.data_type|lower %}\n{{ return(coalesce_value['TIMESTAMP']) }}\n\n{% elif 'date' in column.data_type|lower %}\n{{ return(coalesce_value['DATE']) }}\n\n{% elif 'int' in column.data_type|lower %}\n{{ return(coalesce_value['INT']) }}\n\n{% endif %}\n\n\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1756850323.3456075, "supported_languages": null}, "macro.fivetran_utils.empty_variable_warning": {"name": "empty_variable_warning", "resource_type": "macro", "package_name": "fivetran_utils", "path": "macros/empty_variable_warning.sql", "original_file_path": "macros/empty_variable_warning.sql", "unique_id": "macro.fivetran_utils.empty_variable_warning", "macro_sql": "{% macro empty_variable_warning(variable, downstream_model) %}\n\n{% if not var(variable) %}\n{{ log(\n    \"\"\"\n    Warning: You have passed an empty list to the \"\"\" ~ variable ~ \"\"\".\n    As a result, you won't see the history of any columns in the \"\"\" ~ downstream_model ~ \"\"\" model.\n    \"\"\",\n    info=True\n) }}\n{% endif %}\n\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1756850323.346381, "supported_languages": null}, "macro.fivetran_utils.remove_prefix_from_columns": {"name": "remove_prefix_from_columns", "resource_type": "macro", "package_name": "fivetran_utils", "path": "macros/remove_prefix_from_columns.sql", "original_file_path": "macros/remove_prefix_from_columns.sql", "unique_id": "macro.fivetran_utils.remove_prefix_from_columns", "macro_sql": "{% macro remove_prefix_from_columns(columns, prefix='', exclude=[]) %}\n\n        {%- for col in columns if col.name not in exclude -%}\n        {%- if col.name[:prefix|length]|lower == prefix -%}\n        {{ col.name }} as {{ col.name[prefix|length:] }}\n        {%- else -%}\n        {{ col.name }}\n        {%- endif -%}\n        {%- if not loop.last -%},{%- endif %}\n        {% endfor -%}\n\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1756850323.3475392, "supported_languages": null}, "macro.fivetran_utils.timestamp_add": {"name": "timestamp_add", "resource_type": "macro", "package_name": "fivetran_utils", "path": "macros/timestamp_add.sql", "original_file_path": "macros/timestamp_add.sql", "unique_id": "macro.fivetran_utils.timestamp_add", "macro_sql": "{% macro timestamp_add(datepart, interval, from_timestamp) -%}\n\n{{ adapter.dispatch('timestamp_add', 'fivetran_utils') (datepart, interval, from_timestamp) }}\n\n{%- endmacro %}", "depends_on": {"macros": ["macro.fivetran_utils.postgres__timestamp_add"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1756850323.34832, "supported_languages": null}, "macro.fivetran_utils.default__timestamp_add": {"name": "default__timestamp_add", "resource_type": "macro", "package_name": "fivetran_utils", "path": "macros/timestamp_add.sql", "original_file_path": "macros/timestamp_add.sql", "unique_id": "macro.fivetran_utils.default__timestamp_add", "macro_sql": "{% macro default__timestamp_add(datepart, interval, from_timestamp) %}\n\n    timestampadd(\n        {{ datepart }},\n        {{ interval }},\n        {{ from_timestamp }}\n        )\n\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1756850323.3486512, "supported_languages": null}, "macro.fivetran_utils.bigquery__timestamp_add": {"name": "bigquery__timestamp_add", "resource_type": "macro", "package_name": "fivetran_utils", "path": "macros/timestamp_add.sql", "original_file_path": "macros/timestamp_add.sql", "unique_id": "macro.fivetran_utils.bigquery__timestamp_add", "macro_sql": "{% macro bigquery__timestamp_add(datepart, interval, from_timestamp) %}\n\n        timestamp_add({{ from_timestamp }}, interval  {{ interval }} {{ datepart }})\n\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1756850323.348992, "supported_languages": null}, "macro.fivetran_utils.redshift__timestamp_add": {"name": "redshift__timestamp_add", "resource_type": "macro", "package_name": "fivetran_utils", "path": "macros/timestamp_add.sql", "original_file_path": "macros/timestamp_add.sql", "unique_id": "macro.fivetran_utils.redshift__timestamp_add", "macro_sql": "{% macro redshift__timestamp_add(datepart, interval, from_timestamp) %}\n\n        dateadd(\n        {{ datepart }},\n        {{ interval }},\n        {{ from_timestamp }}\n        )\n\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1756850323.3493152, "supported_languages": null}, "macro.fivetran_utils.postgres__timestamp_add": {"name": "postgres__timestamp_add", "resource_type": "macro", "package_name": "fivetran_utils", "path": "macros/timestamp_add.sql", "original_file_path": "macros/timestamp_add.sql", "unique_id": "macro.fivetran_utils.postgres__timestamp_add", "macro_sql": "{% macro postgres__timestamp_add(datepart, interval, from_timestamp) %}\n\n    {{ from_timestamp }} + ((interval '1 {{ datepart }}') * ({{ interval }}))\n\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1756850323.3496292, "supported_languages": null}, "macro.fivetran_utils.spark__timestamp_add": {"name": "spark__timestamp_add", "resource_type": "macro", "package_name": "fivetran_utils", "path": "macros/timestamp_add.sql", "original_file_path": "macros/timestamp_add.sql", "unique_id": "macro.fivetran_utils.spark__timestamp_add", "macro_sql": "{% macro spark__timestamp_add(datepart, interval, from_timestamp) %}\n\n    {{ dbt.dateadd(datepart, interval, from_timestamp) }}\n        \n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.dateadd"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1756850323.3499877, "supported_languages": null}, "macro.fivetran_utils.enabled_vars": {"name": "enabled_vars", "resource_type": "macro", "package_name": "fivetran_utils", "path": "macros/enabled_vars.sql", "original_file_path": "macros/enabled_vars.sql", "unique_id": "macro.fivetran_utils.enabled_vars", "macro_sql": "{% macro enabled_vars(vars) %}\n\n{% for v in vars %}\n    \n    {% if var(v, True) == False %}\n    {{ return(False) }}\n    {% endif %}\n\n{% endfor %}\n\n{{ return(True) }}\n\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1756850323.35072, "supported_languages": null}, "macro.fivetran_utils.ceiling": {"name": "ceiling", "resource_type": "macro", "package_name": "fivetran_utils", "path": "macros/ceiling.sql", "original_file_path": "macros/ceiling.sql", "unique_id": "macro.fivetran_utils.ceiling", "macro_sql": "{% macro ceiling(num) -%}\n\n{{ adapter.dispatch('ceiling', 'fivetran_utils') (num) }}\n\n{%- endmacro %}", "depends_on": {"macros": ["macro.fivetran_utils.default__ceiling"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1756850323.3512022, "supported_languages": null}, "macro.fivetran_utils.default__ceiling": {"name": "default__ceiling", "resource_type": "macro", "package_name": "fivetran_utils", "path": "macros/ceiling.sql", "original_file_path": "macros/ceiling.sql", "unique_id": "macro.fivetran_utils.default__ceiling", "macro_sql": "{% macro default__ceiling(num) %}\n    ceiling({{ num }})\n\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1756850323.3514118, "supported_languages": null}, "macro.fivetran_utils.snowflake__ceiling": {"name": "snowflake__ceiling", "resource_type": "macro", "package_name": "fivetran_utils", "path": "macros/ceiling.sql", "original_file_path": "macros/ceiling.sql", "unique_id": "macro.fivetran_utils.snowflake__ceiling", "macro_sql": "{% macro snowflake__ceiling(num) %}\n    ceil({{ num }})\n\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1756850323.3516145, "supported_languages": null}, "macro.sap.subtract_day_to_char_date": {"name": "subtract_day_to_char_date", "resource_type": "macro", "package_name": "sap", "path": "macros/subtract_day_to_char_date.sql", "original_file_path": "macros/subtract_day_to_char_date.sql", "unique_id": "macro.sap.subtract_day_to_char_date", "macro_sql": "{% macro subtract_day_to_char_date(date_string) -%}\n\n{{ adapter.dispatch('subtract_day_to_char_date') (date_string) }}\n\n{%- endmacro %}", "depends_on": {"macros": ["macro.sap.postgres__subtract_day_to_char_date"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1756850323.3521667, "supported_languages": null}, "macro.sap.default__subtract_day_to_char_date": {"name": "default__subtract_day_to_char_date", "resource_type": "macro", "package_name": "sap", "path": "macros/subtract_day_to_char_date.sql", "original_file_path": "macros/subtract_day_to_char_date.sql", "unique_id": "macro.sap.default__subtract_day_to_char_date", "macro_sql": "{% macro default__subtract_day_to_char_date(date_string) %}\n\n    to_char(dateadd(day, -1, to_date({{ date_string }}, 'YYYYMMDD')), 'YYYYMMDD')\n\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1756850323.3523827, "supported_languages": null}, "macro.sap.postgres__subtract_day_to_char_date": {"name": "postgres__subtract_day_to_char_date", "resource_type": "macro", "package_name": "sap", "path": "macros/subtract_day_to_char_date.sql", "original_file_path": "macros/subtract_day_to_char_date.sql", "unique_id": "macro.sap.postgres__subtract_day_to_char_date", "macro_sql": "{% macro postgres__subtract_day_to_char_date(date_string) %}\n\n    to_char(to_date({{ date_string }}, 'YYYYMMDD') - interval '1 day', 'YYYYMMDD')\n\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1756850323.3525972, "supported_languages": null}, "macro.sap.bigquery__subtract_day_to_char_date": {"name": "bigquery__subtract_day_to_char_date", "resource_type": "macro", "package_name": "sap", "path": "macros/subtract_day_to_char_date.sql", "original_file_path": "macros/subtract_day_to_char_date.sql", "unique_id": "macro.sap.bigquery__subtract_day_to_char_date", "macro_sql": "{% macro bigquery__subtract_day_to_char_date(date_string) %}\n\n    format_date('%Y%m%d', date_sub(parse_date('%Y%m%d', {{ date_string }}), interval 1 day))\n\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1756850323.3528268, "supported_languages": null}, "macro.sap.databricks__subtract_day_to_char_date": {"name": "databricks__subtract_day_to_char_date", "resource_type": "macro", "package_name": "sap", "path": "macros/subtract_day_to_char_date.sql", "original_file_path": "macros/subtract_day_to_char_date.sql", "unique_id": "macro.sap.databricks__subtract_day_to_char_date", "macro_sql": "{% macro databricks__subtract_day_to_char_date(date_string) %}\n\n    date_format(date_sub(to_date({{ date_string }}, 'yyyyMMdd'), 1), 'yyyyMMdd')\n\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1756850323.35304, "supported_languages": null}, "macro.sap.remove_slashes_from_col_names": {"name": "remove_slashes_from_col_names", "resource_type": "macro", "package_name": "sap", "path": "macros/remove_slashes_from_col_names.sql", "original_file_path": "macros/remove_slashes_from_col_names.sql", "unique_id": "macro.sap.remove_slashes_from_col_names", "macro_sql": "{% macro remove_slashes_from_col_names(column_list) -%}\n    {{ adapter.dispatch('remove_slashes_from_col_names')(column_list) }}\n{%- endmacro %}", "depends_on": {"macros": ["macro.sap.default__remove_slashes_from_col_names"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1756850323.3536365, "supported_languages": null}, "macro.sap.default__remove_slashes_from_col_names": {"name": "default__remove_slashes_from_col_names", "resource_type": "macro", "package_name": "sap", "path": "macros/remove_slashes_from_col_names.sql", "original_file_path": "macros/remove_slashes_from_col_names.sql", "unique_id": "macro.sap.default__remove_slashes_from_col_names", "macro_sql": "{% macro default__remove_slashes_from_col_names(column_list) %}\n    {%- for col in column_list %}\n        {{ adapter.quote(col.name) }} as {{ col.name | replace('/', '_') }}{{ ',' if not loop.last -}}\n    {% endfor -%}\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1756850323.3542466, "supported_languages": null}, "macro.sap.add_day_to_char_date": {"name": "add_day_to_char_date", "resource_type": "macro", "package_name": "sap", "path": "macros/add_day_to_char_date.sql", "original_file_path": "macros/add_day_to_char_date.sql", "unique_id": "macro.sap.add_day_to_char_date", "macro_sql": "{% macro add_day_to_char_date(date_string) -%}\n\n{{ adapter.dispatch('add_day_to_char_date') (date_string) }}\n\n{%- endmacro %}", "depends_on": {"macros": ["macro.sap.postgres__add_day_to_char_date"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1756850323.3548062, "supported_languages": null}, "macro.sap.default__add_day_to_char_date": {"name": "default__add_day_to_char_date", "resource_type": "macro", "package_name": "sap", "path": "macros/add_day_to_char_date.sql", "original_file_path": "macros/add_day_to_char_date.sql", "unique_id": "macro.sap.default__add_day_to_char_date", "macro_sql": "{% macro default__add_day_to_char_date(date_string) %}\n\n    to_char(dateadd(day, 1, to_date({{ date_string }}, 'YYYYMMDD')), 'YYYYMMDD')\n\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1756850323.3550253, "supported_languages": null}, "macro.sap.postgres__add_day_to_char_date": {"name": "postgres__add_day_to_char_date", "resource_type": "macro", "package_name": "sap", "path": "macros/add_day_to_char_date.sql", "original_file_path": "macros/add_day_to_char_date.sql", "unique_id": "macro.sap.postgres__add_day_to_char_date", "macro_sql": "{% macro postgres__add_day_to_char_date(date_string) %}\n\n    to_char(to_date({{ date_string }}, 'YYYYMMDD') + interval '1 day', 'YYYYMMDD')\n\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1756850323.355238, "supported_languages": null}, "macro.sap.bigquery__add_day_to_char_date": {"name": "bigquery__add_day_to_char_date", "resource_type": "macro", "package_name": "sap", "path": "macros/add_day_to_char_date.sql", "original_file_path": "macros/add_day_to_char_date.sql", "unique_id": "macro.sap.bigquery__add_day_to_char_date", "macro_sql": "{% macro bigquery__add_day_to_char_date(date_string) %}\n\n    format_date('%Y%m%d', date_add(parse_date('%Y%m%d', {{ date_string }}), interval 1 day))\n\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1756850323.3554497, "supported_languages": null}, "macro.sap.databricks__add_day_to_char_date": {"name": "databricks__add_day_to_char_date", "resource_type": "macro", "package_name": "sap", "path": "macros/add_day_to_char_date.sql", "original_file_path": "macros/add_day_to_char_date.sql", "unique_id": "macro.sap.databricks__add_day_to_char_date", "macro_sql": "{% macro databricks__add_day_to_char_date(date_string) %}\n\n    date_format(date_add(to_date({{ date_string }}, 'yyyyMMdd'), 1), 'yyyyMMdd')\n\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1756850323.3556614, "supported_languages": null}, "macro.sap.char_yyyymmdd_to_date": {"name": "char_yyyymmdd_to_date", "resource_type": "macro", "package_name": "sap", "path": "macros/char_yyyymmdd_to_date.sql", "original_file_path": "macros/char_yyyymmdd_to_date.sql", "unique_id": "macro.sap.char_yyyymmdd_to_date", "macro_sql": "{% macro char_yyyymmdd_to_date(date_string) -%}\n    {{ adapter.dispatch('char_yyyymmdd_to_date')(date_string) }}\n{%- endmacro %}", "depends_on": {"macros": ["macro.sap.postgres__char_yyyymmdd_to_date"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1756850323.3562977, "supported_languages": null}, "macro.sap.default__char_yyyymmdd_to_date": {"name": "default__char_yyyymmdd_to_date", "resource_type": "macro", "package_name": "sap", "path": "macros/char_yyyymmdd_to_date.sql", "original_file_path": "macros/char_yyyymmdd_to_date.sql", "unique_id": "macro.sap.default__char_yyyymmdd_to_date", "macro_sql": "{% macro default__char_yyyymmdd_to_date(date_string) %}\n    to_date(cast({{ date_string }} as {{ dbt.type_string() }}), 'YYYYMMDD')\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.type_string"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1756850323.356575, "supported_languages": null}, "macro.sap.bigquery__char_yyyymmdd_to_date": {"name": "bigquery__char_yyyymmdd_to_date", "resource_type": "macro", "package_name": "sap", "path": "macros/char_yyyymmdd_to_date.sql", "original_file_path": "macros/char_yyyymmdd_to_date.sql", "unique_id": "macro.sap.bigquery__char_yyyymmdd_to_date", "macro_sql": "{% macro bigquery__char_yyyymmdd_to_date(date_string) %}\n    safe.parse_date('%Y%m%d', cast({{ date_string }} as string))\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1756850323.3567984, "supported_languages": null}, "macro.sap.snowflake__char_yyyymmdd_to_date": {"name": "snowflake__char_yyyymmdd_to_date", "resource_type": "macro", "package_name": "sap", "path": "macros/char_yyyymmdd_to_date.sql", "original_file_path": "macros/char_yyyymmdd_to_date.sql", "unique_id": "macro.sap.snowflake__char_yyyymmdd_to_date", "macro_sql": "{% macro snowflake__char_yyyymmdd_to_date(date_string) %}\n    try_to_date(cast({{ date_string }} as varchar), 'YYYYMMDD')\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1756850323.3570065, "supported_languages": null}, "macro.sap.postgres__char_yyyymmdd_to_date": {"name": "postgres__char_yyyymmdd_to_date", "resource_type": "macro", "package_name": "sap", "path": "macros/char_yyyymmdd_to_date.sql", "original_file_path": "macros/char_yyyymmdd_to_date.sql", "unique_id": "macro.sap.postgres__char_yyyymmdd_to_date", "macro_sql": "{% macro postgres__char_yyyymmdd_to_date(date_string) %}\n    case\n        when {{ date_string }}::text ~ '^[0-9]{8}$'\n            and substring({{ date_string }}::text, 5, 2)::int between 1 and 12\n            and substring({{ date_string }}::text, 7, 2)::int between 1 and 31\n        then to_date({{ date_string }}::text, 'YYYYMMDD')\n        else null\n    end\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1756850323.357335, "supported_languages": null}, "macro.sap.databricks__char_yyyymmdd_to_date": {"name": "databricks__char_yyyymmdd_to_date", "resource_type": "macro", "package_name": "sap", "path": "macros/char_yyyymmdd_to_date.sql", "original_file_path": "macros/char_yyyymmdd_to_date.sql", "unique_id": "macro.sap.databricks__char_yyyymmdd_to_date", "macro_sql": "{% macro databricks__char_yyyymmdd_to_date(date_string) %}\n    to_date(cast({{ date_string }} as string), 'yyyyMMdd')\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1756850323.3575413, "supported_languages": null}, "macro.sap.get_vbup_columns": {"name": "get_vbup_columns", "resource_type": "macro", "package_name": "sap", "path": "macros/get_column_macros/get_vbup_columns.sql", "original_file_path": "macros/get_column_macros/get_vbup_columns.sql", "unique_id": "macro.sap.get_vbup_columns", "macro_sql": "{% macro get_vbup_columns() %}\n\n{% set columns = [\n    {\"name\": \"mandt\", \"datatype\": dbt.type_string()},\n    {\"name\": \"posnr\", \"datatype\": dbt.type_string()},\n    {\"name\": \"vbeln\", \"datatype\": dbt.type_string()},\n    {\"name\": \"uvpak\", \"datatype\": dbt.type_string()},\n    {\"name\": \"uvvlk\", \"datatype\": dbt.type_string()},\n    {\"name\": \"mill_vs_vssta\", \"datatype\": dbt.type_string()},\n    {\"name\": \"pksta\", \"datatype\": dbt.type_string()},\n    {\"name\": \"lssta\", \"datatype\": dbt.type_string()},\n    {\"name\": \"vlstp\", \"datatype\": dbt.type_string()},\n    {\"name\": \"absta\", \"datatype\": dbt.type_string()},\n    {\"name\": \"fksta\", \"datatype\": dbt.type_string()},\n    {\"name\": \"fkivp\", \"datatype\": dbt.type_string()},\n    {\"name\": \"lfgsa\", \"datatype\": dbt.type_string()},\n    {\"name\": \"rrsta\", \"datatype\": dbt.type_string()},\n    {\"name\": \"lfsta\", \"datatype\": dbt.type_string()},\n    {\"name\": \"fksaa\", \"datatype\": dbt.type_string()},\n    {\"name\": \"wbsta\", \"datatype\": dbt.type_string()},\n    {\"name\": \"ltsps\", \"datatype\": dbt.type_string()},\n    {\"name\": \"costa\", \"datatype\": dbt.type_string()},\n    {\"name\": \"fssta\", \"datatype\": dbt.type_string()},\n    {\"name\": \"kosta\", \"datatype\": dbt.type_string()},\n    {\"name\": \"uvpik\", \"datatype\": dbt.type_string()},\n    {\"name\": \"uvfak\", \"datatype\": dbt.type_string()},\n    {\"name\": \"uvall\", \"datatype\": dbt.type_string()},\n    {\"name\": \"rfgsa\", \"datatype\": dbt.type_string()},\n    {\"name\": \"uvprs\", \"datatype\": dbt.type_string()},\n    {\"name\": \"lvsta\", \"datatype\": dbt.type_string()},\n    {\"name\": \"rfsta\", \"datatype\": dbt.type_string()},\n    {\"name\": \"cmppj\", \"datatype\": dbt.type_string()},\n    {\"name\": \"cmppi\", \"datatype\": dbt.type_string()},\n    {\"name\": \"hdall\", \"datatype\": dbt.type_string()},\n    {\"name\": \"besta\", \"datatype\": dbt.type_string()},\n    {\"name\": \"pdsta\", \"datatype\": dbt.type_string()},\n    {\"name\": \"fsh_ar_stat_itm\", \"datatype\": dbt.type_string()},\n    {\"name\": \"manek\", \"datatype\": dbt.type_string()},\n    {\"name\": \"gbsta\", \"datatype\": dbt.type_string()},\n    {\"name\": \"uvwak\", \"datatype\": dbt.type_string()},\n    {\"name\": \"dcsta\", \"datatype\": dbt.type_string()},\n    {\"name\": \"uvp05\", \"datatype\": dbt.type_string()},\n    {\"name\": \"uvp02\", \"datatype\": dbt.type_string()},\n    {\"name\": \"uvp04\", \"datatype\": dbt.type_string()},\n    {\"name\": \"koqua\", \"datatype\": dbt.type_string()},\n    {\"name\": \"uvp01\", \"datatype\": dbt.type_string()},\n    {\"name\": \"uvp03\", \"datatype\": dbt.type_string()},\n    {\"name\": \"_fivetran_deleted\", \"datatype\": \"boolean\"},\n    {\"name\": \"_fivetran_synced\", \"datatype\": dbt.type_timestamp()},\n    {\"name\": \"_fivetran_sap_archived\", \"datatype\": dbt.type_string()}\n] %}\n\n{{ return(columns) }}\n\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.type_string", "macro.dbt.type_timestamp"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1756850323.3658333, "supported_languages": null}, "macro.sap.get_vbuk_columns": {"name": "get_vbuk_columns", "resource_type": "macro", "package_name": "sap", "path": "macros/get_column_macros/get_vbuk_columns.sql", "original_file_path": "macros/get_column_macros/get_vbuk_columns.sql", "unique_id": "macro.sap.get_vbuk_columns", "macro_sql": "{% macro get_vbuk_columns() %}\n\n{% set columns = [\n    {\"name\": \"mandt\", \"datatype\": dbt.type_string()},\n    {\"name\": \"vbeln\", \"datatype\": dbt.type_string()},\n    {\"name\": \"rfstk\", \"datatype\": dbt.type_string()},\n    {\"name\": \"rfgsk\", \"datatype\": dbt.type_string()},\n    {\"name\": \"bestk\", \"datatype\": dbt.type_string()},\n    {\"name\": \"lfstk\", \"datatype\": dbt.type_string()},\n    {\"name\": \"lfgsk\", \"datatype\": dbt.type_string()},\n    {\"name\": \"wbstk\", \"datatype\": dbt.type_string()},\n    {\"name\": \"fkstk\", \"datatype\": dbt.type_string()},\n    {\"name\": \"fksak\", \"datatype\": dbt.type_string()},\n    {\"name\": \"buchk\", \"datatype\": dbt.type_string()},\n    {\"name\": \"abstk\", \"datatype\": dbt.type_string()},\n    {\"name\": \"gbstk\", \"datatype\": dbt.type_string()},\n    {\"name\": \"kostk\", \"datatype\": dbt.type_string()},\n    {\"name\": \"lvstk\", \"datatype\": dbt.type_string()},\n    {\"name\": \"uvals\", \"datatype\": dbt.type_string()},\n    {\"name\": \"uvvls\", \"datatype\": dbt.type_string()},\n    {\"name\": \"uvfas\", \"datatype\": dbt.type_string()},\n    {\"name\": \"uvall\", \"datatype\": dbt.type_string()},\n    {\"name\": \"uvvlk\", \"datatype\": dbt.type_string()},\n    {\"name\": \"uvfak\", \"datatype\": dbt.type_string()},\n    {\"name\": \"uvprs\", \"datatype\": dbt.type_string()},\n    {\"name\": \"vbtyp\", \"datatype\": dbt.type_string()},\n    {\"name\": \"vbobj\", \"datatype\": dbt.type_string()},\n    {\"name\": \"aedat\", \"datatype\": dbt.type_string()},\n    {\"name\": \"fkivk\", \"datatype\": dbt.type_string()},\n    {\"name\": \"relik\", \"datatype\": dbt.type_string()},\n    {\"name\": \"uvk01\", \"datatype\": dbt.type_string()},\n    {\"name\": \"uvk02\", \"datatype\": dbt.type_string()},\n    {\"name\": \"uvk03\", \"datatype\": dbt.type_string()},\n    {\"name\": \"uvk04\", \"datatype\": dbt.type_string()},\n    {\"name\": \"uvk05\", \"datatype\": dbt.type_string()},\n    {\"name\": \"uvs01\", \"datatype\": dbt.type_string()},\n    {\"name\": \"uvs02\", \"datatype\": dbt.type_string()},\n    {\"name\": \"uvs03\", \"datatype\": dbt.type_string()},\n    {\"name\": \"uvs04\", \"datatype\": dbt.type_string()},\n    {\"name\": \"uvs05\", \"datatype\": dbt.type_string()},\n    {\"name\": \"pkstk\", \"datatype\": dbt.type_string()},\n    {\"name\": \"cmpsa\", \"datatype\": dbt.type_string()},\n    {\"name\": \"cmpsb\", \"datatype\": dbt.type_string()},\n    {\"name\": \"cmpsc\", \"datatype\": dbt.type_string()},\n    {\"name\": \"cmpsd\", \"datatype\": dbt.type_string()},\n    {\"name\": \"cmpse\", \"datatype\": dbt.type_string()},\n    {\"name\": \"cmpsf\", \"datatype\": dbt.type_string()},\n    {\"name\": \"cmpsg\", \"datatype\": dbt.type_string()},\n    {\"name\": \"cmpsh\", \"datatype\": dbt.type_string()},\n    {\"name\": \"cmpsi\", \"datatype\": dbt.type_string()},\n    {\"name\": \"cmpsj\", \"datatype\": dbt.type_string()},\n    {\"name\": \"cmpsk\", \"datatype\": dbt.type_string()},\n    {\"name\": \"cmpsl\", \"datatype\": dbt.type_string()},\n    {\"name\": \"cmps0\", \"datatype\": dbt.type_string()},\n    {\"name\": \"cmps1\", \"datatype\": dbt.type_string()},\n    {\"name\": \"cmps2\", \"datatype\": dbt.type_string()},\n    {\"name\": \"cmgst\", \"datatype\": dbt.type_string()},\n    {\"name\": \"trsta\", \"datatype\": dbt.type_string()},\n    {\"name\": \"koquk\", \"datatype\": dbt.type_string()},\n    {\"name\": \"costa\", \"datatype\": dbt.type_string()},\n    {\"name\": \"saprl\", \"datatype\": dbt.type_string()},\n    {\"name\": \"uvpas\", \"datatype\": dbt.type_string()},\n    {\"name\": \"uvpis\", \"datatype\": dbt.type_string()},\n    {\"name\": \"uvwas\", \"datatype\": dbt.type_string()},\n    {\"name\": \"uvpak\", \"datatype\": dbt.type_string()},\n    {\"name\": \"uvpik\", \"datatype\": dbt.type_string()},\n    {\"name\": \"uvwak\", \"datatype\": dbt.type_string()},\n    {\"name\": \"uvgek\", \"datatype\": dbt.type_string()},\n    {\"name\": \"cmpsm\", \"datatype\": dbt.type_string()},\n    {\"name\": \"dcstk\", \"datatype\": dbt.type_string()},\n    {\"name\": \"vestk\", \"datatype\": dbt.type_string()},\n    {\"name\": \"vlstk\", \"datatype\": dbt.type_string()},\n    {\"name\": \"rrsta\", \"datatype\": dbt.type_string()},\n    {\"name\": \"block\", \"datatype\": dbt.type_string()},\n    {\"name\": \"fsstk\", \"datatype\": dbt.type_string()},\n    {\"name\": \"lsstk\", \"datatype\": dbt.type_string()},\n    {\"name\": \"spstg\", \"datatype\": dbt.type_string()},\n    {\"name\": \"pdstk\", \"datatype\": dbt.type_string()},\n    {\"name\": \"fmstk\", \"datatype\": dbt.type_string()},\n    {\"name\": \"manek\", \"datatype\": dbt.type_string()},\n    {\"name\": \"spe_tmpid\", \"datatype\": dbt.type_string()},\n    {\"name\": \"hdall\", \"datatype\": dbt.type_string()},\n    {\"name\": \"hdals\", \"datatype\": dbt.type_string()},\n    {\"name\": \"cmps_cm\", \"datatype\": dbt.type_string()},\n    {\"name\": \"cmps_te\", \"datatype\": dbt.type_string()},\n    {\"name\": \"vbtyp_ext\", \"datatype\": dbt.type_string()},\n    {\"name\": \"fsh_ar_stat_hdr\", \"datatype\": dbt.type_string()},\n    {\"name\": \"hvr_is_deleted\", \"datatype\": dbt.type_int()},\n    {\"name\": \"hvr_change_time\", \"datatype\": dbt.type_string()},\n    {\"name\": \"_fivetran_deleted\", \"datatype\": \"boolean\"},\n    {\"name\": \"_fivetran_synced\", \"datatype\": dbt.type_timestamp()},\n    {\"name\": \"_fivetran_rowid\", \"datatype\": dbt.type_string()}\n] %}\n\n{{ return(columns) }}\n\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.type_string", "macro.dbt.type_int", "macro.dbt.type_timestamp"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1756850323.3809857, "supported_languages": null}, "macro.sap.get_pa0008_columns": {"name": "get_pa0008_columns", "resource_type": "macro", "package_name": "sap", "path": "macros/get_column_macros/get_pa0008_columns.sql", "original_file_path": "macros/get_column_macros/get_pa0008_columns.sql", "unique_id": "macro.sap.get_pa0008_columns", "macro_sql": "{% macro get_pa0008_columns() %}\n\n{% set columns = [\n    {\"name\": \"_fivetran_deleted\", \"datatype\": \"boolean\"},\n    {\"name\": \"_fivetran_rowid\", \"datatype\": dbt.type_numeric()},\n    {\"name\": \"_fivetran_synced\", \"datatype\": dbt.type_timestamp()},\n    {\"name\": \"aedtm\", \"datatype\": dbt.type_string()},\n    {\"name\": \"ancur\", \"datatype\": dbt.type_string()},\n    {\"name\": \"ansal\", \"datatype\": dbt.type_numeric()},\n    {\"name\": \"anz01\", \"datatype\": dbt.type_numeric()},\n    {\"name\": \"anz02\", \"datatype\": dbt.type_numeric()},\n    {\"name\": \"anz03\", \"datatype\": dbt.type_numeric()},\n    {\"name\": \"anz04\", \"datatype\": dbt.type_numeric()},\n    {\"name\": \"anz05\", \"datatype\": dbt.type_numeric()},\n    {\"name\": \"anz06\", \"datatype\": dbt.type_numeric()},\n    {\"name\": \"anz07\", \"datatype\": dbt.type_numeric()},\n    {\"name\": \"anz08\", \"datatype\": dbt.type_numeric()},\n    {\"name\": \"anz09\", \"datatype\": dbt.type_numeric()},\n    {\"name\": \"anz10\", \"datatype\": dbt.type_numeric()},\n    {\"name\": \"anz11\", \"datatype\": dbt.type_numeric()},\n    {\"name\": \"anz12\", \"datatype\": dbt.type_numeric()},\n    {\"name\": \"anz13\", \"datatype\": dbt.type_numeric()},\n    {\"name\": \"anz14\", \"datatype\": dbt.type_numeric()},\n    {\"name\": \"anz15\", \"datatype\": dbt.type_numeric()},\n    {\"name\": \"anz16\", \"datatype\": dbt.type_numeric()},\n    {\"name\": \"anz17\", \"datatype\": dbt.type_numeric()},\n    {\"name\": \"anz18\", \"datatype\": dbt.type_numeric()},\n    {\"name\": \"anz19\", \"datatype\": dbt.type_numeric()},\n    {\"name\": \"anz20\", \"datatype\": dbt.type_numeric()},\n    {\"name\": \"anz21\", \"datatype\": dbt.type_numeric()},\n    {\"name\": \"anz22\", \"datatype\": dbt.type_numeric()},\n    {\"name\": \"anz23\", \"datatype\": dbt.type_numeric()},\n    {\"name\": \"anz24\", \"datatype\": dbt.type_numeric()},\n    {\"name\": \"anz25\", \"datatype\": dbt.type_numeric()},\n    {\"name\": \"anz26\", \"datatype\": dbt.type_numeric()},\n    {\"name\": \"anz27\", \"datatype\": dbt.type_numeric()},\n    {\"name\": \"anz28\", \"datatype\": dbt.type_numeric()},\n    {\"name\": \"anz29\", \"datatype\": dbt.type_numeric()},\n    {\"name\": \"anz30\", \"datatype\": dbt.type_numeric()},\n    {\"name\": \"anz31\", \"datatype\": dbt.type_numeric()},\n    {\"name\": \"anz32\", \"datatype\": dbt.type_numeric()},\n    {\"name\": \"anz33\", \"datatype\": dbt.type_numeric()},\n    {\"name\": \"anz34\", \"datatype\": dbt.type_numeric()},\n    {\"name\": \"anz35\", \"datatype\": dbt.type_numeric()},\n    {\"name\": \"anz36\", \"datatype\": dbt.type_numeric()},\n    {\"name\": \"anz37\", \"datatype\": dbt.type_numeric()},\n    {\"name\": \"anz38\", \"datatype\": dbt.type_numeric()},\n    {\"name\": \"anz39\", \"datatype\": dbt.type_numeric()},\n    {\"name\": \"anz40\", \"datatype\": dbt.type_numeric()},\n    {\"name\": \"begda\", \"datatype\": dbt.type_string()},\n    {\"name\": \"bet01\", \"datatype\": dbt.type_numeric()},\n    {\"name\": \"bet02\", \"datatype\": dbt.type_numeric()},\n    {\"name\": \"bet03\", \"datatype\": dbt.type_numeric()},\n    {\"name\": \"bet04\", \"datatype\": dbt.type_numeric()},\n    {\"name\": \"bet05\", \"datatype\": dbt.type_numeric()},\n    {\"name\": \"bet06\", \"datatype\": dbt.type_numeric()},\n    {\"name\": \"bet07\", \"datatype\": dbt.type_numeric()},\n    {\"name\": \"bet08\", \"datatype\": dbt.type_numeric()},\n    {\"name\": \"bet09\", \"datatype\": dbt.type_numeric()},\n    {\"name\": \"bet10\", \"datatype\": dbt.type_numeric()},\n    {\"name\": \"bet11\", \"datatype\": dbt.type_numeric()},\n    {\"name\": \"bet12\", \"datatype\": dbt.type_numeric()},\n    {\"name\": \"bet13\", \"datatype\": dbt.type_numeric()},\n    {\"name\": \"bet14\", \"datatype\": dbt.type_numeric()},\n    {\"name\": \"bet15\", \"datatype\": dbt.type_numeric()},\n    {\"name\": \"bet16\", \"datatype\": dbt.type_numeric()},\n    {\"name\": \"bet17\", \"datatype\": dbt.type_numeric()},\n    {\"name\": \"bet18\", \"datatype\": dbt.type_numeric()},\n    {\"name\": \"bet19\", \"datatype\": dbt.type_numeric()},\n    {\"name\": \"bet20\", \"datatype\": dbt.type_numeric()},\n    {\"name\": \"bet21\", \"datatype\": dbt.type_numeric()},\n    {\"name\": \"bet22\", \"datatype\": dbt.type_numeric()},\n    {\"name\": \"bet23\", \"datatype\": dbt.type_numeric()},\n    {\"name\": \"bet24\", \"datatype\": dbt.type_numeric()},\n    {\"name\": \"bet25\", \"datatype\": dbt.type_numeric()},\n    {\"name\": \"bet26\", \"datatype\": dbt.type_numeric()},\n    {\"name\": \"bet27\", \"datatype\": dbt.type_numeric()},\n    {\"name\": \"bet28\", \"datatype\": dbt.type_numeric()},\n    {\"name\": \"bet29\", \"datatype\": dbt.type_numeric()},\n    {\"name\": \"bet30\", \"datatype\": dbt.type_numeric()},\n    {\"name\": \"bet31\", \"datatype\": dbt.type_numeric()},\n    {\"name\": \"bet32\", \"datatype\": dbt.type_numeric()},\n    {\"name\": \"bet33\", \"datatype\": dbt.type_numeric()},\n    {\"name\": \"bet34\", \"datatype\": dbt.type_numeric()},\n    {\"name\": \"bet35\", \"datatype\": dbt.type_numeric()},\n    {\"name\": \"bet36\", \"datatype\": dbt.type_numeric()},\n    {\"name\": \"bet37\", \"datatype\": dbt.type_numeric()},\n    {\"name\": \"bet38\", \"datatype\": dbt.type_numeric()},\n    {\"name\": \"bet39\", \"datatype\": dbt.type_numeric()},\n    {\"name\": \"bet40\", \"datatype\": dbt.type_numeric()},\n    {\"name\": \"bsgrd\", \"datatype\": dbt.type_numeric()},\n    {\"name\": \"cpind\", \"datatype\": dbt.type_string()},\n    {\"name\": \"divgv\", \"datatype\": dbt.type_numeric()},\n    {\"name\": \"ein01\", \"datatype\": dbt.type_string()},\n    {\"name\": \"ein02\", \"datatype\": dbt.type_string()},\n    {\"name\": \"ein03\", \"datatype\": dbt.type_string()},\n    {\"name\": \"ein04\", \"datatype\": dbt.type_string()},\n    {\"name\": \"ein05\", \"datatype\": dbt.type_string()},\n    {\"name\": \"ein06\", \"datatype\": dbt.type_string()},\n    {\"name\": \"ein07\", \"datatype\": dbt.type_string()},\n    {\"name\": \"ein08\", \"datatype\": dbt.type_string()},\n    {\"name\": \"ein09\", \"datatype\": dbt.type_string()},\n    {\"name\": \"ein10\", \"datatype\": dbt.type_string()},\n    {\"name\": \"ein11\", \"datatype\": dbt.type_string()},\n    {\"name\": \"ein12\", \"datatype\": dbt.type_string()},\n    {\"name\": \"ein13\", \"datatype\": dbt.type_string()},\n    {\"name\": \"ein14\", \"datatype\": dbt.type_string()},\n    {\"name\": \"ein15\", \"datatype\": dbt.type_string()},\n    {\"name\": \"ein16\", \"datatype\": dbt.type_string()},\n    {\"name\": \"ein17\", \"datatype\": dbt.type_string()},\n    {\"name\": \"ein18\", \"datatype\": dbt.type_string()},\n    {\"name\": \"ein19\", \"datatype\": dbt.type_string()},\n    {\"name\": \"ein20\", \"datatype\": dbt.type_string()},\n    {\"name\": \"ein21\", \"datatype\": dbt.type_string()},\n    {\"name\": \"ein22\", \"datatype\": dbt.type_string()},\n    {\"name\": \"ein23\", \"datatype\": dbt.type_string()},\n    {\"name\": \"ein24\", \"datatype\": dbt.type_string()},\n    {\"name\": \"ein25\", \"datatype\": dbt.type_string()},\n    {\"name\": \"ein26\", \"datatype\": dbt.type_string()},\n    {\"name\": \"ein27\", \"datatype\": dbt.type_string()},\n    {\"name\": \"ein28\", \"datatype\": dbt.type_string()},\n    {\"name\": \"ein29\", \"datatype\": dbt.type_string()},\n    {\"name\": \"ein30\", \"datatype\": dbt.type_string()},\n    {\"name\": \"ein31\", \"datatype\": dbt.type_string()},\n    {\"name\": \"ein32\", \"datatype\": dbt.type_string()},\n    {\"name\": \"ein33\", \"datatype\": dbt.type_string()},\n    {\"name\": \"ein34\", \"datatype\": dbt.type_string()},\n    {\"name\": \"ein35\", \"datatype\": dbt.type_string()},\n    {\"name\": \"ein36\", \"datatype\": dbt.type_string()},\n    {\"name\": \"ein37\", \"datatype\": dbt.type_string()},\n    {\"name\": \"ein38\", \"datatype\": dbt.type_string()},\n    {\"name\": \"ein39\", \"datatype\": dbt.type_string()},\n    {\"name\": \"ein40\", \"datatype\": dbt.type_string()},\n    {\"name\": \"endda\", \"datatype\": dbt.type_string()},\n    {\"name\": \"falgk\", \"datatype\": dbt.type_string()},\n    {\"name\": \"falgr\", \"datatype\": dbt.type_string()},\n    {\"name\": \"flag1\", \"datatype\": dbt.type_string()},\n    {\"name\": \"flag2\", \"datatype\": dbt.type_string()},\n    {\"name\": \"flag3\", \"datatype\": dbt.type_string()},\n    {\"name\": \"flag4\", \"datatype\": dbt.type_string()},\n    {\"name\": \"flaga\", \"datatype\": dbt.type_string()},\n    {\"name\": \"grpvl\", \"datatype\": dbt.type_string()},\n    {\"name\": \"histo\", \"datatype\": dbt.type_string()},\n    {\"name\": \"ind01\", \"datatype\": dbt.type_string()},\n    {\"name\": \"ind02\", \"datatype\": dbt.type_string()},\n    {\"name\": \"ind03\", \"datatype\": dbt.type_string()},\n    {\"name\": \"ind04\", \"datatype\": dbt.type_string()},\n    {\"name\": \"ind05\", \"datatype\": dbt.type_string()},\n    {\"name\": \"ind06\", \"datatype\": dbt.type_string()},\n    {\"name\": \"ind07\", \"datatype\": dbt.type_string()},\n    {\"name\": \"ind08\", \"datatype\": dbt.type_string()},\n    {\"name\": \"ind09\", \"datatype\": dbt.type_string()},\n    {\"name\": \"ind10\", \"datatype\": dbt.type_string()},\n    {\"name\": \"ind11\", \"datatype\": dbt.type_string()},\n    {\"name\": \"ind12\", \"datatype\": dbt.type_string()},\n    {\"name\": \"ind13\", \"datatype\": dbt.type_string()},\n    {\"name\": \"ind14\", \"datatype\": dbt.type_string()},\n    {\"name\": \"ind15\", \"datatype\": dbt.type_string()},\n    {\"name\": \"ind16\", \"datatype\": dbt.type_string()},\n    {\"name\": \"ind17\", \"datatype\": dbt.type_string()},\n    {\"name\": \"ind18\", \"datatype\": dbt.type_string()},\n    {\"name\": \"ind19\", \"datatype\": dbt.type_string()},\n    {\"name\": \"ind20\", \"datatype\": dbt.type_string()},\n    {\"name\": \"ind21\", \"datatype\": dbt.type_string()},\n    {\"name\": \"ind22\", \"datatype\": dbt.type_string()},\n    {\"name\": \"ind23\", \"datatype\": dbt.type_string()},\n    {\"name\": \"ind24\", \"datatype\": dbt.type_string()},\n    {\"name\": \"ind25\", \"datatype\": dbt.type_string()},\n    {\"name\": \"ind26\", \"datatype\": dbt.type_string()},\n    {\"name\": \"ind27\", \"datatype\": dbt.type_string()},\n    {\"name\": \"ind28\", \"datatype\": dbt.type_string()},\n    {\"name\": \"ind29\", \"datatype\": dbt.type_string()},\n    {\"name\": \"ind30\", \"datatype\": dbt.type_string()},\n    {\"name\": \"ind31\", \"datatype\": dbt.type_string()},\n    {\"name\": \"ind32\", \"datatype\": dbt.type_string()},\n    {\"name\": \"ind33\", \"datatype\": dbt.type_string()},\n    {\"name\": \"ind34\", \"datatype\": dbt.type_string()},\n    {\"name\": \"ind35\", \"datatype\": dbt.type_string()},\n    {\"name\": \"ind36\", \"datatype\": dbt.type_string()},\n    {\"name\": \"ind37\", \"datatype\": dbt.type_string()},\n    {\"name\": \"ind38\", \"datatype\": dbt.type_string()},\n    {\"name\": \"ind39\", \"datatype\": dbt.type_string()},\n    {\"name\": \"ind40\", \"datatype\": dbt.type_string()},\n    {\"name\": \"itbld\", \"datatype\": dbt.type_string()},\n    {\"name\": \"itxex\", \"datatype\": dbt.type_string()},\n    {\"name\": \"lga01\", \"datatype\": dbt.type_string()},\n    {\"name\": \"lga02\", \"datatype\": dbt.type_string()},\n    {\"name\": \"lga03\", \"datatype\": dbt.type_string()},\n    {\"name\": \"lga04\", \"datatype\": dbt.type_string()},\n    {\"name\": \"lga05\", \"datatype\": dbt.type_string()},\n    {\"name\": \"lga06\", \"datatype\": dbt.type_string()},\n    {\"name\": \"lga07\", \"datatype\": dbt.type_string()},\n    {\"name\": \"lga08\", \"datatype\": dbt.type_string()},\n    {\"name\": \"lga09\", \"datatype\": dbt.type_string()},\n    {\"name\": \"lga10\", \"datatype\": dbt.type_string()},\n    {\"name\": \"lga11\", \"datatype\": dbt.type_string()},\n    {\"name\": \"lga12\", \"datatype\": dbt.type_string()},\n    {\"name\": \"lga13\", \"datatype\": dbt.type_string()},\n    {\"name\": \"lga14\", \"datatype\": dbt.type_string()},\n    {\"name\": \"lga15\", \"datatype\": dbt.type_string()},\n    {\"name\": \"lga16\", \"datatype\": dbt.type_string()},\n    {\"name\": \"lga17\", \"datatype\": dbt.type_string()},\n    {\"name\": \"lga18\", \"datatype\": dbt.type_string()},\n    {\"name\": \"lga19\", \"datatype\": dbt.type_string()},\n    {\"name\": \"lga20\", \"datatype\": dbt.type_string()},\n    {\"name\": \"lga21\", \"datatype\": dbt.type_string()},\n    {\"name\": \"lga22\", \"datatype\": dbt.type_string()},\n    {\"name\": \"lga23\", \"datatype\": dbt.type_string()},\n    {\"name\": \"lga24\", \"datatype\": dbt.type_string()},\n    {\"name\": \"lga25\", \"datatype\": dbt.type_string()},\n    {\"name\": \"lga26\", \"datatype\": dbt.type_string()},\n    {\"name\": \"lga27\", \"datatype\": dbt.type_string()},\n    {\"name\": \"lga28\", \"datatype\": dbt.type_string()},\n    {\"name\": \"lga29\", \"datatype\": dbt.type_string()},\n    {\"name\": \"lga30\", \"datatype\": dbt.type_string()},\n    {\"name\": \"lga31\", \"datatype\": dbt.type_string()},\n    {\"name\": \"lga32\", \"datatype\": dbt.type_string()},\n    {\"name\": \"lga33\", \"datatype\": dbt.type_string()},\n    {\"name\": \"lga34\", \"datatype\": dbt.type_string()},\n    {\"name\": \"lga35\", \"datatype\": dbt.type_string()},\n    {\"name\": \"lga36\", \"datatype\": dbt.type_string()},\n    {\"name\": \"lga37\", \"datatype\": dbt.type_string()},\n    {\"name\": \"lga38\", \"datatype\": dbt.type_string()},\n    {\"name\": \"lga39\", \"datatype\": dbt.type_string()},\n    {\"name\": \"lga40\", \"datatype\": dbt.type_string()},\n    {\"name\": \"mandt\", \"datatype\": dbt.type_string()},\n    {\"name\": \"objps\", \"datatype\": dbt.type_string()},\n    {\"name\": \"opk01\", \"datatype\": dbt.type_string()},\n    {\"name\": \"opk02\", \"datatype\": dbt.type_string()},\n    {\"name\": \"opk03\", \"datatype\": dbt.type_string()},\n    {\"name\": \"opk04\", \"datatype\": dbt.type_string()},\n    {\"name\": \"opk05\", \"datatype\": dbt.type_string()},\n    {\"name\": \"opk06\", \"datatype\": dbt.type_string()},\n    {\"name\": \"opk07\", \"datatype\": dbt.type_string()},\n    {\"name\": \"opk08\", \"datatype\": dbt.type_string()},\n    {\"name\": \"opk09\", \"datatype\": dbt.type_string()},\n    {\"name\": \"opk10\", \"datatype\": dbt.type_string()},\n    {\"name\": \"opk11\", \"datatype\": dbt.type_string()},\n    {\"name\": \"opk12\", \"datatype\": dbt.type_string()},\n    {\"name\": \"opk13\", \"datatype\": dbt.type_string()},\n    {\"name\": \"opk14\", \"datatype\": dbt.type_string()},\n    {\"name\": \"opk15\", \"datatype\": dbt.type_string()},\n    {\"name\": \"opk16\", \"datatype\": dbt.type_string()},\n    {\"name\": \"opk17\", \"datatype\": dbt.type_string()},\n    {\"name\": \"opk18\", \"datatype\": dbt.type_string()},\n    {\"name\": \"opk19\", \"datatype\": dbt.type_string()},\n    {\"name\": \"opk20\", \"datatype\": dbt.type_string()},\n    {\"name\": \"opk21\", \"datatype\": dbt.type_string()},\n    {\"name\": \"opk22\", \"datatype\": dbt.type_string()},\n    {\"name\": \"opk23\", \"datatype\": dbt.type_string()},\n    {\"name\": \"opk24\", \"datatype\": dbt.type_string()},\n    {\"name\": \"opk25\", \"datatype\": dbt.type_string()},\n    {\"name\": \"opk26\", \"datatype\": dbt.type_string()},\n    {\"name\": \"opk27\", \"datatype\": dbt.type_string()},\n    {\"name\": \"opk28\", \"datatype\": dbt.type_string()},\n    {\"name\": \"opk29\", \"datatype\": dbt.type_string()},\n    {\"name\": \"opk30\", \"datatype\": dbt.type_string()},\n    {\"name\": \"opk31\", \"datatype\": dbt.type_string()},\n    {\"name\": \"opk32\", \"datatype\": dbt.type_string()},\n    {\"name\": \"opk33\", \"datatype\": dbt.type_string()},\n    {\"name\": \"opk34\", \"datatype\": dbt.type_string()},\n    {\"name\": \"opk35\", \"datatype\": dbt.type_string()},\n    {\"name\": \"opk36\", \"datatype\": dbt.type_string()},\n    {\"name\": \"opk37\", \"datatype\": dbt.type_string()},\n    {\"name\": \"opk38\", \"datatype\": dbt.type_string()},\n    {\"name\": \"opk39\", \"datatype\": dbt.type_string()},\n    {\"name\": \"opk40\", \"datatype\": dbt.type_string()},\n    {\"name\": \"ordex\", \"datatype\": dbt.type_string()},\n    {\"name\": \"orzst\", \"datatype\": dbt.type_string()},\n    {\"name\": \"partn\", \"datatype\": dbt.type_string()},\n    {\"name\": \"pernr\", \"datatype\": dbt.type_string()},\n    {\"name\": \"preas\", \"datatype\": dbt.type_string()},\n    {\"name\": \"refex\", \"datatype\": dbt.type_string()},\n    {\"name\": \"rese1\", \"datatype\": dbt.type_string()},\n    {\"name\": \"rese2\", \"datatype\": dbt.type_string()},\n    {\"name\": \"seqnr\", \"datatype\": dbt.type_string()},\n    {\"name\": \"sprps\", \"datatype\": dbt.type_string()},\n    {\"name\": \"stvor\", \"datatype\": dbt.type_string()},\n    {\"name\": \"subty\", \"datatype\": dbt.type_string()},\n    {\"name\": \"trfar\", \"datatype\": dbt.type_string()},\n    {\"name\": \"trfgb\", \"datatype\": dbt.type_string()},\n    {\"name\": \"trfgr\", \"datatype\": dbt.type_string()},\n    {\"name\": \"trfst\", \"datatype\": dbt.type_string()},\n    {\"name\": \"uname\", \"datatype\": dbt.type_string()},\n    {\"name\": \"vglgb\", \"datatype\": dbt.type_string()},\n    {\"name\": \"vglgr\", \"datatype\": dbt.type_string()},\n    {\"name\": \"vglst\", \"datatype\": dbt.type_string()},\n    {\"name\": \"vglsv\", \"datatype\": dbt.type_string()},\n    {\"name\": \"vglta\", \"datatype\": dbt.type_string()},\n    {\"name\": \"waers\", \"datatype\": dbt.type_string()}\n] %}\n\n{{ return(columns) }}\n\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.type_numeric", "macro.dbt.type_timestamp", "macro.dbt.type_string"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1756850323.4300518, "supported_languages": null}, "macro.sap.get_faglflext_columns": {"name": "get_faglflext_columns", "resource_type": "macro", "package_name": "sap", "path": "macros/get_column_macros/get_faglflext_columns.sql", "original_file_path": "macros/get_column_macros/get_faglflext_columns.sql", "unique_id": "macro.sap.get_faglflext_columns", "macro_sql": "{% macro get_faglflext_columns() %}\n\n{% set columns = [\n    {\"name\": \"_fivetran_deleted\", \"datatype\": \"boolean\"},\n    {\"name\": \"_fivetran_rowid\", \"datatype\": dbt.type_numeric()},\n    {\"name\": \"_fivetran_synced\", \"datatype\": dbt.type_timestamp()},\n    {\"name\": \"activ\", \"datatype\": dbt.type_string()},\n    {\"name\": \"awtyp\", \"datatype\": dbt.type_string()},\n    {\"name\": \"cost_elem\", \"datatype\": dbt.type_string()},\n    {\"name\": \"drcrk\", \"datatype\": dbt.type_string()},\n    {\"name\": \"hsl01\", \"datatype\": dbt.type_numeric()},\n    {\"name\": \"hsl02\", \"datatype\": dbt.type_numeric()},\n    {\"name\": \"hsl03\", \"datatype\": dbt.type_numeric()},\n    {\"name\": \"hsl04\", \"datatype\": dbt.type_numeric()},\n    {\"name\": \"hsl05\", \"datatype\": dbt.type_numeric()},\n    {\"name\": \"hsl06\", \"datatype\": dbt.type_numeric()},\n    {\"name\": \"hsl07\", \"datatype\": dbt.type_numeric()},\n    {\"name\": \"hsl08\", \"datatype\": dbt.type_numeric()},\n    {\"name\": \"hsl09\", \"datatype\": dbt.type_numeric()},\n    {\"name\": \"hsl10\", \"datatype\": dbt.type_numeric()},\n    {\"name\": \"hsl11\", \"datatype\": dbt.type_numeric()},\n    {\"name\": \"hsl12\", \"datatype\": dbt.type_numeric()},\n    {\"name\": \"hsl13\", \"datatype\": dbt.type_numeric()},\n    {\"name\": \"hsl14\", \"datatype\": dbt.type_numeric()},\n    {\"name\": \"hsl15\", \"datatype\": dbt.type_numeric()},\n    {\"name\": \"hsl16\", \"datatype\": dbt.type_numeric()},\n    {\"name\": \"hslvt\", \"datatype\": dbt.type_numeric()},\n    {\"name\": \"kokrs\", \"datatype\": dbt.type_string()},\n    {\"name\": \"ksl01\", \"datatype\": dbt.type_numeric()},\n    {\"name\": \"ksl02\", \"datatype\": dbt.type_numeric()},\n    {\"name\": \"ksl03\", \"datatype\": dbt.type_numeric()},\n    {\"name\": \"ksl04\", \"datatype\": dbt.type_numeric()},\n    {\"name\": \"ksl05\", \"datatype\": dbt.type_numeric()},\n    {\"name\": \"ksl06\", \"datatype\": dbt.type_numeric()},\n    {\"name\": \"ksl07\", \"datatype\": dbt.type_numeric()},\n    {\"name\": \"ksl08\", \"datatype\": dbt.type_numeric()},\n    {\"name\": \"ksl09\", \"datatype\": dbt.type_numeric()},\n    {\"name\": \"ksl10\", \"datatype\": dbt.type_numeric()},\n    {\"name\": \"ksl11\", \"datatype\": dbt.type_numeric()},\n    {\"name\": \"ksl12\", \"datatype\": dbt.type_numeric()},\n    {\"name\": \"ksl13\", \"datatype\": dbt.type_numeric()},\n    {\"name\": \"ksl14\", \"datatype\": dbt.type_numeric()},\n    {\"name\": \"ksl15\", \"datatype\": dbt.type_numeric()},\n    {\"name\": \"ksl16\", \"datatype\": dbt.type_numeric()},\n    {\"name\": \"kslvt\", \"datatype\": dbt.type_numeric()},\n    {\"name\": \"logsys\", \"datatype\": dbt.type_string()},\n    {\"name\": \"msl01\", \"datatype\": dbt.type_numeric()},\n    {\"name\": \"msl02\", \"datatype\": dbt.type_numeric()},\n    {\"name\": \"msl03\", \"datatype\": dbt.type_numeric()},\n    {\"name\": \"msl04\", \"datatype\": dbt.type_numeric()},\n    {\"name\": \"msl05\", \"datatype\": dbt.type_numeric()},\n    {\"name\": \"msl06\", \"datatype\": dbt.type_numeric()},\n    {\"name\": \"msl07\", \"datatype\": dbt.type_numeric()},\n    {\"name\": \"msl08\", \"datatype\": dbt.type_numeric()},\n    {\"name\": \"msl09\", \"datatype\": dbt.type_numeric()},\n    {\"name\": \"msl10\", \"datatype\": dbt.type_numeric()},\n    {\"name\": \"msl11\", \"datatype\": dbt.type_numeric()},\n    {\"name\": \"msl12\", \"datatype\": dbt.type_numeric()},\n    {\"name\": \"msl13\", \"datatype\": dbt.type_numeric()},\n    {\"name\": \"msl14\", \"datatype\": dbt.type_numeric()},\n    {\"name\": \"msl15\", \"datatype\": dbt.type_numeric()},\n    {\"name\": \"msl16\", \"datatype\": dbt.type_numeric()},\n    {\"name\": \"mslvt\", \"datatype\": dbt.type_numeric()},\n    {\"name\": \"objnr00\", \"datatype\": dbt.type_numeric()},\n    {\"name\": \"objnr01\", \"datatype\": dbt.type_numeric()},\n    {\"name\": \"objnr02\", \"datatype\": dbt.type_numeric()},\n    {\"name\": \"objnr03\", \"datatype\": dbt.type_numeric()},\n    {\"name\": \"objnr04\", \"datatype\": dbt.type_numeric()},\n    {\"name\": \"objnr05\", \"datatype\": dbt.type_numeric()},\n    {\"name\": \"objnr06\", \"datatype\": dbt.type_numeric()},\n    {\"name\": \"objnr07\", \"datatype\": dbt.type_numeric()},\n    {\"name\": \"objnr08\", \"datatype\": dbt.type_numeric()},\n    {\"name\": \"osl01\", \"datatype\": dbt.type_numeric()},\n    {\"name\": \"osl02\", \"datatype\": dbt.type_numeric()},\n    {\"name\": \"osl03\", \"datatype\": dbt.type_numeric()},\n    {\"name\": \"osl04\", \"datatype\": dbt.type_numeric()},\n    {\"name\": \"osl05\", \"datatype\": dbt.type_numeric()},\n    {\"name\": \"osl06\", \"datatype\": dbt.type_numeric()},\n    {\"name\": \"osl07\", \"datatype\": dbt.type_numeric()},\n    {\"name\": \"osl08\", \"datatype\": dbt.type_numeric()},\n    {\"name\": \"osl09\", \"datatype\": dbt.type_numeric()},\n    {\"name\": \"osl10\", \"datatype\": dbt.type_numeric()},\n    {\"name\": \"osl11\", \"datatype\": dbt.type_numeric()},\n    {\"name\": \"osl12\", \"datatype\": dbt.type_numeric()},\n    {\"name\": \"osl13\", \"datatype\": dbt.type_numeric()},\n    {\"name\": \"osl14\", \"datatype\": dbt.type_numeric()},\n    {\"name\": \"osl15\", \"datatype\": dbt.type_numeric()},\n    {\"name\": \"osl16\", \"datatype\": dbt.type_numeric()},\n    {\"name\": \"oslvt\", \"datatype\": dbt.type_numeric()},\n    {\"name\": \"pprctr\", \"datatype\": dbt.type_string()},\n    {\"name\": \"prctr\", \"datatype\": dbt.type_string()},\n    {\"name\": \"psegment\", \"datatype\": dbt.type_string()},\n    {\"name\": \"racct\", \"datatype\": dbt.type_string()},\n    {\"name\": \"rassc\", \"datatype\": dbt.type_string()},\n    {\"name\": \"rbukrs\", \"datatype\": dbt.type_string()},\n    {\"name\": \"rbusa\", \"datatype\": dbt.type_string()},\n    {\"name\": \"rclnt\", \"datatype\": dbt.type_string()},\n    {\"name\": \"rcntr\", \"datatype\": dbt.type_string()},\n    {\"name\": \"rfarea\", \"datatype\": dbt.type_string()},\n    {\"name\": \"rldnr\", \"datatype\": dbt.type_string()},\n    {\"name\": \"rmvct\", \"datatype\": dbt.type_string()},\n    {\"name\": \"rpmax\", \"datatype\": dbt.type_string()},\n    {\"name\": \"rrcty\", \"datatype\": dbt.type_string()},\n    {\"name\": \"rtcur\", \"datatype\": dbt.type_string()},\n    {\"name\": \"runit\", \"datatype\": dbt.type_string()},\n    {\"name\": \"rvers\", \"datatype\": dbt.type_string()},\n    {\"name\": \"ryear\", \"datatype\": dbt.type_string()},\n    {\"name\": \"sbusa\", \"datatype\": dbt.type_string()},\n    {\"name\": \"scntr\", \"datatype\": dbt.type_string()},\n    {\"name\": \"segment\", \"datatype\": dbt.type_string()},\n    {\"name\": \"sfarea\", \"datatype\": dbt.type_string()},\n    {\"name\": \"timestamp\", \"datatype\": dbt.type_numeric(), \"alias\": \"faglflext_timestamp\"},\n    {\"name\": \"tsl01\", \"datatype\": dbt.type_numeric()},\n    {\"name\": \"tsl02\", \"datatype\": dbt.type_numeric()},\n    {\"name\": \"tsl03\", \"datatype\": dbt.type_numeric()},\n    {\"name\": \"tsl04\", \"datatype\": dbt.type_numeric()},\n    {\"name\": \"tsl05\", \"datatype\": dbt.type_numeric()},\n    {\"name\": \"tsl06\", \"datatype\": dbt.type_numeric()},\n    {\"name\": \"tsl07\", \"datatype\": dbt.type_numeric()},\n    {\"name\": \"tsl08\", \"datatype\": dbt.type_numeric()},\n    {\"name\": \"tsl09\", \"datatype\": dbt.type_numeric()},\n    {\"name\": \"tsl10\", \"datatype\": dbt.type_numeric()},\n    {\"name\": \"tsl11\", \"datatype\": dbt.type_numeric()},\n    {\"name\": \"tsl12\", \"datatype\": dbt.type_numeric()},\n    {\"name\": \"tsl13\", \"datatype\": dbt.type_numeric()},\n    {\"name\": \"tsl14\", \"datatype\": dbt.type_numeric()},\n    {\"name\": \"tsl15\", \"datatype\": dbt.type_numeric()},\n    {\"name\": \"tsl16\", \"datatype\": dbt.type_numeric()},\n    {\"name\": \"tslvt\", \"datatype\": dbt.type_numeric()},\n    {\"name\": \"zzspreg\", \"datatype\": dbt.type_string()}\n] %}\n\n{{ return(columns) }}\n\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.type_numeric", "macro.dbt.type_timestamp", "macro.dbt.type_string"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1756850323.4520013, "supported_languages": null}, "macro.sap.get_vbak_columns": {"name": "get_vbak_columns", "resource_type": "macro", "package_name": "sap", "path": "macros/get_column_macros/get_vbak_columns.sql", "original_file_path": "macros/get_column_macros/get_vbak_columns.sql", "unique_id": "macro.sap.get_vbak_columns", "macro_sql": "{% macro get_vbak_columns() %}\n\n{% set columns = [\n    {\"name\": \"mandt\", \"datatype\": dbt.type_string()},\n    {\"name\": \"vbeln\", \"datatype\": dbt.type_string()},\n    {\"name\": \"kostl\", \"datatype\": dbt.type_string()},\n    {\"name\": \"mahza\", \"datatype\": dbt.type_string()},\n    {\"name\": \"msr_id\", \"datatype\": dbt.type_string()},\n    {\"name\": \"_dataaging\", \"datatype\": dbt.type_string()},\n    {\"name\": \"taxk5\", \"datatype\": dbt.type_string()},\n    {\"name\": \"kvgr4\", \"datatype\": dbt.type_string()},\n    {\"name\": \"amtbl\", \"datatype\": dbt.type_string()},\n    {\"name\": \"trvog\", \"datatype\": dbt.type_string()},\n    {\"name\": \"hb_resdate\", \"datatype\": dbt.type_string()},\n    {\"name\": \"fmbdat\", \"datatype\": dbt.type_string()},\n    {\"name\": \"fsh_vrsn_status\", \"datatype\": dbt.type_string()},\n    {\"name\": \"upd_tmstmp\", \"datatype\": dbt.type_string()},\n    {\"name\": \"auart\", \"datatype\": dbt.type_string()},\n    {\"name\": \"hb_expdate\", \"datatype\": dbt.type_string()},\n    {\"name\": \"scheme_grp\", \"datatype\": dbt.type_string()},\n    {\"name\": \"smenr\", \"datatype\": dbt.type_string()},\n    {\"name\": \"taxk6\", \"datatype\": dbt.type_string()},\n    {\"name\": \"fsh_transaction\", \"datatype\": dbt.type_string()},\n    {\"name\": \"kvgr5\", \"datatype\": dbt.type_string()},\n    {\"name\": \"gskst\", \"datatype\": dbt.type_string()},\n    {\"name\": \"vkgrp\", \"datatype\": dbt.type_string()},\n    {\"name\": \"pay_method\", \"datatype\": dbt.type_string()},\n    {\"name\": \"ktext\", \"datatype\": dbt.type_string()},\n    {\"name\": \"ps_psp_pnr\", \"datatype\": dbt.type_string()},\n    {\"name\": \"faksk\", \"datatype\": dbt.type_string()},\n    {\"name\": \"bnddt\", \"datatype\": dbt.type_string()},\n    {\"name\": \"cmwae\", \"datatype\": dbt.type_string()},\n    {\"name\": \"kokrs\", \"datatype\": dbt.type_string()},\n    {\"name\": \"kunnr\", \"datatype\": dbt.type_string()},\n    {\"name\": \"betc\", \"datatype\": dbt.type_string()},\n    {\"name\": \"fsh_rereg\", \"datatype\": dbt.type_string()},\n    {\"name\": \"tas\", \"datatype\": dbt.type_string()},\n    {\"name\": \"cancel_allow\", \"datatype\": dbt.type_string()},\n    {\"name\": \"fkara\", \"datatype\": dbt.type_string()},\n    {\"name\": \"taxk7\", \"datatype\": dbt.type_string()},\n    {\"name\": \"gwldt\", \"datatype\": dbt.type_string()},\n    {\"name\": \"psm_budat\", \"datatype\": dbt.type_string()},\n    {\"name\": \"objnr\", \"datatype\": dbt.type_string()},\n    {\"name\": \"autlf\", \"datatype\": dbt.type_string()},\n    {\"name\": \"stwae\", \"datatype\": dbt.type_string()},\n    {\"name\": \"abhov\", \"datatype\": dbt.type_string()},\n    {\"name\": \"logsysb\", \"datatype\": dbt.type_string()},\n    {\"name\": \"fsh_kvgr6\", \"datatype\": dbt.type_string()},\n    {\"name\": \"bname\", \"datatype\": dbt.type_string()},\n    {\"name\": \"taxk8\", \"datatype\": dbt.type_string()},\n    {\"name\": \"xblnr\", \"datatype\": dbt.type_string()},\n    {\"name\": \"mtlaur\", \"datatype\": dbt.type_string()},\n    {\"name\": \"augru\", \"datatype\": dbt.type_string()},\n    {\"name\": \"stafo\", \"datatype\": dbt.type_string()},\n    {\"name\": \"swenr\", \"datatype\": dbt.type_string()},\n    {\"name\": \"_xlso_trans_ctxt\", \"datatype\": dbt.type_string()},\n    {\"name\": \"abruf_part\", \"datatype\": dbt.type_string()},\n    {\"name\": \"cmngv\", \"datatype\": dbt.type_string()},\n    {\"name\": \"knkli\", \"datatype\": dbt.type_string()},\n    {\"name\": \"spart\", \"datatype\": dbt.type_string()},\n    {\"name\": \"proli\", \"datatype\": dbt.type_string()},\n    {\"name\": \"enqueue_grp\", \"datatype\": dbt.type_string()},\n    {\"name\": \"vzeit\", \"datatype\": dbt.type_string()},\n    {\"name\": \"kalcd\", \"datatype\": dbt.type_string()},\n    {\"name\": \"bukrs_vf\", \"datatype\": dbt.type_string()},\n    {\"name\": \"fsh_kvgr7\", \"datatype\": dbt.type_string()},\n    {\"name\": \"vprgr\", \"datatype\": dbt.type_string()},\n    {\"name\": \"crm_guid\", \"datatype\": dbt.type_string()},\n    {\"name\": \"hityp_pr\", \"datatype\": dbt.type_string()},\n    {\"name\": \"taxk9\", \"datatype\": dbt.type_string()},\n    {\"name\": \"vgbel\", \"datatype\": dbt.type_string()},\n    {\"name\": \"erzet\", \"datatype\": dbt.type_string()},\n    {\"name\": \"ihrez\", \"datatype\": dbt.type_string()},\n    {\"name\": \"submi\", \"datatype\": dbt.type_string()},\n    {\"name\": \"vdatu\", \"datatype\": dbt.type_string()},\n    {\"name\": \"_xlso_variant_id\", \"datatype\": dbt.type_string()},\n    {\"name\": \"abdis\", \"datatype\": dbt.type_string()},\n    {\"name\": \"fsh_kvgr8\", \"datatype\": dbt.type_string()},\n    {\"name\": \"ernam\", \"datatype\": dbt.type_string()},\n    {\"name\": \"hb_cont_reason\", \"datatype\": dbt.type_string()},\n    {\"name\": \"netwr\", \"datatype\": dbt.type_int()},\n    {\"name\": \"vbkla\", \"datatype\": dbt.type_string()},\n    {\"name\": \"vgtyp\", \"datatype\": dbt.type_string()},\n    {\"name\": \"sbgrp\", \"datatype\": dbt.type_string()},\n    {\"name\": \"stceg_l\", \"datatype\": dbt.type_string()},\n    {\"name\": \"fsh_kvgr10\", \"datatype\": dbt.type_string()},\n    {\"name\": \"knuma\", \"datatype\": dbt.type_string()},\n    {\"name\": \"fsh_ss\", \"datatype\": dbt.type_string()},\n    {\"name\": \"fsh_cq_check\", \"datatype\": dbt.type_string()},\n    {\"name\": \"xegdr\", \"datatype\": dbt.type_string()},\n    {\"name\": \"bstnk\", \"datatype\": dbt.type_string()},\n    {\"name\": \"multi\", \"datatype\": dbt.type_string()},\n    {\"name\": \"sppaym\", \"datatype\": dbt.type_string()},\n    {\"name\": \"lifsk\", \"datatype\": dbt.type_string()},\n    {\"name\": \"fsh_kvgr9\", \"datatype\": dbt.type_string()},\n    {\"name\": \"aedat\", \"datatype\": dbt.type_string()},\n    {\"name\": \"wtysc_clm_hdr\", \"datatype\": dbt.type_string()},\n    {\"name\": \"dat_fzau\", \"datatype\": dbt.type_string()},\n    {\"name\": \"awahr\", \"datatype\": dbt.type_string()},\n    {\"name\": \"kurst\", \"datatype\": dbt.type_string()},\n    {\"name\": \"gueen\", \"datatype\": dbt.type_string()},\n    {\"name\": \"_xlso_so_vald_to\", \"datatype\": dbt.type_string()},\n    {\"name\": \"cmnup\", \"datatype\": dbt.type_string()},\n    {\"name\": \"abhod\", \"datatype\": dbt.type_string()},\n    {\"name\": \"vkorg\", \"datatype\": dbt.type_string()},\n    {\"name\": \"audat\", \"datatype\": dbt.type_string()},\n    {\"name\": \"zuonr\", \"datatype\": dbt.type_string()},\n    {\"name\": \"angdt\", \"datatype\": dbt.type_string()},\n    {\"name\": \"vsbed\", \"datatype\": dbt.type_string()},\n    {\"name\": \"_xlso_payment_op\", \"datatype\": dbt.type_string()},\n    {\"name\": \"rep_freq\", \"datatype\": dbt.type_string()},\n    {\"name\": \"handle\", \"datatype\": dbt.type_string()},\n    {\"name\": \"_xlso_so_vald_fm\", \"datatype\": dbt.type_string()},\n    {\"name\": \"bstzd\", \"datatype\": dbt.type_string()},\n    {\"name\": \"taxk1\", \"datatype\": dbt.type_string()},\n    {\"name\": \"mahdt\", \"datatype\": dbt.type_string()},\n    {\"name\": \"bstdk\", \"datatype\": dbt.type_string()},\n    {\"name\": \"vbeln_grp\", \"datatype\": dbt.type_string()},\n    {\"name\": \"handoverloc\", \"datatype\": dbt.type_string()},\n    {\"name\": \"qmnum\", \"datatype\": dbt.type_string()},\n    {\"name\": \"kalsm_ch\", \"datatype\": dbt.type_string()},\n    {\"name\": \"cont_dg\", \"datatype\": dbt.type_string()},\n    {\"name\": \"cmfre\", \"datatype\": dbt.type_string()},\n    {\"name\": \"vtweg\", \"datatype\": dbt.type_string()},\n    {\"name\": \"telf1\", \"datatype\": dbt.type_string()},\n    {\"name\": \"aufnr\", \"datatype\": dbt.type_string()},\n    {\"name\": \"phase\", \"datatype\": dbt.type_string()},\n    {\"name\": \"taxk2\", \"datatype\": dbt.type_string()},\n    {\"name\": \"kvgr1\", \"datatype\": dbt.type_string()},\n    {\"name\": \"grupp\", \"datatype\": dbt.type_string()},\n    {\"name\": \"fsh_os_stg_change\", \"datatype\": dbt.type_string()},\n    {\"name\": \"abhob\", \"datatype\": dbt.type_string()},\n    {\"name\": \"landtx\", \"datatype\": dbt.type_string()},\n    {\"name\": \"kalsm\", \"datatype\": dbt.type_string()},\n    {\"name\": \"erdat\", \"datatype\": dbt.type_string()},\n    {\"name\": \"bpn\", \"datatype\": dbt.type_string()},\n    {\"name\": \"stage\", \"datatype\": dbt.type_string()},\n    {\"name\": \"kkber\", \"datatype\": dbt.type_string()},\n    {\"name\": \"taxk3\", \"datatype\": dbt.type_string()},\n    {\"name\": \"abrvw\", \"datatype\": dbt.type_string()},\n    {\"name\": \"vbtyp\", \"datatype\": dbt.type_string()},\n    {\"name\": \"kvgr2\", \"datatype\": dbt.type_string()},\n    {\"name\": \"knumv\", \"datatype\": dbt.type_string()},\n    {\"name\": \"guebg\", \"datatype\": dbt.type_string()},\n    {\"name\": \"fsh_vas_cg\", \"datatype\": dbt.type_string()},\n    {\"name\": \"waerk\", \"datatype\": dbt.type_string()},\n    {\"name\": \"vkbur\", \"datatype\": dbt.type_string()},\n    {\"name\": \"ctlpc\", \"datatype\": dbt.type_string()},\n    {\"name\": \"vsnmr_v\", \"datatype\": dbt.type_string()},\n    {\"name\": \"rplnr\", \"datatype\": dbt.type_string()},\n    {\"name\": \"vbklt\", \"datatype\": dbt.type_string()},\n    {\"name\": \"mod_allow\", \"datatype\": dbt.type_string()},\n    {\"name\": \"taxk4\", \"datatype\": dbt.type_string()},\n    {\"name\": \"_xlso_catalog_id\", \"datatype\": dbt.type_string()},\n    {\"name\": \"kvgr3\", \"datatype\": dbt.type_string()},\n    {\"name\": \"fsh_candate\", \"datatype\": dbt.type_string()},\n    {\"name\": \"agrzr\", \"datatype\": dbt.type_string()},\n    {\"name\": \"mill_appl_id\", \"datatype\": dbt.type_string()},\n    {\"name\": \"bsark\", \"datatype\": dbt.type_string()},\n    {\"name\": \"tm_ctrl_key\", \"datatype\": dbt.type_string()},\n    {\"name\": \"gsber\", \"datatype\": dbt.type_string()},\n    {\"name\": \"_fivetran_deleted\", \"datatype\": \"boolean\"},\n    {\"name\": \"_fivetran_synced\", \"datatype\": dbt.type_timestamp()},\n    {\"name\": \"_fivetran_sap_archived\", \"datatype\": dbt.type_string()}\n] %}\n\n{{ return(columns) }}\n\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.type_string", "macro.dbt.type_int", "macro.dbt.type_timestamp"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1756850323.479894, "supported_languages": null}, "macro.sap.get_mara_columns": {"name": "get_mara_columns", "resource_type": "macro", "package_name": "sap", "path": "macros/get_column_macros/get_mara_columns.sql", "original_file_path": "macros/get_column_macros/get_mara_columns.sql", "unique_id": "macro.sap.get_mara_columns", "macro_sql": "{% macro get_mara_columns() %}\n\n{% set columns = [\n    {\"name\": \"_accgo_assgd_uom\", \"datatype\": dbt.type_string(), \"alias\": \"_accgo_assgd_uom\", \"quote\": true},\n    {\"name\": \"_bev1_luldegrp\", \"datatype\": dbt.type_string(), \"alias\": \"_bev1_luldegrp\", \"quote\": true},\n    {\"name\": \"_bev1_luleinh\", \"datatype\": dbt.type_string(), \"alias\": \"_bev1_luleinh\", \"quote\": true},\n    {\"name\": \"_bev1_nestruccat\", \"datatype\": dbt.type_string(), \"alias\": \"_bev1_nestruccat\", \"quote\": true},\n    {\"name\": \"_dsd_sl_toltyp\", \"datatype\": dbt.type_string(), \"alias\": \"_dsd_sl_toltyp\", \"quote\": true},\n    {\"name\": \"_dsd_sv_cnt_grp\", \"datatype\": dbt.type_string(), \"alias\": \"_dsd_sv_cnt_grp\", \"quote\": true},\n    {\"name\": \"_dsd_vc_group\", \"datatype\": dbt.type_string(), \"alias\": \"_dsd_vc_group\", \"quote\": true},\n    {\"name\": \"_fivetran_deleted\", \"datatype\": \"boolean\"},\n    {\"name\": \"_fivetran_rowid\", \"datatype\": dbt.type_numeric()},\n    {\"name\": \"_fivetran_sap_archived\", \"datatype\": dbt.type_string()},\n    {\"name\": \"_fivetran_synced\", \"datatype\": dbt.type_timestamp()},\n    {\"name\": \"_sttpec_country_ref\", \"datatype\": dbt.type_string(), \"alias\": \"_sttpec_country_ref\", \"quote\": true},\n    {\"name\": \"_sttpec_prdcat\", \"datatype\": dbt.type_string(), \"alias\": \"_sttpec_prdcat\", \"quote\": true},\n    {\"name\": \"_sttpec_sertype\", \"datatype\": dbt.type_numeric(), \"alias\": \"_sttpec_sertype\", \"quote\": true},\n    {\"name\": \"_sttpec_syncact\", \"datatype\": dbt.type_string(), \"alias\": \"_sttpec_syncact\", \"quote\": true},\n    {\"name\": \"_sttpec_syncchg\", \"datatype\": dbt.type_string(), \"alias\": \"_sttpec_syncchg\", \"quote\": true},\n    {\"name\": \"_sttpec_synctime\", \"datatype\": dbt.type_numeric(), \"alias\": \"_sttpec_synctime\", \"quote\": true},\n    {\"name\": \"_vso_r_bot_ind\", \"datatype\": dbt.type_string(), \"alias\": \"_vso_r_bot_ind\", \"quote\": true},\n    {\"name\": \"_vso_r_kzgvh_ind\", \"datatype\": dbt.type_string(), \"alias\": \"_vso_r_kzgvh_ind\", \"quote\": true},\n    {\"name\": \"_vso_r_no_p_gvh\", \"datatype\": dbt.type_string(), \"alias\": \"_vso_r_no_p_gvh\", \"quote\": true},\n    {\"name\": \"_vso_r_pal_b_ht\", \"datatype\": dbt.type_numeric(), \"alias\": \"_vso_r_pal_b_ht\", \"quote\": true},\n    {\"name\": \"_vso_r_pal_ind\", \"datatype\": dbt.type_string(), \"alias\": \"_vso_r_pal_ind\", \"quote\": true},\n    {\"name\": \"_vso_r_pal_min_h\", \"datatype\": dbt.type_numeric(), \"alias\": \"_vso_r_pal_min_h\", \"quote\": true},\n    {\"name\": \"_vso_r_pal_ovr_d\", \"datatype\": dbt.type_numeric(), \"alias\": \"_vso_r_pal_ovr_d\", \"quote\": true},\n    {\"name\": \"_vso_r_pal_ovr_w\", \"datatype\": dbt.type_numeric(), \"alias\": \"_vso_r_pal_ovr_w\", \"quote\": true},\n    {\"name\": \"_vso_r_quan_unit\", \"datatype\": dbt.type_string(), \"alias\": \"_vso_r_quan_unit\", \"quote\": true},\n    {\"name\": \"_vso_r_stack_ind\", \"datatype\": dbt.type_string(), \"alias\": \"_vso_r_stack_ind\", \"quote\": true},\n    {\"name\": \"_vso_r_stack_no\", \"datatype\": dbt.type_string(), \"alias\": \"_vso_r_stack_no\", \"quote\": true},\n    {\"name\": \"_vso_r_tilt_ind\", \"datatype\": dbt.type_string(), \"alias\": \"_vso_r_tilt_ind\", \"quote\": true},\n    {\"name\": \"_vso_r_tol_b_ht\", \"datatype\": dbt.type_numeric(), \"alias\": \"_vso_r_tol_b_ht\", \"quote\": true},\n    {\"name\": \"_vso_r_top_ind\", \"datatype\": dbt.type_string(), \"alias\": \"_vso_r_top_ind\", \"quote\": true},\n    {\"name\": \"adprof\", \"datatype\": dbt.type_string()},\n    {\"name\": \"adspc_spc\", \"datatype\": dbt.type_string()},\n    {\"name\": \"aeklk\", \"datatype\": dbt.type_string()},\n    {\"name\": \"aenam\", \"datatype\": dbt.type_string()},\n    {\"name\": \"aeszn\", \"datatype\": dbt.type_string()},\n    {\"name\": \"allow_pmat_igno\", \"datatype\": dbt.type_string()},\n    {\"name\": \"animal_origin\", \"datatype\": dbt.type_string()},\n    {\"name\": \"anp\", \"datatype\": dbt.type_string()},\n    {\"name\": \"attyp\", \"datatype\": dbt.type_string()},\n    {\"name\": \"bbtyp\", \"datatype\": dbt.type_string()},\n    {\"name\": \"begru\", \"datatype\": dbt.type_string()},\n    {\"name\": \"behvo\", \"datatype\": dbt.type_string()},\n    {\"name\": \"bflme\", \"datatype\": dbt.type_string()},\n    {\"name\": \"bismt\", \"datatype\": dbt.type_string()},\n    {\"name\": \"blanz\", \"datatype\": dbt.type_string()},\n    {\"name\": \"blatt\", \"datatype\": dbt.type_string()},\n    {\"name\": \"bmatn\", \"datatype\": dbt.type_string()},\n    {\"name\": \"brand_id\", \"datatype\": dbt.type_string()},\n    {\"name\": \"breit\", \"datatype\": dbt.type_numeric()},\n    {\"name\": \"brgew\", \"datatype\": dbt.type_numeric()},\n    {\"name\": \"bstat\", \"datatype\": dbt.type_string()},\n    {\"name\": \"bstme\", \"datatype\": dbt.type_string()},\n    {\"name\": \"bwscl\", \"datatype\": dbt.type_string()},\n    {\"name\": \"bwvor\", \"datatype\": dbt.type_string()},\n    {\"name\": \"cadkz\", \"datatype\": dbt.type_string()},\n    {\"name\": \"care_code\", \"datatype\": dbt.type_string()},\n    {\"name\": \"cmeth\", \"datatype\": dbt.type_string()},\n    {\"name\": \"cmrel\", \"datatype\": dbt.type_string()},\n    {\"name\": \"cobjid\", \"datatype\": dbt.type_string()},\n    {\"name\": \"color_atinn\", \"datatype\": dbt.type_string()},\n    {\"name\": \"color\", \"datatype\": dbt.type_string()},\n    {\"name\": \"commodity\", \"datatype\": dbt.type_string()},\n    {\"name\": \"compl\", \"datatype\": dbt.type_string()},\n    {\"name\": \"cotype\", \"datatype\": dbt.type_string()},\n    {\"name\": \"cuobf\", \"datatype\": dbt.type_string()},\n    {\"name\": \"cwqproc\", \"datatype\": dbt.type_string()},\n    {\"name\": \"cwqrel\", \"datatype\": dbt.type_string()},\n    {\"name\": \"cwqtolgr\", \"datatype\": dbt.type_string()},\n    {\"name\": \"datab\", \"datatype\": dbt.type_string()},\n    {\"name\": \"dg_pack_status\", \"datatype\": dbt.type_string()},\n    {\"name\": \"disst\", \"datatype\": dbt.type_string()},\n    {\"name\": \"ean11\", \"datatype\": dbt.type_string()},\n    {\"name\": \"eannr\", \"datatype\": dbt.type_string()},\n    {\"name\": \"ekwsl\", \"datatype\": dbt.type_string()},\n    {\"name\": \"entar\", \"datatype\": dbt.type_string()},\n    {\"name\": \"ergei\", \"datatype\": dbt.type_string()},\n    {\"name\": \"ergew\", \"datatype\": dbt.type_numeric()},\n    {\"name\": \"ernam\", \"datatype\": dbt.type_string()},\n    {\"name\": \"ersda\", \"datatype\": dbt.type_string()},\n    {\"name\": \"ervoe\", \"datatype\": dbt.type_string()},\n    {\"name\": \"ervol\", \"datatype\": dbt.type_numeric()},\n    {\"name\": \"etiag\", \"datatype\": dbt.type_string()},\n    {\"name\": \"etiar\", \"datatype\": dbt.type_string()},\n    {\"name\": \"etifo\", \"datatype\": dbt.type_string()},\n    {\"name\": \"extwg\", \"datatype\": dbt.type_string()},\n    {\"name\": \"fashgrd\", \"datatype\": dbt.type_string()},\n    {\"name\": \"ferth\", \"datatype\": dbt.type_string()},\n    {\"name\": \"fiber_code1\", \"datatype\": dbt.type_string()},\n    {\"name\": \"fiber_code2\", \"datatype\": dbt.type_string()},\n    {\"name\": \"fiber_code3\", \"datatype\": dbt.type_string()},\n    {\"name\": \"fiber_code4\", \"datatype\": dbt.type_string()},\n    {\"name\": \"fiber_code5\", \"datatype\": dbt.type_string()},\n    {\"name\": \"fiber_part1\", \"datatype\": dbt.type_string()},\n    {\"name\": \"fiber_part2\", \"datatype\": dbt.type_string()},\n    {\"name\": \"fiber_part3\", \"datatype\": dbt.type_string()},\n    {\"name\": \"fiber_part4\", \"datatype\": dbt.type_string()},\n    {\"name\": \"fiber_part5\", \"datatype\": dbt.type_string()},\n    {\"name\": \"formt\", \"datatype\": dbt.type_string()},\n    {\"name\": \"free_char\", \"datatype\": dbt.type_string()},\n    {\"name\": \"fsh_mg_at1\", \"datatype\": dbt.type_string()},\n    {\"name\": \"fsh_mg_at2\", \"datatype\": dbt.type_string()},\n    {\"name\": \"fsh_mg_at3\", \"datatype\": dbt.type_string()},\n    {\"name\": \"fsh_sc_mid\", \"datatype\": dbt.type_string()},\n    {\"name\": \"fsh_seaim\", \"datatype\": dbt.type_string()},\n    {\"name\": \"fsh_sealv\", \"datatype\": dbt.type_string()},\n    {\"name\": \"fuelg\", \"datatype\": dbt.type_numeric()},\n    {\"name\": \"gds_relevant\", \"datatype\": dbt.type_string()},\n    {\"name\": \"gennr\", \"datatype\": dbt.type_string()},\n    {\"name\": \"gewei\", \"datatype\": dbt.type_string()},\n    {\"name\": \"gewto\", \"datatype\": dbt.type_numeric()},\n    {\"name\": \"groes\", \"datatype\": dbt.type_string()},\n    {\"name\": \"gtin_variant\", \"datatype\": dbt.type_string()},\n    {\"name\": \"hazmat\", \"datatype\": dbt.type_string()},\n    {\"name\": \"herkl\", \"datatype\": dbt.type_string()},\n    {\"name\": \"hndlcode\", \"datatype\": dbt.type_string()},\n    {\"name\": \"hoehe\", \"datatype\": dbt.type_numeric()},\n    {\"name\": \"hutyp_dflt\", \"datatype\": dbt.type_string()},\n    {\"name\": \"hutyp\", \"datatype\": dbt.type_string()},\n    {\"name\": \"ihivi\", \"datatype\": dbt.type_string()},\n    {\"name\": \"iloos\", \"datatype\": dbt.type_string()},\n    {\"name\": \"imatn\", \"datatype\": dbt.type_string()},\n    {\"name\": \"inhal\", \"datatype\": dbt.type_numeric()},\n    {\"name\": \"inhbr\", \"datatype\": dbt.type_numeric()},\n    {\"name\": \"inhme\", \"datatype\": dbt.type_string()},\n    {\"name\": \"ipmipproduct\", \"datatype\": dbt.type_string()},\n    {\"name\": \"iprkz\", \"datatype\": dbt.type_string()},\n    {\"name\": \"kosch\", \"datatype\": dbt.type_string()},\n    {\"name\": \"kunnr\", \"datatype\": dbt.type_string()},\n    {\"name\": \"kzeff\", \"datatype\": dbt.type_string()},\n    {\"name\": \"kzgvh\", \"datatype\": dbt.type_string()},\n    {\"name\": \"kzkfg\", \"datatype\": dbt.type_string()},\n    {\"name\": \"kzkup\", \"datatype\": dbt.type_string()},\n    {\"name\": \"kznfm\", \"datatype\": dbt.type_string()},\n    {\"name\": \"kzrev\", \"datatype\": dbt.type_string()},\n    {\"name\": \"kzumw\", \"datatype\": dbt.type_string()},\n    {\"name\": \"kzwsm\", \"datatype\": dbt.type_string()},\n    {\"name\": \"labor\", \"datatype\": dbt.type_string()},\n    {\"name\": \"laeda\", \"datatype\": dbt.type_string()},\n    {\"name\": \"laeng\", \"datatype\": dbt.type_numeric()},\n    {\"name\": \"liqdt\", \"datatype\": dbt.type_string()},\n    {\"name\": \"loglev_reto\", \"datatype\": dbt.type_string()},\n    {\"name\": \"logunit\", \"datatype\": dbt.type_string()},\n    {\"name\": \"lvorm\", \"datatype\": dbt.type_string()},\n    {\"name\": \"magrv\", \"datatype\": dbt.type_string()},\n    {\"name\": \"mandt\", \"datatype\": dbt.type_string()},\n    {\"name\": \"matfi\", \"datatype\": dbt.type_string()},\n    {\"name\": \"matkl\", \"datatype\": dbt.type_string()},\n    {\"name\": \"matnr\", \"datatype\": dbt.type_string()},\n    {\"name\": \"maxb\", \"datatype\": dbt.type_numeric()},\n    {\"name\": \"maxc_tol\", \"datatype\": dbt.type_numeric()},\n    {\"name\": \"maxc\", \"datatype\": dbt.type_numeric()},\n    {\"name\": \"maxdim_uom\", \"datatype\": dbt.type_string()},\n    {\"name\": \"maxh\", \"datatype\": dbt.type_numeric()},\n    {\"name\": \"maxl\", \"datatype\": dbt.type_numeric()},\n    {\"name\": \"mbrsh\", \"datatype\": dbt.type_string()},\n    {\"name\": \"mcond\", \"datatype\": dbt.type_string()},\n    {\"name\": \"meabm\", \"datatype\": dbt.type_string()},\n    {\"name\": \"medium\", \"datatype\": dbt.type_string()},\n    {\"name\": \"meins\", \"datatype\": dbt.type_string()},\n    {\"name\": \"mfrgr\", \"datatype\": dbt.type_string()},\n    {\"name\": \"mfrnr\", \"datatype\": dbt.type_string()},\n    {\"name\": \"mfrpn\", \"datatype\": dbt.type_string()},\n    {\"name\": \"mhdhb\", \"datatype\": dbt.type_numeric()},\n    {\"name\": \"mhdlp\", \"datatype\": dbt.type_numeric()},\n    {\"name\": \"mhdrz\", \"datatype\": dbt.type_numeric()},\n    {\"name\": \"mlgut\", \"datatype\": dbt.type_string()},\n    {\"name\": \"mprof\", \"datatype\": dbt.type_string()},\n    {\"name\": \"mstae\", \"datatype\": dbt.type_string()},\n    {\"name\": \"mstav\", \"datatype\": dbt.type_string()},\n    {\"name\": \"mstde\", \"datatype\": dbt.type_string()},\n    {\"name\": \"mstdv\", \"datatype\": dbt.type_string()},\n    {\"name\": \"mtart\", \"datatype\": dbt.type_string()},\n    {\"name\": \"mtpos_mara\", \"datatype\": dbt.type_string()},\n    {\"name\": \"normt\", \"datatype\": dbt.type_string()},\n    {\"name\": \"nrfhg\", \"datatype\": dbt.type_string()},\n    {\"name\": \"nsnid\", \"datatype\": dbt.type_string()},\n    {\"name\": \"ntgew\", \"datatype\": dbt.type_numeric()},\n    {\"name\": \"numtp\", \"datatype\": dbt.type_string()},\n    {\"name\": \"oigroupnam\", \"datatype\": dbt.type_string()},\n    {\"name\": \"oihmtxgr\", \"datatype\": dbt.type_string()},\n    {\"name\": \"oitrind\", \"datatype\": dbt.type_string()},\n    {\"name\": \"packcode\", \"datatype\": dbt.type_string()},\n    {\"name\": \"picnum\", \"datatype\": dbt.type_string()},\n    {\"name\": \"pilferable\", \"datatype\": dbt.type_string()},\n    {\"name\": \"plgtp\", \"datatype\": dbt.type_string()},\n    {\"name\": \"pmata\", \"datatype\": dbt.type_string()},\n    {\"name\": \"prdha\", \"datatype\": dbt.type_string()},\n    {\"name\": \"profl\", \"datatype\": dbt.type_string()},\n    {\"name\": \"przus\", \"datatype\": dbt.type_string()},\n    {\"name\": \"ps_smartform\", \"datatype\": dbt.type_string()},\n    {\"name\": \"psm_code\", \"datatype\": dbt.type_string()},\n    {\"name\": \"pstat\", \"datatype\": dbt.type_string()},\n    {\"name\": \"qgrp\", \"datatype\": dbt.type_string()},\n    {\"name\": \"qmpur\", \"datatype\": dbt.type_string()},\n    {\"name\": \"qqtime\", \"datatype\": dbt.type_numeric()},\n    {\"name\": \"qqtimeuom\", \"datatype\": dbt.type_string()},\n    {\"name\": \"raube\", \"datatype\": dbt.type_string()},\n    {\"name\": \"rbnrm\", \"datatype\": dbt.type_string()},\n    {\"name\": \"rdmhd\", \"datatype\": dbt.type_string()},\n    {\"name\": \"retdelc\", \"datatype\": dbt.type_string()},\n    {\"name\": \"rmatp\", \"datatype\": dbt.type_string()},\n    {\"name\": \"saisj\", \"datatype\": dbt.type_string()},\n    {\"name\": \"saiso\", \"datatype\": dbt.type_string()},\n    {\"name\": \"saity\", \"datatype\": dbt.type_string()},\n    {\"name\": \"satnr\", \"datatype\": dbt.type_string()},\n    {\"name\": \"serial\", \"datatype\": dbt.type_string()},\n    {\"name\": \"serlv\", \"datatype\": dbt.type_string()},\n    {\"name\": \"sgt_covsa\", \"datatype\": dbt.type_string()},\n    {\"name\": \"sgt_csgr\", \"datatype\": dbt.type_string()},\n    {\"name\": \"sgt_rel\", \"datatype\": dbt.type_string()},\n    {\"name\": \"sgt_scope\", \"datatype\": dbt.type_string()},\n    {\"name\": \"sgt_stat\", \"datatype\": dbt.type_string()},\n    {\"name\": \"size1_atinn\", \"datatype\": dbt.type_string()},\n    {\"name\": \"size1\", \"datatype\": dbt.type_string()},\n    {\"name\": \"size2_atinn\", \"datatype\": dbt.type_string()},\n    {\"name\": \"size2\", \"datatype\": dbt.type_string()},\n    {\"name\": \"sled_bbd\", \"datatype\": dbt.type_string()},\n    {\"name\": \"spart\", \"datatype\": dbt.type_string()},\n    {\"name\": \"sprof\", \"datatype\": dbt.type_string()},\n    {\"name\": \"stfak\", \"datatype\": dbt.type_numeric()},\n    {\"name\": \"stoff\", \"datatype\": dbt.type_string()},\n    {\"name\": \"taklv\", \"datatype\": dbt.type_string()},\n    {\"name\": \"tare_var\", \"datatype\": dbt.type_string()},\n    {\"name\": \"tempb\", \"datatype\": dbt.type_string()},\n    {\"name\": \"textile_comp_ind\", \"datatype\": dbt.type_string()},\n    {\"name\": \"tragr\", \"datatype\": dbt.type_string()},\n    {\"name\": \"vabme\", \"datatype\": dbt.type_string()},\n    {\"name\": \"vhart\", \"datatype\": dbt.type_string()},\n    {\"name\": \"voleh\", \"datatype\": dbt.type_string()},\n    {\"name\": \"volto\", \"datatype\": dbt.type_numeric()},\n    {\"name\": \"volum\", \"datatype\": dbt.type_numeric()},\n    {\"name\": \"vpreh\", \"datatype\": dbt.type_numeric()},\n    {\"name\": \"vpsta\", \"datatype\": dbt.type_string()},\n    {\"name\": \"weora\", \"datatype\": dbt.type_string()},\n    {\"name\": \"wesch\", \"datatype\": dbt.type_numeric()},\n    {\"name\": \"whmatgr\", \"datatype\": dbt.type_string()},\n    {\"name\": \"whstc\", \"datatype\": dbt.type_string()},\n    {\"name\": \"wrkst\", \"datatype\": dbt.type_string()},\n    {\"name\": \"xchpf\", \"datatype\": dbt.type_string()},\n    {\"name\": \"xgchp\", \"datatype\": dbt.type_string()},\n    {\"name\": \"zeiar\", \"datatype\": dbt.type_string()},\n    {\"name\": \"zeifo\", \"datatype\": dbt.type_string()},\n    {\"name\": \"zeinr\", \"datatype\": dbt.type_string()},\n    {\"name\": \"zeivr\", \"datatype\": dbt.type_string()}\n] %}\n\n{{ return(columns) }}\n\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.type_string", "macro.dbt.type_numeric", "macro.dbt.type_timestamp"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1756850323.5261576, "supported_languages": null}, "macro.sap.get_lfa1_columns": {"name": "get_lfa1_columns", "resource_type": "macro", "package_name": "sap", "path": "macros/get_column_macros/get_lfa1_columns.sql", "original_file_path": "macros/get_column_macros/get_lfa1_columns.sql", "unique_id": "macro.sap.get_lfa1_columns", "macro_sql": "{% macro get_lfa1_columns() %}\n\n{% set columns = [\n    {\"name\": \"_fivetran_deleted\", \"datatype\": \"boolean\"},\n    {\"name\": \"_fivetran_rowid\", \"datatype\": dbt.type_numeric()},\n    {\"name\": \"_fivetran_synced\", \"datatype\": dbt.type_timestamp()},\n    {\"name\": \"actss\", \"datatype\": dbt.type_string()},\n    {\"name\": \"adrnr\", \"datatype\": dbt.type_string()},\n    {\"name\": \"alc\", \"datatype\": dbt.type_string()},\n    {\"name\": \"anred\", \"datatype\": dbt.type_string()},\n    {\"name\": \"bahns\", \"datatype\": dbt.type_string()},\n    {\"name\": \"bbbnr\", \"datatype\": dbt.type_string()},\n    {\"name\": \"bbsnr\", \"datatype\": dbt.type_string()},\n    {\"name\": \"begru\", \"datatype\": dbt.type_string()},\n    {\"name\": \"brsch\", \"datatype\": dbt.type_string()},\n    {\"name\": \"bubkz\", \"datatype\": dbt.type_string()},\n    {\"name\": \"carrier_conf\", \"datatype\": dbt.type_string()},\n    {\"name\": \"cnae\", \"datatype\": dbt.type_string()},\n    {\"name\": \"comsize\", \"datatype\": dbt.type_string()},\n    {\"name\": \"confs\", \"datatype\": dbt.type_string()},\n    {\"name\": \"crc_num\", \"datatype\": dbt.type_string()},\n    {\"name\": \"crtn\", \"datatype\": dbt.type_string()},\n    {\"name\": \"cvp_xblck\", \"datatype\": dbt.type_string()},\n    {\"name\": \"datlt\", \"datatype\": dbt.type_string()},\n    {\"name\": \"decregpc\", \"datatype\": dbt.type_string()},\n    {\"name\": \"dlgrp\", \"datatype\": dbt.type_string()},\n    {\"name\": \"dtams\", \"datatype\": dbt.type_string()},\n    {\"name\": \"dtaws\", \"datatype\": dbt.type_string()},\n    {\"name\": \"duefl\", \"datatype\": dbt.type_string()},\n    {\"name\": \"emnfr\", \"datatype\": dbt.type_string()},\n    {\"name\": \"erdat\", \"datatype\": dbt.type_string()},\n    {\"name\": \"ernam\", \"datatype\": dbt.type_string()},\n    {\"name\": \"esrnr\", \"datatype\": dbt.type_string()},\n    {\"name\": \"exp\", \"datatype\": dbt.type_string()},\n    {\"name\": \"fiskn\", \"datatype\": dbt.type_string()},\n    {\"name\": \"fisku\", \"datatype\": dbt.type_string()},\n    {\"name\": \"fityp\", \"datatype\": dbt.type_string()},\n    {\"name\": \"gbdat\", \"datatype\": dbt.type_string()},\n    {\"name\": \"gbort\", \"datatype\": dbt.type_string()},\n    {\"name\": \"icmstaxpay\", \"datatype\": dbt.type_string()},\n    {\"name\": \"indtyp\", \"datatype\": dbt.type_string()},\n    {\"name\": \"ipisp\", \"datatype\": dbt.type_string()},\n    {\"name\": \"j_1kfrepre\", \"datatype\": dbt.type_string()},\n    {\"name\": \"j_1kftbus\", \"datatype\": dbt.type_string()},\n    {\"name\": \"j_1kftind\", \"datatype\": dbt.type_string()},\n    {\"name\": \"j_sc_capital\", \"datatype\": dbt.type_numeric()},\n    {\"name\": \"j_sc_currency\", \"datatype\": dbt.type_string()},\n    {\"name\": \"konzs\", \"datatype\": dbt.type_string()},\n    {\"name\": \"kraus\", \"datatype\": dbt.type_string()},\n    {\"name\": \"ktock\", \"datatype\": dbt.type_string()},\n    {\"name\": \"ktokk\", \"datatype\": dbt.type_string()},\n    {\"name\": \"kunnr\", \"datatype\": dbt.type_string()},\n    {\"name\": \"land1\", \"datatype\": dbt.type_string()},\n    {\"name\": \"legalnat\", \"datatype\": dbt.type_string()},\n    {\"name\": \"lfurl\", \"datatype\": dbt.type_string()},\n    {\"name\": \"lifnr\", \"datatype\": dbt.type_string()},\n    {\"name\": \"lnrza\", \"datatype\": dbt.type_string()},\n    {\"name\": \"loevm\", \"datatype\": dbt.type_string()},\n    {\"name\": \"ltsna\", \"datatype\": dbt.type_string()},\n    {\"name\": \"lzone\", \"datatype\": dbt.type_string()},\n    {\"name\": \"mandt\", \"datatype\": dbt.type_string()},\n    {\"name\": \"mcod1\", \"datatype\": dbt.type_string()},\n    {\"name\": \"mcod2\", \"datatype\": dbt.type_string()},\n    {\"name\": \"mcod3\", \"datatype\": dbt.type_string()},\n    {\"name\": \"min_comp\", \"datatype\": dbt.type_string()},\n    {\"name\": \"name1\", \"datatype\": dbt.type_string()},\n    {\"name\": \"name2\", \"datatype\": dbt.type_string()},\n    {\"name\": \"name3\", \"datatype\": dbt.type_string()},\n    {\"name\": \"name4\", \"datatype\": dbt.type_string()},\n    {\"name\": \"nodel\", \"datatype\": dbt.type_string()},\n    {\"name\": \"ort01\", \"datatype\": dbt.type_string()},\n    {\"name\": \"ort02\", \"datatype\": dbt.type_string()},\n    {\"name\": \"pfach\", \"datatype\": dbt.type_string()},\n    {\"name\": \"pfort\", \"datatype\": dbt.type_string()},\n    {\"name\": \"plkal\", \"datatype\": dbt.type_string()},\n    {\"name\": \"pmt_office\", \"datatype\": dbt.type_string()},\n    {\"name\": \"podkzb\", \"datatype\": dbt.type_string()},\n    {\"name\": \"ppa_relevant\", \"datatype\": dbt.type_string()},\n    {\"name\": \"profs\", \"datatype\": dbt.type_string()},\n    {\"name\": \"psofg\", \"datatype\": dbt.type_string()},\n    {\"name\": \"psohs\", \"datatype\": dbt.type_string()},\n    {\"name\": \"psois\", \"datatype\": dbt.type_string()},\n    {\"name\": \"pson1\", \"datatype\": dbt.type_string()},\n    {\"name\": \"pson2\", \"datatype\": dbt.type_string()},\n    {\"name\": \"pson3\", \"datatype\": dbt.type_string()},\n    {\"name\": \"psost\", \"datatype\": dbt.type_string()},\n    {\"name\": \"psotl\", \"datatype\": dbt.type_string()},\n    {\"name\": \"psovn\", \"datatype\": dbt.type_string()},\n    {\"name\": \"pstl2\", \"datatype\": dbt.type_string()},\n    {\"name\": \"pstlz\", \"datatype\": dbt.type_string()},\n    {\"name\": \"qssys\", \"datatype\": dbt.type_string()},\n    {\"name\": \"qssysdat\", \"datatype\": dbt.type_string()},\n    {\"name\": \"regio\", \"datatype\": dbt.type_string()},\n    {\"name\": \"regss\", \"datatype\": dbt.type_string()},\n    {\"name\": \"revdb\", \"datatype\": dbt.type_string()},\n    {\"name\": \"rg\", \"datatype\": dbt.type_string()},\n    {\"name\": \"rgdate\", \"datatype\": dbt.type_string()},\n    {\"name\": \"ric\", \"datatype\": dbt.type_string()},\n    {\"name\": \"rne\", \"datatype\": dbt.type_string()},\n    {\"name\": \"rnedate\", \"datatype\": dbt.type_string()},\n    {\"name\": \"scacd\", \"datatype\": dbt.type_string()},\n    {\"name\": \"scheduling_type\", \"datatype\": dbt.type_string()},\n    {\"name\": \"sexkz\", \"datatype\": dbt.type_string()},\n    {\"name\": \"sfrgr\", \"datatype\": dbt.type_string()},\n    {\"name\": \"sortl\", \"datatype\": dbt.type_string()},\n    {\"name\": \"sperm\", \"datatype\": dbt.type_string()},\n    {\"name\": \"sperq\", \"datatype\": dbt.type_string()},\n    {\"name\": \"sperr\", \"datatype\": dbt.type_string()},\n    {\"name\": \"sperz\", \"datatype\": dbt.type_string()},\n    {\"name\": \"spras\", \"datatype\": dbt.type_string()},\n    {\"name\": \"staging_time\", \"datatype\": dbt.type_numeric()},\n    {\"name\": \"stcd1\", \"datatype\": dbt.type_string()},\n    {\"name\": \"stcd2\", \"datatype\": dbt.type_string()},\n    {\"name\": \"stcd3\", \"datatype\": dbt.type_string()},\n    {\"name\": \"stcd4\", \"datatype\": dbt.type_string()},\n    {\"name\": \"stcd5\", \"datatype\": dbt.type_string()},\n    {\"name\": \"stcdt\", \"datatype\": dbt.type_string()},\n    {\"name\": \"stceg\", \"datatype\": dbt.type_string()},\n    {\"name\": \"stenr\", \"datatype\": dbt.type_string()},\n    {\"name\": \"stgdl\", \"datatype\": dbt.type_string()},\n    {\"name\": \"stkza\", \"datatype\": dbt.type_string()},\n    {\"name\": \"stkzn\", \"datatype\": dbt.type_string()},\n    {\"name\": \"stkzu\", \"datatype\": dbt.type_string()},\n    {\"name\": \"stras\", \"datatype\": dbt.type_string()},\n    {\"name\": \"submi_relevant\", \"datatype\": dbt.type_string()},\n    {\"name\": \"taxbs\", \"datatype\": dbt.type_string()},\n    {\"name\": \"tdt\", \"datatype\": dbt.type_string()},\n    {\"name\": \"telbx\", \"datatype\": dbt.type_string()},\n    {\"name\": \"telf1\", \"datatype\": dbt.type_string()},\n    {\"name\": \"telf2\", \"datatype\": dbt.type_string()},\n    {\"name\": \"telfx\", \"datatype\": dbt.type_string()},\n    {\"name\": \"teltx\", \"datatype\": dbt.type_string()},\n    {\"name\": \"telx1\", \"datatype\": dbt.type_string()},\n    {\"name\": \"term_li\", \"datatype\": dbt.type_string()},\n    {\"name\": \"transport_chain\", \"datatype\": dbt.type_string()},\n    {\"name\": \"txjcd\", \"datatype\": dbt.type_string()},\n    {\"name\": \"uf\", \"datatype\": dbt.type_string()},\n    {\"name\": \"updat\", \"datatype\": dbt.type_string()},\n    {\"name\": \"uptim\", \"datatype\": dbt.type_string()},\n    {\"name\": \"vbund\", \"datatype\": dbt.type_string()},\n    {\"name\": \"werkr\", \"datatype\": dbt.type_string()},\n    {\"name\": \"werks\", \"datatype\": dbt.type_string()},\n    {\"name\": \"xcpdk\", \"datatype\": dbt.type_string()},\n    {\"name\": \"xlfza\", \"datatype\": dbt.type_string()},\n    {\"name\": \"xzemp\", \"datatype\": dbt.type_string()}\n] %}\n\n{{ return(columns) }}\n\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.type_numeric", "macro.dbt.type_timestamp", "macro.dbt.type_string"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1756850323.5507827, "supported_languages": null}, "macro.sap.get_t880_columns": {"name": "get_t880_columns", "resource_type": "macro", "package_name": "sap", "path": "macros/get_column_macros/get_t880_columns.sql", "original_file_path": "macros/get_column_macros/get_t880_columns.sql", "unique_id": "macro.sap.get_t880_columns", "macro_sql": "{% macro get_t880_columns() %}\n\n{% set columns = [\n    {\"name\": \"_fivetran_deleted\", \"datatype\": \"boolean\"},\n    {\"name\": \"_fivetran_rowid\", \"datatype\": dbt.type_numeric()},\n    {\"name\": \"_fivetran_synced\", \"datatype\": dbt.type_timestamp()},\n    {\"name\": \"city\", \"datatype\": dbt.type_string()},\n    {\"name\": \"cntry\", \"datatype\": dbt.type_string()},\n    {\"name\": \"curr\", \"datatype\": dbt.type_string()},\n    {\"name\": \"glsip\", \"datatype\": dbt.type_string()},\n    {\"name\": \"indpo\", \"datatype\": dbt.type_string()},\n    {\"name\": \"langu\", \"datatype\": dbt.type_string()},\n    {\"name\": \"lccomp\", \"datatype\": dbt.type_string()},\n    {\"name\": \"mandt\", \"datatype\": dbt.type_string()},\n    {\"name\": \"mclnt\", \"datatype\": dbt.type_string()},\n    {\"name\": \"mcomp\", \"datatype\": dbt.type_string()},\n    {\"name\": \"modcp\", \"datatype\": dbt.type_string()},\n    {\"name\": \"name1\", \"datatype\": dbt.type_string()},\n    {\"name\": \"name2\", \"datatype\": dbt.type_string()},\n    {\"name\": \"pobox\", \"datatype\": dbt.type_string()},\n    {\"name\": \"pstlc\", \"datatype\": dbt.type_string()},\n    {\"name\": \"rcomp\", \"datatype\": dbt.type_string()},\n    {\"name\": \"resta\", \"datatype\": dbt.type_string()},\n    {\"name\": \"rform\", \"datatype\": dbt.type_string()},\n    {\"name\": \"stret\", \"datatype\": dbt.type_string()},\n    {\"name\": \"strt2\", \"datatype\": dbt.type_string()},\n    {\"name\": \"zweig\", \"datatype\": dbt.type_string()}\n] %}\n\n{{ return(columns) }}\n\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.type_numeric", "macro.dbt.type_timestamp", "macro.dbt.type_string"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1756850323.5553718, "supported_languages": null}, "macro.sap.get_t024e_columns": {"name": "get_t024e_columns", "resource_type": "macro", "package_name": "sap", "path": "macros/get_column_macros/get_t024e_columns.sql", "original_file_path": "macros/get_column_macros/get_t024e_columns.sql", "unique_id": "macro.sap.get_t024e_columns", "macro_sql": "{% macro get_t024e_columns() %}\n\n{% set columns = [\n    {\"name\": \"ekorg\", \"datatype\": dbt.type_string()},\n    {\"name\": \"mandt\", \"datatype\": dbt.type_string()},\n    {\"name\": \"ekotx\", \"datatype\": dbt.type_string()},\n    {\"name\": \"txfus\", \"datatype\": dbt.type_string()},\n    {\"name\": \"txgru\", \"datatype\": dbt.type_string()},\n    {\"name\": \"bpeff\", \"datatype\": dbt.type_string()},\n    {\"name\": \"txkop\", \"datatype\": dbt.type_string()},\n    {\"name\": \"kalse\", \"datatype\": dbt.type_string()},\n    {\"name\": \"txadr\", \"datatype\": dbt.type_string()},\n    {\"name\": \"mkals\", \"datatype\": dbt.type_string()},\n    {\"name\": \"bukrs\", \"datatype\": dbt.type_string()},\n    {\"name\": \"bukrs_ntr\", \"datatype\": dbt.type_string()},\n    {\"name\": \"_fivetran_deleted\", \"datatype\": \"boolean\"},\n    {\"name\": \"_fivetran_synced\", \"datatype\": dbt.type_timestamp()},\n    {\"name\": \"_fivetran_sap_archived\", \"datatype\": dbt.type_string()}\n] %}\n\n{{ return(columns) }}\n\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.type_string", "macro.dbt.type_timestamp"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1756850323.5586271, "supported_languages": null}, "macro.sap.get_bkpf_columns": {"name": "get_bkpf_columns", "resource_type": "macro", "package_name": "sap", "path": "macros/get_column_macros/get_bkpf_columns.sql", "original_file_path": "macros/get_column_macros/get_bkpf_columns.sql", "unique_id": "macro.sap.get_bkpf_columns", "macro_sql": "{% macro get_bkpf_columns() %}\n\n{% set columns = [\n    {\"name\": \"_fivetran_deleted\", \"datatype\": \"boolean\"},\n    {\"name\": \"_fivetran_rowid\", \"datatype\": dbt.type_numeric()},\n    {\"name\": \"_fivetran_synced\", \"datatype\": dbt.type_timestamp()},\n    {\"name\": \"_sapf15_status\", \"datatype\": dbt.type_string()},\n    {\"name\": \"adisc\", \"datatype\": dbt.type_string()},\n    {\"name\": \"aedat\", \"datatype\": dbt.type_string()},\n    {\"name\": \"arcid\", \"datatype\": dbt.type_string()},\n    {\"name\": \"ausbk\", \"datatype\": dbt.type_string()},\n    {\"name\": \"awkey\", \"datatype\": dbt.type_string()},\n    {\"name\": \"awsys\", \"datatype\": dbt.type_string()},\n    {\"name\": \"awtyp\", \"datatype\": dbt.type_string()},\n    {\"name\": \"basw2\", \"datatype\": dbt.type_string()},\n    {\"name\": \"basw3\", \"datatype\": dbt.type_string()},\n    {\"name\": \"batch\", \"datatype\": dbt.type_string()},\n    {\"name\": \"belnr\", \"datatype\": dbt.type_string()},\n    {\"name\": \"bktxt\", \"datatype\": dbt.type_string()},\n    {\"name\": \"blart\", \"datatype\": dbt.type_string()},\n    {\"name\": \"bldat\", \"datatype\": dbt.type_string()},\n    {\"name\": \"blind\", \"datatype\": dbt.type_string()},\n    {\"name\": \"brnch\", \"datatype\": dbt.type_string()},\n    {\"name\": \"bstat\", \"datatype\": dbt.type_string()},\n    {\"name\": \"budat\", \"datatype\": dbt.type_string()},\n    {\"name\": \"bukrs\", \"datatype\": dbt.type_string()},\n    {\"name\": \"bvorg\", \"datatype\": dbt.type_string()},\n    {\"name\": \"cash_alloc\", \"datatype\": dbt.type_string()},\n    {\"name\": \"ccins\", \"datatype\": dbt.type_string()},\n    {\"name\": \"ccnum\", \"datatype\": dbt.type_string()},\n    {\"name\": \"cpudt\", \"datatype\": dbt.type_string()},\n    {\"name\": \"cputm\", \"datatype\": dbt.type_string()},\n    {\"name\": \"ctxkrs\", \"datatype\": dbt.type_numeric()},\n    {\"name\": \"curt2\", \"datatype\": dbt.type_string()},\n    {\"name\": \"curt3\", \"datatype\": dbt.type_string()},\n    {\"name\": \"dbblg\", \"datatype\": dbt.type_string()},\n    {\"name\": \"doccat\", \"datatype\": dbt.type_string()},\n    {\"name\": \"dokid\", \"datatype\": dbt.type_string()},\n    {\"name\": \"duefl\", \"datatype\": dbt.type_string()},\n    {\"name\": \"exclude_flag\", \"datatype\": dbt.type_string()},\n    {\"name\": \"fikrs\", \"datatype\": dbt.type_string()},\n    {\"name\": \"fm_umart\", \"datatype\": dbt.type_string()},\n    {\"name\": \"follow_on\", \"datatype\": dbt.type_string()},\n    {\"name\": \"frath\", \"datatype\": dbt.type_numeric()},\n    {\"name\": \"gjahr\", \"datatype\": dbt.type_string()},\n    {\"name\": \"glvor\", \"datatype\": dbt.type_string()},\n    {\"name\": \"grpid\", \"datatype\": dbt.type_string()},\n    {\"name\": \"hwae2\", \"datatype\": dbt.type_string()},\n    {\"name\": \"hwae3\", \"datatype\": dbt.type_string()},\n    {\"name\": \"hwaer\", \"datatype\": dbt.type_string()},\n    {\"name\": \"iblar\", \"datatype\": dbt.type_string()},\n    {\"name\": \"intdate\", \"datatype\": dbt.type_string()},\n    {\"name\": \"intform\", \"datatype\": dbt.type_string()},\n    {\"name\": \"knumv\", \"datatype\": dbt.type_string()},\n    {\"name\": \"kur2x\", \"datatype\": dbt.type_numeric()},\n    {\"name\": \"kur3x\", \"datatype\": dbt.type_numeric()},\n    {\"name\": \"kurs2\", \"datatype\": dbt.type_numeric()},\n    {\"name\": \"kurs3\", \"datatype\": dbt.type_numeric()},\n    {\"name\": \"kursf\", \"datatype\": dbt.type_numeric()},\n    {\"name\": \"kurst\", \"datatype\": dbt.type_string()},\n    {\"name\": \"kursx\", \"datatype\": dbt.type_numeric()},\n    {\"name\": \"kuty2\", \"datatype\": dbt.type_string()},\n    {\"name\": \"kuty3\", \"datatype\": dbt.type_string()},\n    {\"name\": \"kzkrs\", \"datatype\": dbt.type_numeric()},\n    {\"name\": \"kzwrs\", \"datatype\": dbt.type_string()},\n    {\"name\": \"ldgrp\", \"datatype\": dbt.type_string()},\n    {\"name\": \"lotkz\", \"datatype\": dbt.type_string()},\n    {\"name\": \"mandt\", \"datatype\": dbt.type_string()},\n    {\"name\": \"monat\", \"datatype\": dbt.type_string()},\n    {\"name\": \"numpg\", \"datatype\": dbt.type_string()},\n    {\"name\": \"offset_refer_dat\", \"datatype\": dbt.type_string()},\n    {\"name\": \"offset_status\", \"datatype\": dbt.type_string()},\n    {\"name\": \"penrc\", \"datatype\": dbt.type_string()},\n    {\"name\": \"ppnam\", \"datatype\": dbt.type_string()},\n    {\"name\": \"propmano\", \"datatype\": dbt.type_string()},\n    {\"name\": \"psoak\", \"datatype\": dbt.type_string()},\n    {\"name\": \"psobt\", \"datatype\": dbt.type_string()},\n    {\"name\": \"psodt\", \"datatype\": dbt.type_string()},\n    {\"name\": \"psofn\", \"datatype\": dbt.type_string()},\n    {\"name\": \"psoks\", \"datatype\": dbt.type_string()},\n    {\"name\": \"psosg\", \"datatype\": dbt.type_string()},\n    {\"name\": \"psotm\", \"datatype\": dbt.type_string()},\n    {\"name\": \"psoty\", \"datatype\": dbt.type_string()},\n    {\"name\": \"psozl\", \"datatype\": dbt.type_string()},\n    {\"name\": \"reindat\", \"datatype\": dbt.type_string()},\n    {\"name\": \"resubmission\", \"datatype\": dbt.type_string()},\n    {\"name\": \"rldnr\", \"datatype\": dbt.type_string()},\n    {\"name\": \"sampled\", \"datatype\": dbt.type_string()},\n    {\"name\": \"sname\", \"datatype\": dbt.type_string()},\n    {\"name\": \"ssblk\", \"datatype\": dbt.type_string()},\n    {\"name\": \"stblg\", \"datatype\": dbt.type_string()},\n    {\"name\": \"stgrd\", \"datatype\": dbt.type_string()},\n    {\"name\": \"stjah\", \"datatype\": dbt.type_string()},\n    {\"name\": \"stodt\", \"datatype\": dbt.type_string()},\n    {\"name\": \"subset\", \"datatype\": dbt.type_string()},\n    {\"name\": \"tcode\", \"datatype\": dbt.type_string()},\n    {\"name\": \"txkrs\", \"datatype\": dbt.type_numeric()},\n    {\"name\": \"umrd2\", \"datatype\": dbt.type_string()},\n    {\"name\": \"umrd3\", \"datatype\": dbt.type_string()},\n    {\"name\": \"upddt\", \"datatype\": dbt.type_string()},\n    {\"name\": \"usnam\", \"datatype\": dbt.type_string()},\n    {\"name\": \"vatdate\", \"datatype\": dbt.type_string()},\n    {\"name\": \"waers\", \"datatype\": dbt.type_string()},\n    {\"name\": \"wwert\", \"datatype\": dbt.type_string()},\n    {\"name\": \"xblnr\", \"datatype\": dbt.type_string()},\n    {\"name\": \"xblnr_alt\", \"datatype\": dbt.type_string()},\n    {\"name\": \"xmca\", \"datatype\": dbt.type_string()},\n    {\"name\": \"xmwst\", \"datatype\": dbt.type_string()},\n    {\"name\": \"xnetb\", \"datatype\": dbt.type_string()},\n    {\"name\": \"xref1_hd\", \"datatype\": dbt.type_string()},\n    {\"name\": \"xref2_hd\", \"datatype\": dbt.type_string()},\n    {\"name\": \"xreorg\", \"datatype\": dbt.type_string()},\n    {\"name\": \"xreversal\", \"datatype\": dbt.type_string()},\n    {\"name\": \"xrueb\", \"datatype\": dbt.type_string()},\n    {\"name\": \"xsnet\", \"datatype\": dbt.type_string()},\n    {\"name\": \"xsplit\", \"datatype\": dbt.type_string()},\n    {\"name\": \"xstov\", \"datatype\": dbt.type_string()},\n    {\"name\": \"xusvr\", \"datatype\": dbt.type_string()},\n    {\"name\": \"xwvof\", \"datatype\": dbt.type_string()}\n] %}\n\n{{ return(columns) }}\n\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.type_numeric", "macro.dbt.type_timestamp", "macro.dbt.type_string"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1756850323.5784988, "supported_languages": null}, "macro.sap.get_t161t_columns": {"name": "get_t161t_columns", "resource_type": "macro", "package_name": "sap", "path": "macros/get_column_macros/get_t161t_columns.sql", "original_file_path": "macros/get_column_macros/get_t161t_columns.sql", "unique_id": "macro.sap.get_t161t_columns", "macro_sql": "{% macro get_t161t_columns() %}\n\n{% set columns = [\n    {\"name\": \"_fivetran_deleted\", \"datatype\": \"boolean\"},\n    {\"name\": \"_fivetran_rowid\", \"datatype\": dbt.type_numeric()},\n    {\"name\": \"_fivetran_synced\", \"datatype\": dbt.type_timestamp()},\n    {\"name\": \"batxt\", \"datatype\": dbt.type_string()},\n    {\"name\": \"bsart\", \"datatype\": dbt.type_string()},\n    {\"name\": \"bstyp\", \"datatype\": dbt.type_string()},\n    {\"name\": \"mandt\", \"datatype\": dbt.type_string()},\n    {\"name\": \"spras\", \"datatype\": dbt.type_string()}\n] %}\n\n{{ return(columns) }}\n\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.type_numeric", "macro.dbt.type_timestamp", "macro.dbt.type_string"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1756850323.5805233, "supported_languages": null}, "macro.sap.get_bseg_columns": {"name": "get_bseg_columns", "resource_type": "macro", "package_name": "sap", "path": "macros/get_column_macros/get_bseg_columns.sql", "original_file_path": "macros/get_column_macros/get_bseg_columns.sql", "unique_id": "macro.sap.get_bseg_columns", "macro_sql": "{% macro get_bseg_columns() %}\n\n{% set columns = [\n    {\"name\": \"_fivetran_deleted\", \"datatype\": \"boolean\"},\n    {\"name\": \"_fivetran_rowid\", \"datatype\": dbt.type_numeric()},\n    {\"name\": \"_fivetran_synced\", \"datatype\": dbt.type_timestamp()},\n    {\"name\": \"abper\", \"datatype\": dbt.type_string()},\n    {\"name\": \"absbt\", \"datatype\": dbt.type_numeric()},\n    {\"name\": \"agzei\", \"datatype\": dbt.type_numeric()},\n    {\"name\": \"altkt\", \"datatype\": dbt.type_string()},\n    {\"name\": \"anbwa\", \"datatype\": dbt.type_string()},\n    {\"name\": \"anfae\", \"datatype\": dbt.type_string()},\n    {\"name\": \"anfbj\", \"datatype\": dbt.type_string()},\n    {\"name\": \"anfbn\", \"datatype\": dbt.type_string()},\n    {\"name\": \"anfbu\", \"datatype\": dbt.type_string()},\n    {\"name\": \"anln1\", \"datatype\": dbt.type_string()},\n    {\"name\": \"anln2\", \"datatype\": dbt.type_string()},\n    {\"name\": \"aplzl\", \"datatype\": dbt.type_string()},\n    {\"name\": \"aufnr\", \"datatype\": dbt.type_string()},\n    {\"name\": \"aufpl\", \"datatype\": dbt.type_string()},\n    {\"name\": \"augbl\", \"datatype\": dbt.type_string()},\n    {\"name\": \"augcp\", \"datatype\": dbt.type_string()},\n    {\"name\": \"augdt\", \"datatype\": dbt.type_string()},\n    {\"name\": \"auggj\", \"datatype\": dbt.type_string()},\n    {\"name\": \"bdif2\", \"datatype\": dbt.type_numeric()},\n    {\"name\": \"bdif3\", \"datatype\": dbt.type_numeric()},\n    {\"name\": \"bdiff\", \"datatype\": dbt.type_numeric()},\n    {\"name\": \"belnr\", \"datatype\": dbt.type_string()},\n    {\"name\": \"bewar\", \"datatype\": dbt.type_string()},\n    {\"name\": \"blnbt\", \"datatype\": dbt.type_numeric()},\n    {\"name\": \"blnkz\", \"datatype\": dbt.type_string()},\n    {\"name\": \"blnpz\", \"datatype\": dbt.type_numeric()},\n    {\"name\": \"bonfb\", \"datatype\": dbt.type_numeric()},\n    {\"name\": \"bpmng\", \"datatype\": dbt.type_numeric()},\n    {\"name\": \"bprme\", \"datatype\": dbt.type_string()},\n    {\"name\": \"bschl\", \"datatype\": dbt.type_string()},\n    {\"name\": \"btype\", \"datatype\": dbt.type_string()},\n    {\"name\": \"bualt\", \"datatype\": dbt.type_numeric()},\n    {\"name\": \"budget_pd\", \"datatype\": dbt.type_string()},\n    {\"name\": \"bukrs\", \"datatype\": dbt.type_string()},\n    {\"name\": \"bupla\", \"datatype\": dbt.type_string()},\n    {\"name\": \"bustw\", \"datatype\": dbt.type_string()},\n    {\"name\": \"buzei\", \"datatype\": dbt.type_string()},\n    {\"name\": \"buzid\", \"datatype\": dbt.type_string()},\n    {\"name\": \"bvtyp\", \"datatype\": dbt.type_string()},\n    {\"name\": \"bwkey\", \"datatype\": dbt.type_string()},\n    {\"name\": \"bwtar\", \"datatype\": dbt.type_string()},\n    {\"name\": \"bzdat\", \"datatype\": dbt.type_string()},\n    {\"name\": \"ccbtc\", \"datatype\": dbt.type_string()},\n    {\"name\": \"cession_kz\", \"datatype\": dbt.type_string()},\n    {\"name\": \"dabrz\", \"datatype\": dbt.type_string()},\n    {\"name\": \"depot\", \"datatype\": dbt.type_string()},\n    {\"name\": \"diekz\", \"datatype\": dbt.type_string()},\n    {\"name\": \"disbj\", \"datatype\": dbt.type_string()},\n    {\"name\": \"disbn\", \"datatype\": dbt.type_string()},\n    {\"name\": \"disbz\", \"datatype\": dbt.type_string()},\n    {\"name\": \"dmb21\", \"datatype\": dbt.type_numeric()},\n    {\"name\": \"dmb22\", \"datatype\": dbt.type_numeric()},\n    {\"name\": \"dmb23\", \"datatype\": dbt.type_numeric()},\n    {\"name\": \"dmb31\", \"datatype\": dbt.type_numeric()},\n    {\"name\": \"dmb32\", \"datatype\": dbt.type_numeric()},\n    {\"name\": \"dmb33\", \"datatype\": dbt.type_numeric()},\n    {\"name\": \"dmbe2\", \"datatype\": dbt.type_numeric()},\n    {\"name\": \"dmbe3\", \"datatype\": dbt.type_numeric()},\n    {\"name\": \"dmbt1\", \"datatype\": dbt.type_numeric()},\n    {\"name\": \"dmbt2\", \"datatype\": dbt.type_numeric()},\n    {\"name\": \"dmbt3\", \"datatype\": dbt.type_numeric()},\n    {\"name\": \"dmbtr\", \"datatype\": dbt.type_numeric()},\n    {\"name\": \"docln\", \"datatype\": dbt.type_string()},\n    {\"name\": \"dtws1\", \"datatype\": dbt.type_string()},\n    {\"name\": \"dtws2\", \"datatype\": dbt.type_string()},\n    {\"name\": \"dtws3\", \"datatype\": dbt.type_string()},\n    {\"name\": \"dtws4\", \"datatype\": dbt.type_string()},\n    {\"name\": \"ebeln\", \"datatype\": dbt.type_string()},\n    {\"name\": \"ebelp\", \"datatype\": dbt.type_string()},\n    {\"name\": \"egbld\", \"datatype\": dbt.type_string()},\n    {\"name\": \"eglld\", \"datatype\": dbt.type_string()},\n    {\"name\": \"egrup\", \"datatype\": dbt.type_string()},\n    {\"name\": \"elikz\", \"datatype\": dbt.type_string()},\n    {\"name\": \"empfb\", \"datatype\": dbt.type_string()},\n    {\"name\": \"erfme\", \"datatype\": dbt.type_string()},\n    {\"name\": \"erfmg\", \"datatype\": dbt.type_numeric()},\n    {\"name\": \"esrnr\", \"datatype\": dbt.type_string()},\n    {\"name\": \"esrpz\", \"datatype\": dbt.type_string()},\n    {\"name\": \"esrre\", \"datatype\": dbt.type_string()},\n    {\"name\": \"eten2\", \"datatype\": dbt.type_string()},\n    {\"name\": \"etype\", \"datatype\": dbt.type_string()},\n    {\"name\": \"fastpay\", \"datatype\": dbt.type_string()},\n    {\"name\": \"fdgrp\", \"datatype\": dbt.type_string()},\n    {\"name\": \"fdlev\", \"datatype\": dbt.type_string()},\n    {\"name\": \"fdtag\", \"datatype\": dbt.type_string()},\n    {\"name\": \"fdwbt\", \"datatype\": dbt.type_numeric()},\n    {\"name\": \"filkd\", \"datatype\": dbt.type_string()},\n    {\"name\": \"fipos\", \"datatype\": dbt.type_string()},\n    {\"name\": \"fistl\", \"datatype\": dbt.type_string()},\n    {\"name\": \"fkber\", \"datatype\": dbt.type_string()},\n    {\"name\": \"fkber_long\", \"datatype\": dbt.type_string()},\n    {\"name\": \"fkont\", \"datatype\": dbt.type_string()},\n    {\"name\": \"fmfgus_key\", \"datatype\": dbt.type_string()},\n    {\"name\": \"fmxdocln\", \"datatype\": dbt.type_string()},\n    {\"name\": \"fmxdocnr\", \"datatype\": dbt.type_string()},\n    {\"name\": \"fmxyear\", \"datatype\": dbt.type_string()},\n    {\"name\": \"fmxzekkn\", \"datatype\": dbt.type_string()},\n    {\"name\": \"fwbas\", \"datatype\": dbt.type_numeric()},\n    {\"name\": \"fwzuz\", \"datatype\": dbt.type_numeric()},\n    {\"name\": \"gbetr\", \"datatype\": dbt.type_numeric()},\n    {\"name\": \"geber\", \"datatype\": dbt.type_string()},\n    {\"name\": \"gityp\", \"datatype\": dbt.type_string()},\n    {\"name\": \"gjahr\", \"datatype\": dbt.type_string()},\n    {\"name\": \"glupm\", \"datatype\": dbt.type_string()},\n    {\"name\": \"gmvkz\", \"datatype\": dbt.type_string()},\n    {\"name\": \"grant_nbr\", \"datatype\": dbt.type_string()},\n    {\"name\": \"gricd\", \"datatype\": dbt.type_string()},\n    {\"name\": \"grirg\", \"datatype\": dbt.type_string()},\n    {\"name\": \"gsber\", \"datatype\": dbt.type_string()},\n    {\"name\": \"gvtyp\", \"datatype\": dbt.type_string()},\n    {\"name\": \"hbkid\", \"datatype\": dbt.type_string()},\n    {\"name\": \"hkont\", \"datatype\": dbt.type_string()},\n    {\"name\": \"hktid\", \"datatype\": dbt.type_string()},\n    {\"name\": \"hrkft\", \"datatype\": dbt.type_string()},\n    {\"name\": \"hwbas\", \"datatype\": dbt.type_numeric()},\n    {\"name\": \"hwmet\", \"datatype\": dbt.type_string()},\n    {\"name\": \"hwzuz\", \"datatype\": dbt.type_numeric()},\n    {\"name\": \"hzuon\", \"datatype\": dbt.type_string()},\n    {\"name\": \"idxsp\", \"datatype\": dbt.type_string()},\n    {\"name\": \"ignr_ivref\", \"datatype\": dbt.type_string()},\n    {\"name\": \"imkey\", \"datatype\": dbt.type_string()},\n    {\"name\": \"intreno\", \"datatype\": dbt.type_string()},\n    {\"name\": \"j_1tpbupl\", \"datatype\": dbt.type_string()},\n    {\"name\": \"kblnr\", \"datatype\": dbt.type_string()},\n    {\"name\": \"kblpos\", \"datatype\": dbt.type_string()},\n    {\"name\": \"kidno\", \"datatype\": dbt.type_string()},\n    {\"name\": \"kkber\", \"datatype\": dbt.type_string()},\n    {\"name\": \"klibt\", \"datatype\": dbt.type_numeric()},\n    {\"name\": \"koart\", \"datatype\": dbt.type_string()},\n    {\"name\": \"kokrs\", \"datatype\": dbt.type_string()},\n    {\"name\": \"kontl\", \"datatype\": dbt.type_string()},\n    {\"name\": \"kontt\", \"datatype\": dbt.type_string()},\n    {\"name\": \"kostl\", \"datatype\": dbt.type_string()},\n    {\"name\": \"kstar\", \"datatype\": dbt.type_string()},\n    {\"name\": \"kstrg\", \"datatype\": dbt.type_string()},\n    {\"name\": \"ktosl\", \"datatype\": dbt.type_string()},\n    {\"name\": \"kunnr\", \"datatype\": dbt.type_string()},\n    {\"name\": \"kursr\", \"datatype\": dbt.type_numeric()},\n    {\"name\": \"kzbtr\", \"datatype\": dbt.type_numeric()},\n    {\"name\": \"landl\", \"datatype\": dbt.type_string()},\n    {\"name\": \"lifnr\", \"datatype\": dbt.type_string()},\n    {\"name\": \"linfv\", \"datatype\": dbt.type_string()},\n    {\"name\": \"lnran\", \"datatype\": dbt.type_string()},\n    {\"name\": \"lokkt\", \"datatype\": dbt.type_string()},\n    {\"name\": \"lstar\", \"datatype\": dbt.type_string()},\n    {\"name\": \"lzbkz\", \"datatype\": dbt.type_string()},\n    {\"name\": \"maber\", \"datatype\": dbt.type_string()},\n    {\"name\": \"madat\", \"datatype\": dbt.type_string()},\n    {\"name\": \"mandt\", \"datatype\": dbt.type_string()},\n    {\"name\": \"mansp\", \"datatype\": dbt.type_string()},\n    {\"name\": \"manst\", \"datatype\": dbt.type_string()},\n    {\"name\": \"matnr\", \"datatype\": dbt.type_string()},\n    {\"name\": \"measure\", \"datatype\": dbt.type_string()},\n    {\"name\": \"meins\", \"datatype\": dbt.type_string()},\n    {\"name\": \"menge\", \"datatype\": dbt.type_numeric()},\n    {\"name\": \"mndid\", \"datatype\": dbt.type_string()},\n    {\"name\": \"mschl\", \"datatype\": dbt.type_string()},\n    {\"name\": \"mwart\", \"datatype\": dbt.type_string()},\n    {\"name\": \"mwsk1\", \"datatype\": dbt.type_string()},\n    {\"name\": \"mwsk2\", \"datatype\": dbt.type_string()},\n    {\"name\": \"mwsk3\", \"datatype\": dbt.type_string()},\n    {\"name\": \"mwskz\", \"datatype\": dbt.type_string()},\n    {\"name\": \"mwst2\", \"datatype\": dbt.type_numeric()},\n    {\"name\": \"mwst3\", \"datatype\": dbt.type_numeric()},\n    {\"name\": \"mwsts\", \"datatype\": dbt.type_numeric()},\n    {\"name\": \"navfw\", \"datatype\": dbt.type_numeric()},\n    {\"name\": \"navh2\", \"datatype\": dbt.type_numeric()},\n    {\"name\": \"navh3\", \"datatype\": dbt.type_numeric()},\n    {\"name\": \"navhw\", \"datatype\": dbt.type_numeric()},\n    {\"name\": \"nebtr\", \"datatype\": dbt.type_numeric()},\n    {\"name\": \"nplnr\", \"datatype\": dbt.type_string()},\n    {\"name\": \"nprei\", \"datatype\": dbt.type_numeric()},\n    {\"name\": \"obzei\", \"datatype\": dbt.type_string()},\n    {\"name\": \"paobjnr\", \"datatype\": dbt.type_string()},\n    {\"name\": \"pargb\", \"datatype\": dbt.type_string()},\n    {\"name\": \"pasubnr\", \"datatype\": dbt.type_string()},\n    {\"name\": \"pays_prov\", \"datatype\": dbt.type_string()},\n    {\"name\": \"pays_tran\", \"datatype\": dbt.type_string()},\n    {\"name\": \"pbudget_pd\", \"datatype\": dbt.type_string()},\n    {\"name\": \"peinh\", \"datatype\": dbt.type_numeric()},\n    {\"name\": \"pendays\", \"datatype\": dbt.type_numeric()},\n    {\"name\": \"penfc\", \"datatype\": dbt.type_numeric()},\n    {\"name\": \"penlc1\", \"datatype\": dbt.type_numeric()},\n    {\"name\": \"penlc2\", \"datatype\": dbt.type_numeric()},\n    {\"name\": \"penlc3\", \"datatype\": dbt.type_numeric()},\n    {\"name\": \"penrc\", \"datatype\": dbt.type_string()},\n    {\"name\": \"pernr\", \"datatype\": dbt.type_string()},\n    {\"name\": \"perop_beg\", \"datatype\": dbt.type_string()},\n    {\"name\": \"perop_end\", \"datatype\": dbt.type_string()},\n    {\"name\": \"pfkber\", \"datatype\": dbt.type_string()},\n    {\"name\": \"pgeber\", \"datatype\": dbt.type_string()},\n    {\"name\": \"pgrant_nbr\", \"datatype\": dbt.type_string()},\n    {\"name\": \"popts\", \"datatype\": dbt.type_numeric()},\n    {\"name\": \"posn2\", \"datatype\": dbt.type_string()},\n    {\"name\": \"ppa_ex_ind\", \"datatype\": dbt.type_string()},\n    {\"name\": \"ppdif2\", \"datatype\": dbt.type_numeric()},\n    {\"name\": \"ppdif3\", \"datatype\": dbt.type_numeric()},\n    {\"name\": \"ppdiff\", \"datatype\": dbt.type_numeric()},\n    {\"name\": \"pprct\", \"datatype\": dbt.type_string()},\n    {\"name\": \"prctr\", \"datatype\": dbt.type_string()},\n    {\"name\": \"prodper\", \"datatype\": dbt.type_string()},\n    {\"name\": \"projk\", \"datatype\": dbt.type_string()},\n    {\"name\": \"projn\", \"datatype\": dbt.type_string()},\n    {\"name\": \"prznr\", \"datatype\": dbt.type_string()},\n    {\"name\": \"psalt\", \"datatype\": dbt.type_string()},\n    {\"name\": \"psegment\", \"datatype\": dbt.type_string()},\n    {\"name\": \"pswbt\", \"datatype\": dbt.type_numeric()},\n    {\"name\": \"pswsl\", \"datatype\": dbt.type_string()},\n    {\"name\": \"pyamt\", \"datatype\": dbt.type_numeric()},\n    {\"name\": \"pycur\", \"datatype\": dbt.type_string()},\n    {\"name\": \"qbshb\", \"datatype\": dbt.type_numeric()},\n    {\"name\": \"qsfbt\", \"datatype\": dbt.type_numeric()},\n    {\"name\": \"qsshb\", \"datatype\": dbt.type_numeric()},\n    {\"name\": \"qsskz\", \"datatype\": dbt.type_string()},\n    {\"name\": \"qsznr\", \"datatype\": dbt.type_string()},\n    {\"name\": \"rdif2\", \"datatype\": dbt.type_numeric()},\n    {\"name\": \"rdif3\", \"datatype\": dbt.type_numeric()},\n    {\"name\": \"rdiff\", \"datatype\": dbt.type_numeric()},\n    {\"name\": \"re_account\", \"datatype\": dbt.type_string()},\n    {\"name\": \"re_bukrs\", \"datatype\": dbt.type_string()},\n    {\"name\": \"rebzg\", \"datatype\": dbt.type_string()},\n    {\"name\": \"rebzj\", \"datatype\": dbt.type_string()},\n    {\"name\": \"rebzt\", \"datatype\": dbt.type_string()},\n    {\"name\": \"rebzz\", \"datatype\": dbt.type_string()},\n    {\"name\": \"recid\", \"datatype\": dbt.type_string()},\n    {\"name\": \"recrf\", \"datatype\": dbt.type_string()},\n    {\"name\": \"rewrt\", \"datatype\": dbt.type_numeric()},\n    {\"name\": \"rewwr\", \"datatype\": dbt.type_numeric()},\n    {\"name\": \"rfzei\", \"datatype\": dbt.type_string()},\n    {\"name\": \"rpacq\", \"datatype\": dbt.type_string()},\n    {\"name\": \"rstgr\", \"datatype\": dbt.type_string()},\n    {\"name\": \"ryacq\", \"datatype\": dbt.type_string()},\n    {\"name\": \"saknr\", \"datatype\": dbt.type_string()},\n    {\"name\": \"samnr\", \"datatype\": dbt.type_string()},\n    {\"name\": \"sctax\", \"datatype\": dbt.type_numeric()},\n    {\"name\": \"secco\", \"datatype\": dbt.type_string()},\n    {\"name\": \"segment\", \"datatype\": dbt.type_string()},\n    {\"name\": \"sgtxt\", \"datatype\": dbt.type_string()},\n    {\"name\": \"shkzg\", \"datatype\": dbt.type_string()},\n    {\"name\": \"shzuz\", \"datatype\": dbt.type_string()},\n    {\"name\": \"skfbt\", \"datatype\": dbt.type_numeric()},\n    {\"name\": \"sknt2\", \"datatype\": dbt.type_numeric()},\n    {\"name\": \"sknt3\", \"datatype\": dbt.type_numeric()},\n    {\"name\": \"sknto\", \"datatype\": dbt.type_numeric()},\n    {\"name\": \"spgrc\", \"datatype\": dbt.type_string()},\n    {\"name\": \"spgrg\", \"datatype\": dbt.type_string()},\n    {\"name\": \"spgrm\", \"datatype\": dbt.type_string()},\n    {\"name\": \"spgrp\", \"datatype\": dbt.type_string()},\n    {\"name\": \"spgrq\", \"datatype\": dbt.type_string()},\n    {\"name\": \"spgrs\", \"datatype\": dbt.type_string()},\n    {\"name\": \"spgrt\", \"datatype\": dbt.type_string()},\n    {\"name\": \"spgrv\", \"datatype\": dbt.type_string()},\n    {\"name\": \"squan\", \"datatype\": dbt.type_string()},\n    {\"name\": \"srtype\", \"datatype\": dbt.type_string()},\n    {\"name\": \"stbuk\", \"datatype\": dbt.type_string()},\n    {\"name\": \"stceg\", \"datatype\": dbt.type_string()},\n    {\"name\": \"stekz\", \"datatype\": dbt.type_string()},\n    {\"name\": \"sttax\", \"datatype\": dbt.type_numeric()},\n    {\"name\": \"taxps\", \"datatype\": dbt.type_string()},\n    {\"name\": \"tbtkz\", \"datatype\": dbt.type_string()},\n    {\"name\": \"txbfw\", \"datatype\": dbt.type_numeric()},\n    {\"name\": \"txbh2\", \"datatype\": dbt.type_numeric()},\n    {\"name\": \"txbh3\", \"datatype\": dbt.type_numeric()},\n    {\"name\": \"txbhw\", \"datatype\": dbt.type_numeric()},\n    {\"name\": \"txdat\", \"datatype\": dbt.type_string()},\n    {\"name\": \"txgrp\", \"datatype\": dbt.type_string()},\n    {\"name\": \"txjcd\", \"datatype\": dbt.type_string()},\n    {\"name\": \"umsks\", \"datatype\": dbt.type_string()},\n    {\"name\": \"umskz\", \"datatype\": dbt.type_string()},\n    {\"name\": \"uzawe\", \"datatype\": dbt.type_string()},\n    {\"name\": \"valut\", \"datatype\": dbt.type_string()},\n    {\"name\": \"vbel2\", \"datatype\": dbt.type_string()},\n    {\"name\": \"vbeln\", \"datatype\": dbt.type_string()},\n    {\"name\": \"vbewa\", \"datatype\": dbt.type_string()},\n    {\"name\": \"vbund\", \"datatype\": dbt.type_string()},\n    {\"name\": \"vertn\", \"datatype\": dbt.type_string()},\n    {\"name\": \"vertt\", \"datatype\": dbt.type_string()},\n    {\"name\": \"vname\", \"datatype\": dbt.type_string()},\n    {\"name\": \"vorgn\", \"datatype\": dbt.type_string()},\n    {\"name\": \"vprsv\", \"datatype\": dbt.type_string()},\n    {\"name\": \"vptnr\", \"datatype\": dbt.type_string()},\n    {\"name\": \"vrsdt\", \"datatype\": dbt.type_string()},\n    {\"name\": \"vrskz\", \"datatype\": dbt.type_string()},\n    {\"name\": \"werks\", \"datatype\": dbt.type_string()},\n    {\"name\": \"wmwst\", \"datatype\": dbt.type_numeric()},\n    {\"name\": \"wrbt1\", \"datatype\": dbt.type_numeric()},\n    {\"name\": \"wrbt2\", \"datatype\": dbt.type_numeric()},\n    {\"name\": \"wrbt3\", \"datatype\": dbt.type_numeric()},\n    {\"name\": \"wrbtr\", \"datatype\": dbt.type_numeric()},\n    {\"name\": \"wskto\", \"datatype\": dbt.type_numeric()},\n    {\"name\": \"wverw\", \"datatype\": dbt.type_string()},\n    {\"name\": \"xanet\", \"datatype\": dbt.type_string()},\n    {\"name\": \"xauto\", \"datatype\": dbt.type_string()},\n    {\"name\": \"xbilk\", \"datatype\": dbt.type_string()},\n    {\"name\": \"xcpdd\", \"datatype\": dbt.type_string()},\n    {\"name\": \"xegdr\", \"datatype\": dbt.type_string()},\n    {\"name\": \"xfakt\", \"datatype\": dbt.type_string()},\n    {\"name\": \"xfrge_bseg\", \"datatype\": dbt.type_string()},\n    {\"name\": \"xhkom\", \"datatype\": dbt.type_string()},\n    {\"name\": \"xhres\", \"datatype\": dbt.type_string()},\n    {\"name\": \"xinve\", \"datatype\": dbt.type_string()},\n    {\"name\": \"xkres\", \"datatype\": dbt.type_string()},\n    {\"name\": \"xlgclr\", \"datatype\": dbt.type_string()},\n    {\"name\": \"xncop\", \"datatype\": dbt.type_string()},\n    {\"name\": \"xnegp\", \"datatype\": dbt.type_string()},\n    {\"name\": \"xopvw\", \"datatype\": dbt.type_string()},\n    {\"name\": \"xpanz\", \"datatype\": dbt.type_string()},\n    {\"name\": \"xpypr\", \"datatype\": dbt.type_string()},\n    {\"name\": \"xragl\", \"datatype\": dbt.type_string()},\n    {\"name\": \"xref1\", \"datatype\": dbt.type_string()},\n    {\"name\": \"xref2\", \"datatype\": dbt.type_string()},\n    {\"name\": \"xref3\", \"datatype\": dbt.type_string()},\n    {\"name\": \"xsauf\", \"datatype\": dbt.type_string()},\n    {\"name\": \"xserg\", \"datatype\": dbt.type_string()},\n    {\"name\": \"xskrl\", \"datatype\": dbt.type_string()},\n    {\"name\": \"xskst\", \"datatype\": dbt.type_string()},\n    {\"name\": \"xspro\", \"datatype\": dbt.type_string()},\n    {\"name\": \"xuman\", \"datatype\": dbt.type_string()},\n    {\"name\": \"xumsw\", \"datatype\": dbt.type_string()},\n    {\"name\": \"xzahl\", \"datatype\": dbt.type_string()},\n    {\"name\": \"zbd1p\", \"datatype\": dbt.type_numeric()},\n    {\"name\": \"zbd1t\", \"datatype\": dbt.type_numeric()},\n    {\"name\": \"zbd2p\", \"datatype\": dbt.type_numeric()},\n    {\"name\": \"zbd2t\", \"datatype\": dbt.type_numeric()},\n    {\"name\": \"zbd3t\", \"datatype\": dbt.type_numeric()},\n    {\"name\": \"zbfix\", \"datatype\": dbt.type_string()},\n    {\"name\": \"zekkn\", \"datatype\": dbt.type_string()},\n    {\"name\": \"zfbdt\", \"datatype\": dbt.type_string()},\n    {\"name\": \"zinkz\", \"datatype\": dbt.type_string()},\n    {\"name\": \"zlsch\", \"datatype\": dbt.type_string()},\n    {\"name\": \"zlspr\", \"datatype\": dbt.type_string()},\n    {\"name\": \"zolld\", \"datatype\": dbt.type_string()},\n    {\"name\": \"zollt\", \"datatype\": dbt.type_string()},\n    {\"name\": \"zterm\", \"datatype\": dbt.type_string()},\n    {\"name\": \"zumsk\", \"datatype\": dbt.type_string()},\n    {\"name\": \"zuonr\", \"datatype\": dbt.type_string()},\n    {\"name\": \"zzbuspartn\", \"datatype\": dbt.type_string()},\n    {\"name\": \"zzchan\", \"datatype\": dbt.type_string()},\n    {\"name\": \"zzlob\", \"datatype\": dbt.type_string()},\n    {\"name\": \"zzloca\", \"datatype\": dbt.type_string()},\n    {\"name\": \"zzproduct\", \"datatype\": dbt.type_string()},\n    {\"name\": \"zzregion\", \"datatype\": dbt.type_string()},\n    {\"name\": \"zzspreg\", \"datatype\": dbt.type_string()},\n    {\"name\": \"zzstate\", \"datatype\": dbt.type_string()},\n    {\"name\": \"zzuserfld1\", \"datatype\": dbt.type_string()},\n    {\"name\": \"zzuserfld2\", \"datatype\": dbt.type_string()},\n    {\"name\": \"zzuserfld3\", \"datatype\": dbt.type_string()}\n] %}\n\n{{ return(columns) }}\n\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.type_numeric", "macro.dbt.type_timestamp", "macro.dbt.type_string"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1756850323.6414242, "supported_languages": null}, "macro.sap.get_pa0007_columns": {"name": "get_pa0007_columns", "resource_type": "macro", "package_name": "sap", "path": "macros/get_column_macros/get_pa0007_columns.sql", "original_file_path": "macros/get_column_macros/get_pa0007_columns.sql", "unique_id": "macro.sap.get_pa0007_columns", "macro_sql": "{% macro get_pa0007_columns() %}\n\n{% set columns = [\n    {\"name\": \"_fivetran_deleted\", \"datatype\": \"boolean\"},\n    {\"name\": \"_fivetran_rowid\", \"datatype\": dbt.type_numeric()},\n    {\"name\": \"_fivetran_synced\", \"datatype\": dbt.type_timestamp()},\n    {\"name\": \"aedtm\", \"datatype\": dbt.type_string()},\n    {\"name\": \"arbst\", \"datatype\": dbt.type_numeric()},\n    {\"name\": \"awtyp\", \"datatype\": dbt.type_string()},\n    {\"name\": \"begda\", \"datatype\": dbt.type_string()},\n    {\"name\": \"dysch\", \"datatype\": dbt.type_string()},\n    {\"name\": \"empct\", \"datatype\": dbt.type_numeric()},\n    {\"name\": \"endda\", \"datatype\": dbt.type_string()},\n    {\"name\": \"flag1\", \"datatype\": dbt.type_string()},\n    {\"name\": \"flag2\", \"datatype\": dbt.type_string()},\n    {\"name\": \"flag3\", \"datatype\": dbt.type_string()},\n    {\"name\": \"flag4\", \"datatype\": dbt.type_string()},\n    {\"name\": \"grpvl\", \"datatype\": dbt.type_string()},\n    {\"name\": \"histo\", \"datatype\": dbt.type_string()},\n    {\"name\": \"itbld\", \"datatype\": dbt.type_string()},\n    {\"name\": \"itxex\", \"datatype\": dbt.type_string()},\n    {\"name\": \"jrstd\", \"datatype\": dbt.type_numeric()},\n    {\"name\": \"kztim\", \"datatype\": dbt.type_string()},\n    {\"name\": \"mandt\", \"datatype\": dbt.type_string()},\n    {\"name\": \"maxja\", \"datatype\": dbt.type_numeric()},\n    {\"name\": \"maxmo\", \"datatype\": dbt.type_numeric()},\n    {\"name\": \"maxta\", \"datatype\": dbt.type_numeric()},\n    {\"name\": \"maxwo\", \"datatype\": dbt.type_numeric()},\n    {\"name\": \"minja\", \"datatype\": dbt.type_numeric()},\n    {\"name\": \"minmo\", \"datatype\": dbt.type_numeric()},\n    {\"name\": \"minta\", \"datatype\": dbt.type_numeric()},\n    {\"name\": \"minwo\", \"datatype\": dbt.type_numeric()},\n    {\"name\": \"mostd\", \"datatype\": dbt.type_numeric()},\n    {\"name\": \"objps\", \"datatype\": dbt.type_string()},\n    {\"name\": \"ordex\", \"datatype\": dbt.type_string()},\n    {\"name\": \"pernr\", \"datatype\": dbt.type_string()},\n    {\"name\": \"preas\", \"datatype\": dbt.type_string()},\n    {\"name\": \"refex\", \"datatype\": dbt.type_string()},\n    {\"name\": \"rese1\", \"datatype\": dbt.type_string()},\n    {\"name\": \"rese2\", \"datatype\": dbt.type_string()},\n    {\"name\": \"schkz\", \"datatype\": dbt.type_string()},\n    {\"name\": \"seqnr\", \"datatype\": dbt.type_string()},\n    {\"name\": \"sprps\", \"datatype\": dbt.type_string()},\n    {\"name\": \"subty\", \"datatype\": dbt.type_string()},\n    {\"name\": \"teilk\", \"datatype\": dbt.type_string()},\n    {\"name\": \"uname\", \"datatype\": dbt.type_string()},\n    {\"name\": \"wkwdy\", \"datatype\": dbt.type_numeric()},\n    {\"name\": \"wostd\", \"datatype\": dbt.type_numeric()},\n    {\"name\": \"wweek\", \"datatype\": dbt.type_string()},\n    {\"name\": \"zterf\", \"datatype\": dbt.type_string()}\n] %}\n\n{{ return(columns) }}\n\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.type_numeric", "macro.dbt.type_timestamp", "macro.dbt.type_string"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1756850323.6500692, "supported_languages": null}, "macro.sap.get_ekbe_columns": {"name": "get_ekbe_columns", "resource_type": "macro", "package_name": "sap", "path": "macros/get_column_macros/get_ekbe_columns.sql", "original_file_path": "macros/get_column_macros/get_ekbe_columns.sql", "unique_id": "macro.sap.get_ekbe_columns", "macro_sql": "{% macro get_ekbe_columns() %}\n\n{% set columns = [\n    {\"name\": \"arewb\", \"datatype\": dbt.type_string()},\n    {\"name\": \"arewr\", \"datatype\": dbt.type_string()},\n    {\"name\": \"arewr_pop\", \"datatype\": dbt.type_string()},\n    {\"name\": \"areww\", \"datatype\": dbt.type_string()},\n    {\"name\": \"bamng\", \"datatype\": dbt.type_string()},\n    {\"name\": \"bekkn\", \"datatype\": dbt.type_string()},\n    {\"name\": \"belnr\", \"datatype\": dbt.type_string()},\n    {\"name\": \"bewtp\", \"datatype\": dbt.type_string()},\n    {\"name\": \"bldat\", \"datatype\": dbt.type_string()},\n    {\"name\": \"bpmng\", \"datatype\": dbt.type_string()},\n    {\"name\": \"bpmng_pop\", \"datatype\": dbt.type_string()},\n    {\"name\": \"bpweb\", \"datatype\": dbt.type_string()},\n    {\"name\": \"bpwes\", \"datatype\": dbt.type_string()},\n    {\"name\": \"budat\", \"datatype\": dbt.type_string()},\n    {\"name\": \"buzei\", \"datatype\": dbt.type_string()},\n    {\"name\": \"bwart\", \"datatype\": dbt.type_string()},\n    {\"name\": \"bwtar\", \"datatype\": dbt.type_string()},\n    {\"name\": \"charg\", \"datatype\": dbt.type_string()},\n    {\"name\": \"cpudt\", \"datatype\": dbt.type_string()},\n    {\"name\": \"cputm\", \"datatype\": dbt.type_string()},\n    {\"name\": \"dmbtr\", \"datatype\": dbt.type_string()},\n    {\"name\": \"dmbtr_pop\", \"datatype\": dbt.type_string()},\n    {\"name\": \"ebeln\", \"datatype\": dbt.type_string()},\n    {\"name\": \"ebelp\", \"datatype\": dbt.type_string()},\n    {\"name\": \"elikz\", \"datatype\": dbt.type_string()},\n    {\"name\": \"ematn\", \"datatype\": dbt.type_string()},\n    {\"name\": \"ernam\", \"datatype\": dbt.type_string()},\n    {\"name\": \"et_upd\", \"datatype\": dbt.type_string()},\n    {\"name\": \"etens\", \"datatype\": dbt.type_string()},\n    {\"name\": \"evere\", \"datatype\": dbt.type_string()},\n    {\"name\": \"fsh_collection\", \"datatype\": dbt.type_string()},\n    {\"name\": \"fsh_season\", \"datatype\": dbt.type_string()},\n    {\"name\": \"fsh_season_year\", \"datatype\": dbt.type_string()},\n    {\"name\": \"fsh_theme\", \"datatype\": dbt.type_string()},\n    {\"name\": \"gjahr\", \"datatype\": dbt.type_string()},\n    {\"name\": \"grund\", \"datatype\": dbt.type_string()},\n    {\"name\": \"hswae\", \"datatype\": dbt.type_string()},\n    {\"name\": \"hvr_change_time\", \"datatype\": dbt.type_string()},\n    {\"name\": \"hvr_is_deleted\", \"datatype\": dbt.type_int()},\n    {\"name\": \"introw\", \"datatype\": dbt.type_string()},\n    {\"name\": \"inv_item_origin\", \"datatype\": dbt.type_string()},\n    {\"name\": \"j_sc_die_comp_f\", \"datatype\": dbt.type_string()},\n    {\"name\": \"knumv\", \"datatype\": dbt.type_string()},\n    {\"name\": \"kudif\", \"datatype\": dbt.type_string()},\n    {\"name\": \"lemin\", \"datatype\": dbt.type_string()},\n    {\"name\": \"lfbnr\", \"datatype\": dbt.type_string()},\n    {\"name\": \"lfgja\", \"datatype\": dbt.type_string()},\n    {\"name\": \"lfpos\", \"datatype\": dbt.type_string()},\n    {\"name\": \"lsmeh\", \"datatype\": dbt.type_string()},\n    {\"name\": \"lsmng\", \"datatype\": dbt.type_string()},\n    {\"name\": \"mandt\", \"datatype\": dbt.type_string()},\n    {\"name\": \"matnr\", \"datatype\": dbt.type_string()},\n    {\"name\": \"menge\", \"datatype\": dbt.type_int()},\n    {\"name\": \"menge_pop\", \"datatype\": dbt.type_string()},\n    {\"name\": \"mwskz\", \"datatype\": dbt.type_string()},\n    {\"name\": \"packno\", \"datatype\": dbt.type_string()},\n    {\"name\": \"reewr\", \"datatype\": dbt.type_string()},\n    {\"name\": \"refwr\", \"datatype\": dbt.type_string()},\n    {\"name\": \"retamt_fc\", \"datatype\": dbt.type_string()},\n    {\"name\": \"retamt_lc\", \"datatype\": dbt.type_string()},\n    {\"name\": \"retamtp_fc\", \"datatype\": dbt.type_string()},\n    {\"name\": \"retamtp_lc\", \"datatype\": dbt.type_string()},\n    {\"name\": \"rewrb\", \"datatype\": dbt.type_string()},\n    {\"name\": \"saprl\", \"datatype\": dbt.type_string()},\n    {\"name\": \"sgt_scat\", \"datatype\": dbt.type_string()},\n    {\"name\": \"shkzg\", \"datatype\": dbt.type_string()},\n    {\"name\": \"srvpos\", \"datatype\": dbt.type_string()},\n    {\"name\": \"vbeln_st\", \"datatype\": dbt.type_string()},\n    {\"name\": \"vbelp_st\", \"datatype\": dbt.type_string()},\n    {\"name\": \"vgabe\", \"datatype\": dbt.type_string()},\n    {\"name\": \"waers\", \"datatype\": dbt.type_string()},\n    {\"name\": \"weora\", \"datatype\": dbt.type_string()},\n    {\"name\": \"werks\", \"datatype\": dbt.type_string()},\n    {\"name\": \"wesbb\", \"datatype\": dbt.type_string()},\n    {\"name\": \"wesbs\", \"datatype\": dbt.type_string()},\n    {\"name\": \"wkurs\", \"datatype\": dbt.type_string()},\n    {\"name\": \"wrbtr\", \"datatype\": dbt.type_string()},\n    {\"name\": \"wrbtr_pop\", \"datatype\": dbt.type_string()},\n    {\"name\": \"wrf_charstc1\", \"datatype\": dbt.type_string()},\n    {\"name\": \"wrf_charstc2\", \"datatype\": dbt.type_string()},\n    {\"name\": \"wrf_charstc3\", \"datatype\": dbt.type_string()},\n    {\"name\": \"xblnr\", \"datatype\": dbt.type_string()},\n    {\"name\": \"xmacc\", \"datatype\": dbt.type_string()},\n    {\"name\": \"xunpl\", \"datatype\": dbt.type_string()},\n    {\"name\": \"xwoff\", \"datatype\": dbt.type_string()},\n    {\"name\": \"xwsbr\", \"datatype\": dbt.type_string()},\n    {\"name\": \"zekkn\", \"datatype\": dbt.type_string()},\n    {\"name\": \"_fivetran_deleted\", \"datatype\": \"boolean\"},\n    {\"name\": \"_fivetran_synced\", \"datatype\": dbt.type_timestamp()},\n    {\"name\": \"_fivetran_sap_archived\", \"datatype\": dbt.type_string()}\n] %}\n\n{{ return(columns) }}\n\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.type_string", "macro.dbt.type_int", "macro.dbt.type_timestamp"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1756850323.6656168, "supported_languages": null}, "macro.sap.get_vbap_columns": {"name": "get_vbap_columns", "resource_type": "macro", "package_name": "sap", "path": "macros/get_column_macros/get_vbap_columns.sql", "original_file_path": "macros/get_column_macros/get_vbap_columns.sql", "unique_id": "macro.sap.get_vbap_columns", "macro_sql": "{% macro get_vbap_columns() %}\n\n{% set columns = [\n    {\"name\": \"_accgo_is_co_rel\", \"datatype\": dbt.type_string()},\n    {\"name\": \"_accgo_tx_p\", \"datatype\": dbt.type_string()},\n    {\"name\": \"_bev1_srfund\", \"datatype\": dbt.type_string()},\n    {\"name\": \"_dataaging\", \"datatype\": dbt.type_string()},\n    {\"name\": \"_fivetran_deleted\", \"datatype\": \"boolean\"},\n    {\"name\": \"_fivetran_sap_archived\", \"datatype\": dbt.type_string()},\n    {\"name\": \"_fivetran_synced\", \"datatype\": dbt.type_timestamp()},\n    {\"name\": \"_slce_inst_guid\", \"datatype\": dbt.type_string()},\n    {\"name\": \"_slce_single_conf_done\", \"datatype\": dbt.type_string()},\n    {\"name\": \"_slce_single_conf_reqired\", \"datatype\": dbt.type_string()},\n    {\"name\": \"_slce_sol_cuobj\", \"datatype\": dbt.type_string()},\n    {\"name\": \"_slce_sol_ext_guid\", \"datatype\": dbt.type_string()},\n    {\"name\": \"_slce_sol_matnr\", \"datatype\": dbt.type_string()},\n    {\"name\": \"_slce_sol_posnr\", \"datatype\": dbt.type_string()},\n    {\"name\": \"_xlso_course_bda\", \"datatype\": dbt.type_string()},\n    {\"name\": \"_xlso_course_eda\", \"datatype\": dbt.type_string()},\n    {\"name\": \"_xlso_course_id\", \"datatype\": dbt.type_string()},\n    {\"name\": \"abdat\", \"datatype\": dbt.type_string()},\n    {\"name\": \"abfor\", \"datatype\": dbt.type_string()},\n    {\"name\": \"abges\", \"datatype\": dbt.type_string()},\n    {\"name\": \"abgrs\", \"datatype\": dbt.type_string()},\n    {\"name\": \"abgru\", \"datatype\": dbt.type_string()},\n    {\"name\": \"ablfz\", \"datatype\": dbt.type_string()},\n    {\"name\": \"absfz\", \"datatype\": dbt.type_string()},\n    {\"name\": \"aedat\", \"datatype\": dbt.type_string()},\n    {\"name\": \"antlf\", \"datatype\": dbt.type_string()},\n    {\"name\": \"anzsn\", \"datatype\": dbt.type_string()},\n    {\"name\": \"aplzl_oaa\", \"datatype\": dbt.type_string()},\n    {\"name\": \"aplzl_olc\", \"datatype\": dbt.type_string()},\n    {\"name\": \"arktx\", \"datatype\": dbt.type_string()},\n    {\"name\": \"arsnum\", \"datatype\": dbt.type_string()},\n    {\"name\": \"arspos\", \"datatype\": dbt.type_string()},\n    {\"name\": \"atpkz\", \"datatype\": dbt.type_string()},\n    {\"name\": \"aufnr\", \"datatype\": dbt.type_string()},\n    {\"name\": \"aufpl_oaa\", \"datatype\": dbt.type_string()},\n    {\"name\": \"aufpl_olc\", \"datatype\": dbt.type_string()},\n    {\"name\": \"awahr\", \"datatype\": dbt.type_string()},\n    {\"name\": \"bedae\", \"datatype\": dbt.type_string()},\n    {\"name\": \"berid\", \"datatype\": dbt.type_string()},\n    {\"name\": \"betc\", \"datatype\": dbt.type_string()},\n    {\"name\": \"bonus\", \"datatype\": dbt.type_string()},\n    {\"name\": \"bpn\", \"datatype\": dbt.type_string()},\n    {\"name\": \"brgew\", \"datatype\": dbt.type_string()},\n    {\"name\": \"budget_pd\", \"datatype\": dbt.type_string()},\n    {\"name\": \"bwtar\", \"datatype\": dbt.type_string()},\n    {\"name\": \"bwtex\", \"datatype\": dbt.type_string()},\n    {\"name\": \"cancel_allow\", \"datatype\": dbt.type_string()},\n    {\"name\": \"cepok\", \"datatype\": dbt.type_string()},\n    {\"name\": \"charg\", \"datatype\": dbt.type_string()},\n    {\"name\": \"chmvs\", \"datatype\": dbt.type_string()},\n    {\"name\": \"chspl\", \"datatype\": dbt.type_string()},\n    {\"name\": \"clint\", \"datatype\": dbt.type_string()},\n    {\"name\": \"cmeth\", \"datatype\": dbt.type_string()},\n    {\"name\": \"cmkua\", \"datatype\": dbt.type_string()},\n    {\"name\": \"cmpnt\", \"datatype\": dbt.type_string()},\n    {\"name\": \"cmpre_flt\", \"datatype\": dbt.type_string()},\n    {\"name\": \"cmpre\", \"datatype\": dbt.type_string()},\n    {\"name\": \"cmtfg\", \"datatype\": dbt.type_string()},\n    {\"name\": \"cpd_updat\", \"datatype\": dbt.type_string()},\n    {\"name\": \"cuobj_ch\", \"datatype\": dbt.type_string()},\n    {\"name\": \"cuobj\", \"datatype\": dbt.type_string()},\n    {\"name\": \"ean11\", \"datatype\": dbt.type_string()},\n    {\"name\": \"eannr\", \"datatype\": dbt.type_string()},\n    {\"name\": \"erdat\", \"datatype\": dbt.type_string()},\n    {\"name\": \"erlre\", \"datatype\": dbt.type_string()},\n    {\"name\": \"ernam\", \"datatype\": dbt.type_string()},\n    {\"name\": \"erzet\", \"datatype\": dbt.type_string()},\n    {\"name\": \"exart\", \"datatype\": dbt.type_string()},\n    {\"name\": \"faksp\", \"datatype\": dbt.type_string()},\n    {\"name\": \"ferc_ind\", \"datatype\": dbt.type_string()},\n    {\"name\": \"fiscal_incentive_id\", \"datatype\": dbt.type_string()},\n    {\"name\": \"fiscal_incentive\", \"datatype\": dbt.type_string()},\n    {\"name\": \"fistl\", \"datatype\": dbt.type_string()},\n    {\"name\": \"fixmg\", \"datatype\": dbt.type_string()},\n    {\"name\": \"fkber\", \"datatype\": dbt.type_string()},\n    {\"name\": \"fkrel\", \"datatype\": dbt.type_string()},\n    {\"name\": \"fmeng\", \"datatype\": dbt.type_string()},\n    {\"name\": \"fmfgus_key\", \"datatype\": dbt.type_string()},\n    {\"name\": \"fonds\", \"datatype\": dbt.type_string()},\n    {\"name\": \"fsh_candate\", \"datatype\": dbt.type_string()},\n    {\"name\": \"fsh_collection\", \"datatype\": dbt.type_string()},\n    {\"name\": \"fsh_crsd\", \"datatype\": dbt.type_string()},\n    {\"name\": \"fsh_grid_cond_rec\", \"datatype\": dbt.type_string()},\n    {\"name\": \"fsh_item_group\", \"datatype\": dbt.type_string()},\n    {\"name\": \"fsh_item\", \"datatype\": dbt.type_string()},\n    {\"name\": \"fsh_pqr_uepos\", \"datatype\": dbt.type_string()},\n    {\"name\": \"fsh_psm_pfm_split\", \"datatype\": dbt.type_string()},\n    {\"name\": \"fsh_searef\", \"datatype\": dbt.type_string()},\n    {\"name\": \"fsh_season_year\", \"datatype\": dbt.type_string()},\n    {\"name\": \"fsh_season\", \"datatype\": dbt.type_string()},\n    {\"name\": \"fsh_theme\", \"datatype\": dbt.type_string()},\n    {\"name\": \"fsh_transaction\", \"datatype\": dbt.type_string()},\n    {\"name\": \"fsh_vas_prnt_id\", \"datatype\": dbt.type_string()},\n    {\"name\": \"fsh_vas_rel\", \"datatype\": dbt.type_string()},\n    {\"name\": \"fsh_vasref\", \"datatype\": dbt.type_string()},\n    {\"name\": \"gewei\", \"datatype\": dbt.type_string()},\n    {\"name\": \"grant_nbr\", \"datatype\": dbt.type_string()},\n    {\"name\": \"grkor\", \"datatype\": dbt.type_string()},\n    {\"name\": \"grpos\", \"datatype\": dbt.type_string()},\n    {\"name\": \"gsber\", \"datatype\": dbt.type_string()},\n    {\"name\": \"handoverdate\", \"datatype\": dbt.type_string()},\n    {\"name\": \"handoverloc\", \"datatype\": dbt.type_string()},\n    {\"name\": \"handovertime\", \"datatype\": dbt.type_string()},\n    {\"name\": \"iuid_relevant\", \"datatype\": dbt.type_string()},\n    {\"name\": \"j_1bcfop\", \"datatype\": dbt.type_string()},\n    {\"name\": \"j_1btaxlw1\", \"datatype\": dbt.type_string()},\n    {\"name\": \"j_1btaxlw2\", \"datatype\": dbt.type_string()},\n    {\"name\": \"j_1btaxlw3\", \"datatype\": dbt.type_string()},\n    {\"name\": \"j_1btaxlw4\", \"datatype\": dbt.type_string()},\n    {\"name\": \"j_1btaxlw5\", \"datatype\": dbt.type_string()},\n    {\"name\": \"j_1btxsdc\", \"datatype\": dbt.type_string()},\n    {\"name\": \"kalnr\", \"datatype\": dbt.type_string()},\n    {\"name\": \"kalsm_k\", \"datatype\": dbt.type_string()},\n    {\"name\": \"kalvar\", \"datatype\": dbt.type_string()},\n    {\"name\": \"kannr\", \"datatype\": dbt.type_string()},\n    {\"name\": \"kbmeng\", \"datatype\": dbt.type_string()},\n    {\"name\": \"kbver\", \"datatype\": dbt.type_string()},\n    {\"name\": \"kdmat\", \"datatype\": dbt.type_string()},\n    {\"name\": \"kever\", \"datatype\": dbt.type_string()},\n    {\"name\": \"klmeng\", \"datatype\": dbt.type_string()},\n    {\"name\": \"klvar\", \"datatype\": dbt.type_string()},\n    {\"name\": \"kmein\", \"datatype\": dbt.type_string()},\n    {\"name\": \"kmpmg\", \"datatype\": dbt.type_string()},\n    {\"name\": \"knttp\", \"datatype\": dbt.type_string()},\n    {\"name\": \"knuma_ag\", \"datatype\": dbt.type_string()},\n    {\"name\": \"knuma_pi\", \"datatype\": dbt.type_string()},\n    {\"name\": \"knumh\", \"datatype\": dbt.type_string()},\n    {\"name\": \"kondm\", \"datatype\": dbt.type_string()},\n    {\"name\": \"kosch\", \"datatype\": dbt.type_string()},\n    {\"name\": \"kostl\", \"datatype\": dbt.type_string()},\n    {\"name\": \"koupd\", \"datatype\": dbt.type_string()},\n    {\"name\": \"kowrr\", \"datatype\": dbt.type_string()},\n    {\"name\": \"kpein\", \"datatype\": dbt.type_string()},\n    {\"name\": \"ktgrm\", \"datatype\": dbt.type_string()},\n    {\"name\": \"kwmeng\", \"datatype\": dbt.type_int()},\n    {\"name\": \"kzbws\", \"datatype\": dbt.type_string()},\n    {\"name\": \"kzfme\", \"datatype\": dbt.type_string()},\n    {\"name\": \"kztlf\", \"datatype\": dbt.type_string()},\n    {\"name\": \"kzvbr\", \"datatype\": dbt.type_string()},\n    {\"name\": \"kzwi1\", \"datatype\": dbt.type_string()},\n    {\"name\": \"kzwi2\", \"datatype\": dbt.type_string()},\n    {\"name\": \"kzwi3\", \"datatype\": dbt.type_string()},\n    {\"name\": \"kzwi4\", \"datatype\": dbt.type_string()},\n    {\"name\": \"kzwi5\", \"datatype\": dbt.type_string()},\n    {\"name\": \"kzwi6\", \"datatype\": dbt.type_string()},\n    {\"name\": \"lfmng\", \"datatype\": dbt.type_string()},\n    {\"name\": \"lfrel\", \"datatype\": dbt.type_string()},\n    {\"name\": \"lgort\", \"datatype\": dbt.type_string()},\n    {\"name\": \"logsys_ext\", \"datatype\": dbt.type_string()},\n    {\"name\": \"lprio\", \"datatype\": dbt.type_string()},\n    {\"name\": \"lsmeng\", \"datatype\": dbt.type_string()},\n    {\"name\": \"lstanr\", \"datatype\": dbt.type_string()},\n    {\"name\": \"magrv\", \"datatype\": dbt.type_string()},\n    {\"name\": \"mandt\", \"datatype\": dbt.type_string()},\n    {\"name\": \"manual_tc_reason\", \"datatype\": dbt.type_string()},\n    {\"name\": \"matkl\", \"datatype\": dbt.type_string()},\n    {\"name\": \"matnr\", \"datatype\": dbt.type_string()},\n    {\"name\": \"matwa\", \"datatype\": dbt.type_string()},\n    {\"name\": \"meins\", \"datatype\": dbt.type_string()},\n    {\"name\": \"mfrgr\", \"datatype\": dbt.type_string()},\n    {\"name\": \"mill_se_gposn\", \"datatype\": dbt.type_string()},\n    {\"name\": \"mod_allow\", \"datatype\": dbt.type_string()},\n    {\"name\": \"mprok\", \"datatype\": dbt.type_string()},\n    {\"name\": \"msr_approv_block\", \"datatype\": dbt.type_string()},\n    {\"name\": \"msr_refund_code\", \"datatype\": dbt.type_string()},\n    {\"name\": \"msr_ret_reason\", \"datatype\": dbt.type_string()},\n    {\"name\": \"mtvfp\", \"datatype\": dbt.type_string()},\n    {\"name\": \"mvgr1\", \"datatype\": dbt.type_string()},\n    {\"name\": \"mvgr2\", \"datatype\": dbt.type_string()},\n    {\"name\": \"mvgr3\", \"datatype\": dbt.type_string()},\n    {\"name\": \"mvgr4\", \"datatype\": dbt.type_string()},\n    {\"name\": \"mvgr5\", \"datatype\": dbt.type_string()},\n    {\"name\": \"mwsbp\", \"datatype\": dbt.type_string()},\n    {\"name\": \"nachl\", \"datatype\": dbt.type_string()},\n    {\"name\": \"netpr\", \"datatype\": dbt.type_string()},\n    {\"name\": \"netwr\", \"datatype\": dbt.type_int()},\n    {\"name\": \"nrab_knumh\", \"datatype\": dbt.type_string()},\n    {\"name\": \"ntgew\", \"datatype\": dbt.type_string()},\n    {\"name\": \"objnr\", \"datatype\": dbt.type_string()},\n    {\"name\": \"oia_baselo\", \"datatype\": dbt.type_string()},\n    {\"name\": \"oibasprod\", \"datatype\": dbt.type_string()},\n    {\"name\": \"oibwtar_ex\", \"datatype\": dbt.type_string()},\n    {\"name\": \"oibwtar_im\", \"datatype\": dbt.type_string()},\n    {\"name\": \"oibypass\", \"datatype\": dbt.type_string()},\n    {\"name\": \"oic_adestn\", \"datatype\": dbt.type_string()},\n    {\"name\": \"oic_aorgin\", \"datatype\": dbt.type_string()},\n    {\"name\": \"oic_dcityc\", \"datatype\": dbt.type_string()},\n    {\"name\": \"oic_dcounc\", \"datatype\": dbt.type_string()},\n    {\"name\": \"oic_dland1\", \"datatype\": dbt.type_string()},\n    {\"name\": \"oic_drcreg\", \"datatype\": dbt.type_string()},\n    {\"name\": \"oic_drctry\", \"datatype\": dbt.type_string()},\n    {\"name\": \"oic_dregio\", \"datatype\": dbt.type_string()},\n    {\"name\": \"oic_kmpos\", \"datatype\": dbt.type_string()},\n    {\"name\": \"oic_lifnr\", \"datatype\": dbt.type_string()},\n    {\"name\": \"oic_mot\", \"datatype\": dbt.type_string()},\n    {\"name\": \"oic_ocityc\", \"datatype\": dbt.type_string()},\n    {\"name\": \"oic_ocounc\", \"datatype\": dbt.type_string()},\n    {\"name\": \"oic_oland1\", \"datatype\": dbt.type_string()},\n    {\"name\": \"oic_oregio\", \"datatype\": dbt.type_string()},\n    {\"name\": \"oic_pbatch\", \"datatype\": dbt.type_string()},\n    {\"name\": \"oic_pdestn\", \"datatype\": dbt.type_string()},\n    {\"name\": \"oic_porgin\", \"datatype\": dbt.type_string()},\n    {\"name\": \"oic_ptrip\", \"datatype\": dbt.type_string()},\n    {\"name\": \"oic_truckn\", \"datatype\": dbt.type_string()},\n    {\"name\": \"oicertf1_ex\", \"datatype\": dbt.type_string()},\n    {\"name\": \"oicertf1\", \"datatype\": dbt.type_string()},\n    {\"name\": \"oicontnr\", \"datatype\": dbt.type_string()},\n    {\"name\": \"oid_extbol\", \"datatype\": dbt.type_string()},\n    {\"name\": \"oid_miscdl\", \"datatype\": dbt.type_string()},\n    {\"name\": \"oid_ship\", \"datatype\": dbt.type_string()},\n    {\"name\": \"oidmsg_dat\", \"datatype\": dbt.type_string()},\n    {\"name\": \"oidmsg_prd\", \"datatype\": dbt.type_string()},\n    {\"name\": \"oidmsg_qty\", \"datatype\": dbt.type_string()},\n    {\"name\": \"oidmsg_shp\", \"datatype\": dbt.type_string()},\n    {\"name\": \"oidmsg_trm\", \"datatype\": dbt.type_string()},\n    {\"name\": \"oidmsg_uom\", \"datatype\": dbt.type_string()},\n    {\"name\": \"oidrc\", \"datatype\": dbt.type_string()},\n    {\"name\": \"oiedbal_ex\", \"datatype\": dbt.type_string()},\n    {\"name\": \"oiedbal_im\", \"datatype\": dbt.type_string()},\n    {\"name\": \"oiedbal\", \"datatype\": dbt.type_string()},\n    {\"name\": \"oiedbalm_ex\", \"datatype\": dbt.type_string()},\n    {\"name\": \"oiedbalm_im\", \"datatype\": dbt.type_string()},\n    {\"name\": \"oiedbalm\", \"datatype\": dbt.type_string()},\n    {\"name\": \"oiedok\", \"datatype\": dbt.type_string()},\n    {\"name\": \"oiexgnum\", \"datatype\": dbt.type_string()},\n    {\"name\": \"oiexgtyp\", \"datatype\": dbt.type_string()},\n    {\"name\": \"oifeech\", \"datatype\": dbt.type_string()},\n    {\"name\": \"oifeedt\", \"datatype\": dbt.type_string()},\n    {\"name\": \"oifeetot\", \"datatype\": dbt.type_string()},\n    {\"name\": \"oignrule\", \"datatype\": dbt.type_string()},\n    {\"name\": \"oih_folqty_ex\", \"datatype\": dbt.type_string()},\n    {\"name\": \"oih_folqty\", \"datatype\": dbt.type_string()},\n    {\"name\": \"oih_lcfol_ex\", \"datatype\": dbt.type_string()},\n    {\"name\": \"oih_lcfol\", \"datatype\": dbt.type_string()},\n    {\"name\": \"oih_licin_ex\", \"datatype\": dbt.type_string()},\n    {\"name\": \"oih_licin\", \"datatype\": dbt.type_string()},\n    {\"name\": \"oih_lictp_ex\", \"datatype\": dbt.type_string()},\n    {\"name\": \"oih_lictp\", \"datatype\": dbt.type_string()},\n    {\"name\": \"oihantyp_ex\", \"datatype\": dbt.type_string()},\n    {\"name\": \"oihantyp_im\", \"datatype\": dbt.type_string()},\n    {\"name\": \"oihantyp\", \"datatype\": dbt.type_string()},\n    {\"name\": \"oihcotdisch\", \"datatype\": dbt.type_string()},\n    {\"name\": \"oihnotlgort\", \"datatype\": dbt.type_string()},\n    {\"name\": \"oihnotwerks\", \"datatype\": dbt.type_string()},\n    {\"name\": \"oihtaxrcp_ex\", \"datatype\": dbt.type_string()},\n    {\"name\": \"oiinex_ex\", \"datatype\": dbt.type_string()},\n    {\"name\": \"oiinex\", \"datatype\": dbt.type_string()},\n    {\"name\": \"oimetind\", \"datatype\": dbt.type_string()},\n    {\"name\": \"oinetcyc\", \"datatype\": dbt.type_string()},\n    {\"name\": \"oioilcon\", \"datatype\": dbt.type_string()},\n    {\"name\": \"oipipeval\", \"datatype\": dbt.type_string()},\n    {\"name\": \"oiplantd\", \"datatype\": dbt.type_string()},\n    {\"name\": \"oipricie_ex\", \"datatype\": dbt.type_string()},\n    {\"name\": \"oipricie_im\", \"datatype\": dbt.type_string()},\n    {\"name\": \"oipricie\", \"datatype\": dbt.type_string()},\n    {\"name\": \"oipsdrc\", \"datatype\": dbt.type_string()},\n    {\"name\": \"oisbrel\", \"datatype\": dbt.type_string()},\n    {\"name\": \"oislf\", \"datatype\": dbt.type_string()},\n    {\"name\": \"oitaxfrom_ex\", \"datatype\": dbt.type_string()},\n    {\"name\": \"oitaxfrom_im\", \"datatype\": dbt.type_string()},\n    {\"name\": \"oitaxfrom\", \"datatype\": dbt.type_string()},\n    {\"name\": \"oitaxgrp_ex\", \"datatype\": dbt.type_string()},\n    {\"name\": \"oitaxgrp_im\", \"datatype\": dbt.type_string()},\n    {\"name\": \"oitaxgrp\", \"datatype\": dbt.type_string()},\n    {\"name\": \"oitaxto_ex\", \"datatype\": dbt.type_string()},\n    {\"name\": \"oitaxto_im\", \"datatype\": dbt.type_string()},\n    {\"name\": \"oitaxto\", \"datatype\": dbt.type_string()},\n    {\"name\": \"oiwap\", \"datatype\": dbt.type_string()},\n    {\"name\": \"paobjnr\", \"datatype\": dbt.type_string()},\n    {\"name\": \"pargb\", \"datatype\": dbt.type_string()},\n    {\"name\": \"pay_method\", \"datatype\": dbt.type_string()},\n    {\"name\": \"pctrf\", \"datatype\": dbt.type_string()},\n    {\"name\": \"plavo\", \"datatype\": dbt.type_string()},\n    {\"name\": \"pmatn\", \"datatype\": dbt.type_string()},\n    {\"name\": \"posar\", \"datatype\": dbt.type_string()},\n    {\"name\": \"posex\", \"datatype\": dbt.type_string()},\n    {\"name\": \"posnr\", \"datatype\": dbt.type_string()},\n    {\"name\": \"posnv\", \"datatype\": dbt.type_string()},\n    {\"name\": \"prbme\", \"datatype\": dbt.type_string()},\n    {\"name\": \"prctr\", \"datatype\": dbt.type_string()},\n    {\"name\": \"prefe\", \"datatype\": dbt.type_string()},\n    {\"name\": \"prodh\", \"datatype\": dbt.type_string()},\n    {\"name\": \"prosa\", \"datatype\": dbt.type_string()},\n    {\"name\": \"provg\", \"datatype\": dbt.type_string()},\n    {\"name\": \"prs_objnr\", \"datatype\": dbt.type_string()},\n    {\"name\": \"prs_sd_spsnr\", \"datatype\": dbt.type_string()},\n    {\"name\": \"prs_work_period\", \"datatype\": dbt.type_string()},\n    {\"name\": \"prsok\", \"datatype\": dbt.type_string()},\n    {\"name\": \"ps_psp_pnr\", \"datatype\": dbt.type_string()},\n    {\"name\": \"pstyv\", \"datatype\": dbt.type_string()},\n    {\"name\": \"rep_freq\", \"datatype\": dbt.type_string()},\n    {\"name\": \"revacc_refid\", \"datatype\": dbt.type_string()},\n    {\"name\": \"revacc_reftype\", \"datatype\": dbt.type_string()},\n    {\"name\": \"rkfkf\", \"datatype\": dbt.type_string()},\n    {\"name\": \"route\", \"datatype\": dbt.type_string()},\n    {\"name\": \"serail\", \"datatype\": dbt.type_string()},\n    {\"name\": \"sernr\", \"datatype\": dbt.type_string()},\n    {\"name\": \"sgt_rcat\", \"datatype\": dbt.type_string()},\n    {\"name\": \"shkzg\", \"datatype\": dbt.type_string()},\n    {\"name\": \"skopf\", \"datatype\": dbt.type_string()},\n    {\"name\": \"sktof\", \"datatype\": dbt.type_string()},\n    {\"name\": \"sloctype\", \"datatype\": dbt.type_string()},\n    {\"name\": \"smeng\", \"datatype\": dbt.type_string()},\n    {\"name\": \"sobkz\", \"datatype\": dbt.type_string()},\n    {\"name\": \"spart\", \"datatype\": dbt.type_string()},\n    {\"name\": \"spcsto\", \"datatype\": dbt.type_string()},\n    {\"name\": \"sposn\", \"datatype\": dbt.type_string()},\n    {\"name\": \"stadat\", \"datatype\": dbt.type_string()},\n    {\"name\": \"stafo\", \"datatype\": dbt.type_string()},\n    {\"name\": \"stcur\", \"datatype\": dbt.type_string()},\n    {\"name\": \"stdat\", \"datatype\": dbt.type_string()},\n    {\"name\": \"stkey\", \"datatype\": dbt.type_string()},\n    {\"name\": \"stlkn\", \"datatype\": dbt.type_string()},\n    {\"name\": \"stlnr\", \"datatype\": dbt.type_string()},\n    {\"name\": \"stlty\", \"datatype\": dbt.type_string()},\n    {\"name\": \"stman\", \"datatype\": dbt.type_string()},\n    {\"name\": \"stockloc\", \"datatype\": dbt.type_string()},\n    {\"name\": \"stpos\", \"datatype\": dbt.type_string()},\n    {\"name\": \"stpoz\", \"datatype\": dbt.type_string()},\n    {\"name\": \"sugrd\", \"datatype\": dbt.type_string()},\n    {\"name\": \"sumbd\", \"datatype\": dbt.type_string()},\n    {\"name\": \"tas\", \"datatype\": dbt.type_string()},\n    {\"name\": \"tax_subject_st\", \"datatype\": dbt.type_string()},\n    {\"name\": \"taxm1\", \"datatype\": dbt.type_string()},\n    {\"name\": \"taxm2\", \"datatype\": dbt.type_string()},\n    {\"name\": \"taxm3\", \"datatype\": dbt.type_string()},\n    {\"name\": \"taxm4\", \"datatype\": dbt.type_string()},\n    {\"name\": \"taxm5\", \"datatype\": dbt.type_string()},\n    {\"name\": \"taxm6\", \"datatype\": dbt.type_string()},\n    {\"name\": \"taxm7\", \"datatype\": dbt.type_string()},\n    {\"name\": \"taxm8\", \"datatype\": dbt.type_string()},\n    {\"name\": \"taxm9\", \"datatype\": dbt.type_string()},\n    {\"name\": \"tc_aut_det\", \"datatype\": dbt.type_string()},\n    {\"name\": \"techs\", \"datatype\": dbt.type_string()},\n    {\"name\": \"trmrisk_relevant\", \"datatype\": dbt.type_string()},\n    {\"name\": \"uebtk\", \"datatype\": dbt.type_string()},\n    {\"name\": \"uebto\", \"datatype\": dbt.type_string()},\n    {\"name\": \"uepos\", \"datatype\": dbt.type_string()},\n    {\"name\": \"uepvw\", \"datatype\": dbt.type_string()},\n    {\"name\": \"ukonm\", \"datatype\": dbt.type_string()},\n    {\"name\": \"umref\", \"datatype\": dbt.type_string()},\n    {\"name\": \"umvkn\", \"datatype\": dbt.type_string()},\n    {\"name\": \"umvkz\", \"datatype\": dbt.type_string()},\n    {\"name\": \"umzin\", \"datatype\": dbt.type_string()},\n    {\"name\": \"umziz\", \"datatype\": dbt.type_string()},\n    {\"name\": \"untto\", \"datatype\": dbt.type_string()},\n    {\"name\": \"upflu\", \"datatype\": dbt.type_string()},\n    {\"name\": \"upmat\", \"datatype\": dbt.type_string()},\n    {\"name\": \"vbeaf\", \"datatype\": dbt.type_string()},\n    {\"name\": \"vbeav\", \"datatype\": dbt.type_string()},\n    {\"name\": \"vbeln\", \"datatype\": dbt.type_string()},\n    {\"name\": \"vbelv\", \"datatype\": dbt.type_string()},\n    {\"name\": \"vgbel\", \"datatype\": dbt.type_string()},\n    {\"name\": \"vgpos\", \"datatype\": dbt.type_string()},\n    {\"name\": \"vgref\", \"datatype\": dbt.type_string()},\n    {\"name\": \"vgtyp\", \"datatype\": dbt.type_string()},\n    {\"name\": \"vkaus\", \"datatype\": dbt.type_string()},\n    {\"name\": \"vkgru\", \"datatype\": dbt.type_string()},\n    {\"name\": \"voleh\", \"datatype\": dbt.type_string()},\n    {\"name\": \"volum\", \"datatype\": dbt.type_string()},\n    {\"name\": \"voref\", \"datatype\": dbt.type_string()},\n    {\"name\": \"vpmat\", \"datatype\": dbt.type_string()},\n    {\"name\": \"vpwrk\", \"datatype\": dbt.type_string()},\n    {\"name\": \"vpzuo\", \"datatype\": dbt.type_string()},\n    {\"name\": \"vrkme\", \"datatype\": dbt.type_string()},\n    {\"name\": \"vstel\", \"datatype\": dbt.type_string()},\n    {\"name\": \"waerk\", \"datatype\": dbt.type_string()},\n    {\"name\": \"wavwr\", \"datatype\": dbt.type_string()},\n    {\"name\": \"werks\", \"datatype\": dbt.type_string()},\n    {\"name\": \"wgru1\", \"datatype\": dbt.type_string()},\n    {\"name\": \"wgru2\", \"datatype\": dbt.type_string()},\n    {\"name\": \"wktnr\", \"datatype\": dbt.type_string()},\n    {\"name\": \"wktps\", \"datatype\": dbt.type_string()},\n    {\"name\": \"wrf_charstc1\", \"datatype\": dbt.type_string()},\n    {\"name\": \"wrf_charstc2\", \"datatype\": dbt.type_string()},\n    {\"name\": \"wrf_charstc3\", \"datatype\": dbt.type_string()},\n    {\"name\": \"wtysc_clmitem\", \"datatype\": dbt.type_string()},\n    {\"name\": \"xchar\", \"datatype\": dbt.type_string()},\n    {\"name\": \"xchpf\", \"datatype\": dbt.type_string()},\n    {\"name\": \"z_prs_bill_flag\", \"datatype\": dbt.type_string()},\n    {\"name\": \"z_prs_chargelevl\", \"datatype\": dbt.type_string()},\n    {\"name\": \"z_prs_country\", \"datatype\": dbt.type_string()},\n    {\"name\": \"z_prs_offshore\", \"datatype\": dbt.type_string()},\n    {\"name\": \"zieme\", \"datatype\": dbt.type_string()},\n    {\"name\": \"zmeng\", \"datatype\": dbt.type_string()},\n    {\"name\": \"zschl_k\", \"datatype\": dbt.type_string()},\n    {\"name\": \"zwert\", \"datatype\": dbt.type_string()},\n    {\"name\": \"zzdea_license\", \"datatype\": dbt.type_string()},\n    {\"name\": \"zzdea_schedule\", \"datatype\": dbt.type_string()}\n] %}\n\n{{ return(columns) }}\n\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.type_string", "macro.dbt.type_timestamp", "macro.dbt.type_int"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1756850323.7311435, "supported_languages": null}, "macro.sap.get_t001w_columns": {"name": "get_t001w_columns", "resource_type": "macro", "package_name": "sap", "path": "macros/get_column_macros/get_t001w_columns.sql", "original_file_path": "macros/get_column_macros/get_t001w_columns.sql", "unique_id": "macro.sap.get_t001w_columns", "macro_sql": "{% macro get_t001w_columns() %}\n\n{% set columns = [\n    {\"name\": \"_fivetran_deleted\", \"datatype\": \"boolean\"},\n    {\"name\": \"_fivetran_rowid\", \"datatype\": dbt.type_numeric()},\n    {\"name\": \"_fivetran_synced\", \"datatype\": dbt.type_timestamp()},\n    {\"name\": \"_fivetran_sap_archived\", \"datatype\": dbt.type_string()},\n    {\"name\": \"achvm\", \"datatype\": dbt.type_string()},\n    {\"name\": \"adrnr\", \"datatype\": dbt.type_string()},\n    {\"name\": \"awsls\", \"datatype\": dbt.type_string()},\n    {\"name\": \"bapovar\", \"datatype\": dbt.type_string()},\n    {\"name\": \"bedpl\", \"datatype\": dbt.type_string()},\n    {\"name\": \"betol\", \"datatype\": dbt.type_string()},\n    {\"name\": \"bukrs\", \"datatype\": dbt.type_string()},\n    {\"name\": \"bukrs_glob\", \"datatype\": dbt.type_string()},\n    {\"name\": \"butxt\", \"datatype\": dbt.type_string()},\n    {\"name\": \"buvar\", \"datatype\": dbt.type_string()},\n    {\"name\": \"bwkey\", \"datatype\": dbt.type_string()},\n    {\"name\": \"bzirk\", \"datatype\": dbt.type_string()},\n    {\"name\": \"bzqhl\", \"datatype\": dbt.type_string()},\n    {\"name\": \"chazv\", \"datatype\": dbt.type_string()},\n    {\"name\": \"chazv_old\", \"datatype\": dbt.type_string()},\n    {\"name\": \"cityc\", \"datatype\": dbt.type_string()},\n    {\"name\": \"counc\", \"datatype\": dbt.type_string()},\n    {\"name\": \"dep_store\", \"datatype\": dbt.type_string()},\n    {\"name\": \"dkweg\", \"datatype\": dbt.type_string()},\n    {\"name\": \"dtamtc\", \"datatype\": dbt.type_string()},\n    {\"name\": \"dtaxr\", \"datatype\": dbt.type_string()},\n    {\"name\": \"dtprov\", \"datatype\": dbt.type_string()},\n    {\"name\": \"dttaxc\", \"datatype\": dbt.type_string()},\n    {\"name\": \"dttdsp\", \"datatype\": dbt.type_string()},\n    {\"name\": \"dvsart\", \"datatype\": dbt.type_string()},\n    {\"name\": \"ebukr\", \"datatype\": dbt.type_string()},\n    {\"name\": \"ekorg\", \"datatype\": dbt.type_string()},\n    {\"name\": \"fabkl\", \"datatype\": dbt.type_string()},\n    {\"name\": \"fdbuk\", \"datatype\": dbt.type_string()},\n    {\"name\": \"fikrs\", \"datatype\": dbt.type_string()},\n    {\"name\": \"fm_derive_acc\", \"datatype\": dbt.type_string()},\n    {\"name\": \"fmhrdate\", \"datatype\": dbt.type_string()},\n    {\"name\": \"fprfw\", \"datatype\": dbt.type_string()},\n    {\"name\": \"fsh_bom_maintenance\", \"datatype\": dbt.type_string()},\n    {\"name\": \"fsh_mg_arun_req\", \"datatype\": dbt.type_string()},\n    {\"name\": \"fsh_seaim\", \"datatype\": dbt.type_string()},\n    {\"name\": \"fstva\", \"datatype\": dbt.type_string()},\n    {\"name\": \"fstvare\", \"datatype\": dbt.type_string()},\n    {\"name\": \"hvr_change_time\", \"datatype\": dbt.type_string()},\n    {\"name\": \"hvr_is_deleted\", \"datatype\": dbt.type_int()},\n    {\"name\": \"impda\", \"datatype\": dbt.type_string()},\n    {\"name\": \"infmt\", \"datatype\": dbt.type_string()},\n    {\"name\": \"iwerk\", \"datatype\": dbt.type_string()},\n    {\"name\": \"j_1bbranch\", \"datatype\": dbt.type_string()},\n    {\"name\": \"kkber\", \"datatype\": dbt.type_string()},\n    {\"name\": \"kkowk\", \"datatype\": dbt.type_string()},\n    {\"name\": \"kokfi\", \"datatype\": dbt.type_string()},\n    {\"name\": \"kopim\", \"datatype\": dbt.type_string()},\n    {\"name\": \"kordb\", \"datatype\": dbt.type_string()},\n    {\"name\": \"ktop2\", \"datatype\": dbt.type_string()},\n    {\"name\": \"ktopl\", \"datatype\": dbt.type_string()},\n    {\"name\": \"kunnr\", \"datatype\": dbt.type_string()},\n    {\"name\": \"land1\", \"datatype\": dbt.type_string()},\n    {\"name\": \"let01\", \"datatype\": dbt.type_string()},\n    {\"name\": \"let02\", \"datatype\": dbt.type_string()},\n    {\"name\": \"let03\", \"datatype\": dbt.type_string()},\n    {\"name\": \"lifnr\", \"datatype\": dbt.type_string()},\n    {\"name\": \"mandt\", \"datatype\": dbt.type_string()},\n    {\"name\": \"mgvlareval\", \"datatype\": dbt.type_string()},\n    {\"name\": \"mgvlaupd\", \"datatype\": dbt.type_string()},\n    {\"name\": \"mgvupd\", \"datatype\": dbt.type_string()},\n    {\"name\": \"misch\", \"datatype\": dbt.type_string()},\n    {\"name\": \"mregl\", \"datatype\": dbt.type_string()},\n    {\"name\": \"mwska\", \"datatype\": dbt.type_string()},\n    {\"name\": \"mwskv\", \"datatype\": dbt.type_string()},\n    {\"name\": \"name1\", \"datatype\": dbt.type_string()},\n    {\"name\": \"name2\", \"datatype\": dbt.type_string()},\n    {\"name\": \"nodetype\", \"datatype\": dbt.type_string()},\n    {\"name\": \"nschema\", \"datatype\": dbt.type_string()},\n    {\"name\": \"offsacct\", \"datatype\": dbt.type_string()},\n    {\"name\": \"oihcredipi\", \"datatype\": dbt.type_string()},\n    {\"name\": \"oihvtype\", \"datatype\": dbt.type_string()},\n    {\"name\": \"oilival\", \"datatype\": dbt.type_string()},\n    {\"name\": \"opvar\", \"datatype\": dbt.type_string()},\n    {\"name\": \"ort01\", \"datatype\": dbt.type_string()},\n    {\"name\": \"periv\", \"datatype\": dbt.type_string()},\n    {\"name\": \"pfach\", \"datatype\": dbt.type_string()},\n    {\"name\": \"pkosa\", \"datatype\": dbt.type_string()},\n    {\"name\": \"pp_pdate\", \"datatype\": dbt.type_string()},\n    {\"name\": \"pst_per_var\", \"datatype\": dbt.type_string()},\n    {\"name\": \"pstlz\", \"datatype\": dbt.type_string()},\n    {\"name\": \"rcomp\", \"datatype\": dbt.type_string()},\n    {\"name\": \"regio\", \"datatype\": dbt.type_string()},\n    {\"name\": \"sourcing\", \"datatype\": dbt.type_string()},\n    {\"name\": \"spart\", \"datatype\": dbt.type_string()},\n    {\"name\": \"spras\", \"datatype\": dbt.type_string()},\n    {\"name\": \"stceg\", \"datatype\": dbt.type_string()},\n    {\"name\": \"storetype\", \"datatype\": dbt.type_string()},\n    {\"name\": \"stras\", \"datatype\": dbt.type_string()},\n    {\"name\": \"surccm\", \"datatype\": dbt.type_string()},\n    {\"name\": \"taxiw\", \"datatype\": dbt.type_string()},\n    {\"name\": \"txjcd\", \"datatype\": dbt.type_string()},\n    {\"name\": \"txkrs\", \"datatype\": dbt.type_string()},\n    {\"name\": \"txnam_ma1\", \"datatype\": dbt.type_string()},\n    {\"name\": \"txnam_ma2\", \"datatype\": dbt.type_string()},\n    {\"name\": \"txnam_ma3\", \"datatype\": dbt.type_string()},\n    {\"name\": \"umkrs\", \"datatype\": dbt.type_string()},\n    {\"name\": \"vkorg\", \"datatype\": dbt.type_string()},\n    {\"name\": \"vlfkz\", \"datatype\": dbt.type_string()},\n    {\"name\": \"vstel\", \"datatype\": dbt.type_string()},\n    {\"name\": \"vtbfi\", \"datatype\": dbt.type_string()},\n    {\"name\": \"vtweg\", \"datatype\": dbt.type_string()},\n    {\"name\": \"waabw\", \"datatype\": dbt.type_string()},\n    {\"name\": \"waers\", \"datatype\": dbt.type_string()},\n    {\"name\": \"werks\", \"datatype\": dbt.type_string()},\n    {\"name\": \"wfvar\", \"datatype\": dbt.type_string()},\n    {\"name\": \"wksop\", \"datatype\": dbt.type_string()},\n    {\"name\": \"wt_newwt\", \"datatype\": dbt.type_string()},\n    {\"name\": \"xbbba\", \"datatype\": dbt.type_string()},\n    {\"name\": \"xbbbe\", \"datatype\": dbt.type_string()},\n    {\"name\": \"xbbbf\", \"datatype\": dbt.type_string()},\n    {\"name\": \"xbbko\", \"datatype\": dbt.type_string()},\n    {\"name\": \"xbbsc\", \"datatype\": dbt.type_string()},\n    {\"name\": \"xcession\", \"datatype\": dbt.type_string()},\n    {\"name\": \"xcos\", \"datatype\": dbt.type_string()},\n    {\"name\": \"xcovr\", \"datatype\": dbt.type_string()},\n    {\"name\": \"xeink\", \"datatype\": dbt.type_string()},\n    {\"name\": \"xextb\", \"datatype\": dbt.type_string()},\n    {\"name\": \"xfdis\", \"datatype\": dbt.type_string()},\n    {\"name\": \"xfdmm\", \"datatype\": dbt.type_string()},\n    {\"name\": \"xfdsd\", \"datatype\": dbt.type_string()},\n    {\"name\": \"xfmca\", \"datatype\": dbt.type_string()},\n    {\"name\": \"xfmcb\", \"datatype\": dbt.type_string()},\n    {\"name\": \"xfmco\", \"datatype\": dbt.type_string()},\n    {\"name\": \"xgjrv\", \"datatype\": dbt.type_string()},\n    {\"name\": \"xgsbe\", \"datatype\": dbt.type_string()},\n    {\"name\": \"xjvaa\", \"datatype\": dbt.type_string()},\n    {\"name\": \"xkdft\", \"datatype\": dbt.type_string()},\n    {\"name\": \"xkkbi\", \"datatype\": dbt.type_string()},\n    {\"name\": \"xmwsn\", \"datatype\": dbt.type_string()},\n    {\"name\": \"xnegp\", \"datatype\": dbt.type_string()},\n    {\"name\": \"xprod\", \"datatype\": dbt.type_string()},\n    {\"name\": \"xskfn\", \"datatype\": dbt.type_string()},\n    {\"name\": \"xslta\", \"datatype\": dbt.type_string()},\n    {\"name\": \"xsplt\", \"datatype\": dbt.type_string()},\n    {\"name\": \"xstdt\", \"datatype\": dbt.type_string()},\n    {\"name\": \"xvalv\", \"datatype\": dbt.type_string()},\n    {\"name\": \"xvatdate\", \"datatype\": dbt.type_string()},\n    {\"name\": \"xvvwa\", \"datatype\": dbt.type_string()},\n    {\"name\": \"zone1\", \"datatype\": dbt.type_string()}\n] %}\n\n{{ return(columns) }}\n\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.type_numeric", "macro.dbt.type_timestamp", "macro.dbt.type_string", "macro.dbt.type_int"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1756850323.7552962, "supported_languages": null}, "macro.sap.get_dd07t_columns": {"name": "get_dd07t_columns", "resource_type": "macro", "package_name": "sap", "path": "macros/get_column_macros/get_dd07t_columns.sql", "original_file_path": "macros/get_column_macros/get_dd07t_columns.sql", "unique_id": "macro.sap.get_dd07t_columns", "macro_sql": "{% macro get_dd07t_columns() %}\n\n{% set columns = [\n    {\"name\": \"_fivetran_deleted\", \"datatype\": \"boolean\"},\n    {\"name\": \"_fivetran_rowid\", \"datatype\": dbt.type_numeric()},\n    {\"name\": \"_fivetran_synced\", \"datatype\": dbt.type_timestamp()},\n    {\"name\": \"as4local\", \"datatype\": dbt.type_string()},\n    {\"name\": \"as4vers\", \"datatype\": dbt.type_string()},\n    {\"name\": \"ddlanguage\", \"datatype\": dbt.type_string()},\n    {\"name\": \"ddtext\", \"datatype\": dbt.type_string()},\n    {\"name\": \"domname\", \"datatype\": dbt.type_string()},\n    {\"name\": \"domvalue_l\", \"datatype\": dbt.type_string()},\n    {\"name\": \"valpos\", \"datatype\": dbt.type_string()},\n    {\"name\": \"hvr_change_time\", \"datatype\": dbt.type_string()}\n] %}\n\n{{ return(columns) }}\n\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.type_numeric", "macro.dbt.type_timestamp", "macro.dbt.type_string"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1756850323.7576773, "supported_languages": null}, "macro.sap.get_t001_columns": {"name": "get_t001_columns", "resource_type": "macro", "package_name": "sap", "path": "macros/get_column_macros/get_t001_columns.sql", "original_file_path": "macros/get_column_macros/get_t001_columns.sql", "unique_id": "macro.sap.get_t001_columns", "macro_sql": "{% macro get_t001_columns() %}\n\n{% set columns = [\n    {\"name\": \"_fivetran_deleted\", \"datatype\": \"boolean\"},\n    {\"name\": \"_fivetran_sap_archived\", \"datatype\": dbt.type_numeric()},\n    {\"name\": \"_fivetran_synced\", \"datatype\": dbt.type_timestamp()},\n    {\"name\": \"adrnr\", \"datatype\": dbt.type_string()},\n    {\"name\": \"bapovar\", \"datatype\": dbt.type_string()},\n    {\"name\": \"bukrs\", \"datatype\": dbt.type_string()},\n    {\"name\": \"bukrs_glob\", \"datatype\": dbt.type_string()},\n    {\"name\": \"butxt\", \"datatype\": dbt.type_string()},\n    {\"name\": \"buvar\", \"datatype\": dbt.type_string()},\n    {\"name\": \"dkweg\", \"datatype\": dbt.type_string()},\n    {\"name\": \"dtamtc\", \"datatype\": dbt.type_string()},\n    {\"name\": \"dtaxr\", \"datatype\": dbt.type_string()},\n    {\"name\": \"dtprov\", \"datatype\": dbt.type_string()},\n    {\"name\": \"dttaxc\", \"datatype\": dbt.type_string()},\n    {\"name\": \"dttdsp\", \"datatype\": dbt.type_string()},\n    {\"name\": \"ebukr\", \"datatype\": dbt.type_string()},\n    {\"name\": \"fdbuk\", \"datatype\": dbt.type_string()},\n    {\"name\": \"fikrs\", \"datatype\": dbt.type_string()},\n    {\"name\": \"fm_derive_acc\", \"datatype\": dbt.type_string()},\n    {\"name\": \"fmhrdate\", \"datatype\": dbt.type_string()},\n    {\"name\": \"fstva\", \"datatype\": dbt.type_string()},\n    {\"name\": \"fstvare\", \"datatype\": dbt.type_string()},\n    {\"name\": \"impda\", \"datatype\": dbt.type_string()},\n    {\"name\": \"infmt\", \"datatype\": dbt.type_string()},\n    {\"name\": \"kkber\", \"datatype\": dbt.type_string()},\n    {\"name\": \"kokfi\", \"datatype\": dbt.type_string()},\n    {\"name\": \"kopim\", \"datatype\": dbt.type_string()},\n    {\"name\": \"ktop2\", \"datatype\": dbt.type_string()},\n    {\"name\": \"ktopl\", \"datatype\": dbt.type_string()},\n    {\"name\": \"land1\", \"datatype\": dbt.type_string()},\n    {\"name\": \"mandt\", \"datatype\": dbt.type_string()},\n    {\"name\": \"mregl\", \"datatype\": dbt.type_string()},\n    {\"name\": \"mwska\", \"datatype\": dbt.type_string()},\n    {\"name\": \"mwskv\", \"datatype\": dbt.type_string()},\n    {\"name\": \"offsacct\", \"datatype\": dbt.type_string()},\n    {\"name\": \"opvar\", \"datatype\": dbt.type_string()},\n    {\"name\": \"ort01\", \"datatype\": dbt.type_string()},\n    {\"name\": \"periv\", \"datatype\": dbt.type_string()},\n    {\"name\": \"pp_pdate\", \"datatype\": dbt.type_string()},\n    {\"name\": \"pst_per_var\", \"datatype\": dbt.type_string()},\n    {\"name\": \"rcomp\", \"datatype\": dbt.type_string()},\n    {\"name\": \"spras\", \"datatype\": dbt.type_string()},\n    {\"name\": \"stceg\", \"datatype\": dbt.type_string()},\n    {\"name\": \"surccm\", \"datatype\": dbt.type_string()},\n    {\"name\": \"txjcd\", \"datatype\": dbt.type_string()},\n    {\"name\": \"txkrs\", \"datatype\": dbt.type_string()},\n    {\"name\": \"umkrs\", \"datatype\": dbt.type_string()},\n    {\"name\": \"waabw\", \"datatype\": dbt.type_string()},\n    {\"name\": \"waers\", \"datatype\": dbt.type_string()},\n    {\"name\": \"wfvar\", \"datatype\": dbt.type_string()},\n    {\"name\": \"wt_newwt\", \"datatype\": dbt.type_string()},\n    {\"name\": \"xbbba\", \"datatype\": dbt.type_string()},\n    {\"name\": \"xbbbe\", \"datatype\": dbt.type_string()},\n    {\"name\": \"xbbbf\", \"datatype\": dbt.type_string()},\n    {\"name\": \"xbbko\", \"datatype\": dbt.type_string()},\n    {\"name\": \"xbbsc\", \"datatype\": dbt.type_string()},\n    {\"name\": \"xcession\", \"datatype\": dbt.type_string()},\n    {\"name\": \"xcos\", \"datatype\": dbt.type_string()},\n    {\"name\": \"xcovr\", \"datatype\": dbt.type_string()},\n    {\"name\": \"xeink\", \"datatype\": dbt.type_string()},\n    {\"name\": \"xextb\", \"datatype\": dbt.type_string()},\n    {\"name\": \"xfdis\", \"datatype\": dbt.type_string()},\n    {\"name\": \"xfdmm\", \"datatype\": dbt.type_string()},\n    {\"name\": \"xfdsd\", \"datatype\": dbt.type_string()},\n    {\"name\": \"xfmca\", \"datatype\": dbt.type_string()},\n    {\"name\": \"xfmcb\", \"datatype\": dbt.type_string()},\n    {\"name\": \"xfmco\", \"datatype\": dbt.type_string()},\n    {\"name\": \"xgjrv\", \"datatype\": dbt.type_string()},\n    {\"name\": \"xgsbe\", \"datatype\": dbt.type_string()},\n    {\"name\": \"xjvaa\", \"datatype\": dbt.type_string()},\n    {\"name\": \"xkdft\", \"datatype\": dbt.type_string()},\n    {\"name\": \"xkkbi\", \"datatype\": dbt.type_string()},\n    {\"name\": \"xmwsn\", \"datatype\": dbt.type_string()},\n    {\"name\": \"xnegp\", \"datatype\": dbt.type_string()},\n    {\"name\": \"xprod\", \"datatype\": dbt.type_string()},\n    {\"name\": \"xskfn\", \"datatype\": dbt.type_string()},\n    {\"name\": \"xslta\", \"datatype\": dbt.type_string()},\n    {\"name\": \"xsplt\", \"datatype\": dbt.type_string()},\n    {\"name\": \"xstdt\", \"datatype\": dbt.type_string()},\n    {\"name\": \"xvalv\", \"datatype\": dbt.type_string()},\n    {\"name\": \"xvatdate\", \"datatype\": dbt.type_string()},\n    {\"name\": \"xvvwa\", \"datatype\": dbt.type_string()}\n] %}\n\n{{ return(columns) }}\n\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.type_numeric", "macro.dbt.type_timestamp", "macro.dbt.type_string"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1756850323.7716682, "supported_languages": null}, "macro.sap.get_faglflexa_columns": {"name": "get_faglflexa_columns", "resource_type": "macro", "package_name": "sap", "path": "macros/get_column_macros/get_faglflexa_columns.sql", "original_file_path": "macros/get_column_macros/get_faglflexa_columns.sql", "unique_id": "macro.sap.get_faglflexa_columns", "macro_sql": "{% macro get_faglflexa_columns() %}\n\n{% set columns = [\n    {\"name\": \"_fivetran_deleted\", \"datatype\": \"boolean\"},\n    {\"name\": \"_fivetran_rowid\", \"datatype\": dbt.type_numeric()},\n    {\"name\": \"_fivetran_synced\", \"datatype\": dbt.type_timestamp()},\n    {\"name\": \"activ\", \"datatype\": dbt.type_string()},\n    {\"name\": \"awtyp\", \"datatype\": dbt.type_string()},\n    {\"name\": \"belnr\", \"datatype\": dbt.type_string()},\n    {\"name\": \"bschl\", \"datatype\": dbt.type_string()},\n    {\"name\": \"bstat\", \"datatype\": dbt.type_string()},\n    {\"name\": \"budat\", \"datatype\": dbt.type_string()},\n    {\"name\": \"buzei\", \"datatype\": dbt.type_string()},\n    {\"name\": \"cost_elem\", \"datatype\": dbt.type_string()},\n    {\"name\": \"docln\", \"datatype\": dbt.type_string()},\n    {\"name\": \"docnr\", \"datatype\": dbt.type_string()},\n    {\"name\": \"drcrk\", \"datatype\": dbt.type_string()},\n    {\"name\": \"gjahr\", \"datatype\": dbt.type_string()},\n    {\"name\": \"hsl\", \"datatype\": dbt.type_numeric()},\n    {\"name\": \"kokrs\", \"datatype\": dbt.type_string()},\n    {\"name\": \"ksl\", \"datatype\": dbt.type_numeric()},\n    {\"name\": \"linetype\", \"datatype\": dbt.type_string()},\n    {\"name\": \"logsys\", \"datatype\": dbt.type_string()},\n    {\"name\": \"msl\", \"datatype\": dbt.type_numeric()},\n    {\"name\": \"osl\", \"datatype\": dbt.type_numeric()},\n    {\"name\": \"poper\", \"datatype\": dbt.type_string()},\n    {\"name\": \"pprctr\", \"datatype\": dbt.type_string()},\n    {\"name\": \"prctr\", \"datatype\": dbt.type_string()},\n    {\"name\": \"psegment\", \"datatype\": dbt.type_string()},\n    {\"name\": \"racct\", \"datatype\": dbt.type_string()},\n    {\"name\": \"rassc\", \"datatype\": dbt.type_string()},\n    {\"name\": \"rbukrs\", \"datatype\": dbt.type_string()},\n    {\"name\": \"rbusa\", \"datatype\": dbt.type_string()},\n    {\"name\": \"rclnt\", \"datatype\": dbt.type_string()},\n    {\"name\": \"rcntr\", \"datatype\": dbt.type_string()},\n    {\"name\": \"rfarea\", \"datatype\": dbt.type_string()},\n    {\"name\": \"rldnr\", \"datatype\": dbt.type_string()},\n    {\"name\": \"rmvct\", \"datatype\": dbt.type_string()},\n    {\"name\": \"rrcty\", \"datatype\": dbt.type_string()},\n    {\"name\": \"rtcur\", \"datatype\": dbt.type_string()},\n    {\"name\": \"runit\", \"datatype\": dbt.type_string()},\n    {\"name\": \"rvers\", \"datatype\": dbt.type_string()},\n    {\"name\": \"rwcur\", \"datatype\": dbt.type_string()},\n    {\"name\": \"ryear\", \"datatype\": dbt.type_string()},\n    {\"name\": \"sbusa\", \"datatype\": dbt.type_string()},\n    {\"name\": \"scntr\", \"datatype\": dbt.type_string()},\n    {\"name\": \"segment\", \"datatype\": dbt.type_string()},\n    {\"name\": \"sfarea\", \"datatype\": dbt.type_string()},\n    {\"name\": \"timestamp\", \"datatype\": dbt.type_numeric(), \"alias\": \"faglflexa_timestamp\"},\n    {\"name\": \"tsl\", \"datatype\": dbt.type_numeric()},\n    {\"name\": \"usnam\", \"datatype\": dbt.type_string()},\n    {\"name\": \"wsl\", \"datatype\": dbt.type_numeric()},\n    {\"name\": \"xsplitmod\", \"datatype\": dbt.type_string()},\n    {\"name\": \"zzspreg\", \"datatype\": dbt.type_string()}\n] %}\n\n{{ return(columns) }}\n\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.type_numeric", "macro.dbt.type_timestamp", "macro.dbt.type_string"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1756850323.780758, "supported_languages": null}, "macro.sap.get_t161_columns": {"name": "get_t161_columns", "resource_type": "macro", "package_name": "sap", "path": "macros/get_column_macros/get_t161_columns.sql", "original_file_path": "macros/get_column_macros/get_t161_columns.sql", "unique_id": "macro.sap.get_t161_columns", "macro_sql": "{% macro get_t161_columns() %}\n\n{% set columns = [\n    {\"name\": \"_fivetran_deleted\", \"datatype\": \"boolean\"},\n    {\"name\": \"_fivetran_rowid\", \"datatype\": dbt.type_numeric()},\n    {\"name\": \"_fivetran_synced\", \"datatype\": dbt.type_timestamp()},\n    {\"name\": \"abgebot\", \"datatype\": dbt.type_string()},\n    {\"name\": \"abvor\", \"datatype\": dbt.type_string()},\n    {\"name\": \"ar_object\", \"datatype\": dbt.type_string()},\n    {\"name\": \"brefn\", \"datatype\": dbt.type_string()},\n    {\"name\": \"bsakz\", \"datatype\": dbt.type_string()},\n    {\"name\": \"bsart\", \"datatype\": dbt.type_string()},\n    {\"name\": \"bstyp\", \"datatype\": dbt.type_string()},\n    {\"name\": \"cp_aktive\", \"datatype\": dbt.type_string()},\n    {\"name\": \"cptype\", \"datatype\": dbt.type_string()},\n    {\"name\": \"fls_rsto\", \"datatype\": dbt.type_string()},\n    {\"name\": \"fsh_dpr_detpro\", \"datatype\": dbt.type_string()},\n    {\"name\": \"fsh_excl_return\", \"datatype\": dbt.type_string()},\n    {\"name\": \"fsh_po_idoc\", \"datatype\": dbt.type_string()},\n    {\"name\": \"fsh_var_kalsm\", \"datatype\": dbt.type_string()},\n    {\"name\": \"fsh_vas_act\", \"datatype\": dbt.type_string()},\n    {\"name\": \"fsh_vas_del\", \"datatype\": dbt.type_string()},\n    {\"name\": \"fsh_vas_detdt\", \"datatype\": dbt.type_string()},\n    {\"name\": \"fsh_vas_kalsm\", \"datatype\": dbt.type_string()},\n    {\"name\": \"gsfrg\", \"datatype\": dbt.type_string()},\n    {\"name\": \"hityp\", \"datatype\": dbt.type_string()},\n    {\"name\": \"hvr_change_time\", \"datatype\": dbt.type_string()},\n    {\"name\": \"hvr_is_deleted\", \"datatype\": dbt.type_int()},\n    {\"name\": \"koako\", \"datatype\": dbt.type_string()},\n    {\"name\": \"koett\", \"datatype\": dbt.type_string()},\n    {\"name\": \"kornr\", \"datatype\": dbt.type_string()},\n    {\"name\": \"kzale\", \"datatype\": dbt.type_string()},\n    {\"name\": \"lphis\", \"datatype\": dbt.type_string()},\n    {\"name\": \"mandt\", \"datatype\": dbt.type_string()},\n    {\"name\": \"mill_omkz\", \"datatype\": dbt.type_string()},\n    {\"name\": \"msr_active\", \"datatype\": dbt.type_string()},\n    {\"name\": \"numka\", \"datatype\": dbt.type_string()},\n    {\"name\": \"numkc\", \"datatype\": dbt.type_string()},\n    {\"name\": \"numke\", \"datatype\": dbt.type_string()},\n    {\"name\": \"numki\", \"datatype\": dbt.type_string()},\n    {\"name\": \"oicsegi\", \"datatype\": dbt.type_string()},\n    {\"name\": \"oirfqreq\", \"datatype\": dbt.type_string()},\n    {\"name\": \"pargr\", \"datatype\": dbt.type_string()},\n    {\"name\": \"pincr\", \"datatype\": dbt.type_string()},\n    {\"name\": \"refba\", \"datatype\": dbt.type_string()},\n    {\"name\": \"rdp_profile\", \"datatype\": dbt.type_string()},\n    {\"name\": \"shenq\", \"datatype\": dbt.type_string()},\n    {\"name\": \"stafo\", \"datatype\": dbt.type_string()},\n    {\"name\": \"stako\", \"datatype\": dbt.type_string()},\n    {\"name\": \"tolsl\", \"datatype\": dbt.type_string()},\n    {\"name\": \"umlif\", \"datatype\": dbt.type_string()},\n    {\"name\": \"upinc\", \"datatype\": dbt.type_string()},\n    {\"name\": \"variante\", \"datatype\": dbt.type_string()},\n    {\"name\": \"wrf_enable_dateline\", \"datatype\": dbt.type_string()},\n    {\"name\": \"wvvkz\", \"datatype\": dbt.type_string()},\n    {\"name\": \"xlokz\", \"datatype\": dbt.type_string()},\n    {\"name\": \"_sapmp_atnam\", \"datatype\": dbt.type_string()},\n    {\"name\": \"_sapmp_ceact\", \"datatype\": dbt.type_string()},\n    {\"name\": \"_sapmp_gauf\", \"datatype\": dbt.type_string()},\n    {\"name\": \"_sapmp_pdact\", \"datatype\": dbt.type_string()},\n    {\"name\": \"_sapmp_pprot\", \"datatype\": dbt.type_string()},\n    {\"name\": \"_sapmp_puser\", \"datatype\": dbt.type_string()},\n    {\"name\": \"_sapmp_pausw\", \"datatype\": dbt.type_string()}\n] %}\n\n{{ return(columns) }}\n\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.type_numeric", "macro.dbt.type_timestamp", "macro.dbt.type_string", "macro.dbt.type_int"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1756850323.7912855, "supported_languages": null}, "macro.sap.get_t503_columns": {"name": "get_t503_columns", "resource_type": "macro", "package_name": "sap", "path": "macros/get_column_macros/get_t503_columns.sql", "original_file_path": "macros/get_column_macros/get_t503_columns.sql", "unique_id": "macro.sap.get_t503_columns", "macro_sql": "{% macro get_t503_columns() %}\n\n{% set columns = [\n    {\"name\": \"_fivetran_deleted\", \"datatype\": \"boolean\"},\n    {\"name\": \"_fivetran_rowid\", \"datatype\": dbt.type_numeric()},\n    {\"name\": \"_fivetran_synced\", \"datatype\": dbt.type_timestamp()},\n    {\"name\": \"abart\", \"datatype\": dbt.type_string()},\n    {\"name\": \"abtyp\", \"datatype\": dbt.type_string()},\n    {\"name\": \"aksta\", \"datatype\": dbt.type_string()},\n    {\"name\": \"ansta\", \"datatype\": dbt.type_string()},\n    {\"name\": \"antyp\", \"datatype\": dbt.type_string()},\n    {\"name\": \"austa\", \"datatype\": dbt.type_string()},\n    {\"name\": \"burkz\", \"datatype\": dbt.type_string()},\n    {\"name\": \"inwid\", \"datatype\": dbt.type_string()},\n    {\"name\": \"konty\", \"datatype\": dbt.type_string()},\n    {\"name\": \"mandt\", \"datatype\": dbt.type_string()},\n    {\"name\": \"molga\", \"datatype\": dbt.type_string()},\n    {\"name\": \"persg\", \"datatype\": dbt.type_string()},\n    {\"name\": \"persk\", \"datatype\": dbt.type_string()},\n    {\"name\": \"trfkz\", \"datatype\": dbt.type_string()},\n    {\"name\": \"typsz\", \"datatype\": dbt.type_string()},\n    {\"name\": \"zeity\", \"datatype\": dbt.type_string()}\n] %}\n\n{{ return(columns) }}\n\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.type_numeric", "macro.dbt.type_timestamp", "macro.dbt.type_string"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1756850323.794982, "supported_languages": null}, "macro.sap.get_pa0000_columns": {"name": "get_pa0000_columns", "resource_type": "macro", "package_name": "sap", "path": "macros/get_column_macros/get_pa0000_columns.sql", "original_file_path": "macros/get_column_macros/get_pa0000_columns.sql", "unique_id": "macro.sap.get_pa0000_columns", "macro_sql": "{% macro get_pa0000_columns() %}\n\n{% set columns = [\n    {\"name\": \"_fivetran_deleted\", \"datatype\": \"boolean\"},\n    {\"name\": \"_fivetran_rowid\", \"datatype\": dbt.type_numeric()},\n    {\"name\": \"_fivetran_synced\", \"datatype\": dbt.type_timestamp()},\n    {\"name\": \"aedtm\", \"datatype\": dbt.type_string()},\n    {\"name\": \"begda\", \"datatype\": dbt.type_string()},\n    {\"name\": \"endda\", \"datatype\": dbt.type_string()},\n    {\"name\": \"flag1\", \"datatype\": dbt.type_string()},\n    {\"name\": \"flag2\", \"datatype\": dbt.type_string()},\n    {\"name\": \"flag3\", \"datatype\": dbt.type_string()},\n    {\"name\": \"flag4\", \"datatype\": dbt.type_string()},\n    {\"name\": \"grpvl\", \"datatype\": dbt.type_string()},\n    {\"name\": \"histo\", \"datatype\": dbt.type_string()},\n    {\"name\": \"itbld\", \"datatype\": dbt.type_string()},\n    {\"name\": \"itxex\", \"datatype\": dbt.type_string()},\n    {\"name\": \"mandt\", \"datatype\": dbt.type_string()},\n    {\"name\": \"massg\", \"datatype\": dbt.type_string()},\n    {\"name\": \"massn\", \"datatype\": dbt.type_string()},\n    {\"name\": \"objps\", \"datatype\": dbt.type_string()},\n    {\"name\": \"ordex\", \"datatype\": dbt.type_string()},\n    {\"name\": \"pernr\", \"datatype\": dbt.type_string()},\n    {\"name\": \"preas\", \"datatype\": dbt.type_string()},\n    {\"name\": \"refex\", \"datatype\": dbt.type_string()},\n    {\"name\": \"rese1\", \"datatype\": dbt.type_string()},\n    {\"name\": \"rese2\", \"datatype\": dbt.type_string()},\n    {\"name\": \"seqnr\", \"datatype\": dbt.type_string()},\n    {\"name\": \"sprps\", \"datatype\": dbt.type_string()},\n    {\"name\": \"stat1\", \"datatype\": dbt.type_string()},\n    {\"name\": \"stat2\", \"datatype\": dbt.type_string()},\n    {\"name\": \"stat3\", \"datatype\": dbt.type_string()},\n    {\"name\": \"subty\", \"datatype\": dbt.type_string()},\n    {\"name\": \"uname\", \"datatype\": dbt.type_string()}\n] %}\n\n{{ return(columns) }}\n\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.type_numeric", "macro.dbt.type_timestamp", "macro.dbt.type_string"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1756850323.8005347, "supported_languages": null}, "macro.sap.get_pa0001_columns": {"name": "get_pa0001_columns", "resource_type": "macro", "package_name": "sap", "path": "macros/get_column_macros/get_pa0001_columns.sql", "original_file_path": "macros/get_column_macros/get_pa0001_columns.sql", "unique_id": "macro.sap.get_pa0001_columns", "macro_sql": "{% macro get_pa0001_columns() %}\n\n{% set columns = [\n    {\"name\": \"_fivetran_deleted\", \"datatype\": \"boolean\"},\n    {\"name\": \"_fivetran_rowid\", \"datatype\": dbt.type_numeric()},\n    {\"name\": \"_fivetran_synced\", \"datatype\": dbt.type_timestamp()},\n    {\"name\": \"abkrs\", \"datatype\": dbt.type_string()},\n    {\"name\": \"aedtm\", \"datatype\": dbt.type_string()},\n    {\"name\": \"ansvh\", \"datatype\": dbt.type_string()},\n    {\"name\": \"begda\", \"datatype\": dbt.type_string()},\n    {\"name\": \"btrtl\", \"datatype\": dbt.type_string()},\n    {\"name\": \"budget_pd\", \"datatype\": dbt.type_string()},\n    {\"name\": \"bukrs\", \"datatype\": dbt.type_string()},\n    {\"name\": \"ename\", \"datatype\": dbt.type_string()},\n    {\"name\": \"endda\", \"datatype\": dbt.type_string()},\n    {\"name\": \"fistl\", \"datatype\": dbt.type_string()},\n    {\"name\": \"fkber\", \"datatype\": dbt.type_string()},\n    {\"name\": \"flag1\", \"datatype\": dbt.type_string()},\n    {\"name\": \"flag2\", \"datatype\": dbt.type_string()},\n    {\"name\": \"flag3\", \"datatype\": dbt.type_string()},\n    {\"name\": \"flag4\", \"datatype\": dbt.type_string()},\n    {\"name\": \"geber\", \"datatype\": dbt.type_string()},\n    {\"name\": \"grant_nbr\", \"datatype\": dbt.type_string()},\n    {\"name\": \"grpvl\", \"datatype\": dbt.type_string()},\n    {\"name\": \"gsber\", \"datatype\": dbt.type_string()},\n    {\"name\": \"histo\", \"datatype\": dbt.type_string()},\n    {\"name\": \"itbld\", \"datatype\": dbt.type_string()},\n    {\"name\": \"itxex\", \"datatype\": dbt.type_string()},\n    {\"name\": \"juper\", \"datatype\": dbt.type_string()},\n    {\"name\": \"kokrs\", \"datatype\": dbt.type_string()},\n    {\"name\": \"kostl\", \"datatype\": dbt.type_string()},\n    {\"name\": \"mandt\", \"datatype\": dbt.type_string()},\n    {\"name\": \"mstbr\", \"datatype\": dbt.type_string()},\n    {\"name\": \"objps\", \"datatype\": dbt.type_string()},\n    {\"name\": \"ordex\", \"datatype\": dbt.type_string()},\n    {\"name\": \"orgeh\", \"datatype\": dbt.type_string()},\n    {\"name\": \"otype\", \"datatype\": dbt.type_string()},\n    {\"name\": \"pernr\", \"datatype\": dbt.type_string()},\n    {\"name\": \"persg\", \"datatype\": dbt.type_string()},\n    {\"name\": \"persk\", \"datatype\": dbt.type_string()},\n    {\"name\": \"plans\", \"datatype\": dbt.type_string()},\n    {\"name\": \"preas\", \"datatype\": dbt.type_string()},\n    {\"name\": \"refex\", \"datatype\": dbt.type_string()},\n    {\"name\": \"rese1\", \"datatype\": dbt.type_string()},\n    {\"name\": \"rese2\", \"datatype\": dbt.type_string()},\n    {\"name\": \"sacha\", \"datatype\": dbt.type_string()},\n    {\"name\": \"sachp\", \"datatype\": dbt.type_string()},\n    {\"name\": \"sachz\", \"datatype\": dbt.type_string()},\n    {\"name\": \"sbmod\", \"datatype\": dbt.type_string()},\n    {\"name\": \"seqnr\", \"datatype\": dbt.type_string()},\n    {\"name\": \"sgmnt\", \"datatype\": dbt.type_string()},\n    {\"name\": \"sname\", \"datatype\": dbt.type_string()},\n    {\"name\": \"sprps\", \"datatype\": dbt.type_string()},\n    {\"name\": \"stell\", \"datatype\": dbt.type_string()},\n    {\"name\": \"subty\", \"datatype\": dbt.type_string()},\n    {\"name\": \"uname\", \"datatype\": dbt.type_string()},\n    {\"name\": \"vdsk1\", \"datatype\": dbt.type_string()},\n    {\"name\": \"werks\", \"datatype\": dbt.type_string()}\n] %}\n\n{{ return(columns) }}\n\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.type_numeric", "macro.dbt.type_timestamp", "macro.dbt.type_string"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1756850323.8101218, "supported_languages": null}, "macro.sap.get_tvagt_columns": {"name": "get_tvagt_columns", "resource_type": "macro", "package_name": "sap", "path": "macros/get_column_macros/get_tvagt_columns.sql", "original_file_path": "macros/get_column_macros/get_tvagt_columns.sql", "unique_id": "macro.sap.get_tvagt_columns", "macro_sql": "{% macro get_tvagt_columns() %}\n\n{% set columns = [\n    {\"name\": \"_fivetran_deleted\", \"datatype\": \"boolean\"},\n    {\"name\": \"_fivetran_rowid\", \"datatype\": dbt.type_numeric()},\n    {\"name\": \"_fivetran_synced\", \"datatype\": dbt.type_timestamp()},\n    {\"name\": \"abgru\", \"datatype\": dbt.type_string()},\n    {\"name\": \"bezei\", \"datatype\": dbt.type_string()},\n    {\"name\": \"mandt\", \"datatype\": dbt.type_string()},\n    {\"name\": \"spras\", \"datatype\": dbt.type_string()}\n] %}\n\n{{ return(columns) }}\n\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.type_numeric", "macro.dbt.type_timestamp", "macro.dbt.type_string"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1756850323.8117518, "supported_languages": null}, "macro.sap.get_ekko_columns": {"name": "get_ekko_columns", "resource_type": "macro", "package_name": "sap", "path": "macros/get_column_macros/get_ekko_columns.sql", "original_file_path": "macros/get_column_macros/get_ekko_columns.sql", "unique_id": "macro.sap.get_ekko_columns", "macro_sql": "{% macro get_ekko_columns() %}\n\n{% set columns = [\n    {\"name\": \"abgru\", \"datatype\": dbt.type_string()},\n    {\"name\": \"absgr\", \"datatype\": dbt.type_string()},\n    {\"name\": \"addnr\", \"datatype\": dbt.type_string()},\n    {\"name\": \"adrnr\", \"datatype\": dbt.type_string()},\n    {\"name\": \"aedat\", \"datatype\": dbt.type_string()},\n    {\"name\": \"angdt\", \"datatype\": dbt.type_string()},\n    {\"name\": \"angnr\", \"datatype\": dbt.type_string()},\n    {\"name\": \"aurel_allow\", \"datatype\": dbt.type_string()},\n    {\"name\": \"ausnr\", \"datatype\": dbt.type_string()},\n    {\"name\": \"autlf\", \"datatype\": dbt.type_string()},\n    {\"name\": \"bedat\", \"datatype\": dbt.type_string()},\n    {\"name\": \"bnddt\", \"datatype\": dbt.type_string()},\n    {\"name\": \"bsakz\", \"datatype\": dbt.type_string()},\n    {\"name\": \"bsart\", \"datatype\": dbt.type_string()},\n    {\"name\": \"bstyp\", \"datatype\": dbt.type_string()},\n    {\"name\": \"bwbdt\", \"datatype\": dbt.type_string()},\n    {\"name\": \"budg_type\", \"datatype\": dbt.type_string()},\n    {\"name\": \"bukrs\", \"datatype\": dbt.type_string()},\n    {\"name\": \"check_type\", \"datatype\": dbt.type_string()},\n    {\"name\": \"con_distr_lev\", \"datatype\": dbt.type_string()},\n    {\"name\": \"con_otb_req\", \"datatype\": dbt.type_string()},\n    {\"name\": \"con_prebook_lev\", \"datatype\": dbt.type_string()},\n    {\"name\": \"contract_allow\", \"datatype\": dbt.type_string()},\n    {\"name\": \"delper_allow\", \"datatype\": dbt.type_string()},\n    {\"name\": \"description\", \"datatype\": dbt.type_string()},\n    {\"name\": \"dpamt\", \"datatype\": dbt.type_string()},\n    {\"name\": \"dpdat\", \"datatype\": dbt.type_string()},\n    {\"name\": \"dppct\", \"datatype\": dbt.type_string()},\n    {\"name\": \"dptyp\", \"datatype\": dbt.type_string()},\n    {\"name\": \"ebeln\", \"datatype\": dbt.type_string()},\n    {\"name\": \"eindt\", \"datatype\": dbt.type_string()},\n    {\"name\": \"eindt_allow\", \"datatype\": dbt.type_string()},\n    {\"name\": \"ekgrp\", \"datatype\": dbt.type_string()},\n    {\"name\": \"ekgrp_allow\", \"datatype\": dbt.type_string()},\n    {\"name\": \"ekorg\", \"datatype\": dbt.type_string()},\n    {\"name\": \"eq_eindt\", \"datatype\": dbt.type_string()},\n    {\"name\": \"eq_werks\", \"datatype\": dbt.type_string()},\n    {\"name\": \"ernam\", \"datatype\": dbt.type_string()},\n    {\"name\": \"exnum\", \"datatype\": dbt.type_string()},\n    {\"name\": \"fixpo\", \"datatype\": dbt.type_string()},\n    {\"name\": \"fixpo_allow\", \"datatype\": dbt.type_string()},\n    {\"name\": \"force_cnt\", \"datatype\": dbt.type_string()},\n    {\"name\": \"force_id\", \"datatype\": dbt.type_string()},\n    {\"name\": \"frggr\", \"datatype\": dbt.type_string()},\n    {\"name\": \"frgke\", \"datatype\": dbt.type_string()},\n    {\"name\": \"frgrl\", \"datatype\": dbt.type_string()},\n    {\"name\": \"frgsx\", \"datatype\": dbt.type_string()},\n    {\"name\": \"frgzu\", \"datatype\": dbt.type_string()},\n    {\"name\": \"fsh_item_group\", \"datatype\": dbt.type_string()},\n    {\"name\": \"fsh_os_stg_change\", \"datatype\": dbt.type_string()},\n    {\"name\": \"fsh_snst_status\", \"datatype\": dbt.type_string()},\n    {\"name\": \"fsh_transaction\", \"datatype\": dbt.type_string()},\n    {\"name\": \"fsh_vas_last_item\", \"datatype\": dbt.type_string()},\n    {\"name\": \"gwldt\", \"datatype\": dbt.type_string()},\n    {\"name\": \"handoverloc\", \"datatype\": dbt.type_string()},\n    {\"name\": \"hierarchy_exists\", \"datatype\": dbt.type_string()},\n    {\"name\": \"hvr_change_time\", \"datatype\": dbt.type_string()},\n    {\"name\": \"hvr_is_deleted\", \"datatype\": dbt.type_int()},\n    {\"name\": \"ihran\", \"datatype\": dbt.type_string()},\n    {\"name\": \"ihrez\", \"datatype\": dbt.type_string()},\n    {\"name\": \"inco1\", \"datatype\": dbt.type_string()},\n    {\"name\": \"inco2\", \"datatype\": dbt.type_string()},\n    {\"name\": \"inco2_l\", \"datatype\": dbt.type_string()},\n    {\"name\": \"inco3_l\", \"datatype\": dbt.type_string()},\n    {\"name\": \"incov\", \"datatype\": dbt.type_string()},\n    {\"name\": \"kalsm\", \"datatype\": dbt.type_string()},\n    {\"name\": \"kdatb\", \"datatype\": dbt.type_string()},\n    {\"name\": \"kdate\", \"datatype\": dbt.type_string()},\n    {\"name\": \"key_id\", \"datatype\": dbt.type_string()},\n    {\"name\": \"key_id_allow\", \"datatype\": dbt.type_string()},\n    {\"name\": \"knumv\", \"datatype\": dbt.type_string()},\n    {\"name\": \"konnr\", \"datatype\": dbt.type_string()},\n    {\"name\": \"kornr\", \"datatype\": dbt.type_string()},\n    {\"name\": \"ktwrt\", \"datatype\": dbt.type_string()},\n    {\"name\": \"kufix\", \"datatype\": dbt.type_string()},\n    {\"name\": \"kunnr\", \"datatype\": dbt.type_string()},\n    {\"name\": \"lands\", \"datatype\": dbt.type_string()},\n    {\"name\": \"lblif\", \"datatype\": dbt.type_string()},\n    {\"name\": \"legal_contract\", \"datatype\": dbt.type_string()},\n    {\"name\": \"lifnr\", \"datatype\": dbt.type_string()},\n    {\"name\": \"lifre\", \"datatype\": dbt.type_string()},\n    {\"name\": \"llief\", \"datatype\": dbt.type_string()},\n    {\"name\": \"loekz\", \"datatype\": dbt.type_string()},\n    {\"name\": \"logsy\", \"datatype\": dbt.type_string()},\n    {\"name\": \"lphis\", \"datatype\": dbt.type_string()},\n    {\"name\": \"lponr\", \"datatype\": dbt.type_string()},\n    {\"name\": \"ltsnr_allow\", \"datatype\": dbt.type_string()},\n    {\"name\": \"mandt\", \"datatype\": dbt.type_string()},\n    {\"name\": \"memory\", \"datatype\": dbt.type_string()},\n    {\"name\": \"memorytype\", \"datatype\": dbt.type_string()},\n    {\"name\": \"msr_id\", \"datatype\": dbt.type_string()},\n    {\"name\": \"otb_cond_type\", \"datatype\": dbt.type_string()},\n    {\"name\": \"otb_curr\", \"datatype\": dbt.type_string()},\n    {\"name\": \"otb_level\", \"datatype\": dbt.type_string()},\n    {\"name\": \"otb_reason\", \"datatype\": dbt.type_string()},\n    {\"name\": \"otb_res_value\", \"datatype\": dbt.type_string()},\n    {\"name\": \"otb_spec_value\", \"datatype\": dbt.type_string()},\n    {\"name\": \"otb_status\", \"datatype\": dbt.type_string()},\n    {\"name\": \"otb_value\", \"datatype\": dbt.type_string()},\n    {\"name\": \"pincr\", \"datatype\": dbt.type_string()},\n    {\"name\": \"pohf_type\", \"datatype\": dbt.type_string()},\n    {\"name\": \"procstat\", \"datatype\": dbt.type_string()},\n    {\"name\": \"pstyp_allow\", \"datatype\": dbt.type_string()},\n    {\"name\": \"release_date\", \"datatype\": dbt.type_string()},\n    {\"name\": \"reason_code\", \"datatype\": dbt.type_string()},\n    {\"name\": \"reloc_id\", \"datatype\": dbt.type_string()},\n    {\"name\": \"reloc_seq_id\", \"datatype\": dbt.type_string()},\n    {\"name\": \"reswk\", \"datatype\": dbt.type_string()},\n    {\"name\": \"retpc\", \"datatype\": dbt.type_string()},\n    {\"name\": \"rettp\", \"datatype\": dbt.type_string()},\n    {\"name\": \"revno\", \"datatype\": dbt.type_string()},\n    {\"name\": \"rlwrt\", \"datatype\": dbt.type_string()},\n    {\"name\": \"scmproc\", \"datatype\": dbt.type_string()},\n    {\"name\": \"shipcond\", \"datatype\": dbt.type_string()},\n    {\"name\": \"source_logsys\", \"datatype\": dbt.type_string()},\n    {\"name\": \"spr_rsn_profile\", \"datatype\": dbt.type_string()},\n    {\"name\": \"spras\", \"datatype\": dbt.type_string()},\n    {\"name\": \"stafo\", \"datatype\": dbt.type_string()},\n    {\"name\": \"stako\", \"datatype\": dbt.type_string()},\n    {\"name\": \"statu\", \"datatype\": dbt.type_string()},\n    {\"name\": \"stceg\", \"datatype\": dbt.type_string()},\n    {\"name\": \"stceg_l\", \"datatype\": dbt.type_string()},\n    {\"name\": \"submi\", \"datatype\": dbt.type_string()},\n    {\"name\": \"telf1\", \"datatype\": dbt.type_string()},\n    {\"name\": \"threshold_exists\", \"datatype\": dbt.type_string()},\n    {\"name\": \"unsez\", \"datatype\": dbt.type_string()},\n    {\"name\": \"upinc\", \"datatype\": dbt.type_string()},\n    {\"name\": \"verkf\", \"datatype\": dbt.type_string()},\n    {\"name\": \"vsart\", \"datatype\": dbt.type_string()},\n    {\"name\": \"vzskz\", \"datatype\": dbt.type_string()},\n    {\"name\": \"waers\", \"datatype\": dbt.type_string()},\n    {\"name\": \"weakt\", \"datatype\": dbt.type_string()},\n    {\"name\": \"werks_allow\", \"datatype\": dbt.type_string()},\n    {\"name\": \"wkurs\", \"datatype\": dbt.type_string()},\n    {\"name\": \"zbd1p\", \"datatype\": dbt.type_string()},\n    {\"name\": \"zbd1t\", \"datatype\": dbt.type_string()},\n    {\"name\": \"zbd2p\", \"datatype\": dbt.type_string()},\n    {\"name\": \"zbd2t\", \"datatype\": dbt.type_string()},\n    {\"name\": \"zbd3t\", \"datatype\": dbt.type_string()},\n    {\"name\": \"zterm\", \"datatype\": dbt.type_string()},\n    {\"name\": \"_fivetran_deleted\", \"datatype\": \"boolean\"},\n    {\"name\": \"_fivetran_synced\", \"datatype\": dbt.type_timestamp()},\n    {\"name\": \"_fivetran_sap_archived\", \"datatype\": dbt.type_string()}\n] %}\n\n{{ return(columns) }}\n\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.type_string", "macro.dbt.type_int", "macro.dbt.type_timestamp"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1756850323.8361328, "supported_languages": null}, "macro.sap.get_dd07l_columns": {"name": "get_dd07l_columns", "resource_type": "macro", "package_name": "sap", "path": "macros/get_column_macros/get_dd07l_columns.sql", "original_file_path": "macros/get_column_macros/get_dd07l_columns.sql", "unique_id": "macro.sap.get_dd07l_columns", "macro_sql": "{% macro get_dd07l_columns() %}\n\n{% set columns = [\n    {\"name\": \"_fivetran_deleted\", \"datatype\": \"boolean\"},\n    {\"name\": \"_fivetran_rowid\", \"datatype\": dbt.type_numeric()},\n    {\"name\": \"_fivetran_synced\", \"datatype\": dbt.type_timestamp()},\n    {\"name\": \"as4local\", \"datatype\": dbt.type_string()},\n    {\"name\": \"as4vers\", \"datatype\": dbt.type_string()},\n    {\"name\": \"domvalue_l\", \"datatype\": dbt.type_string()},\n    {\"name\": \"domname\", \"datatype\": dbt.type_string()},\n    {\"name\": \"valpos\", \"datatype\": dbt.type_string()},\n    {\"name\": \"hvr_change_time\", \"datatype\": dbt.type_string()}\n] %}\n\n{{ return(columns) }}\n\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.type_numeric", "macro.dbt.type_timestamp", "macro.dbt.type_string"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1756850323.8383112, "supported_languages": null}, "macro.sap.get_t134t_columns": {"name": "get_t134t_columns", "resource_type": "macro", "package_name": "sap", "path": "macros/get_column_macros/get_t134t_columns.sql", "original_file_path": "macros/get_column_macros/get_t134t_columns.sql", "unique_id": "macro.sap.get_t134t_columns", "macro_sql": "{% macro get_t134t_columns() %}\n\n{% set columns = [\n    {\"name\": \"_fivetran_deleted\", \"datatype\": \"boolean\"},\n    {\"name\": \"_fivetran_rowid\", \"datatype\": dbt.type_numeric()},\n    {\"name\": \"_fivetran_synced\", \"datatype\": dbt.type_timestamp()},\n    {\"name\": \"mandt\", \"datatype\": dbt.type_string()},\n    {\"name\": \"mtart\", \"datatype\": dbt.type_string()},\n    {\"name\": \"mtbez\", \"datatype\": dbt.type_string()},\n    {\"name\": \"spras\", \"datatype\": dbt.type_string()}\n] %}\n\n{{ return(columns) }}\n\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.type_numeric", "macro.dbt.type_timestamp", "macro.dbt.type_string"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1756850323.839957, "supported_languages": null}, "macro.sap.get_t024_columns": {"name": "get_t024_columns", "resource_type": "macro", "package_name": "sap", "path": "macros/get_column_macros/get_t024_columns.sql", "original_file_path": "macros/get_column_macros/get_t024_columns.sql", "unique_id": "macro.sap.get_t024_columns", "macro_sql": "{% macro get_t024_columns() %}\n\n{% set columns = [\n    {\"name\": \"_fivetran_deleted\", \"datatype\": \"boolean\"},\n    {\"name\": \"_fivetran_rowid\", \"datatype\": dbt.type_numeric()},\n    {\"name\": \"_fivetran_synced\", \"datatype\": dbt.type_timestamp()},\n    {\"name\": \"_fivetran_sap_archived\", \"datatype\": dbt.type_string()},\n    {\"name\": \"ekgrp\", \"datatype\": dbt.type_string()},\n    {\"name\": \"eknam\", \"datatype\": dbt.type_string()},\n    {\"name\": \"ektel\", \"datatype\": dbt.type_string()},\n    {\"name\": \"ldest\", \"datatype\": dbt.type_string()},\n    {\"name\": \"mandt\", \"datatype\": dbt.type_string()},\n    {\"name\": \"smtp_addr\", \"datatype\": dbt.type_string()},\n    {\"name\": \"tel_extens\", \"datatype\": dbt.type_string()},\n    {\"name\": \"tel_number\", \"datatype\": dbt.type_string()},\n    {\"name\": \"telfx\", \"datatype\": dbt.type_string()}\n] %}\n\n{{ return(columns) }}\n\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.type_numeric", "macro.dbt.type_timestamp", "macro.dbt.type_string"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1756850323.8425214, "supported_languages": null}, "macro.sap.get_ekpo_columns": {"name": "get_ekpo_columns", "resource_type": "macro", "package_name": "sap", "path": "macros/get_column_macros/get_ekpo_columns.sql", "original_file_path": "macros/get_column_macros/get_ekpo_columns.sql", "unique_id": "macro.sap.get_ekpo_columns", "macro_sql": "{% macro get_ekpo_columns() %}\n\n{% set columns = [\n    {\"name\": \"abdat\", \"datatype\": dbt.type_string()},\n    {\"name\": \"abeln\", \"datatype\": dbt.type_string()},\n    {\"name\": \"abelp\", \"datatype\": dbt.type_string()},\n    {\"name\": \"abftz\", \"datatype\": dbt.type_numeric()},\n    {\"name\": \"abmng\", \"datatype\": dbt.type_numeric()},\n    {\"name\": \"abskz\", \"datatype\": dbt.type_string()},\n    {\"name\": \"abueb\", \"datatype\": dbt.type_string()},\n    {\"name\": \"adrn2\", \"datatype\": dbt.type_string()},\n    {\"name\": \"adrnr\", \"datatype\": dbt.type_string()},\n    {\"name\": \"advcode\", \"datatype\": dbt.type_string()},\n    {\"name\": \"aedat\", \"datatype\": dbt.type_string()},\n    {\"name\": \"afnam\", \"datatype\": dbt.type_string()},\n    {\"name\": \"agdat\", \"datatype\": dbt.type_string()},\n    {\"name\": \"agmem\", \"datatype\": dbt.type_string()},\n    {\"name\": \"aktnr\", \"datatype\": dbt.type_string()},\n    {\"name\": \"anfnr\", \"datatype\": dbt.type_string()},\n    {\"name\": \"anfps\", \"datatype\": dbt.type_string()},\n    {\"name\": \"anzpu\", \"datatype\": dbt.type_numeric()},\n    {\"name\": \"anzsn\", \"datatype\": dbt.type_numeric()},\n    {\"name\": \"apoms\", \"datatype\": dbt.type_string()},\n    {\"name\": \"arsnr\", \"datatype\": dbt.type_string()},\n    {\"name\": \"arsps\", \"datatype\": dbt.type_string()},\n    {\"name\": \"attyp\", \"datatype\": dbt.type_string()},\n    {\"name\": \"aurel\", \"datatype\": dbt.type_string()},\n    {\"name\": \"banfn\", \"datatype\": dbt.type_string()},\n    {\"name\": \"bednr\", \"datatype\": dbt.type_string()},\n    {\"name\": \"berid\", \"datatype\": dbt.type_string()},\n    {\"name\": \"blk_reason_id\", \"datatype\": dbt.type_string()},\n    {\"name\": \"blk_reason_txt\", \"datatype\": dbt.type_string()},\n    {\"name\": \"bnfpo\", \"datatype\": dbt.type_string()},\n    {\"name\": \"bonba\", \"datatype\": dbt.type_numeric()},\n    {\"name\": \"bonus\", \"datatype\": dbt.type_string()},\n    {\"name\": \"bprme\", \"datatype\": dbt.type_string()},\n    {\"name\": \"bpumn\", \"datatype\": dbt.type_numeric()},\n    {\"name\": \"bpumz\", \"datatype\": dbt.type_numeric()},\n    {\"name\": \"brgew\", \"datatype\": dbt.type_numeric()},\n    {\"name\": \"brtwr\", \"datatype\": dbt.type_numeric()},\n    {\"name\": \"bsgru\", \"datatype\": dbt.type_string()},\n    {\"name\": \"bstae\", \"datatype\": dbt.type_string()},\n    {\"name\": \"bstyp\", \"datatype\": dbt.type_string()},\n    {\"name\": \"budget_pd\", \"datatype\": dbt.type_string()},\n    {\"name\": \"bukrs\", \"datatype\": dbt.type_string()},\n    {\"name\": \"bwtar\", \"datatype\": dbt.type_string()},\n    {\"name\": \"bwtty\", \"datatype\": dbt.type_string()},\n    {\"name\": \"ccomp\", \"datatype\": dbt.type_string()},\n    {\"name\": \"chg_fplnr\", \"datatype\": dbt.type_string()},\n    {\"name\": \"chg_srv\", \"datatype\": dbt.type_string()},\n    {\"name\": \"cmpl_dlv_itm\", \"datatype\": dbt.type_string()},\n    {\"name\": \"cnfm_qty\", \"datatype\": dbt.type_numeric()},\n    {\"name\": \"cons_order\", \"datatype\": dbt.type_string()},\n    {\"name\": \"cqu_sar\", \"datatype\": dbt.type_numeric()},\n    {\"name\": \"cuobj\", \"datatype\": dbt.type_string()},\n    {\"name\": \"diff_invoice\", \"datatype\": dbt.type_string()},\n    {\"name\": \"disub_kunnr\", \"datatype\": dbt.type_string()},\n    {\"name\": \"disub_owner\", \"datatype\": dbt.type_string()},\n    {\"name\": \"disub_posnr\", \"datatype\": dbt.type_string()},\n    {\"name\": \"disub_pspnr\", \"datatype\": dbt.type_string()},\n    {\"name\": \"disub_sobkz\", \"datatype\": dbt.type_string()},\n    {\"name\": \"disub_vbeln\", \"datatype\": dbt.type_string()},\n    {\"name\": \"dpamt\", \"datatype\": dbt.type_numeric()},\n    {\"name\": \"dpdat\", \"datatype\": dbt.type_string()},\n    {\"name\": \"dppct\", \"datatype\": dbt.type_numeric()},\n    {\"name\": \"dptyp\", \"datatype\": dbt.type_string()},\n    {\"name\": \"drdat\", \"datatype\": dbt.type_string()},\n    {\"name\": \"druhr\", \"datatype\": dbt.type_string()},\n    {\"name\": \"drunr\", \"datatype\": dbt.type_string()},\n    {\"name\": \"ean11\", \"datatype\": dbt.type_string()},\n    {\"name\": \"ebeln\", \"datatype\": dbt.type_string()},\n    {\"name\": \"ebelp\", \"datatype\": dbt.type_string()},\n    {\"name\": \"ebon2\", \"datatype\": dbt.type_string()},\n    {\"name\": \"ebon3\", \"datatype\": dbt.type_string()},\n    {\"name\": \"ebonf\", \"datatype\": dbt.type_string()},\n    {\"name\": \"effwr\", \"datatype\": dbt.type_numeric()},\n    {\"name\": \"eglkz\", \"datatype\": dbt.type_string()},\n    {\"name\": \"ehtyp\", \"datatype\": dbt.type_string()},\n    {\"name\": \"eildt\", \"datatype\": dbt.type_string()},\n    {\"name\": \"ekkol\", \"datatype\": dbt.type_string()},\n    {\"name\": \"elikz\", \"datatype\": dbt.type_string()},\n    {\"name\": \"ematn\", \"datatype\": dbt.type_string()},\n    {\"name\": \"emlif\", \"datatype\": dbt.type_string()},\n    {\"name\": \"emnfr\", \"datatype\": dbt.type_string()},\n    {\"name\": \"empst\", \"datatype\": dbt.type_string()},\n    {\"name\": \"erekz\", \"datatype\": dbt.type_string()},\n    {\"name\": \"etdrk\", \"datatype\": dbt.type_string()},\n    {\"name\": \"etfz1\", \"datatype\": dbt.type_numeric()},\n    {\"name\": \"etfz2\", \"datatype\": dbt.type_numeric()},\n    {\"name\": \"evers\", \"datatype\": dbt.type_string()},\n    {\"name\": \"excpe\", \"datatype\": dbt.type_string()},\n    {\"name\": \"exlin\", \"datatype\": dbt.type_string()},\n    {\"name\": \"exsnr\", \"datatype\": dbt.type_string()},\n    {\"name\": \"ext_rfx_item\", \"datatype\": dbt.type_string()},\n    {\"name\": \"ext_rfx_number\", \"datatype\": dbt.type_string()},\n    {\"name\": \"ext_rfx_system\", \"datatype\": dbt.type_string()},\n    {\"name\": \"fabkz\", \"datatype\": dbt.type_string()},\n    {\"name\": \"ffzhi\", \"datatype\": dbt.type_numeric()},\n    {\"name\": \"fipos\", \"datatype\": dbt.type_string()},\n    {\"name\": \"fiscal_incentive\", \"datatype\": dbt.type_string()},\n    {\"name\": \"fiscal_incentive_id\", \"datatype\": dbt.type_string()},\n    {\"name\": \"fistl\", \"datatype\": dbt.type_string()},\n    {\"name\": \"fixmg\", \"datatype\": dbt.type_string()},\n    {\"name\": \"fkber\", \"datatype\": dbt.type_string()},\n    {\"name\": \"fls_rsto\", \"datatype\": dbt.type_string()},\n    {\"name\": \"fmfgus_key\", \"datatype\": dbt.type_string()},\n    {\"name\": \"fplnr\", \"datatype\": dbt.type_string()},\n    {\"name\": \"fsh_atp_date\", \"datatype\": dbt.type_string()},\n    {\"name\": \"fsh_collection\", \"datatype\": dbt.type_string()},\n    {\"name\": \"fsh_grid_cond_rec\", \"datatype\": dbt.type_string()},\n    {\"name\": \"fsh_item\", \"datatype\": dbt.type_string()},\n    {\"name\": \"fsh_item_group\", \"datatype\": dbt.type_string()},\n    {\"name\": \"fsh_psm_pfm_split\", \"datatype\": dbt.type_string()},\n    {\"name\": \"fsh_season\", \"datatype\": dbt.type_string()},\n    {\"name\": \"fsh_season_year\", \"datatype\": dbt.type_string()},\n    {\"name\": \"fsh_ss\", \"datatype\": dbt.type_string()},\n    {\"name\": \"fsh_theme\", \"datatype\": dbt.type_string()},\n    {\"name\": \"fsh_transaction\", \"datatype\": dbt.type_string()},\n    {\"name\": \"fsh_vas_prnt_id\", \"datatype\": dbt.type_string()},\n    {\"name\": \"fsh_vas_rel\", \"datatype\": dbt.type_string()},\n    {\"name\": \"geber\", \"datatype\": dbt.type_string()},\n    {\"name\": \"gewei\", \"datatype\": dbt.type_string()},\n    {\"name\": \"gnetwr\", \"datatype\": dbt.type_numeric()},\n    {\"name\": \"grant_nbr\", \"datatype\": dbt.type_string()},\n    {\"name\": \"handoverloc\", \"datatype\": dbt.type_string()},\n    {\"name\": \"hvr_change_time\", \"datatype\": dbt.type_string()},\n    {\"name\": \"hvr_is_deleted\", \"datatype\": dbt.type_int()},\n    {\"name\": \"idnlf\", \"datatype\": dbt.type_string()},\n    {\"name\": \"inco1\", \"datatype\": dbt.type_string()},\n    {\"name\": \"inco2\", \"datatype\": dbt.type_string()},\n    {\"name\": \"inco2_l\", \"datatype\": dbt.type_string()},\n    {\"name\": \"inco3_l\", \"datatype\": dbt.type_string()},\n    {\"name\": \"infnr\", \"datatype\": dbt.type_string()},\n    {\"name\": \"insmk\", \"datatype\": dbt.type_string()},\n    {\"name\": \"insnc\", \"datatype\": dbt.type_string()},\n    {\"name\": \"iprkz\", \"datatype\": dbt.type_string()},\n    {\"name\": \"itcons\", \"datatype\": dbt.type_string()},\n    {\"name\": \"iuid_relevant\", \"datatype\": dbt.type_string()},\n    {\"name\": \"j_1aidatep\", \"datatype\": dbt.type_string()},\n    {\"name\": \"j_1aindxp\", \"datatype\": dbt.type_string()},\n    {\"name\": \"j_1bindust\", \"datatype\": dbt.type_string()},\n    {\"name\": \"j_1bmatorg\", \"datatype\": dbt.type_string()},\n    {\"name\": \"j_1bmatuse\", \"datatype\": dbt.type_string()},\n    {\"name\": \"j_1bnbm\", \"datatype\": dbt.type_string()},\n    {\"name\": \"j_1bownpro\", \"datatype\": dbt.type_string()},\n    {\"name\": \"kanba\", \"datatype\": dbt.type_string()},\n    {\"name\": \"kblnr\", \"datatype\": dbt.type_string()},\n    {\"name\": \"kblpos\", \"datatype\": dbt.type_string()},\n    {\"name\": \"knttp\", \"datatype\": dbt.type_string()},\n    {\"name\": \"ko_gsber\", \"datatype\": dbt.type_string()},\n    {\"name\": \"ko_pargb\", \"datatype\": dbt.type_string()},\n    {\"name\": \"ko_pprctr\", \"datatype\": dbt.type_string()},\n    {\"name\": \"ko_prctr\", \"datatype\": dbt.type_string()},\n    {\"name\": \"kolif\", \"datatype\": dbt.type_string()},\n    {\"name\": \"konnr\", \"datatype\": dbt.type_string()},\n    {\"name\": \"ktmng\", \"datatype\": dbt.type_numeric()},\n    {\"name\": \"ktpnr\", \"datatype\": dbt.type_string()},\n    {\"name\": \"kunnr\", \"datatype\": dbt.type_string()},\n    {\"name\": \"kzabs\", \"datatype\": dbt.type_string()},\n    {\"name\": \"kzbws\", \"datatype\": dbt.type_string()},\n    {\"name\": \"kzfme\", \"datatype\": dbt.type_string()},\n    {\"name\": \"kzkfg\", \"datatype\": dbt.type_string()},\n    {\"name\": \"kzstu\", \"datatype\": dbt.type_string()},\n    {\"name\": \"kztlf\", \"datatype\": dbt.type_string()},\n    {\"name\": \"kzvbr\", \"datatype\": dbt.type_string()},\n    {\"name\": \"kzwi1\", \"datatype\": dbt.type_numeric()},\n    {\"name\": \"kzwi2\", \"datatype\": dbt.type_numeric()},\n    {\"name\": \"kzwi3\", \"datatype\": dbt.type_numeric()},\n    {\"name\": \"kzwi4\", \"datatype\": dbt.type_numeric()},\n    {\"name\": \"kzwi5\", \"datatype\": dbt.type_numeric()},\n    {\"name\": \"kzwi6\", \"datatype\": dbt.type_numeric()},\n    {\"name\": \"labnr\", \"datatype\": dbt.type_string()},\n    {\"name\": \"lblkz\", \"datatype\": dbt.type_string()},\n    {\"name\": \"lebre\", \"datatype\": dbt.type_string()},\n    {\"name\": \"lewed\", \"datatype\": dbt.type_string()},\n    {\"name\": \"lfret\", \"datatype\": dbt.type_string()},\n    {\"name\": \"lgort\", \"datatype\": dbt.type_string()},\n    {\"name\": \"lmein\", \"datatype\": dbt.type_string()},\n    {\"name\": \"loekz\", \"datatype\": dbt.type_string()},\n    {\"name\": \"ltsnr\", \"datatype\": dbt.type_string()},\n    {\"name\": \"mahn1\", \"datatype\": dbt.type_numeric()},\n    {\"name\": \"mahn2\", \"datatype\": dbt.type_numeric()},\n    {\"name\": \"mahn3\", \"datatype\": dbt.type_numeric()},\n    {\"name\": \"mahnz\", \"datatype\": dbt.type_numeric()},\n    {\"name\": \"mandt\", \"datatype\": dbt.type_string()},\n    {\"name\": \"manual_tc_reason\", \"datatype\": dbt.type_string()},\n    {\"name\": \"matkl\", \"datatype\": dbt.type_string()},\n    {\"name\": \"matnr\", \"datatype\": dbt.type_string()},\n    {\"name\": \"meins\", \"datatype\": dbt.type_string()},\n    {\"name\": \"menge\", \"datatype\": dbt.type_numeric()},\n    {\"name\": \"meprf\", \"datatype\": dbt.type_string()},\n    {\"name\": \"mfrgr\", \"datatype\": dbt.type_string()},\n    {\"name\": \"mfrnr\", \"datatype\": dbt.type_string()},\n    {\"name\": \"mfrpn\", \"datatype\": dbt.type_string()},\n    {\"name\": \"mfzhi\", \"datatype\": dbt.type_numeric()},\n    {\"name\": \"mhdrz\", \"datatype\": dbt.type_numeric()},\n    {\"name\": \"mlmaa\", \"datatype\": dbt.type_string()},\n    {\"name\": \"mprof\", \"datatype\": dbt.type_string()},\n    {\"name\": \"mrpind\", \"datatype\": dbt.type_string()},\n    {\"name\": \"mtart\", \"datatype\": dbt.type_string()},\n    {\"name\": \"mwskz\", \"datatype\": dbt.type_string()},\n    {\"name\": \"navnw\", \"datatype\": dbt.type_numeric()},\n    {\"name\": \"netpr\", \"datatype\": dbt.type_numeric()},\n    {\"name\": \"netwr\", \"datatype\": dbt.type_numeric()},\n    {\"name\": \"nfabd\", \"datatype\": dbt.type_string()},\n    {\"name\": \"nlabd\", \"datatype\": dbt.type_string()},\n    {\"name\": \"notkz\", \"datatype\": dbt.type_string()},\n    {\"name\": \"novet\", \"datatype\": dbt.type_string()},\n    {\"name\": \"nrfhg\", \"datatype\": dbt.type_string()},\n    {\"name\": \"ntgew\", \"datatype\": dbt.type_numeric()},\n    {\"name\": \"oia_baselo\", \"datatype\": dbt.type_string()},\n    {\"name\": \"oia_ipmvat\", \"datatype\": dbt.type_string()},\n    {\"name\": \"oia_spltiv\", \"datatype\": dbt.type_string()},\n    {\"name\": \"oibasprod\", \"datatype\": dbt.type_string()},\n    {\"name\": \"oic_adestn\", \"datatype\": dbt.type_string()},\n    {\"name\": \"oic_aorgin\", \"datatype\": dbt.type_string()},\n    {\"name\": \"oic_dcityc\", \"datatype\": dbt.type_string()},\n    {\"name\": \"oic_dcounc\", \"datatype\": dbt.type_string()},\n    {\"name\": \"oic_dland1\", \"datatype\": dbt.type_string()},\n    {\"name\": \"oic_dregio\", \"datatype\": dbt.type_string()},\n    {\"name\": \"oic_lifnr\", \"datatype\": dbt.type_string()},\n    {\"name\": \"oic_mot\", \"datatype\": dbt.type_string()},\n    {\"name\": \"oic_ocityc\", \"datatype\": dbt.type_string()},\n    {\"name\": \"oic_ocounc\", \"datatype\": dbt.type_string()},\n    {\"name\": \"oic_oland1\", \"datatype\": dbt.type_string()},\n    {\"name\": \"oic_oregio\", \"datatype\": dbt.type_string()},\n    {\"name\": \"oic_pbatch\", \"datatype\": dbt.type_string()},\n    {\"name\": \"oic_pdestn\", \"datatype\": dbt.type_string()},\n    {\"name\": \"oic_porgin\", \"datatype\": dbt.type_string()},\n    {\"name\": \"oic_ptrip\", \"datatype\": dbt.type_string()},\n    {\"name\": \"oic_truckn\", \"datatype\": dbt.type_string()},\n    {\"name\": \"oicertf1\", \"datatype\": dbt.type_string()},\n    {\"name\": \"oicertf1_gi\", \"datatype\": dbt.type_string()},\n    {\"name\": \"oid_extbol\", \"datatype\": dbt.type_string()},\n    {\"name\": \"oid_miscdl\", \"datatype\": dbt.type_string()},\n    {\"name\": \"oidatfm1\", \"datatype\": dbt.type_string()},\n    {\"name\": \"oidatfm1_gi\", \"datatype\": dbt.type_string()},\n    {\"name\": \"oidatto1\", \"datatype\": dbt.type_string()},\n    {\"name\": \"oidatto1_gi\", \"datatype\": dbt.type_string()},\n    {\"name\": \"oiedbal\", \"datatype\": dbt.type_string()},\n    {\"name\": \"oiedbal_gi\", \"datatype\": dbt.type_string()},\n    {\"name\": \"oiedbalm\", \"datatype\": dbt.type_string()},\n    {\"name\": \"oiedbalm_gi\", \"datatype\": dbt.type_string()},\n    {\"name\": \"oiedok\", \"datatype\": dbt.type_string()},\n    {\"name\": \"oiedok_gi\", \"datatype\": dbt.type_string()},\n    {\"name\": \"oiexgnum\", \"datatype\": dbt.type_string()},\n    {\"name\": \"oiexgtyp\", \"datatype\": dbt.type_string()},\n    {\"name\": \"oiextnr\", \"datatype\": dbt.type_string()},\n    {\"name\": \"oifeech\", \"datatype\": dbt.type_string()},\n    {\"name\": \"oifeedt\", \"datatype\": dbt.type_string()},\n    {\"name\": \"oifeetot\", \"datatype\": dbt.type_numeric()},\n    {\"name\": \"oiferp\", \"datatype\": dbt.type_string()},\n    {\"name\": \"oiftind\", \"datatype\": dbt.type_string()},\n    {\"name\": \"oighndl\", \"datatype\": dbt.type_string()},\n    {\"name\": \"oih_folqty\", \"datatype\": dbt.type_numeric()},\n    {\"name\": \"oih_folqty_gi\", \"datatype\": dbt.type_numeric()},\n    {\"name\": \"oih_lcfol\", \"datatype\": dbt.type_string()},\n    {\"name\": \"oih_lcfol_gi\", \"datatype\": dbt.type_string()},\n    {\"name\": \"oih_licin\", \"datatype\": dbt.type_string()},\n    {\"name\": \"oih_licin_gi\", \"datatype\": dbt.type_string()},\n    {\"name\": \"oih_lictp\", \"datatype\": dbt.type_string()},\n    {\"name\": \"oih_lictp_gi\", \"datatype\": dbt.type_string()},\n    {\"name\": \"oihantyp\", \"datatype\": dbt.type_string()},\n    {\"name\": \"oihantyp_gi\", \"datatype\": dbt.type_string()},\n    {\"name\": \"oiinex\", \"datatype\": dbt.type_string()},\n    {\"name\": \"oiinex_gi\", \"datatype\": dbt.type_string()},\n    {\"name\": \"oiitmnr\", \"datatype\": dbt.type_string()},\n    {\"name\": \"oimatcyc\", \"datatype\": dbt.type_string()},\n    {\"name\": \"oinetcyc\", \"datatype\": dbt.type_string()},\n    {\"name\": \"oioilcon\", \"datatype\": dbt.type_string()},\n    {\"name\": \"oipipeval\", \"datatype\": dbt.type_string()},\n    {\"name\": \"oipricie\", \"datatype\": dbt.type_string()},\n    {\"name\": \"oipriop\", \"datatype\": dbt.type_string()},\n    {\"name\": \"oisbrel\", \"datatype\": dbt.type_string()},\n    {\"name\": \"oitaxcon\", \"datatype\": dbt.type_numeric()},\n    {\"name\": \"oitaxfrom\", \"datatype\": dbt.type_string()},\n    {\"name\": \"oitaxgrp\", \"datatype\": dbt.type_string()},\n    {\"name\": \"oitaxgrp_gi\", \"datatype\": dbt.type_string()},\n    {\"name\": \"oitaxto\", \"datatype\": dbt.type_string()},\n    {\"name\": \"oitrind\", \"datatype\": dbt.type_string()},\n    {\"name\": \"oitrkjr\", \"datatype\": dbt.type_string()},\n    {\"name\": \"oitrknr\", \"datatype\": dbt.type_string()},\n    {\"name\": \"oitxcon1\", \"datatype\": dbt.type_numeric()},\n    {\"name\": \"oitxcon2\", \"datatype\": dbt.type_numeric()},\n    {\"name\": \"oitxcon3\", \"datatype\": dbt.type_numeric()},\n    {\"name\": \"oitxcon4\", \"datatype\": dbt.type_numeric()},\n    {\"name\": \"oitxcon5\", \"datatype\": dbt.type_numeric()},\n    {\"name\": \"oitxcon6\", \"datatype\": dbt.type_numeric()},\n    {\"name\": \"oiumbar\", \"datatype\": dbt.type_string()},\n    {\"name\": \"oivatf\", \"datatype\": dbt.type_numeric()},\n    {\"name\": \"oivath\", \"datatype\": dbt.type_numeric()},\n    {\"name\": \"packno\", \"datatype\": dbt.type_string()},\n    {\"name\": \"peinh\", \"datatype\": dbt.type_numeric()},\n    {\"name\": \"plifz\", \"datatype\": dbt.type_numeric()},\n    {\"name\": \"pol_id\", \"datatype\": dbt.type_string()},\n    {\"name\": \"prdat\", \"datatype\": dbt.type_string()},\n    {\"name\": \"prio_req\", \"datatype\": dbt.type_string()},\n    {\"name\": \"prio_urg\", \"datatype\": dbt.type_string()},\n    {\"name\": \"prsdr\", \"datatype\": dbt.type_string()},\n    {\"name\": \"pstyp\", \"datatype\": dbt.type_string()},\n    {\"name\": \"punei\", \"datatype\": dbt.type_string()},\n    {\"name\": \"put_back\", \"datatype\": dbt.type_string()},\n    {\"name\": \"rdprf\", \"datatype\": dbt.type_string()},\n    {\"name\": \"reason_code\", \"datatype\": dbt.type_string()},\n    {\"name\": \"ref_item\", \"datatype\": dbt.type_string()},\n    {\"name\": \"refsite\", \"datatype\": dbt.type_string()},\n    {\"name\": \"repos\", \"datatype\": dbt.type_string()},\n    {\"name\": \"reslo\", \"datatype\": dbt.type_string()},\n    {\"name\": \"retpc\", \"datatype\": dbt.type_numeric()},\n    {\"name\": \"retpo\", \"datatype\": dbt.type_string()},\n    {\"name\": \"revlv\", \"datatype\": dbt.type_string()},\n    {\"name\": \"saisj\", \"datatype\": dbt.type_string()},\n    {\"name\": \"saiso\", \"datatype\": dbt.type_string()},\n    {\"name\": \"satnr\", \"datatype\": dbt.type_string()},\n    {\"name\": \"schpr\", \"datatype\": dbt.type_string()},\n    {\"name\": \"sernp\", \"datatype\": dbt.type_string()},\n    {\"name\": \"serru\", \"datatype\": dbt.type_string()},\n    {\"name\": \"sf_txjcd\", \"datatype\": dbt.type_string()},\n    {\"name\": \"sgt_rcat\", \"datatype\": dbt.type_string()},\n    {\"name\": \"sgt_scat\", \"datatype\": dbt.type_string()},\n    {\"name\": \"sikgr\", \"datatype\": dbt.type_string()},\n    {\"name\": \"sktof\", \"datatype\": dbt.type_string()},\n    {\"name\": \"sobkz\", \"datatype\": dbt.type_string()},\n    {\"name\": \"source_id\", \"datatype\": dbt.type_string()},\n    {\"name\": \"source_key\", \"datatype\": dbt.type_string()},\n    {\"name\": \"spe_abgru\", \"datatype\": dbt.type_string()},\n    {\"name\": \"spe_chng_sys\", \"datatype\": dbt.type_string()},\n    {\"name\": \"spe_cq_ctrltype\", \"datatype\": dbt.type_string()},\n    {\"name\": \"spe_cq_nocq\", \"datatype\": dbt.type_string()},\n    {\"name\": \"spe_crm_fkrel\", \"datatype\": dbt.type_string()},\n    {\"name\": \"spe_crm_ref_item\", \"datatype\": dbt.type_string()},\n    {\"name\": \"spe_crm_ref_so\", \"datatype\": dbt.type_string()},\n    {\"name\": \"spe_crm_so\", \"datatype\": dbt.type_string()},\n    {\"name\": \"spe_crm_so_item\", \"datatype\": dbt.type_string()},\n    {\"name\": \"spe_ewm_dtc\", \"datatype\": dbt.type_string()},\n    {\"name\": \"spe_insmk_src\", \"datatype\": dbt.type_string()},\n    {\"name\": \"spinf\", \"datatype\": dbt.type_string()},\n    {\"name\": \"srm_contract_id\", \"datatype\": dbt.type_string()},\n    {\"name\": \"srm_contract_itm\", \"datatype\": dbt.type_string()},\n    {\"name\": \"srv_bas_com\", \"datatype\": dbt.type_string()},\n    {\"name\": \"ssqss\", \"datatype\": dbt.type_string()},\n    {\"name\": \"stafo\", \"datatype\": dbt.type_string()},\n    {\"name\": \"stapo\", \"datatype\": dbt.type_string()},\n    {\"name\": \"statu\", \"datatype\": dbt.type_string()},\n    {\"name\": \"status\", \"datatype\": dbt.type_string()},\n    {\"name\": \"tax_subject_st\", \"datatype\": dbt.type_string()},\n    {\"name\": \"tc_aut_det\", \"datatype\": dbt.type_string()},\n    {\"name\": \"techs\", \"datatype\": dbt.type_string()},\n    {\"name\": \"trmrisk_relevant\", \"datatype\": dbt.type_string()},\n    {\"name\": \"twrkz\", \"datatype\": dbt.type_string()},\n    {\"name\": \"txjcd\", \"datatype\": dbt.type_string()},\n    {\"name\": \"txz01\", \"datatype\": dbt.type_string()},\n    {\"name\": \"tzonrc\", \"datatype\": dbt.type_string()},\n    {\"name\": \"uebpo\", \"datatype\": dbt.type_string()},\n    {\"name\": \"uebtk\", \"datatype\": dbt.type_string()},\n    {\"name\": \"uebto\", \"datatype\": dbt.type_numeric()},\n    {\"name\": \"umren\", \"datatype\": dbt.type_numeric()},\n    {\"name\": \"umrez\", \"datatype\": dbt.type_numeric()},\n    {\"name\": \"umsok\", \"datatype\": dbt.type_string()},\n    {\"name\": \"untto\", \"datatype\": dbt.type_numeric()},\n    {\"name\": \"uptyp\", \"datatype\": dbt.type_string()},\n    {\"name\": \"upvor\", \"datatype\": dbt.type_string()},\n    {\"name\": \"usequ\", \"datatype\": dbt.type_string()},\n    {\"name\": \"voleh\", \"datatype\": dbt.type_string()},\n    {\"name\": \"volum\", \"datatype\": dbt.type_numeric()},\n    {\"name\": \"vorab\", \"datatype\": dbt.type_string()},\n    {\"name\": \"vrtkz\", \"datatype\": dbt.type_string()},\n    {\"name\": \"vsart\", \"datatype\": dbt.type_string()},\n    {\"name\": \"wabwe\", \"datatype\": dbt.type_string()},\n    {\"name\": \"webaz\", \"datatype\": dbt.type_numeric()},\n    {\"name\": \"webre\", \"datatype\": dbt.type_string()},\n    {\"name\": \"weora\", \"datatype\": dbt.type_string()},\n    {\"name\": \"wepos\", \"datatype\": dbt.type_string()},\n    {\"name\": \"werks\", \"datatype\": dbt.type_string()},\n    {\"name\": \"weunb\", \"datatype\": dbt.type_string()},\n    {\"name\": \"wrf_charstc1\", \"datatype\": dbt.type_string()},\n    {\"name\": \"wrf_charstc2\", \"datatype\": dbt.type_string()},\n    {\"name\": \"wrf_charstc3\", \"datatype\": dbt.type_string()},\n    {\"name\": \"xconditions\", \"datatype\": dbt.type_string()},\n    {\"name\": \"xersy\", \"datatype\": dbt.type_string()},\n    {\"name\": \"xoblr\", \"datatype\": dbt.type_string()},\n    {\"name\": \"zgtyp\", \"datatype\": dbt.type_string()},\n    {\"name\": \"zwert\", \"datatype\": dbt.type_numeric()},\n    {\"name\": \"_fivetran_deleted\", \"datatype\": dbt.type_boolean()},\n    {\"name\": \"_fivetran_rowid\", \"datatype\": dbt.type_numeric()},\n    {\"name\": \"_fivetran_synced\", \"datatype\": dbt.type_timestamp()},\n    {\"name\": \"_fivetran_sap_archived\", \"datatype\": dbt.type_string()},\n    {\"name\": \"_accgo_is_co_rel\", \"datatype\": dbt.type_string()},\n    {\"name\": \"_bev1_nedepfree\", \"datatype\": dbt.type_string()},\n    {\"name\": \"_bev1_negen_item\", \"datatype\": dbt.type_string()},\n    {\"name\": \"_bev1_nestruccat\", \"datatype\": dbt.type_string()}\n] %}\n\n{{ return(columns) }}\n\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.type_string", "macro.dbt.type_numeric", "macro.dbt.type_int", "macro.dbt.type_boolean", "macro.dbt.type_timestamp"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1756850323.9081316, "supported_languages": null}, "macro.sap.get_tvag_columns": {"name": "get_tvag_columns", "resource_type": "macro", "package_name": "sap", "path": "macros/get_column_macros/get_tvag_columns.sql", "original_file_path": "macros/get_column_macros/get_tvag_columns.sql", "unique_id": "macro.sap.get_tvag_columns", "macro_sql": "{% macro get_tvag_columns() %}\n\n{% set columns = [\n    {\"name\": \"_fivetran_deleted\", \"datatype\": \"boolean\"},\n    {\"name\": \"_fivetran_rowid\", \"datatype\": dbt.type_numeric()},\n    {\"name\": \"_fivetran_synced\", \"datatype\": dbt.type_timestamp()},\n    {\"name\": \"abgru\", \"datatype\": dbt.type_string()},\n    {\"name\": \"dragr\", \"datatype\": dbt.type_string()},\n    {\"name\": \"ep_off\", \"datatype\": dbt.type_string()},\n    {\"name\": \"fk_erl\", \"datatype\": dbt.type_string()},\n    {\"name\": \"fsh_pqr_spec\", \"datatype\": dbt.type_string()},\n    {\"name\": \"hvr_change_time\", \"datatype\": dbt.type_string()},\n    {\"name\": \"hvr_is_deleted\", \"datatype\": dbt.type_int()},\n    {\"name\": \"kowrr\", \"datatype\": dbt.type_string()},\n    {\"name\": \"mandt\", \"datatype\": dbt.type_string()}\n] %}\n\n{{ return(columns) }}\n\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.type_numeric", "macro.dbt.type_timestamp", "macro.dbt.type_string", "macro.dbt.type_int"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1756850323.911054, "supported_languages": null}, "macro.sap.get_kna1_columns": {"name": "get_kna1_columns", "resource_type": "macro", "package_name": "sap", "path": "macros/get_column_macros/get_kna1_columns.sql", "original_file_path": "macros/get_column_macros/get_kna1_columns.sql", "unique_id": "macro.sap.get_kna1_columns", "macro_sql": "{% macro get_kna1_columns() %}\n\n{% set columns = [\n    {\"name\": \"_fivetran_deleted\", \"datatype\": \"boolean\"},\n    {\"name\": \"_fivetran_rowid\", \"datatype\": dbt.type_numeric()},\n    {\"name\": \"_fivetran_sap_archived\", \"datatype\": dbt.type_timestamp()},\n    {\"name\": \"_fivetran_synced\", \"datatype\": dbt.type_timestamp()},\n    {\"name\": \"abrvw\", \"datatype\": dbt.type_string()},\n    {\"name\": \"adrnr\", \"datatype\": dbt.type_string()},\n    {\"name\": \"alc\", \"datatype\": dbt.type_string()},\n    {\"name\": \"anred\", \"datatype\": dbt.type_string()},\n    {\"name\": \"aufsd\", \"datatype\": dbt.type_string()},\n    {\"name\": \"bahne\", \"datatype\": dbt.type_string()},\n    {\"name\": \"bahns\", \"datatype\": dbt.type_string()},\n    {\"name\": \"bbbnr\", \"datatype\": dbt.type_string()},\n    {\"name\": \"bbsnr\", \"datatype\": dbt.type_string()},\n    {\"name\": \"begru\", \"datatype\": dbt.type_string()},\n    {\"name\": \"bran1\", \"datatype\": dbt.type_string()},\n    {\"name\": \"bran2\", \"datatype\": dbt.type_string()},\n    {\"name\": \"bran3\", \"datatype\": dbt.type_string()},\n    {\"name\": \"bran4\", \"datatype\": dbt.type_string()},\n    {\"name\": \"bran5\", \"datatype\": dbt.type_string()},\n    {\"name\": \"brsch\", \"datatype\": dbt.type_string()},\n    {\"name\": \"bubkz\", \"datatype\": dbt.type_string()},\n    {\"name\": \"cassd\", \"datatype\": dbt.type_string()},\n    {\"name\": \"ccc01\", \"datatype\": dbt.type_string()},\n    {\"name\": \"ccc02\", \"datatype\": dbt.type_string()},\n    {\"name\": \"ccc03\", \"datatype\": dbt.type_string()},\n    {\"name\": \"ccc04\", \"datatype\": dbt.type_string()},\n    {\"name\": \"cfopc\", \"datatype\": dbt.type_string()},\n    {\"name\": \"cityc\", \"datatype\": dbt.type_string()},\n    {\"name\": \"civve\", \"datatype\": dbt.type_string()},\n    {\"name\": \"cnae\", \"datatype\": dbt.type_string()},\n    {\"name\": \"comsize\", \"datatype\": dbt.type_string()},\n    {\"name\": \"confs\", \"datatype\": dbt.type_string()},\n    {\"name\": \"counc\", \"datatype\": dbt.type_string()},\n    {\"name\": \"crtn\", \"datatype\": dbt.type_string()},\n    {\"name\": \"cvp_xblck\", \"datatype\": dbt.type_string()},\n    {\"name\": \"datlt\", \"datatype\": dbt.type_string()},\n    {\"name\": \"dear1\", \"datatype\": dbt.type_string()},\n    {\"name\": \"dear2\", \"datatype\": dbt.type_string()},\n    {\"name\": \"dear3\", \"datatype\": dbt.type_string()},\n    {\"name\": \"dear4\", \"datatype\": dbt.type_string()},\n    {\"name\": \"dear5\", \"datatype\": dbt.type_string()},\n    {\"name\": \"dear6\", \"datatype\": dbt.type_string()},\n    {\"name\": \"decregpc\", \"datatype\": dbt.type_string()},\n    {\"name\": \"dtams\", \"datatype\": dbt.type_string()},\n    {\"name\": \"dtaws\", \"datatype\": dbt.type_string()},\n    {\"name\": \"duefl\", \"datatype\": dbt.type_string()},\n    {\"name\": \"duns\", \"datatype\": dbt.type_string()},\n    {\"name\": \"duns4\", \"datatype\": dbt.type_string()},\n    {\"name\": \"ekont\", \"datatype\": dbt.type_string()},\n    {\"name\": \"erdat\", \"datatype\": dbt.type_string()},\n    {\"name\": \"ernam\", \"datatype\": dbt.type_string()},\n    {\"name\": \"etikg\", \"datatype\": dbt.type_string()},\n    {\"name\": \"exabl\", \"datatype\": dbt.type_string()},\n    {\"name\": \"exp\", \"datatype\": dbt.type_string()},\n    {\"name\": \"faksd\", \"datatype\": dbt.type_string()},\n    {\"name\": \"fee_schedule\", \"datatype\": dbt.type_string()},\n    {\"name\": \"fiskn\", \"datatype\": dbt.type_string()},\n    {\"name\": \"fityp\", \"datatype\": dbt.type_string()},\n    {\"name\": \"gform\", \"datatype\": dbt.type_string()},\n    {\"name\": \"hzuor\", \"datatype\": dbt.type_string()},\n    {\"name\": \"icmstaxpay\", \"datatype\": dbt.type_string()},\n    {\"name\": \"indtyp\", \"datatype\": dbt.type_string()},\n    {\"name\": \"inspatdebi\", \"datatype\": dbt.type_string()},\n    {\"name\": \"inspbydebi\", \"datatype\": dbt.type_string()},\n    {\"name\": \"j_1kfrepre\", \"datatype\": dbt.type_string()},\n    {\"name\": \"j_1kftbus\", \"datatype\": dbt.type_string()},\n    {\"name\": \"j_1kftind\", \"datatype\": dbt.type_string()},\n    {\"name\": \"jmjah\", \"datatype\": dbt.type_string()},\n    {\"name\": \"jmzah\", \"datatype\": dbt.type_string()},\n    {\"name\": \"katr1\", \"datatype\": dbt.type_string()},\n    {\"name\": \"katr10\", \"datatype\": dbt.type_string()},\n    {\"name\": \"katr2\", \"datatype\": dbt.type_string()},\n    {\"name\": \"katr3\", \"datatype\": dbt.type_string()},\n    {\"name\": \"katr4\", \"datatype\": dbt.type_string()},\n    {\"name\": \"katr5\", \"datatype\": dbt.type_string()},\n    {\"name\": \"katr6\", \"datatype\": dbt.type_string()},\n    {\"name\": \"katr7\", \"datatype\": dbt.type_string()},\n    {\"name\": \"katr8\", \"datatype\": dbt.type_string()},\n    {\"name\": \"katr9\", \"datatype\": dbt.type_string()},\n    {\"name\": \"kdkg1\", \"datatype\": dbt.type_string()},\n    {\"name\": \"kdkg2\", \"datatype\": dbt.type_string()},\n    {\"name\": \"kdkg3\", \"datatype\": dbt.type_string()},\n    {\"name\": \"kdkg4\", \"datatype\": dbt.type_string()},\n    {\"name\": \"kdkg5\", \"datatype\": dbt.type_string()},\n    {\"name\": \"knazk\", \"datatype\": dbt.type_string()},\n    {\"name\": \"knrza\", \"datatype\": dbt.type_string()},\n    {\"name\": \"knurl\", \"datatype\": dbt.type_string()},\n    {\"name\": \"konzs\", \"datatype\": dbt.type_string()},\n    {\"name\": \"ktocd\", \"datatype\": dbt.type_string()},\n    {\"name\": \"ktokd\", \"datatype\": dbt.type_string()},\n    {\"name\": \"kukla\", \"datatype\": dbt.type_string()},\n    {\"name\": \"kunnr\", \"datatype\": dbt.type_string()},\n    {\"name\": \"land1\", \"datatype\": dbt.type_string()},\n    {\"name\": \"legalnat\", \"datatype\": dbt.type_string()},\n    {\"name\": \"lifnr\", \"datatype\": dbt.type_string()},\n    {\"name\": \"lifsd\", \"datatype\": dbt.type_string()},\n    {\"name\": \"locco\", \"datatype\": dbt.type_string()},\n    {\"name\": \"loevm\", \"datatype\": dbt.type_string()},\n    {\"name\": \"lzone\", \"datatype\": dbt.type_string()},\n    {\"name\": \"mandt\", \"datatype\": dbt.type_string()},\n    {\"name\": \"mcod1\", \"datatype\": dbt.type_string()},\n    {\"name\": \"mcod2\", \"datatype\": dbt.type_string()},\n    {\"name\": \"mcod3\", \"datatype\": dbt.type_string()},\n    {\"name\": \"milve\", \"datatype\": dbt.type_string()},\n    {\"name\": \"name1\", \"datatype\": dbt.type_string()},\n    {\"name\": \"name2\", \"datatype\": dbt.type_string()},\n    {\"name\": \"name3\", \"datatype\": dbt.type_string()},\n    {\"name\": \"name4\", \"datatype\": dbt.type_string()},\n    {\"name\": \"niels\", \"datatype\": dbt.type_string()},\n    {\"name\": \"nodel\", \"datatype\": dbt.type_string()},\n    {\"name\": \"oid_poreqd\", \"datatype\": dbt.type_string()},\n    {\"name\": \"oidrc\", \"datatype\": dbt.type_string()},\n    {\"name\": \"oipbl\", \"datatype\": dbt.type_string()},\n    {\"name\": \"ort01\", \"datatype\": dbt.type_string()},\n    {\"name\": \"ort02\", \"datatype\": dbt.type_string()},\n    {\"name\": \"periv\", \"datatype\": dbt.type_string()},\n    {\"name\": \"pfach\", \"datatype\": dbt.type_string()},\n    {\"name\": \"pfort\", \"datatype\": dbt.type_string()},\n    {\"name\": \"pmt_office\", \"datatype\": dbt.type_string()},\n    {\"name\": \"psofg\", \"datatype\": dbt.type_string()},\n    {\"name\": \"psohs\", \"datatype\": dbt.type_string()},\n    {\"name\": \"psois\", \"datatype\": dbt.type_string()},\n    {\"name\": \"pson1\", \"datatype\": dbt.type_string()},\n    {\"name\": \"pson2\", \"datatype\": dbt.type_string()},\n    {\"name\": \"pson3\", \"datatype\": dbt.type_string()},\n    {\"name\": \"psoo1\", \"datatype\": dbt.type_string()},\n    {\"name\": \"psoo2\", \"datatype\": dbt.type_string()},\n    {\"name\": \"psoo3\", \"datatype\": dbt.type_string()},\n    {\"name\": \"psoo4\", \"datatype\": dbt.type_string()},\n    {\"name\": \"psoo5\", \"datatype\": dbt.type_string()},\n    {\"name\": \"psost\", \"datatype\": dbt.type_string()},\n    {\"name\": \"psotl\", \"datatype\": dbt.type_string()},\n    {\"name\": \"psovn\", \"datatype\": dbt.type_string()},\n    {\"name\": \"pstl2\", \"datatype\": dbt.type_string()},\n    {\"name\": \"pstlz\", \"datatype\": dbt.type_string()},\n    {\"name\": \"regio\", \"datatype\": dbt.type_string()},\n    {\"name\": \"rg\", \"datatype\": dbt.type_string()},\n    {\"name\": \"rgdate\", \"datatype\": dbt.type_string()},\n    {\"name\": \"ric\", \"datatype\": dbt.type_string()},\n    {\"name\": \"rne\", \"datatype\": dbt.type_string()},\n    {\"name\": \"rnedate\", \"datatype\": dbt.type_string()},\n    {\"name\": \"rpmkr\", \"datatype\": dbt.type_string()},\n    {\"name\": \"sortl\", \"datatype\": dbt.type_string()},\n    {\"name\": \"sperr\", \"datatype\": dbt.type_string()},\n    {\"name\": \"sperz\", \"datatype\": dbt.type_string()},\n    {\"name\": \"spras\", \"datatype\": dbt.type_string()},\n    {\"name\": \"stcd1\", \"datatype\": dbt.type_string()},\n    {\"name\": \"stcd2\", \"datatype\": dbt.type_string()},\n    {\"name\": \"stcd3\", \"datatype\": dbt.type_string()},\n    {\"name\": \"stcd4\", \"datatype\": dbt.type_string()},\n    {\"name\": \"stcd5\", \"datatype\": dbt.type_string()},\n    {\"name\": \"stcdt\", \"datatype\": dbt.type_string()},\n    {\"name\": \"stceg\", \"datatype\": dbt.type_string()},\n    {\"name\": \"stkza\", \"datatype\": dbt.type_string()},\n    {\"name\": \"stkzn\", \"datatype\": dbt.type_string()},\n    {\"name\": \"stkzu\", \"datatype\": dbt.type_string()},\n    {\"name\": \"stras\", \"datatype\": dbt.type_string()},\n    {\"name\": \"suframa\", \"datatype\": dbt.type_string()},\n    {\"name\": \"tdt\", \"datatype\": dbt.type_string()},\n    {\"name\": \"telbx\", \"datatype\": dbt.type_string()},\n    {\"name\": \"telf1\", \"datatype\": dbt.type_string()},\n    {\"name\": \"telf2\", \"datatype\": dbt.type_string()},\n    {\"name\": \"telfx\", \"datatype\": dbt.type_string()},\n    {\"name\": \"teltx\", \"datatype\": dbt.type_string()},\n    {\"name\": \"telx1\", \"datatype\": dbt.type_string()},\n    {\"name\": \"txjcd\", \"datatype\": dbt.type_string()},\n    {\"name\": \"txlw1\", \"datatype\": dbt.type_string()},\n    {\"name\": \"txlw2\", \"datatype\": dbt.type_string()},\n    {\"name\": \"uf\", \"datatype\": dbt.type_string()},\n    {\"name\": \"umjah\", \"datatype\": dbt.type_string()},\n    {\"name\": \"umsa1\", \"datatype\": dbt.type_numeric()},\n    {\"name\": \"umsat\", \"datatype\": dbt.type_numeric()},\n    {\"name\": \"updat\", \"datatype\": dbt.type_string()},\n    {\"name\": \"uptim\", \"datatype\": dbt.type_string()},\n    {\"name\": \"uwaer\", \"datatype\": dbt.type_string()},\n    {\"name\": \"vbund\", \"datatype\": dbt.type_string()},\n    {\"name\": \"werks\", \"datatype\": dbt.type_string()},\n    {\"name\": \"xcpdk\", \"datatype\": dbt.type_string()},\n    {\"name\": \"xicms\", \"datatype\": dbt.type_string()},\n    {\"name\": \"xknza\", \"datatype\": dbt.type_string()},\n    {\"name\": \"xsubt\", \"datatype\": dbt.type_string()},\n    {\"name\": \"xxipi\", \"datatype\": dbt.type_string()},\n    {\"name\": \"xzemp\", \"datatype\": dbt.type_string()},\n    {\"name\": \"_vso_r_dpoint\", \"datatype\": dbt.type_string()},\n    {\"name\": \"_vso_r_i_no_lyr\", \"datatype\": dbt.type_string()},\n    {\"name\": \"_vso_r_load_pref\", \"datatype\": dbt.type_string()},\n    {\"name\": \"_vso_r_matpal\", \"datatype\": dbt.type_string()},\n    {\"name\": \"_vso_r_one_mat\", \"datatype\": dbt.type_string()},\n    {\"name\": \"_vso_r_one_sort\", \"datatype\": dbt.type_string()},\n    {\"name\": \"_vso_r_pal_ul\", \"datatype\": dbt.type_string()},\n    {\"name\": \"_vso_r_palhgt\", \"datatype\": dbt.type_numeric()},\n    {\"name\": \"_vso_r_pk_mat\", \"datatype\": dbt.type_string()},\n    {\"name\": \"_vso_r_uld_side\", \"datatype\": dbt.type_string()},\n    {\"name\": \"_xlso_client\", \"datatype\": dbt.type_string()},\n    {\"name\": \"_xlso_customer\", \"datatype\": dbt.type_string()},\n    {\"name\": \"_xlso_partner\", \"datatype\": dbt.type_string()},\n    {\"name\": \"_xlso_pref_pay\", \"datatype\": dbt.type_string()},\n    {\"name\": \"_xlso_sysid\", \"datatype\": dbt.type_string()}\n] %}\n\n{{ return(columns) }}\n\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.type_numeric", "macro.dbt.type_timestamp", "macro.dbt.type_string"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1756850323.9448159, "supported_languages": null}, "macro.sap.get_pa0031_columns": {"name": "get_pa0031_columns", "resource_type": "macro", "package_name": "sap", "path": "macros/get_column_macros/get_pa0031_columns.sql", "original_file_path": "macros/get_column_macros/get_pa0031_columns.sql", "unique_id": "macro.sap.get_pa0031_columns", "macro_sql": "{% macro get_pa0031_columns() %}\n\n{% set columns = [\n    {\"name\": \"_fivetran_deleted\", \"datatype\": \"boolean\"},\n    {\"name\": \"_fivetran_rowid\", \"datatype\": dbt.type_numeric()},\n    {\"name\": \"_fivetran_synced\", \"datatype\": dbt.type_timestamp()},\n    {\"name\": \"aedtm\", \"datatype\": dbt.type_string()},\n    {\"name\": \"begda\", \"datatype\": dbt.type_string()},\n    {\"name\": \"endda\", \"datatype\": dbt.type_string()},\n    {\"name\": \"flag1\", \"datatype\": dbt.type_string()},\n    {\"name\": \"flag2\", \"datatype\": dbt.type_string()},\n    {\"name\": \"flag3\", \"datatype\": dbt.type_string()},\n    {\"name\": \"flag4\", \"datatype\": dbt.type_string()},\n    {\"name\": \"grpvl\", \"datatype\": dbt.type_string()},\n    {\"name\": \"histo\", \"datatype\": dbt.type_string()},\n    {\"name\": \"itbld\", \"datatype\": dbt.type_string()},\n    {\"name\": \"itxex\", \"datatype\": dbt.type_string()},\n    {\"name\": \"mandt\", \"datatype\": dbt.type_string()},\n    {\"name\": \"objps\", \"datatype\": dbt.type_string()},\n    {\"name\": \"ordex\", \"datatype\": dbt.type_string()},\n    {\"name\": \"pernr\", \"datatype\": dbt.type_string()},\n    {\"name\": \"preas\", \"datatype\": dbt.type_string()},\n    {\"name\": \"refex\", \"datatype\": dbt.type_string()},\n    {\"name\": \"rese1\", \"datatype\": dbt.type_string()},\n    {\"name\": \"rese2\", \"datatype\": dbt.type_string()},\n    {\"name\": \"rfp01\", \"datatype\": dbt.type_string()},\n    {\"name\": \"rfp02\", \"datatype\": dbt.type_string()},\n    {\"name\": \"rfp03\", \"datatype\": dbt.type_string()},\n    {\"name\": \"rfp04\", \"datatype\": dbt.type_string()},\n    {\"name\": \"rfp05\", \"datatype\": dbt.type_string()},\n    {\"name\": \"rfp06\", \"datatype\": dbt.type_string()},\n    {\"name\": \"rfp07\", \"datatype\": dbt.type_string()},\n    {\"name\": \"rfp08\", \"datatype\": dbt.type_string()},\n    {\"name\": \"rfp09\", \"datatype\": dbt.type_string()},\n    {\"name\": \"rfp10\", \"datatype\": dbt.type_string()},\n    {\"name\": \"rfp11\", \"datatype\": dbt.type_string()},\n    {\"name\": \"rfp12\", \"datatype\": dbt.type_string()},\n    {\"name\": \"rfp13\", \"datatype\": dbt.type_string()},\n    {\"name\": \"rfp14\", \"datatype\": dbt.type_string()},\n    {\"name\": \"rfp15\", \"datatype\": dbt.type_string()},\n    {\"name\": \"rfp16\", \"datatype\": dbt.type_string()},\n    {\"name\": \"rfp17\", \"datatype\": dbt.type_string()},\n    {\"name\": \"rfp18\", \"datatype\": dbt.type_string()},\n    {\"name\": \"rfp19\", \"datatype\": dbt.type_string()},\n    {\"name\": \"rfp20\", \"datatype\": dbt.type_string()},\n    {\"name\": \"seqnr\", \"datatype\": dbt.type_string()},\n    {\"name\": \"sprps\", \"datatype\": dbt.type_string()},\n    {\"name\": \"subty\", \"datatype\": dbt.type_string()},\n    {\"name\": \"uname\", \"datatype\": dbt.type_string()}\n] %}\n\n{{ return(columns) }}\n\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.type_numeric", "macro.dbt.type_timestamp", "macro.dbt.type_string"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1756850323.9532816, "supported_languages": null}, "macro.sap.get_ska1_columns": {"name": "get_ska1_columns", "resource_type": "macro", "package_name": "sap", "path": "macros/get_column_macros/get_ska1_columns.sql", "original_file_path": "macros/get_column_macros/get_ska1_columns.sql", "unique_id": "macro.sap.get_ska1_columns", "macro_sql": "{% macro get_ska1_columns() %}\n\n{% set columns = [\n    {\"name\": \"_fivetran_deleted\", \"datatype\": \"boolean\"},\n    {\"name\": \"_fivetran_rowid\", \"datatype\": dbt.type_numeric()},\n    {\"name\": \"_fivetran_synced\", \"datatype\": dbt.type_timestamp()},\n    {\"name\": \"bilkt\", \"datatype\": dbt.type_string()},\n    {\"name\": \"erdat\", \"datatype\": dbt.type_string()},\n    {\"name\": \"ernam\", \"datatype\": dbt.type_string()},\n    {\"name\": \"func_area\", \"datatype\": dbt.type_string()},\n    {\"name\": \"gvtyp\", \"datatype\": dbt.type_string()},\n    {\"name\": \"ktoks\", \"datatype\": dbt.type_string()},\n    {\"name\": \"ktopl\", \"datatype\": dbt.type_string()},\n    {\"name\": \"mandt\", \"datatype\": dbt.type_string()},\n    {\"name\": \"mcod1\", \"datatype\": dbt.type_string()},\n    {\"name\": \"mustr\", \"datatype\": dbt.type_string()},\n    {\"name\": \"sakan\", \"datatype\": dbt.type_string()},\n    {\"name\": \"saknr\", \"datatype\": dbt.type_string()},\n    {\"name\": \"vbund\", \"datatype\": dbt.type_string()},\n    {\"name\": \"xbilk\", \"datatype\": dbt.type_string()},\n    {\"name\": \"xloev\", \"datatype\": dbt.type_string()},\n    {\"name\": \"xspea\", \"datatype\": dbt.type_string()},\n    {\"name\": \"xspeb\", \"datatype\": dbt.type_string()},\n    {\"name\": \"xspep\", \"datatype\": dbt.type_string()}\n] %}\n\n{{ return(columns) }}\n\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.type_numeric", "macro.dbt.type_timestamp", "macro.dbt.type_string"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1756850323.9572349, "supported_languages": null}, "macro.sap.get_eket_columns": {"name": "get_eket_columns", "resource_type": "macro", "package_name": "sap", "path": "macros/get_column_macros/get_eket_columns.sql", "original_file_path": "macros/get_column_macros/get_eket_columns.sql", "unique_id": "macro.sap.get_eket_columns", "macro_sql": "{% macro get_eket_columns() %}\n\n{% set columns = [\n    {\"name\": \"abart\", \"datatype\": dbt.type_string()},\n    {\"name\": \"altdt\", \"datatype\": dbt.type_string()},\n    {\"name\": \"ameng\", \"datatype\": dbt.type_string()},\n    {\"name\": \"anzsn\", \"datatype\": dbt.type_string()},\n    {\"name\": \"aulwe\", \"datatype\": dbt.type_string()},\n    {\"name\": \"banfn\", \"datatype\": dbt.type_string()},\n    {\"name\": \"bedat\", \"datatype\": dbt.type_string()},\n    {\"name\": \"bnfpo\", \"datatype\": dbt.type_string()},\n    {\"name\": \"budg_type\", \"datatype\": dbt.type_string()},\n    {\"name\": \"cd_locno\", \"datatype\": dbt.type_string()},\n    {\"name\": \"cd_loctype\", \"datatype\": dbt.type_string()},\n    {\"name\": \"charg\", \"datatype\": dbt.type_string()},\n    {\"name\": \"check_type\", \"datatype\": dbt.type_string()},\n    {\"name\": \"chkom\", \"datatype\": dbt.type_string()},\n    {\"name\": \"cncl_ancmnt_done\", \"datatype\": dbt.type_string()},\n    {\"name\": \"dat01\", \"datatype\": dbt.type_string()},\n    {\"name\": \"dabmg\", \"datatype\": dbt.type_string()},\n    {\"name\": \"dateshift_number\", \"datatype\": dbt.type_string()},\n    {\"name\": \"dl_id\", \"datatype\": dbt.type_string()},\n    {\"name\": \"dng_date\", \"datatype\": dbt.type_string()},\n    {\"name\": \"dng_time\", \"datatype\": dbt.type_string()},\n    {\"name\": \"ebeln\", \"datatype\": dbt.type_string()},\n    {\"name\": \"ebelp\", \"datatype\": dbt.type_string()},\n    {\"name\": \"eindt\", \"datatype\": dbt.type_string()},\n    {\"name\": \"eldat\", \"datatype\": dbt.type_string()},\n    {\"name\": \"eluhr\", \"datatype\": dbt.type_string()},\n    {\"name\": \"estkz\", \"datatype\": dbt.type_string()},\n    {\"name\": \"etenr\", \"datatype\": dbt.type_string()},\n    {\"name\": \"fixkz\", \"datatype\": dbt.type_string()},\n    {\"name\": \"fsh_os_id\", \"datatype\": dbt.type_string()},\n    {\"name\": \"fsh_ralloc_qty\", \"datatype\": dbt.type_string()},\n    {\"name\": \"fsh_salloc_qty\", \"datatype\": dbt.type_string()},\n    {\"name\": \"geo_route\", \"datatype\": dbt.type_string()},\n    {\"name\": \"glmng\", \"datatype\": dbt.type_string()},\n    {\"name\": \"gts_ind\", \"datatype\": dbt.type_string()},\n    {\"name\": \"handover_date\", \"datatype\": dbt.type_string()},\n    {\"name\": \"handoverdate\", \"datatype\": dbt.type_string()},\n    {\"name\": \"handovertime\", \"datatype\": dbt.type_string()},\n    {\"name\": \"hvr_change_time\", \"datatype\": dbt.type_string()},\n    {\"name\": \"hvr_is_deleted\", \"datatype\": dbt.type_int()},\n    {\"name\": \"key_id\", \"datatype\": dbt.type_string()},\n    {\"name\": \"lddat\", \"datatype\": dbt.type_string()},\n    {\"name\": \"lduhr\", \"datatype\": dbt.type_string()},\n    {\"name\": \"licha\", \"datatype\": dbt.type_string()},\n    {\"name\": \"lpein\", \"datatype\": dbt.type_string()},\n    {\"name\": \"mahnz\", \"datatype\": dbt.type_string()},\n    {\"name\": \"mandt\", \"datatype\": dbt.type_string()},\n    {\"name\": \"mbdat\", \"datatype\": dbt.type_string()},\n    {\"name\": \"mbuhr\", \"datatype\": dbt.type_string()},\n    {\"name\": \"menge\", \"datatype\": dbt.type_int()},\n    {\"name\": \"mng02\", \"datatype\": dbt.type_string()},\n    {\"name\": \"no_scem\", \"datatype\": dbt.type_string()},\n    {\"name\": \"nodisp\", \"datatype\": dbt.type_string()},\n    {\"name\": \"otb_curr\", \"datatype\": dbt.type_string()},\n    {\"name\": \"otb_reason\", \"datatype\": dbt.type_string()},\n    {\"name\": \"otb_res_value\", \"datatype\": dbt.type_string()},\n    {\"name\": \"otb_spec_value\", \"datatype\": dbt.type_string()},\n    {\"name\": \"otb_status\", \"datatype\": dbt.type_string()},\n    {\"name\": \"otb_value\", \"datatype\": dbt.type_string()},\n    {\"name\": \"qunum\", \"datatype\": dbt.type_string()},\n    {\"name\": \"qupos\", \"datatype\": dbt.type_string()},\n    {\"name\": \"route_gts\", \"datatype\": dbt.type_string()},\n    {\"name\": \"rsnum\", \"datatype\": dbt.type_string()},\n    {\"name\": \"sernr\", \"datatype\": dbt.type_string()},\n    {\"name\": \"slfdt\", \"datatype\": dbt.type_string()},\n    {\"name\": \"spr_rsn_profile\", \"datatype\": dbt.type_string()},\n    {\"name\": \"tddat\", \"datatype\": dbt.type_string()},\n    {\"name\": \"tduhr\", \"datatype\": dbt.type_string()},\n    {\"name\": \"tsp\", \"datatype\": dbt.type_string()},\n    {\"name\": \"uzeit\", \"datatype\": dbt.type_string()},\n    {\"name\": \"verid\", \"datatype\": dbt.type_string()},\n    {\"name\": \"wadat\", \"datatype\": dbt.type_string()},\n    {\"name\": \"wamng\", \"datatype\": dbt.type_string()},\n    {\"name\": \"wauhr\", \"datatype\": dbt.type_string()},\n    {\"name\": \"wemng\", \"datatype\": dbt.type_string()},\n    {\"name\": \"_fivetran_deleted\", \"datatype\": \"boolean\"},\n    {\"name\": \"_fivetran_synced\", \"datatype\": dbt.type_timestamp()},\n    {\"name\": \"_fivetran_sap_archived\", \"datatype\": dbt.type_string()}\n] %}\n\n{{ return(columns) }}\n\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.type_string", "macro.dbt.type_int", "macro.dbt.type_timestamp"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1756850323.9705405, "supported_languages": null}, "macro.sap.get_t134_columns": {"name": "get_t134_columns", "resource_type": "macro", "package_name": "sap", "path": "macros/get_column_macros/get_t134_columns.sql", "original_file_path": "macros/get_column_macros/get_t134_columns.sql", "unique_id": "macro.sap.get_t134_columns", "macro_sql": "{% macro get_t134_columns() %}\n\n{% set columns = [\n    {\"name\": \"_fivetran_deleted\", \"datatype\": \"boolean\"},\n    {\"name\": \"_fivetran_rowid\", \"datatype\": dbt.type_numeric()},\n    {\"name\": \"_fivetran_synced\", \"datatype\": dbt.type_timestamp()},\n    {\"name\": \"aranz\", \"datatype\": dbt.type_string()},\n    {\"name\": \"ardel\", \"datatype\": dbt.type_string()},\n    {\"name\": \"begru\", \"datatype\": dbt.type_string()},\n    {\"name\": \"bsext\", \"datatype\": dbt.type_string()},\n    {\"name\": \"bsint\", \"datatype\": dbt.type_string()},\n    {\"name\": \"cchis\", \"datatype\": dbt.type_string()},\n    {\"name\": \"chneu\", \"datatype\": dbt.type_string()},\n    {\"name\": \"class\", \"datatype\": dbt.type_string()},\n    {\"name\": \"ctype\", \"datatype\": dbt.type_string()},\n    {\"name\": \"ekalr\", \"datatype\": dbt.type_string()},\n    {\"name\": \"envop\", \"datatype\": dbt.type_string()},\n    {\"name\": \"flref\", \"datatype\": dbt.type_string()},\n    {\"name\": \"hvr_change_time\", \"datatype\": dbt.type_string()},\n    {\"name\": \"hvr_is_deleted\", \"datatype\": dbt.type_int()},\n    {\"name\": \"izust\", \"datatype\": dbt.type_string()},\n    {\"name\": \"kkref\", \"datatype\": dbt.type_string()},\n    {\"name\": \"kzgrp\", \"datatype\": dbt.type_string()},\n    {\"name\": \"kzkfg\", \"datatype\": dbt.type_string()},\n    {\"name\": \"kzmpn\", \"datatype\": dbt.type_string()},\n    {\"name\": \"kzpip\", \"datatype\": dbt.type_string()},\n    {\"name\": \"kzprc\", \"datatype\": dbt.type_string()},\n    {\"name\": \"kzrac\", \"datatype\": dbt.type_string()},\n    {\"name\": \"kzvpr\", \"datatype\": dbt.type_string()},\n    {\"name\": \"mandt\", \"datatype\": dbt.type_string()},\n    {\"name\": \"mbref\", \"datatype\": dbt.type_string()},\n    {\"name\": \"mstae\", \"datatype\": dbt.type_string()},\n    {\"name\": \"mtart\", \"datatype\": dbt.type_string()},\n    {\"name\": \"mtref\", \"datatype\": dbt.type_string()},\n    {\"name\": \"numke\", \"datatype\": dbt.type_string()},\n    {\"name\": \"numki\", \"datatype\": dbt.type_string()},\n    {\"name\": \"prdru\", \"datatype\": dbt.type_string()},\n    {\"name\": \"pstat\", \"datatype\": dbt.type_string()},\n    {\"name\": \"vmtpo\", \"datatype\": dbt.type_string()},\n    {\"name\": \"vnumke\", \"datatype\": dbt.type_string()},\n    {\"name\": \"vnumki\", \"datatype\": dbt.type_string()},\n    {\"name\": \"vprsv\", \"datatype\": dbt.type_string()},\n    {\"name\": \"vtype\", \"datatype\": dbt.type_string()},\n    {\"name\": \"wmakg\", \"datatype\": dbt.type_string()}\n] %}\n\n{{ return(columns) }}\n\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.type_numeric", "macro.dbt.type_timestamp", "macro.dbt.type_string", "macro.dbt.type_int"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1756850323.9777927, "supported_languages": null}, "macro.sap.get_makt_columns": {"name": "get_makt_columns", "resource_type": "macro", "package_name": "sap", "path": "macros/get_column_macros/get_makt_columns.sql", "original_file_path": "macros/get_column_macros/get_makt_columns.sql", "unique_id": "macro.sap.get_makt_columns", "macro_sql": "{% macro get_makt_columns() %}\n\n{% set columns = [\n    {\"name\": \"_fivetran_deleted\", \"datatype\": \"boolean\"},\n    {\"name\": \"_fivetran_rowid\", \"datatype\": dbt.type_numeric()},\n    {\"name\": \"_fivetran_synced\", \"datatype\": dbt.type_timestamp()},\n    {\"name\": \"maktx\", \"datatype\": dbt.type_string()},\n    {\"name\": \"mandt\", \"datatype\": dbt.type_string()},\n    {\"name\": \"matnr\", \"datatype\": dbt.type_string()},\n    {\"name\": \"spras\", \"datatype\": dbt.type_string()}\n] %}\n\n{{ return(columns) }}\n\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.type_numeric", "macro.dbt.type_timestamp", "macro.dbt.type_string"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1756850323.9794114, "supported_languages": null}, "macro.spark_utils.get_tables": {"name": "get_tables", "resource_type": "macro", "package_name": "spark_utils", "path": "macros/maintenance_operation.sql", "original_file_path": "macros/maintenance_operation.sql", "unique_id": "macro.spark_utils.get_tables", "macro_sql": "{% macro get_tables(table_regex_pattern='.*') %}\n\n  {% set tables = [] %}\n  {% for database in spark__list_schemas('not_used') %}\n    {% for table in spark__list_relations_without_caching(database[0]) %}\n      {% set db_tablename = database[0] ~ \".\" ~ table[1] %}\n      {% set is_match = modules.re.match(table_regex_pattern, db_tablename) %}\n      {% if is_match %}\n        {% call statement('table_detail', fetch_result=True) -%}\n          describe extended {{ db_tablename }}\n        {% endcall %}\n\n        {% set table_type = load_result('table_detail').table|reverse|selectattr(0, 'in', ('type', 'TYPE', 'Type'))|first %}\n        {% if table_type[1]|lower != 'view' %}\n          {{ tables.append(db_tablename) }}\n        {% endif %}\n      {% endif %}\n    {% endfor %}\n  {% endfor %}\n  {{ return(tables) }}\n\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.statement"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1756850323.9828277, "supported_languages": null}, "macro.spark_utils.get_delta_tables": {"name": "get_delta_tables", "resource_type": "macro", "package_name": "spark_utils", "path": "macros/maintenance_operation.sql", "original_file_path": "macros/maintenance_operation.sql", "unique_id": "macro.spark_utils.get_delta_tables", "macro_sql": "{% macro get_delta_tables(table_regex_pattern='.*') %}\n\n  {% set delta_tables = [] %}\n  {% for db_tablename in get_tables(table_regex_pattern) %}\n    {% call statement('table_detail', fetch_result=True) -%}\n      describe extended {{ db_tablename }}\n    {% endcall %}\n\n    {% set table_type = load_result('table_detail').table|reverse|selectattr(0, 'in', ('provider', 'PROVIDER', 'Provider'))|first %}\n    {% if table_type[1]|lower == 'delta' %}\n      {{ delta_tables.append(db_tablename) }}\n    {% endif %}\n  {% endfor %}\n  {{ return(delta_tables) }}\n\n{% endmacro %}", "depends_on": {"macros": ["macro.spark_utils.get_tables", "macro.dbt.statement"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1756850323.9841778, "supported_languages": null}, "macro.spark_utils.get_statistic_columns": {"name": "get_statistic_columns", "resource_type": "macro", "package_name": "spark_utils", "path": "macros/maintenance_operation.sql", "original_file_path": "macros/maintenance_operation.sql", "unique_id": "macro.spark_utils.get_statistic_columns", "macro_sql": "{% macro get_statistic_columns(table) %}\n\n  {% call statement('input_columns', fetch_result=True) %}\n    SHOW COLUMNS IN {{ table }}\n  {% endcall %}\n  {% set input_columns = load_result('input_columns').table %}\n\n  {% set output_columns = [] %}\n  {% for column in input_columns %}\n    {% call statement('column_information', fetch_result=True) %}\n      DESCRIBE TABLE {{ table }} `{{ column[0] }}`\n    {% endcall %}\n    {% if not load_result('column_information').table[1][1].startswith('struct') and not load_result('column_information').table[1][1].startswith('array')  %}\n      {{ output_columns.append('`' ~ column[0] ~ '`') }}\n    {% endif %}\n  {% endfor %}\n  {{ return(output_columns) }}\n\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.statement"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1756850323.9858756, "supported_languages": null}, "macro.spark_utils.spark_optimize_delta_tables": {"name": "spark_optimize_delta_tables", "resource_type": "macro", "package_name": "spark_utils", "path": "macros/maintenance_operation.sql", "original_file_path": "macros/maintenance_operation.sql", "unique_id": "macro.spark_utils.spark_optimize_delta_tables", "macro_sql": "{% macro spark_optimize_delta_tables(table_regex_pattern='.*') %}\n\n  {% for table in get_delta_tables(table_regex_pattern) %}\n    {% set start=modules.datetime.datetime.now() %}\n    {% set message_prefix=loop.index ~ \" of \" ~ loop.length %}\n    {{ dbt_utils.log_info(message_prefix ~ \" Optimizing \" ~ table) }}\n    {% do run_query(\"optimize \" ~ table) %}\n    {% set end=modules.datetime.datetime.now() %}\n    {% set total_seconds = (end - start).total_seconds() | round(2)  %}\n    {{ dbt_utils.log_info(message_prefix ~ \" Finished \" ~ table ~ \" in \" ~ total_seconds ~ \"s\") }}\n  {% endfor %}\n\n{% endmacro %}", "depends_on": {"macros": ["macro.spark_utils.get_delta_tables", "macro.dbt_utils.log_info", "macro.dbt.run_query"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1756850323.9872906, "supported_languages": null}, "macro.spark_utils.spark_vacuum_delta_tables": {"name": "spark_vacuum_delta_tables", "resource_type": "macro", "package_name": "spark_utils", "path": "macros/maintenance_operation.sql", "original_file_path": "macros/maintenance_operation.sql", "unique_id": "macro.spark_utils.spark_vacuum_delta_tables", "macro_sql": "{% macro spark_vacuum_delta_tables(table_regex_pattern='.*') %}\n\n  {% for table in get_delta_tables(table_regex_pattern) %}\n    {% set start=modules.datetime.datetime.now() %}\n    {% set message_prefix=loop.index ~ \" of \" ~ loop.length %}\n    {{ dbt_utils.log_info(message_prefix ~ \" Vacuuming \" ~ table) }}\n    {% do run_query(\"vacuum \" ~ table) %}\n    {% set end=modules.datetime.datetime.now() %}\n    {% set total_seconds = (end - start).total_seconds() | round(2)  %}\n    {{ dbt_utils.log_info(message_prefix ~ \" Finished \" ~ table ~ \" in \" ~ total_seconds ~ \"s\") }}\n  {% endfor %}\n\n{% endmacro %}", "depends_on": {"macros": ["macro.spark_utils.get_delta_tables", "macro.dbt_utils.log_info", "macro.dbt.run_query"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1756850323.9887486, "supported_languages": null}, "macro.spark_utils.spark_analyze_tables": {"name": "spark_analyze_tables", "resource_type": "macro", "package_name": "spark_utils", "path": "macros/maintenance_operation.sql", "original_file_path": "macros/maintenance_operation.sql", "unique_id": "macro.spark_utils.spark_analyze_tables", "macro_sql": "{% macro spark_analyze_tables(table_regex_pattern='.*') %}\n\n  {% for table in get_tables(table_regex_pattern) %}\n    {% set start=modules.datetime.datetime.now() %}\n    {% set columns = get_statistic_columns(table) | join(',') %}\n    {% set message_prefix=loop.index ~ \" of \" ~ loop.length %}\n    {{ dbt_utils.log_info(message_prefix ~ \" Analyzing \" ~ table) }}\n    {% if columns != '' %}\n      {% do run_query(\"analyze table \" ~ table ~ \" compute statistics for columns \" ~ columns) %}\n    {% endif %}\n    {% set end=modules.datetime.datetime.now() %}\n    {% set total_seconds = (end - start).total_seconds() | round(2)  %}\n    {{ dbt_utils.log_info(message_prefix ~ \" Finished \" ~ table ~ \" in \" ~ total_seconds ~ \"s\") }}\n  {% endfor %}\n\n{% endmacro %}", "depends_on": {"macros": ["macro.spark_utils.get_tables", "macro.spark_utils.get_statistic_columns", "macro.dbt_utils.log_info", "macro.dbt.run_query"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1756850323.9904594, "supported_languages": null}, "macro.spark_utils.assert_not_null": {"name": "assert_not_null", "resource_type": "macro", "package_name": "spark_utils", "path": "macros/etc/assert_not_null.sql", "original_file_path": "macros/etc/assert_not_null.sql", "unique_id": "macro.spark_utils.assert_not_null", "macro_sql": "{% macro assert_not_null(function, arg) -%}\n  {{ return(adapter.dispatch('assert_not_null', 'spark_utils')(function, arg)) }}\n{%- endmacro %}", "depends_on": {"macros": ["macro.spark_utils.default__assert_not_null"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1756850323.9910808, "supported_languages": null}, "macro.spark_utils.default__assert_not_null": {"name": "default__assert_not_null", "resource_type": "macro", "package_name": "spark_utils", "path": "macros/etc/assert_not_null.sql", "original_file_path": "macros/etc/assert_not_null.sql", "unique_id": "macro.spark_utils.default__assert_not_null", "macro_sql": "{% macro default__assert_not_null(function, arg) %}\n\n    coalesce({{function}}({{arg}}), nvl2({{function}}({{arg}}), assert_true({{function}}({{arg}}) is not null), null))\n\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1756850323.991477, "supported_languages": null}, "macro.spark_utils.spark__convert_timezone": {"name": "spark__convert_timezone", "resource_type": "macro", "package_name": "spark_utils", "path": "macros/snowplow/convert_timezone.sql", "original_file_path": "macros/snowplow/convert_timezone.sql", "unique_id": "macro.spark_utils.spark__convert_timezone", "macro_sql": "{% macro spark__convert_timezone(in_tz, out_tz, in_timestamp) %}\n    from_utc_timestamp(to_utc_timestamp({{in_timestamp}}, {{in_tz}}), {{out_tz}})\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1756850323.9918985, "supported_languages": null}, "macro.spark_utils.spark__concat": {"name": "spark__concat", "resource_type": "macro", "package_name": "spark_utils", "path": "macros/dbt_utils/cross_db_utils/concat.sql", "original_file_path": "macros/dbt_utils/cross_db_utils/concat.sql", "unique_id": "macro.spark_utils.spark__concat", "macro_sql": "{% macro spark__concat(fields) -%}\n    concat({{ fields|join(', ') }})\n{%- endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1756850323.9922342, "supported_languages": null}, "macro.spark_utils.spark__current_timestamp": {"name": "spark__current_timestamp", "resource_type": "macro", "package_name": "spark_utils", "path": "macros/dbt_utils/cross_db_utils/current_timestamp.sql", "original_file_path": "macros/dbt_utils/cross_db_utils/current_timestamp.sql", "unique_id": "macro.spark_utils.spark__current_timestamp", "macro_sql": "{% macro spark__current_timestamp() %}\n    current_timestamp()\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1756850323.9924736, "supported_languages": null}, "macro.spark_utils.spark__current_timestamp_in_utc": {"name": "spark__current_timestamp_in_utc", "resource_type": "macro", "package_name": "spark_utils", "path": "macros/dbt_utils/cross_db_utils/current_timestamp.sql", "original_file_path": "macros/dbt_utils/cross_db_utils/current_timestamp.sql", "unique_id": "macro.spark_utils.spark__current_timestamp_in_utc", "macro_sql": "{% macro spark__current_timestamp_in_utc() %}\n    unix_timestamp()\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1756850323.9926271, "supported_languages": null}, "macro.spark_utils.spark__split_part": {"name": "spark__split_part", "resource_type": "macro", "package_name": "spark_utils", "path": "macros/dbt_utils/cross_db_utils/split_part.sql", "original_file_path": "macros/dbt_utils/cross_db_utils/split_part.sql", "unique_id": "macro.spark_utils.spark__split_part", "macro_sql": "{% macro spark__split_part(string_text, delimiter_text, part_number) %}\n\n    {% set delimiter_expr %}\n    \n        -- escape if starts with a special character\n        case when regexp_extract({{ delimiter_text }}, '([^A-Za-z0-9])(.*)', 1) != '_'\n            then concat('\\\\', {{ delimiter_text }})\n            else {{ delimiter_text }} end\n    \n    {% endset %}\n\n    {% set split_part_expr %}\n    \n    split(\n        {{ string_text }},\n        {{ delimiter_expr }}\n        )[({{ part_number - 1 }})]\n    \n    {% endset %}\n    \n    {{ return(split_part_expr) }}\n\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1756850323.9935608, "supported_languages": null}, "macro.spark_utils.spark__type_numeric": {"name": "spark__type_numeric", "resource_type": "macro", "package_name": "spark_utils", "path": "macros/dbt_utils/cross_db_utils/datatypes.sql", "original_file_path": "macros/dbt_utils/cross_db_utils/datatypes.sql", "unique_id": "macro.spark_utils.spark__type_numeric", "macro_sql": "{% macro spark__type_numeric() %}\n    decimal(28, 6)\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1756850323.993813, "supported_languages": null}, "macro.spark_utils.spark__dateadd": {"name": "spark__dateadd", "resource_type": "macro", "package_name": "spark_utils", "path": "macros/dbt_utils/cross_db_utils/dateadd.sql", "original_file_path": "macros/dbt_utils/cross_db_utils/dateadd.sql", "unique_id": "macro.spark_utils.spark__dateadd", "macro_sql": "{% macro spark__dateadd(datepart, interval, from_date_or_timestamp) %}\n\n    {%- set clock_component -%}\n        {# make sure the dates + timestamps are real, otherwise raise an error asap #}\n        to_unix_timestamp({{ spark_utils.assert_not_null('to_timestamp', from_date_or_timestamp) }})\n        - to_unix_timestamp({{ spark_utils.assert_not_null('date', from_date_or_timestamp) }})\n    {%- endset -%}\n\n    {%- if datepart in ['day', 'week'] -%}\n        \n        {%- set multiplier = 7 if datepart == 'week' else 1 -%}\n\n        to_timestamp(\n            to_unix_timestamp(\n                date_add(\n                    {{ spark_utils.assert_not_null('date', from_date_or_timestamp) }},\n                    cast({{interval}} * {{multiplier}} as int)\n                )\n            ) + {{clock_component}}\n        )\n\n    {%- elif datepart in ['month', 'quarter', 'year'] -%}\n    \n        {%- set multiplier -%} \n            {%- if datepart == 'month' -%} 1\n            {%- elif datepart == 'quarter' -%} 3\n            {%- elif datepart == 'year' -%} 12\n            {%- endif -%}\n        {%- endset -%}\n\n        to_timestamp(\n            to_unix_timestamp(\n                add_months(\n                    {{ spark_utils.assert_not_null('date', from_date_or_timestamp) }},\n                    cast({{interval}} * {{multiplier}} as int)\n                )\n            ) + {{clock_component}}\n        )\n\n    {%- elif datepart in ('hour', 'minute', 'second', 'millisecond', 'microsecond') -%}\n    \n        {%- set multiplier -%} \n            {%- if datepart == 'hour' -%} 3600\n            {%- elif datepart == 'minute' -%} 60\n            {%- elif datepart == 'second' -%} 1\n            {%- elif datepart == 'millisecond' -%} (1/1000000)\n            {%- elif datepart == 'microsecond' -%} (1/1000000)\n            {%- endif -%}\n        {%- endset -%}\n\n        to_timestamp(\n            {{ spark_utils.assert_not_null('to_unix_timestamp', from_date_or_timestamp) }}\n            + cast({{interval}} * {{multiplier}} as int)\n        )\n\n    {%- else -%}\n\n        {{ exceptions.raise_compiler_error(\"macro dateadd not implemented for datepart ~ '\" ~ datepart ~ \"' ~ on Spark\") }}\n\n    {%- endif -%}\n\n{% endmacro %}", "depends_on": {"macros": ["macro.spark_utils.assert_not_null"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1756850323.9976053, "supported_languages": null}, "macro.spark_utils.spark__datediff": {"name": "spark__datediff", "resource_type": "macro", "package_name": "spark_utils", "path": "macros/dbt_utils/cross_db_utils/datediff.sql", "original_file_path": "macros/dbt_utils/cross_db_utils/datediff.sql", "unique_id": "macro.spark_utils.spark__datediff", "macro_sql": "{% macro spark__datediff(first_date, second_date, datepart) %}\n\n    {%- if datepart in ['day', 'week', 'month', 'quarter', 'year'] -%}\n    \n        {# make sure the dates are real, otherwise raise an error asap #}\n        {% set first_date = spark_utils.assert_not_null('date', first_date) %}\n        {% set second_date = spark_utils.assert_not_null('date', second_date) %}\n    \n    {%- endif -%}\n    \n    {%- if datepart == 'day' -%}\n    \n        datediff({{second_date}}, {{first_date}})\n    \n    {%- elif datepart == 'week' -%}\n    \n        case when {{first_date}} < {{second_date}}\n            then floor(datediff({{second_date}}, {{first_date}})/7)\n            else ceil(datediff({{second_date}}, {{first_date}})/7)\n            end\n        \n        -- did we cross a week boundary (Sunday)?\n        + case\n            when {{first_date}} < {{second_date}} and dayofweek({{second_date}}) < dayofweek({{first_date}}) then 1\n            when {{first_date}} > {{second_date}} and dayofweek({{second_date}}) > dayofweek({{first_date}}) then -1\n            else 0 end\n\n    {%- elif datepart == 'month' -%}\n\n        case when {{first_date}} < {{second_date}}\n            then floor(months_between(date({{second_date}}), date({{first_date}})))\n            else ceil(months_between(date({{second_date}}), date({{first_date}})))\n            end\n        \n        -- did we cross a month boundary?\n        + case\n            when {{first_date}} < {{second_date}} and dayofmonth({{second_date}}) < dayofmonth({{first_date}}) then 1\n            when {{first_date}} > {{second_date}} and dayofmonth({{second_date}}) > dayofmonth({{first_date}}) then -1\n            else 0 end\n        \n    {%- elif datepart == 'quarter' -%}\n    \n        case when {{first_date}} < {{second_date}}\n            then floor(months_between(date({{second_date}}), date({{first_date}}))/3)\n            else ceil(months_between(date({{second_date}}), date({{first_date}}))/3)\n            end\n        \n        -- did we cross a quarter boundary?\n        + case\n            when {{first_date}} < {{second_date}} and (\n                (dayofyear({{second_date}}) - (quarter({{second_date}}) * 365/4))\n                < (dayofyear({{first_date}}) - (quarter({{first_date}}) * 365/4))\n            ) then 1\n            when {{first_date}} > {{second_date}} and (\n                (dayofyear({{second_date}}) - (quarter({{second_date}}) * 365/4))\n                > (dayofyear({{first_date}}) - (quarter({{first_date}}) * 365/4))\n            ) then -1\n            else 0 end\n\n    {%- elif datepart == 'year' -%}\n    \n        year({{second_date}}) - year({{first_date}})\n\n    {%- elif datepart in ('hour', 'minute', 'second', 'millisecond', 'microsecond') -%}\n    \n        {%- set divisor -%} \n            {%- if datepart == 'hour' -%} 3600\n            {%- elif datepart == 'minute' -%} 60\n            {%- elif datepart == 'second' -%} 1\n            {%- elif datepart == 'millisecond' -%} (1/1000)\n            {%- elif datepart == 'microsecond' -%} (1/1000000)\n            {%- endif -%}\n        {%- endset -%}\n\n        case when {{first_date}} < {{second_date}}\n            then ceil((\n                {# make sure the timestamps are real, otherwise raise an error asap #}\n                {{ spark_utils.assert_not_null('to_unix_timestamp', spark_utils.assert_not_null('to_timestamp', second_date)) }}\n                - {{ spark_utils.assert_not_null('to_unix_timestamp', spark_utils.assert_not_null('to_timestamp', first_date)) }}\n            ) / {{divisor}})\n            else floor((\n                {{ spark_utils.assert_not_null('to_unix_timestamp', spark_utils.assert_not_null('to_timestamp', second_date)) }}\n                - {{ spark_utils.assert_not_null('to_unix_timestamp', spark_utils.assert_not_null('to_timestamp', first_date)) }}\n            ) / {{divisor}})\n            end\n            \n            {% if datepart == 'millisecond' %}\n                + cast(date_format({{second_date}}, 'SSS') as int)\n                - cast(date_format({{first_date}}, 'SSS') as int)\n            {% endif %}\n            \n            {% if datepart == 'microsecond' %}    \n                {% set capture_str = '[0-9]{4}-[0-9]{2}-[0-9]{2}.[0-9]{2}:[0-9]{2}:[0-9]{2}.([0-9]{6})' %}\n                -- Spark doesn't really support microseconds, so this is a massive hack!\n                -- It will only work if the timestamp-string is of the format\n                -- 'yyyy-MM-dd-HH mm.ss.SSSSSS'\n                + cast(regexp_extract({{second_date}}, '{{capture_str}}', 1) as int)\n                - cast(regexp_extract({{first_date}}, '{{capture_str}}', 1) as int)    \n            {% endif %}\n\n    {%- else -%}\n\n        {{ exceptions.raise_compiler_error(\"macro datediff not implemented for datepart ~ '\" ~ datepart ~ \"' ~ on Spark\") }}\n\n    {%- endif -%}\n\n{% endmacro %}", "depends_on": {"macros": ["macro.spark_utils.assert_not_null"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1756850324.0045187, "supported_languages": null}, "macro.spark_utils.spark__get_relations_by_pattern": {"name": "spark__get_relations_by_pattern", "resource_type": "macro", "package_name": "spark_utils", "path": "macros/dbt_utils/sql/get_relations_by_prefix.sql", "original_file_path": "macros/dbt_utils/sql/get_relations_by_prefix.sql", "unique_id": "macro.spark_utils.spark__get_relations_by_pattern", "macro_sql": "{% macro spark__get_relations_by_pattern(schema_pattern, table_pattern, exclude='', database=target.database) %}\n\n    {%- call statement('get_tables', fetch_result=True) %}\n\n        show table extended in {{ schema_pattern }} like '{{ table_pattern }}'\n\n    {%- endcall -%}\n\n    {%- set table_list = load_result('get_tables') -%}\n\n    {%- if table_list and table_list['table'] -%}\n    {%- set tbl_relations = [] -%}\n    {%- for row in table_list['table'] -%}\n        {%- set tbl_relation = api.Relation.create(\n            database=None,\n            schema=row[0],\n            identifier=row[1],\n            type=('view' if 'Type: VIEW' in row[3] else 'table')\n        ) -%}\n        {%- do tbl_relations.append(tbl_relation) -%}\n    {%- endfor -%}\n\n    {{ return(tbl_relations) }}\n    {%- else -%}\n    {{ return([]) }}\n    {%- endif -%}\n\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.statement"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1756850324.0069153, "supported_languages": null}, "macro.spark_utils.spark__get_relations_by_prefix": {"name": "spark__get_relations_by_prefix", "resource_type": "macro", "package_name": "spark_utils", "path": "macros/dbt_utils/sql/get_relations_by_prefix.sql", "original_file_path": "macros/dbt_utils/sql/get_relations_by_prefix.sql", "unique_id": "macro.spark_utils.spark__get_relations_by_prefix", "macro_sql": "{% macro spark__get_relations_by_prefix(schema_pattern, table_pattern, exclude='', database=target.database) %}\n    {% set table_pattern = table_pattern ~ '*' %}\n    {{ return(spark_utils.spark__get_relations_by_pattern(schema_pattern, table_pattern, exclude='', database=target.database)) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.spark_utils.spark__get_relations_by_pattern"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1756850324.0075865, "supported_languages": null}, "macro.spark_utils.spark__get_tables_by_pattern": {"name": "spark__get_tables_by_pattern", "resource_type": "macro", "package_name": "spark_utils", "path": "macros/dbt_utils/sql/get_relations_by_prefix.sql", "original_file_path": "macros/dbt_utils/sql/get_relations_by_prefix.sql", "unique_id": "macro.spark_utils.spark__get_tables_by_pattern", "macro_sql": "{% macro spark__get_tables_by_pattern(schema_pattern, table_pattern, exclude='', database=target.database) %}\n    {{ return(spark_utils.spark__get_relations_by_pattern(schema_pattern, table_pattern, exclude='', database=target.database)) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.spark_utils.spark__get_relations_by_pattern"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1756850324.0081382, "supported_languages": null}, "macro.spark_utils.spark__get_tables_by_prefix": {"name": "spark__get_tables_by_prefix", "resource_type": "macro", "package_name": "spark_utils", "path": "macros/dbt_utils/sql/get_relations_by_prefix.sql", "original_file_path": "macros/dbt_utils/sql/get_relations_by_prefix.sql", "unique_id": "macro.spark_utils.spark__get_tables_by_prefix", "macro_sql": "{% macro spark__get_tables_by_prefix(schema_pattern, table_pattern, exclude='', database=target.database) %}\n    {{ return(spark_utils.spark__get_relations_by_prefix(schema_pattern, table_pattern, exclude='', database=target.database)) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.spark_utils.spark__get_relations_by_prefix"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1756850324.0086586, "supported_languages": null}, "macro.dbt_utils._is_ephemeral": {"name": "_is_ephemeral", "resource_type": "macro", "package_name": "dbt_utils", "path": "macros/jinja_helpers/_is_ephemeral.sql", "original_file_path": "macros/jinja_helpers/_is_ephemeral.sql", "unique_id": "macro.dbt_utils._is_ephemeral", "macro_sql": "{% macro _is_ephemeral(obj, macro) %}\n    {%- if obj.is_cte -%}\n        {% set ephemeral_prefix = api.Relation.add_ephemeral_prefix('') %}\n        {% if obj.name.startswith(ephemeral_prefix) %}\n            {% set model_name = obj.name[(ephemeral_prefix|length):] %}\n        {% else %}\n            {% set model_name = obj.name %}\n        {%- endif -%}\n        {% set error_message %}\nThe `{{ macro }}` macro cannot be used with ephemeral models, as it relies on the information schema.\n\n`{{ model_name }}` is an ephemeral model. Consider making it a view or table instead.\n        {% endset %}\n        {%- do exceptions.raise_compiler_error(error_message) -%}\n    {%- endif -%}\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1756850324.0100608, "supported_languages": null}, "macro.dbt_utils.pretty_time": {"name": "pretty_time", "resource_type": "macro", "package_name": "dbt_utils", "path": "macros/jinja_helpers/pretty_time.sql", "original_file_path": "macros/jinja_helpers/pretty_time.sql", "unique_id": "macro.dbt_utils.pretty_time", "macro_sql": "{% macro pretty_time(format='%H:%M:%S') %}\n    {{ return(adapter.dispatch('pretty_time', 'dbt_utils')(format)) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt_utils.default__pretty_time"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1756850324.010584, "supported_languages": null}, "macro.dbt_utils.default__pretty_time": {"name": "default__pretty_time", "resource_type": "macro", "package_name": "dbt_utils", "path": "macros/jinja_helpers/pretty_time.sql", "original_file_path": "macros/jinja_helpers/pretty_time.sql", "unique_id": "macro.dbt_utils.default__pretty_time", "macro_sql": "{% macro default__pretty_time(format='%H:%M:%S') %}\n    {{ return(modules.datetime.datetime.now().strftime(format)) }}\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1756850324.0109837, "supported_languages": null}, "macro.dbt_utils.slugify": {"name": "slugify", "resource_type": "macro", "package_name": "dbt_utils", "path": "macros/jinja_helpers/slugify.sql", "original_file_path": "macros/jinja_helpers/slugify.sql", "unique_id": "macro.dbt_utils.slugify", "macro_sql": "{% macro slugify(string) %}\n\n{% if not string %}\n{{ return('') }}\n{% endif %}\n\n{#- Lower case the string -#}\n{% set string = string | lower %}\n{#- Replace spaces and dashes with underscores -#}\n{% set string = modules.re.sub('[ -]+', '_', string) %}\n{#- Only take letters, numbers, and underscores -#}\n{% set string = modules.re.sub('[^a-z0-9_]+', '', string) %}\n{#- Prepends \"_\" if string begins with a number -#}\n{% set string = modules.re.sub('^[0-9]', '_' + string[0], string) %}\n\n{{ return(string) }}\n\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1756850324.0123763, "supported_languages": null}, "macro.dbt_utils.log_info": {"name": "log_info", "resource_type": "macro", "package_name": "dbt_utils", "path": "macros/jinja_helpers/log_info.sql", "original_file_path": "macros/jinja_helpers/log_info.sql", "unique_id": "macro.dbt_utils.log_info", "macro_sql": "{% macro log_info(message) %}\n    {{ return(adapter.dispatch('log_info', 'dbt_utils')(message)) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt_utils.default__log_info"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1756850324.0128791, "supported_languages": null}, "macro.dbt_utils.default__log_info": {"name": "default__log_info", "resource_type": "macro", "package_name": "dbt_utils", "path": "macros/jinja_helpers/log_info.sql", "original_file_path": "macros/jinja_helpers/log_info.sql", "unique_id": "macro.dbt_utils.default__log_info", "macro_sql": "{% macro default__log_info(message) %}\n    {{ log(dbt_utils.pretty_log_format(message), info=True) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt_utils.pretty_log_format"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1756850324.0132115, "supported_languages": null}, "macro.dbt_utils.pretty_log_format": {"name": "pretty_log_format", "resource_type": "macro", "package_name": "dbt_utils", "path": "macros/jinja_helpers/pretty_log_format.sql", "original_file_path": "macros/jinja_helpers/pretty_log_format.sql", "unique_id": "macro.dbt_utils.pretty_log_format", "macro_sql": "{% macro pretty_log_format(message) %}\n    {{ return(adapter.dispatch('pretty_log_format', 'dbt_utils')(message)) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt_utils.default__pretty_log_format"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1756850324.0136952, "supported_languages": null}, "macro.dbt_utils.default__pretty_log_format": {"name": "default__pretty_log_format", "resource_type": "macro", "package_name": "dbt_utils", "path": "macros/jinja_helpers/pretty_log_format.sql", "original_file_path": "macros/jinja_helpers/pretty_log_format.sql", "unique_id": "macro.dbt_utils.default__pretty_log_format", "macro_sql": "{% macro default__pretty_log_format(message) %}\n    {{ return( dbt_utils.pretty_time() ~ ' + ' ~ message) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt_utils.pretty_time"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1756850324.0140412, "supported_languages": null}, "macro.dbt_utils._is_relation": {"name": "_is_relation", "resource_type": "macro", "package_name": "dbt_utils", "path": "macros/jinja_helpers/_is_relation.sql", "original_file_path": "macros/jinja_helpers/_is_relation.sql", "unique_id": "macro.dbt_utils._is_relation", "macro_sql": "{% macro _is_relation(obj, macro) %}\n    {%- if not (obj is mapping and obj.get('metadata', {}).get('type', '').endswith('Relation')) -%}\n        {%- do exceptions.raise_compiler_error(\"Macro \" ~ macro ~ \" expected a Relation but received the value: \" ~ obj) -%}\n    {%- endif -%}\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1756850324.0148869, "supported_languages": null}, "macro.dbt_utils.test_sequential_values": {"name": "test_sequential_values", "resource_type": "macro", "package_name": "dbt_utils", "path": "macros/generic_tests/sequential_values.sql", "original_file_path": "macros/generic_tests/sequential_values.sql", "unique_id": "macro.dbt_utils.test_sequential_values", "macro_sql": "{% test sequential_values(model, column_name, interval=1, datepart=None, group_by_columns = []) %}\n\n  {{ return(adapter.dispatch('test_sequential_values', 'dbt_utils')(model, column_name, interval, datepart, group_by_columns)) }}\n\n{% endtest %}", "depends_on": {"macros": ["macro.dbt_utils.default__test_sequential_values"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1756850324.0159063, "supported_languages": null}, "macro.dbt_utils.default__test_sequential_values": {"name": "default__test_sequential_values", "resource_type": "macro", "package_name": "dbt_utils", "path": "macros/generic_tests/sequential_values.sql", "original_file_path": "macros/generic_tests/sequential_values.sql", "unique_id": "macro.dbt_utils.default__test_sequential_values", "macro_sql": "{% macro default__test_sequential_values(model, column_name, interval=1, datepart=None, group_by_columns = []) %}\n\n{% set previous_column_name = \"previous_\" ~ dbt_utils.slugify(column_name) %}\n\n{% if group_by_columns|length() > 0 %}\n  {% set select_gb_cols = group_by_columns|join(',') + ', ' %}\n  {% set partition_gb_cols = 'partition by ' + group_by_columns|join(',') %}\n{% endif %}\n\nwith windowed as (\n\n    select\n        {{ select_gb_cols }}\n        {{ column_name }},\n        lag({{ column_name }}) over (\n            {{partition_gb_cols}}\n            order by {{ column_name }}\n        ) as {{ previous_column_name }}\n    from {{ model }}\n),\n\nvalidation_errors as (\n    select\n        *\n    from windowed\n    {% if datepart %}\n    where not(cast({{ column_name }} as {{ dbt.type_timestamp() }})= cast({{ dbt.dateadd(datepart, interval, previous_column_name) }} as {{ dbt.type_timestamp() }}))\n    {% else %}\n    where not({{ column_name }} = {{ previous_column_name }} + {{ interval }})\n    {% endif %}\n)\n\nselect *\nfrom validation_errors\n\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt_utils.slugify", "macro.dbt.type_timestamp", "macro.dbt.dateadd"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1756850324.0178113, "supported_languages": null}, "macro.dbt_utils.test_recency": {"name": "test_recency", "resource_type": "macro", "package_name": "dbt_utils", "path": "macros/generic_tests/recency.sql", "original_file_path": "macros/generic_tests/recency.sql", "unique_id": "macro.dbt_utils.test_recency", "macro_sql": "{% test recency(model, field, datepart, interval, ignore_time_component=False, group_by_columns = []) %}\n  {{ return(adapter.dispatch('test_recency', 'dbt_utils')(model, field, datepart, interval, ignore_time_component, group_by_columns)) }}\n{% endtest %}", "depends_on": {"macros": ["macro.dbt_utils.default__test_recency"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1756850324.0188146, "supported_languages": null}, "macro.dbt_utils.default__test_recency": {"name": "default__test_recency", "resource_type": "macro", "package_name": "dbt_utils", "path": "macros/generic_tests/recency.sql", "original_file_path": "macros/generic_tests/recency.sql", "unique_id": "macro.dbt_utils.default__test_recency", "macro_sql": "{% macro default__test_recency(model, field, datepart, interval, ignore_time_component, group_by_columns) %}\n\n{% set threshold = 'cast(' ~ dbt.dateadd(datepart, interval * -1, dbt.current_timestamp()) ~ ' as ' ~ ('date' if ignore_time_component else dbt.type_timestamp()) ~ ')'  %}\n\n{% if group_by_columns|length() > 0 %}\n  {% set select_gb_cols = group_by_columns|join(' ,') + ', ' %}\n  {% set groupby_gb_cols = 'group by ' + group_by_columns|join(',') %}\n{% endif %}\n\n\nwith recency as (\n\n    select \n\n      {{ select_gb_cols }}\n      {% if ignore_time_component %}\n        cast(max({{ field }}) as date) as most_recent\n      {%- else %}\n        max({{ field }}) as most_recent\n      {%- endif %}\n\n    from {{ model }}\n\n    {{ groupby_gb_cols }}\n\n)\n\nselect\n\n    {{ select_gb_cols }}\n    most_recent,\n    {{ threshold }} as threshold\n\nfrom recency\nwhere most_recent < {{ threshold }}\n\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.dateadd", "macro.dbt.current_timestamp", "macro.dbt.type_timestamp"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1756850324.0203953, "supported_languages": null}, "macro.dbt_utils.test_not_empty_string": {"name": "test_not_empty_string", "resource_type": "macro", "package_name": "dbt_utils", "path": "macros/generic_tests/not_empty_string.sql", "original_file_path": "macros/generic_tests/not_empty_string.sql", "unique_id": "macro.dbt_utils.test_not_empty_string", "macro_sql": "{% test not_empty_string(model, column_name, trim_whitespace=true) %}\n\n  {{ return(adapter.dispatch('test_not_empty_string', 'dbt_utils')(model, column_name, trim_whitespace)) }}\n\n{% endtest %}", "depends_on": {"macros": ["macro.dbt_utils.default__test_not_empty_string"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1756850324.0211143, "supported_languages": null}, "macro.dbt_utils.default__test_not_empty_string": {"name": "default__test_not_empty_string", "resource_type": "macro", "package_name": "dbt_utils", "path": "macros/generic_tests/not_empty_string.sql", "original_file_path": "macros/generic_tests/not_empty_string.sql", "unique_id": "macro.dbt_utils.default__test_not_empty_string", "macro_sql": "{% macro default__test_not_empty_string(model, column_name, trim_whitespace=true) %}\n\n    with\n    \n    all_values as (\n\n        select \n\n\n            {% if trim_whitespace == true -%}\n\n                trim({{ column_name }}) as {{ column_name }}\n\n            {%- else -%}\n\n                {{ column_name }}\n\n            {%- endif %}\n            \n        from {{ model }}\n\n    ),\n\n    errors as (\n\n        select * from all_values\n        where {{ column_name }} = ''\n\n    )\n\n    select * from errors\n\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1756850324.0217032, "supported_languages": null}, "macro.dbt_utils.test_cardinality_equality": {"name": "test_cardinality_equality", "resource_type": "macro", "package_name": "dbt_utils", "path": "macros/generic_tests/cardinality_equality.sql", "original_file_path": "macros/generic_tests/cardinality_equality.sql", "unique_id": "macro.dbt_utils.test_cardinality_equality", "macro_sql": "{% test cardinality_equality(model, column_name, to, field) %}\n    {{ return(adapter.dispatch('test_cardinality_equality', 'dbt_utils')(model, column_name, to, field)) }}\n{% endtest %}", "depends_on": {"macros": ["macro.dbt_utils.default__test_cardinality_equality"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1756850324.0224302, "supported_languages": null}, "macro.dbt_utils.default__test_cardinality_equality": {"name": "default__test_cardinality_equality", "resource_type": "macro", "package_name": "dbt_utils", "path": "macros/generic_tests/cardinality_equality.sql", "original_file_path": "macros/generic_tests/cardinality_equality.sql", "unique_id": "macro.dbt_utils.default__test_cardinality_equality", "macro_sql": "{% macro default__test_cardinality_equality(model, column_name, to, field) %}\n\n{# T-SQL does not let you use numbers as aliases for columns #}\n{# Thus, no \"GROUP BY 1\" #}\n\nwith table_a as (\nselect\n  {{ column_name }},\n  count(*) as num_rows\nfrom {{ model }}\ngroup by {{ column_name }}\n),\n\ntable_b as (\nselect\n  {{ field }},\n  count(*) as num_rows\nfrom {{ to }}\ngroup by {{ field }}\n),\n\nexcept_a as (\n  select *\n  from table_a\n  {{ dbt.except() }}\n  select *\n  from table_b\n),\n\nexcept_b as (\n  select *\n  from table_b\n  {{ dbt.except() }}\n  select *\n  from table_a\n),\n\nunioned as (\n  select *\n  from except_a\n  union all\n  select *\n  from except_b\n)\n\nselect *\nfrom unioned\n\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.except"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1756850324.0231073, "supported_languages": null}, "macro.dbt_utils.test_fewer_rows_than": {"name": "test_fewer_rows_than", "resource_type": "macro", "package_name": "dbt_utils", "path": "macros/generic_tests/fewer_rows_than.sql", "original_file_path": "macros/generic_tests/fewer_rows_than.sql", "unique_id": "macro.dbt_utils.test_fewer_rows_than", "macro_sql": "{% test fewer_rows_than(model, compare_model, group_by_columns = []) %}\n  {{ return(adapter.dispatch('test_fewer_rows_than', 'dbt_utils')(model, compare_model, group_by_columns)) }}\n{% endtest %}", "depends_on": {"macros": ["macro.dbt_utils.default__test_fewer_rows_than"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1756850324.0241537, "supported_languages": null}, "macro.dbt_utils.default__test_fewer_rows_than": {"name": "default__test_fewer_rows_than", "resource_type": "macro", "package_name": "dbt_utils", "path": "macros/generic_tests/fewer_rows_than.sql", "original_file_path": "macros/generic_tests/fewer_rows_than.sql", "unique_id": "macro.dbt_utils.default__test_fewer_rows_than", "macro_sql": "{% macro default__test_fewer_rows_than(model, compare_model, group_by_columns) %}\n\n{{ config(fail_calc = 'sum(coalesce(row_count_delta, 0))') }}\n\n{% if group_by_columns|length() > 0 %}\n  {% set select_gb_cols = group_by_columns|join(' ,') + ', ' %}\n  {% set join_gb_cols %}\n    {% for c in group_by_columns %}\n      and a.{{c}} = b.{{c}}\n    {% endfor %}\n  {% endset %}\n  {% set groupby_gb_cols = 'group by ' + group_by_columns|join(',') %}\n{% endif %}\n\n{#-- We must add a fake join key in case additional grouping variables are not provided --#}\n{#-- Redshift does not allow for dynamically created join conditions (e.g. full join on 1 = 1 --#}\n{#-- The same logic is used in equal_rowcount. In case of changes, maintain consistent logic --#}\n{% set group_by_columns = ['id_dbtutils_test_fewer_rows_than'] + group_by_columns %}\n{% set groupby_gb_cols = 'group by ' + group_by_columns|join(',') %}\n\n\nwith a as (\n\n    select \n      {{select_gb_cols}}\n      1 as id_dbtutils_test_fewer_rows_than,\n      count(*) as count_our_model \n    from {{ model }}\n    {{ groupby_gb_cols }}\n\n),\nb as (\n\n    select \n      {{select_gb_cols}}\n      1 as id_dbtutils_test_fewer_rows_than,\n      count(*) as count_comparison_model \n    from {{ compare_model }}\n    {{ groupby_gb_cols }}\n\n),\ncounts as (\n\n    select\n\n        {% for c in group_by_columns -%}\n          a.{{c}} as {{c}}_a,\n          b.{{c}} as {{c}}_b,\n        {% endfor %}\n\n        count_our_model,\n        count_comparison_model\n    from a\n    full join b on \n    a.id_dbtutils_test_fewer_rows_than = b.id_dbtutils_test_fewer_rows_than\n    {{ join_gb_cols }}\n\n),\nfinal as (\n\n    select *,\n        case\n            -- fail the test if we have more rows than the reference model and return the row count delta\n            when count_our_model > count_comparison_model then (count_our_model - count_comparison_model)\n            -- fail the test if they are the same number\n            when count_our_model = count_comparison_model then 1\n            -- pass the test if the delta is positive (i.e. return the number 0)\n            else 0\n    end as row_count_delta\n    from counts\n\n)\n\nselect * from final\n\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1756850324.0261235, "supported_languages": null}, "macro.dbt_utils.test_mutually_exclusive_ranges": {"name": "test_mutually_exclusive_ranges", "resource_type": "macro", "package_name": "dbt_utils", "path": "macros/generic_tests/mutually_exclusive_ranges.sql", "original_file_path": "macros/generic_tests/mutually_exclusive_ranges.sql", "unique_id": "macro.dbt_utils.test_mutually_exclusive_ranges", "macro_sql": "{% test mutually_exclusive_ranges(model, lower_bound_column, upper_bound_column, partition_by=None, gaps='allowed', zero_length_range_allowed=False) %}\n  {{ return(adapter.dispatch('test_mutually_exclusive_ranges', 'dbt_utils')(model, lower_bound_column, upper_bound_column, partition_by, gaps, zero_length_range_allowed)) }}\n{% endtest %}", "depends_on": {"macros": ["macro.dbt_utils.default__test_mutually_exclusive_ranges"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1756850324.0276384, "supported_languages": null}, "macro.dbt_utils.default__test_mutually_exclusive_ranges": {"name": "default__test_mutually_exclusive_ranges", "resource_type": "macro", "package_name": "dbt_utils", "path": "macros/generic_tests/mutually_exclusive_ranges.sql", "original_file_path": "macros/generic_tests/mutually_exclusive_ranges.sql", "unique_id": "macro.dbt_utils.default__test_mutually_exclusive_ranges", "macro_sql": "{% macro default__test_mutually_exclusive_ranges(model, lower_bound_column, upper_bound_column, partition_by=None, gaps='allowed', zero_length_range_allowed=False) %}\n{% if gaps == 'not_allowed' %}\n    {% set allow_gaps_operator='=' %}\n    {% set allow_gaps_operator_in_words='equal_to' %}\n{% elif gaps == 'allowed' %}\n    {% set allow_gaps_operator='<=' %}\n    {% set allow_gaps_operator_in_words='less_than_or_equal_to' %}\n{% elif gaps == 'required' %}\n    {% set allow_gaps_operator='<' %}\n    {% set allow_gaps_operator_in_words='less_than' %}\n{% else %}\n    {{ exceptions.raise_compiler_error(\n        \"`gaps` argument for mutually_exclusive_ranges test must be one of ['not_allowed', 'allowed', 'required'] Got: '\" ~ gaps ~\"'.'\"\n    ) }}\n{% endif %}\n{% if not zero_length_range_allowed %}\n    {% set allow_zero_length_operator='<' %}\n    {% set allow_zero_length_operator_in_words='less_than' %}\n{% elif zero_length_range_allowed %}\n    {% set allow_zero_length_operator='<=' %}\n    {% set allow_zero_length_operator_in_words='less_than_or_equal_to' %}\n{% else %}\n    {{ exceptions.raise_compiler_error(\n        \"`zero_length_range_allowed` argument for mutually_exclusive_ranges test must be one of [true, false] Got: '\" ~ zero_length_range_allowed ~\"'.'\"\n    ) }}\n{% endif %}\n\n{% set partition_clause=\"partition by \" ~ partition_by if partition_by else '' %}\n\nwith window_functions as (\n\n    select\n        {% if partition_by %}\n        {{ partition_by }} as partition_by_col,\n        {% endif %}\n        {{ lower_bound_column }} as lower_bound,\n        {{ upper_bound_column }} as upper_bound,\n\n        lead({{ lower_bound_column }}) over (\n            {{ partition_clause }}\n            order by {{ lower_bound_column }}, {{ upper_bound_column }}\n        ) as next_lower_bound,\n\n        row_number() over (\n            {{ partition_clause }}\n            order by {{ lower_bound_column }} desc, {{ upper_bound_column }} desc\n        ) = 1 as is_last_record\n\n    from {{ model }}\n\n),\n\ncalc as (\n    -- We want to return records where one of our assumptions fails, so we'll use\n    -- the `not` function with `and` statements so we can write our assumptions more cleanly\n    select\n        *,\n\n        -- For each record: lower_bound should be < upper_bound.\n        -- Coalesce it to return an error on the null case (implicit assumption\n        -- these columns are not_null)\n        coalesce(\n            lower_bound {{ allow_zero_length_operator }} upper_bound,\n            false\n        ) as lower_bound_{{ allow_zero_length_operator_in_words }}_upper_bound,\n\n        -- For each record: upper_bound {{ allow_gaps_operator }} the next lower_bound.\n        -- Coalesce it to handle null cases for the last record.\n        coalesce(\n            upper_bound {{ allow_gaps_operator }} next_lower_bound,\n            is_last_record,\n            false\n        ) as upper_bound_{{ allow_gaps_operator_in_words }}_next_lower_bound\n\n    from window_functions\n\n),\n\nvalidation_errors as (\n\n    select\n        *\n    from calc\n\n    where not(\n        -- THE FOLLOWING SHOULD BE TRUE --\n        lower_bound_{{ allow_zero_length_operator_in_words }}_upper_bound\n        and upper_bound_{{ allow_gaps_operator_in_words }}_next_lower_bound\n    )\n)\n\nselect * from validation_errors\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1756850324.0307348, "supported_languages": null}, "macro.dbt_utils.test_equality": {"name": "test_equality", "resource_type": "macro", "package_name": "dbt_utils", "path": "macros/generic_tests/equality.sql", "original_file_path": "macros/generic_tests/equality.sql", "unique_id": "macro.dbt_utils.test_equality", "macro_sql": "{% test equality(model, compare_model, compare_columns=None, exclude_columns=None, precision = None) %}\n  {{ return(adapter.dispatch('test_equality', 'dbt_utils')(model, compare_model, compare_columns, exclude_columns, precision)) }}\n{% endtest %}", "depends_on": {"macros": ["macro.dbt_utils.default__test_equality"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1756850324.0329206, "supported_languages": null}, "macro.dbt_utils.default__test_equality": {"name": "default__test_equality", "resource_type": "macro", "package_name": "dbt_utils", "path": "macros/generic_tests/equality.sql", "original_file_path": "macros/generic_tests/equality.sql", "unique_id": "macro.dbt_utils.default__test_equality", "macro_sql": "{% macro default__test_equality(model, compare_model, compare_columns=None, exclude_columns=None, precision = None) %}\n\n{%- if compare_columns and exclude_columns -%}\n    {{ exceptions.raise_compiler_error(\"Both a compare and an ignore list were provided to the `equality` macro. Only one is allowed\") }}\n{%- endif -%}\n\n{% set set_diff %}\n    count(*) + coalesce(abs(\n        sum(case when which_diff = 'a_minus_b' then 1 else 0 end) -\n        sum(case when which_diff = 'b_minus_a' then 1 else 0 end)\n    ), 0)\n{% endset %}\n\n{#-- Needs to be set at parse time, before we return '' below --#}\n{{ config(fail_calc = set_diff) }}\n\n{#-- Prevent querying of db in parsing mode. This works because this macro does not create any new refs. #}\n{%- if not execute -%}\n    {{ return('') }}\n{% endif %}\n\n\n\n-- setup\n{%- do dbt_utils._is_relation(model, 'test_equality') -%}\n\n{# Ensure there are no extra columns in the compare_model vs model #}\n{%- if not compare_columns -%}\n    {%- do dbt_utils._is_ephemeral(model, 'test_equality') -%}\n    {%- do dbt_utils._is_ephemeral(compare_model, 'test_equality') -%}\n\n    {%- set model_columns = adapter.get_columns_in_relation(model) -%}\n    {%- set compare_model_columns = adapter.get_columns_in_relation(compare_model) -%}\n\n\n    {%- if exclude_columns -%}\n        {#-- Lower case ignore columns for easier comparison --#}\n        {%- set exclude_columns = exclude_columns | map(\"lower\") | list %}\n\n        {# Filter out the excluded columns #}\n        {%- set include_columns = [] %}\n        {%- set include_model_columns = [] %}\n        {%- for column in model_columns -%}\n            {%- if column.name | lower not in exclude_columns -%}\n                {% do include_columns.append(column) %}\n            {%- endif %}\n        {%- endfor %}\n        {%- for column in compare_model_columns -%}\n            {%- if column.name | lower not in exclude_columns -%}\n                {% do include_model_columns.append(column) %}\n            {%- endif %}\n        {%- endfor %}\n\n        {%- set compare_columns_set = set(include_columns | map(attribute='quoted') | map(\"lower\")) %}\n        {%- set compare_model_columns_set = set(include_model_columns | map(attribute='quoted') | map(\"lower\")) %}\n    {%- else -%}\n        {%- set compare_columns_set = set(model_columns | map(attribute='quoted') | map(\"lower\")) %}\n        {%- set compare_model_columns_set = set(compare_model_columns | map(attribute='quoted') | map(\"lower\")) %}\n    {%- endif -%}\n\n    {% if compare_columns_set != compare_model_columns_set %}\n        {{ exceptions.raise_compiler_error(compare_model ~\" has less columns than \" ~ model ~ \", please ensure they have the same columns or use the `compare_columns` or `exclude_columns` arguments to subset them.\") }}\n    {% endif %}\n\n\n{% endif %}\n\n{%- if not precision -%}\n    {%- if not compare_columns -%}\n        {# \n            You cannot get the columns in an ephemeral model (due to not existing in the information schema),\n            so if the user does not provide an explicit list of columns we must error in the case it is ephemeral\n        #}\n        {%- do dbt_utils._is_ephemeral(model, 'test_equality') -%}\n        {%- set compare_columns = adapter.get_columns_in_relation(model)-%}\n\n        {%- if exclude_columns -%}\n            {#-- Lower case ignore columns for easier comparison --#}\n            {%- set exclude_columns = exclude_columns | map(\"lower\") | list %}\n\n            {# Filter out the excluded columns #}\n            {%- set include_columns = [] %}\n            {%- for column in compare_columns -%}\n                {%- if column.name | lower not in exclude_columns -%}\n                    {% do include_columns.append(column) %}\n                {%- endif %}\n            {%- endfor %}\n\n            {%- set compare_columns = include_columns | map(attribute='quoted') %}\n        {%- else -%} {# Compare columns provided #}\n            {%- set compare_columns = compare_columns | map(attribute='quoted') %}\n        {%- endif -%}\n    {%- endif -%}\n\n    {% set compare_cols_csv = compare_columns | join(', ') %}\n\n{% else %} {# Precision required #}\n    {#-\n        If rounding is required, we need to get the types, so it cannot be ephemeral even if they provide column names\n    -#}\n    {%- do dbt_utils._is_ephemeral(model, 'test_equality') -%}\n    {%- set columns = adapter.get_columns_in_relation(model) -%}\n\n    {% set columns_list = [] %}\n    {%- for col in columns -%}\n        {%- if (\n                (col.name|lower in compare_columns|map('lower') or not compare_columns) and\n                (col.name|lower not in exclude_columns|map('lower') or not exclude_columns)\n                ) -%}\n            {# Databricks double type is not picked up by any number type checks in dbt #}\n            {%- if col.is_float() or col.is_numeric() or col.data_type == 'double' -%}\n                {# Cast is required due to postgres not having round for a double precision number #}\n                {%- do columns_list.append('round(cast(' ~ col.quoted ~ ' as ' ~ dbt.type_numeric() ~ '),' ~ precision ~ ') as ' ~ col.quoted) -%}\n            {%- else -%} {# Non-numeric type #}\n                {%- do columns_list.append(col.quoted) -%}\n            {%- endif -%}\n        {% endif %}\n    {%- endfor -%}\n\n    {% set compare_cols_csv = columns_list | join(', ') %}\n\n{% endif %}\n\nwith a as (\n\n    select * from {{ model }}\n\n),\n\nb as (\n\n    select * from {{ compare_model }}\n\n),\n\na_minus_b as (\n\n    select {{compare_cols_csv}} from a\n    {{ dbt.except() }}\n    select {{compare_cols_csv}} from b\n\n),\n\nb_minus_a as (\n\n    select {{compare_cols_csv}} from b\n    {{ dbt.except() }}\n    select {{compare_cols_csv}} from a\n\n),\n\nunioned as (\n\n    select 'a_minus_b' as which_diff, a_minus_b.* from a_minus_b\n    union all\n    select 'b_minus_a' as which_diff, b_minus_a.* from b_minus_a\n\n)\n\nselect * from unioned\n\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt_utils._is_relation", "macro.dbt_utils._is_ephemeral", "macro.dbt.type_numeric", "macro.dbt.except"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1756850324.0407202, "supported_languages": null}, "macro.dbt_utils.test_at_least_one": {"name": "test_at_least_one", "resource_type": "macro", "package_name": "dbt_utils", "path": "macros/generic_tests/at_least_one.sql", "original_file_path": "macros/generic_tests/at_least_one.sql", "unique_id": "macro.dbt_utils.test_at_least_one", "macro_sql": "{% test at_least_one(model, column_name, group_by_columns = []) %}\n  {{ return(adapter.dispatch('test_at_least_one', 'dbt_utils')(model, column_name, group_by_columns)) }}\n{% endtest %}", "depends_on": {"macros": ["macro.dbt_utils.default__test_at_least_one"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1756850324.0416985, "supported_languages": null}, "macro.dbt_utils.default__test_at_least_one": {"name": "default__test_at_least_one", "resource_type": "macro", "package_name": "dbt_utils", "path": "macros/generic_tests/at_least_one.sql", "original_file_path": "macros/generic_tests/at_least_one.sql", "unique_id": "macro.dbt_utils.default__test_at_least_one", "macro_sql": "{% macro default__test_at_least_one(model, column_name, group_by_columns) %}\n\n{% set pruned_cols = [column_name] %}\n\n{% if group_by_columns|length() > 0 %}\n\n  {% set select_gb_cols = group_by_columns|join(' ,') + ', ' %}\n  {% set groupby_gb_cols = 'group by ' + group_by_columns|join(',') %}\n  {% set pruned_cols = group_by_columns %}\n\n  {% if column_name not in pruned_cols %}\n    {% do pruned_cols.append(column_name) %}\n  {% endif %}\n\n{% endif %}\n\n{% set select_pruned_cols = pruned_cols|join(' ,') %}\n\nselect *\nfrom (\n    with pruned_rows as (\n      select\n        {{ select_pruned_cols }}\n      from {{ model }}\n      {% if group_by_columns|length() == 0 %}\n        where {{ column_name }} is not null\n        limit 1\n      {% endif %}\n    )\n    select\n        {# In TSQL, subquery aggregate columns need aliases #}\n        {# thus: a filler col name, 'filler_column' #}\n      {{select_gb_cols}}\n      count({{ column_name }}) as filler_column\n\n    from pruned_rows\n\n    {{groupby_gb_cols}}\n\n    having count({{ column_name }}) = 0\n\n) validation_errors\n\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1756850324.0434198, "supported_languages": null}, "macro.dbt_utils.test_accepted_range": {"name": "test_accepted_range", "resource_type": "macro", "package_name": "dbt_utils", "path": "macros/generic_tests/accepted_range.sql", "original_file_path": "macros/generic_tests/accepted_range.sql", "unique_id": "macro.dbt_utils.test_accepted_range", "macro_sql": "{% test accepted_range(model, column_name, min_value=none, max_value=none, inclusive=true) %}\n  {{ return(adapter.dispatch('test_accepted_range', 'dbt_utils')(model, column_name, min_value, max_value, inclusive)) }}\n{% endtest %}", "depends_on": {"macros": ["macro.dbt_utils.default__test_accepted_range"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1756850324.0443335, "supported_languages": null}, "macro.dbt_utils.default__test_accepted_range": {"name": "default__test_accepted_range", "resource_type": "macro", "package_name": "dbt_utils", "path": "macros/generic_tests/accepted_range.sql", "original_file_path": "macros/generic_tests/accepted_range.sql", "unique_id": "macro.dbt_utils.default__test_accepted_range", "macro_sql": "{% macro default__test_accepted_range(model, column_name, min_value=none, max_value=none, inclusive=true) %}\n\nwith meet_condition as(\n  select *\n  from {{ model }}\n),\n\nvalidation_errors as (\n  select *\n  from meet_condition\n  where\n    -- never true, defaults to an empty result set. Exists to ensure any combo of the `or` clauses below succeeds\n    1 = 2\n\n  {%- if min_value is not none %}\n    -- records with a value >= min_value are permitted. The `not` flips this to find records that don't meet the rule.\n    or not {{ column_name }} > {{- \"=\" if inclusive }} {{ min_value }}\n  {%- endif %}\n\n  {%- if max_value is not none %}\n    -- records with a value <= max_value are permitted. The `not` flips this to find records that don't meet the rule.\n    or not {{ column_name }} < {{- \"=\" if inclusive }} {{ max_value }}\n  {%- endif %}\n)\n\nselect *\nfrom validation_errors\n\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1756850324.0452561, "supported_languages": null}, "macro.dbt_utils.test_relationships_where": {"name": "test_relationships_where", "resource_type": "macro", "package_name": "dbt_utils", "path": "macros/generic_tests/relationships_where.sql", "original_file_path": "macros/generic_tests/relationships_where.sql", "unique_id": "macro.dbt_utils.test_relationships_where", "macro_sql": "{% test relationships_where(model, column_name, to, field, from_condition=\"1=1\", to_condition=\"1=1\") %}\n  {{ return(adapter.dispatch('test_relationships_where', 'dbt_utils')(model, column_name, to, field, from_condition, to_condition)) }}\n{% endtest %}", "depends_on": {"macros": ["macro.dbt_utils.default__test_relationships_where"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1756850324.0461638, "supported_languages": null}, "macro.dbt_utils.default__test_relationships_where": {"name": "default__test_relationships_where", "resource_type": "macro", "package_name": "dbt_utils", "path": "macros/generic_tests/relationships_where.sql", "original_file_path": "macros/generic_tests/relationships_where.sql", "unique_id": "macro.dbt_utils.default__test_relationships_where", "macro_sql": "{% macro default__test_relationships_where(model, column_name, to, field, from_condition=\"1=1\", to_condition=\"1=1\") %}\n\n{# T-SQL has no boolean data type so we use 1=1 which returns TRUE #}\n{# ref https://stackoverflow.com/a/7170753/3842610 #}\n\nwith left_table as (\n\n  select\n    {{column_name}} as id\n\n  from {{model}}\n\n  where {{column_name}} is not null\n    and {{from_condition}}\n\n),\n\nright_table as (\n\n  select\n    {{field}} as id\n\n  from {{to}}\n\n  where {{field}} is not null\n    and {{to_condition}}\n\n),\n\nexceptions as (\n\n  select\n    left_table.id,\n    right_table.id as right_id\n\n  from left_table\n\n  left join right_table\n         on left_table.id = right_table.id\n\n  where right_table.id is null\n\n)\n\nselect * from exceptions\n\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1756850324.0468974, "supported_languages": null}, "macro.dbt_utils.test_not_null_proportion": {"name": "test_not_null_proportion", "resource_type": "macro", "package_name": "dbt_utils", "path": "macros/generic_tests/not_null_proportion.sql", "original_file_path": "macros/generic_tests/not_null_proportion.sql", "unique_id": "macro.dbt_utils.test_not_null_proportion", "macro_sql": "{% macro test_not_null_proportion(model, group_by_columns = []) %}\n  {{ return(adapter.dispatch('test_not_null_proportion', 'dbt_utils')(model, group_by_columns, **kwargs)) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt_utils.default__test_not_null_proportion"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1756850324.0477228, "supported_languages": null}, "macro.dbt_utils.default__test_not_null_proportion": {"name": "default__test_not_null_proportion", "resource_type": "macro", "package_name": "dbt_utils", "path": "macros/generic_tests/not_null_proportion.sql", "original_file_path": "macros/generic_tests/not_null_proportion.sql", "unique_id": "macro.dbt_utils.default__test_not_null_proportion", "macro_sql": "{% macro default__test_not_null_proportion(model, group_by_columns) %}\n\n{% set column_name = kwargs.get('column_name', kwargs.get('arg')) %}\n{% set at_least = kwargs.get('at_least', kwargs.get('arg')) %}\n{% set at_most = kwargs.get('at_most', kwargs.get('arg', 1)) %}\n\n{% if group_by_columns|length() > 0 %}\n  {% set select_gb_cols = group_by_columns|join(' ,') + ', ' %}\n  {% set groupby_gb_cols = 'group by ' + group_by_columns|join(',') %}\n{% endif %}\n\nwith validation as (\n  select\n    {{select_gb_cols}}\n    sum(case when {{ column_name }} is null then 0 else 1 end) / cast(count(*) as {{ dbt.type_numeric() }}) as not_null_proportion\n  from {{ model }}\n  {{groupby_gb_cols}}\n),\nvalidation_errors as (\n  select\n    {{select_gb_cols}}\n    not_null_proportion\n  from validation\n  where not_null_proportion < {{ at_least }} or not_null_proportion > {{ at_most }}\n)\nselect\n  *\nfrom validation_errors\n\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.type_numeric"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1756850324.0493567, "supported_languages": null}, "macro.dbt_utils.test_equal_rowcount": {"name": "test_equal_rowcount", "resource_type": "macro", "package_name": "dbt_utils", "path": "macros/generic_tests/equal_rowcount.sql", "original_file_path": "macros/generic_tests/equal_rowcount.sql", "unique_id": "macro.dbt_utils.test_equal_rowcount", "macro_sql": "{% test equal_rowcount(model, compare_model, group_by_columns = []) %}\n  {{ return(adapter.dispatch('test_equal_rowcount', 'dbt_utils')(model, compare_model, group_by_columns)) }}\n{% endtest %}", "depends_on": {"macros": ["macro.dbt_utils.default__test_equal_rowcount"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1756850324.0504696, "supported_languages": null}, "macro.dbt_utils.default__test_equal_rowcount": {"name": "default__test_equal_rowcount", "resource_type": "macro", "package_name": "dbt_utils", "path": "macros/generic_tests/equal_rowcount.sql", "original_file_path": "macros/generic_tests/equal_rowcount.sql", "unique_id": "macro.dbt_utils.default__test_equal_rowcount", "macro_sql": "{% macro default__test_equal_rowcount(model, compare_model, group_by_columns) %}\n\n{#-- Needs to be set at parse time, before we return '' below --#}\n{{ config(fail_calc = 'sum(coalesce(diff_count, 0))') }}\n\n{#-- Prevent querying of db in parsing mode. This works because this macro does not create any new refs. #}\n{%- if not execute -%}\n    {{ return('') }}\n{% endif %}\n\n{% if group_by_columns|length() > 0 %}\n  {% set select_gb_cols = group_by_columns|join(', ') + ', ' %}\n  {% set join_gb_cols %}\n    {% for c in group_by_columns %}\n      and a.{{c}} = b.{{c}}\n    {% endfor %}\n  {% endset %}\n  {% set groupby_gb_cols = 'group by ' + group_by_columns|join(',') %}\n{% endif %}\n\n{#-- We must add a fake join key in case additional grouping variables are not provided --#}\n{#-- Redshift does not allow for dynamically created join conditions (e.g. full join on 1 = 1 --#}\n{#-- The same logic is used in fewer_rows_than. In case of changes, maintain consistent logic --#}\n{% set group_by_columns = ['id_dbtutils_test_equal_rowcount'] + group_by_columns %}\n{% set groupby_gb_cols = 'group by ' + group_by_columns|join(',') %}\n\nwith a as (\n\n    select \n      {{select_gb_cols}}\n      1 as id_dbtutils_test_equal_rowcount,\n      count(*) as count_a \n    from {{ model }}\n    {{groupby_gb_cols}}\n\n\n),\nb as (\n\n    select \n      {{select_gb_cols}}\n      1 as id_dbtutils_test_equal_rowcount,\n      count(*) as count_b \n    from {{ compare_model }}\n    {{groupby_gb_cols}}\n\n),\nfinal as (\n\n    select\n    \n        {% for c in group_by_columns -%}\n          a.{{c}} as {{c}}_a,\n          b.{{c}} as {{c}}_b,\n        {% endfor %}\n\n        count_a,\n        count_b,\n        abs(count_a - count_b) as diff_count\n\n    from a\n    full join b\n    on\n    a.id_dbtutils_test_equal_rowcount = b.id_dbtutils_test_equal_rowcount\n    {{join_gb_cols}}\n\n\n)\n\nselect * from final\n\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1756850324.0525656, "supported_languages": null}, "macro.dbt_utils.test_not_constant": {"name": "test_not_constant", "resource_type": "macro", "package_name": "dbt_utils", "path": "macros/generic_tests/not_constant.sql", "original_file_path": "macros/generic_tests/not_constant.sql", "unique_id": "macro.dbt_utils.test_not_constant", "macro_sql": "{% test not_constant(model, column_name, group_by_columns = []) %}\n  {{ return(adapter.dispatch('test_not_constant', 'dbt_utils')(model, column_name, group_by_columns)) }}\n{% endtest %}", "depends_on": {"macros": ["macro.dbt_utils.default__test_not_constant"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1756850324.0533752, "supported_languages": null}, "macro.dbt_utils.default__test_not_constant": {"name": "default__test_not_constant", "resource_type": "macro", "package_name": "dbt_utils", "path": "macros/generic_tests/not_constant.sql", "original_file_path": "macros/generic_tests/not_constant.sql", "unique_id": "macro.dbt_utils.default__test_not_constant", "macro_sql": "{% macro default__test_not_constant(model, column_name, group_by_columns) %}\n\n{% if group_by_columns|length() > 0 %}\n  {% set select_gb_cols = group_by_columns|join(' ,') + ', ' %}\n  {% set groupby_gb_cols = 'group by ' + group_by_columns|join(',') %}\n{% endif %}\n\n\nselect\n    {# In TSQL, subquery aggregate columns need aliases #}\n    {# thus: a filler col name, 'filler_column' #}\n    {{select_gb_cols}}\n    count(distinct {{ column_name }}) as filler_column\n\nfrom {{ model }}\n\n  {{groupby_gb_cols}}\n\nhaving count(distinct {{ column_name }}) = 1\n\n\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1756850324.0543, "supported_languages": null}, "macro.dbt_utils.test_not_accepted_values": {"name": "test_not_accepted_values", "resource_type": "macro", "package_name": "dbt_utils", "path": "macros/generic_tests/not_accepted_values.sql", "original_file_path": "macros/generic_tests/not_accepted_values.sql", "unique_id": "macro.dbt_utils.test_not_accepted_values", "macro_sql": "{% test not_accepted_values(model, column_name, values, quote=True) %}\n  {{ return(adapter.dispatch('test_not_accepted_values', 'dbt_utils')(model, column_name, values, quote)) }}\n{% endtest %}", "depends_on": {"macros": ["macro.dbt_utils.default__test_not_accepted_values"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1756850324.0551054, "supported_languages": null}, "macro.dbt_utils.default__test_not_accepted_values": {"name": "default__test_not_accepted_values", "resource_type": "macro", "package_name": "dbt_utils", "path": "macros/generic_tests/not_accepted_values.sql", "original_file_path": "macros/generic_tests/not_accepted_values.sql", "unique_id": "macro.dbt_utils.default__test_not_accepted_values", "macro_sql": "{% macro default__test_not_accepted_values(model, column_name, values, quote=True) %}\nwith all_values as (\n\n    select distinct\n        {{ column_name }} as value_field\n\n    from {{ model }}\n\n),\n\nvalidation_errors as (\n\n    select\n        value_field\n\n    from all_values\n    where value_field in (\n        {% for value in values -%}\n            {% if quote -%}\n            '{{ value }}'\n            {%- else -%}\n            {{ value }}\n            {%- endif -%}\n            {%- if not loop.last -%},{%- endif %}\n        {%- endfor %}\n        )\n\n)\n\nselect *\nfrom validation_errors\n\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1756850324.0559025, "supported_languages": null}, "macro.dbt_utils.test_expression_is_true": {"name": "test_expression_is_true", "resource_type": "macro", "package_name": "dbt_utils", "path": "macros/generic_tests/expression_is_true.sql", "original_file_path": "macros/generic_tests/expression_is_true.sql", "unique_id": "macro.dbt_utils.test_expression_is_true", "macro_sql": "{% test expression_is_true(model, expression, column_name=None) %}\n  {{ return(adapter.dispatch('test_expression_is_true', 'dbt_utils')(model, expression, column_name)) }}\n{% endtest %}", "depends_on": {"macros": ["macro.dbt_utils.default__test_expression_is_true"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1756850324.0566792, "supported_languages": null}, "macro.dbt_utils.default__test_expression_is_true": {"name": "default__test_expression_is_true", "resource_type": "macro", "package_name": "dbt_utils", "path": "macros/generic_tests/expression_is_true.sql", "original_file_path": "macros/generic_tests/expression_is_true.sql", "unique_id": "macro.dbt_utils.default__test_expression_is_true", "macro_sql": "{% macro default__test_expression_is_true(model, expression, column_name) %}\n\n{% set column_list = '*' if should_store_failures() else \"1\" %}\n\nselect\n    {{ column_list }}\nfrom {{ model }}\n{% if column_name is none %}\nwhere not({{ expression }})\n{%- else %}\nwhere not({{ column_name }} {{ expression }})\n{%- endif %}\n\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.should_store_failures"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1756850324.0574236, "supported_languages": null}, "macro.dbt_utils.test_unique_combination_of_columns": {"name": "test_unique_combination_of_columns", "resource_type": "macro", "package_name": "dbt_utils", "path": "macros/generic_tests/unique_combination_of_columns.sql", "original_file_path": "macros/generic_tests/unique_combination_of_columns.sql", "unique_id": "macro.dbt_utils.test_unique_combination_of_columns", "macro_sql": "{% test unique_combination_of_columns(model, combination_of_columns, quote_columns=false) %}\n  {{ return(adapter.dispatch('test_unique_combination_of_columns', 'dbt_utils')(model, combination_of_columns, quote_columns)) }}\n{% endtest %}", "depends_on": {"macros": ["macro.dbt_utils.default__test_unique_combination_of_columns"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1756850324.058237, "supported_languages": null}, "macro.dbt_utils.default__test_unique_combination_of_columns": {"name": "default__test_unique_combination_of_columns", "resource_type": "macro", "package_name": "dbt_utils", "path": "macros/generic_tests/unique_combination_of_columns.sql", "original_file_path": "macros/generic_tests/unique_combination_of_columns.sql", "unique_id": "macro.dbt_utils.default__test_unique_combination_of_columns", "macro_sql": "{% macro default__test_unique_combination_of_columns(model, combination_of_columns, quote_columns=false) %}\n\n{% if not quote_columns %}\n    {%- set column_list=combination_of_columns %}\n{% elif quote_columns %}\n    {%- set column_list=[] %}\n        {% for column in combination_of_columns -%}\n            {% set column_list = column_list.append( adapter.quote(column) ) %}\n        {%- endfor %}\n{% else %}\n    {{ exceptions.raise_compiler_error(\n        \"`quote_columns` argument for unique_combination_of_columns test must be one of [True, False] Got: '\" ~ quote ~\"'.'\"\n    ) }}\n{% endif %}\n\n{%- set columns_csv=column_list | join(', ') %}\n\n\nwith validation_errors as (\n\n    select\n        {{ columns_csv }}\n    from {{ model }}\n    group by {{ columns_csv }}\n    having count(*) > 1\n\n)\n\nselect *\nfrom validation_errors\n\n\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1756850324.0597076, "supported_languages": null}, "macro.dbt_utils.get_column_values": {"name": "get_column_values", "resource_type": "macro", "package_name": "dbt_utils", "path": "macros/sql/get_column_values.sql", "original_file_path": "macros/sql/get_column_values.sql", "unique_id": "macro.dbt_utils.get_column_values", "macro_sql": "{% macro get_column_values(table, column, order_by='count(*) desc', max_records=none, default=none, where=none) -%}\n    {{ return(adapter.dispatch('get_column_values', 'dbt_utils')(table, column, order_by, max_records, default, where)) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt_utils.default__get_column_values"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1756850324.0610893, "supported_languages": null}, "macro.dbt_utils.default__get_column_values": {"name": "default__get_column_values", "resource_type": "macro", "package_name": "dbt_utils", "path": "macros/sql/get_column_values.sql", "original_file_path": "macros/sql/get_column_values.sql", "unique_id": "macro.dbt_utils.default__get_column_values", "macro_sql": "{% macro default__get_column_values(table, column, order_by='count(*) desc', max_records=none, default=none, where=none) -%}\n    {#-- Prevent querying of db in parsing mode. This works because this macro does not create any new refs. #}\n    {%- if not execute -%}\n        {% set default = [] if not default %}\n        {{ return(default) }}\n    {% endif %}\n\n    {%- do dbt_utils._is_ephemeral(table, 'get_column_values') -%}\n\n    {# Not all relations are tables. Renaming for internal clarity without breaking functionality for anyone using named arguments #}\n    {# TODO: Change the method signature in a future 0.x.0 release #}\n    {%- set target_relation = table -%}\n\n    {# adapter.load_relation is a convenience wrapper to avoid building a Relation when we already have one #}\n    {% set relation_exists = (load_relation(target_relation)) is not none %}\n\n    {%- call statement('get_column_values', fetch_result=true) %}\n\n        {%- if not relation_exists and default is none -%}\n\n          {{ exceptions.raise_compiler_error(\"In get_column_values(): relation \" ~ target_relation ~ \" does not exist and no default value was provided.\") }}\n\n        {%- elif not relation_exists and default is not none -%}\n\n          {{ log(\"Relation \" ~ target_relation ~ \" does not exist. Returning the default value: \" ~ default) }}\n\n          {{ return(default) }}\n\n        {%- else -%}\n\n\n            select\n                {{ column }} as value\n\n            from {{ target_relation }}\n\n            {% if where is not none %}\n            where {{ where }}\n            {% endif %}\n\n            group by {{ column }}\n            order by {{ order_by }}\n\n            {% if max_records is not none %}\n            limit {{ max_records }}\n            {% endif %}\n\n        {% endif %}\n\n    {%- endcall -%}\n\n    {%- set value_list = load_result('get_column_values') -%}\n\n    {%- if value_list and value_list['data'] -%}\n        {%- set values = value_list['data'] | map(attribute=0) | list %}\n        {{ return(values) }}\n    {%- else -%}\n        {{ return(default) }}\n    {%- endif -%}\n\n{%- endmacro %}", "depends_on": {"macros": ["macro.dbt_utils._is_ephemeral", "macro.dbt.load_relation", "macro.dbt.statement"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1756850324.064103, "supported_languages": null}, "macro.dbt_utils.width_bucket": {"name": "width_bucket", "resource_type": "macro", "package_name": "dbt_utils", "path": "macros/sql/width_bucket.sql", "original_file_path": "macros/sql/width_bucket.sql", "unique_id": "macro.dbt_utils.width_bucket", "macro_sql": "{% macro width_bucket(expr, min_value, max_value, num_buckets) %}\n  {{ return(adapter.dispatch('width_bucket', 'dbt_utils') (expr, min_value, max_value, num_buckets)) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt_utils.default__width_bucket"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1756850324.0649788, "supported_languages": null}, "macro.dbt_utils.default__width_bucket": {"name": "default__width_bucket", "resource_type": "macro", "package_name": "dbt_utils", "path": "macros/sql/width_bucket.sql", "original_file_path": "macros/sql/width_bucket.sql", "unique_id": "macro.dbt_utils.default__width_bucket", "macro_sql": "{% macro default__width_bucket(expr, min_value, max_value, num_buckets) -%}\n\n    {% set bin_size -%}\n    (( {{ max_value }} - {{ min_value }} ) / {{ num_buckets }} )\n    {%- endset %}\n    (\n        -- to break ties when the amount is eaxtly at the bucket egde\n        case\n            when\n                mod(\n                    {{ dbt.safe_cast(expr, dbt.type_numeric() ) }},\n                    {{ dbt.safe_cast(bin_size, dbt.type_numeric() ) }}\n                ) = 0\n            then 1\n            else 0\n        end\n    ) +\n      -- Anything over max_value goes the N+1 bucket\n    least(\n        ceil(\n            ({{ expr }} - {{ min_value }})/{{ bin_size }}\n        ),\n        {{ num_buckets }} + 1\n    )\n{%- endmacro %}", "depends_on": {"macros": ["macro.dbt.safe_cast", "macro.dbt.type_numeric"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1756850324.0658793, "supported_languages": null}, "macro.dbt_utils.snowflake__width_bucket": {"name": "snowflake__width_bucket", "resource_type": "macro", "package_name": "dbt_utils", "path": "macros/sql/width_bucket.sql", "original_file_path": "macros/sql/width_bucket.sql", "unique_id": "macro.dbt_utils.snowflake__width_bucket", "macro_sql": "{% macro snowflake__width_bucket(expr, min_value, max_value, num_buckets) %}\n    width_bucket({{ expr }}, {{ min_value }}, {{ max_value }}, {{ num_buckets }} )\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1756850324.0662665, "supported_languages": null}, "macro.dbt_utils.safe_divide": {"name": "safe_divide", "resource_type": "macro", "package_name": "dbt_utils", "path": "macros/sql/safe_divide.sql", "original_file_path": "macros/sql/safe_divide.sql", "unique_id": "macro.dbt_utils.safe_divide", "macro_sql": "{% macro safe_divide(numerator, denominator) -%}\n  {{ return(adapter.dispatch('safe_divide', 'dbt_utils')(numerator, denominator)) }}\n{%- endmacro %}", "depends_on": {"macros": ["macro.dbt_utils.default__safe_divide"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1756850324.0668263, "supported_languages": null}, "macro.dbt_utils.default__safe_divide": {"name": "default__safe_divide", "resource_type": "macro", "package_name": "dbt_utils", "path": "macros/sql/safe_divide.sql", "original_file_path": "macros/sql/safe_divide.sql", "unique_id": "macro.dbt_utils.default__safe_divide", "macro_sql": "{% macro default__safe_divide(numerator, denominator) %}\n    ( {{ numerator }} ) / nullif( ( {{ denominator }} ), 0)\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1756850324.0671012, "supported_languages": null}, "macro.dbt_utils.get_filtered_columns_in_relation": {"name": "get_filtered_columns_in_relation", "resource_type": "macro", "package_name": "dbt_utils", "path": "macros/sql/get_filtered_columns_in_relation.sql", "original_file_path": "macros/sql/get_filtered_columns_in_relation.sql", "unique_id": "macro.dbt_utils.get_filtered_columns_in_relation", "macro_sql": "{% macro get_filtered_columns_in_relation(from, except=[]) -%}\n    {{ return(adapter.dispatch('get_filtered_columns_in_relation', 'dbt_utils')(from, except)) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt_utils.default__get_filtered_columns_in_relation"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1756850324.0678718, "supported_languages": null}, "macro.dbt_utils.default__get_filtered_columns_in_relation": {"name": "default__get_filtered_columns_in_relation", "resource_type": "macro", "package_name": "dbt_utils", "path": "macros/sql/get_filtered_columns_in_relation.sql", "original_file_path": "macros/sql/get_filtered_columns_in_relation.sql", "unique_id": "macro.dbt_utils.default__get_filtered_columns_in_relation", "macro_sql": "{% macro default__get_filtered_columns_in_relation(from, except=[]) -%}\n    {%- do dbt_utils._is_relation(from, 'get_filtered_columns_in_relation') -%}\n    {%- do dbt_utils._is_ephemeral(from, 'get_filtered_columns_in_relation') -%}\n\n    {# -- Prevent querying of db in parsing mode. This works because this macro does not create any new refs. #}\n    {%- if not execute -%}\n        {{ return('') }}\n    {% endif %}\n\n    {%- set include_cols = [] %}\n    {%- set cols = adapter.get_columns_in_relation(from) -%}\n    {%- set except = except | map(\"lower\") | list %}\n    {%- for col in cols -%}\n        {%- if col.column|lower not in except -%}\n            {% do include_cols.append(col.column) %}\n        {%- endif %}\n    {%- endfor %}\n\n    {{ return(include_cols) }}\n\n{%- endmacro %}", "depends_on": {"macros": ["macro.dbt_utils._is_relation", "macro.dbt_utils._is_ephemeral"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1756850324.0693676, "supported_languages": null}, "macro.dbt_utils.get_table_types_sql": {"name": "get_table_types_sql", "resource_type": "macro", "package_name": "dbt_utils", "path": "macros/sql/get_table_types_sql.sql", "original_file_path": "macros/sql/get_table_types_sql.sql", "unique_id": "macro.dbt_utils.get_table_types_sql", "macro_sql": "{%- macro get_table_types_sql() -%}\n  {{ return(adapter.dispatch('get_table_types_sql', 'dbt_utils')()) }}\n{%- endmacro -%}\n\n", "depends_on": {"macros": ["macro.dbt_utils.postgres__get_table_types_sql"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1756850324.0700314, "supported_languages": null}, "macro.dbt_utils.default__get_table_types_sql": {"name": "default__get_table_types_sql", "resource_type": "macro", "package_name": "dbt_utils", "path": "macros/sql/get_table_types_sql.sql", "original_file_path": "macros/sql/get_table_types_sql.sql", "unique_id": "macro.dbt_utils.default__get_table_types_sql", "macro_sql": "{% macro default__get_table_types_sql() %}\n            case table_type\n                when 'BASE TABLE' then 'table'\n                when 'EXTERNAL TABLE' then 'external'\n                when 'MATERIALIZED VIEW' then 'materializedview'\n                else lower(table_type)\n            end as {{ adapter.quote('table_type') }}\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1756850324.0703285, "supported_languages": null}, "macro.dbt_utils.postgres__get_table_types_sql": {"name": "postgres__get_table_types_sql", "resource_type": "macro", "package_name": "dbt_utils", "path": "macros/sql/get_table_types_sql.sql", "original_file_path": "macros/sql/get_table_types_sql.sql", "unique_id": "macro.dbt_utils.postgres__get_table_types_sql", "macro_sql": "{% macro postgres__get_table_types_sql() %}\n            case table_type\n                when 'BASE TABLE' then 'table'\n                when 'FOREIGN' then 'external'\n                when 'MATERIALIZED VIEW' then 'materializedview'\n                else lower(table_type)\n            end as {{ adapter.quote('table_type') }}\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1756850324.0706098, "supported_languages": null}, "macro.dbt_utils.databricks__get_table_types_sql": {"name": "databricks__get_table_types_sql", "resource_type": "macro", "package_name": "dbt_utils", "path": "macros/sql/get_table_types_sql.sql", "original_file_path": "macros/sql/get_table_types_sql.sql", "unique_id": "macro.dbt_utils.databricks__get_table_types_sql", "macro_sql": "{% macro databricks__get_table_types_sql() %}\n            case table_type\n                when 'MANAGED' then 'table'\n                when 'BASE TABLE' then 'table'\n                when 'MATERIALIZED VIEW' then 'materializedview'\n                else lower(table_type)\n            end as {{ adapter.quote('table_type') }}\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1756850324.070899, "supported_languages": null}, "macro.dbt_utils.get_query_results_as_dict": {"name": "get_query_results_as_dict", "resource_type": "macro", "package_name": "dbt_utils", "path": "macros/sql/get_query_results_as_dict.sql", "original_file_path": "macros/sql/get_query_results_as_dict.sql", "unique_id": "macro.dbt_utils.get_query_results_as_dict", "macro_sql": "{% macro get_query_results_as_dict(query) %}\n    {{ return(adapter.dispatch('get_query_results_as_dict', 'dbt_utils')(query)) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt_utils.default__get_query_results_as_dict"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1756850324.071543, "supported_languages": null}, "macro.dbt_utils.default__get_query_results_as_dict": {"name": "default__get_query_results_as_dict", "resource_type": "macro", "package_name": "dbt_utils", "path": "macros/sql/get_query_results_as_dict.sql", "original_file_path": "macros/sql/get_query_results_as_dict.sql", "unique_id": "macro.dbt_utils.default__get_query_results_as_dict", "macro_sql": "{% macro default__get_query_results_as_dict(query) %}\n\n{# This macro returns a dictionary of the form {column_name: (tuple_of_results)} #}\n\n    {%- call statement('get_query_results', fetch_result=True,auto_begin=false) -%}\n\n        {{ query }}\n\n    {%- endcall -%}\n\n    {% set sql_results={} %}\n\n    {%- if execute -%}\n        {% set sql_results_table = load_result('get_query_results').table.columns %}\n        {% for column_name, column in sql_results_table.items() %}\n            {% do sql_results.update({column_name: column.values()}) %}\n        {% endfor %}\n    {%- endif -%}\n\n    {{ return(sql_results) }}\n\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.statement"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1756850324.0727239, "supported_languages": null}, "macro.dbt_utils.safe_add": {"name": "safe_add", "resource_type": "macro", "package_name": "dbt_utils", "path": "macros/sql/safe_add.sql", "original_file_path": "macros/sql/safe_add.sql", "unique_id": "macro.dbt_utils.safe_add", "macro_sql": "{%- macro safe_add(field_list) -%}\n    {{ return(adapter.dispatch('safe_add', 'dbt_utils')(field_list)) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt_utils.default__safe_add"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1756850324.0734146, "supported_languages": null}, "macro.dbt_utils.default__safe_add": {"name": "default__safe_add", "resource_type": "macro", "package_name": "dbt_utils", "path": "macros/sql/safe_add.sql", "original_file_path": "macros/sql/safe_add.sql", "unique_id": "macro.dbt_utils.default__safe_add", "macro_sql": "\n\n{%- macro default__safe_add(field_list) -%}\n\n{%- if field_list is not iterable or field_list is string or field_list is mapping -%}\n\n{%- set error_message = '\nWarning: the `safe_add` macro now takes a single list argument instead of \\\nstring arguments. The {}.{} model triggered this warning. \\\n'.format(model.package_name, model.name) -%}\n\n{%- do exceptions.warn(error_message) -%}\n\n{%- endif -%}\n\n{% set fields = [] %}\n\n{%- for field in field_list -%}\n\n    {% do fields.append(\"coalesce(\" ~ field ~ \", 0)\") %}\n\n{%- endfor -%}\n\n{{ fields|join(' +\\n  ') }}\n\n{%- endmacro -%}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1756850324.0746984, "supported_languages": null}, "macro.dbt_utils.unpivot": {"name": "unpivot", "resource_type": "macro", "package_name": "dbt_utils", "path": "macros/sql/unpivot.sql", "original_file_path": "macros/sql/unpivot.sql", "unique_id": "macro.dbt_utils.unpivot", "macro_sql": "{% macro unpivot(relation=none, cast_to='varchar', exclude=none, remove=none, field_name='field_name', value_name='value', quote_identifiers=False) -%}\n    {{ return(adapter.dispatch('unpivot', 'dbt_utils')(relation, cast_to, exclude, remove, field_name, value_name, quote_identifiers)) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt_utils.default__unpivot"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1756850324.0761833, "supported_languages": null}, "macro.dbt_utils.default__unpivot": {"name": "default__unpivot", "resource_type": "macro", "package_name": "dbt_utils", "path": "macros/sql/unpivot.sql", "original_file_path": "macros/sql/unpivot.sql", "unique_id": "macro.dbt_utils.default__unpivot", "macro_sql": "{% macro default__unpivot(relation=none, cast_to='varchar', exclude=none, remove=none, field_name='field_name', value_name='value', quote_identifiers=False) -%}\n\n    {% if not relation %}\n        {{ exceptions.raise_compiler_error(\"Error: argument `relation` is required for `unpivot` macro.\") }}\n    {% endif %}\n\n  {%- set exclude = exclude if exclude is not none else [] %}\n  {%- set remove = remove if remove is not none else [] %}\n\n  {%- set include_cols = [] %}\n\n  {%- set table_columns = {} %}\n\n  {%- do table_columns.update({relation: []}) %}\n\n  {%- do dbt_utils._is_relation(relation, 'unpivot') -%}\n  {%- do dbt_utils._is_ephemeral(relation, 'unpivot') -%}\n  {%- set cols = adapter.get_columns_in_relation(relation) %}\n\n  {%- for col in cols -%}\n    {%- if col.column.lower() not in remove|map('lower') and col.column.lower() not in exclude|map('lower') -%}\n      {% do include_cols.append(col) %}\n    {%- endif %}\n  {%- endfor %}\n\n\n  {%- for col in include_cols -%}\n    {%- set current_col_name = adapter.quote(col.column) if quote_identifiers else col.column -%}\n    select\n      {%- for exclude_col in exclude %}\n        {{ adapter.quote(exclude_col) if quote_identifiers else exclude_col }},\n      {%- endfor %}\n\n      cast('{{ col.column }}' as {{ dbt.type_string() }}) as {{ adapter.quote(field_name) if quote_identifiers else field_name  }},\n      cast(  {% if col.data_type == 'boolean' %}\n           {{ dbt.cast_bool_to_text(current_col_name) }}\n             {% else %}\n           {{ current_col_name }}\n             {% endif %}\n           as {{ cast_to }}) as {{ adapter.quote(value_name) if quote_identifiers else value_name }}\n\n    from {{ relation }}\n\n    {% if not loop.last -%}\n      union all\n    {% endif -%}\n  {%- endfor -%}\n\n{%- endmacro %}", "depends_on": {"macros": ["macro.dbt_utils._is_relation", "macro.dbt_utils._is_ephemeral", "macro.dbt.type_string", "macro.dbt.cast_bool_to_text"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1756850324.0798044, "supported_languages": null}, "macro.dbt_utils.nullcheck": {"name": "nullcheck", "resource_type": "macro", "package_name": "dbt_utils", "path": "macros/sql/nullcheck.sql", "original_file_path": "macros/sql/nullcheck.sql", "unique_id": "macro.dbt_utils.nullcheck", "macro_sql": "{% macro nullcheck(cols) %}\n    {{ return(adapter.dispatch('nullcheck', 'dbt_utils')(cols)) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt_utils.default__nullcheck"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1756850324.080436, "supported_languages": null}, "macro.dbt_utils.default__nullcheck": {"name": "default__nullcheck", "resource_type": "macro", "package_name": "dbt_utils", "path": "macros/sql/nullcheck.sql", "original_file_path": "macros/sql/nullcheck.sql", "unique_id": "macro.dbt_utils.default__nullcheck", "macro_sql": "{% macro default__nullcheck(cols) %}\n{%- for col in cols %}\n\n    {% if col.is_string() -%}\n\n    nullif({{col.name}},'') as {{col.name}}\n\n    {%- else -%}\n\n    {{col.name}}\n\n    {%- endif -%}\n\n{%- if not loop.last -%} , {%- endif -%}\n\n{%- endfor -%}\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1756850324.0811276, "supported_languages": null}, "macro.dbt_utils.deduplicate": {"name": "deduplicate", "resource_type": "macro", "package_name": "dbt_utils", "path": "macros/sql/deduplicate.sql", "original_file_path": "macros/sql/deduplicate.sql", "unique_id": "macro.dbt_utils.deduplicate", "macro_sql": "{%- macro deduplicate(relation, partition_by, order_by) -%}\n    {{ return(adapter.dispatch('deduplicate', 'dbt_utils')(relation, partition_by, order_by)) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt_utils.postgres__deduplicate"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1756850324.0821862, "supported_languages": null}, "macro.dbt_utils.default__deduplicate": {"name": "default__deduplicate", "resource_type": "macro", "package_name": "dbt_utils", "path": "macros/sql/deduplicate.sql", "original_file_path": "macros/sql/deduplicate.sql", "unique_id": "macro.dbt_utils.default__deduplicate", "macro_sql": "\n\n{%- macro default__deduplicate(relation, partition_by, order_by) -%}\n\n    with row_numbered as (\n        select\n            _inner.*,\n            row_number() over (\n                partition by {{ partition_by }}\n                order by {{ order_by }}\n            ) as rn\n        from {{ relation }} as _inner\n    )\n\n    select\n        distinct data.*\n    from {{ relation }} as data\n    {#\n    -- Not all DBs will support natural joins but the ones that do include:\n    -- Oracle, MySQL, SQLite, Redshift, Teradata, Materialize, Databricks\n    -- Apache Spark, SingleStore, Vertica\n    -- Those that do not appear to support natural joins include:\n    -- SQLServer, Trino, Presto, Rockset, Athena\n    #}\n    natural join row_numbered\n    where row_numbered.rn = 1\n\n{%- endmacro -%}\n\n", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1756850324.0826073, "supported_languages": null}, "macro.dbt_utils.redshift__deduplicate": {"name": "redshift__deduplicate", "resource_type": "macro", "package_name": "dbt_utils", "path": "macros/sql/deduplicate.sql", "original_file_path": "macros/sql/deduplicate.sql", "unique_id": "macro.dbt_utils.redshift__deduplicate", "macro_sql": "{% macro redshift__deduplicate(relation, partition_by, order_by) -%}\n\n    select *\n    from {{ relation }} as tt\n    qualify\n        row_number() over (\n            partition by {{ partition_by }}\n            order by {{ order_by }}\n        ) = 1\n\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1756850324.0829675, "supported_languages": null}, "macro.dbt_utils.postgres__deduplicate": {"name": "postgres__deduplicate", "resource_type": "macro", "package_name": "dbt_utils", "path": "macros/sql/deduplicate.sql", "original_file_path": "macros/sql/deduplicate.sql", "unique_id": "macro.dbt_utils.postgres__deduplicate", "macro_sql": "\n{%- macro postgres__deduplicate(relation, partition_by, order_by) -%}\n\n    select\n        distinct on ({{ partition_by }}) *\n    from {{ relation }}\n    order by {{ partition_by }}{{ ',' ~ order_by }}\n\n{%- endmacro -%}\n\n", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1756850324.083352, "supported_languages": null}, "macro.dbt_utils.snowflake__deduplicate": {"name": "snowflake__deduplicate", "resource_type": "macro", "package_name": "dbt_utils", "path": "macros/sql/deduplicate.sql", "original_file_path": "macros/sql/deduplicate.sql", "unique_id": "macro.dbt_utils.snowflake__deduplicate", "macro_sql": "\n{%- macro snowflake__deduplicate(relation, partition_by, order_by) -%}\n\n    select *\n    from {{ relation }}\n    qualify\n        row_number() over (\n            partition by {{ partition_by }}\n            order by {{ order_by }}\n        ) = 1\n\n{%- endmacro -%}\n\n", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1756850324.0836864, "supported_languages": null}, "macro.dbt_utils.databricks__deduplicate": {"name": "databricks__deduplicate", "resource_type": "macro", "package_name": "dbt_utils", "path": "macros/sql/deduplicate.sql", "original_file_path": "macros/sql/deduplicate.sql", "unique_id": "macro.dbt_utils.databricks__deduplicate", "macro_sql": "\n{%- macro databricks__deduplicate(relation, partition_by, order_by) -%}\n\n    select *\n    from {{ relation }}\n    qualify\n        row_number() over (\n            partition by {{ partition_by }}\n            order by {{ order_by }}\n        ) = 1\n\n{%- endmacro -%}\n\n", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1756850324.0840392, "supported_languages": null}, "macro.dbt_utils.bigquery__deduplicate": {"name": "bigquery__deduplicate", "resource_type": "macro", "package_name": "dbt_utils", "path": "macros/sql/deduplicate.sql", "original_file_path": "macros/sql/deduplicate.sql", "unique_id": "macro.dbt_utils.bigquery__deduplicate", "macro_sql": "\n{%- macro bigquery__deduplicate(relation, partition_by, order_by) -%}\n\n    select unique.*\n    from (\n        select\n            array_agg (\n                original\n                order by {{ order_by }}\n                limit 1\n            )[offset(0)] unique\n        from {{ relation }} original\n        group by {{ partition_by }}\n    )\n\n{%- endmacro -%}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1756850324.0843768, "supported_languages": null}, "macro.dbt_utils.group_by": {"name": "group_by", "resource_type": "macro", "package_name": "dbt_utils", "path": "macros/sql/groupby.sql", "original_file_path": "macros/sql/groupby.sql", "unique_id": "macro.dbt_utils.group_by", "macro_sql": "{%- macro group_by(n) -%}\n    {{ return(adapter.dispatch('group_by', 'dbt_utils')(n)) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt_utils.default__group_by"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1756850324.0849254, "supported_languages": null}, "macro.dbt_utils.default__group_by": {"name": "default__group_by", "resource_type": "macro", "package_name": "dbt_utils", "path": "macros/sql/groupby.sql", "original_file_path": "macros/sql/groupby.sql", "unique_id": "macro.dbt_utils.default__group_by", "macro_sql": "\n\n{%- macro default__group_by(n) -%}\n\n  group by {% for i in range(1, n + 1) -%}\n      {{ i }}{{ ',' if not loop.last }}   \n   {%- endfor -%}\n\n{%- endmacro -%}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1756850324.085416, "supported_languages": null}, "macro.dbt_utils.union_relations": {"name": "union_relations", "resource_type": "macro", "package_name": "dbt_utils", "path": "macros/sql/union.sql", "original_file_path": "macros/sql/union.sql", "unique_id": "macro.dbt_utils.union_relations", "macro_sql": "{%- macro union_relations(relations, column_override=none, include=[], exclude=[], source_column_name='_dbt_source_relation', where=none) -%}\n    {{ return(adapter.dispatch('union_relations', 'dbt_utils')(relations, column_override, include, exclude, source_column_name, where)) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt_utils.default__union_relations"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1756850324.0873642, "supported_languages": null}, "macro.dbt_utils.default__union_relations": {"name": "default__union_relations", "resource_type": "macro", "package_name": "dbt_utils", "path": "macros/sql/union.sql", "original_file_path": "macros/sql/union.sql", "unique_id": "macro.dbt_utils.default__union_relations", "macro_sql": "\n\n{%- macro default__union_relations(relations, column_override=none, include=[], exclude=[], source_column_name='_dbt_source_relation', where=none) -%}\n\n    {%- if exclude and include -%}\n        {{ exceptions.raise_compiler_error(\"Both an exclude and include list were provided to the `union` macro. Only one is allowed\") }}\n    {%- endif -%}\n\n    {#-- Prevent querying of db in parsing mode. This works because this macro does not create any new refs. -#}\n    {%- if not execute %}\n        {{ return('') }}\n    {% endif -%}\n\n    {%- set column_override = column_override if column_override is not none else {} -%}\n\n    {%- set relation_columns = {} -%}\n    {%- set column_superset = {} -%}\n    {%- set all_excludes = [] -%}\n    {%- set all_includes = [] -%}\n\n    {%- if exclude -%}\n        {%- for exc in exclude -%}\n            {%- do all_excludes.append(exc | lower) -%}\n        {%- endfor -%}\n    {%- endif -%}\n\n    {%- if include -%}\n        {%- for inc in include -%}\n            {%- do all_includes.append(inc | lower) -%}\n        {%- endfor -%}\n    {%- endif -%}\n\n    {%- for relation in relations -%}\n\n        {%- do relation_columns.update({relation: []}) -%}\n\n        {%- do dbt_utils._is_relation(relation, 'union_relations') -%}\n        {%- do dbt_utils._is_ephemeral(relation, 'union_relations') -%}\n        {%- set cols = adapter.get_columns_in_relation(relation) -%}\n        {%- for col in cols -%}\n\n        {#- If an exclude list was provided and the column is in the list, do nothing -#}\n        {%- if exclude and col.column | lower in all_excludes -%}\n\n        {#- If an include list was provided and the column is not in the list, do nothing -#}\n        {%- elif include and col.column | lower not in all_includes -%}\n\n        {#- Otherwise add the column to the column superset -#}\n        {%- else -%}\n\n            {#- update the list of columns in this relation -#}\n            {%- do relation_columns[relation].append(col.column) -%}\n\n            {%- if col.column in column_superset -%}\n\n                {%- set stored = column_superset[col.column] -%}\n                {%- if col.is_string() and stored.is_string() and col.string_size() > stored.string_size() -%}\n\n                    {%- do column_superset.update({col.column: col}) -%}\n\n                {%- endif %}\n\n            {%- else -%}\n\n                {%- do column_superset.update({col.column: col}) -%}\n\n            {%- endif -%}\n\n        {%- endif -%}\n\n        {%- endfor -%}\n    {%- endfor -%}\n\n    {%- set ordered_column_names = column_superset.keys() -%}\n    {%- set dbt_command = flags.WHICH -%}\n\n\n    {% if dbt_command in ['run', 'build'] %}\n    {% if (include | length > 0 or exclude | length > 0) and not column_superset.keys() %}\n        {%- set relations_string -%}\n            {%- for relation in relations -%}\n                {{ relation.name }}\n            {%- if not loop.last %}, {% endif -%}\n            {%- endfor -%}\n        {%- endset -%}\n\n        {%- set error_message -%}\n            There were no columns found to union for relations {{ relations_string }}\n        {%- endset -%}\n\n        {{ exceptions.raise_compiler_error(error_message) }}\n    {%- endif -%}\n    {%- endif -%}\n\n    {%- for relation in relations %}\n\n        (\n            select\n\n                {%- if source_column_name is not none %}\n                cast({{ dbt.string_literal(relation) }} as {{ dbt.type_string() }}) as {{ source_column_name }},\n                {%- endif %}\n\n                {% for col_name in ordered_column_names -%}\n\n                    {%- set col = column_superset[col_name] %}\n                    {%- set col_type = column_override.get(col.column, col.data_type) %}\n                    {%- set col_name = adapter.quote(col_name) if col_name in relation_columns[relation] else 'null' %}\n                    cast({{ col_name }} as {{ col_type }}) as {{ col.quoted }} {% if not loop.last %},{% endif -%}\n\n                {%- endfor %}\n\n            from {{ relation }}\n\n            {% if where -%}\n            where {{ where }}\n            {%- endif %}\n        )\n\n        {% if not loop.last -%}\n            union all\n        {% endif -%}\n\n    {%- endfor -%}\n\n{%- endmacro -%}", "depends_on": {"macros": ["macro.dbt_utils._is_relation", "macro.dbt_utils._is_ephemeral", "macro.dbt.string_literal", "macro.dbt.type_string"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1756850324.0941017, "supported_languages": null}, "macro.dbt_utils.get_tables_by_pattern_sql": {"name": "get_tables_by_pattern_sql", "resource_type": "macro", "package_name": "dbt_utils", "path": "macros/sql/get_tables_by_pattern_sql.sql", "original_file_path": "macros/sql/get_tables_by_pattern_sql.sql", "unique_id": "macro.dbt_utils.get_tables_by_pattern_sql", "macro_sql": "{% macro get_tables_by_pattern_sql(schema_pattern, table_pattern, exclude='', database=target.database) %}\n    {{ return(adapter.dispatch('get_tables_by_pattern_sql', 'dbt_utils')\n        (schema_pattern, table_pattern, exclude, database)) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt_utils.default__get_tables_by_pattern_sql"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1756850324.0956566, "supported_languages": null}, "macro.dbt_utils.default__get_tables_by_pattern_sql": {"name": "default__get_tables_by_pattern_sql", "resource_type": "macro", "package_name": "dbt_utils", "path": "macros/sql/get_tables_by_pattern_sql.sql", "original_file_path": "macros/sql/get_tables_by_pattern_sql.sql", "unique_id": "macro.dbt_utils.default__get_tables_by_pattern_sql", "macro_sql": "{% macro default__get_tables_by_pattern_sql(schema_pattern, table_pattern, exclude='', database=target.database) %}\n\n        select distinct\n            table_schema as {{ adapter.quote('table_schema') }},\n            table_name as {{ adapter.quote('table_name') }},\n            {{ dbt_utils.get_table_types_sql() }}\n        from {{ database }}.information_schema.tables\n        where table_schema ilike '{{ schema_pattern }}'\n        and table_name ilike '{{ table_pattern }}'\n        and table_name not ilike '{{ exclude }}'\n\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt_utils.get_table_types_sql"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1756850324.0963867, "supported_languages": null}, "macro.dbt_utils.redshift__get_tables_by_pattern_sql": {"name": "redshift__get_tables_by_pattern_sql", "resource_type": "macro", "package_name": "dbt_utils", "path": "macros/sql/get_tables_by_pattern_sql.sql", "original_file_path": "macros/sql/get_tables_by_pattern_sql.sql", "unique_id": "macro.dbt_utils.redshift__get_tables_by_pattern_sql", "macro_sql": "{% macro redshift__get_tables_by_pattern_sql(schema_pattern, table_pattern, exclude='', database=target.database) %}\n\n    {% set sql %}\n        select distinct\n            table_schema as {{ adapter.quote('table_schema') }},\n            table_name as {{ adapter.quote('table_name') }},\n            {{ dbt_utils.get_table_types_sql() }}\n        from \"{{ database }}\".\"information_schema\".\"tables\"\n        where table_schema ilike '{{ schema_pattern }}'\n        and table_name ilike '{{ table_pattern }}'\n        and table_name not ilike '{{ exclude }}'\n        union all\n        select distinct\n            schemaname as {{ adapter.quote('table_schema') }},\n            tablename as {{ adapter.quote('table_name') }},\n            'external' as {{ adapter.quote('table_type') }}\n        from svv_external_tables\n        where redshift_database_name = '{{ database }}'\n        and schemaname ilike '{{ schema_pattern }}'\n        and table_name ilike '{{ table_pattern }}'\n        and table_name not ilike '{{ exclude }}'\n    {% endset %}\n\n    {{ return(sql) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt_utils.get_table_types_sql"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1756850324.0977035, "supported_languages": null}, "macro.dbt_utils.bigquery__get_tables_by_pattern_sql": {"name": "bigquery__get_tables_by_pattern_sql", "resource_type": "macro", "package_name": "dbt_utils", "path": "macros/sql/get_tables_by_pattern_sql.sql", "original_file_path": "macros/sql/get_tables_by_pattern_sql.sql", "unique_id": "macro.dbt_utils.bigquery__get_tables_by_pattern_sql", "macro_sql": "{% macro bigquery__get_tables_by_pattern_sql(schema_pattern, table_pattern, exclude='', database=target.database) %}\n\n    {% if '%' in schema_pattern %}\n        {% set schemata=dbt_utils._bigquery__get_matching_schemata(schema_pattern, database) %}\n    {% else %}\n        {% set schemata=[schema_pattern] %}\n    {% endif %}\n\n    {% set sql %}\n        {% for schema in schemata %}\n            select distinct\n                table_schema,\n                table_name,\n                {{ dbt_utils.get_table_types_sql() }}\n\n            from {{ adapter.quote(database) }}.{{ schema }}.INFORMATION_SCHEMA.TABLES\n            where lower(table_name) like lower ('{{ table_pattern }}')\n                and lower(table_name) not like lower ('{{ exclude }}')\n\n            {% if not loop.last %} union all {% endif %}\n\n        {% endfor %}\n    {% endset %}\n\n    {{ return(sql) }}\n\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt_utils._bigquery__get_matching_schemata", "macro.dbt_utils.get_table_types_sql"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1756850324.0992525, "supported_languages": null}, "macro.dbt_utils._bigquery__get_matching_schemata": {"name": "_bigquery__get_matching_schemata", "resource_type": "macro", "package_name": "dbt_utils", "path": "macros/sql/get_tables_by_pattern_sql.sql", "original_file_path": "macros/sql/get_tables_by_pattern_sql.sql", "unique_id": "macro.dbt_utils._bigquery__get_matching_schemata", "macro_sql": "{% macro _bigquery__get_matching_schemata(schema_pattern, database) %}\n    {% if execute %}\n\n        {% set sql %}\n        select schema_name from {{ adapter.quote(database) }}.INFORMATION_SCHEMA.SCHEMATA\n        where lower(schema_name) like lower('{{ schema_pattern }}')\n        {% endset %}\n\n        {% set results=run_query(sql) %}\n\n        {% set schemata=results.columns['schema_name'].values() %}\n\n        {{ return(schemata) }}\n\n    {% else %}\n\n        {{ return([]) }}\n\n    {% endif %}\n\n\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.run_query"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1756850324.100309, "supported_languages": null}, "macro.dbt_utils.nullcheck_table": {"name": "nullcheck_table", "resource_type": "macro", "package_name": "dbt_utils", "path": "macros/sql/nullcheck_table.sql", "original_file_path": "macros/sql/nullcheck_table.sql", "unique_id": "macro.dbt_utils.nullcheck_table", "macro_sql": "{% macro nullcheck_table(relation) %}\n    {{ return(adapter.dispatch('nullcheck_table', 'dbt_utils')(relation)) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt_utils.default__nullcheck_table"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1756850324.100915, "supported_languages": null}, "macro.dbt_utils.default__nullcheck_table": {"name": "default__nullcheck_table", "resource_type": "macro", "package_name": "dbt_utils", "path": "macros/sql/nullcheck_table.sql", "original_file_path": "macros/sql/nullcheck_table.sql", "unique_id": "macro.dbt_utils.default__nullcheck_table", "macro_sql": "{% macro default__nullcheck_table(relation) %}\n\n  {%- do dbt_utils._is_relation(relation, 'nullcheck_table') -%}\n  {%- do dbt_utils._is_ephemeral(relation, 'nullcheck_table') -%}\n  {% set cols = adapter.get_columns_in_relation(relation) %}\n\n  select {{ dbt_utils.nullcheck(cols) }}\n  from {{relation}}\n\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt_utils._is_relation", "macro.dbt_utils._is_ephemeral", "macro.dbt_utils.nullcheck"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1756850324.1015894, "supported_languages": null}, "macro.dbt_utils.generate_surrogate_key": {"name": "generate_surrogate_key", "resource_type": "macro", "package_name": "dbt_utils", "path": "macros/sql/generate_surrogate_key.sql", "original_file_path": "macros/sql/generate_surrogate_key.sql", "unique_id": "macro.dbt_utils.generate_surrogate_key", "macro_sql": "{%- macro generate_surrogate_key(field_list) -%}\n    {{ return(adapter.dispatch('generate_surrogate_key', 'dbt_utils')(field_list)) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt_utils.default__generate_surrogate_key"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1756850324.1023, "supported_languages": null}, "macro.dbt_utils.default__generate_surrogate_key": {"name": "default__generate_surrogate_key", "resource_type": "macro", "package_name": "dbt_utils", "path": "macros/sql/generate_surrogate_key.sql", "original_file_path": "macros/sql/generate_surrogate_key.sql", "unique_id": "macro.dbt_utils.default__generate_surrogate_key", "macro_sql": "\n\n{%- macro default__generate_surrogate_key(field_list) -%}\n\n{%- if var('surrogate_key_treat_nulls_as_empty_strings', False) -%}\n    {%- set default_null_value = \"\" -%}\n{%- else -%}\n    {%- set default_null_value = '_dbt_utils_surrogate_key_null_' -%}\n{%- endif -%}\n\n{%- set fields = [] -%}\n\n{%- for field in field_list -%}\n\n    {%- do fields.append(\n        \"coalesce(cast(\" ~ field ~ \" as \" ~ dbt.type_string() ~ \"), '\" ~ default_null_value  ~\"')\"\n    ) -%}\n\n    {%- if not loop.last %}\n        {%- do fields.append(\"'-'\") -%}\n    {%- endif -%}\n\n{%- endfor -%}\n\n{{ dbt.hash(dbt.concat(fields)) }}\n\n{%- endmacro -%}", "depends_on": {"macros": ["macro.dbt.type_string", "macro.dbt.hash", "macro.dbt.concat"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1756850324.1035457, "supported_languages": null}, "macro.dbt_utils.star": {"name": "star", "resource_type": "macro", "package_name": "dbt_utils", "path": "macros/sql/star.sql", "original_file_path": "macros/sql/star.sql", "unique_id": "macro.dbt_utils.star", "macro_sql": "{% macro star(from, relation_alias=False, except=[], prefix='', suffix='', quote_identifiers=True) -%}\r\n    {{ return(adapter.dispatch('star', 'dbt_utils')(from, relation_alias, except, prefix, suffix, quote_identifiers)) }}\r\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt_utils.default__star"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1756850324.1049552, "supported_languages": null}, "macro.dbt_utils.default__star": {"name": "default__star", "resource_type": "macro", "package_name": "dbt_utils", "path": "macros/sql/star.sql", "original_file_path": "macros/sql/star.sql", "unique_id": "macro.dbt_utils.default__star", "macro_sql": "{% macro default__star(from, relation_alias=False, except=[], prefix='', suffix='', quote_identifiers=True) -%}\r\n    {%- do dbt_utils._is_relation(from, 'star') -%}\r\n    {%- do dbt_utils._is_ephemeral(from, 'star') -%}\r\n\r\n    {#-- Prevent querying of db in parsing mode. This works because this macro does not create any new refs. #}\r\n    {%- if not execute -%}\r\n        {% do return('*') %}\r\n    {%- endif -%}\r\n\r\n    {% set cols = dbt_utils.get_filtered_columns_in_relation(from, except) %}\r\n\r\n    {%- if cols|length <= 0 -%}\r\n        {% if flags.WHICH == 'compile' %}\r\n            {% set response %}\r\n*\r\n/* No columns were returned. Maybe the relation doesn't exist yet \r\nor all columns were excluded. This star is only output during  \r\ndbt compile, and exists to keep SQLFluff happy. */\r\n            {% endset %}\r\n            {% do return(response) %}\r\n        {% else %}\r\n            {% do return(\"/* no columns returned from star() macro */\") %}\r\n        {% endif %}\r\n    {%- else -%}\r\n        {%- for col in cols %}\r\n            {%- if relation_alias %}{{ relation_alias }}.{% else %}{%- endif -%}\r\n                {%- if quote_identifiers -%}\r\n                    {{ adapter.quote(col)|trim }} {%- if prefix!='' or suffix!='' %} as {{ adapter.quote(prefix ~ col ~ suffix)|trim }} {%- endif -%}\r\n                {%- else -%}\r\n                    {{ col|trim }} {%- if prefix!='' or suffix!='' %} as {{ (prefix ~ col ~ suffix)|trim }} {%- endif -%}\r\n                {% endif %}\r\n            {%- if not loop.last %},{{ '\\n  ' }}{%- endif -%}\r\n        {%- endfor -%}\r\n    {% endif %}\r\n{%- endmacro %}", "depends_on": {"macros": ["macro.dbt_utils._is_relation", "macro.dbt_utils._is_ephemeral", "macro.dbt_utils.get_filtered_columns_in_relation"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1756850324.10794, "supported_languages": null}, "macro.dbt_utils.degrees_to_radians": {"name": "degrees_to_radians", "resource_type": "macro", "package_name": "dbt_utils", "path": "macros/sql/haversine_distance.sql", "original_file_path": "macros/sql/haversine_distance.sql", "unique_id": "macro.dbt_utils.degrees_to_radians", "macro_sql": "{% macro degrees_to_radians(degrees) -%}\n    acos(-1) * {{degrees}} / 180\n{%- endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1756850324.1088214, "supported_languages": null}, "macro.dbt_utils.haversine_distance": {"name": "haversine_distance", "resource_type": "macro", "package_name": "dbt_utils", "path": "macros/sql/haversine_distance.sql", "original_file_path": "macros/sql/haversine_distance.sql", "unique_id": "macro.dbt_utils.haversine_distance", "macro_sql": "{% macro haversine_distance(lat1, lon1, lat2, lon2, unit='mi') -%}\n    {{ return(adapter.dispatch('haversine_distance', 'dbt_utils')(lat1,lon1,lat2,lon2,unit)) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt_utils.default__haversine_distance"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1756850324.1093826, "supported_languages": null}, "macro.dbt_utils.default__haversine_distance": {"name": "default__haversine_distance", "resource_type": "macro", "package_name": "dbt_utils", "path": "macros/sql/haversine_distance.sql", "original_file_path": "macros/sql/haversine_distance.sql", "unique_id": "macro.dbt_utils.default__haversine_distance", "macro_sql": "{% macro default__haversine_distance(lat1, lon1, lat2, lon2, unit='mi') -%}\n{%- if unit == 'mi' %}\n    {% set conversion_rate = 1 %}\n{% elif unit == 'km' %}\n    {% set conversion_rate = 1.60934 %}\n{% else %}\n    {{ exceptions.raise_compiler_error(\"unit input must be one of 'mi' or 'km'. Got \" ~ unit) }}\n{% endif %}\n\n    2 * 3961 * asin(sqrt(power((sin(radians(({{ lat2 }} - {{ lat1 }}) / 2))), 2) +\n    cos(radians({{lat1}})) * cos(radians({{lat2}})) *\n    power((sin(radians(({{ lon2 }} - {{ lon1 }}) / 2))), 2))) * {{ conversion_rate }}\n\n{%- endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1756850324.1104825, "supported_languages": null}, "macro.dbt_utils.bigquery__haversine_distance": {"name": "bigquery__haversine_distance", "resource_type": "macro", "package_name": "dbt_utils", "path": "macros/sql/haversine_distance.sql", "original_file_path": "macros/sql/haversine_distance.sql", "unique_id": "macro.dbt_utils.bigquery__haversine_distance", "macro_sql": "{% macro bigquery__haversine_distance(lat1, lon1, lat2, lon2, unit='mi') -%}\n{% set radians_lat1 = dbt_utils.degrees_to_radians(lat1) %}\n{% set radians_lat2 = dbt_utils.degrees_to_radians(lat2) %}\n{% set radians_lon1 = dbt_utils.degrees_to_radians(lon1) %}\n{% set radians_lon2 = dbt_utils.degrees_to_radians(lon2) %}\n{%- if unit == 'mi' %}\n    {% set conversion_rate = 1 %}\n{% elif unit == 'km' %}\n    {% set conversion_rate = 1.60934 %}\n{% else %}\n    {{ exceptions.raise_compiler_error(\"unit input must be one of 'mi' or 'km'. Got \" ~ unit) }}\n{% endif %}\n    2 * 3961 * asin(sqrt(power(sin(({{ radians_lat2 }} - {{ radians_lat1 }}) / 2), 2) +\n    cos({{ radians_lat1 }}) * cos({{ radians_lat2 }}) *\n    power(sin(({{ radians_lon2 }} - {{ radians_lon1 }}) / 2), 2))) * {{ conversion_rate }}\n\n{%- endmacro %}", "depends_on": {"macros": ["macro.dbt_utils.degrees_to_radians"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1756850324.112068, "supported_languages": null}, "macro.dbt_utils.safe_subtract": {"name": "safe_subtract", "resource_type": "macro", "package_name": "dbt_utils", "path": "macros/sql/safe_subtract.sql", "original_file_path": "macros/sql/safe_subtract.sql", "unique_id": "macro.dbt_utils.safe_subtract", "macro_sql": "{%- macro safe_subtract(field_list) -%}\n    {{ return(adapter.dispatch('safe_subtract', 'dbt_utils')(field_list)) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt_utils.default__safe_subtract"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1756850324.112714, "supported_languages": null}, "macro.dbt_utils.default__safe_subtract": {"name": "default__safe_subtract", "resource_type": "macro", "package_name": "dbt_utils", "path": "macros/sql/safe_subtract.sql", "original_file_path": "macros/sql/safe_subtract.sql", "unique_id": "macro.dbt_utils.default__safe_subtract", "macro_sql": "\n\n{%- macro default__safe_subtract(field_list) -%}\n\n{%- if field_list is not iterable or field_list is string or field_list is mapping -%}\n\n{%- set error_message = '\nWarning: the `safe_subtract` macro takes a single list argument instead of \\\nstring arguments. The {}.{} model triggered this warning. \\\n'.format(model.package_name, model.name) -%}\n\n{%- do exceptions.raise_compiler_error(error_message) -%}\n\n{%- endif -%}\n\n{% set fields = [] %}\n\n{%- for field in field_list -%}\n\n    {% do fields.append(\"coalesce(\" ~ field ~ \", 0)\") %}\n\n{%- endfor -%}\n\n{{ fields|join(' -\\n  ') }}\n\n{%- endmacro -%}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1756850324.1137958, "supported_languages": null}, "macro.dbt_utils.get_relations_by_prefix": {"name": "get_relations_by_prefix", "resource_type": "macro", "package_name": "dbt_utils", "path": "macros/sql/get_relations_by_prefix.sql", "original_file_path": "macros/sql/get_relations_by_prefix.sql", "unique_id": "macro.dbt_utils.get_relations_by_prefix", "macro_sql": "{% macro get_relations_by_prefix(schema, prefix, exclude='', database=target.database) %}\n    {{ return(adapter.dispatch('get_relations_by_prefix', 'dbt_utils')(schema, prefix, exclude, database)) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt_utils.default__get_relations_by_prefix"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1756850324.114697, "supported_languages": null}, "macro.dbt_utils.default__get_relations_by_prefix": {"name": "default__get_relations_by_prefix", "resource_type": "macro", "package_name": "dbt_utils", "path": "macros/sql/get_relations_by_prefix.sql", "original_file_path": "macros/sql/get_relations_by_prefix.sql", "unique_id": "macro.dbt_utils.default__get_relations_by_prefix", "macro_sql": "{% macro default__get_relations_by_prefix(schema, prefix, exclude='', database=target.database) %}\n\n    {%- call statement('get_tables', fetch_result=True) %}\n\n      {{ dbt_utils.get_tables_by_prefix_sql(schema, prefix, exclude, database) }}\n\n    {%- endcall -%}\n\n    {%- set table_list = load_result('get_tables') -%}\n\n    {%- if table_list and table_list['table'] -%}\n        {%- set tbl_relations = [] -%}\n        {%- for row in table_list['table'] -%}\n            {%- set tbl_relation = api.Relation.create(\n                database=database,\n                schema=row.table_schema,\n                identifier=row.table_name,\n                type=row.table_type\n            ) -%}\n            {%- do tbl_relations.append(tbl_relation) -%}\n        {%- endfor -%}\n\n        {{ return(tbl_relations) }}\n    {%- else -%}\n        {{ return([]) }}\n    {%- endif -%}\n\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.statement", "macro.dbt_utils.get_tables_by_prefix_sql"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1756850324.1163495, "supported_languages": null}, "macro.dbt_utils.surrogate_key": {"name": "surrogate_key", "resource_type": "macro", "package_name": "dbt_utils", "path": "macros/sql/surrogate_key.sql", "original_file_path": "macros/sql/surrogate_key.sql", "unique_id": "macro.dbt_utils.surrogate_key", "macro_sql": "{%- macro surrogate_key(field_list) -%}\n    {% set frustrating_jinja_feature = varargs %}\n    {{ return(adapter.dispatch('surrogate_key', 'dbt_utils')(field_list, *varargs)) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt_utils.default__surrogate_key"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1756850324.1170483, "supported_languages": null}, "macro.dbt_utils.default__surrogate_key": {"name": "default__surrogate_key", "resource_type": "macro", "package_name": "dbt_utils", "path": "macros/sql/surrogate_key.sql", "original_file_path": "macros/sql/surrogate_key.sql", "unique_id": "macro.dbt_utils.default__surrogate_key", "macro_sql": "\n\n{%- macro default__surrogate_key(field_list) -%}\n\n{%- set error_message = '\nWarning: `dbt_utils.surrogate_key` has been replaced by \\\n`dbt_utils.generate_surrogate_key`. The new macro treats null values \\\ndifferently to empty strings. To restore the behaviour of the original \\\nmacro, add a global variable in dbt_project.yml called \\\n`surrogate_key_treat_nulls_as_empty_strings` to your \\\ndbt_project.yml file with a value of True. \\\nThe {}.{} model triggered this warning. \\\n'.format(model.package_name, model.name) -%}\n\n{%- do exceptions.raise_compiler_error(error_message) -%}\n\n{%- endmacro -%}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1756850324.117546, "supported_languages": null}, "macro.dbt_utils.get_tables_by_prefix_sql": {"name": "get_tables_by_prefix_sql", "resource_type": "macro", "package_name": "dbt_utils", "path": "macros/sql/get_tables_by_prefix_sql.sql", "original_file_path": "macros/sql/get_tables_by_prefix_sql.sql", "unique_id": "macro.dbt_utils.get_tables_by_prefix_sql", "macro_sql": "{% macro get_tables_by_prefix_sql(schema, prefix, exclude='', database=target.database) %}\n    {{ return(adapter.dispatch('get_tables_by_prefix_sql', 'dbt_utils')(schema, prefix, exclude, database)) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt_utils.default__get_tables_by_prefix_sql"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1756850324.1182911, "supported_languages": null}, "macro.dbt_utils.default__get_tables_by_prefix_sql": {"name": "default__get_tables_by_prefix_sql", "resource_type": "macro", "package_name": "dbt_utils", "path": "macros/sql/get_tables_by_prefix_sql.sql", "original_file_path": "macros/sql/get_tables_by_prefix_sql.sql", "unique_id": "macro.dbt_utils.default__get_tables_by_prefix_sql", "macro_sql": "{% macro default__get_tables_by_prefix_sql(schema, prefix, exclude='', database=target.database) %}\n\n    {{ dbt_utils.get_tables_by_pattern_sql(\n        schema_pattern = schema,\n        table_pattern = prefix ~ '%',\n        exclude = exclude,\n        database = database\n    ) }}\n    \n{% endmacro %}", "depends_on": {"macros": ["macro.dbt_utils.get_tables_by_pattern_sql"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1756850324.1188538, "supported_languages": null}, "macro.dbt_utils.pivot": {"name": "pivot", "resource_type": "macro", "package_name": "dbt_utils", "path": "macros/sql/pivot.sql", "original_file_path": "macros/sql/pivot.sql", "unique_id": "macro.dbt_utils.pivot", "macro_sql": "{% macro pivot(column,\n               values,\n               alias=True,\n               agg='sum',\n               cmp='=',\n               prefix='',\n               suffix='',\n               then_value=1,\n               else_value=0,\n               quote_identifiers=True,\n               distinct=False) %}\n    {{ return(adapter.dispatch('pivot', 'dbt_utils')(column, values, alias, agg, cmp, prefix, suffix, then_value, else_value, quote_identifiers, distinct)) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt_utils.default__pivot"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1756850324.1203556, "supported_languages": null}, "macro.dbt_utils.default__pivot": {"name": "default__pivot", "resource_type": "macro", "package_name": "dbt_utils", "path": "macros/sql/pivot.sql", "original_file_path": "macros/sql/pivot.sql", "unique_id": "macro.dbt_utils.default__pivot", "macro_sql": "{% macro default__pivot(column,\n               values,\n               alias=True,\n               agg='sum',\n               cmp='=',\n               prefix='',\n               suffix='',\n               then_value=1,\n               else_value=0,\n               quote_identifiers=True,\n               distinct=False) %}\n  {% for value in values %}\n    {{ agg }}(\n      {% if distinct %} distinct {% endif %}\n      case\n      when {{ column }} {{ cmp }} '{{ dbt.escape_single_quotes(value) }}'\n        then {{ then_value }}\n      else {{ else_value }}\n      end\n    )\n    {% if alias %}\n      {% if quote_identifiers %}\n            as {{ adapter.quote(prefix ~ value ~ suffix) }}\n      {% else %}\n        as {{ dbt_utils.slugify(prefix ~ value ~ suffix) }}\n      {% endif %}\n    {% endif %}\n    {% if not loop.last %},{% endif %}\n  {% endfor %}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.escape_single_quotes", "macro.dbt_utils.slugify"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1756850324.122176, "supported_languages": null}, "macro.dbt_utils.get_relations_by_pattern": {"name": "get_relations_by_pattern", "resource_type": "macro", "package_name": "dbt_utils", "path": "macros/sql/get_relations_by_pattern.sql", "original_file_path": "macros/sql/get_relations_by_pattern.sql", "unique_id": "macro.dbt_utils.get_relations_by_pattern", "macro_sql": "{% macro get_relations_by_pattern(schema_pattern, table_pattern, exclude='', database=target.database) %}\n    {{ return(adapter.dispatch('get_relations_by_pattern', 'dbt_utils')(schema_pattern, table_pattern, exclude, database)) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt_utils.default__get_relations_by_pattern"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1756850324.123099, "supported_languages": null}, "macro.dbt_utils.default__get_relations_by_pattern": {"name": "default__get_relations_by_pattern", "resource_type": "macro", "package_name": "dbt_utils", "path": "macros/sql/get_relations_by_pattern.sql", "original_file_path": "macros/sql/get_relations_by_pattern.sql", "unique_id": "macro.dbt_utils.default__get_relations_by_pattern", "macro_sql": "{% macro default__get_relations_by_pattern(schema_pattern, table_pattern, exclude='', database=target.database) %}\n\n    {%- call statement('get_tables', fetch_result=True) %}\n\n      {{ dbt_utils.get_tables_by_pattern_sql(schema_pattern, table_pattern, exclude, database) }}\n\n    {%- endcall -%}\n\n    {%- set table_list = load_result('get_tables') -%}\n\n    {%- if table_list and table_list['table'] -%}\n        {%- set tbl_relations = [] -%}\n        {%- for row in table_list['table'] -%}\n            {%- set tbl_relation = api.Relation.create(\n                database=database,\n                schema=row.table_schema,\n                identifier=row.table_name,\n                type=row.table_type\n            ) -%}\n            {%- do tbl_relations.append(tbl_relation) -%}\n        {%- endfor -%}\n\n        {{ return(tbl_relations) }}\n    {%- else -%}\n        {{ return([]) }}\n    {%- endif -%}\n\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.statement", "macro.dbt_utils.get_tables_by_pattern_sql"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1756850324.124726, "supported_languages": null}, "macro.dbt_utils.get_intervals_between": {"name": "get_intervals_between", "resource_type": "macro", "package_name": "dbt_utils", "path": "macros/sql/date_spine.sql", "original_file_path": "macros/sql/date_spine.sql", "unique_id": "macro.dbt_utils.get_intervals_between", "macro_sql": "{% macro get_intervals_between(start_date, end_date, datepart) -%}\n    {{ return(adapter.dispatch('get_intervals_between', 'dbt_utils')(start_date, end_date, datepart)) }}\n{%- endmacro %}", "depends_on": {"macros": ["macro.dbt_utils.default__get_intervals_between"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1756850324.1256418, "supported_languages": null}, "macro.dbt_utils.default__get_intervals_between": {"name": "default__get_intervals_between", "resource_type": "macro", "package_name": "dbt_utils", "path": "macros/sql/date_spine.sql", "original_file_path": "macros/sql/date_spine.sql", "unique_id": "macro.dbt_utils.default__get_intervals_between", "macro_sql": "{% macro default__get_intervals_between(start_date, end_date, datepart) -%}\n    {%- call statement('get_intervals_between', fetch_result=True) %}\n\n        select {{ dbt.datediff(start_date, end_date, datepart) }}\n\n    {%- endcall -%}\n\n    {%- set value_list = load_result('get_intervals_between') -%}\n\n    {%- if value_list and value_list['data'] -%}\n        {%- set values = value_list['data'] | map(attribute=0) | list %}\n        {{ return(values[0]) }}\n    {%- else -%}\n        {{ return(1) }}\n    {%- endif -%}\n\n{%- endmacro %}", "depends_on": {"macros": ["macro.dbt.statement", "macro.dbt.datediff"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1756850324.126796, "supported_languages": null}, "macro.dbt_utils.date_spine": {"name": "date_spine", "resource_type": "macro", "package_name": "dbt_utils", "path": "macros/sql/date_spine.sql", "original_file_path": "macros/sql/date_spine.sql", "unique_id": "macro.dbt_utils.date_spine", "macro_sql": "{% macro date_spine(datepart, start_date, end_date) %}\n    {{ return(adapter.dispatch('date_spine', 'dbt_utils')(datepart, start_date, end_date)) }}\n{%- endmacro %}", "depends_on": {"macros": ["macro.dbt_utils.default__date_spine"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1756850324.1272416, "supported_languages": null}, "macro.dbt_utils.default__date_spine": {"name": "default__date_spine", "resource_type": "macro", "package_name": "dbt_utils", "path": "macros/sql/date_spine.sql", "original_file_path": "macros/sql/date_spine.sql", "unique_id": "macro.dbt_utils.default__date_spine", "macro_sql": "{% macro default__date_spine(datepart, start_date, end_date) %}\n\n\n{# call as follows:\n\ndate_spine(\n    \"day\",\n    \"to_date('01/01/2016', 'mm/dd/yyyy')\",\n    \"dbt.dateadd(week, 1, current_date)\"\n) #}\n\n\nwith rawdata as (\n\n    {{dbt_utils.generate_series(\n        dbt_utils.get_intervals_between(start_date, end_date, datepart)\n    )}}\n\n),\n\nall_periods as (\n\n    select (\n        {{\n            dbt.dateadd(\n                datepart,\n                \"row_number() over (order by 1) - 1\",\n                start_date\n            )\n        }}\n    ) as date_{{datepart}}\n    from rawdata\n\n),\n\nfiltered as (\n\n    select *\n    from all_periods\n    where date_{{datepart}} <= {{ end_date }}\n\n)\n\nselect * from filtered\n\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt_utils.generate_series", "macro.dbt_utils.get_intervals_between", "macro.dbt.dateadd"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1756850324.1279464, "supported_languages": null}, "macro.dbt_utils.get_powers_of_two": {"name": "get_powers_of_two", "resource_type": "macro", "package_name": "dbt_utils", "path": "macros/sql/generate_series.sql", "original_file_path": "macros/sql/generate_series.sql", "unique_id": "macro.dbt_utils.get_powers_of_two", "macro_sql": "{% macro get_powers_of_two(upper_bound) %}\n    {{ return(adapter.dispatch('get_powers_of_two', 'dbt_utils')(upper_bound)) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt_utils.default__get_powers_of_two"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1756850324.1287572, "supported_languages": null}, "macro.dbt_utils.default__get_powers_of_two": {"name": "default__get_powers_of_two", "resource_type": "macro", "package_name": "dbt_utils", "path": "macros/sql/generate_series.sql", "original_file_path": "macros/sql/generate_series.sql", "unique_id": "macro.dbt_utils.default__get_powers_of_two", "macro_sql": "{% macro default__get_powers_of_two(upper_bound) %}\n\n    {% if upper_bound <= 0 %}\n    {{ exceptions.raise_compiler_error(\"upper bound must be positive\") }}\n    {% endif %}\n\n    {% for _ in range(1, 100) %}\n       {% if upper_bound <= 2 ** loop.index %}{{ return(loop.index) }}{% endif %}\n    {% endfor %}\n\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1756850324.1295705, "supported_languages": null}, "macro.dbt_utils.generate_series": {"name": "generate_series", "resource_type": "macro", "package_name": "dbt_utils", "path": "macros/sql/generate_series.sql", "original_file_path": "macros/sql/generate_series.sql", "unique_id": "macro.dbt_utils.generate_series", "macro_sql": "{% macro generate_series(upper_bound) %}\n    {{ return(adapter.dispatch('generate_series', 'dbt_utils')(upper_bound)) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt_utils.default__generate_series"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1756850324.1299658, "supported_languages": null}, "macro.dbt_utils.default__generate_series": {"name": "default__generate_series", "resource_type": "macro", "package_name": "dbt_utils", "path": "macros/sql/generate_series.sql", "original_file_path": "macros/sql/generate_series.sql", "unique_id": "macro.dbt_utils.default__generate_series", "macro_sql": "{% macro default__generate_series(upper_bound) %}\n\n    {% set n = dbt_utils.get_powers_of_two(upper_bound) %}\n\n    with p as (\n        select 0 as generated_number union all select 1\n    ), unioned as (\n\n    select\n\n    {% for i in range(n) %}\n    p{{i}}.generated_number * power(2, {{i}})\n    {% if not loop.last %} + {% endif %}\n    {% endfor %}\n    + 1\n    as generated_number\n\n    from\n\n    {% for i in range(n) %}\n    p as p{{i}}\n    {% if not loop.last %} cross join {% endif %}\n    {% endfor %}\n\n    )\n\n    select *\n    from unioned\n    where generated_number <= {{upper_bound}}\n    order by generated_number\n\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt_utils.get_powers_of_two"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1756850324.130985, "supported_languages": null}, "macro.dbt_utils.get_single_value": {"name": "get_single_value", "resource_type": "macro", "package_name": "dbt_utils", "path": "macros/sql/get_single_value.sql", "original_file_path": "macros/sql/get_single_value.sql", "unique_id": "macro.dbt_utils.get_single_value", "macro_sql": "{% macro get_single_value(query, default=none) %}\n    {{ return(adapter.dispatch('get_single_value', 'dbt_utils')(query, default)) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt_utils.default__get_single_value"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1756850324.131751, "supported_languages": null}, "macro.dbt_utils.default__get_single_value": {"name": "default__get_single_value", "resource_type": "macro", "package_name": "dbt_utils", "path": "macros/sql/get_single_value.sql", "original_file_path": "macros/sql/get_single_value.sql", "unique_id": "macro.dbt_utils.default__get_single_value", "macro_sql": "{% macro default__get_single_value(query, default) %}\n\n{# This macro returns the (0, 0) record in a query, i.e. the first row of the first column #}\n\n    {%- call statement('get_query_result', fetch_result=True, auto_begin=false) -%}\n\n        {{ query }}\n\n    {%- endcall -%}\n\n    {%- if execute -%}\n\n        {% set r = load_result('get_query_result').table.columns[0].values() %}\n        {% if r | length == 0 %}\n            {% do print('Query `' ~ query ~ '` returned no rows. Using the default value: ' ~ default) %}\n            {% set sql_result = default %}\n        {% else %}\n            {% set sql_result = r[0] %}\n        {% endif %}\n        \n    {%- else -%}\n    \n        {% set sql_result = default %}\n    \n    {%- endif -%}\n\n    {% do return(sql_result) %}\n\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.statement"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1756850324.1332092, "supported_languages": null}, "macro.dbt_utils.get_url_parameter": {"name": "get_url_parameter", "resource_type": "macro", "package_name": "dbt_utils", "path": "macros/web/get_url_parameter.sql", "original_file_path": "macros/web/get_url_parameter.sql", "unique_id": "macro.dbt_utils.get_url_parameter", "macro_sql": "{% macro get_url_parameter(field, url_parameter) -%}\n    {{ return(adapter.dispatch('get_url_parameter', 'dbt_utils')(field, url_parameter)) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt_utils.default__get_url_parameter"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1756850324.1338074, "supported_languages": null}, "macro.dbt_utils.default__get_url_parameter": {"name": "default__get_url_parameter", "resource_type": "macro", "package_name": "dbt_utils", "path": "macros/web/get_url_parameter.sql", "original_file_path": "macros/web/get_url_parameter.sql", "unique_id": "macro.dbt_utils.default__get_url_parameter", "macro_sql": "{% macro default__get_url_parameter(field, url_parameter) -%}\n\n{%- set formatted_url_parameter = \"'\" + url_parameter + \"='\" -%}\n\n{%- set split = dbt.split_part(dbt.split_part(field, formatted_url_parameter, 2), \"'&'\", 1) -%}\n\nnullif({{ split }},'')\n\n{%- endmacro %}", "depends_on": {"macros": ["macro.dbt.split_part"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1756850324.1344335, "supported_languages": null}, "macro.dbt_utils.get_url_host": {"name": "get_url_host", "resource_type": "macro", "package_name": "dbt_utils", "path": "macros/web/get_url_host.sql", "original_file_path": "macros/web/get_url_host.sql", "unique_id": "macro.dbt_utils.get_url_host", "macro_sql": "{% macro get_url_host(field) -%}\n    {{ return(adapter.dispatch('get_url_host', 'dbt_utils')(field)) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt_utils.default__get_url_host"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1756850324.1350236, "supported_languages": null}, "macro.dbt_utils.default__get_url_host": {"name": "default__get_url_host", "resource_type": "macro", "package_name": "dbt_utils", "path": "macros/web/get_url_host.sql", "original_file_path": "macros/web/get_url_host.sql", "unique_id": "macro.dbt_utils.default__get_url_host", "macro_sql": "{% macro default__get_url_host(field) -%}\n\n{%- set parsed =\n    dbt.split_part(\n        dbt.split_part(\n            dbt.replace(\n                dbt.replace(\n                    dbt.replace(field, \"'android-app://'\", \"''\"\n                    ), \"'http://'\", \"''\"\n                ), \"'https://'\", \"''\"\n            ), \"'/'\", 1\n        ), \"'?'\", 1\n    )\n\n-%}\n\n\n    {{ dbt.safe_cast(\n        parsed,\n        dbt.type_string()\n        )}}\n\n{%- endmacro %}", "depends_on": {"macros": ["macro.dbt.split_part", "macro.dbt.replace", "macro.dbt.safe_cast", "macro.dbt.type_string"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1756850324.1359253, "supported_languages": null}, "macro.dbt_utils.get_url_path": {"name": "get_url_path", "resource_type": "macro", "package_name": "dbt_utils", "path": "macros/web/get_url_path.sql", "original_file_path": "macros/web/get_url_path.sql", "unique_id": "macro.dbt_utils.get_url_path", "macro_sql": "{% macro get_url_path(field) -%}\n    {{ return(adapter.dispatch('get_url_path', 'dbt_utils')(field)) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt_utils.default__get_url_path"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1756850324.1365767, "supported_languages": null}, "macro.dbt_utils.default__get_url_path": {"name": "default__get_url_path", "resource_type": "macro", "package_name": "dbt_utils", "path": "macros/web/get_url_path.sql", "original_file_path": "macros/web/get_url_path.sql", "unique_id": "macro.dbt_utils.default__get_url_path", "macro_sql": "{% macro default__get_url_path(field) -%}\n\n    {%- set stripped_url =\n        dbt.replace(\n            dbt.replace(field, \"'http://'\", \"''\"), \"'https://'\", \"''\")\n    -%}\n\n    {%- set first_slash_pos -%}\n        coalesce(\n            nullif({{ dbt.position(\"'/'\", stripped_url) }}, 0),\n            {{ dbt.position(\"'?'\", stripped_url) }} - 1\n            )\n    {%- endset -%}\n\n    {%- set parsed_path =\n        dbt.split_part(\n            dbt.right(\n                stripped_url,\n                dbt.length(stripped_url) ~ \"-\" ~ first_slash_pos\n                ),\n            \"'?'\", 1\n            )\n    -%}\n\n    {{ dbt.safe_cast(\n        parsed_path,\n        dbt.type_string()\n    )}}\n\n{%- endmacro %}", "depends_on": {"macros": ["macro.dbt.replace", "macro.dbt.position", "macro.dbt.split_part", "macro.dbt.right", "macro.dbt.length", "macro.dbt.safe_cast", "macro.dbt.type_string"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1756850324.1379685, "supported_languages": null}}, "docs": {"doc.dbt.__overview__": {"name": "__overview__", "resource_type": "doc", "package_name": "dbt", "path": "overview.md", "original_file_path": "docs/overview.md", "unique_id": "doc.dbt.__overview__", "block_contents": "### Welcome!\n\nWelcome to the auto-generated documentation for your dbt project!\n\n### Navigation\n\nYou can use the `Project` and `Database` navigation tabs on the left side of the window to explore the models\nin your project.\n\n#### Project Tab\nThe `Project` tab mirrors the directory structure of your dbt project. In this tab, you can see all of the\nmodels defined in your dbt project, as well as models imported from dbt packages.\n\n#### Database Tab\nThe `Database` tab also exposes your models, but in a format that looks more like a database explorer. This view\nshows relations (tables and views) grouped into database schemas. Note that ephemeral models are _not_ shown\nin this interface, as they do not exist in the database.\n\n### Graph Exploration\nYou can click the blue icon on the bottom-right corner of the page to view the lineage graph of your models.\n\nOn model pages, you'll see the immediate parents and children of the model you're exploring. By clicking the `Expand`\nbutton at the top-right of this lineage pane, you'll be able to see all of the models that are used to build,\nor are built from, the model you're exploring.\n\nOnce expanded, you'll be able to use the `--select` and `--exclude` model selection syntax to filter the\nmodels in the graph. For more information on model selection, check out the [dbt docs](https://docs.getdbt.com/docs/model-selection-syntax).\n\nNote that you can also right-click on models to interactively filter and explore the graph.\n\n---\n\n### More information\n\n- [What is dbt](https://docs.getdbt.com/docs/introduction)?\n- Read the [dbt viewpoint](https://docs.getdbt.com/docs/viewpoint)\n- [Installation](https://docs.getdbt.com/docs/installation)\n- Join the [dbt Community](https://www.getdbt.com/community/) for questions and discussion"}}, "exposures": {}, "metrics": {}, "groups": {}, "selectors": {}, "disabled": {"test.sap_integration_tests.consistency_plant": [{"database": "postgres", "schema": "public_dbt_test__audit", "name": "consistency_plant", "resource_type": "test", "package_name": "sap_integration_tests", "path": "consistency/consistency_plant.sql", "original_file_path": "tests/consistency/consistency_plant.sql", "unique_id": "test.sap_integration_tests.consistency_plant", "fqn": ["sap_integration_tests", "consistency", "consistency_plant"], "alias": "consistency_plant", "checksum": {"name": "sha256", "checksum": "07d3739628be1fa4086bcf18d36358bb1bc893d5d409c2144106e7f203a58bd6"}, "config": {"enabled": false, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": ["fivetran_validations"], "meta": {}, "group": null, "materialized": "test", "severity": "ERROR", "store_failures": null, "store_failures_as": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "tags": ["fivetran_validations"], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "unrendered_config": {"tags": "fivetran_validations", "enabled": false}, "created_at": 1756850325.545783, "relation_name": null, "raw_code": "{{ config(\n    tags=\"fivetran_validations\",\n    enabled=var('fivetran_validation_tests_enabled', false)\n) }}\n\nwith prod as (\n    select *\n    from {{ target.schema }}_sap_prod.sap__dim_plant\n),\n\ndev as (\n    select *\n    from {{ target.schema }}_sap_dev.sap__dim_plant\n), \n\nprod_not_in_dev as (\n    -- rows from prod not found in dev\n    select * from prod\n    except distinct\n    select * from dev\n),\n\ndev_not_in_prod as (\n    -- rows from dev not found in prod\n    select * from dev\n    except distinct\n    select * from prod\n),\n\nfinal as (\n    select\n        *,\n        'from prod' as source\n    from prod_not_in_dev\n\n    union all -- union since we only care if rows are produced\n\n    select\n        *,\n        'from dev' as source\n    from dev_not_in_prod\n)\n\nselect *\nfrom final", "doc_blocks": [], "language": "sql", "refs": [], "sources": [], "metrics": [], "depends_on": {"macros": [], "nodes": []}, "compiled_path": null, "contract": {"enforced": false, "alias_types": true, "checksum": null}}], "test.sap_integration_tests.consistency_customer": [{"database": "postgres", "schema": "public_dbt_test__audit", "name": "consistency_customer", "resource_type": "test", "package_name": "sap_integration_tests", "path": "consistency/consistency_customer.sql", "original_file_path": "tests/consistency/consistency_customer.sql", "unique_id": "test.sap_integration_tests.consistency_customer", "fqn": ["sap_integration_tests", "consistency", "consistency_customer"], "alias": "consistency_customer", "checksum": {"name": "sha256", "checksum": "799682936ddf10c01097ab7a4b98b9fd62cb52037cff78e4f4f000f492f3d7ac"}, "config": {"enabled": false, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": ["fivetran_validations"], "meta": {}, "group": null, "materialized": "test", "severity": "ERROR", "store_failures": null, "store_failures_as": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "tags": ["fivetran_validations"], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "unrendered_config": {"tags": "fivetran_validations", "enabled": false}, "created_at": 1756850325.5808017, "relation_name": null, "raw_code": "{{ config(\n    tags=\"fivetran_validations\",\n    enabled=var('fivetran_validation_tests_enabled', false)\n) }}\n\nwith prod as (\n    select *\n    from {{ target.schema }}_sap_prod.sap__dim_customer\n),\n\ndev as (\n    select *\n    from {{ target.schema }}_sap_dev.sap__dim_customer\n), \n\nprod_not_in_dev as (\n    -- rows from prod not found in dev\n    select * from prod\n    except distinct\n    select * from dev\n),\n\ndev_not_in_prod as (\n    -- rows from dev not found in prod\n    select * from dev\n    except distinct\n    select * from prod\n),\n\nfinal as (\n    select\n        *,\n        'from prod' as source\n    from prod_not_in_dev\n\n    union all -- union since we only care if rows are produced\n\n    select\n        *,\n        'from dev' as source\n    from dev_not_in_prod\n)\n\nselect *\nfrom final", "doc_blocks": [], "language": "sql", "refs": [], "sources": [], "metrics": [], "depends_on": {"macros": [], "nodes": []}, "compiled_path": null, "contract": {"enforced": false, "alias_types": true, "checksum": null}}], "test.sap_integration_tests.consistency_purchasing_organization": [{"database": "postgres", "schema": "public_dbt_test__audit", "name": "consistency_purchasing_organization", "resource_type": "test", "package_name": "sap_integration_tests", "path": "consistency/consistency_purchasing_organization.sql", "original_file_path": "tests/consistency/consistency_purchasing_organization.sql", "unique_id": "test.sap_integration_tests.consistency_purchasing_organization", "fqn": ["sap_integration_tests", "consistency", "consistency_purchasing_organization"], "alias": "consistency_purchasing_organization", "checksum": {"name": "sha256", "checksum": "f4072f2bf672962d9896e9b9682187fca3922b9f927e3ec1b9abfef797ced141"}, "config": {"enabled": false, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": ["fivetran_validations"], "meta": {}, "group": null, "materialized": "test", "severity": "ERROR", "store_failures": null, "store_failures_as": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "tags": ["fivetran_validations"], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "unrendered_config": {"tags": "fivetran_validations", "enabled": false}, "created_at": 1756850325.5869036, "relation_name": null, "raw_code": "{{ config(\n    tags=\"fivetran_validations\",\n    enabled=var('fivetran_validation_tests_enabled', false)\n) }}\n\nwith prod as (\n    select *\n    from {{ target.schema }}_sap_prod.sap__dim_purchasing_organization\n),\n\ndev as (\n    select *\n    from {{ target.schema }}_sap_dev.sap__dim_purchasing_organization\n), \n\nprod_not_in_dev as (\n    -- rows from prod not found in dev\n    select * from prod\n    except distinct\n    select * from dev\n),\n\ndev_not_in_prod as (\n    -- rows from dev not found in prod\n    select * from dev\n    except distinct\n    select * from prod\n),\n\nfinal as (\n    select\n        *,\n        'from prod' as source\n    from prod_not_in_dev\n\n    union all -- union since we only care if rows are produced\n\n    select\n        *,\n        'from dev' as source\n    from dev_not_in_prod\n)\n\nselect *\nfrom final", "doc_blocks": [], "language": "sql", "refs": [], "sources": [], "metrics": [], "depends_on": {"macros": [], "nodes": []}, "compiled_path": null, "contract": {"enforced": false, "alias_types": true, "checksum": null}}], "test.sap_integration_tests.consistency_rejection_reason": [{"database": "postgres", "schema": "public_dbt_test__audit", "name": "consistency_rejection_reason", "resource_type": "test", "package_name": "sap_integration_tests", "path": "consistency/consistency_rejection_reason.sql", "original_file_path": "tests/consistency/consistency_rejection_reason.sql", "unique_id": "test.sap_integration_tests.consistency_rejection_reason", "fqn": ["sap_integration_tests", "consistency", "consistency_rejection_reason"], "alias": "consistency_rejection_reason", "checksum": {"name": "sha256", "checksum": "a365897e222b21082a1da253576d79be6420bf6f6a85cf1e31ee37b204293be6"}, "config": {"enabled": false, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": ["fivetran_validations"], "meta": {}, "group": null, "materialized": "test", "severity": "ERROR", "store_failures": null, "store_failures_as": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "tags": ["fivetran_validations"], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "unrendered_config": {"tags": "fivetran_validations", "enabled": false}, "created_at": 1756850325.5927083, "relation_name": null, "raw_code": "{{ config(\n    tags=\"fivetran_validations\",\n    enabled=var('fivetran_validation_tests_enabled', false)\n) }}\n\nwith prod as (\n    select *\n    from {{ target.schema }}_sap_prod.sap__dim_rejection_reason\n),\n\ndev as (\n    select *\n    from {{ target.schema }}_sap_dev.sap__dim_rejection_reason\n), \n\nprod_not_in_dev as (\n    -- rows from prod not found in dev\n    select * from prod\n    except distinct\n    select * from dev\n),\n\ndev_not_in_prod as (\n    -- rows from dev not found in prod\n    select * from dev\n    except distinct\n    select * from prod\n),\n\nfinal as (\n    select\n        *,\n        'from prod' as source\n    from prod_not_in_dev\n\n    union all -- union since we only care if rows are produced\n\n    select\n        *,\n        'from dev' as source\n    from dev_not_in_prod\n)\n\nselect *\nfrom final", "doc_blocks": [], "language": "sql", "refs": [], "sources": [], "metrics": [], "depends_on": {"macros": [], "nodes": []}, "compiled_path": null, "contract": {"enforced": false, "alias_types": true, "checksum": null}}], "test.sap_integration_tests.consistency_material": [{"database": "postgres", "schema": "public_dbt_test__audit", "name": "consistency_material", "resource_type": "test", "package_name": "sap_integration_tests", "path": "consistency/consistency_material.sql", "original_file_path": "tests/consistency/consistency_material.sql", "unique_id": "test.sap_integration_tests.consistency_material", "fqn": ["sap_integration_tests", "consistency", "consistency_material"], "alias": "consistency_material", "checksum": {"name": "sha256", "checksum": "c2022fb22395ce99ee5bd1d240ad25b8e964db9094a3ab5bb175977a615fc1f8"}, "config": {"enabled": false, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": ["fivetran_validations"], "meta": {}, "group": null, "materialized": "test", "severity": "ERROR", "store_failures": null, "store_failures_as": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "tags": ["fivetran_validations"], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "unrendered_config": {"tags": "fivetran_validations", "enabled": false}, "created_at": 1756850325.598639, "relation_name": null, "raw_code": "{{ config(\n    tags=\"fivetran_validations\",\n    enabled=var('fivetran_validation_tests_enabled', false)\n) }}\n\nwith prod as (\n    select *\n    from {{ target.schema }}_sap_prod.sap__dim_material\n),\n\ndev as (\n    select *\n    from {{ target.schema }}_sap_dev.sap__dim_material\n), \n\nprod_not_in_dev as (\n    -- rows from prod not found in dev\n    select * from prod\n    except distinct\n    select * from dev\n),\n\ndev_not_in_prod as (\n    -- rows from dev not found in prod\n    select * from dev\n    except distinct\n    select * from prod\n),\n\nfinal as (\n    select\n        *,\n        'from prod' as source\n    from prod_not_in_dev\n\n    union all -- union since we only care if rows are produced\n\n    select\n        *,\n        'from dev' as source\n    from dev_not_in_prod\n)\n\nselect *\nfrom final", "doc_blocks": [], "language": "sql", "refs": [], "sources": [], "metrics": [], "depends_on": {"macros": [], "nodes": []}, "compiled_path": null, "contract": {"enforced": false, "alias_types": true, "checksum": null}}], "test.sap_integration_tests.consistency_dim_purchasing_order": [{"database": "postgres", "schema": "public_dbt_test__audit", "name": "consistency_dim_purchasing_order", "resource_type": "test", "package_name": "sap_integration_tests", "path": "consistency/consistency_dim_purchasing_order.sql", "original_file_path": "tests/consistency/consistency_dim_purchasing_order.sql", "unique_id": "test.sap_integration_tests.consistency_dim_purchasing_order", "fqn": ["sap_integration_tests", "consistency", "consistency_dim_purchasing_order"], "alias": "consistency_dim_purchasing_order", "checksum": {"name": "sha256", "checksum": "1167db8927ddfcff5a763f52804ff97c90c549dabbf1a0c120f94b6f6de94314"}, "config": {"enabled": false, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": ["fivetran_validations"], "meta": {}, "group": null, "materialized": "test", "severity": "ERROR", "store_failures": null, "store_failures_as": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "tags": ["fivetran_validations"], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "unrendered_config": {"tags": "fivetran_validations", "enabled": false}, "created_at": 1756850325.6055484, "relation_name": null, "raw_code": "{{ config(\n    tags=\"fivetran_validations\",\n    enabled=var('fivetran_validation_tests_enabled', false)\n) }}\n\nwith prod as (\n    select *\n    from {{ target.schema }}_sap_prod.sap__dim_purchasing_order\n),\n\ndev as (\n    select *\n    from {{ target.schema }}_sap_dev.sap__dim_purchasing_order\n), \n\nprod_not_in_dev as (\n    -- rows from prod not found in dev\n    select * from prod\n    except distinct\n    select * from dev\n),\n\ndev_not_in_prod as (\n    -- rows from dev not found in prod\n    select * from dev\n    except distinct\n    select * from prod\n),\n\nfinal as (\n    select\n        *,\n        'from prod' as source\n    from prod_not_in_dev\n\n    union all -- union since we only care if rows are produced\n\n    select\n        *,\n        'from dev' as source\n    from dev_not_in_prod\n)\n\nselect *\nfrom final", "doc_blocks": [], "language": "sql", "refs": [], "sources": [], "metrics": [], "depends_on": {"macros": [], "nodes": []}, "compiled_path": null, "contract": {"enforced": false, "alias_types": true, "checksum": null}}], "test.sap_integration_tests.consistency_vendor": [{"database": "postgres", "schema": "public_dbt_test__audit", "name": "consistency_vendor", "resource_type": "test", "package_name": "sap_integration_tests", "path": "consistency/consistency_vendor.sql", "original_file_path": "tests/consistency/consistency_vendor.sql", "unique_id": "test.sap_integration_tests.consistency_vendor", "fqn": ["sap_integration_tests", "consistency", "consistency_vendor"], "alias": "consistency_vendor", "checksum": {"name": "sha256", "checksum": "c66ae22b70219ff0c812b92d9043a0dc144492c201d3b11bd2727ffa374a83ff"}, "config": {"enabled": false, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": ["fivetran_validations"], "meta": {}, "group": null, "materialized": "test", "severity": "ERROR", "store_failures": null, "store_failures_as": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "tags": ["fivetran_validations"], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "unrendered_config": {"tags": "fivetran_validations", "enabled": false}, "created_at": 1756850325.6113951, "relation_name": null, "raw_code": "{{ config(\n    tags=\"fivetran_validations\",\n    enabled=var('fivetran_validation_tests_enabled', false)\n) }}\n\nwith prod as (\n    select *\n    from {{ target.schema }}_sap_prod.sap__dim_vendor\n),\n\ndev as (\n    select *\n    from {{ target.schema }}_sap_dev.sap__dim_vendor\n), \n\nprod_not_in_dev as (\n    -- rows from prod not found in dev\n    select * from prod\n    except distinct\n    select * from dev\n),\n\ndev_not_in_prod as (\n    -- rows from dev not found in prod\n    select * from dev\n    except distinct\n    select * from prod\n),\n\nfinal as (\n    select\n        *,\n        'from prod' as source\n    from prod_not_in_dev\n\n    union all -- union since we only care if rows are produced\n\n    select\n        *,\n        'from dev' as source\n    from dev_not_in_prod\n)\n\nselect *\nfrom final", "doc_blocks": [], "language": "sql", "refs": [], "sources": [], "metrics": [], "depends_on": {"macros": [], "nodes": []}, "compiled_path": null, "contract": {"enforced": false, "alias_types": true, "checksum": null}}], "test.sap_integration_tests.consistency_sales_order": [{"database": "postgres", "schema": "public_dbt_test__audit", "name": "consistency_sales_order", "resource_type": "test", "package_name": "sap_integration_tests", "path": "consistency/consistency_sales_order.sql", "original_file_path": "tests/consistency/consistency_sales_order.sql", "unique_id": "test.sap_integration_tests.consistency_sales_order", "fqn": ["sap_integration_tests", "consistency", "consistency_sales_order"], "alias": "consistency_sales_order", "checksum": {"name": "sha256", "checksum": "1a82792d6b13d9180807ef7b901b63b571841357f2283fa611070392e92857c4"}, "config": {"enabled": false, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": ["fivetran_validations"], "meta": {}, "group": null, "materialized": "test", "severity": "ERROR", "store_failures": null, "store_failures_as": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "tags": ["fivetran_validations"], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "unrendered_config": {"tags": "fivetran_validations", "enabled": false}, "created_at": 1756850325.617548, "relation_name": null, "raw_code": "{{ config(\n    tags=\"fivetran_validations\",\n    enabled=var('fivetran_validation_tests_enabled', false)\n) }}\n\nwith prod as (\n    select *\n    from {{ target.schema }}_sap_prod.sap__fact_sales_order\n),\n\ndev as (\n    select *\n    from {{ target.schema }}_sap_dev.sap__fact_sales_order\n), \n\nprod_not_in_dev as (\n    -- rows from prod not found in dev\n    select * from prod\n    except distinct\n    select * from dev\n),\n\ndev_not_in_prod as (\n    -- rows from dev not found in prod\n    select * from dev\n    except distinct\n    select * from prod\n),\n\nfinal as (\n    select\n        *,\n        'from prod' as source\n    from prod_not_in_dev\n\n    union all -- union since we only care if rows are produced\n\n    select\n        *,\n        'from dev' as source\n    from dev_not_in_prod\n)\n\nselect *\nfrom final", "doc_blocks": [], "language": "sql", "refs": [], "sources": [], "metrics": [], "depends_on": {"macros": [], "nodes": []}, "compiled_path": null, "contract": {"enforced": false, "alias_types": true, "checksum": null}}], "test.sap_integration_tests.consistency_fact_purchasing_order": [{"database": "postgres", "schema": "public_dbt_test__audit", "name": "consistency_fact_purchasing_order", "resource_type": "test", "package_name": "sap_integration_tests", "path": "consistency/consistency_fact_purchasing_order.sql", "original_file_path": "tests/consistency/consistency_fact_purchasing_order.sql", "unique_id": "test.sap_integration_tests.consistency_fact_purchasing_order", "fqn": ["sap_integration_tests", "consistency", "consistency_fact_purchasing_order"], "alias": "consistency_fact_purchasing_order", "checksum": {"name": "sha256", "checksum": "1266161c8b83667bd53d292c68782156cc742417054c09eed8016f1d4c0fc3ec"}, "config": {"enabled": false, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": ["fivetran_validations"], "meta": {}, "group": null, "materialized": "test", "severity": "ERROR", "store_failures": null, "store_failures_as": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "tags": ["fivetran_validations"], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "unrendered_config": {"tags": "fivetran_validations", "enabled": false}, "created_at": 1756850325.6241448, "relation_name": null, "raw_code": "{{ config(\n    tags=\"fivetran_validations\",\n    enabled=var('fivetran_validation_tests_enabled', false)\n) }}\n\nwith prod as (\n    select *\n    from {{ target.schema }}_sap_prod.sap__fact_purchasing_order\n),\n\ndev as (\n    select *\n    from {{ target.schema }}_sap_dev.sap__fact_purchasing_order\n), \n\nprod_not_in_dev as (\n    -- rows from prod not found in dev\n    select * from prod\n    except distinct\n    select * from dev\n),\n\ndev_not_in_prod as (\n    -- rows from dev not found in prod\n    select * from dev\n    except distinct\n    select * from prod\n),\n\nfinal as (\n    select\n        *,\n        'from prod' as source\n    from prod_not_in_dev\n\n    union all -- union since we only care if rows are produced\n\n    select\n        *,\n        'from dev' as source\n    from dev_not_in_prod\n)\n\nselect *\nfrom final", "doc_blocks": [], "language": "sql", "refs": [], "sources": [], "metrics": [], "depends_on": {"macros": [], "nodes": []}, "compiled_path": null, "contract": {"enforced": false, "alias_types": true, "checksum": null}}], "seed.sap_integration_tests.sap_kna1_data_snowflake": [{"database": "postgres", "schema": "public", "name": "sap_kna1_data_snowflake", "resource_type": "seed", "package_name": "sap_integration_tests", "path": "sap_kna1_data_snowflake.csv", "original_file_path": "seeds/sap_kna1_data_snowflake.csv", "unique_id": "seed.sap_integration_tests.sap_kna1_data_snowflake", "fqn": ["sap_integration_tests", "sap_kna1_data_snowflake"], "alias": "sap_kna1_data", "checksum": {"name": "sha256", "checksum": "6b5567c6ea581f47e6f0d472ba97e258b97669119755a170ef2c7f32d644d9ba"}, "config": {"enabled": false, "alias": "sap_kna1_data", "schema": null, "database": null, "tags": [], "meta": {}, "group": null, "materialized": "seed", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [], "pre-hook": [], "quoting": {}, "column_types": {"_fivetran_rowid": "varchar", "_fivetran_synced": "timestamp"}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": false, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "delimiter": ",", "quote_columns": true}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": false, "node_color": null}, "patch_path": null, "build_path": null, "unrendered_config": {"docs": {"show": false}, "column_types": {"_fivetran_rowid": "{{ 'string' if target.type in ['bigquery','spark','databricks'] else 'varchar' }}", "_fivetran_synced": "timestamp"}, "enabled": "{{ true if target.type == 'snowflake' else false }}", "quote_columns": true, "alias": "sap_kna1_data"}, "created_at": 1756850325.9230397, "relation_name": "\"postgres\".\"public\".\"sap_kna1_data\"", "raw_code": "", "doc_blocks": [], "root_path": "/home/runner/work/dbt_sap/dbt_sap/integration_tests", "depends_on": {"macros": []}}], "seed.sap_integration_tests.sap_kna1_data_bigquery": [{"database": "postgres", "schema": "public", "name": "sap_kna1_data_bigquery", "resource_type": "seed", "package_name": "sap_integration_tests", "path": "sap_kna1_data_bigquery.csv", "original_file_path": "seeds/sap_kna1_data_bigquery.csv", "unique_id": "seed.sap_integration_tests.sap_kna1_data_bigquery", "fqn": ["sap_integration_tests", "sap_kna1_data_bigquery"], "alias": "sap_kna1_data", "checksum": {"name": "sha256", "checksum": "6eeae72005c51a437632823142671673534944ec66907655c3a05145059b336f"}, "config": {"enabled": false, "alias": "sap_kna1_data", "schema": null, "database": null, "tags": [], "meta": {}, "group": null, "materialized": "seed", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [], "pre-hook": [], "quoting": {}, "column_types": {"_fivetran_rowid": "varchar", "_fivetran_synced": "timestamp", "_vso_r_palhgt": "numeric", "umsa1": "numeric", "umsat": "numeric"}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": false, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "delimiter": ",", "quote_columns": true}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": false, "node_color": null}, "patch_path": null, "build_path": null, "unrendered_config": {"docs": {"show": false}, "column_types": {"_vso_r_palhgt": "numeric", "umsa1": "numeric", "umsat": "numeric"}, "enabled": "{{ true if target.type == 'bigquery' else false }}", "quote_columns": true, "alias": "sap_kna1_data"}, "created_at": 1756850325.9262607, "relation_name": "\"postgres\".\"public\".\"sap_kna1_data\"", "raw_code": "", "doc_blocks": [], "root_path": "/home/runner/work/dbt_sap/dbt_sap/integration_tests", "depends_on": {"macros": []}}]}, "parent_map": {"seed.sap_integration_tests.sap_t134_data": [], "seed.sap_integration_tests.sap_t134t_data": [], "seed.sap_integration_tests.sap_kna1_data": [], "seed.sap_integration_tests.sap_dd07l_data": [], "seed.sap_integration_tests.sap_faglflext_data": [], "seed.sap_integration_tests.sap_ekpo_data": [], "seed.sap_integration_tests.sap_t001_data": [], "seed.sap_integration_tests.sap_t001w_data": [], "seed.sap_integration_tests.sap_lfa1_data": [], "seed.sap_integration_tests.sap_bseg_data": [], "seed.sap_integration_tests.sap_pa0007_data": [], "seed.sap_integration_tests.sap_tvag_data": [], "seed.sap_integration_tests.sap_eket_data": [], "seed.sap_integration_tests.sap_pa0031_data": [], "seed.sap_integration_tests.sap_vbak_data": [], "seed.sap_integration_tests.sap_t161_data": [], "seed.sap_integration_tests.sap_pa0000_data": [], "seed.sap_integration_tests.sap_t024_data": [], "seed.sap_integration_tests.sap_faglflexa_data": [], "seed.sap_integration_tests.sap_t880_data": [], "seed.sap_integration_tests.sap_ekko_data": [], "seed.sap_integration_tests.sap_pa0008_data": [], "seed.sap_integration_tests.sap_ska1_data": [], "seed.sap_integration_tests.sap_vbap_data": [], "seed.sap_integration_tests.sap_t503_data": [], "seed.sap_integration_tests.sap_pa0001_data": [], "seed.sap_integration_tests.sap_vbup_data": [], "seed.sap_integration_tests.sap_mara_data": [], "seed.sap_integration_tests.sap_tvagt_data": [], "seed.sap_integration_tests.sap_bkpf_data": [], "seed.sap_integration_tests.sap_dd07t_data": [], "seed.sap_integration_tests.sap_vbuk_data": [], "seed.sap_integration_tests.sap_t024e_data": [], "seed.sap_integration_tests.sap_t161t_data": [], "seed.sap_integration_tests.sap_makt_data": [], "seed.sap_integration_tests.sap_ekbe_data": [], "model.sap.sap__0material_attr": ["model.sap.stg_sap__mara"], "model.sap.sap__0customer_attr": ["model.sap.stg_sap__kna1"], "model.sap.sap__0gl_account_attr": ["model.sap.stg_sap__ska1"], "model.sap.sap__0vendor_text": ["model.sap.stg_sap__lfa1"], "model.sap.sap__0employee_attr": ["model.sap.int_sap__0employee_date_changes", "model.sap.stg_sap__pa0000", "model.sap.stg_sap__pa0001", "model.sap.stg_sap__pa0007", "model.sap.stg_sap__pa0008", "model.sap.stg_sap__pa0031", "model.sap.stg_sap__t503"], "model.sap.sap__0vendor_attr": ["model.sap.stg_sap__lfa1"], "model.sap.sap__0fi_gl_14": ["model.sap.stg_sap__bkpf", "model.sap.stg_sap__bseg", "model.sap.stg_sap__faglflexa"], "model.sap.sap__0fi_gl_10": ["model.sap.int_sap__0fi_gl_10_unpivot"], "model.sap.sap__0comp_code_attr": ["model.sap.stg_sap__t001"], "model.sap.sap__0comp_code_text": ["model.sap.stg_sap__t001"], "model.sap.sap__0company_text": ["model.sap.stg_sap__t880"], "model.sap.int_sap__0fi_gl_10_sums": ["model.sap.stg_sap__faglflext", "model.sap.stg_sap__t001"], "model.sap.int_sap__0employee_date_changes": ["model.sap.stg_sap__pa0000", "model.sap.stg_sap__pa0001", "model.sap.stg_sap__pa0007", "model.sap.stg_sap__pa0008", "model.sap.stg_sap__pa0031"], "model.sap.int_sap__0fi_gl_10_unpivot": ["model.sap.int_sap__0fi_gl_10_sums"], "model.sap.sap__fact_purchasing_order": ["model.sap.int_sap__company", "model.sap.int_sap__purchasing_document_header", "model.sap.int_sap__purchasing_document_item", "model.sap.int_sap__purchasing_document_overview", "model.sap.int_sap__purchasing_document_schedule_total"], "model.sap.sap__dim_material": ["model.sap.int_sap__material", "model.sap.int_sap__material_type"], "model.sap.sap__dim_vendor": ["model.sap.int_sap__vendor"], "model.sap.sap__fact_sales_order": ["model.sap.int_sap__sales_document_header", "model.sap.int_sap__sales_document_header_status", "model.sap.int_sap__sales_document_item", "model.sap.int_sap__sales_document_item_status"], "model.sap.sap__dim_purchasing_order": ["model.sap.int_sap__purchasing_document_category", "model.sap.int_sap__purchasing_document_header", "model.sap.int_sap__purchasing_document_status", "model.sap.int_sap__purchasing_document_type", "model.sap.int_sap__purchasing_group"], "model.sap.sap__dim_customer": ["model.sap.int_sap__customer"], "model.sap.sap__dim_purchasing_organization": ["model.sap.int_sap__purchasing_organization"], "model.sap.sap__dim_plant": ["model.sap.int_sap__plant"], "model.sap.sap__dim_rejection_reason": ["model.sap.int_sap__sales_document_rejection_reason"], "model.sap.int_sap__purchasing_document_status": ["model.sap.stg_sap__dd07l", "model.sap.stg_sap__dd07t"], "model.sap.int_sap__sales_document_item": ["model.sap.stg_sap__vbap"], "model.sap.int_sap__purchasing_document_type": ["model.sap.stg_sap__t161", "model.sap.stg_sap__t161t"], "model.sap.int_sap__purchasing_document_header": ["model.sap.stg_sap__ekko"], "model.sap.int_sap__purchasing_document_schedule_total": ["model.sap.int_sap__purchasing_document_schedule_line"], "model.sap.int_sap__purchasing_document_category": ["model.sap.stg_sap__dd07l", "model.sap.stg_sap__dd07t"], "model.sap.int_sap__purchasing_organization": ["model.sap.stg_sap__t024e"], "model.sap.int_sap__company": ["model.sap.stg_sap__t001"], "model.sap.int_sap__vendor": ["model.sap.stg_sap__lfa1"], "model.sap.int_sap__sales_document_item_status": ["model.sap.stg_sap__vbup"], "model.sap.int_sap__purchasing_document_schedule_line": ["model.sap.stg_sap__eket"], "model.sap.int_sap__purchasing_group": ["model.sap.stg_sap__t024"], "model.sap.int_sap__material": ["model.sap.stg_sap__makt", "model.sap.stg_sap__mara"], "model.sap.int_sap__sales_document_header": ["model.sap.stg_sap__vbak"], "model.sap.int_sap__purchasing_document_item": ["model.sap.stg_sap__ekpo"], "model.sap.int_sap__purchasing_document_overview": ["model.sap.int_sap__purchasing_document_history"], "model.sap.int_sap__material_type": ["model.sap.stg_sap__t134", "model.sap.stg_sap__t134t"], "model.sap.int_sap__purchasing_document_history": ["model.sap.stg_sap__ekbe"], "model.sap.int_sap__sales_document_header_status": ["model.sap.stg_sap__vbuk"], "model.sap.int_sap__customer": ["model.sap.stg_sap__kna1"], "model.sap.int_sap__plant": ["model.sap.stg_sap__t001w"], "model.sap.int_sap__sales_document_rejection_reason": ["model.sap.stg_sap__tvag", "model.sap.stg_sap__tvagt"], "model.sap.stg_sap__pa0000": ["model.sap.stg_sap__pa0000_tmp"], "model.sap.stg_sap__tvagt": ["model.sap.stg_sap__tvagt_tmp"], "model.sap.stg_sap__mara": ["model.sap.stg_sap__mara_tmp"], "model.sap.stg_sap__t024e": ["model.sap.stg_sap__t024e_tmp"], "model.sap.stg_sap__t001w": ["model.sap.stg_sap__t001w_tmp"], "model.sap.stg_sap__ekko": ["model.sap.stg_sap__ekko_tmp"], "model.sap.stg_sap__t503": ["model.sap.stg_sap__t503_tmp"], "model.sap.stg_sap__t161t": ["model.sap.stg_sap__t161t_tmp"], "model.sap.stg_sap__faglflext": ["model.sap.stg_sap__faglflext_tmp"], "model.sap.stg_sap__ska1": ["model.sap.stg_sap__ska1_tmp"], "model.sap.stg_sap__bseg": ["model.sap.stg_sap__bseg_tmp"], "model.sap.stg_sap__t134t": ["model.sap.stg_sap__t134t_tmp"], "model.sap.stg_sap__kna1": ["model.sap.stg_sap__kna1_tmp"], "model.sap.stg_sap__tvag": ["model.sap.stg_sap__tvag_tmp"], "model.sap.stg_sap__vbak": ["model.sap.stg_sap__vbak_tmp"], "model.sap.stg_sap__bkpf": ["model.sap.stg_sap__bkpf_tmp"], "model.sap.stg_sap__dd07l": ["model.sap.stg_sap__dd07l_tmp"], "model.sap.stg_sap__makt": ["model.sap.stg_sap__makt_tmp"], "model.sap.stg_sap__pa0001": ["model.sap.stg_sap__pa0001_tmp"], "model.sap.stg_sap__t161": ["model.sap.stg_sap__t161_tmp"], "model.sap.stg_sap__t024": ["model.sap.stg_sap__t024_tmp"], "model.sap.stg_sap__t134": ["model.sap.stg_sap__t134_tmp"], "model.sap.stg_sap__dd07t": ["model.sap.stg_sap__dd07t_tmp"], "model.sap.stg_sap__eket": ["model.sap.stg_sap__eket_tmp"], "model.sap.stg_sap__faglflexa": ["model.sap.stg_sap__faglflexa_tmp"], "model.sap.stg_sap__pa0008": ["model.sap.stg_sap__pa0008_tmp"], "model.sap.stg_sap__ekpo": ["model.sap.stg_sap__ekpo_tmp"], "model.sap.stg_sap__pa0031": ["model.sap.stg_sap__pa0031_tmp"], "model.sap.stg_sap__t880": ["model.sap.stg_sap__t880_tmp"], "model.sap.stg_sap__t001": ["model.sap.stg_sap__t001_tmp"], "model.sap.stg_sap__pa0007": ["model.sap.stg_sap__pa0007_tmp"], "model.sap.stg_sap__lfa1": ["model.sap.stg_sap__lfa1_tmp"], "model.sap.stg_sap__vbup": ["model.sap.stg_sap__vbup_tmp"], "model.sap.stg_sap__vbuk": ["model.sap.stg_sap__vbuk_tmp"], "model.sap.stg_sap__ekbe": ["model.sap.stg_sap__ekbe_tmp"], "model.sap.stg_sap__vbap": ["model.sap.stg_sap__vbap_tmp"], "model.sap.stg_sap__t134_tmp": ["source.sap.sap.t134"], "model.sap.stg_sap__makt_tmp": ["source.sap.sap.makt"], "model.sap.stg_sap__t024_tmp": ["source.sap.sap.t024"], "model.sap.stg_sap__t024e_tmp": ["source.sap.sap.t024e"], "model.sap.stg_sap__t001_tmp": ["source.sap.sap.t001"], "model.sap.stg_sap__pa0007_tmp": ["source.sap.sap.pa0007"], "model.sap.stg_sap__dd07l_tmp": ["source.sap.sap.dd07l"], "model.sap.stg_sap__t161t_tmp": ["source.sap.sap.t161t"], "model.sap.stg_sap__bkpf_tmp": ["source.sap.sap.bkpf"], "model.sap.stg_sap__t161_tmp": ["source.sap.sap.t161"], "model.sap.stg_sap__kna1_tmp": ["source.sap.sap.kna1"], "model.sap.stg_sap__vbuk_tmp": ["source.sap.sap.vbuk"], "model.sap.stg_sap__t880_tmp": ["source.sap.sap.t880"], "model.sap.stg_sap__pa0000_tmp": ["source.sap.sap.pa0000"], "model.sap.stg_sap__vbap_tmp": ["source.sap.sap.vbap"], "model.sap.stg_sap__t134t_tmp": ["source.sap.sap.t134t"], "model.sap.stg_sap__mara_tmp": ["source.sap.sap.mara"], "model.sap.stg_sap__vbak_tmp": ["source.sap.sap.vbak"], "model.sap.stg_sap__tvagt_tmp": ["source.sap.sap.tvagt"], "model.sap.stg_sap__ekko_tmp": ["source.sap.sap.ekko"], "model.sap.stg_sap__faglflexa_tmp": ["source.sap.sap.faglflexa"], "model.sap.stg_sap__t001w_tmp": ["source.sap.sap.t001w"], "model.sap.stg_sap__ekbe_tmp": ["source.sap.sap.ekbe"], "model.sap.stg_sap__tvag_tmp": ["source.sap.sap.tvag"], "model.sap.stg_sap__t503_tmp": ["source.sap.sap.t503"], "model.sap.stg_sap__eket_tmp": ["source.sap.sap.eket"], "model.sap.stg_sap__dd07t_tmp": ["source.sap.sap.dd07t"], "model.sap.stg_sap__vbup_tmp": ["source.sap.sap.vbup"], "model.sap.stg_sap__bseg_tmp": ["source.sap.sap.bseg"], "model.sap.stg_sap__pa0001_tmp": ["source.sap.sap.pa0001"], "model.sap.stg_sap__ekpo_tmp": ["source.sap.sap.ekpo"], "model.sap.stg_sap__lfa1_tmp": ["source.sap.sap.lfa1"], "model.sap.stg_sap__pa0031_tmp": ["source.sap.sap.pa0031"], "model.sap.stg_sap__faglflext_tmp": ["source.sap.sap.faglflext"], "model.sap.stg_sap__pa0008_tmp": ["source.sap.sap.pa0008"], "model.sap.stg_sap__ska1_tmp": ["source.sap.sap.ska1"], "source.sap.sap.bkpf": [], "source.sap.sap.bseg": [], "source.sap.sap.dd07l": [], "source.sap.sap.dd07t": [], "source.sap.sap.ekbe": [], "source.sap.sap.eket": [], "source.sap.sap.ekko": [], "source.sap.sap.ekpo": [], "source.sap.sap.faglflexa": [], "source.sap.sap.faglflext": [], "source.sap.sap.kna1": [], "source.sap.sap.lfa1": [], "source.sap.sap.makt": [], "source.sap.sap.mara": [], "source.sap.sap.pa0000": [], "source.sap.sap.pa0001": [], "source.sap.sap.pa0007": [], "source.sap.sap.pa0008": [], "source.sap.sap.pa0031": [], "source.sap.sap.ska1": [], "source.sap.sap.t001": [], "source.sap.sap.t001w": [], "source.sap.sap.t024": [], "source.sap.sap.t024e": [], "source.sap.sap.t134": [], "source.sap.sap.t134t": [], "source.sap.sap.t161": [], "source.sap.sap.t161t": [], "source.sap.sap.t503": [], "source.sap.sap.t880": [], "source.sap.sap.tvag": [], "source.sap.sap.tvagt": [], "source.sap.sap.vbak": [], "source.sap.sap.vbap": [], "source.sap.sap.vbuk": [], "source.sap.sap.vbup": []}, "child_map": {"seed.sap_integration_tests.sap_t134_data": [], "seed.sap_integration_tests.sap_t134t_data": [], "seed.sap_integration_tests.sap_kna1_data": [], "seed.sap_integration_tests.sap_dd07l_data": [], "seed.sap_integration_tests.sap_faglflext_data": [], "seed.sap_integration_tests.sap_ekpo_data": [], "seed.sap_integration_tests.sap_t001_data": [], "seed.sap_integration_tests.sap_t001w_data": [], "seed.sap_integration_tests.sap_lfa1_data": [], "seed.sap_integration_tests.sap_bseg_data": [], "seed.sap_integration_tests.sap_pa0007_data": [], "seed.sap_integration_tests.sap_tvag_data": [], "seed.sap_integration_tests.sap_eket_data": [], "seed.sap_integration_tests.sap_pa0031_data": [], "seed.sap_integration_tests.sap_vbak_data": [], "seed.sap_integration_tests.sap_t161_data": [], "seed.sap_integration_tests.sap_pa0000_data": [], "seed.sap_integration_tests.sap_t024_data": [], "seed.sap_integration_tests.sap_faglflexa_data": [], "seed.sap_integration_tests.sap_t880_data": [], "seed.sap_integration_tests.sap_ekko_data": [], "seed.sap_integration_tests.sap_pa0008_data": [], "seed.sap_integration_tests.sap_ska1_data": [], "seed.sap_integration_tests.sap_vbap_data": [], "seed.sap_integration_tests.sap_t503_data": [], "seed.sap_integration_tests.sap_pa0001_data": [], "seed.sap_integration_tests.sap_vbup_data": [], "seed.sap_integration_tests.sap_mara_data": [], "seed.sap_integration_tests.sap_tvagt_data": [], "seed.sap_integration_tests.sap_bkpf_data": [], "seed.sap_integration_tests.sap_dd07t_data": [], "seed.sap_integration_tests.sap_vbuk_data": [], "seed.sap_integration_tests.sap_t024e_data": [], "seed.sap_integration_tests.sap_t161t_data": [], "seed.sap_integration_tests.sap_makt_data": [], "seed.sap_integration_tests.sap_ekbe_data": [], "model.sap.sap__0material_attr": [], "model.sap.sap__0customer_attr": [], "model.sap.sap__0gl_account_attr": [], "model.sap.sap__0vendor_text": [], "model.sap.sap__0employee_attr": [], "model.sap.sap__0vendor_attr": [], "model.sap.sap__0fi_gl_14": [], "model.sap.sap__0fi_gl_10": [], "model.sap.sap__0comp_code_attr": [], "model.sap.sap__0comp_code_text": [], "model.sap.sap__0company_text": [], "model.sap.int_sap__0fi_gl_10_sums": ["model.sap.int_sap__0fi_gl_10_unpivot"], "model.sap.int_sap__0employee_date_changes": ["model.sap.sap__0employee_attr"], "model.sap.int_sap__0fi_gl_10_unpivot": ["model.sap.sap__0fi_gl_10"], "model.sap.sap__fact_purchasing_order": [], "model.sap.sap__dim_material": [], "model.sap.sap__dim_vendor": [], "model.sap.sap__fact_sales_order": [], "model.sap.sap__dim_purchasing_order": [], "model.sap.sap__dim_customer": [], "model.sap.sap__dim_purchasing_organization": [], "model.sap.sap__dim_plant": [], "model.sap.sap__dim_rejection_reason": [], "model.sap.int_sap__purchasing_document_status": ["model.sap.sap__dim_purchasing_order"], "model.sap.int_sap__sales_document_item": ["model.sap.sap__fact_sales_order"], "model.sap.int_sap__purchasing_document_type": ["model.sap.sap__dim_purchasing_order"], "model.sap.int_sap__purchasing_document_header": ["model.sap.sap__dim_purchasing_order", "model.sap.sap__fact_purchasing_order"], "model.sap.int_sap__purchasing_document_schedule_total": ["model.sap.sap__fact_purchasing_order"], "model.sap.int_sap__purchasing_document_category": ["model.sap.sap__dim_purchasing_order"], "model.sap.int_sap__purchasing_organization": ["model.sap.sap__dim_purchasing_organization"], "model.sap.int_sap__company": ["model.sap.sap__fact_purchasing_order"], "model.sap.int_sap__vendor": ["model.sap.sap__dim_vendor"], "model.sap.int_sap__sales_document_item_status": ["model.sap.sap__fact_sales_order"], "model.sap.int_sap__purchasing_document_schedule_line": ["model.sap.int_sap__purchasing_document_schedule_total"], "model.sap.int_sap__purchasing_group": ["model.sap.sap__dim_purchasing_order"], "model.sap.int_sap__material": ["model.sap.sap__dim_material"], "model.sap.int_sap__sales_document_header": ["model.sap.sap__fact_sales_order"], "model.sap.int_sap__purchasing_document_item": ["model.sap.sap__fact_purchasing_order"], "model.sap.int_sap__purchasing_document_overview": ["model.sap.sap__fact_purchasing_order"], "model.sap.int_sap__material_type": ["model.sap.sap__dim_material"], "model.sap.int_sap__purchasing_document_history": ["model.sap.int_sap__purchasing_document_overview"], "model.sap.int_sap__sales_document_header_status": ["model.sap.sap__fact_sales_order"], "model.sap.int_sap__customer": ["model.sap.sap__dim_customer"], "model.sap.int_sap__plant": ["model.sap.sap__dim_plant"], "model.sap.int_sap__sales_document_rejection_reason": ["model.sap.sap__dim_rejection_reason"], "model.sap.stg_sap__pa0000": ["model.sap.int_sap__0employee_date_changes", "model.sap.sap__0employee_attr"], "model.sap.stg_sap__tvagt": ["model.sap.int_sap__sales_document_rejection_reason"], "model.sap.stg_sap__mara": ["model.sap.int_sap__material", "model.sap.sap__0material_attr"], "model.sap.stg_sap__t024e": ["model.sap.int_sap__purchasing_organization"], "model.sap.stg_sap__t001w": ["model.sap.int_sap__plant"], "model.sap.stg_sap__ekko": ["model.sap.int_sap__purchasing_document_header"], "model.sap.stg_sap__t503": ["model.sap.sap__0employee_attr"], "model.sap.stg_sap__t161t": ["model.sap.int_sap__purchasing_document_type"], "model.sap.stg_sap__faglflext": ["model.sap.int_sap__0fi_gl_10_sums"], "model.sap.stg_sap__ska1": ["model.sap.sap__0gl_account_attr"], "model.sap.stg_sap__bseg": ["model.sap.sap__0fi_gl_14"], "model.sap.stg_sap__t134t": ["model.sap.int_sap__material_type"], "model.sap.stg_sap__kna1": ["model.sap.int_sap__customer", "model.sap.sap__0customer_attr"], "model.sap.stg_sap__tvag": ["model.sap.int_sap__sales_document_rejection_reason"], "model.sap.stg_sap__vbak": ["model.sap.int_sap__sales_document_header"], "model.sap.stg_sap__bkpf": ["model.sap.sap__0fi_gl_14"], "model.sap.stg_sap__dd07l": ["model.sap.int_sap__purchasing_document_category", "model.sap.int_sap__purchasing_document_status"], "model.sap.stg_sap__makt": ["model.sap.int_sap__material"], "model.sap.stg_sap__pa0001": ["model.sap.int_sap__0employee_date_changes", "model.sap.sap__0employee_attr"], "model.sap.stg_sap__t161": ["model.sap.int_sap__purchasing_document_type"], "model.sap.stg_sap__t024": ["model.sap.int_sap__purchasing_group"], "model.sap.stg_sap__t134": ["model.sap.int_sap__material_type"], "model.sap.stg_sap__dd07t": ["model.sap.int_sap__purchasing_document_category", "model.sap.int_sap__purchasing_document_status"], "model.sap.stg_sap__eket": ["model.sap.int_sap__purchasing_document_schedule_line"], "model.sap.stg_sap__faglflexa": ["model.sap.sap__0fi_gl_14"], "model.sap.stg_sap__pa0008": ["model.sap.int_sap__0employee_date_changes", "model.sap.sap__0employee_attr"], "model.sap.stg_sap__ekpo": ["model.sap.int_sap__purchasing_document_item"], "model.sap.stg_sap__pa0031": ["model.sap.int_sap__0employee_date_changes", "model.sap.sap__0employee_attr"], "model.sap.stg_sap__t880": ["model.sap.sap__0company_text"], "model.sap.stg_sap__t001": ["model.sap.int_sap__0fi_gl_10_sums", "model.sap.int_sap__company", "model.sap.sap__0comp_code_attr", "model.sap.sap__0comp_code_text"], "model.sap.stg_sap__pa0007": ["model.sap.int_sap__0employee_date_changes", "model.sap.sap__0employee_attr"], "model.sap.stg_sap__lfa1": ["model.sap.int_sap__vendor", "model.sap.sap__0vendor_attr", "model.sap.sap__0vendor_text"], "model.sap.stg_sap__vbup": ["model.sap.int_sap__sales_document_item_status"], "model.sap.stg_sap__vbuk": ["model.sap.int_sap__sales_document_header_status"], "model.sap.stg_sap__ekbe": ["model.sap.int_sap__purchasing_document_history"], "model.sap.stg_sap__vbap": ["model.sap.int_sap__sales_document_item"], "model.sap.stg_sap__t134_tmp": ["model.sap.stg_sap__t134"], "model.sap.stg_sap__makt_tmp": ["model.sap.stg_sap__makt"], "model.sap.stg_sap__t024_tmp": ["model.sap.stg_sap__t024"], "model.sap.stg_sap__t024e_tmp": ["model.sap.stg_sap__t024e"], "model.sap.stg_sap__t001_tmp": ["model.sap.stg_sap__t001"], "model.sap.stg_sap__pa0007_tmp": ["model.sap.stg_sap__pa0007"], "model.sap.stg_sap__dd07l_tmp": ["model.sap.stg_sap__dd07l"], "model.sap.stg_sap__t161t_tmp": ["model.sap.stg_sap__t161t"], "model.sap.stg_sap__bkpf_tmp": ["model.sap.stg_sap__bkpf"], "model.sap.stg_sap__t161_tmp": ["model.sap.stg_sap__t161"], "model.sap.stg_sap__kna1_tmp": ["model.sap.stg_sap__kna1"], "model.sap.stg_sap__vbuk_tmp": ["model.sap.stg_sap__vbuk"], "model.sap.stg_sap__t880_tmp": ["model.sap.stg_sap__t880"], "model.sap.stg_sap__pa0000_tmp": ["model.sap.stg_sap__pa0000"], "model.sap.stg_sap__vbap_tmp": ["model.sap.stg_sap__vbap"], "model.sap.stg_sap__t134t_tmp": ["model.sap.stg_sap__t134t"], "model.sap.stg_sap__mara_tmp": ["model.sap.stg_sap__mara"], "model.sap.stg_sap__vbak_tmp": ["model.sap.stg_sap__vbak"], "model.sap.stg_sap__tvagt_tmp": ["model.sap.stg_sap__tvagt"], "model.sap.stg_sap__ekko_tmp": ["model.sap.stg_sap__ekko"], "model.sap.stg_sap__faglflexa_tmp": ["model.sap.stg_sap__faglflexa"], "model.sap.stg_sap__t001w_tmp": ["model.sap.stg_sap__t001w"], "model.sap.stg_sap__ekbe_tmp": ["model.sap.stg_sap__ekbe"], "model.sap.stg_sap__tvag_tmp": ["model.sap.stg_sap__tvag"], "model.sap.stg_sap__t503_tmp": ["model.sap.stg_sap__t503"], "model.sap.stg_sap__eket_tmp": ["model.sap.stg_sap__eket"], "model.sap.stg_sap__dd07t_tmp": ["model.sap.stg_sap__dd07t"], "model.sap.stg_sap__vbup_tmp": ["model.sap.stg_sap__vbup"], "model.sap.stg_sap__bseg_tmp": ["model.sap.stg_sap__bseg"], "model.sap.stg_sap__pa0001_tmp": ["model.sap.stg_sap__pa0001"], "model.sap.stg_sap__ekpo_tmp": ["model.sap.stg_sap__ekpo"], "model.sap.stg_sap__lfa1_tmp": ["model.sap.stg_sap__lfa1"], "model.sap.stg_sap__pa0031_tmp": ["model.sap.stg_sap__pa0031"], "model.sap.stg_sap__faglflext_tmp": ["model.sap.stg_sap__faglflext"], "model.sap.stg_sap__pa0008_tmp": ["model.sap.stg_sap__pa0008"], "model.sap.stg_sap__ska1_tmp": ["model.sap.stg_sap__ska1"], "source.sap.sap.bkpf": ["model.sap.stg_sap__bkpf_tmp"], "source.sap.sap.bseg": ["model.sap.stg_sap__bseg_tmp"], "source.sap.sap.dd07l": ["model.sap.stg_sap__dd07l_tmp"], "source.sap.sap.dd07t": ["model.sap.stg_sap__dd07t_tmp"], "source.sap.sap.ekbe": ["model.sap.stg_sap__ekbe_tmp"], "source.sap.sap.eket": ["model.sap.stg_sap__eket_tmp"], "source.sap.sap.ekko": ["model.sap.stg_sap__ekko_tmp"], "source.sap.sap.ekpo": ["model.sap.stg_sap__ekpo_tmp"], "source.sap.sap.faglflexa": ["model.sap.stg_sap__faglflexa_tmp"], "source.sap.sap.faglflext": ["model.sap.stg_sap__faglflext_tmp"], "source.sap.sap.kna1": ["model.sap.stg_sap__kna1_tmp"], "source.sap.sap.lfa1": ["model.sap.stg_sap__lfa1_tmp"], "source.sap.sap.makt": ["model.sap.stg_sap__makt_tmp"], "source.sap.sap.mara": ["model.sap.stg_sap__mara_tmp"], "source.sap.sap.pa0000": ["model.sap.stg_sap__pa0000_tmp"], "source.sap.sap.pa0001": ["model.sap.stg_sap__pa0001_tmp"], "source.sap.sap.pa0007": ["model.sap.stg_sap__pa0007_tmp"], "source.sap.sap.pa0008": ["model.sap.stg_sap__pa0008_tmp"], "source.sap.sap.pa0031": ["model.sap.stg_sap__pa0031_tmp"], "source.sap.sap.ska1": ["model.sap.stg_sap__ska1_tmp"], "source.sap.sap.t001": ["model.sap.stg_sap__t001_tmp"], "source.sap.sap.t001w": ["model.sap.stg_sap__t001w_tmp"], "source.sap.sap.t024": ["model.sap.stg_sap__t024_tmp"], "source.sap.sap.t024e": ["model.sap.stg_sap__t024e_tmp"], "source.sap.sap.t134": ["model.sap.stg_sap__t134_tmp"], "source.sap.sap.t134t": ["model.sap.stg_sap__t134t_tmp"], "source.sap.sap.t161": ["model.sap.stg_sap__t161_tmp"], "source.sap.sap.t161t": ["model.sap.stg_sap__t161t_tmp"], "source.sap.sap.t503": ["model.sap.stg_sap__t503_tmp"], "source.sap.sap.t880": ["model.sap.stg_sap__t880_tmp"], "source.sap.sap.tvag": ["model.sap.stg_sap__tvag_tmp"], "source.sap.sap.tvagt": ["model.sap.stg_sap__tvagt_tmp"], "source.sap.sap.vbak": ["model.sap.stg_sap__vbak_tmp"], "source.sap.sap.vbap": ["model.sap.stg_sap__vbap_tmp"], "source.sap.sap.vbuk": ["model.sap.stg_sap__vbuk_tmp"], "source.sap.sap.vbup": ["model.sap.stg_sap__vbup_tmp"]}, "group_map": {}, "saved_queries": {}, "semantic_models": {}, "unit_tests": {}}